digraph  {
m1_7 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="ExtensionDataTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="867-867"];
m1_33 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.ByteArrayClass.ByteArrayClass()", file="ExtensionDataTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.ByteArrayClass.ByteArrayClass()", span="27-27"];
m1_10 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClassFromJsonArray()", file="ExtensionDataTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClassFromJsonArray()", span="49-49"];
m1_11 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClassFromJsonArray()", file="ExtensionDataTests.cs", label="string json = @''{\r\n  ''''Binary'''': [0, 1, 2, 3],\r\n  ''''NullBinary'''': null\r\n}''", span="51-54"];
m1_12 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClassFromJsonArray()", file="ExtensionDataTests.cs", label="BinaryClass binaryClass = JsonConvert.DeserializeObject<BinaryClass>(json, new BinaryConverter())", span="56-56"];
m1_13 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClassFromJsonArray()", file="ExtensionDataTests.cs", label="Assert.AreEqual(new byte[] { 0, 1, 2, 3 }, binaryClass.Binary.ToArray())", span="58-58"];
m1_14 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClassFromJsonArray()", file="ExtensionDataTests.cs", label="Assert.AreEqual(null, binaryClass.NullBinary)", span="59-59"];
m1_15 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClassFromJsonArray()", file="ExtensionDataTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClassFromJsonArray()", span="49-49"];
m1_51 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", file="ExtensionDataTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", span="142-142"];
m1_52 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", file="ExtensionDataTests.cs", label="string json = @''{\r\n  ''''ByteArray'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullByteArray'''': null\r\n}''", span="144-147"];
m1_53 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", file="ExtensionDataTests.cs", label="ByteArrayClass byteArrayClass = JsonConvert.DeserializeObject<ByteArrayClass>(json, new BinaryConverter())", span="149-149"];
m1_54 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", file="ExtensionDataTests.cs", label="CollectionAssert.AreEquivalent(TestData, byteArrayClass.ByteArray)", span="151-151"];
m1_55 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", file="ExtensionDataTests.cs", label="Assert.AreEqual(null, byteArrayClass.NullByteArray)", span="152-152"];
m1_56 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", file="ExtensionDataTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", span="142-142"];
m1_0 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", file="ExtensionDataTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", span="35-35"];
m1_1 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", file="ExtensionDataTests.cs", label="string json = @''{\r\n  ''''Binary'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullBinary'''': null\r\n}''", span="37-40"];
m1_2 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", file="ExtensionDataTests.cs", label="BinaryClass binaryClass = JsonConvert.DeserializeObject<BinaryClass>(json, new BinaryConverter())", span="42-42"];
m1_3 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", file="ExtensionDataTests.cs", label="Assert.AreEqual(new Binary(TestData), binaryClass.Binary)", span="44-44"];
m1_4 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", file="ExtensionDataTests.cs", label="Assert.AreEqual(null, binaryClass.NullBinary)", span="45-45"];
m1_5 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", file="ExtensionDataTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", span="35-35"];
m1_44 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", file="ExtensionDataTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", span="125-125"];
m1_45 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", file="ExtensionDataTests.cs", label="string json = @''{\r\n  ''''SqlBinary'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullableSqlBinary1'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullableSqlBinary2'''': null\r\n}''", span="127-131"];
m1_46 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", file="ExtensionDataTests.cs", label="SqlBinaryClass sqlBinaryClass = JsonConvert.DeserializeObject<SqlBinaryClass>(json, new BinaryConverter())", span="133-133"];
m1_47 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", file="ExtensionDataTests.cs", label="Assert.AreEqual(new SqlBinary(TestData), sqlBinaryClass.SqlBinary)", span="135-135"];
m1_48 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", file="ExtensionDataTests.cs", label="Assert.AreEqual(new SqlBinary(TestData), sqlBinaryClass.NullableSqlBinary1)", span="136-136"];
m1_49 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", file="ExtensionDataTests.cs", label="Assert.AreEqual(null, sqlBinaryClass.NullableSqlBinary2)", span="137-137"];
m1_50 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", file="ExtensionDataTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", span="125-125"];
m1_24 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.BinaryClass.BinaryClass()", file="ExtensionDataTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.BinaryClass.BinaryClass()", span="62-62"];
m1_34 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="ExtensionDataTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", span="108-108"];
m1_35 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="ExtensionDataTests.cs", label="SqlBinaryClass sqlBinaryClass = new SqlBinaryClass()", span="110-110"];
m1_36 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="ExtensionDataTests.cs", label="sqlBinaryClass.SqlBinary = new SqlBinary(TestData)", span="111-111"];
m1_37 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="ExtensionDataTests.cs", label="sqlBinaryClass.NullableSqlBinary1 = new SqlBinary(TestData)", span="112-112"];
m1_38 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="ExtensionDataTests.cs", label="sqlBinaryClass.NullableSqlBinary2 = null", span="113-113"];
m1_39 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="ExtensionDataTests.cs", label="string json = JsonConvert.SerializeObject(sqlBinaryClass, Formatting.Indented, new BinaryConverter())", span="115-115"];
m1_40 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="ExtensionDataTests.cs", label="Assert.AreEqual(@''{\r\n  ''''SqlBinary'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullableSqlBinary1'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullableSqlBinary2'''': null\r\n}'', json)", span="117-121"];
m1_41 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="ExtensionDataTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", span="108-108"];
m1_16 [cluster="Unk.ToArray", file="ExtensionDataTests.cs", label="Entry Unk.ToArray", span=""];
m1_25 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="ExtensionDataTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="705-705"];
m1_26 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", file="ExtensionDataTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", span="85-85"];
m1_27 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", file="ExtensionDataTests.cs", label="ByteArrayClass byteArrayClass = new ByteArrayClass()", span="87-87"];
m1_28 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", file="ExtensionDataTests.cs", label="byteArrayClass.ByteArray = TestData", span="88-88"];
m1_29 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", file="ExtensionDataTests.cs", label="byteArrayClass.NullByteArray = null", span="89-89"];
m1_30 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", file="ExtensionDataTests.cs", label="string json = JsonConvert.SerializeObject(byteArrayClass, Formatting.Indented, new BinaryConverter())", span="91-91"];
m1_31 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", file="ExtensionDataTests.cs", label="Assert.AreEqual(@''{\r\n  ''''ByteArray'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullByteArray'''': null\r\n}'', json)", span="93-96"];
m1_32 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", file="ExtensionDataTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", span="85-85"];
m1_8 [cluster="Binary.cstr", file="ExtensionDataTests.cs", label="Entry Binary.cstr", span=""];
m1_17 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", file="ExtensionDataTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", span="69-69"];
m1_18 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", file="ExtensionDataTests.cs", label="BinaryClass binaryClass = new BinaryClass()", span="71-71"];
m1_19 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", file="ExtensionDataTests.cs", label="binaryClass.Binary = new Binary(TestData)", span="72-72"];
m1_20 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", file="ExtensionDataTests.cs", label="binaryClass.NullBinary = null", span="73-73"];
m1_21 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", file="ExtensionDataTests.cs", label="string json = JsonConvert.SerializeObject(binaryClass, Formatting.Indented, new BinaryConverter())", span="75-75"];
m1_22 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", file="ExtensionDataTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Binary'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullBinary'''': null\r\n}'', json)", span="77-80"];
m1_23 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", file="ExtensionDataTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", span="69-69"];
m1_9 [cluster="Unk.AreEqual", file="ExtensionDataTests.cs", label="Entry Unk.AreEqual", span=""];
m1_58 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayFromJsonArray()", file="ExtensionDataTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayFromJsonArray()", span="156-156"];
m1_59 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayFromJsonArray()", file="ExtensionDataTests.cs", label="string json = @''{\r\n  ''''ByteArray'''': [0, 1, 2, 3],\r\n  ''''NullByteArray'''': null\r\n}''", span="158-161"];
m1_60 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayFromJsonArray()", file="ExtensionDataTests.cs", label="ByteArrayClass c = JsonConvert.DeserializeObject<ByteArrayClass>(json)", span="163-163"];
m1_61 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayFromJsonArray()", file="ExtensionDataTests.cs", label="Assert.IsNotNull(c.ByteArray)", span="164-164"];
m1_62 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayFromJsonArray()", file="ExtensionDataTests.cs", label="Assert.AreEqual(4, c.ByteArray.Length)", span="165-165"];
m1_63 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayFromJsonArray()", file="ExtensionDataTests.cs", label="CollectionAssert.AreEquivalent(new byte[] { 0, 1, 2, 3 }, c.ByteArray)", span="166-166"];
m1_64 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayFromJsonArray()", file="ExtensionDataTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayFromJsonArray()", span="156-156"];
m1_57 [cluster="Unk.AreEquivalent", file="ExtensionDataTests.cs", label="Entry Unk.AreEquivalent", span=""];
m1_65 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="ExtensionDataTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="839-839"];
m1_66 [cluster="Unk.IsNotNull", file="ExtensionDataTests.cs", label="Entry Unk.IsNotNull", span=""];
m1_43 [cluster="SqlBinary.cstr", file="ExtensionDataTests.cs", label="Entry SqlBinary.cstr", span=""];
m1_42 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SqlBinaryClass.SqlBinaryClass()", file="ExtensionDataTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SqlBinaryClass.SqlBinaryClass()", span="100-100"];
m1_6 [cluster="Newtonsoft.Json.Converters.BinaryConverter.BinaryConverter()", file="ExtensionDataTests.cs", label="Entry Newtonsoft.Json.Converters.BinaryConverter.BinaryConverter()", span="45-45"];
m2_130 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxerWithError()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxerWithError()", span="257-257"];
m2_131 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxerWithError()", file="JPathExecuteTests.cs", label="JConstructor c = new JConstructor(''Blah'')", span="259-259"];
m2_132 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxerWithError()", file="JPathExecuteTests.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                @''Index 1 outside the bounds of JConstructor.'',\r\n                () => { c.SelectToken(''[1]'', true); })", span="261-263"];
m2_133 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxerWithError()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxerWithError()", span="257-257"];
m2_325 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", span="517-517"];
m2_326 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="JPathExecuteTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', new[] { 1, 2, 3 }))", span="519-520"];
m2_327 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="JPathExecuteTests.cs", label="JToken t = o.SelectToken(''Blah'')", span="522-522"];
m2_330 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="JPathExecuteTests.cs", label="t = o.SelectToken(''Blah[2]'')", span="526-526"];
m2_328 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="JPathExecuteTests.cs", label="Assert.IsNotNull(t)", span="523-523"];
m2_329 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="JPathExecuteTests.cs", label="Assert.AreEqual(JTokenType.Array, t.Type)", span="524-524"];
m2_331 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="JPathExecuteTests.cs", label="Assert.AreEqual(JTokenType.Integer, t.Type)", span="527-527"];
m2_332 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="JPathExecuteTests.cs", label="Assert.AreEqual(3, (int)t)", span="528-528"];
m2_333 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", span="517-517"];
m2_374 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", span="603-603"];
m2_375 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", file="JPathExecuteTests.cs", label="JArray a = new JArray(\r\n                new JObject(new JProperty(''hi'', 1)),\r\n                new JObject(new JProperty(''hi'', 2)),\r\n                new JObject(new JProperty(''hi'', 3)))", span="605-608"];
m2_376 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", file="JPathExecuteTests.cs", label="IList<JToken> t = a.SelectTokens(''[ ?( @.hi > 1 ) ]'').ToList()", span="610-610"];
m2_377 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", file="JPathExecuteTests.cs", label="Assert.IsNotNull(t)", span="611-611"];
m2_378 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", file="JPathExecuteTests.cs", label="Assert.AreEqual(2, t.Count)", span="612-612"];
m2_379 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 2)), t[0]))", span="613-613"];
m2_380 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 3)), t[1]))", span="614-614"];
m2_381 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", span="603-603"];
m2_277 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87"];
m2_134 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", span="110-110"];
m2_142 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyWithError()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyWithError()", span="275-275"];
m2_143 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyWithError()", file="JPathExecuteTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="277-278"];
m2_144 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyWithError()", file="JPathExecuteTests.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                ''Property 'Missing' does not exist on JObject.'',\r\n                () => { o.SelectToken(''Missing'', true); })", span="280-282"];
m2_145 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyWithError()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyWithError()", span="275-275"];
m2_265 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JPathExecuteTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m2_390 [cluster="JProperty.cstr", file="JPathExecuteTests.cs", label="Entry JProperty.cstr", span=""];
m2_201 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", span="360-360"];
m2_202 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", file="JPathExecuteTests.cs", label="JArray a = new JArray(1, 2, 3, 4)", span="362-362"];
m2_203 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", file="JPathExecuteTests.cs", label="JToken t = a.SelectToken(''[1]'')", span="364-364"];
m2_204 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", file="JPathExecuteTests.cs", label="Assert.IsNotNull(t)", span="365-365"];
m2_205 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", file="JPathExecuteTests.cs", label="Assert.AreEqual(JTokenType.Integer, t.Type)", span="366-366"];
m2_206 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", file="JPathExecuteTests.cs", label="Assert.AreEqual(2, (int)t)", span="367-367"];
m2_207 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArray()", span="360-360"];
m2_402 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", span="653-653"];
m2_403 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="JPathExecuteTests.cs", label="JArray a = new JArray(\r\n                new JObject(\r\n                    new JProperty(''name'', ''Bad Boys''),\r\n                    new JProperty(''cast'', new JArray(\r\n                        new JObject(new JProperty(''name'', ''Will Smith''))))),\r\n                new JObject(\r\n                    new JProperty(''name'', ''Independence Day''),\r\n                    new JProperty(''cast'', new JArray(\r\n                        new JObject(new JProperty(''name'', ''Will Smith''))))),\r\n                new JObject(\r\n                    new JProperty(''name'', ''The Rock''),\r\n                    new JProperty(''cast'', new JArray(\r\n                        new JObject(new JProperty(''name'', ''Nick Cage'')))))\r\n                )", span="655-668"];
m2_404 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="JPathExecuteTests.cs", label="IList<JToken> t = a.SelectTokens(''[?(@.cast[?(@.name=='Will Smith')])].name'').ToList()", span="670-670"];
m2_405 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="JPathExecuteTests.cs", label="Assert.IsNotNull(t)", span="671-671"];
m2_406 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="JPathExecuteTests.cs", label="Assert.AreEqual(2, t.Count)", span="672-672"];
m2_407 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="JPathExecuteTests.cs", label="Assert.AreEqual(''Bad Boys'', (string)t[0])", span="673-673"];
m2_408 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="JPathExecuteTests.cs", label="Assert.AreEqual(''Independence Day'', (string)t[1])", span="674-674"];
m2_409 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", span="653-653"];
m2_44 [cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="81-81"];
m2_149 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithoutError()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithoutError()", span="286-286"];
m2_150 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithoutError()", file="JPathExecuteTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="288-289"];
m2_151 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithoutError()", file="JPathExecuteTests.cs", label="JValue v = (JValue)o.SelectToken(''Blah'', true)", span="291-291"];
m2_152 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithoutError()", color=red, community=0, file="JPathExecuteTests.cs", label="3: Assert.AreEqual(1L, v.Value)", span="292-292"];
m2_153 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithoutError()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithoutError()", span="286-286"];
m2_435 [cluster="Unk.Select", file="JPathExecuteTests.cs", label="Entry Unk.Select", span=""];
m2_86 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="175-175"];
m2_138 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxer()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxer()", span="267-267"];
m2_139 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxer()", file="JPathExecuteTests.cs", label="JConstructor c = new JConstructor(''Blah'')", span="269-269"];
m2_140 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxer()", file="JPathExecuteTests.cs", label="Assert.IsNull(c.SelectToken(''[1]''))", span="271-271"];
m2_141 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxer()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateConstructorOutOfBoundsIndxer()", span="267-267"];
m2_0 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", span="53-53"];
m2_1 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", file="JPathExecuteTests.cs", label="string json = ''{\''bookId\'':\''1000\''}''", span="55-55"];
m2_2 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", file="JPathExecuteTests.cs", label="JObject o = JObject.Parse(json)", span="56-56"];
m2_3 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", file="JPathExecuteTests.cs", label="string bookId = (string)o.SelectToken(''bookId'', true)", span="58-58"];
m2_4 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", file="JPathExecuteTests.cs", label="Assert.AreEqual(''1000'', bookId)", span="60-60"];
m2_5 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", span="53-53"];
m2_194 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayOutOfBoundsIndxerWithError()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayOutOfBoundsIndxerWithError()", span="350-350"];
m2_195 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayOutOfBoundsIndxerWithError()", file="JPathExecuteTests.cs", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="352-352"];
m2_196 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayOutOfBoundsIndxerWithError()", file="JPathExecuteTests.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                ''Index 1000 outside the bounds of JArray.'',\r\n                () => { a.SelectToken(''[1000].Ha'', true); })", span="354-356"];
m2_197 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayOutOfBoundsIndxerWithError()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayOutOfBoundsIndxerWithError()", span="350-350"];
m2_76 [cluster="Unk.IsNull", file="JPathExecuteTests.cs", label="Entry Unk.IsNull", span=""];
m2_116 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", span="237-237"];
m2_117 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", file="JPathExecuteTests.cs", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="239-239"];
m2_118 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", file="JPathExecuteTests.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                @''Property 'BlahBlah' not valid on JArray.'',\r\n                () => { a.SelectToken(''BlahBlah'', true); })", span="241-243"];
m2_119 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", span="237-237"];
m2_189 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateOutOfBoundsIndxer()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateOutOfBoundsIndxer()", span="341-341"];
m2_190 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateOutOfBoundsIndxer()", file="JPathExecuteTests.cs", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="343-343"];
m2_191 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateOutOfBoundsIndxer()", file="JPathExecuteTests.cs", label="JToken t = a.SelectToken(''[1000].Ha'')", span="345-345"];
m2_192 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateOutOfBoundsIndxer()", file="JPathExecuteTests.cs", label="Assert.IsNull(t)", span="346-346"];
m2_193 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateOutOfBoundsIndxer()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateOutOfBoundsIndxer()", span="341-341"];
m2_368 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", span="590-590"];
m2_369 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", file="JPathExecuteTests.cs", label="JArray a = new JArray(1, 2, 3, 4, 5, 6, 7, 8, 9)", span="592-592"];
m2_370 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", file="JPathExecuteTests.cs", label="IList<JToken> t = a.SelectTokens(''[?(@ <> 1)][?(@ <> 4)][?(@ < 7)]'').ToList()", span="597-597"];
m2_371 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", file="JPathExecuteTests.cs", label="Assert.IsNotNull(t)", span="598-598"];
m2_372 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", file="JPathExecuteTests.cs", label="Assert.AreEqual(0, t.Count)", span="599-599"];
m2_373 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", span="590-590"];
m2_34 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarString()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarString()", span="107-107"];
m2_35 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarString()", file="JPathExecuteTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="109-110"];
m2_36 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarString()", file="JPathExecuteTests.cs", label="JToken t = o.SelectToken(''$'')", span="112-112"];
m2_37 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarString()", file="JPathExecuteTests.cs", label="Assert.AreEqual(o, t)", span="113-113"];
m2_38 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarString()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarString()", span="107-107"];
m2_71 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingProperty()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingProperty()", span="165-165"];
m2_72 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingProperty()", file="JPathExecuteTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="167-168"];
m2_73 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingProperty()", file="JPathExecuteTests.cs", label="JToken t = o.SelectToken(''Missing[1]'')", span="170-170"];
m2_74 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingProperty()", file="JPathExecuteTests.cs", label="Assert.IsNull(t)", span="171-171"];
m2_75 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingProperty()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingProperty()", span="165-165"];
m2_16 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="1923-1923"];
m2_64 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", span="153-153"];
m2_65 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", file="JPathExecuteTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="155-156"];
m2_66 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", file="JPathExecuteTests.cs", label="JToken t = o.SelectToken(''['Blah']'')", span="158-158"];
m2_67 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", file="JPathExecuteTests.cs", label="Assert.IsNotNull(t)", span="159-159"];
m2_68 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", file="JPathExecuteTests.cs", label="Assert.AreEqual(JTokenType.Integer, t.Type)", span="160-160"];
m2_69 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", file="JPathExecuteTests.cs", label="Assert.AreEqual(1, (int)t)", span="161-161"];
m2_70 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QuoteName()", span="153-153"];
m2_123 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateNoResultsWithMultipleArrayIndexes()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateNoResultsWithMultipleArrayIndexes()", span="247-247"];
m2_124 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateNoResultsWithMultipleArrayIndexes()", file="JPathExecuteTests.cs", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="249-249"];
m2_125 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateNoResultsWithMultipleArrayIndexes()", file="JPathExecuteTests.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                @''Index 9 outside the bounds of JArray.'',\r\n                () => { a.SelectToken(''[9,10]'', true); })", span="251-253"];
m2_126 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateNoResultsWithMultipleArrayIndexes()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateNoResultsWithMultipleArrayIndexes()", span="247-247"];
m2_436 [cluster="Unk.ToList", file="JPathExecuteTests.cs", label="Entry Unk.ToList", span=""];
m2_292 [cluster="Unk.IsTrue", file="JPathExecuteTests.cs", label="Entry Unk.IsTrue", span=""];
m2_62 [cluster="Newtonsoft.Json.Linq.JToken.SelectTokens(string)", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.SelectTokens(string)", span="1959-1959"];
m2_6 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="325-325"];
m2_82 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObjectWithError()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObjectWithError()", span="185-185"];
m2_83 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObjectWithError()", file="JPathExecuteTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="187-188"];
m2_84 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObjectWithError()", file="JPathExecuteTests.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                @''Index 1 not valid on JObject.'',\r\n                () => { o.SelectToken(''[1]'', true); })", span="190-192"];
m2_85 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObjectWithError()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObjectWithError()", span="185-185"];
m2_410 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", span="678-678"];
m2_411 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", file="JPathExecuteTests.cs", label="JArray a = JArray.Parse(@''[\r\n  {\r\n    ''''Property1'''': [\r\n      1,\r\n      [\r\n        [\r\n          []\r\n        ]\r\n      ]\r\n    ]\r\n  },\r\n  {\r\n    ''''Property2'''': new Constructor1(\r\n      null,\r\n      [\r\n        1\r\n      ]\r\n    )\r\n  }\r\n]'')", span="680-699"];
m2_412 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", file="JPathExecuteTests.cs", label="JValue v = (JValue)a.SelectToken(''[1].Property2[1][0]'')", span="701-701"];
m2_413 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", file="JPathExecuteTests.cs", label="Assert.AreEqual(1L, v.Value)", span="702-702"];
m2_414 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", span="678-678"];
m2_391 [cluster="BigInteger.cstr", file="JPathExecuteTests.cs", label="Entry BigInteger.cstr", span=""];
m2_97 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", span="207-207"];
m2_98 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", file="JPathExecuteTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="209-210"];
m2_99 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", file="JPathExecuteTests.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                @''Array slice is not valid on JObject.'',\r\n                () => { o.SelectToken(''[:]'', true); })", span="212-214"];
m2_100 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", span="207-207"];
m2_307 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", span="494-494"];
m2_308 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="JPathExecuteTests.cs", label="JObject o1 = new JObject { { ''Name'', 1 } }", span="496-496"];
m2_309 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="JPathExecuteTests.cs", label="JObject o2 = new JObject { { ''Name'', 2 } }", span="497-497"];
m2_311 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="JPathExecuteTests.cs", label="JArray a = new JArray(o1, o2, o3)", span="499-499"];
m2_316 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(o1, t[1]))", span="506-506"];
m2_310 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="JPathExecuteTests.cs", label="JObject o3 = new JObject { { ''Name'', new JObject { { ''Name'', new JArray(3) } } } }", span="498-498"];
m2_318 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(o2, t[3]))", span="508-508"];
m2_320 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(o3, t[5]))", span="510-510"];
m2_312 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="JPathExecuteTests.cs", label="IList<JToken> t = a.SelectTokens(''$..*'').ToList()", span="501-501"];
m2_315 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(a, t[0]))", span="505-505"];
m2_313 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="JPathExecuteTests.cs", label="Assert.IsNotNull(t)", span="502-502"];
m2_314 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="JPathExecuteTests.cs", label="Assert.AreEqual(9, t.Count)", span="503-503"];
m2_317 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="JPathExecuteTests.cs", label="Assert.AreEqual(1, (int)t[2])", span="507-507"];
m2_319 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="JPathExecuteTests.cs", label="Assert.AreEqual(2, (int)t[4])", span="509-509"];
m2_321 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject { { ''Name'', new JArray(3) } }, t[6]))", span="511-511"];
m2_322 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(3), t[7]))", span="512-512"];
m2_323 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="JPathExecuteTests.cs", label="Assert.AreEqual(3, (int)t[8])", span="513-513"];
m2_324 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScanNestResults()", span="494-494"];
m2_15 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="196-196"];
m2_353 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", span="565-565"];
m2_354 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", file="JPathExecuteTests.cs", label="JArray a = new JArray(\r\n                new JArray(new JObject(new JProperty(''hi'', ''ho''))),\r\n                new JArray(new JObject(new JProperty(''hi'', ''ha''))))", span="567-569"];
m2_355 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", file="JPathExecuteTests.cs", label="IList<JToken> t = a.SelectTokens(''[ ?( @..hi <> 'ha' ) ]'').ToList()", span="571-571"];
m2_356 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", file="JPathExecuteTests.cs", label="Assert.IsNotNull(t)", span="572-572"];
m2_357 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", file="JPathExecuteTests.cs", label="Assert.AreEqual(1, t.Count)", span="573-573"];
m2_358 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(new JObject(new JProperty(''hi'', ''ho''))), t[0]))", span="574-574"];
m2_359 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsQuery()", span="565-565"];
m2_154 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyIndexWithError()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyIndexWithError()", span="296-296"];
m2_155 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyIndexWithError()", file="JPathExecuteTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="298-299"];
m2_156 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyIndexWithError()", file="JPathExecuteTests.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                ''Property 'Missing' does not exist on JObject.'',\r\n                () => { o.SelectToken(''['Missing','Missing2']'', true); })", span="301-303"];
m2_157 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyIndexWithError()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMissingPropertyIndexWithError()", span="296-296"];
m2_392 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", span="635-635"];
m2_393 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="JPathExecuteTests.cs", label="JArray a = new JArray(\r\n                new JObject(new JProperty(''hi'', 1)),\r\n                new JObject(new JProperty(''hi'', 2)),\r\n                new JObject(new JProperty(''hi'', 2.0)),\r\n                new JObject(new JProperty(''hi'', 3)))", span="637-641"];
m2_394 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="JPathExecuteTests.cs", label="IList<JToken> t = a.SelectTokens(''[ ?( @.hi >= 1 ) ]'').ToList()", span="643-643"];
m2_395 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="JPathExecuteTests.cs", label="Assert.IsNotNull(t)", span="644-644"];
m2_396 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="JPathExecuteTests.cs", label="Assert.AreEqual(4, t.Count)", span="645-645"];
m2_397 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 1)), t[0]))", span="646-646"];
m2_398 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 2)), t[1]))", span="647-647"];
m2_399 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 2.0)), t[2]))", span="648-648"];
m2_400 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 3)), t[3]))", span="649-649"];
m2_401 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", span="635-635"];
m2_24 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyStringWithMatchingEmptyProperty()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyStringWithMatchingEmptyProperty()", span="87-87"];
m2_25 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyStringWithMatchingEmptyProperty()", file="JPathExecuteTests.cs", label="JObject o = new JObject(\r\n                new JProperty('' '', 1))", span="89-90"];
m2_26 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyStringWithMatchingEmptyProperty()", file="JPathExecuteTests.cs", label="JToken t = o.SelectToken(''[' ']'')", span="92-92"];
m2_27 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyStringWithMatchingEmptyProperty()", file="JPathExecuteTests.cs", label="Assert.AreEqual(1, (int)t)", span="93-93"];
m2_28 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyStringWithMatchingEmptyProperty()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyStringWithMatchingEmptyProperty()", span="87-87"];
m2_9 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", span="64-64"];
m2_10 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", file="JPathExecuteTests.cs", label="JObject o = new JObject(\r\n                new JProperty('''', 1))", span="66-67"];
m2_11 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", file="JPathExecuteTests.cs", label="JToken t = o.SelectToken(''['']'')", span="69-69"];
m2_12 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", file="JPathExecuteTests.cs", label="Assert.AreEqual(1, (int)t)", span="70-70"];
m2_13 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", span="64-64"];
m2_8 [cluster="Unk.AreEqual", file="JPathExecuteTests.cs", label="Entry Unk.AreEqual", span=""];
m2_437 [cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", file="JPathExecuteTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", span="0-0"];
m2_334 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateLastSingleCharacterProperty()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateLastSingleCharacterProperty()", span="532-532"];
m2_335 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateLastSingleCharacterProperty()", file="JPathExecuteTests.cs", label="JObject o2 = JObject.Parse(''{'People':[{'N':'Jeff'}]}'')", span="534-534"];
m2_336 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateLastSingleCharacterProperty()", file="JPathExecuteTests.cs", label="string a2 = (string)o2.SelectToken(''People[0].N'')", span="535-535"];
m2_337 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateLastSingleCharacterProperty()", file="JPathExecuteTests.cs", label="Assert.AreEqual(''Jeff'', a2)", span="537-537"];
m2_338 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateLastSingleCharacterProperty()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateLastSingleCharacterProperty()", span="532-532"];
m2_161 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", span="307-307"];
m2_162 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", file="JPathExecuteTests.cs", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="309-309"];
m2_163 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", file="JPathExecuteTests.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                ''Properties 'Missing', 'Missing2' not valid on JArray.'',\r\n                () => { a.SelectToken(''['Missing','Missing2']'', true); })", span="311-313"];
m2_164 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", span="307-307"];
m2_168 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", span="317-317"];
m2_169 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", file="JPathExecuteTests.cs", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="319-319"];
m2_170 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", file="JPathExecuteTests.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                ''Array slice of 99 to * returned no results.'',\r\n                () => { a.SelectToken(''[99:]'', true); })", span="321-323"];
m2_171 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", file="JPathExecuteTests.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                ''Array slice of 1 to -19 returned no results.'',\r\n                () => { a.SelectToken(''[1:-19]'', true); })", span="325-327"];
m2_172 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", file="JPathExecuteTests.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                ''Array slice of * to -19 returned no results.'',\r\n                () => { a.SelectToken(''[:-19]'', true); })", span="329-331"];
m2_173 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", file="JPathExecuteTests.cs", label="a = new JArray()", span="333-333"];
m2_174 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", file="JPathExecuteTests.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                ''Array slice of * to * returned no results.'',\r\n                () => { a.SelectToken(''[:]'', true); })", span="335-337"];
m2_175 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySliceWithError()", span="317-317"];
m2_52 [cluster="Unk.IsNotNull", file="JPathExecuteTests.cs", label="Entry Unk.IsNotNull", span=""];
m2_266 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JPathExecuteTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m2_346 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", span="552-552"];
m2_347 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", file="JPathExecuteTests.cs", label="JArray a = new JArray(\r\n                new JObject(new JProperty(''hi'', ''ho'')),\r\n                new JObject(new JProperty(''hi'', ''ha'')))", span="554-556"];
m2_348 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", file="JPathExecuteTests.cs", label="IList<JToken> t = a.SelectTokens(''[ ?( @.['hi'] == 'ha' ) ]'').ToList()", span="558-558"];
m2_349 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", file="JPathExecuteTests.cs", label="Assert.IsNotNull(t)", span="559-559"];
m2_350 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", file="JPathExecuteTests.cs", label="Assert.AreEqual(1, t.Count)", span="560-560"];
m2_351 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', ''ha'')), t[0]))", span="561-561"];
m2_352 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", span="552-552"];
m2_109 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultipleResultsError()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultipleResultsError()", span="227-227"];
m2_110 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultipleResultsError()", file="JPathExecuteTests.cs", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="229-229"];
m2_111 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultipleResultsError()", file="JPathExecuteTests.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                @''Path returned multiple tokens.'',\r\n                () => { a.SelectToken(''[0, 1]''); })", span="231-233"];
m2_112 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultipleResultsError()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultipleResultsError()", span="227-227"];
m2_291 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="150-150"];
m2_61 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104"];
m2_90 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", span="196-196"];
m2_91 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", file="JPathExecuteTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="198-199"];
m2_92 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", file="JPathExecuteTests.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                @''Index * not valid on JObject.'',\r\n                () => { o.SelectToken(''[*]'', true); })", span="201-203"];
m2_93 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", span="196-196"];
m2_415 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="143-143"];
m2_339 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", span="541-541"];
m2_340 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", file="JPathExecuteTests.cs", label="JArray a = new JArray(new JObject(new JProperty(''hi'', ''ho'')), new JObject(new JProperty(''hi2'', ''ha'')))", span="543-543"];
m2_341 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", file="JPathExecuteTests.cs", label="IList<JToken> t = a.SelectTokens(''[ ?( @.hi ) ]'').ToList()", span="545-545"];
m2_342 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", file="JPathExecuteTests.cs", label="Assert.IsNotNull(t)", span="546-546"];
m2_343 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", file="JPathExecuteTests.cs", label="Assert.AreEqual(1, t.Count)", span="547-547"];
m2_344 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', ''ho'')), t[0]))", span="548-548"];
m2_345 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.ExistsQuery()", span="541-541"];
m2_45 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", span="127-127"];
m2_46 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", file="JPathExecuteTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="129-130"];
m2_47 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", file="JPathExecuteTests.cs", label="JToken t = o.SelectToken(''Blah'')", span="132-132"];
m2_48 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", file="JPathExecuteTests.cs", label="Assert.IsNotNull(t)", span="133-133"];
m2_49 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", file="JPathExecuteTests.cs", label="Assert.AreEqual(JTokenType.Integer, t.Type)", span="134-134"];
m2_50 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", file="JPathExecuteTests.cs", label="Assert.AreEqual(1, (int)t)", span="135-135"];
m2_51 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", span="127-127"];
m2_29 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWhitespaceString()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWhitespaceString()", span="97-97"];
m2_30 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWhitespaceString()", file="JPathExecuteTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="99-100"];
m2_31 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWhitespaceString()", file="JPathExecuteTests.cs", label="JToken t = o.SelectToken('' '')", span="102-102"];
m2_32 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWhitespaceString()", file="JPathExecuteTests.cs", label="Assert.AreEqual(o, t)", span="103-103"];
m2_33 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWhitespaceString()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWhitespaceString()", span="97-97"];
m2_278 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", span="460-460"];
m2_279 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="JPathExecuteTests.cs", label="JObject o1 = new JObject { { ''Name'', 1 } }", span="462-462"];
m2_280 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="JPathExecuteTests.cs", label="JObject o2 = new JObject { { ''Name'', 2 } }", span="463-463"];
m2_281 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="JPathExecuteTests.cs", label="JArray a = new JArray(o1, o2)", span="464-464"];
m2_286 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(o1, t[1]))", span="470-470"];
m2_288 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(o2, t[3]))", span="472-472"];
m2_282 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="JPathExecuteTests.cs", label="IList<JToken> t = a.SelectTokens(''$..*'').ToList()", span="466-466"];
m2_285 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(a, t[0]))", span="469-469"];
m2_283 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="JPathExecuteTests.cs", label="Assert.IsNotNull(t)", span="467-467"];
m2_284 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="JPathExecuteTests.cs", label="Assert.AreEqual(5, t.Count)", span="468-468"];
m2_287 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="JPathExecuteTests.cs", label="Assert.AreEqual(1, (int)t[2])", span="471-471"];
m2_289 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="JPathExecuteTests.cs", label="Assert.AreEqual(2, (int)t[4])", span="473-473"];
m2_290 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardScan()", span="460-460"];
m2_416 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", span="707-707"];
m2_417 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="JPathExecuteTests.cs", label="JObject o = JObject.Parse(@''{\r\n        ''''Stores'''': [\r\n          ''''Lambton Quay'''',\r\n          ''''Willis Street''''\r\n        ],\r\n        ''''Manufacturers'''': [\r\n          {\r\n            ''''Name'''': ''''Acme Co'''',\r\n            ''''Products'''': [\r\n              {\r\n                ''''Name'''': ''''Anvil'''',\r\n                ''''Price'''': 50\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            ''''Name'''': ''''Contoso'''',\r\n            ''''Products'''': [\r\n              {\r\n                ''''Name'''': ''''Elbow Grease'''',\r\n                ''''Price'''': 99.95\r\n              },\r\n              {\r\n                ''''Name'''': ''''Headlight Fluid'''',\r\n                ''''Price'''': 4\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }'')", span="709-738"];
m2_418 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="JPathExecuteTests.cs", label="string name = (string)o.SelectToken(''Manufacturers[0].Name'')", span="740-740"];
m2_419 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="JPathExecuteTests.cs", label="decimal productPrice = (decimal)o.SelectToken(''Manufacturers[0].Products[0].Price'')", span="743-743"];
m2_420 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="JPathExecuteTests.cs", label="string productName = (string)o.SelectToken(''Manufacturers[1].Products[0].Name'')", span="746-746"];
m2_424 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="JPathExecuteTests.cs", label="IList<string> storeNames = o.SelectToken(''Stores'').Select(s => (string)s).ToList()", span="753-753"];
m2_425 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="JPathExecuteTests.cs", label="IList<string> firstProductNames = o[''Manufacturers''].Select(m => (string)m.SelectToken(''Products[1].Name'')).ToList()", span="757-757"];
m2_426 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="JPathExecuteTests.cs", label="decimal totalPrice = o[''Manufacturers''].Sum(m => (decimal)m.SelectToken(''Products[0].Price''))", span="761-761"];
m2_421 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="JPathExecuteTests.cs", label="Assert.AreEqual(''Acme Co'', name)", span="749-749"];
m2_422 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="JPathExecuteTests.cs", label="Assert.AreEqual(50m, productPrice)", span="750-750"];
m2_423 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="JPathExecuteTests.cs", label="Assert.AreEqual(''Elbow Grease'', productName)", span="751-751"];
m2_427 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="JPathExecuteTests.cs", label="Assert.AreEqual(2, storeNames.Count)", span="764-764"];
m2_428 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="JPathExecuteTests.cs", label="Assert.AreEqual(''Lambton Quay'', storeNames[0])", span="765-765"];
m2_429 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="JPathExecuteTests.cs", label="Assert.AreEqual(''Willis Street'', storeNames[1])", span="766-766"];
m2_430 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="JPathExecuteTests.cs", label="Assert.AreEqual(2, firstProductNames.Count)", span="767-767"];
m2_431 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="JPathExecuteTests.cs", label="Assert.AreEqual(null, firstProductNames[0])", span="768-768"];
m2_432 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="JPathExecuteTests.cs", label="Assert.AreEqual(''Headlight Fluid'', firstProductNames[1])", span="769-769"];
m2_433 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="JPathExecuteTests.cs", label="Assert.AreEqual(149.95m, totalPrice)", span="770-770"];
m2_434 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", span="707-707"];
m2_77 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObject()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObject()", span="175-175"];
m2_78 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObject()", file="JPathExecuteTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="177-178"];
m2_79 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObject()", file="JPathExecuteTests.cs", label="JToken t = o.SelectToken(''[1]'')", span="180-180"];
m2_80 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObject()", file="JPathExecuteTests.cs", label="Assert.IsNull(t)", span="181-181"];
m2_81 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObject()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObject()", span="175-175"];
m2_7 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", span="1936-1936"];
m2_14 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113"];
m2_267 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", span="446-446"];
m2_268 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", file="JPathExecuteTests.cs", label="JObject o1 = new JObject { { ''Name'', 1 } }", span="448-448"];
m2_269 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", file="JPathExecuteTests.cs", label="JObject o2 = new JObject { { ''Name'', 2 } }", span="449-449"];
m2_270 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", file="JPathExecuteTests.cs", label="JArray a = new JArray(o1, o2)", span="450-450"];
m2_271 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", file="JPathExecuteTests.cs", label="IList<JToken> t = a.SelectTokens(''$..Name'').ToList()", span="452-452"];
m2_272 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", file="JPathExecuteTests.cs", label="Assert.IsNotNull(t)", span="453-453"];
m2_273 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", file="JPathExecuteTests.cs", label="Assert.AreEqual(2, t.Count)", span="454-454"];
m2_274 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", file="JPathExecuteTests.cs", label="Assert.AreEqual(1, (int)t[0])", span="455-455"];
m2_275 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", file="JPathExecuteTests.cs", label="Assert.AreEqual(2, (int)t[1])", span="456-456"];
m2_276 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScan()", span="446-446"];
m2_208 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", span="371-371"];
m2_209 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="JArray a = new JArray(1, 2, 3, 4, 5, 6, 7, 8, 9)", span="373-373"];
m2_210 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="IList<JToken> t = null", span="374-374"];
m2_211 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="t = a.SelectTokens(''[-3:]'').ToList()", span="376-376"];
m2_216 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="t = a.SelectTokens(''[-1:-2:-1]'').ToList()", span="382-382"];
m2_219 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="t = a.SelectTokens(''[-2:-1]'').ToList()", span="386-386"];
m2_222 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="t = a.SelectTokens(''[1:1]'').ToList()", span="390-390"];
m2_224 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="t = a.SelectTokens(''[1:2]'').ToList()", span="393-393"];
m2_227 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="t = a.SelectTokens(''[::-1]'').ToList()", span="397-397"];
m2_238 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="t = a.SelectTokens(''[::-2]'').ToList()", span="409-409"];
m2_212 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(3, t.Count)", span="377-377"];
m2_213 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(7, (int)t[0])", span="378-378"];
m2_214 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(8, (int)t[1])", span="379-379"];
m2_215 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(9, (int)t[2])", span="380-380"];
m2_217 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(1, t.Count)", span="383-383"];
m2_218 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(9, (int)t[0])", span="384-384"];
m2_220 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(1, t.Count)", span="387-387"];
m2_221 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(8, (int)t[0])", span="388-388"];
m2_223 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(0, t.Count)", span="391-391"];
m2_225 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(1, t.Count)", span="394-394"];
m2_226 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(2, (int)t[0])", span="395-395"];
m2_228 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(9, t.Count)", span="398-398"];
m2_229 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(9, (int)t[0])", span="399-399"];
m2_230 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(8, (int)t[1])", span="400-400"];
m2_231 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(7, (int)t[2])", span="401-401"];
m2_232 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(6, (int)t[3])", span="402-402"];
m2_233 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(5, (int)t[4])", span="403-403"];
m2_234 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(4, (int)t[5])", span="404-404"];
m2_235 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(3, (int)t[6])", span="405-405"];
m2_236 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(2, (int)t[7])", span="406-406"];
m2_237 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(1, (int)t[8])", span="407-407"];
m2_239 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(5, t.Count)", span="410-410"];
m2_240 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(9, (int)t[0])", span="411-411"];
m2_241 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(7, (int)t[1])", span="412-412"];
m2_242 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(5, (int)t[2])", span="413-413"];
m2_243 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(3, (int)t[3])", span="414-414"];
m2_244 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Assert.AreEqual(1, (int)t[4])", span="415-415"];
m2_245 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", span="371-371"];
m2_382 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", span="619-619"];
m2_383 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="JPathExecuteTests.cs", label="JArray a = new JArray(\r\n                new JObject(new JProperty(''hi'', new BigInteger(1))),\r\n                new JObject(new JProperty(''hi'', new BigInteger(2))),\r\n                new JObject(new JProperty(''hi'', new BigInteger(3))))", span="621-624"];
m2_384 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="JPathExecuteTests.cs", label="IList<JToken> t = a.SelectTokens(''[ ?( @.hi > 1 ) ]'').ToList()", span="626-626"];
m2_385 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="JPathExecuteTests.cs", label="Assert.IsNotNull(t)", span="627-627"];
m2_386 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="JPathExecuteTests.cs", label="Assert.AreEqual(2, t.Count)", span="628-628"];
m2_387 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 2)), t[0]))", span="629-629"];
m2_388 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 3)), t[1]))", span="630-630"];
m2_389 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", span="619-619"];
m2_360 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", span="578-578"];
m2_361 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", file="JPathExecuteTests.cs", label="JArray a = new JArray(1, 2, 3)", span="580-580"];
m2_362 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", file="JPathExecuteTests.cs", label="IList<JToken> t = a.SelectTokens(''[ ?( @ > 1 ) ]'').ToList()", span="582-582"];
m2_363 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", file="JPathExecuteTests.cs", label="Assert.IsNotNull(t)", span="583-583"];
m2_364 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", file="JPathExecuteTests.cs", label="Assert.AreEqual(2, t.Count)", span="584-584"];
m2_365 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", file="JPathExecuteTests.cs", label="Assert.AreEqual(2, (int)t[0])", span="585-585"];
m2_366 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", file="JPathExecuteTests.cs", label="Assert.AreEqual(3, (int)t[1])", span="586-586"];
m2_367 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", span="578-578"];
m2_444 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Entry lambda expression", span="761-761"];
m2_88 [cluster="lambda expression", file="JPathExecuteTests.cs", label="o.SelectToken(''[1]'', true)", span="192-192"];
m2_87 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Entry lambda expression", span="192-192"];
m2_89 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Exit lambda expression", span="192-192"];
m2_95 [cluster="lambda expression", file="JPathExecuteTests.cs", label="o.SelectToken(''[*]'', true)", span="203-203"];
m2_94 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Entry lambda expression", span="203-203"];
m2_96 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Exit lambda expression", span="203-203"];
m2_102 [cluster="lambda expression", file="JPathExecuteTests.cs", label="o.SelectToken(''[:]'', true)", span="214-214"];
m2_101 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Entry lambda expression", span="214-214"];
m2_103 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Exit lambda expression", span="214-214"];
m2_114 [cluster="lambda expression", file="JPathExecuteTests.cs", label="a.SelectToken(''[0, 1]'')", span="233-233"];
m2_113 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Entry lambda expression", span="233-233"];
m2_115 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Exit lambda expression", span="233-233"];
m2_121 [cluster="lambda expression", file="JPathExecuteTests.cs", label="a.SelectToken(''BlahBlah'', true)", span="243-243"];
m2_120 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Entry lambda expression", span="243-243"];
m2_122 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Exit lambda expression", span="243-243"];
m2_128 [cluster="lambda expression", file="JPathExecuteTests.cs", label="a.SelectToken(''[9,10]'', true)", span="253-253"];
m2_127 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Entry lambda expression", span="253-253"];
m2_129 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Exit lambda expression", span="253-253"];
m2_136 [cluster="lambda expression", file="JPathExecuteTests.cs", label="c.SelectToken(''[1]'', true)", span="263-263"];
m2_135 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Entry lambda expression", span="263-263"];
m2_137 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Exit lambda expression", span="263-263"];
m2_147 [cluster="lambda expression", file="JPathExecuteTests.cs", label="o.SelectToken(''Missing'', true)", span="282-282"];
m2_146 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Entry lambda expression", span="282-282"];
m2_148 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Exit lambda expression", span="282-282"];
m2_159 [cluster="lambda expression", file="JPathExecuteTests.cs", label="o.SelectToken(''['Missing','Missing2']'', true)", span="303-303"];
m2_158 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Entry lambda expression", span="303-303"];
m2_160 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Exit lambda expression", span="303-303"];
m2_166 [cluster="lambda expression", file="JPathExecuteTests.cs", label="a.SelectToken(''['Missing','Missing2']'', true)", span="313-313"];
m2_165 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Entry lambda expression", span="313-313"];
m2_167 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Exit lambda expression", span="313-313"];
m2_178 [cluster="lambda expression", file="JPathExecuteTests.cs", label="a.SelectToken(''[99:]'', true)", span="323-323"];
m2_181 [cluster="lambda expression", file="JPathExecuteTests.cs", label="a.SelectToken(''[1:-19]'', true)", span="327-327"];
m2_184 [cluster="lambda expression", file="JPathExecuteTests.cs", label="a.SelectToken(''[:-19]'', true)", span="331-331"];
m2_177 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Entry lambda expression", span="323-323"];
m2_180 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Entry lambda expression", span="327-327"];
m2_183 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Entry lambda expression", span="331-331"];
m2_187 [cluster="lambda expression", file="JPathExecuteTests.cs", label="a.SelectToken(''[:]'', true)", span="337-337"];
m2_186 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Entry lambda expression", span="337-337"];
m2_179 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Exit lambda expression", span="323-323"];
m2_182 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Exit lambda expression", span="327-327"];
m2_185 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Exit lambda expression", span="331-331"];
m2_188 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Exit lambda expression", span="337-337"];
m2_199 [cluster="lambda expression", file="JPathExecuteTests.cs", label="a.SelectToken(''[1000].Ha'', true)", span="356-356"];
m2_198 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Entry lambda expression", span="356-356"];
m2_200 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Exit lambda expression", span="356-356"];
m2_438 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Entry lambda expression", span="753-753"];
m2_441 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Entry lambda expression", span="757-757"];
m2_439 [cluster="lambda expression", file="JPathExecuteTests.cs", label="(string)s", span="753-753"];
m2_440 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Exit lambda expression", span="753-753"];
m2_442 [cluster="lambda expression", file="JPathExecuteTests.cs", label="(string)m.SelectToken(''Products[1].Name'')", span="757-757"];
m2_443 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Exit lambda expression", span="757-757"];
m2_445 [cluster="lambda expression", file="JPathExecuteTests.cs", label="(decimal)m.SelectToken(''Products[0].Price'')", span="761-761"];
m2_446 [cluster="lambda expression", file="JPathExecuteTests.cs", label="Exit lambda expression", span="761-761"];
m2_256 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", span="433-433"];
m2_257 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="JPathExecuteTests.cs", label="JArray a = new JArray(1, 2, 3, 4)", span="435-435"];
m2_258 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="JPathExecuteTests.cs", label="IEnumerable<JToken> t = a.SelectTokens(''[1,2,0]'')", span="437-437"];
m2_259 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="JPathExecuteTests.cs", label="Assert.IsNotNull(t)", span="438-438"];
m2_260 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="JPathExecuteTests.cs", label="Assert.AreEqual(3, t.Count())", span="439-439"];
m2_261 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="JPathExecuteTests.cs", label="Assert.AreEqual(2, (int)t.ElementAt(0))", span="440-440"];
m2_262 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="JPathExecuteTests.cs", label="Assert.AreEqual(3, (int)t.ElementAt(1))", span="441-441"];
m2_263 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="JPathExecuteTests.cs", label="Assert.AreEqual(1, (int)t.ElementAt(2))", span="442-442"];
m2_264 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", span="433-433"];
m2_306 [cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="90-90"];
m2_176 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="64-64"];
m2_53 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", span="139-139"];
m2_54 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", file="JPathExecuteTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1),\r\n                new JProperty(''Blah2'', 2))", span="141-143"];
m2_55 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", file="JPathExecuteTests.cs", label="IList<JToken> t = o.SelectTokens(''$.*'').ToList()", span="145-145"];
m2_56 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", file="JPathExecuteTests.cs", label="Assert.IsNotNull(t)", span="146-146"];
m2_57 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", file="JPathExecuteTests.cs", label="Assert.AreEqual(2, t.Count)", span="147-147"];
m2_58 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", file="JPathExecuteTests.cs", label="Assert.AreEqual(1, (int)t[0])", span="148-148"];
m2_59 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", file="JPathExecuteTests.cs", label="Assert.AreEqual(2, (int)t[1])", span="149-149"];
m2_60 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardProperty()", span="139-139"];
m2_39 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", span="117-117"];
m2_40 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", file="JPathExecuteTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''$values'', new JArray(1, 2, 3)))", span="119-120"];
m2_41 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", file="JPathExecuteTests.cs", label="JToken t = o.SelectToken(''$values[1]'')", span="122-122"];
m2_42 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", file="JPathExecuteTests.cs", label="Assert.AreEqual(2, (int)t)", span="123-123"];
m2_43 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", span="117-117"];
m2_293 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", span="477-477"];
m2_294 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="JPathExecuteTests.cs", label="JObject o1 = new JObject { { ''Name'', 1 } }", span="479-479"];
m2_295 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="JPathExecuteTests.cs", label="JObject o2 = new JObject { { ''Name'', 2 } }", span="480-480"];
m2_297 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="JPathExecuteTests.cs", label="JArray a = new JArray(o1, o2, o3)", span="482-482"];
m2_296 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="JPathExecuteTests.cs", label="JObject o3 = new JObject { { ''Name'', new JObject { { ''Name'', new JArray(3) } } } }", span="481-481"];
m2_298 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="JPathExecuteTests.cs", label="IList<JToken> t = a.SelectTokens(''$..Name'').ToList()", span="484-484"];
m2_299 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="JPathExecuteTests.cs", label="Assert.IsNotNull(t)", span="485-485"];
m2_300 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="JPathExecuteTests.cs", label="Assert.AreEqual(4, t.Count)", span="486-486"];
m2_301 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="JPathExecuteTests.cs", label="Assert.AreEqual(1, (int)t[0])", span="487-487"];
m2_302 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="JPathExecuteTests.cs", label="Assert.AreEqual(2, (int)t[1])", span="488-488"];
m2_303 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject { { ''Name'', new JArray(3) } }, t[2]))", span="489-489"];
m2_304 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="JPathExecuteTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(3), t[3]))", span="490-490"];
m2_305 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", span="477-477"];
m2_63 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JPathExecuteTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m2_246 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", span="419-419"];
m2_247 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="JPathExecuteTests.cs", label="JArray a = new JArray(1, 2, 3, 4)", span="421-421"];
m2_248 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="JPathExecuteTests.cs", label="List<JToken> t = a.SelectTokens(''[*]'').ToList()", span="423-423"];
m2_249 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="JPathExecuteTests.cs", label="Assert.IsNotNull(t)", span="424-424"];
m2_250 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="JPathExecuteTests.cs", label="Assert.AreEqual(4, t.Count)", span="425-425"];
m2_251 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="JPathExecuteTests.cs", label="Assert.AreEqual(1, (int)t[0])", span="426-426"];
m2_252 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="JPathExecuteTests.cs", label="Assert.AreEqual(2, (int)t[1])", span="427-427"];
m2_253 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="JPathExecuteTests.cs", label="Assert.AreEqual(3, (int)t[2])", span="428-428"];
m2_254 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="JPathExecuteTests.cs", label="Assert.AreEqual(4, (int)t[3])", span="429-429"];
m2_255 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", span="419-419"];
m2_104 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", span="218-218"];
m2_105 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", file="JPathExecuteTests.cs", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="220-220"];
m2_106 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", file="JPathExecuteTests.cs", label="JToken t = a.SelectToken(''BlahBlah'')", span="222-222"];
m2_107 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", file="JPathExecuteTests.cs", label="Assert.IsNull(t)", span="223-223"];
m2_108 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", span="218-218"];
m2_17 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", file="JPathExecuteTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", span="74-74"];
m2_18 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", file="JPathExecuteTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="76-77"];
m2_19 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", file="JPathExecuteTests.cs", label="JToken t = o.SelectToken('''')", span="79-79"];
m2_20 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", file="JPathExecuteTests.cs", label="Assert.AreEqual(o, t)", span="80-80"];
m2_21 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", file="JPathExecuteTests.cs", label="t = o.SelectToken(''['']'')", span="82-82"];
m2_22 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", file="JPathExecuteTests.cs", label="Assert.AreEqual(null, t)", span="83-83"];
m2_23 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", file="JPathExecuteTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", span="74-74"];
m2_447 [file="JPathExecuteTests.cs", label=o, span=""];
m2_448 [file="JPathExecuteTests.cs", label=o, span=""];
m2_449 [file="JPathExecuteTests.cs", label=o, span=""];
m2_450 [file="JPathExecuteTests.cs", label=a, span=""];
m2_451 [file="JPathExecuteTests.cs", label=a, span=""];
m2_452 [file="JPathExecuteTests.cs", label=a, span=""];
m2_453 [file="JPathExecuteTests.cs", label=c, span=""];
m2_454 [file="JPathExecuteTests.cs", label=o, span=""];
m2_455 [file="JPathExecuteTests.cs", label=o, span=""];
m2_456 [file="JPathExecuteTests.cs", label=a, span=""];
m2_457 [file="JPathExecuteTests.cs", label=a, span=""];
m2_458 [file="JPathExecuteTests.cs", label=a, span=""];
m3_12 [cluster="Unk.AreEqual", file="JsonArrayAttributeTests.cs", label="Entry Unk.AreEqual", span=""];
m3_0 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.IsReferenceTest()", file="JsonArrayAttributeTests.cs", label="Entry Newtonsoft.Json.Tests.JsonArrayAttributeTests.IsReferenceTest()", span="40-40"];
m3_1 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.IsReferenceTest()", file="JsonArrayAttributeTests.cs", label="JsonPropertyAttribute attribute = new JsonPropertyAttribute()", span="42-42"];
m3_2 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.IsReferenceTest()", file="JsonArrayAttributeTests.cs", label="Assert.AreEqual(null, attribute._isReference)", span="43-43"];
m3_3 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.IsReferenceTest()", file="JsonArrayAttributeTests.cs", label="Assert.AreEqual(false, attribute.IsReference)", span="44-44"];
m3_4 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.IsReferenceTest()", file="JsonArrayAttributeTests.cs", label="attribute.IsReference = false", span="46-46"];
m3_5 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.IsReferenceTest()", file="JsonArrayAttributeTests.cs", label="Assert.AreEqual(false, attribute._isReference)", span="47-47"];
m3_6 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.IsReferenceTest()", file="JsonArrayAttributeTests.cs", label="Assert.AreEqual(false, attribute.IsReference)", span="48-48"];
m3_7 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.IsReferenceTest()", file="JsonArrayAttributeTests.cs", label="attribute.IsReference = true", span="50-50"];
m3_8 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.IsReferenceTest()", file="JsonArrayAttributeTests.cs", label="Assert.AreEqual(true, attribute._isReference)", span="51-51"];
m3_9 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.IsReferenceTest()", file="JsonArrayAttributeTests.cs", label="Assert.AreEqual(true, attribute.IsReference)", span="52-52"];
m3_10 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.IsReferenceTest()", file="JsonArrayAttributeTests.cs", label="Exit Newtonsoft.Json.Tests.JsonArrayAttributeTests.IsReferenceTest()", span="40-40"];
m3_13 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.NullValueHandlingTest()", file="JsonArrayAttributeTests.cs", label="Entry Newtonsoft.Json.Tests.JsonArrayAttributeTests.NullValueHandlingTest()", span="56-56"];
m3_14 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.NullValueHandlingTest()", file="JsonArrayAttributeTests.cs", label="JsonPropertyAttribute attribute = new JsonPropertyAttribute()", span="58-58"];
m3_15 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.NullValueHandlingTest()", file="JsonArrayAttributeTests.cs", label="Assert.AreEqual(null, attribute._nullValueHandling)", span="59-59"];
m3_16 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.NullValueHandlingTest()", file="JsonArrayAttributeTests.cs", label="Assert.AreEqual(NullValueHandling.Include, attribute.NullValueHandling)", span="60-60"];
m3_17 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.NullValueHandlingTest()", file="JsonArrayAttributeTests.cs", label="attribute.NullValueHandling = NullValueHandling.Ignore", span="62-62"];
m3_18 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.NullValueHandlingTest()", file="JsonArrayAttributeTests.cs", label="Assert.AreEqual(NullValueHandling.Ignore, attribute._nullValueHandling)", span="63-63"];
m3_19 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.NullValueHandlingTest()", file="JsonArrayAttributeTests.cs", label="Assert.AreEqual(NullValueHandling.Ignore, attribute.NullValueHandling)", span="64-64"];
m3_20 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.NullValueHandlingTest()", file="JsonArrayAttributeTests.cs", label="Exit Newtonsoft.Json.Tests.JsonArrayAttributeTests.NullValueHandlingTest()", span="56-56"];
m3_11 [cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute()", file="JsonArrayAttributeTests.cs", label="Entry Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute()", span="176-176"];
m3_21 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.DefaultValueHandlingTest()", file="JsonArrayAttributeTests.cs", label="Entry Newtonsoft.Json.Tests.JsonArrayAttributeTests.DefaultValueHandlingTest()", span="68-68"];
m3_22 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.DefaultValueHandlingTest()", file="JsonArrayAttributeTests.cs", label="JsonPropertyAttribute attribute = new JsonPropertyAttribute()", span="70-70"];
m3_23 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.DefaultValueHandlingTest()", file="JsonArrayAttributeTests.cs", label="Assert.AreEqual(null, attribute._defaultValueHandling)", span="71-71"];
m3_24 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.DefaultValueHandlingTest()", file="JsonArrayAttributeTests.cs", label="Assert.AreEqual(DefaultValueHandling.Include, attribute.DefaultValueHandling)", span="72-72"];
m3_25 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.DefaultValueHandlingTest()", file="JsonArrayAttributeTests.cs", label="attribute.DefaultValueHandling = DefaultValueHandling.Ignore", span="74-74"];
m3_26 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.DefaultValueHandlingTest()", file="JsonArrayAttributeTests.cs", label="Assert.AreEqual(DefaultValueHandling.Ignore, attribute._defaultValueHandling)", span="75-75"];
m3_27 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.DefaultValueHandlingTest()", file="JsonArrayAttributeTests.cs", label="Assert.AreEqual(DefaultValueHandling.Ignore, attribute.DefaultValueHandling)", span="76-76"];
m3_28 [cluster="Newtonsoft.Json.Tests.JsonArrayAttributeTests.DefaultValueHandlingTest()", file="JsonArrayAttributeTests.cs", label="Exit Newtonsoft.Json.Tests.JsonArrayAttributeTests.DefaultValueHandlingTest()", span="68-68"];
m4_25 [cluster="Newtonsoft.Json.JsonPosition.JsonPosition(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonPosition.JsonPosition(Newtonsoft.Json.JsonContainerType)", span="48-48"];
m4_176 [cluster="System.Convert.ToDecimal(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToDecimal(object, System.IFormatProvider)", span="0-0"];
m4_207 [cluster="int.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out int)", file="JsonReader.cs", label="Entry int.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out int)", span="0-0"];
m4_0 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.GetPosition(int)", span="281-281"];
m4_1 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonReader.cs", label="depth < _stack.Count", span="283-283"];
m4_2 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonReader.cs", label="return _stack[depth];", span="284-284"];
m4_3 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonReader.cs", label="return _currentPosition;", span="286-286"];
m4_4 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.GetPosition(int)", span="281-281"];
m4_48 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="361-361"];
m4_49 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsInt32()", span="361-361"];
m4_103 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", span="465-465"];
m4_104 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="_readType = ReadType.ReadAsBytes", span="467-467"];
m4_105 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="JsonToken t", span="469-469"];
m4_106 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="!ReadInternal()", span="473-473"];
m4_110 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="t == JsonToken.Comment", span="482-482"];
m4_116 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="t == JsonToken.String", span="493-493"];
m4_121 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="t == JsonToken.Null", span="501-501"];
m4_123 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="t == JsonToken.Bytes", span="504-504"];
m4_125 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="t == JsonToken.StartArray", span="507-507"];
m4_139 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="t == JsonToken.EndArray", span="534-534"];
m4_141 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading bytes. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="537-537"];
m4_107 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="SetToken(JsonToken.None)", span="475-475"];
m4_109 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="t = TokenType", span="480-480"];
m4_108 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="return null;", span="476-476"];
m4_111 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="IsWrappedInTypeObject()", span="484-484"];
m4_112 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="byte[] data = ReadAsBytes()", span="486-486"];
m4_113 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="ReadInternal()", span="487-487"];
m4_114 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Bytes, data, false)", span="488-488"];
m4_115 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="return data;", span="489-489"];
m4_117 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="string s = (string)Value", span="495-495"];
m4_118 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="byte[] data = (s.Length == 0) ? new byte[0] : Convert.FromBase64String(s)", span="496-496"];
m4_119 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Bytes, data, false)", span="497-497"];
m4_120 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="return data;", span="498-498"];
m4_122 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="return null;", span="502-502"];
m4_124 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="return (byte[])Value;", span="505-505"];
m4_126 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="List<byte> data = new List<byte>()", span="509-509"];
m4_127 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="ReadInternal()", span="511-511"];
m4_131 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="data.Add(Convert.ToByte(Value, CultureInfo.InvariantCulture))", span="517-517"];
m4_133 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="byte[] d = data.ToArray()", span="520-520"];
m4_128 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="t = TokenType", span="513-513"];
m4_138 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end when reading bytes.'');", span="531-531"];
m4_129 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label=t, span="514-514"];
m4_137 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected token when reading bytes: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="527-527"];
m4_130 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="JsonToken.Integer", span="516-516"];
m4_132 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="JsonToken.EndArray", span="519-519"];
m4_136 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="JsonToken.Comment", span="523-523"];
m4_134 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Bytes, d, false)", span="521-521"];
m4_135 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="return d;", span="522-522"];
m4_140 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="return null;", span="535-535"];
m4_142 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", span="465-465"];
m4_144 [cluster="System.Convert.FromBase64String(string)", file="JsonReader.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m4_292 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="814-814"];
m4_293 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs", label="SetToken(newToken, value, true)", span="816-816"];
m4_294 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="814-814"];
m4_13 [cluster="System.Collections.Generic.List<T>.List(int)", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m4_102 [cluster="System.DateTimeOffset.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset)", file="JsonReader.cs", label="Entry System.DateTimeOffset.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset)", span="0-0"];
m4_101 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", span="286-286"];
m4_46 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="355-355"];
m4_47 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Read()", span="355-355"];
m4_145 [cluster="System.Collections.Generic.List<T>.List()", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_42 [cluster="Newtonsoft.Json.JsonPosition.JsonPosition()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonPosition.JsonPosition()", span="41-41"];
m4_267 [cluster="System.DateTime.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", file="JsonReader.cs", label="Entry System.DateTime.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", span="0-0"];
m4_41 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m4_5 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.JsonReader()", span="292-292"];
m4_6 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_currentState = State.Start", span="294-294"];
m4_7 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_stack = new List<JsonPosition>(4)", span="295-295"];
m4_8 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_dateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind", span="296-296"];
m4_9 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_dateParseHandling = DateParseHandling.DateTime", span="297-297"];
m4_10 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_floatParseHandling = FloatParseHandling.Double", span="298-298"];
m4_11 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="CloseInput = true", span="300-300"];
m4_12 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.JsonReader()", span="292-292"];
m4_97 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="804-804"];
m4_290 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="SetToken(newToken, null, true)", span="806-806"];
m4_291 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="804-804"];
m4_343 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", span="956-956"];
m4_381 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label=token, span="958-958"];
m4_388 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Not a valid close JsonToken: {0}''.FormatWith(CultureInfo.InvariantCulture, token));", span="967-967"];
m4_382 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.EndObject", span="960-960"];
m4_384 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.EndArray", span="962-962"];
m4_386 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.EndConstructor", span="964-964"];
m4_383 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return JsonContainerType.Object;", span="961-961"];
m4_385 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return JsonContainerType.Array;", span="963-963"];
m4_387 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return JsonContainerType.Constructor;", span="965-965"];
m4_389 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", span="956-956"];
m4_98 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonReader.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m4_235 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", span="700-700"];
m4_236 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="_readType = ReadType.ReadAsDateTime", span="702-702"];
m4_237 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="!ReadInternal()", span="706-706"];
m4_238 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="SetToken(JsonToken.None)", span="708-708"];
m4_240 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="TokenType == JsonToken.Comment", span="711-711"];
m4_239 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="return null;", span="709-709"];
m4_241 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="TokenType == JsonToken.Date", span="713-713"];
m4_242 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="return (DateTime)Value;", span="714-714"];
m4_243 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="TokenType == JsonToken.Null", span="716-716"];
m4_244 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="return null;", span="717-717"];
m4_245 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="DateTime dt", span="719-719"];
m4_246 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="TokenType == JsonToken.String", span="720-720"];
m4_247 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="string s = (string)Value", span="722-722"];
m4_262 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="TokenType == JsonToken.EndArray", span="748-748"];
m4_248 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="723-723"];
m4_252 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", color=red, community=0, file="JsonReader.cs", label="7: DateTimeUtils.TryParseDateTime(s, DateParseHandling.DateTime, DateTimeZoneHandling, out temp)", span="730-730"];
m4_257 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="DateTime.TryParse(s, Culture, DateTimeStyles.RoundtripKind, out dt)", span="738-738"];
m4_249 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Null)", span="725-725"];
m4_251 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="object temp", span="729-729"];
m4_250 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="return null;", span="726-726"];
m4_253 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="dt = (DateTime)temp", span="732-732"];
m4_254 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="dt = DateTimeUtils.EnsureDateTime(dt, DateTimeZoneHandling)", span="733-733"];
m4_255 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Date, dt, false)", span="734-734"];
m4_256 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="return dt;", span="735-735"];
m4_258 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="dt = DateTimeUtils.EnsureDateTime(dt, DateTimeZoneHandling)", span="740-740"];
m4_261 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to DateTime: {0}.''.FormatWith(CultureInfo.InvariantCulture, Value));", span="745-745"];
m4_259 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Date, dt, false)", span="741-741"];
m4_260 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="return dt;", span="742-742"];
m4_263 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="return null;", span="749-749"];
m4_264 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading date. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, TokenType));", span="751-751"];
m4_265 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", span="700-700"];
m4_43 [cluster="Newtonsoft.Json.JsonReader.Peek()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Peek()", span="346-346"];
m4_44 [cluster="Newtonsoft.Json.JsonReader.Peek()", file="JsonReader.cs", label="return _currentPosition.Type;", span="348-348"];
m4_45 [cluster="Newtonsoft.Json.JsonReader.Peek()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Peek()", span="346-346"];
m4_397 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Close()", span="992-992"];
m4_398 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs", label="_currentState = State.Closed", span="994-994"];
m4_399 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs", label="_tokenType = JsonToken.None", span="995-995"];
m4_400 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs", label="_value = null", span="996-996"];
m4_401 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Close()", span="992-992"];
m4_232 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", span="925-925"];
m4_362 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label=token, span="927-927"];
m4_363 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.Integer", span="929-929"];
m4_372 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return false;", span="939-939"];
m4_364 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.Float", span="930-930"];
m4_365 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.String", span="931-931"];
m4_366 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.Boolean", span="932-932"];
m4_367 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.Undefined", span="933-933"];
m4_368 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.Null", span="934-934"];
m4_369 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.Date", span="935-935"];
m4_370 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.Bytes", span="936-936"];
m4_371 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return true;", span="937-937"];
m4_373 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", span="925-925"];
m4_54 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="379-379"];
m4_55 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="379-379"];
m4_331 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", span="878-878"];
m4_336 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonContainerType currentObject = Pop()", span="880-880"];
m4_337 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="GetTypeForCloseToken(endToken) != currentObject", span="882-882"];
m4_338 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''JsonToken {0} is not valid for closing JsonType {1}.''.FormatWith(CultureInfo.InvariantCulture, endToken, currentObject));", span="883-883"];
m4_339 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Peek() != JsonContainerType.None", span="885-885"];
m4_340 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="_currentState = State.PostValue", span="886-886"];
m4_341 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="SetFinished()", span="888-888"];
m4_342 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", span="878-878"];
m4_26 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_332 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetFinished()", span="917-917"];
m4_358 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label=SupportMultipleContent, span="919-919"];
m4_359 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="_currentState = State.Start", span="920-920"];
m4_360 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="_currentState = State.Finished", span="922-922"];
m4_361 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetFinished()", span="917-917"];
m4_234 [cluster="object.ToString()", file="JsonReader.cs", label="Entry object.ToString()", span="0-0"];
m4_52 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="373-373"];
m4_53 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsBytes()", span="373-373"];
m4_60 [cluster="Newtonsoft.Json.JsonReader.ReadInternal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadInternal()", span="395-395"];
m4_61 [cluster="Newtonsoft.Json.JsonReader.ReadInternal()", file="JsonReader.cs", label="throw new NotImplementedException();", span="397-397"];
m4_62 [cluster="Newtonsoft.Json.JsonReader.ReadInternal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadInternal()", span="395-395"];
m4_148 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", span="540-540"];
m4_149 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="_readType = ReadType.ReadAsDecimal", span="542-542"];
m4_150 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="JsonToken t", span="544-544"];
m4_151 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="!ReadInternal()", span="548-548"];
m4_155 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="t == JsonToken.Comment", span="557-557"];
m4_156 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="t == JsonToken.Integer || t == JsonToken.Float", span="559-559"];
m4_160 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="t == JsonToken.Null", span="567-567"];
m4_163 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="t == JsonToken.String", span="571-571"];
m4_172 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="t == JsonToken.EndArray", span="591-591"];
m4_174 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading decimal. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="594-594"];
m4_152 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="SetToken(JsonToken.None)", span="550-550"];
m4_154 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="t = TokenType", span="555-555"];
m4_153 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="return null;", span="551-551"];
m4_157 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="!(Value is decimal)", span="561-561"];
m4_158 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Float, Convert.ToDecimal(Value, CultureInfo.InvariantCulture), false)", span="562-562"];
m4_159 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="return (decimal)Value;", span="564-564"];
m4_161 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="return null;", span="568-568"];
m4_162 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="decimal d", span="570-570"];
m4_164 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="string s = (string)Value", span="573-573"];
m4_165 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="574-574"];
m4_168 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="decimal.TryParse(s, NumberStyles.Number, Culture, out d)", span="580-580"];
m4_166 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Null)", span="576-576"];
m4_167 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="return null;", span="577-577"];
m4_169 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Float, d, false)", span="582-582"];
m4_171 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to decimal: {0}.''.FormatWith(CultureInfo.InvariantCulture, Value));", span="587-587"];
m4_170 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="return d;", span="583-583"];
m4_173 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="return null;", span="592-592"];
m4_175 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", span="540-540"];
m4_393 [cluster="Newtonsoft.Json.JsonReader.Dispose(bool)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Dispose(bool)", span="983-983"];
m4_394 [cluster="Newtonsoft.Json.JsonReader.Dispose(bool)", file="JsonReader.cs", label="_currentState != State.Closed && disposing", span="985-985"];
m4_395 [cluster="Newtonsoft.Json.JsonReader.Dispose(bool)", file="JsonReader.cs", label="Close()", span="986-986"];
m4_396 [cluster="Newtonsoft.Json.JsonReader.Dispose(bool)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Dispose(bool)", span="983-983"];
m4_143 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", span="754-754"];
m4_268 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="_readType = ReadType.Read", span="756-756"];
m4_269 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="TokenType == JsonToken.StartObject", span="758-758"];
m4_270 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="!ReadInternal()", span="760-760"];
m4_279 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="return false;", span="779-779"];
m4_271 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end when reading bytes.'');", span="761-761"];
m4_272 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="Value.ToString() == JsonTypeReflector.TypePropertyName", span="763-763"];
m4_273 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="ReadInternal()", span="765-765"];
m4_278 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading bytes. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, JsonToken.StartObject));", span="776-776"];
m4_274 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="Value != null && Value.ToString().StartsWith(''System.Byte[]'')", span="766-766"];
m4_275 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="ReadInternal()", span="768-768"];
m4_276 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="Value.ToString() == JsonTypeReflector.ValuePropertyName", span="769-769"];
m4_277 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="return true;", span="771-771"];
m4_280 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", span="754-754"];
m4_390 [cluster="Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", span="974-974"];
m4_391 [cluster="Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", file="JsonReader.cs", label="Dispose(true)", span="976-976"];
m4_392 [cluster="Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", span="974-974"];
m4_147 [cluster="System.Collections.Generic.List<T>.ToArray()", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m4_58 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", span="392-392"];
m4_59 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", span="392-392"];
m4_29 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Pop()", span="325-325"];
m4_30 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="JsonPosition oldPosition", span="327-327"];
m4_31 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_stack.Count > 0", span="328-328"];
m4_32 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="oldPosition = _currentPosition", span="330-330"];
m4_35 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="oldPosition = _currentPosition", span="336-336"];
m4_33 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_currentPosition = _stack[_stack.Count - 1]", span="331-331"];
m4_39 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="return oldPosition.Type;", span="343-343"];
m4_34 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_stack.RemoveAt(_stack.Count - 1)", span="332-332"];
m4_36 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_currentPosition = new JsonPosition()", span="337-337"];
m4_37 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_maxDepth != null && Depth <= _maxDepth", span="340-340"];
m4_38 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_hasExceededMaxDepth = false", span="341-341"];
m4_40 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Pop()", span="325-325"];
m4_206 [cluster="System.Convert.ToInt32(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToInt32(object, System.IFormatProvider)", span="0-0"];
m4_345 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="894-894"];
m4_346 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType currentObject = Peek()", span="896-896"];
m4_347 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label=currentObject, span="898-898"];
m4_356 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''While setting the reader state back to current object an unexpected JsonType was encountered: {0}''.FormatWith(CultureInfo.InvariantCulture, currentObject));", span="913-913"];
m4_348 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.Object", span="900-900"];
m4_350 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.Array", span="903-903"];
m4_352 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.Constructor", span="906-906"];
m4_354 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.None", span="909-909"];
m4_349 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="_currentState = State.Object", span="901-901"];
m4_351 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="_currentState = State.Array", span="904-904"];
m4_353 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="_currentState = State.Constructor", span="907-907"];
m4_355 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="SetFinished()", span="910-910"];
m4_357 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="894-894"];
m4_178 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", span="597-597"];
m4_179 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="_readType = ReadType.ReadAsInt32", span="599-599"];
m4_180 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="JsonToken t", span="601-601"];
m4_181 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="!ReadInternal()", span="605-605"];
m4_185 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="t == JsonToken.Comment", span="614-614"];
m4_186 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="t == JsonToken.Integer || t == JsonToken.Float", span="616-616"];
m4_190 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="t == JsonToken.Null", span="624-624"];
m4_193 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="t == JsonToken.String", span="628-628"];
m4_202 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="t == JsonToken.EndArray", span="648-648"];
m4_182 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="SetToken(JsonToken.None)", span="607-607"];
m4_184 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="t = TokenType", span="612-612"];
m4_183 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="return null;", span="608-608"];
m4_187 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="!(Value is int)", span="618-618"];
m4_188 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="SetToken(JsonToken.Integer, Convert.ToInt32(Value, CultureInfo.InvariantCulture), false)", span="619-619"];
m4_189 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="return (int)Value;", span="621-621"];
m4_191 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="return null;", span="625-625"];
m4_192 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="int i", span="627-627"];
m4_194 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="string s = (string)Value", span="630-630"];
m4_195 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="631-631"];
m4_198 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="int.TryParse(s, NumberStyles.Integer, Culture, out i)", span="637-637"];
m4_196 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="SetToken(JsonToken.Null)", span="633-633"];
m4_197 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="return null;", span="634-634"];
m4_199 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="SetToken(JsonToken.Integer, i, false)", span="639-639"];
m4_201 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to integer: {0}.''.FormatWith(CultureInfo.InvariantCulture, Value));", span="644-644"];
m4_200 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="return i;", span="640-640"];
m4_203 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="return null;", span="649-649"];
m4_204 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading integer. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, TokenType));", span="651-651"];
m4_205 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", span="597-597"];
m4_63 [cluster="System.NotImplementedException.NotImplementedException()", file="JsonReader.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m4_99 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", span="819-819"];
m4_295 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_tokenType = newToken", span="821-821"];
m4_296 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_value = value", span="822-822"];
m4_297 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label=newToken, span="824-824"];
m4_315 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentPosition.PropertyName = (string)value", span="850-850"];
m4_328 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label=updateIndex, span="866-866"];
m4_298 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.StartObject", span="826-826"];
m4_301 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.StartArray", span="830-830"];
m4_304 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.StartConstructor", span="834-834"];
m4_307 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.EndObject", span="838-838"];
m4_309 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.EndArray", span="841-841"];
m4_311 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.EndConstructor", span="844-844"];
m4_313 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.PropertyName", span="847-847"];
m4_316 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Undefined", span="852-852"];
m4_299 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.ObjectStart", span="827-827"];
m4_300 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Push(JsonContainerType.Object)", span="828-828"];
m4_302 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.ArrayStart", span="831-831"];
m4_303 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Push(JsonContainerType.Array)", span="832-832"];
m4_305 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.ConstructorStart", span="835-835"];
m4_306 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Push(JsonContainerType.Constructor)", span="836-836"];
m4_308 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="ValidateEnd(JsonToken.EndObject)", span="839-839"];
m4_310 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="ValidateEnd(JsonToken.EndArray)", span="842-842"];
m4_312 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="ValidateEnd(JsonToken.EndConstructor)", span="845-845"];
m4_314 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.Property", span="848-848"];
m4_317 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Integer", span="853-853"];
m4_318 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Float", span="854-854"];
m4_319 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Boolean", span="855-855"];
m4_320 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Null", span="856-856"];
m4_321 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Date", span="857-857"];
m4_322 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.String", span="858-858"];
m4_323 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Raw", span="859-859"];
m4_324 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Bytes", span="860-860"];
m4_325 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Peek() != JsonContainerType.None", span="861-861"];
m4_326 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.PostValue", span="862-862"];
m4_327 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="SetFinished()", span="864-864"];
m4_329 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="UpdateScopeWithFinishedValue()", span="867-867"];
m4_330 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", span="819-819"];
m4_50 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsString()", span="367-367"];
m4_51 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsString()", span="367-367"];
m4_14 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", span="303-303"];
m4_15 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="UpdateScopeWithFinishedValue()", span="305-305"];
m4_17 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_currentPosition = new JsonPosition(value)", span="309-309"];
m4_19 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_currentPosition = new JsonPosition(value)", span="314-314"];
m4_16 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_currentPosition.Type == JsonContainerType.None", span="307-307"];
m4_18 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_stack.Add(_currentPosition)", span="313-313"];
m4_20 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_maxDepth != null && Depth + 1 > _maxDepth && !_hasExceededMaxDepth", span="317-317"];
m4_21 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_hasExceededMaxDepth = true", span="319-319"];
m4_22 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''The reader's MaxDepth of {0} has been exceeded.''.FormatWith(CultureInfo.InvariantCulture, _maxDepth));", span="320-320"];
m4_23 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", span="303-303"];
m4_289 [cluster="Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", span="943-943"];
m4_374 [cluster="Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label=token, span="945-945"];
m4_375 [cluster="Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.StartObject", span="947-947"];
m4_379 [cluster="Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return false;", span="952-952"];
m4_376 [cluster="Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.StartArray", span="948-948"];
m4_377 [cluster="Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.StartConstructor", span="949-949"];
m4_378 [cluster="Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return true;", span="950-950"];
m4_380 [cluster="Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", span="943-943"];
m4_282 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Skip()", span="785-785"];
m4_283 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="TokenType == JsonToken.PropertyName", span="787-787"];
m4_284 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="Read()", span="788-788"];
m4_285 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="IsStartToken(TokenType)", span="790-790"];
m4_286 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="int depth = Depth", span="792-792"];
m4_287 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="Read() && (depth < Depth)", span="794-794"];
m4_288 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Skip()", span="785-785"];
m4_28 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m4_24 [cluster="Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", span="872-872"];
m4_333 [cluster="Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", file="JsonReader.cs", label="_currentPosition.HasIndex", span="874-874"];
m4_334 [cluster="Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", file="JsonReader.cs", label="_currentPosition.Position++", span="875-875"];
m4_335 [cluster="Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", span="872-872"];
m4_281 [cluster="string.StartsWith(string)", file="JsonReader.cs", label="Entry string.StartsWith(string)", span="0-0"];
m4_177 [cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="JsonReader.cs", label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0"];
m4_56 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTime()", span="385-385"];
m4_57 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDateTime()", span="385-385"];
m4_64 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", span="401-401"];
m4_65 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="_readType = ReadType.ReadAsDateTimeOffset", span="403-403"];
m4_66 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="JsonToken t", span="405-405"];
m4_67 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="!ReadInternal()", span="409-409"];
m4_71 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="t == JsonToken.Comment", span="418-418"];
m4_72 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="t == JsonToken.Date", span="420-420"];
m4_76 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="t == JsonToken.Null", span="428-428"];
m4_79 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="t == JsonToken.String", span="432-432"];
m4_93 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="t == JsonToken.EndArray", span="458-458"];
m4_95 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading date. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="461-461"];
m4_68 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="SetToken(JsonToken.None)", span="411-411"];
m4_70 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="t = TokenType", span="416-416"];
m4_69 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="return null;", span="412-412"];
m4_73 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="Value is DateTime", span="422-422"];
m4_74 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Date, new DateTimeOffset((DateTime)Value), false)", span="423-423"];
m4_75 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="return (DateTimeOffset)Value;", span="425-425"];
m4_77 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="return null;", span="429-429"];
m4_78 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="DateTimeOffset dt", span="431-431"];
m4_80 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="string s = (string)Value", span="434-434"];
m4_81 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="435-435"];
m4_85 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", color=red, community=0, file="JsonReader.cs", label="7: DateTimeUtils.TryParseDateTime(s, DateParseHandling.DateTimeOffset, DateTimeZoneHandling, out temp)", span="442-442"];
m4_89 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="DateTimeOffset.TryParse(s, Culture, DateTimeStyles.RoundtripKind, out dt)", span="449-449"];
m4_82 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Null)", span="437-437"];
m4_84 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="object temp", span="441-441"];
m4_83 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="return null;", span="438-438"];
m4_86 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="dt = (DateTimeOffset)temp", span="444-444"];
m4_87 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Date, dt, false)", span="445-445"];
m4_88 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="return dt;", span="446-446"];
m4_90 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Date, dt, false)", span="451-451"];
m4_92 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to DateTimeOffset: {0}.''.FormatWith(CultureInfo.InvariantCulture, Value));", span="455-455"];
m4_91 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="return dt;", span="452-452"];
m4_94 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="return null;", span="459-459"];
m4_96 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", span="401-401"];
m4_100 [cluster="string.IsNullOrEmpty(string)", file="JsonReader.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m4_344 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m4_146 [cluster="System.Convert.ToByte(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToByte(object, System.IFormatProvider)", span="0-0"];
m4_208 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsStringInternal()", span="654-654"];
m4_209 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="_readType = ReadType.ReadAsString", span="656-656"];
m4_210 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="JsonToken t", span="658-658"];
m4_211 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="!ReadInternal()", span="662-662"];
m4_215 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="t == JsonToken.Comment", span="671-671"];
m4_216 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="t == JsonToken.String", span="673-673"];
m4_218 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="t == JsonToken.Null", span="676-676"];
m4_220 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="IsPrimitiveToken(t)", span="679-679"];
m4_228 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="t == JsonToken.EndArray", span="694-694"];
m4_230 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading string. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="697-697"];
m4_212 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="SetToken(JsonToken.None)", span="664-664"];
m4_214 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="t = TokenType", span="669-669"];
m4_213 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="return null;", span="665-665"];
m4_217 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="return (string)Value;", span="674-674"];
m4_219 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="return null;", span="677-677"];
m4_221 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="Value != null", span="681-681"];
m4_222 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="string s", span="683-683"];
m4_223 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="Value is IFormattable", span="684-684"];
m4_224 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="s = ((IFormattable)Value).ToString(null, Culture)", span="685-685"];
m4_225 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="s = Value.ToString()", span="687-687"];
m4_226 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="SetToken(JsonToken.String, s, false)", span="689-689"];
m4_227 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="return s;", span="690-690"];
m4_229 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="return null;", span="695-695"];
m4_231 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsStringInternal()", span="654-654"];
m4_233 [cluster="System.IFormattable.ToString(string, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.IFormattable.ToString(string, System.IFormatProvider)", span="0-0"];
m4_266 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="76-76"];
m4_27 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m4_402 [file="JsonReader.cs", label="Newtonsoft.Json.JsonReader", span=""];
m5_184 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", span="794-794"];
m5_190 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="ValidationUtils.ArgumentNotNull(jsonWriter, ''jsonWriter'')", span="796-796"];
m5_192 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="_formatting != null && jsonWriter.Formatting != _formatting", span="800-800"];
m5_193 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="previousFormatting = jsonWriter.Formatting", span="802-802"];
m5_194 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="jsonWriter.Formatting = _formatting.Value", span="803-803"];
m5_196 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="_dateFormatHandling != null && jsonWriter.DateFormatHandling != _dateFormatHandling", span="807-807"];
m5_197 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="previousDateFormatHandling = jsonWriter.DateFormatHandling", span="809-809"];
m5_198 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="jsonWriter.DateFormatHandling = _dateFormatHandling.Value", span="810-810"];
m5_200 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="_dateTimeZoneHandling != null && jsonWriter.DateTimeZoneHandling != _dateTimeZoneHandling", span="814-814"];
m5_201 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="previousDateTimeZoneHandling = jsonWriter.DateTimeZoneHandling", span="816-816"];
m5_202 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="jsonWriter.DateTimeZoneHandling = _dateTimeZoneHandling.Value", span="817-817"];
m5_204 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="_floatFormatHandling != null && jsonWriter.FloatFormatHandling != _floatFormatHandling", span="821-821"];
m5_205 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="previousFloatFormatHandling = jsonWriter.FloatFormatHandling", span="823-823"];
m5_206 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="jsonWriter.FloatFormatHandling = _floatFormatHandling.Value", span="824-824"];
m5_208 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="_stringEscapeHandling != null && jsonWriter.StringEscapeHandling != _stringEscapeHandling", span="828-828"];
m5_209 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="previousStringEscapeHandling = jsonWriter.StringEscapeHandling", span="830-830"];
m5_210 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="jsonWriter.StringEscapeHandling = _stringEscapeHandling.Value", span="831-831"];
m5_212 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="_culture != null && !_culture.Equals(jsonWriter.Culture)", span="835-835"];
m5_213 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="previousCulture = jsonWriter.Culture", span="837-837"];
m5_214 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="jsonWriter.Culture = _culture", span="838-838"];
m5_216 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="_dateFormatStringSet && jsonWriter.DateFormatString != _dateFormatString", span="842-842"];
m5_217 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="previousDateFormatString = jsonWriter.DateFormatString", span="844-844"];
m5_218 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="jsonWriter.DateFormatString = _dateFormatString", span="845-845"];
m5_219 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="TraceJsonWriter traceJsonWriter = (TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose)\r\n                ? new TraceJsonWriter(jsonWriter)\r\n                : null", span="848-850"];
m5_221 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="serializerWriter.Serialize(traceJsonWriter ?? jsonWriter, value, objectType)", span="853-853"];
m5_225 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="jsonWriter.Formatting = previousFormatting.Value", span="860-860"];
m5_227 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="jsonWriter.DateFormatHandling = previousDateFormatHandling.Value", span="862-862"];
m5_229 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="jsonWriter.DateTimeZoneHandling = previousDateTimeZoneHandling.Value", span="864-864"];
m5_231 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="jsonWriter.FloatFormatHandling = previousFloatFormatHandling.Value", span="866-866"];
m5_233 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="jsonWriter.StringEscapeHandling = previousStringEscapeHandling.Value", span="868-868"];
m5_235 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="jsonWriter.DateFormatString = previousDateFormatString", span="870-870"];
m5_237 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="jsonWriter.Culture = previousCulture", span="872-872"];
m5_191 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="Formatting? previousFormatting = null", span="799-799"];
m5_224 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="previousFormatting != null", span="859-859"];
m5_195 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="DateFormatHandling? previousDateFormatHandling = null", span="806-806"];
m5_226 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="previousDateFormatHandling != null", span="861-861"];
m5_199 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="DateTimeZoneHandling? previousDateTimeZoneHandling = null", span="813-813"];
m5_228 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="previousDateTimeZoneHandling != null", span="863-863"];
m5_203 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="FloatFormatHandling? previousFloatFormatHandling = null", span="820-820"];
m5_230 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="previousFloatFormatHandling != null", span="865-865"];
m5_207 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="StringEscapeHandling? previousStringEscapeHandling = null", span="827-827"];
m5_232 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="previousStringEscapeHandling != null", span="867-867"];
m5_211 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="CultureInfo previousCulture = null", span="834-834"];
m5_236 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="previousCulture != null", span="871-871"];
m5_215 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="string previousDateFormatString = null", span="841-841"];
m5_220 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="JsonSerializerInternalWriter serializerWriter = new JsonSerializerInternalWriter(this)", span="852-852"];
m5_222 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="traceJsonWriter != null", span="855-855"];
m5_223 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="TraceWriter.Trace(TraceLevel.Verbose, ''Serialized JSON: '' + Environment.NewLine + traceJsonWriter.GetJson(), null)", span="856-856"];
m5_234 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label=_dateFormatStringSet, span="869-869"];
m5_238 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", span="794-794"];
m5_108 [cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="615-615"];
m5_109 [cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs", label="PopulateInternal(reader, target)", span="617-617"];
m5_110 [cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="615-615"];
m5_132 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", span="675-675"];
m5_133 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="677-677"];
m5_135 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="_culture != null && !_culture.Equals(reader.Culture)", span="681-681"];
m5_136 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="previousCulture = reader.Culture", span="683-683"];
m5_137 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="reader.Culture = _culture", span="684-684"];
m5_139 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="_dateTimeZoneHandling != null && reader.DateTimeZoneHandling != _dateTimeZoneHandling", span="688-688"];
m5_140 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="previousDateTimeZoneHandling = reader.DateTimeZoneHandling", span="690-690"];
m5_141 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="reader.DateTimeZoneHandling = _dateTimeZoneHandling.Value", span="691-691"];
m5_143 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="_dateParseHandling != null && reader.DateParseHandling != _dateParseHandling", span="695-695"];
m5_144 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="previousDateParseHandling = reader.DateParseHandling", span="697-697"];
m5_145 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="reader.DateParseHandling = _dateParseHandling.Value", span="698-698"];
m5_147 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="_floatParseHandling != null && reader.FloatParseHandling != _floatParseHandling", span="702-702"];
m5_148 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="previousFloatParseHandling = reader.FloatParseHandling", span="704-704"];
m5_149 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="reader.FloatParseHandling = _floatParseHandling.Value", span="705-705"];
m5_151 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="_maxDepthSet && reader.MaxDepth != _maxDepth", span="709-709"];
m5_152 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="previousMaxDepth = reader.MaxDepth", span="711-711"];
m5_153 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="reader.MaxDepth = _maxDepth", span="712-712"];
m5_154 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="TraceJsonReader traceJsonReader = (TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose)\r\n                ? new TraceJsonReader(reader)\r\n                : null", span="715-717"];
m5_156 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="object value = serializerReader.Deserialize(traceJsonReader ?? reader, objectType, CheckAdditionalContent)", span="720-720"];
m5_160 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="reader.Culture = previousCulture", span="727-727"];
m5_162 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="reader.DateTimeZoneHandling = previousDateTimeZoneHandling.Value", span="729-729"];
m5_164 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="reader.DateParseHandling = previousDateParseHandling.Value", span="731-731"];
m5_166 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="reader.FloatParseHandling = previousFloatParseHandling.Value", span="733-733"];
m5_168 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="reader.MaxDepth = previousMaxDepth", span="735-735"];
m5_134 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="CultureInfo previousCulture = null", span="680-680"];
m5_159 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="previousCulture != null", span="726-726"];
m5_138 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="DateTimeZoneHandling? previousDateTimeZoneHandling = null", span="687-687"];
m5_161 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="previousDateTimeZoneHandling != null", span="728-728"];
m5_142 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="DateParseHandling? previousDateParseHandling = null", span="694-694"];
m5_163 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="previousDateParseHandling != null", span="730-730"];
m5_146 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="FloatParseHandling? previousFloatParseHandling = null", span="701-701"];
m5_165 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="previousFloatParseHandling != null", span="732-732"];
m5_150 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="int? previousMaxDepth = null", span="708-708"];
m5_155 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="JsonSerializerInternalReader serializerReader = new JsonSerializerInternalReader(this)", span="719-719"];
m5_157 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="traceJsonReader != null", span="722-722"];
m5_158 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="TraceWriter.Trace(TraceLevel.Verbose, ''Deserialized JSON: '' + Environment.NewLine + traceJsonReader.GetJson(), null)", span="723-723"];
m5_169 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="return value;", span="737-737"];
m5_167 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label=_maxDepthSet, span="734-734"];
m5_170 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", span="675-675"];
m5_111 [cluster="Newtonsoft.Json.JsonSerializer.PopulateInternal(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.PopulateInternal(Newtonsoft.Json.JsonReader, object)", span="620-620"];
m5_112 [cluster="Newtonsoft.Json.JsonSerializer.PopulateInternal(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="622-622"];
m5_113 [cluster="Newtonsoft.Json.JsonSerializer.PopulateInternal(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs", label="ValidationUtils.ArgumentNotNull(target, ''target'')", span="623-623"];
m5_115 [cluster="Newtonsoft.Json.JsonSerializer.PopulateInternal(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs", label="serializerReader.Populate(reader, target)", span="626-626"];
m5_114 [cluster="Newtonsoft.Json.JsonSerializer.PopulateInternal(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs", label="JsonSerializerInternalReader serializerReader = new JsonSerializerInternalReader(this)", span="625-625"];
m5_116 [cluster="Newtonsoft.Json.JsonSerializer.PopulateInternal(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.PopulateInternal(Newtonsoft.Json.JsonReader, object)", span="620-620"];
m5_249 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="883-883"];
m5_250 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JsonSerializer.cs", label="return GetMatchingConverter(_converters, type);", span="885-885"];
m5_251 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="883-883"];
m5_173 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", span="133-133"];
m5_172 [cluster="Newtonsoft.Json.Serialization.TraceJsonReader.TraceJsonReader(Newtonsoft.Json.JsonReader)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.TraceJsonReader(Newtonsoft.Json.JsonReader)", span="14-14"];
m5_263 [cluster="Newtonsoft.Json.JsonSerializer.OnError(Newtonsoft.Json.Serialization.ErrorEventArgs)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.OnError(Newtonsoft.Json.Serialization.ErrorEventArgs)", span="908-908"];
m5_264 [cluster="Newtonsoft.Json.JsonSerializer.OnError(Newtonsoft.Json.Serialization.ErrorEventArgs)", file="JsonSerializer.cs", label="EventHandler<ErrorEventArgs> error = Error", span="910-910"];
m5_266 [cluster="Newtonsoft.Json.JsonSerializer.OnError(Newtonsoft.Json.Serialization.ErrorEventArgs)", file="JsonSerializer.cs", label="error(this, e)", span="912-912"];
m5_265 [cluster="Newtonsoft.Json.JsonSerializer.OnError(Newtonsoft.Json.Serialization.ErrorEventArgs)", file="JsonSerializer.cs", label="error != null", span="911-911"];
m5_267 [cluster="Newtonsoft.Json.JsonSerializer.OnError(Newtonsoft.Json.Serialization.ErrorEventArgs)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.OnError(Newtonsoft.Json.Serialization.ErrorEventArgs)", span="908-908"];
m5_118 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="64-64"];
m5_262 [cluster="Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", span="63-63"];
m5_124 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="646-646"];
m5_125 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonSerializer.cs", label="return Deserialize(new JsonTextReader(reader), objectType);", span="648-648"];
m5_126 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="646-646"];
m5_104 [cluster="Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", span="605-605"];
m5_105 [cluster="Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", file="JsonSerializer.cs", label="Populate(new JsonTextReader(reader), target)", span="607-607"];
m5_106 [cluster="Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", span="605-605"];
m5_21 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="475-475"];
m5_22 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="JsonSerializer serializer = Create()", span="477-477"];
m5_23 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings != null", span="479-479"];
m5_24 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="ApplySerializerSettings(serializer, settings)", span="480-480"];
m5_25 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="return serializer;", span="482-482"];
m5_26 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="475-475"];
m5_180 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="789-789"];
m5_188 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializer.cs", label="SerializeInternal(jsonWriter, value, null)", span="791-791"];
m5_189 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="789-789"];
m5_3 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="435-435"];
m5_4 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="_referenceLoopHandling = JsonSerializerSettings.DefaultReferenceLoopHandling", span="437-437"];
m5_5 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="_missingMemberHandling = JsonSerializerSettings.DefaultMissingMemberHandling", span="438-438"];
m5_6 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="_nullValueHandling = JsonSerializerSettings.DefaultNullValueHandling", span="439-439"];
m5_7 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="_defaultValueHandling = JsonSerializerSettings.DefaultDefaultValueHandling", span="440-440"];
m5_8 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="_objectCreationHandling = JsonSerializerSettings.DefaultObjectCreationHandling", span="441-441"];
m5_9 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="_preserveReferencesHandling = JsonSerializerSettings.DefaultPreserveReferencesHandling", span="442-442"];
m5_10 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="_constructorHandling = JsonSerializerSettings.DefaultConstructorHandling", span="443-443"];
m5_11 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="_typeNameHandling = JsonSerializerSettings.DefaultTypeNameHandling", span="444-444"];
m5_12 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="_specialPropertyHandling = JsonSerializerSettings.DefaultSpecialPropertyHandling", span="445-445"];
m5_13 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="_context = JsonSerializerSettings.DefaultContext", span="446-446"];
m5_14 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="_binder = DefaultSerializationBinder.Instance", span="447-447"];
m5_15 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="_culture = JsonSerializerSettings.DefaultCulture", span="449-449"];
m5_16 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="_contractResolver = DefaultContractResolver.Instance", span="450-450"];
m5_17 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="435-435"];
m5_28 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="493-493"];
m5_29 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JsonSerializer.cs", label="Func<JsonSerializerSettings> defaultSettingsCreator = JsonConvert.DefaultSettings", span="496-496"];
m5_30 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JsonSerializer.cs", label="JsonSerializerSettings defaultSettings = (defaultSettingsCreator != null) ? defaultSettingsCreator() : null", span="497-497"];
m5_31 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JsonSerializer.cs", label="return Create(defaultSettings);", span="499-499"];
m5_32 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.CreateDefault()", span="493-493"];
m5_185 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object, System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object, System.Type)", span="778-778"];
m5_186 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object, System.Type)", file="JsonSerializer.cs", label="Serialize(new JsonTextWriter(textWriter), value, objectType)", span="780-780"];
m5_187 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object, System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object, System.Type)", span="778-778"];
m5_252 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="888-888"];
m5_253 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JsonSerializer.cs", label="converters != null", span="894-894"];
m5_255 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JsonSerializer.cs", label="i < converters.Count", span="896-896"];
m5_256 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JsonSerializer.cs", label="JsonConverter converter = converters[i]", span="898-898"];
m5_257 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JsonSerializer.cs", label="converter.CanConvert(objectType)", span="900-900"];
m5_254 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JsonSerializer.cs", label="int i = 0", span="896-896"];
m5_260 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JsonSerializer.cs", label="return null;", span="905-905"];
m5_259 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JsonSerializer.cs", label="i++", span="896-896"];
m5_258 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JsonSerializer.cs", label="return converter;", span="901-901"];
m5_261 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="888-888"];
m5_18 [cluster="Newtonsoft.Json.JsonSerializer.Create()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create()", span="461-461"];
m5_19 [cluster="Newtonsoft.Json.JsonSerializer.Create()", file="JsonSerializer.cs", label="return new JsonSerializer();", span="463-463"];
m5_20 [cluster="Newtonsoft.Json.JsonSerializer.Create()", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.Create()", span="461-461"];
m5_120 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="634-634"];
m5_121 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializer.cs", label="return Deserialize(reader, null);", span="636-636"];
m5_122 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="634-634"];
m5_239 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", span="17-17"];
m5_0 [cluster="Newtonsoft.Json.JsonSerializer.IsCheckAdditionalContentSet()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.IsCheckAdditionalContentSet()", span="426-426"];
m5_1 [cluster="Newtonsoft.Json.JsonSerializer.IsCheckAdditionalContentSet()", file="JsonSerializer.cs", label="return (_checkAdditionalContent != null);", span="428-428"];
m5_2 [cluster="Newtonsoft.Json.JsonSerializer.IsCheckAdditionalContentSet()", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.IsCheckAdditionalContentSet()", span="426-426"];
m5_34 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", span="511-511"];
m5_35 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="JsonSerializer serializer = CreateDefault()", span="513-513"];
m5_36 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings != null", span="514-514"];
m5_37 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="ApplySerializerSettings(serializer, settings)", span="515-515"];
m5_38 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="return serializer;", span="517-517"];
m5_39 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", span="511-511"];
m5_241 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="60-60"];
m5_127 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="658-658"];
m5_128 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonSerializer.cs", label="return (T)Deserialize(reader, typeof(T));", span="660-660"];
m5_129 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="658-658"];
m5_242 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.GetJson()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.GetJson()", span="31-31"];
m5_268 [cluster="System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", file="JsonSerializer.cs", label="Entry System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", span="0-0"];
m5_243 [cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", span="875-875"];
m5_244 [cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonSerializer.cs", label="_referenceResolver == null", span="877-877"];
m5_245 [cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonSerializer.cs", label="_referenceResolver = new DefaultReferenceResolver()", span="878-878"];
m5_246 [cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonSerializer.cs", label="return _referenceResolver;", span="880-880"];
m5_247 [cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", span="875-875"];
m5_175 [cluster="Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="25-25"];
m5_117 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52"];
m5_176 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="746-746"];
m5_177 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializer.cs", label="Serialize(new JsonTextWriter(textWriter), value)", span="748-748"];
m5_178 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="746-746"];
m5_107 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m5_179 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116"];
m5_174 [cluster="Newtonsoft.Json.Serialization.TraceJsonReader.GetJson()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonReader.GetJson()", span="23-23"];
m5_27 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", span="520-520"];
m5_40 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="!CollectionUtils.IsNullOrEmpty(settings.Converters)", span="522-522"];
m5_42 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="i < settings.Converters.Count", span="526-526"];
m5_43 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer.Converters.Insert(i, settings.Converters[i])", span="528-528"];
m5_45 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._typeNameHandling != null", span="533-533"];
m5_46 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer.TypeNameHandling = settings.TypeNameHandling", span="534-534"];
m5_47 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._specialPropertyHandling != null", span="535-535"];
m5_48 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer.SpecialPropertyHandling = settings.SpecialPropertyHandling", span="536-536"];
m5_49 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._typeNameAssemblyFormat != null", span="537-537"];
m5_50 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer.TypeNameAssemblyFormat = settings.TypeNameAssemblyFormat", span="538-538"];
m5_51 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._preserveReferencesHandling != null", span="539-539"];
m5_52 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer.PreserveReferencesHandling = settings.PreserveReferencesHandling", span="540-540"];
m5_53 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._referenceLoopHandling != null", span="541-541"];
m5_54 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer.ReferenceLoopHandling = settings.ReferenceLoopHandling", span="542-542"];
m5_55 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._missingMemberHandling != null", span="543-543"];
m5_56 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer.MissingMemberHandling = settings.MissingMemberHandling", span="544-544"];
m5_57 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._objectCreationHandling != null", span="545-545"];
m5_58 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer.ObjectCreationHandling = settings.ObjectCreationHandling", span="546-546"];
m5_59 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._nullValueHandling != null", span="547-547"];
m5_60 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer.NullValueHandling = settings.NullValueHandling", span="548-548"];
m5_61 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._defaultValueHandling != null", span="549-549"];
m5_62 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer.DefaultValueHandling = settings.DefaultValueHandling", span="550-550"];
m5_63 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._constructorHandling != null", span="551-551"];
m5_64 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer.ConstructorHandling = settings.ConstructorHandling", span="552-552"];
m5_65 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._context != null", span="553-553"];
m5_66 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer.Context = settings.Context", span="554-554"];
m5_67 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._checkAdditionalContent != null", span="555-555"];
m5_68 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer._checkAdditionalContent = settings._checkAdditionalContent", span="556-556"];
m5_69 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings.Error != null", span="558-558"];
m5_70 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer.Error += settings.Error", span="559-559"];
m5_71 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings.ContractResolver != null", span="561-561"];
m5_72 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer.ContractResolver = settings.ContractResolver", span="562-562"];
m5_73 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings.ReferenceResolver != null", span="563-563"];
m5_74 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer.ReferenceResolver = settings.ReferenceResolver", span="564-564"];
m5_75 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings.TraceWriter != null", span="565-565"];
m5_76 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer.TraceWriter = settings.TraceWriter", span="566-566"];
m5_77 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings.Binder != null", span="567-567"];
m5_78 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer.Binder = settings.Binder", span="568-568"];
m5_79 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._formatting != null", span="572-572"];
m5_80 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer._formatting = settings._formatting", span="573-573"];
m5_81 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._dateFormatHandling != null", span="574-574"];
m5_82 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer._dateFormatHandling = settings._dateFormatHandling", span="575-575"];
m5_83 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._dateTimeZoneHandling != null", span="576-576"];
m5_84 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer._dateTimeZoneHandling = settings._dateTimeZoneHandling", span="577-577"];
m5_85 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._dateParseHandling != null", span="578-578"];
m5_86 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer._dateParseHandling = settings._dateParseHandling", span="579-579"];
m5_87 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._dateFormatStringSet", span="580-580"];
m5_88 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer._dateFormatString = settings._dateFormatString", span="582-582"];
m5_89 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer._dateFormatStringSet = settings._dateFormatStringSet", span="583-583"];
m5_90 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._floatFormatHandling != null", span="585-585"];
m5_91 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer._floatFormatHandling = settings._floatFormatHandling", span="586-586"];
m5_92 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._floatParseHandling != null", span="587-587"];
m5_93 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer._floatParseHandling = settings._floatParseHandling", span="588-588"];
m5_94 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._stringEscapeHandling != null", span="589-589"];
m5_95 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer._stringEscapeHandling = settings._stringEscapeHandling", span="590-590"];
m5_96 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._culture != null", span="591-591"];
m5_97 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer._culture = settings._culture", span="592-592"];
m5_98 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings._maxDepthSet", span="593-593"];
m5_99 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer._maxDepth = settings._maxDepth", span="595-595"];
m5_100 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="serializer._maxDepthSet = settings._maxDepthSet", span="596-596"];
m5_41 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="int i = 0", span="526-526"];
m5_44 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="i++", span="526-526"];
m5_101 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", span="520-520"];
m5_240 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", span="55-55"];
m5_123 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="670-670"];
m5_130 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="return DeserializeInternal(reader, objectType);", span="672-672"];
m5_131 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="670-670"];
m5_102 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="50-50"];
m5_171 [cluster="System.Globalization.CultureInfo.Equals(object)", file="JsonSerializer.cs", label="Entry System.Globalization.CultureInfo.Equals(object)", span="0-0"];
m5_248 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.DefaultReferenceResolver()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Serialization.DefaultReferenceResolver.DefaultReferenceResolver()", span="31-31"];
m5_181 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="762-762"];
m5_182 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="SerializeInternal(jsonWriter, value, objectType)", span="764-764"];
m5_183 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="762-762"];
m5_103 [cluster="System.Collections.ObjectModel.Collection<T>.Insert(int, T)", file="JsonSerializer.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Insert(int, T)", span="0-0"];
m5_33 [cluster="System.Func<TResult>.Invoke()", file="JsonSerializer.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m5_119 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="69-69"];
m5_269 [file="JsonSerializer.cs", label="Newtonsoft.Json.JsonSerializer", span=""];
m7_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeProperty.User.User()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeProperty.User.User()", span="43-43"];
m7_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeProperty.Example()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeProperty.Example()", span="52-52"];
m7_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeProperty.Example()", file="JsonSerializerTest.cs", label="User user = new User\r\n            {\r\n                UserName = @''domain\username'',\r\n                Status = UserStatus.Deleted\r\n            }", span="55-59"];
m7_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeProperty.Example()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(user, Formatting.Indented)", span="61-61"];
m7_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeProperty.Example()", file="JsonSerializerTest.cs", label="Console.WriteLine(json)", span="63-63"];
m7_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeProperty.Example()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeProperty.Example()", span="52-52"];
m7_7 [cluster="System.Console.WriteLine(string)", file="JsonSerializerTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m7_6 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525"];
m8_124 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool, bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool, bool)", span="488-488"];
m8_876 [cluster="System.Collections.IDictionary.GetEnumerator()", file="JsonTextReader.cs", label="Entry System.Collections.IDictionary.GetEnumerator()", span="0-0"];
m8_897 [cluster="Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="55-55"];
m8_40 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToSnakeCaseTest()", file="JsonTextReader.cs", label="Assert.AreEqual(''i_phone'', StringUtils.ToSnakeCase('' IPhone''))", span="82-82"];
m8_543 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", span="39-39"];
m8_75 [cluster="Newtonsoft.Json.JsonReader.ReadForType(Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadForType(Newtonsoft.Json.Serialization.JsonContract, bool)", span="1159-1159"];
m8_739 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.GetPosition(int)", span="327-327"];
m8_104 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", span="237-237"];
m8_111 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="CheckPropertyName(reader, propertyName)", span="256-256"];
m8_118 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="275-275"];
m8_105 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="ValidationUtils.ArgumentNotNull(reader, nameof(reader))", span="239-239"];
m8_109 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="string propertyName = (string)reader.Value", span="250-250"];
m8_110 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="!reader.ReadAndMoveToContent()", span="251-251"];
m8_112 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="writer.WritePropertyName(propertyName)", span="261-261"];
m8_117 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="reader.Read()", span="273-273"];
m8_113 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="writer.WriteToken(reader, true, true, false)", span="262-262"];
m8_106 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="JTokenWriter writer = new JTokenWriter()", span="242-242"];
m8_108 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.PropertyName", span="248-248"];
m8_114 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.Comment", span="264-264"];
m8_107 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="writer.WriteStartObject()", span="244-244"];
m8_116 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="return writer.Token;", span="271-271"];
m8_115 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="writer.WriteEndObject()", span="270-270"];
m8_119 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", span="237-237"];
m8_1003 [cluster="Unk.ToDictionary", file="JsonTextReader.cs", label="Entry Unk.ToDictionary", span=""];
m8_48 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToSnakeCaseTest()", file="JsonTextReader.cs", label="Assert.AreEqual(''already_snake_case_'', StringUtils.ToSnakeCase(''already_snake_case_ ''))", span="90-90"];
m8_56 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", color=green, community=0, file="JsonTextReader.cs", label="1: return null;", span="155-155"];
m8_54 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToSnakeCase(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ToSnakeCase(string)", span="190-190"];
m8_51 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToSnakeCaseTest()", file="JsonTextReader.cs", label="Assert.AreEqual(''9999-12-31_t23:59:59.9999999_z'', StringUtils.ToSnakeCase(''9999-12-31T23:59:59.9999999Z''))", span="93-93"];
m8_53 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToSnakeCaseTest()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToSnakeCaseTest()", span="69-69"];
m8_55 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''No JSON content found and type '{0}' is not nullable.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="152-152"];
m8_50 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToSnakeCaseTest()", file="JsonTextReader.cs", label="Assert.AreEqual(''shouting_case'', StringUtils.ToSnakeCase(''SHOUTING_CASE''))", span="92-92"];
m8_64 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Additional text found in JSON string after finishing deserializing object.'');", span="175-175"];
m8_65 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="return deserializedValue;", span="180-180"];
m8_69 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="return null;", span="187-187"];
m8_71 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="throw;", span="195-195"];
m8_49 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToSnakeCaseTest()", file="JsonTextReader.cs", label="Assert.AreEqual(''is_json_property'', StringUtils.ToSnakeCase(''IsJSONProperty''))", span="91-91"];
m8_52 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToSnakeCaseTest()", file="JsonTextReader.cs", label="Assert.AreEqual(''hi!!_this_is_text._time_to_test.'', StringUtils.ToSnakeCase(''Hi!! This is text. Time to test.''))", span="94-94"];
m8_60 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="deserializedValue = CreateValueInternal(reader, objectType, contract, null, null, null, null)", span="166-166"];
m8_67 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="IsErrorHandled(null, contract, null, reader as IJsonLineInfo, reader.Path, ex)", span="184-184"];
m8_57 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="object deserializedValue", span="158-158"];
m8_63 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="reader.TokenType != JsonToken.Comment", span="173-173"];
m8_59 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="deserializedValue = DeserializeConvertable(converter, reader, objectType, null)", span="162-162"];
m8_61 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label=checkAdditionalContent, span="169-169"];
m8_62 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="reader.Read()", span="171-171"];
m8_68 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="HandleError(reader, false, 0)", span="186-186"];
m8_70 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="ClearErrorContext()", span="194-194"];
m8_58 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="converter != null && converter.CanRead", span="160-160"];
m8_66 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label=Exception, span="182-182"];
m8_72 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", span="135-135"];
m8_76 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", span="2092-2092"];
m8_890 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="2094-2094"];
m8_891 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Started deserializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, objectType, converter.GetType())), null)", span="2096-2096"];
m8_892 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonTextReader.cs", label="object value = converter.ReadJson(reader, objectType, existingValue, GetInternalSerializer())", span="2099-2099"];
m8_893 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="2101-2101"];
m8_894 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Finished deserializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, objectType, converter.GetType())), null)", span="2103-2103"];
m8_895 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonTextReader.cs", label="return value;", span="2106-2106"];
m8_896 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", span="2092-2092"];
m8_39 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToSnakeCaseTest()", file="JsonTextReader.cs", label="Assert.AreEqual(''i_phone'', StringUtils.ToSnakeCase(''I  Phone''))", span="81-81"];
m8_335 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92"];
m8_735 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonTextReader.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m8_87 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="239-239"];
m8_594 [cluster="Newtonsoft.Json.Serialization.Func<TResult>.Invoke()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.Func<TResult>.Invoke()", span="3038-3038"];
m8_871 [cluster="Unk.All", file="JsonTextReader.cs", label="Entry Unk.All", span=""];
m8_479 [cluster="System.Enum.ToObject(System.Type, object)", file="JsonTextReader.cs", label="Entry System.Enum.ToObject(System.Type, object)", span="0-0"];
m8_1006 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="2500-2500"];
m8_1070 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="propertyPresence = (CoerceEmptyStringToNull(property.PropertyType, property.PropertyContract, (string)reader.Value))\r\n                            ? PropertyPresence.Null\r\n                            : PropertyPresence.Value", span="2508-2510"];
m8_1066 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="property != null && requiredProperties != null", span="2502-2502"];
m8_1068 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="reader.TokenType", span="2505-2505"];
m8_1075 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="requiredProperties[property] = propertyPresence", span="2521-2521"];
m8_1067 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="PropertyPresence propertyPresence", span="2504-2504"];
m8_1069 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="JsonToken.String", span="2507-2507"];
m8_1071 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="JsonToken.Null", span="2512-2512"];
m8_1074 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="propertyPresence = PropertyPresence.Value", span="2517-2517"];
m8_1073 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="propertyPresence = PropertyPresence.Null", span="2514-2514"];
m8_1072 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="JsonToken.Undefined", span="2513-2513"];
m8_1076 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="2500-2500"];
m8_276 [cluster="Unk.ReadMetadataProperties", file="JsonTextReader.cs", label="Entry Unk.ReadMetadataProperties", span=""];
m8_542 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="177-177"];
m8_402 [cluster="Newtonsoft.Json.Serialization.ISerializationBinder.BindToType(string, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.ISerializationBinder.BindToType(string, string)", span="42-42"];
m8_539 [cluster="System.Type.IsValueType()", file="JsonTextReader.cs", label="Entry System.Type.IsValueType()", span="547-547"];
m8_38 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToSnakeCaseTest()", file="JsonTextReader.cs", label="Assert.AreEqual(''i_phone'', StringUtils.ToSnakeCase(''I Phone''))", span="80-80"];
m8_551 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.AddReference(object, string, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.AddReference(object, string, object)", span="64-64"];
m8_538 [cluster="System.Nullable<T>.GetValueOrDefault(T)", file="JsonTextReader.cs", label="Entry System.Nullable<T>.GetValueOrDefault(T)", span="0-0"];
m8_934 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", span="2431-2431"];
m8_1042 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="value = CreateValueInternal(reader, null, null, null, contract, member, null)", span="2440-2440"];
m8_1039 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="object value", span="2433-2433"];
m8_1040 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="contract.ExtensionDataIsJToken", span="2434-2434"];
m8_1043 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="return value;", span="2442-2442"];
m8_1041 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="value = JToken.ReadFrom(reader)", span="2436-2436"];
m8_1044 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", span="2431-2431"];
m8_544 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", span="1109-1109"];
m8_545 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1113-1113"];
m8_546 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Read object reference Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, id, value.GetType())), null)", span="1115-1115"];
m8_547 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="Serializer.GetReferenceResolver().AddReference(this, id, value)", span="1118-1118"];
m8_549 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Error reading object reference '{0}'.''.FormatWith(CultureInfo.InvariantCulture, id), ex);", span="1122-1122"];
m8_548 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label=Exception, span="1120-1120"];
m8_550 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", span="1109-1109"];
m8_737 [cluster="System.Collections.Generic.Stack<T>.Peek()", file="JsonTextReader.cs", label="Entry System.Collections.Generic.Stack<T>.Peek()", span="0-0"];
m8_337 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(object, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(object, string)", span="38-38"];
m8_877 [cluster="System.Collections.IEnumerator.MoveNext()", file="JsonTextReader.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m8_274 [cluster="Unk.ReadAndAssert", file="JsonTextReader.cs", label="Entry Unk.ReadAndAssert", span=""];
m8_26 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected initial token '{0}' when populating object. Expected JSON object or array.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="121-121"];
m8_869 [cluster="string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", file="JsonTextReader.cs", label="Entry string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m8_281 [cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31"];
m8_540 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="1126-1126"];
m8_552 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonTextReader.cs", label="return ((value & flag) == flag);", span="1128-1128"];
m8_553 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="1126-1126"];
m8_29 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToSnakeCaseTest()", file="JsonTextReader.cs", label="Assert.AreEqual(''url_value'', StringUtils.ToSnakeCase(''URLValue''))", span="71-71"];
m8_874 [cluster="Unk.ForgivingCaseSensitiveFind", file="JsonTextReader.cs", label="Entry Unk.ForgivingCaseSensitiveFind", span=""];
m8_37 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToSnakeCaseTest()", file="JsonTextReader.cs", label="Assert.AreEqual(''i_phone'', StringUtils.ToSnakeCase(''IPhone''))", span="79-79"];
m8_164 [cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48"];
m8_282 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonTextReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m8_74 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="374-374"];
m8_193 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="(matchingConverter = Serializer.GetMatchingConverter(contract.UnderlyingType)) != null", span="398-398"];
m8_182 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="JsonConverter converter = null", span="376-376"];
m8_183 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="memberConverter != null", span="377-377"];
m8_184 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="converter = memberConverter", span="380-380"];
m8_185 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="containerProperty?.ItemConverter != null", span="382-382"];
m8_186 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="converter = containerProperty.ItemConverter", span="384-384"];
m8_187 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="containerContract?.ItemConverter != null", span="386-386"];
m8_188 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="converter = containerContract.ItemConverter", span="388-388"];
m8_189 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="contract != null", span="390-390"];
m8_191 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="contract.Converter != null", span="393-393"];
m8_192 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="converter = contract.Converter", span="396-396"];
m8_195 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="contract.InternalConverter != null", span="403-403"];
m8_196 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="converter = contract.InternalConverter", span="406-406"];
m8_194 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="converter = matchingConverter", span="401-401"];
m8_197 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="return converter;", span="409-409"];
m8_190 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="JsonConverter matchingConverter", span="392-392"];
m8_198 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="374-374"];
m8_88 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", span="210-210"];
m8_89 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="ValidationUtils.ArgumentNotNull(reader, nameof(reader))", span="212-212"];
m8_90 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="contract != null", span="214-214"];
m8_91 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="contract.UnderlyingType == typeof(JRaw)", span="216-216"];
m8_92 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="return JRaw.Create(reader);", span="218-218"];
m8_93 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.Null\r\n                    && !(contract.UnderlyingType == typeof(JValue) || contract.UnderlyingType == typeof(JToken))", span="220-221"];
m8_97 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="writer.WriteToken(reader)", span="230-230"];
m8_95 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="JToken token", span="227-227"];
m8_94 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="return null;", span="223-223"];
m8_99 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="return token;", span="234-234"];
m8_96 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="JTokenWriter writer = new JTokenWriter()", span="228-228"];
m8_98 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="token = writer.Token", span="231-231"];
m8_100 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", span="210-210"];
m8_476 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="142-142"];
m8_80 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", span="2525-2525"];
m8_1077 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonTextReader.cs", label="ClearErrorContext()", span="2527-2527"];
m8_1078 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonTextReader.cs", label=readPastError, span="2529-2529"];
m8_1079 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonTextReader.cs", label="reader.Skip()", span="2531-2531"];
m8_1080 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonTextReader.cs", label="reader.Depth > (initialDepth + 1)", span="2533-2533"];
m8_1081 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonTextReader.cs", label="!reader.Read()", span="2535-2535"];
m8_1082 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", span="2525-2525"];
m8_35 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToSnakeCaseTest()", file="JsonTextReader.cs", label="Assert.AreEqual(''person'', StringUtils.ToSnakeCase(''Person''))", span="77-77"];
m8_751 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="AddReference(reader, id, underlyingList)", span="1564-1564"];
m8_755 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="OnDeserializing(reader, contract, underlyingList)", span="1574-1574"];
m8_758 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="contract.ItemContract = GetContractSafe(contract.CollectionItemType)", span="1580-1580"];
m8_759 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonConverter collectionItemConverter = GetConverter(contract.ItemContract, null, contract, containerProperty)", span="1583-1583"];
m8_768 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="value = DeserializeConvertable(collectionItemConverter, reader, contract.CollectionItemType, null)", span="1604-1604"];
m8_769 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="value = CreateValueInternal(reader, contract.CollectionItemType, contract.ItemContract, null, contract, containerProperty, null)", span="1608-1608"];
m8_773 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="IsErrorHandled(underlyingList, contract, errorPosition.Position, reader as IJsonLineInfo, reader.Path, ex)", span="1624-1624"];
m8_774 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="HandleError(reader, true, initialDepth)", span="1626-1626"];
m8_781 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="ThrowUnexpectedEndException(reader, contract, underlyingList, ''Unexpected end when deserializing array.'')", span="1648-1648"];
m8_782 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="OnDeserialized(reader, contract, underlyingList)", span="1651-1651"];
m8_766 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="object value", span="1600-1600"];
m8_762 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="reader.ReadForType(contract.ItemContract, collectionItemConverter != null)", span="1592-1592"];
m8_761 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="bool finished = false", span="1587-1587"];
m8_756 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="int initialDepth = reader.Depth", span="1576-1576"];
m8_760 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="int? previousErrorIndex = null", span="1585-1585"];
m8_747 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="object underlyingList = list is IWrappedCollection", span="1560-1560"];
m8_750 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="id != null", span="1562-1562"];
m8_752 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="list.IsFixedSize", span="1568-1568"];
m8_757 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="contract.ItemContract == null", span="1578-1578"];
m8_767 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="collectionItemConverter != null && collectionItemConverter.CanRead", span="1602-1602"];
m8_770 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="list.Add(value)", span="1611-1611"];
m8_772 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonPosition errorPosition = reader.GetPosition(initialDepth)", span="1622-1622"];
m8_778 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw;", span="1641-1641"];
m8_775 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="previousErrorIndex != null && previousErrorIndex == errorPosition.Position", span="1628-1628"];
m8_780 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!finished", span="1646-1646"];
m8_783 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="return underlyingList;", span="1652-1652"];
m8_749 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label=list, span="1560-1560"];
m8_753 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="reader.Skip()", span="1570-1570"];
m8_763 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="reader.TokenType", span="1594-1594"];
m8_776 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Infinite loop detected from error handling.'', ex);", span="1632-1632"];
m8_779 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!finished", span="1644-1644"];
m8_748 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="wrappedCollection ? wrappedCollection", span="1560-1560"];
m8_754 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="return underlyingList;", span="1571-1571"];
m8_771 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label=Exception, span="1620-1620"];
m8_777 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="previousErrorIndex = errorPosition.Position", span="1636-1636"];
m8_765 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="finished = true", span="1597-1597"];
m8_764 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.EndArray", span="1596-1596"];
m8_784 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1558-1558"];
m8_404 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", span="815-815"];
m8_410 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="message = message.FormatWith(CultureInfo.InvariantCulture, objectType, GetExpectedDescription(contract))", span="826-826"];
m8_406 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not resolve type '{0}' to a JsonContract.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="819-819"];
m8_411 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, message);", span="828-828"];
m8_409 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="string message = @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type '{0}' because the type requires a {1} to deserialize correctly.'' + Environment.NewLine +\r\n                                 @''To fix this error either change the JSON to a {1} or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.'' + Environment.NewLine", span="824-825"];
m8_405 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="contract == null", span="817-817"];
m8_407 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="!(contract is JsonArrayContract ", span="822-822"];
m8_408 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label=arrayContract, span="822-822"];
m8_413 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="return arrayContract;", span="831-831"];
m8_412 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", span="815-815"];
m8_103 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="495-495"];
m8_43 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToSnakeCaseTest()", file="JsonTextReader.cs", label="Assert.AreEqual(''vm_q'', StringUtils.ToSnakeCase(''VmQ''))", span="85-85"];
m8_46 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToSnakeCaseTest()", file="JsonTextReader.cs", label="Assert.AreEqual(''sn_a__k_ec_as_e'', StringUtils.ToSnakeCase(''SnA__kEcAsE''))", span="88-88"];
m8_44 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToSnakeCaseTest()", file="JsonTextReader.cs", label="Assert.AreEqual(''xml2_json'', StringUtils.ToSnakeCase(''Xml2Json''))", span="86-86"];
m8_45 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToSnakeCaseTest()", file="JsonTextReader.cs", label="Assert.AreEqual(''sn_ak_ec_as_e'', StringUtils.ToSnakeCase(''SnAkEcAsE''))", span="87-87"];
m8_47 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToSnakeCaseTest()", file="JsonTextReader.cs", label="Assert.AreEqual(''sn_a__k_ec_as_e'', StringUtils.ToSnakeCase(''SnA__ kEcAsE''))", span="89-89"];
m8_283 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="583-583"];
m8_302 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="newValue = Serializer.GetReferenceResolver().ResolveReference(this, reference)", span="620-620"];
m8_303 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="622-622"];
m8_304 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader, reader.Path, ''Resolved object reference '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, newValue.GetType())), null)", span="624-624"];
m8_312 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="ResolveTypeName(typeTokenReader, ref objectType, ref contract, member, containerContract, containerMember, qualifiedTypeName)", span="637-637"];
m8_329 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="newValue = CreateList(listReader, objectType, contract, member, existingValue, id)", span="668-668"];
m8_291 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(refToken, refToken.Path, ''JSON reference {0} property must have a string or null value.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName), null);", span="597-597"];
m8_301 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(additionalContent, additionalContent.Path, ''Additional content found in JSON reference object. A JSON reference object should only have a {0} property.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName), null);", span="617-617"];
m8_293 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="JToken additionalContent = null", span="601-601"];
m8_298 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="string reference = (string)refToken", span="611-611"];
m8_300 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="additionalContent != null", span="615-615"];
m8_305 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.Skip()", span="627-627"];
m8_309 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="string qualifiedTypeName = (string)typeToken", span="634-634"];
m8_310 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="JsonReader typeTokenReader = typeToken.CreateReader()", span="635-635"];
m8_311 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="typeTokenReader.ReadAndAssert()", span="636-636"];
m8_313 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="JToken valueToken = current[JsonTypeReflector.ValuePropertyName]", span="639-639"];
m8_284 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="id = null", span="585-585"];
m8_324 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="id = (string)idToken", span="661-661"];
m8_327 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="JsonReader listReader = valuesToken.CreateReader()", span="666-666"];
m8_328 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="listReader.ReadAndAssert()", span="667-667"];
m8_330 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.Skip()", span="670-670"];
m8_288 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="JToken refToken = current[JsonTypeReflector.RefPropertyName]", span="592-592"];
m8_290 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="refToken.Type != JTokenType.String && refToken.Type != JTokenType.Null", span="595-595"];
m8_295 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="additionalContent = property.Next", span="604-604"];
m8_297 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="additionalContent = property.Previous", span="608-608"];
m8_286 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.StartObject", span="588-588"];
m8_287 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="JObject current = (JObject)reader.CurrentToken", span="590-590"];
m8_316 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.ReadAndAssert()", span="644-644"];
m8_317 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.PropertyName", span="645-645"];
m8_318 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="(string)reader.Value == JsonTypeReflector.ValuePropertyName", span="647-647"];
m8_320 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.ReadAndAssert()", span="653-653"];
m8_321 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.Skip()", span="654-654"];
m8_332 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.ReadAndAssert()", span="675-675"];
m8_292 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="JToken property = refToken.Parent", span="600-600"];
m8_294 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="property.Next != null", span="602-602"];
m8_296 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="property.Previous != null", span="606-606"];
m8_299 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reference != null", span="613-613"];
m8_285 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="newValue = null", span="586-586"];
m8_306 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="return true;", span="628-628"];
m8_319 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="return false;", span="649-649"];
m8_331 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="return true;", span="671-671"];
m8_333 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="return false;", span="676-676"];
m8_307 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="JToken typeToken = current[JsonTypeReflector.TypePropertyName]", span="631-631"];
m8_308 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="typeToken != null", span="632-632"];
m8_314 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="valueToken != null", span="640-640"];
m8_322 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="JToken idToken = current[JsonTypeReflector.IdPropertyName]", span="658-658"];
m8_323 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="idToken != null", span="659-659"];
m8_325 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="JToken valuesToken = current[JsonTypeReflector.ArrayValuesPropertyName]", span="663-663"];
m8_326 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="valuesToken != null", span="664-664"];
m8_289 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="refToken != null", span="593-593"];
m8_315 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label=true, span="642-642"];
m8_334 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="583-583"];
m8_630 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserialized(object, System.Runtime.Serialization.StreamingContext)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserialized(object, System.Runtime.Serialization.StreamingContext)", span="284-284"];
m8_502 [cluster="Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", span="44-44"];
m8_163 [cluster="System.Convert.FromBase64String(string)", file="JsonTextReader.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m8_625 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1279-1279"];
m8_626 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1281-1281"];
m8_627 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Finished deserializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="1283-1283"];
m8_628 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonTextReader.cs", label="contract.InvokeOnDeserialized(value, Serializer._context)", span="1286-1286"];
m8_629 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1279-1279"];
m8_593 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", span="292-292"];
m8_32 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToSnakeCaseTest()", file="JsonTextReader.cs", label="Assert.AreEqual(''i'', StringUtils.ToSnakeCase(''I''))", span="74-74"];
m8_73 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonTextReader.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m8_275 [cluster="Unk.ReadMetadataPropertiesToken", file="JsonTextReader.cs", label="Entry Unk.ReadMetadataPropertiesToken", span=""];
m8_478 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="666-666"];
m8_880 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", span="2445-2445"];
m8_1053 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="2465-2465"];
m8_1054 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate) && property.Writable", span="2468-2468"];
m8_1055 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label="property.ValueProvider.SetValue(newObject, EnsureType(reader, property.GetResolvedDefaultValue(), CultureInfo.InvariantCulture, property.PropertyContract, property.PropertyType))", span="2470-2470"];
m8_1062 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label="IsErrorHandled(newObject, contract, property.PropertyName, reader as IJsonLineInfo, reader.Path, ex)", span="2488-2488"];
m8_1063 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label="HandleError(reader, true, initialDepth)", span="2490-2490"];
m8_1050 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Required property '{0}' not found in JSON.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="2458-2458"];
m8_1058 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Required property '{0}' expects a value but got null.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="2477-2477"];
m8_1060 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Required property '{0}' expects a non-null value.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="2481-2481"];
m8_1052 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label="property.PropertyContract == null", span="2463-2463"];
m8_1061 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label=Exception, span="2486-2486"];
m8_1064 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label="throw;", span="2494-2494"];
m8_1049 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label="resolvedRequired == Required.AllowNull || resolvedRequired == Required.Always", span="2456-2456"];
m8_1057 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label="resolvedRequired == Required.Always", span="2475-2475"];
m8_1059 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label="resolvedRequired == Required.DisallowNull", span="2479-2479"];
m8_1045 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label="presence == PropertyPresence.None || presence == PropertyPresence.Null", span="2447-2447"];
m8_1046 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label="Required resolvedRequired = property.Ignored ? Required.Default : property._required ?? contract.ItemRequired ?? Required.Default", span="2451-2451"];
m8_1047 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label=presence, span="2453-2453"];
m8_1051 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label="setDefaultValue && !property.Ignored", span="2461-2461"];
m8_1048 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label="PropertyPresence.None", span="2455-2455"];
m8_1056 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label="PropertyPresence.Null", span="2474-2474"];
m8_1065 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", span="2445-2445"];
m8_562 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", span="1153-1153"];
m8_580 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="contract.DefaultCreator != null && (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="1193-1193"];
m8_564 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot create and populate list type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.CreatedType));", span="1158-1158"];
m8_590 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1214-1214"];
m8_591 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1217-1217"];
m8_574 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="contract.IsReadOnlyOrFixedSize", span="1181-1181"];
m8_581 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="object list = contract.DefaultCreator()", span="1195-1195"];
m8_586 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="contract.HasParameterizedCreatorInternal", span="1205-1205"];
m8_563 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="!contract.CanDeserialize", span="1156-1156"];
m8_589 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="!contract.IsInstantiable", span="1212-1212"];
m8_571 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="list = contract.CreateWrapper(list)", span="1174-1174"];
m8_578 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="list = contract.CreateWrapper(list)", span="1188-1188"];
m8_583 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="list = contract.CreateWrapper(list)", span="1199-1199"];
m8_565 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="contract.OverrideCreator != null", span="1161-1161"];
m8_566 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="contract.HasParameterizedCreator", span="1163-1163"];
m8_568 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="return contract.CreateTemporaryCollection();", span="1166-1166"];
m8_569 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="object list = contract.OverrideCreator()", span="1170-1170"];
m8_570 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="contract.ShouldCreateWrapper", span="1172-1172"];
m8_576 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="IList list = contract.CreateTemporaryCollection()", span="1184-1184"];
m8_577 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="contract.ShouldCreateWrapper", span="1186-1186"];
m8_582 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="contract.ShouldCreateWrapper", span="1197-1197"];
m8_588 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="return contract.CreateTemporaryCollection();", span="1208-1208"];
m8_575 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultCreator = true", span="1183-1183"];
m8_585 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="return (IList)list;", span="1203-1203"];
m8_587 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultCreator = true", span="1207-1207"];
m8_567 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultCreator = true", span="1165-1165"];
m8_573 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="return (IList)list;", span="1178-1178"];
m8_572 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultCreator = false", span="1177-1177"];
m8_579 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="return list;", span="1191-1191"];
m8_584 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultCreator = false", span="1202-1202"];
m8_592 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", span="1153-1153"];
m8_868 [cluster="Unk.ToArray", file="JsonTextReader.cs", label="Entry Unk.ToArray", span=""];
m8_161 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="929-929"];
m8_457 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="targetType == null", span="931-931"];
m8_458 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="return value;", span="933-933"];
m8_459 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="Type valueType = ReflectionUtils.GetObjectType(value)", span="936-936"];
m8_460 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="valueType != targetType", span="940-940"];
m8_461 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="value == null && contract.IsNullable", span="942-942"];
m8_463 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="contract.IsConvertable", span="949-949"];
m8_464 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract)contract", span="951-951"];
m8_465 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="contract.IsEnum", span="953-953"];
m8_466 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="value is string", span="955-955"];
m8_467 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="return Enum.Parse(contract.NonNullableUnderlyingType, value.ToString(), true);", span="957-957"];
m8_469 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="return Enum.ToObject(contract.NonNullableUnderlyingType, value);", span="961-961"];
m8_470 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="return Convert.ChangeType(value, contract.NonNullableUnderlyingType, culture);", span="973-973"];
m8_471 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="return ConvertUtils.ConvertOrCast(value, culture, contract.NonNullableUnderlyingType);", span="976-976"];
m8_473 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Error converting value {0} to type '{1}'.''.FormatWith(CultureInfo.InvariantCulture, MiscellaneousUtils.FormatValueForPrint(value), targetType), ex);", span="980-980"];
m8_474 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="return value;", span="984-984"];
m8_462 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="return null;", span="944-944"];
m8_468 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="ConvertUtils.IsInteger(primitiveContract.TypeCode)", span="959-959"];
m8_472 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label=Exception, span="978-978"];
m8_475 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="929-929"];
m8_403 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="87-87"];
m8_162 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CoerceEmptyStringToNull(System.Type, Newtonsoft.Json.Serialization.JsonContract, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CoerceEmptyStringToNull(System.Type, Newtonsoft.Json.Serialization.JsonContract, string)", span="345-345"];
m8_165 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CoerceEmptyStringToNull(System.Type, Newtonsoft.Json.Serialization.JsonContract, string)", file="JsonTextReader.cs", label="return string.IsNullOrEmpty(s) && objectType != null && objectType != typeof(string) && objectType != typeof(object) && contract != null && contract.IsNullable;", span="347-347"];
m8_166 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CoerceEmptyStringToNull(System.Type, Newtonsoft.Json.Serialization.JsonContract, string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CoerceEmptyStringToNull(System.Type, Newtonsoft.Json.Serialization.JsonContract, string)", span="345-345"];
m8_28 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToSnakeCaseTest()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToSnakeCaseTest()", span="69-69"];
m8_736 [cluster="System.Collections.Generic.Stack<T>.Pop()", file="JsonTextReader.cs", label="Entry System.Collections.Generic.Stack<T>.Pop()", span="0-0"];
m8_82 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", span="200-200"];
m8_83 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonTextReader.cs", label="InternalSerializer == null", span="202-202"];
m8_84 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonTextReader.cs", label="InternalSerializer = new JsonSerializerProxy(this)", span="204-204"];
m8_85 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonTextReader.cs", label="return InternalSerializer;", span="207-207"];
m8_86 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", span="200-200"];
m8_481 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="598-598"];
m8_452 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", span="353-353"];
m8_159 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="412-412"];
m8_202 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="Serializer.MetadataPropertyHandling == MetadataPropertyHandling.Ignore", span="417-417"];
m8_205 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="Serializer.MetadataPropertyHandling == MetadataPropertyHandling.ReadAhead", span="423-423"];
m8_218 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="ReadMetadataPropertiesToken(tokenReader, ref resolvedObjectType, ref contract, member, containerContract, containerMember, existingValue, out object newValue, out id)", span="442-442"];
m8_221 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="ReadMetadataProperties(reader, ref resolvedObjectType, ref contract, member, containerContract, containerMember, existingValue, out object newValue, out id)", span="450-450"];
m8_223 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="HasNoDefinedType(contract)", span="456-456"];
m8_224 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return CreateJObject(reader);", span="458-458"];
m8_232 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="targetObject = CreateNewObject(reader, objectContract, member, containerMember, id, out createdFromNonDefaultCreator)", span="475-475"];
m8_235 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return PopulateObject(targetObject, reader, objectContract, member, id);", span="484-484"];
m8_238 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="Serializer.MetadataPropertyHandling != MetadataPropertyHandling.Ignore\r\n                        && reader.TokenType == JsonToken.PropertyName\r\n                        && string.Equals(reader.Value.ToString(), JsonTypeReflector.ValuePropertyName, StringComparison.Ordinal)", span="490-492"];
m8_242 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="object value = CreateValueInternal(reader, resolvedObjectType, primitiveContract, member, null, null, existingValue)", span="503-503"];
m8_249 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="IDictionary dictionary = CreateNewDictionary(reader, dictionaryContract, out bool createdFromNonDefaultCreator)", span="517-517"];
m8_259 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="PopulateDictionary(dictionary, reader, dictionaryContract, member, id)", span="542-542"];
m8_266 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="targetDictionary = PopulateDictionary(dictionaryContract.ShouldCreateWrapper ? dictionaryContract.CreateWrapper(existingValue) : (IDictionary)existingValue, reader, dictionaryContract, member, id)", span="559-559"];
m8_269 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="message = message.FormatWith(CultureInfo.InvariantCulture, resolvedObjectType, GetExpectedDescription(contract))", span="578-578"];
m8_201 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="Type resolvedObjectType = objectType", span="415-415"];
m8_252 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="523-523"];
m8_254 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnSerializing on readonly dictionary, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="528-528"];
m8_256 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnError on readonly list, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="533-533"];
m8_258 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot deserialize readonly or fixed size dictionary: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="538-538"];
m8_241 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing primitive value: '' + reader.TokenType);", span="500-500"];
m8_270 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, message);", span="580-580"];
m8_227 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="bool createdFromNonDefaultCreator = false", span="465-465"];
m8_203 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="reader.ReadAndAssert()", span="420-420"];
m8_206 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="!(reader is JTokenReader ", span="425-425"];
m8_220 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="reader.ReadAndAssert()", span="449-449"];
m8_217 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="reader = tokenReader", span="439-439"];
m8_219 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return newValue;", span="444-444"];
m8_225 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="contract.ContractType", span="461-461"];
m8_228 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonObjectContract objectContract = (JsonObjectContract)contract", span="466-466"];
m8_230 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="existingValue != null && (resolvedObjectType == objectType || resolvedObjectType.IsAssignableFrom(existingValue.GetType()))", span="469-469"];
m8_237 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract)contract", span="488-488"];
m8_246 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)contract", span="512-512"];
m8_251 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="id != null", span="521-521"];
m8_253 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="contract.OnSerializingCallbacks.Count > 0", span="526-526"];
m8_255 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="contract.OnErrorCallbacks.Count > 0", span="531-531"];
m8_222 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return newValue;", span="452-452"];
m8_204 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="id = null", span="421-421"];
m8_233 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label=createdFromNonDefaultCreator, span="479-479"];
m8_234 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return targetObject;", span="481-481"];
m8_231 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="targetObject = existingValue", span="471-471"];
m8_239 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="reader.ReadAndAssert()", span="494-494"];
m8_268 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="string message = @''Cannot deserialize the current JSON object (e.g. {{''''name'''':''''value''''}}) into type '{0}' because the type requires a {1} to deserialize correctly.'' + Environment.NewLine +\r\n                             @''To fix this error either change the JSON to a {1} or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.'' + Environment.NewLine", span="576-577"];
m8_240 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.StartObject", span="498-498"];
m8_243 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="reader.ReadAndAssert()", span="505-505"];
m8_244 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return value;", span="506-506"];
m8_248 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="existingValue == null", span="515-515"];
m8_247 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="object targetDictionary", span="513-513"];
m8_250 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label=createdFromNonDefaultCreator, span="519-519"];
m8_262 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return creator(dictionary);", span="548-548"];
m8_263 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="dictionary is IWrappedDictionary", span="550-550"];
m8_264 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return ((IWrappedDictionary)dictionary).UnderlyingDictionary;", span="552-552"];
m8_265 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="targetDictionary = dictionary", span="555-555"];
m8_257 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="!dictionaryContract.HasParameterizedCreatorInternal", span="536-536"];
m8_260 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label=createdFromNonDefaultCreator, span="544-544"];
m8_267 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return targetDictionary;", span="562-562"];
m8_200 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="string id", span="414-414"];
m8_229 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="object targetObject", span="467-467"];
m8_208 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JToken t = JToken.ReadFrom(reader)", span="427-427"];
m8_210 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="tokenReader.Culture = reader.Culture", span="429-429"];
m8_211 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="tokenReader.DateFormatString = reader.DateFormatString", span="430-430"];
m8_212 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="tokenReader.DateParseHandling = reader.DateParseHandling", span="431-431"];
m8_213 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="tokenReader.DateTimeZoneHandling = reader.DateTimeZoneHandling", span="432-432"];
m8_214 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="tokenReader.FloatParseHandling = reader.FloatParseHandling", span="433-433"];
m8_215 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="tokenReader.SupportMultipleContent = reader.SupportMultipleContent", span="434-434"];
m8_226 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonContractType.Object", span="463-463"];
m8_207 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label=tokenReader, span="425-425"];
m8_216 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="tokenReader.ReadAndAssert()", span="437-437"];
m8_236 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonContractType.Primitive", span="486-486"];
m8_245 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonContractType.Dictionary", span="510-510"];
m8_261 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="ObjectConstructor<object> creator = dictionaryContract.OverrideCreator ?? dictionaryContract.ParameterizedCreator", span="546-546"];
m8_209 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="tokenReader = (JTokenReader)t.CreateReader()", span="428-428"];
m8_271 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="412-412"];
m8_340 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.Skip()", span="935-935"];
m8_30 [cluster="object.GetType()", file="JsonTextReader.cs", label="Entry object.GetType()", span="0-0"];
m8_31 [cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="43-43"];
m8_33 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m8_34 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="267-267"];
m8_36 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonTextReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m8_41 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1289-1289"];
m8_42 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="2242-2242"];
m8_681 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", span="1539-1539"];
m8_743 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonTextReader.cs", label="IsErrorHandled(currentObject, contract, null, reader as IJsonLineInfo, reader.Path, ex)", span="1547-1547"];
m8_744 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonTextReader.cs", label="HandleError(reader, false, 0)", span="1549-1549"];
m8_741 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, message);", span="1543-1543"];
m8_742 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonTextReader.cs", label=Exception, span="1545-1545"];
m8_745 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonTextReader.cs", label="throw;", span="1553-1553"];
m8_746 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", span="1539-1539"];
m8_503 [cluster="Unk.DeserializeConvertable", file="JsonTextReader.cs", label="Entry Unk.DeserializeConvertable", span=""];
m8_483 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", span="987-987"];
m8_484 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="CalculatePropertyDetails(property, ref propertyConverter, containerContract, containerProperty, reader, target, out bool useExistingValue, out object currentValue, out JsonContract propertyContract, out bool gottenCurrentValue)", span="989-989"];
m8_490 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="value = DeserializeConvertable(propertyConverter, reader, property.PropertyType, currentValue)", span="1003-1003"];
m8_491 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="value = CreateValueInternal(reader, property.PropertyType, propertyContract, property, containerContract, containerProperty, (useExistingValue) ? currentValue : null)", span="1007-1007"];
m8_492 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="(!useExistingValue || value != currentValue)\r\n                && ShouldSetPropertyValue(property, value)", span="1013-1014"];
m8_495 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1020-1020"];
m8_496 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''IsSpecified for property '{0}' on {1} set to true.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType)), null)", span="1022-1022"];
m8_485 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="return false;", span="991-991"];
m8_486 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="object value", span="994-994"];
m8_487 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="propertyConverter != null && propertyConverter.CanRead", span="996-996"];
m8_488 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="!gottenCurrentValue && target != null && property.Readable", span="998-998"];
m8_489 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="currentValue = property.ValueProvider.GetValue(target)", span="1000-1000"];
m8_493 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="property.ValueProvider.SetValue(target, value)", span="1016-1016"];
m8_499 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="return useExistingValue;", span="1032-1032"];
m8_494 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="property.SetIsSpecified != null", span="1018-1018"];
m8_497 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="property.SetIsSpecified(target, true)", span="1025-1025"];
m8_498 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="return true;", span="1028-1028"];
m8_500 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", span="987-987"];
m8_338 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="139-139"];
m8_341 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="769-769"];
m8_385 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="TypeNameHandling resolvedTypeNameHandling =\r\n                member?.TypeNameHandling\r\n                ?? containerContract?.ItemTypeNameHandling\r\n                ?? containerMember?.ItemTypeNameHandling\r\n                ?? Serializer._typeNameHandling", span="771-775"];
m8_389 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="specifiedType = Serializer._serializationBinder.BindToType(typeNameKey.AssemblyName, typeNameKey.TypeName)", span="784-784"];
m8_394 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="796-796"];
m8_395 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Resolved type '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName, specifiedType)), null)", span="798-798"];
m8_399 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="contract = GetContractSafe(specifiedType)", span="811-811"];
m8_388 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Type specifiedType", span="781-781"];
m8_391 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Error resolving type specified in JSON '{0}'.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName), ex);", span="788-788"];
m8_393 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Type specified in JSON '{0}' was not resolved.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName));", span="793-793"];
m8_397 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Type specified in JSON '{0}' is not compatible with '{1}'.''.FormatWith(CultureInfo.InvariantCulture, specifiedType.AssemblyQualifiedName, objectType.AssemblyQualifiedName));", span="807-807"];
m8_386 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="resolvedTypeNameHandling != TypeNameHandling.None", span="777-777"];
m8_387 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="TypeNameKey typeNameKey = ReflectionUtils.SplitFullyQualifiedTypeName(qualifiedTypeName)", span="779-779"];
m8_390 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label=Exception, span="786-786"];
m8_392 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="specifiedType == null", span="791-791"];
m8_396 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="objectType != null\r\n#if HAVE_DYNAMIC\r\n                    && objectType != typeof(IDynamicMetaObjectProvider)\r\n#endif\r\n                    && !objectType.IsAssignableFrom(specifiedType)", span="801-805"];
m8_398 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="objectType = specifiedType", span="810-810"];
m8_400 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="769-769"];
m8_453 [cluster="System.Array.CreateInstance(System.Type, int)", file="JsonTextReader.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m8_875 [cluster="System.Collections.ObjectModel.Collection<T>.IndexOf(T)", file="JsonTextReader.cs", label="Entry System.Collections.ObjectModel.Collection<T>.IndexOf(T)", span="0-0"];
m8_734 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonTextReader.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m8_867 [cluster="Unk.Select", file="JsonTextReader.cs", label="Entry Unk.Select", span=""];
m8_0 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", span="40-40"];
m8_1 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="JsonTextReader.cs", label="Assert.AreEqual(''urlValue'', StringUtils.ToCamelCase(''URLValue''))", span="42-42"];
m8_2 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="65-65"];
m8_3 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="ValidationUtils.ArgumentNotNull(target, nameof(target))", span="67-67"];
m8_4 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="Type objectType = target.GetType()", span="69-69"];
m8_5 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="JsonContract contract = Serializer._contractResolver.ResolveContract(objectType)", span="71-71"];
m8_6 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="!reader.MoveToContent()", span="73-73"];
m8_7 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''No JSON content found.'');", span="75-75"];
m8_8 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.StartArray", span="78-78"];
m8_9 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="contract.ContractType == JsonContractType.Array", span="80-80"];
m8_10 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="JsonArrayContract arrayContract = (JsonArrayContract)contract", span="82-82"];
m8_11 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="PopulateList((arrayContract.ShouldCreateWrapper) ? arrayContract.CreateWrapper(target) : (IList)target, reader, arrayContract, null, null)", span="84-84"];
m8_12 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot populate JSON array onto type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="88-88"];
m8_13 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.StartObject", span="91-91"];
m8_14 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="reader.ReadAndAssert()", span="93-93"];
m8_15 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="string id = null", span="95-95"];
m8_16 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="Serializer.MetadataPropertyHandling != MetadataPropertyHandling.Ignore\r\n                    && reader.TokenType == JsonToken.PropertyName\r\n                    && string.Equals(reader.Value.ToString(), JsonTypeReflector.IdPropertyName, StringComparison.Ordinal)", span="96-98"];
m8_17 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="reader.ReadAndAssert()", span="100-100"];
m8_18 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="id = reader.Value?.ToString()", span="101-101"];
m8_19 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="reader.ReadAndAssert()", span="102-102"];
m8_20 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="contract.ContractType == JsonContractType.Dictionary", span="105-105"];
m8_21 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)contract", span="107-107"];
m8_22 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="PopulateDictionary((dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(target) : (IDictionary)target, reader, dictionaryContract, null, id)", span="108-108"];
m8_23 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="contract.ContractType == JsonContractType.Object", span="110-110"];
m8_24 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="PopulateObject(target, reader, (JsonObjectContract)contract, null, id)", span="112-112"];
m8_25 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot populate JSON object onto type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="116-116"];
m8_680 [cluster="Unk.TryParseDateTime", file="JsonTextReader.cs", label="Entry Unk.TryParseDateTime", span=""];
m8_506 [cluster="Newtonsoft.Json.Serialization.IValueProvider.SetValue(object, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.SetValue(object, object)", span="37-37"];
m8_619 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1269-1269"];
m8_620 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1271-1271"];
m8_621 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Started deserializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="1273-1273"];
m8_622 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonTextReader.cs", label="contract.InvokeOnDeserializing(value, Serializer._context)", span="1276-1276"];
m8_623 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1269-1269"];
m8_199 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="1167-1167"];
m8_78 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409"];
m8_953 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ArrayEmpty<T>()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ArrayEmpty<T>()", span="379-379"];
m8_160 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", span="834-834"];
m8_415 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="HasNoDefinedType(contract)", span="838-838"];
m8_416 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="return CreateJToken(reader, contract);", span="840-840"];
m8_417 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="JsonArrayContract arrayContract = EnsureArrayContract(reader, objectType, contract)", span="843-843"];
m8_419 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="IList list = CreateNewList(reader, arrayContract, out bool createdFromNonDefaultCreator)", span="847-847"];
m8_430 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="PopulateList(list, reader, arrayContract, member, id)", span="874-874"];
m8_431 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="PopulateMultidimensionalArray(list, reader, arrayContract, member, id)", span="878-878"];
m8_446 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="value = PopulateList((arrayContract.ShouldCreateWrapper) ? arrayContract.CreateWrapper(existingValue) : (IList)existingValue, reader, arrayContract, member, id)", span="914-914"];
m8_422 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot preserve reference to array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="853-853"];
m8_424 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnSerializing on an array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="858-858"];
m8_426 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnError on an array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="863-863"];
m8_428 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot deserialize readonly or fixed size list: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="868-868"];
m8_445 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot populate list type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.CreatedType));", span="911-911"];
m8_414 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="object value", span="836-836"];
m8_418 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="existingValue == null", span="845-845"];
m8_427 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="!arrayContract.HasParameterizedCreatorInternal && !arrayContract.IsArray", span="866-866"];
m8_429 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="!arrayContract.IsMultidimensionalArray", span="872-872"];
m8_433 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="arrayContract.IsMultidimensionalArray", span="883-883"];
m8_434 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="list = CollectionUtils.ToMultidimensionalArray(list, arrayContract.CollectionItemType, contract.CreatedType.GetArrayRank())", span="885-885"];
m8_435 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="arrayContract.IsArray", span="887-887"];
m8_436 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="Array a = Array.CreateInstance(arrayContract.CollectionItemType, list.Count)", span="889-889"];
m8_439 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="ObjectConstructor<object> creator = arrayContract.OverrideCreator ?? arrayContract.ParameterizedCreator", span="895-895"];
m8_444 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="!arrayContract.CanDeserialize", span="909-909"];
m8_420 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label=createdFromNonDefaultCreator, span="849-849"];
m8_437 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="list.CopyTo(a, 0)", span="890-890"];
m8_440 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="return creator(list);", span="897-897"];
m8_441 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="list is IWrappedCollection", span="900-900"];
m8_442 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="return ((IWrappedCollection)list).UnderlyingCollection;", span="902-902"];
m8_443 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="value = list", span="905-905"];
m8_432 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label=createdFromNonDefaultCreator, span="881-881"];
m8_447 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="return value;", span="917-917"];
m8_421 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="id != null", span="851-851"];
m8_423 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="contract.OnSerializingCallbacks.Count > 0", span="856-856"];
m8_425 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="contract.OnErrorCallbacks.Count > 0", span="861-861"];
m8_438 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="list = a", span="891-891"];
m8_448 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", span="834-834"];
m8_277 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", span="920-920"];
m8_455 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="return (contract == null || contract.UnderlyingType == typeof(object) || contract.ContractType == JsonContractType.Linq\r\n#if HAVE_DYNAMIC\r\n                    || contract.UnderlyingType == typeof(IDynamicMetaObjectProvider)\r\n#endif\r\n                );", span="922-926"];
m8_456 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", span="920-920"];
m8_273 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1890-1890"];
m8_873 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonTextReader.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m8_477 [cluster="System.Enum.Parse(System.Type, string, bool)", file="JsonTextReader.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m8_79 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", span="108-108"];
m8_505 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", span="1131-1131"];
m8_554 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="property.NullValueHandling.GetValueOrDefault(Serializer._nullValueHandling) == NullValueHandling.Ignore && value == null", span="1133-1133"];
m8_556 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Ignore)\r\n                && !HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate)\r\n                && MiscellaneousUtils.ValueEquals(value, property.GetResolvedDefaultValue())", span="1138-1140"];
m8_555 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return false;", span="1135-1135"];
m8_557 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return false;", span="1142-1142"];
m8_558 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="!property.Writable", span="1145-1145"];
m8_559 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return false;", span="1147-1147"];
m8_560 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return true;", span="1150-1150"];
m8_561 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", span="1131-1131"];
m8_507 [cluster="Newtonsoft.Json.Serialization.Action<T1, T2>.Invoke(T1, T2)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.Action<T1, T2>.Invoke(T1, T2)", span="3050-3050"];
m8_27 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="65-65"];
m8_81 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", span="98-98"];
m8_595 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", span="1221-1221"];
m8_605 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="contract.DefaultCreator != null && (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="1241-1241"];
m8_615 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1262-1262"];
m8_616 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a default constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1265-1265"];
m8_602 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="contract.IsReadOnlyOrFixedSize", span="1236-1236"];
m8_606 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="object dictionary = contract.DefaultCreator()", span="1243-1243"];
m8_611 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="contract.HasParameterizedCreatorInternal", span="1253-1253"];
m8_614 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="!contract.IsInstantiable", span="1260-1260"];
m8_608 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="dictionary = contract.CreateWrapper(dictionary)", span="1247-1247"];
m8_596 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="contract.OverrideCreator != null", span="1223-1223"];
m8_597 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="contract.HasParameterizedCreator", span="1225-1225"];
m8_599 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="return contract.CreateTemporaryDictionary();", span="1228-1228"];
m8_601 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="return (IDictionary)contract.OverrideCreator();", span="1233-1233"];
m8_604 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="return contract.CreateTemporaryDictionary();", span="1239-1239"];
m8_607 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="contract.ShouldCreateWrapper", span="1245-1245"];
m8_613 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="return contract.CreateTemporaryDictionary();", span="1256-1256"];
m8_603 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultCreator = true", span="1238-1238"];
m8_610 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="return (IDictionary)dictionary;", span="1251-1251"];
m8_612 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultCreator = true", span="1255-1255"];
m8_598 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultCreator = true", span="1227-1227"];
m8_600 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultCreator = false", span="1232-1232"];
m8_609 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultCreator = false", span="1250-1250"];
m8_617 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", span="1221-1221"];
m8_872 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreatorPropertyContext.CreatorPropertyContext()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreatorPropertyContext.CreatorPropertyContext()", span="1857-1857"];
m8_279 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", span="2199-2199"];
m8_939 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="return CreateObjectUsingCreatorWithParameters(reader, objectContract, containerMember, objectContract.OverrideCreator, id);", span="2208-2208"];
m8_941 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="objectContract.DefaultCreator != null &&\r\n                     (!objectContract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor || objectContract.ParameterizedCreator == null)", span="2213-2214"];
m8_945 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="return CreateObjectUsingCreatorWithParameters(reader, objectContract, containerMember, objectContract.ParameterizedCreator, id);", span="2225-2225"];
m8_948 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, objectContract.UnderlyingType));", span="2232-2232"];
m8_949 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a constructor to use for type {0}. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute.''.FormatWith(CultureInfo.InvariantCulture, objectContract.UnderlyingType));", span="2235-2235"];
m8_935 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="object newObject = null", span="2201-2201"];
m8_938 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultCreator = true", span="2207-2207"];
m8_936 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="objectContract.OverrideCreator != null", span="2203-2203"];
m8_942 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="newObject = objectContract.DefaultCreator()", span="2220-2220"];
m8_943 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="objectContract.ParameterizedCreator != null", span="2222-2222"];
m8_944 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultCreator = true", span="2224-2224"];
m8_947 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="!objectContract.IsInstantiable", span="2230-2230"];
m8_946 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="newObject == null", span="2228-2228"];
m8_951 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="return newObject;", span="2239-2239"];
m8_937 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="objectContract.CreatorParameters.Count > 0", span="2205-2205"];
m8_940 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="newObject = objectContract.OverrideCreator(CollectionUtils.ArrayEmpty<object>())", span="2211-2211"];
m8_950 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="createdFromNonDefaultCreator = false", span="2238-2238"];
m8_952 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", span="2199-2199"];
m8_278 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonTextReader.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m8_887 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1936-1936"];
m8_1007 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="2248-2248"];
m8_1010 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="2248-2248"];
m8_881 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1878-1878"];
m8_884 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1891-1891"];
m8_1009 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="2248-2248"];
m8_1008 [cluster="lambda expression", file="JsonTextReader.cs", label=m, span="2248-2248"];
m8_1012 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="2248-2248"];
m8_1011 [cluster="lambda expression", file="JsonTextReader.cs", label="PropertyPresence.None", span="2248-2248"];
m8_885 [cluster="lambda expression", file="JsonTextReader.cs", label="p.Property != property", span="1891-1891"];
m8_883 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1878-1878"];
m8_882 [cluster="lambda expression", file="JsonTextReader.cs", label="p.PropertyName", span="1878-1878"];
m8_886 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1891-1891"];
m8_888 [cluster="lambda expression", file="JsonTextReader.cs", label="p.PropertyName", span="1936-1936"];
m8_889 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1936-1936"];
m8_272 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="2100-2100"];
m8_870 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", span="2109-2109"];
m8_908 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="2133-2133"];
m8_909 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.Converter, contract, containerProperty)", span="2136-2136"];
m8_913 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="creatorPropertyContext.Value = DeserializeConvertable(propertyConverter, reader, property.PropertyType, null)", span="2145-2145"];
m8_914 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="creatorPropertyContext.Value = CreateValueInternal(reader, property.PropertyType, property.PropertyContract, property, contract, containerProperty, null)", span="2149-2149"];
m8_917 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="2161-2161"];
m8_918 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Could not find member '{0}' on {1}.''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType)), null)", span="2163-2163"];
m8_919 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="Serializer._missingMemberHandling == MissingMemberHandling.Error", span="2166-2166"];
m8_922 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="creatorPropertyContext.Value = ReadExtensionDataValue(contract, containerProperty, reader)", span="2174-2174"];
m8_930 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="ThrowUnexpectedEndException(reader, contract, null, ''Unexpected end when deserializing object.'')", span="2193-2193"];
m8_905 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="JsonProperty property = creatorPropertyContext.ConstructorProperty ?? creatorPropertyContext.Property", span="2128-2128"];
m8_910 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="!reader.ReadForType(property.PropertyContract, propertyConverter != null)", span="2138-2138"];
m8_911 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="2140-2140"];
m8_916 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="2158-2158"];
m8_920 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not find member '{0}' on object of type '{1}'''.FormatWith(CultureInfo.InvariantCulture, memberName, objectType.Name));", span="2168-2168"];
m8_927 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="2187-2187"];
m8_899 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="bool exit = false", span="2112-2112"];
m8_907 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="property.PropertyContract == null", span="2131-2131"];
m8_912 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="propertyConverter != null && propertyConverter.CanRead", span="2143-2143"];
m8_903 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="CreatorPropertyContext creatorPropertyContext = new CreatorPropertyContext\r\n                        {\r\n                            Name = reader.Value.ToString(),\r\n                            ConstructorProperty = contract.CreatorParameters.GetClosestMatchProperty(memberName),\r\n                            Property = contract.Properties.GetClosestMatchProperty(memberName)\r\n                        }", span="2120-2125"];
m8_928 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="!exit && reader.Read()", span="2189-2189"];
m8_915 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="!reader.Read()", span="2156-2156"];
m8_902 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="string memberName = reader.Value.ToString()", span="2118-2118"];
m8_921 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="contract.ExtensionDataSetter != null", span="2172-2172"];
m8_929 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="!exit", span="2191-2191"];
m8_931 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="return propertyValues;", span="2196-2196"];
m8_898 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="List<CreatorPropertyContext> propertyValues = new List<CreatorPropertyContext>()", span="2111-2111"];
m8_900 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="reader.TokenType", span="2115-2115"];
m8_923 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="reader.Skip()", span="2178-2178"];
m8_904 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="propertyValues.Add(creatorPropertyContext)", span="2126-2126"];
m8_906 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="property != null && !property.Ignored", span="2129-2129"];
m8_924 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="JsonToken.Comment", span="2181-2181"];
m8_926 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="exit = true", span="2184-2184"];
m8_901 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="JsonToken.PropertyName", span="2117-2117"];
m8_925 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="JsonToken.EndObject", span="2183-2183"];
m8_932 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", span="2109-2109"];
m8_167 [cluster="string.IsNullOrEmpty(string)", file="JsonTextReader.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m8_450 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1410-1410"];
m8_684 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="AddReference(reader, id, list)", span="1416-1416"];
m8_685 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="OnDeserializing(reader, contract, list)", span="1419-1419"];
m8_686 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonContract collectionItemContract = GetContractSafe(contract.CollectionItemType)", span="1421-1421"];
m8_687 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonConverter collectionItemConverter = GetConverter(collectionItemContract, null, contract, containerProperty)", span="1422-1422"];
m8_703 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="value = DeserializeConvertable(collectionItemConverter, reader, contract.CollectionItemType, null)", span="1452-1452"];
m8_704 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="value = CreateValueInternal(reader, contract.CollectionItemType, collectionItemContract, null, contract, containerProperty, null)", span="1456-1456"];
m8_708 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="IsErrorHandled(list, contract, errorPosition.Position, reader as IJsonLineInfo, reader.Path, ex)", span="1472-1472"];
m8_709 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="HandleError(reader, true, initialDepth)", span="1474-1474"];
m8_730 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="ThrowUnexpectedEndException(reader, contract, list, ''Unexpected end when deserializing array.'')", span="1532-1532"];
m8_731 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="OnDeserialized(reader, contract, list)", span="1535-1535"];
m8_701 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="object value", span="1448-1448"];
m8_695 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="reader.ReadForType(collectionItemContract, collectionItemConverter != null)", span="1438-1438"];
m8_727 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing multidimensional array: '' + reader.TokenType);", span="1520-1520"];
m8_692 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="bool finished = false", span="1429-1429"];
m8_693 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="int initialDepth = reader.Depth", span="1432-1432"];
m8_688 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="int? previousErrorIndex = null", span="1424-1424"];
m8_683 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="id != null", span="1414-1414"];
m8_702 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="collectionItemConverter != null && collectionItemConverter.CanRead", span="1450-1450"];
m8_705 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="currentList.Add(value)", span="1459-1459"];
m8_707 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonPosition errorPosition = reader.GetPosition(initialDepth)", span="1470-1470"];
m8_713 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw;", span="1489-1489"];
m8_710 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="previousErrorIndex != null && previousErrorIndex == errorPosition.Position", span="1476-1476"];
m8_729 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!finished", span="1530-1530"];
m8_732 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="return list;", span="1536-1536"];
m8_691 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="IList currentList = list", span="1427-1427"];
m8_682 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="int rank = contract.UnderlyingType.GetArrayRank()", span="1412-1412"];
m8_690 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="listStack.Push(list)", span="1426-1426"];
m8_696 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="reader.TokenType", span="1440-1440"];
m8_711 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Infinite loop detected from error handling.'', ex);", span="1480-1480"];
m8_714 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="reader.Read()", span="1495-1495"];
m8_715 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="reader.TokenType", span="1497-1497"];
m8_694 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="listStack.Count == rank", span="1434-1434"];
m8_728 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!finished", span="1528-1528"];
m8_689 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Stack<IList> listStack = new Stack<IList>()", span="1425-1425"];
m8_699 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="currentList = listStack.Peek()", span="1444-1444"];
m8_706 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label=Exception, span="1468-1468"];
m8_712 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="previousErrorIndex = errorPosition.Position", span="1484-1484"];
m8_700 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="previousErrorIndex = null", span="1445-1445"];
m8_725 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="finished = true", span="1514-1514"];
m8_718 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="currentList.Add(newList)", span="1501-1501"];
m8_717 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="IList newList = new List<object>()", span="1500-1500"];
m8_697 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.EndArray", span="1442-1442"];
m8_716 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.StartArray", span="1499-1499"];
m8_721 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.EndArray", span="1505-1505"];
m8_726 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.Comment", span="1517-1517"];
m8_724 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="currentList = listStack.Peek()", span="1510-1510"];
m8_720 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="currentList = newList", span="1503-1503"];
m8_698 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="listStack.Pop()", span="1443-1443"];
m8_719 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="listStack.Push(newList)", span="1502-1502"];
m8_722 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="listStack.Pop()", span="1506-1506"];
m8_723 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="listStack.Count > 0", span="1508-1508"];
m8_733 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1410-1410"];
m8_77 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="279-279"];
m8_127 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return CreateJToken(reader, contract);", span="283-283"];
m8_130 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return CreateObject(reader, objectType, contract, member, containerContract, containerMember, existingValue);", span="293-293"];
m8_132 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return CreateList(reader, objectType, contract, member, existingValue, null);", span="295-295"];
m8_138 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return EnsureType(reader, reader.Value, CultureInfo.InvariantCulture, contract, objectType);", span="301-301"];
m8_145 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return EnsureType(reader, s, CultureInfo.InvariantCulture, contract, objectType);", span="317-317"];
m8_148 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return EnsureType(reader, constructorName, CultureInfo.InvariantCulture, contract, objectType);", span="321-321"];
m8_151 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return EnsureType(reader, reader.Value, CultureInfo.InvariantCulture, contract, objectType);", span="331-331"];
m8_126 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="contract != null && contract.ContractType == JsonContractType.Linq", span="281-281"];
m8_128 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="reader.TokenType", span="288-288"];
m8_140 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="string s = (string)reader.Value", span="303-303"];
m8_141 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="CoerceEmptyStringToNull(objectType, contract, s)", span="306-306"];
m8_143 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="objectType == typeof(byte[])", span="312-312"];
m8_147 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="string constructorName = reader.Value.ToString()", span="319-319"];
m8_153 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return new JRaw((string)reader.Value);", span="333-333"];
m8_155 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token while deserializing object: '' + reader.TokenType);", span="338-338"];
m8_156 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="reader.Read()", span="340-340"];
m8_157 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="342-342"];
m8_129 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.StartObject", span="292-292"];
m8_131 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.StartArray", span="294-294"];
m8_137 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.Bytes", span="300-300"];
m8_150 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.Undefined", span="323-323"];
m8_144 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return Convert.FromBase64String(s);", span="314-314"];
m8_142 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return null;", span="308-308"];
m8_133 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.Integer", span="296-296"];
m8_139 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.String", span="302-302"];
m8_146 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.StartConstructor", span="318-318"];
m8_149 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.Null", span="322-322"];
m8_152 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.Raw", span="332-332"];
m8_154 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.Comment", span="334-334"];
m8_136 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.Date", span="299-299"];
m8_134 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.Float", span="297-297"];
m8_135 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="JsonToken.Boolean", span="298-298"];
m8_158 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="279-279"];
m8_454 [cluster="System.Collections.ICollection.CopyTo(System.Array, int)", file="JsonTextReader.cs", label="Entry System.Collections.ICollection.CopyTo(System.Array, int)", span="0-0"];
m8_541 [cluster="Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", span="58-58"];
m8_480 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="JsonTextReader.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m8_1020 [cluster="System.Predicate<T>.Invoke(T)", file="JsonTextReader.cs", label="Entry System.Predicate<T>.Invoke(T)", span="0-0"];
m8_740 [cluster="System.Collections.Generic.List<T>.List()", file="JsonTextReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m8_879 [cluster="System.Nullable<T>.GetValueOrDefault()", file="JsonTextReader.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m8_954 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="OnDeserializing(reader, contract, newObject)", span="2244-2244"];
m8_955 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Dictionary<JsonProperty, PropertyPresence> propertiesPresence = (contract.HasRequiredOrDefaultValueProperties || HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Populate))\r\n                ? contract.Properties.ToDictionary(m => m, m => PropertyPresence.None)\r\n                : null", span="2247-2249"];
m8_957 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="AddReference(reader, id, newObject)", span="2253-2253"];
m8_963 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="CheckPropertyName(reader, memberName)", span="2267-2267"];
m8_966 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="2280-2280"];
m8_967 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Could not find member '{0}' on {1}''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType)), null)", span="2282-2282"];
m8_968 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Serializer._missingMemberHandling == MissingMemberHandling.Error", span="2285-2285"];
m8_971 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="SetExtensionData(contract, member, reader, memberName, newObject)", span="2295-2295"];
m8_972 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="property.Ignored || !ShouldDeserialize(reader, property, newObject)", span="2299-2299"];
m8_974 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="SetPropertyPresence(reader, property, propertiesPresence)", span="2306-2306"];
m8_975 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="SetExtensionData(contract, member, reader, memberName, newObject)", span="2307-2307"];
m8_977 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="2313-2313"];
m8_978 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.Converter, contract, member)", span="2316-2316"];
m8_981 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="SetPropertyPresence(reader, property, propertiesPresence)", span="2323-2323"];
m8_982 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!SetPropertyValue(property, propertyConverter, contract, member, reader, newObject)", span="2326-2326"];
m8_983 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="SetExtensionData(contract, member, reader, memberName, newObject)", span="2328-2328"];
m8_985 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="IsErrorHandled(newObject, contract, memberName, reader as IJsonLineInfo, reader.Path, ex)", span="2334-2334"];
m8_986 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="HandleError(reader, true, initialDepth - 1)", span="2336-2336"];
m8_994 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="ThrowUnexpectedEndException(reader, contract, newObject, ''Unexpected end when deserializing object.'')", span="2358-2358"];
m8_999 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="EndProcessProperty(newObject, reader, contract, initialDepth, property, presence, true)", span="2368-2368"];
m8_1000 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="OnDeserialized(reader, contract, newObject)", span="2372-2372"];
m8_979 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!reader.ReadForType(property.PropertyContract, propertyConverter != null)", span="2318-2318"];
m8_980 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="2320-2320"];
m8_969 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not find member '{0}' on object of type '{1}'''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType.Name));", span="2287-2287"];
m8_991 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="2352-2352"];
m8_959 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="bool finished = false", span="2258-2258"];
m8_956 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="id != null", span="2251-2251"];
m8_995 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="propertiesPresence != null", span="2361-2361"];
m8_996 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label=propertiesPresence, span="2363-2363"];
m8_958 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="int initialDepth = reader.Depth", span="2256-2256"];
m8_962 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="string memberName = reader.Value.ToString()", span="2265-2265"];
m8_964 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonProperty property = contract.Properties.GetClosestMatchProperty(memberName)", span="2276-2276"];
m8_992 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!finished && reader.Read()", span="2354-2354"];
m8_965 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="property == null", span="2278-2278"];
m8_970 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!reader.Read()", span="2290-2290"];
m8_973 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!reader.Read()", span="2301-2301"];
m8_976 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="property.PropertyContract == null", span="2311-2311"];
m8_984 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label=Exception, span="2332-2332"];
m8_987 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw;", span="2340-2340"];
m8_993 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!finished", span="2356-2356"];
m8_997 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonProperty property = propertyPresence.Key", span="2365-2365"];
m8_998 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="PropertyPresence presence = propertyPresence.Value", span="2366-2366"];
m8_1001 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="return newObject;", span="2373-2373"];
m8_960 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="reader.TokenType", span="2261-2261"];
m8_961 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.PropertyName", span="2263-2263"];
m8_990 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.Comment", span="2348-2348"];
m8_989 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="finished = true", span="2346-2346"];
m8_988 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.EndObject", span="2345-2345"];
m8_1002 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="2242-2242"];
m8_401 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", span="859-859"];
m8_101 [cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", span="58-58"];
m8_120 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", span="111-111"];
m8_933 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="125-125"];
m8_123 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", span="178-178"];
m8_1004 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", span="2410-2410"];
m8_1033 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="object value = ReadExtensionDataValue(contract, member, reader)", span="2416-2416"];
m8_1036 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Error setting value in extension data for type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType), ex);", span="2422-2422"];
m8_1032 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="contract.ExtensionDataSetter != null", span="2412-2412"];
m8_1034 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="contract.ExtensionDataSetter(o, memberName, value)", span="2418-2418"];
m8_1035 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label=Exception, span="2420-2420"];
m8_1037 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="reader.Skip()", span="2427-2427"];
m8_1038 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", span="2410-2410"];
m8_181 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="JsonTextReader.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m8_122 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", span="2393-2393"];
m8_1022 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonTextReader.cs", label="Serializer.MetadataPropertyHandling == MetadataPropertyHandling.ReadAhead", span="2395-2395"];
m8_1023 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonTextReader.cs", label=memberName, span="2397-2397"];
m8_1030 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonTextReader.cs", label="return false;", span="2407-2407"];
m8_1028 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonTextReader.cs", label="reader.Skip()", span="2403-2403"];
m8_1024 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonTextReader.cs", label="JsonTypeReflector.IdPropertyName", span="2399-2399"];
m8_1029 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonTextReader.cs", label="return true;", span="2404-2404"];
m8_1027 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonTextReader.cs", label="JsonTypeReflector.ArrayValuesPropertyName", span="2402-2402"];
m8_1025 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonTextReader.cs", label="JsonTypeReflector.RefPropertyName", span="2400-2400"];
m8_1026 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonTextReader.cs", label="JsonTypeReflector.TypePropertyName", span="2401-2401"];
m8_1031 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", span="2393-2393"];
m8_168 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", span="350-350"];
m8_169 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="contract.ContractType", span="352-352"];
m8_172 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="return @''JSON object (e.g. {''''name'''':''''value''''})'';", span="362-362"];
m8_174 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="return @''JSON array (e.g. [1,2,3])'';", span="364-364"];
m8_176 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="return @''JSON primitive value (e.g. string, number, boolean, null)'';", span="366-366"];
m8_178 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="return @''JSON string value'';", span="368-368"];
m8_179 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="throw new ArgumentOutOfRangeException();", span="370-370"];
m8_170 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="JsonContractType.Object", span="354-354"];
m8_173 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="JsonContractType.Array", span="363-363"];
m8_175 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="JsonContractType.Primitive", span="365-365"];
m8_177 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="JsonContractType.String", span="367-367"];
m8_171 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="JsonContractType.Dictionary", span="355-355"];
m8_180 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", span="350-350"];
m8_125 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="426-426"];
m8_501 [cluster="Unk.CalculatePropertyDetails", file="JsonTextReader.cs", label="Entry Unk.CalculatePropertyDetails", span=""];
m8_508 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", span="1035-1035"];
m8_517 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1051-1051"];
m8_518 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="ObjectCreationHandling objectCreationHandling =\r\n                property.ObjectCreationHandling.GetValueOrDefault(Serializer._objectCreationHandling)", span="1054-1055"];
m8_523 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="propertyContract = GetContractSafe(currentValue.GetType())", span="1066-1066"];
m8_527 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="property.NullValueHandling.GetValueOrDefault(Serializer._nullValueHandling) == NullValueHandling.Ignore && tokenType == JsonToken.Null", span="1078-1078"];
m8_529 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Ignore)\r\n                && !HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate)\r\n                && JsonTokenUtils.IsPrimitiveToken(tokenType)\r\n                && MiscellaneousUtils.ValueEquals(reader.Value, property.GetResolvedDefaultValue())", span="1084-1087"];
m8_533 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="propertyContract = GetContractSafe(currentValue.GetType())", span="1098-1098"];
m8_535 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="propertyConverter = GetConverter(propertyContract, property.Converter, containerContract, containerProperty)", span="1102-1102"];
m8_516 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="property.PropertyContract == null", span="1049-1049"];
m8_519 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="(objectCreationHandling != ObjectCreationHandling.Replace)\r\n                && (tokenType == JsonToken.StartArray || tokenType == JsonToken.StartObject)\r\n                && property.Readable", span="1057-1059"];
m8_520 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="currentValue = property.ValueProvider.GetValue(target)", span="1061-1061"];
m8_522 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="currentValue != null", span="1064-1064"];
m8_524 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="useExistingValue = (!propertyContract.IsReadOnlyOrFixedSize && !propertyContract.UnderlyingType.IsValueType())", span="1068-1068"];
m8_515 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="JsonToken tokenType = reader.TokenType", span="1047-1047"];
m8_525 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="!property.Writable && !useExistingValue", span="1072-1072"];
m8_528 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="return true;", span="1080-1080"];
m8_530 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="return true;", span="1089-1089"];
m8_531 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="currentValue == null", span="1092-1092"];
m8_509 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="currentValue = null", span="1037-1037"];
m8_534 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="propertyContract != property.PropertyContract", span="1100-1100"];
m8_536 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="return false;", span="1106-1106"];
m8_513 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="property.Ignored", span="1042-1042"];
m8_532 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="propertyContract = property.PropertyContract", span="1094-1094"];
m8_521 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="gottenCurrentValue = true", span="1062-1062"];
m8_510 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="useExistingValue = false", span="1038-1038"];
m8_526 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="return true;", span="1074-1074"];
m8_512 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="gottenCurrentValue = false", span="1040-1040"];
m8_514 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="return true;", span="1044-1044"];
m8_511 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="propertyContract = null", span="1039-1039"];
m8_537 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", span="1035-1035"];
m8_482 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", span="142-142"];
m8_624 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserializing(object, System.Runtime.Serialization.StreamingContext)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserializing(object, System.Runtime.Serialization.StreamingContext)", span="273-273"];
m8_449 [cluster="Unk.CreateNewList", file="JsonTextReader.cs", label="Entry Unk.CreateNewList", span=""];
m8_878 [cluster="Newtonsoft.Json.Serialization.ExtensionDataSetter.Invoke(object, string, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.ExtensionDataSetter.Invoke(object, string, object)", span="69-69"];
m8_339 [cluster="Newtonsoft.Json.Serialization.ITraceWriter.Trace(Newtonsoft.Json.TraceLevel, string, System.Exception)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.ITraceWriter.Trace(Newtonsoft.Json.TraceLevel, string, System.Exception)", span="25-25"];
m8_336 [cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", span="1157-1157"];
m8_853 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="DictionaryEntry entry = e.Entry", span="2041-2041"];
m8_787 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="bool trackPresence = (contract.HasRequiredOrDefaultValueProperties || HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Populate))", span="1872-1872"];
m8_789 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1876-1876"];
m8_791 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Deserializing {0} using creator with parameters: {1}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType, parameters)), null)", span="1883-1883"];
m8_792 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="List<CreatorPropertyContext> propertyContexts = ResolvePropertyAndCreatorValues(contract, containerProperty, reader, objectType)", span="1886-1886"];
m8_816 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="constructorProperty.PropertyContract = GetContractSafe(constructorProperty.PropertyType)", span="1949-1949"];
m8_817 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="HasFlag(constructorProperty.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate)", span="1952-1952"];
m8_818 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="context.Value = EnsureType(\r\n                                    reader,\r\n                                    constructorProperty.GetResolvedDefaultValue(),\r\n                                    CultureInfo.InvariantCulture,\r\n                                    constructorProperty.PropertyContract,\r\n                                    constructorProperty.PropertyType)", span="1954-1959"];
m8_824 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="AddReference(reader, id, createdObject)", span="1975-1975"];
m8_825 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="OnDeserializing(reader, contract, createdObject)", span="1978-1978"];
m8_830 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="ShouldSetPropertyValue(property, value)", span="1994-1994"];
m8_834 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="JsonContract propertyContract = Serializer._contractResolver.ResolveContract(property.PropertyType)", span="2002-2002"];
m8_863 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="EndProcessProperty(\r\n                        createdObject,\r\n                        reader,\r\n                        contract,\r\n                        reader.Depth,\r\n                        context.Property,\r\n                        context.Presence.GetValueOrDefault(),\r\n                        !context.Used)", span="2077-2084"];
m8_864 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="OnDeserialized(reader, contract, createdObject)", span="2088-2088"];
m8_786 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="ValidationUtils.ArgumentNotNull(creator, nameof(creator))", span="1869-1869"];
m8_785 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", span="1867-1867"];
m8_788 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="Type objectType = contract.UnderlyingType", span="1874-1874"];
m8_793 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label=trackPresence, span="1887-1887"];
m8_799 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label=trackPresence, span="1908-1908"];
m8_813 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label=trackPresence, span="1943-1943"];
m8_860 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label=trackPresence, span="2068-2068"];
m8_790 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="string parameters = string.Join('', '', contract.CreatorParameters.Select(p => p.PropertyName)\r\n#if !HAVE_STRING_JOIN_WITH_ENUMERABLE\r\n                    .ToArray()\r\n#endif\r\n                    )", span="1878-1882"];
m8_795 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="propertyContexts.All(p => p.Property != property)", span="1891-1891"];
m8_796 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="propertyContexts.Add(new CreatorPropertyContext\r\n                        {\r\n                            Property = property,\r\n                            Name = property.PropertyName,\r\n                            Presence = PropertyPresence.None\r\n                        })", span="1893-1898"];
m8_798 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label=propertyContexts, span="1905-1905"];
m8_826 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label=propertyContexts, span="1981-1981"];
m8_857 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label=propertyContexts, span="2059-2059"];
m8_861 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label=propertyContexts, span="2070-2070"];
m8_811 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="constructorProperty = contract.CreatorParameters.ForgivingCaseSensitiveFind(p => p.PropertyName, context.Property.UnderlyingName)", span="1936-1936"];
m8_809 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="JsonProperty constructorProperty = context.ConstructorProperty", span="1933-1933"];
m8_815 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="constructorProperty.PropertyContract == null", span="1947-1947"];
m8_819 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="int i = contract.CreatorParameters.IndexOf(constructorProperty)", span="1964-1964"];
m8_822 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="object createdObject = creator(creatorParameterValues)", span="1971-1971"];
m8_823 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="id != null", span="1973-1973"];
m8_828 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="JsonProperty property = context.Property", span="1991-1991"];
m8_829 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="object value = context.Value", span="1992-1992"];
m8_831 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="property.ValueProvider.SetValue(createdObject, value)", span="1996-1996"];
m8_833 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="!property.Writable && value != null", span="1999-1999"];
m8_835 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="propertyContract.ContractType == JsonContractType.Array", span="2004-2004"];
m8_836 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="JsonArrayContract propertyArrayContract = (JsonArrayContract)propertyContract", span="2006-2006"];
m8_844 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="propertyContract.ContractType == JsonContractType.Dictionary", span="2023-2023"];
m8_845 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)propertyContract", span="2025-2025"];
m8_862 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="context.Property == null", span="2072-2072"];
m8_865 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="return createdObject;", span="2089-2089"];
m8_806 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="propertyPresence = CoerceEmptyStringToNull(context.Property.PropertyType, context.Property.PropertyContract, (string)v)\r\n                                ? PropertyPresence.Null\r\n                                : PropertyPresence.Value", span="1920-1922"];
m8_801 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="object v = context.Value", span="1912-1912"];
m8_841 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="IList newValues = (propertyArrayContract.ShouldCreateWrapper) ? propertyArrayContract.CreateWrapper(value) : (IList)value", span="2014-2014"];
m8_840 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="IList createdObjectCollectionWrapper = (propertyArrayContract.ShouldCreateWrapper) ? propertyArrayContract.CreateWrapper(createdObjectCollection) : (IList)createdObjectCollection", span="2013-2013"];
m8_850 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="IDictionary newValues = (dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(value) : (IDictionary)value", span="2033-2033"];
m8_849 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="IDictionary targetDictionary = (dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(createdObjectDictionary) : (IDictionary)createdObjectDictionary", span="2032-2032"];
m8_794 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="contract.Properties", span="1889-1889"];
m8_797 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="object[] creatorParameterValues = new object[contract.CreatorParameters.Count]", span="1903-1903"];
m8_856 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="contract.ExtensionDataSetter != null", span="2057-2057"];
m8_859 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="contract.ExtensionDataSetter(createdObject, propertyValue.Name, propertyValue.Value)", span="2063-2063"];
m8_800 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="context.Property != null && context.Presence == null", span="1910-1910"];
m8_812 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="constructorProperty != null && !constructorProperty.Ignored", span="1939-1939"];
m8_814 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="context.Presence == PropertyPresence.None || context.Presence == PropertyPresence.Null", span="1945-1945"];
m8_821 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="context.Used = true", span="1967-1967"];
m8_808 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="context.Presence = propertyPresence", span="1929-1929"];
m8_810 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="constructorProperty == null && context.Property != null", span="1934-1934"];
m8_820 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="creatorParameterValues[i] = context.Value", span="1965-1965"];
m8_827 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="context.Used ||\r\n                    context.Property == null ||\r\n                    context.Property.Ignored ||\r\n                    context.Presence == PropertyPresence.None", span="1983-1986"];
m8_832 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="context.Used = true", span="1997-1997"];
m8_855 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="context.Used = true", span="2053-2053"];
m8_858 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="!propertyValue.Used", span="2061-2061"];
m8_838 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="object createdObjectCollection = property.ValueProvider.GetValue(createdObject)", span="2010-2010"];
m8_847 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="object createdObjectDictionary = property.ValueProvider.GetValue(createdObject)", span="2029-2029"];
m8_837 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="propertyArrayContract.CanDeserialize && !propertyArrayContract.IsReadOnlyOrFixedSize", span="2008-2008"];
m8_846 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="!dictionaryContract.IsReadOnlyOrFixedSize", span="2027-2027"];
m8_802 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="PropertyPresence propertyPresence", span="1913-1913"];
m8_805 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="v is string", span="1918-1918"];
m8_803 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="v == null", span="1914-1914"];
m8_842 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label=newValues, span="2016-2016"];
m8_839 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="createdObjectCollection != null", span="2011-2011"];
m8_843 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="createdObjectCollectionWrapper.Add(newValue)", span="2018-2018"];
m8_851 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="IDictionaryEnumerator e = newValues.GetEnumerator()", span="2036-2036"];
m8_848 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="createdObjectDictionary != null", span="2030-2030"];
m8_854 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="targetDictionary[entry.Key] = entry.Value", span="2042-2042"];
m8_804 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="propertyPresence = PropertyPresence.Null", span="1916-1916"];
m8_807 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="propertyPresence = PropertyPresence.Value", span="1926-1926"];
m8_852 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="e.MoveNext()", span="2039-2039"];
m8_866 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", span="1867-1867"];
m8_121 [cluster="Newtonsoft.Json.JsonReader.ReadAndMoveToContent()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAndMoveToContent()", span="1214-1214"];
m8_342 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="679-679"];
m8_359 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="newValue = Serializer.GetReferenceResolver().ResolveReference(this, reference)", span="717-717"];
m8_360 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="719-719"];
m8_361 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Resolved object reference '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, newValue.GetType())), null)", span="721-721"];
m8_367 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="ResolveTypeName(reader, ref objectType, ref contract, member, containerContract, containerMember, qualifiedTypeName)", span="736-736"];
m8_377 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="object list = CreateList(reader, objectType, contract, member, existingValue, id)", span="754-754"];
m8_353 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''JSON reference {0} property must have a string or null value.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName));", span="703-703"];
m8_358 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Additional content found in JSON reference object. A JSON reference object should only have a {0} property.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName));", span="714-714"];
m8_354 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="string reference = reader.Value?.ToString()", span="706-706"];
m8_357 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.PropertyName", span="712-712"];
m8_362 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="return true;", span="724-724"];
m8_366 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="string qualifiedTypeName = reader.Value.ToString()", span="734-734"];
m8_368 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.ReadAndAssert()", span="738-738"];
m8_343 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="id = null", span="681-681"];
m8_376 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.ReadAndAssert()", span="753-753"];
m8_378 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.ReadAndAssert()", span="755-755"];
m8_379 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="newValue = list", span="756-756"];
m8_352 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.TokenType != JsonToken.String && reader.TokenType != JsonToken.Null", span="701-701"];
m8_345 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.TokenType == JsonToken.PropertyName", span="684-684"];
m8_346 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="string propertyName = reader.Value.ToString()", span="686-686"];
m8_349 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="propertyName = reader.Value.ToString()", span="696-696"];
m8_351 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.ReadAndAssert()", span="700-700"];
m8_355 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.ReadAndAssert()", span="708-708"];
m8_365 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.ReadAndAssert()", span="733-733"];
m8_371 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.ReadAndAssert()", span="744-744"];
m8_372 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="id = reader.Value?.ToString()", span="746-746"];
m8_373 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reader.ReadAndAssert()", span="748-748"];
m8_382 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="metadataProperty && reader.TokenType == JsonToken.PropertyName", span="763-763"];
m8_350 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="string.Equals(propertyName, JsonTypeReflector.RefPropertyName, StringComparison.Ordinal)", span="698-698"];
m8_364 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="string.Equals(propertyName, JsonTypeReflector.TypePropertyName, StringComparison.Ordinal)", span="731-731"];
m8_370 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="string.Equals(propertyName, JsonTypeReflector.IdPropertyName, StringComparison.Ordinal)", span="742-742"];
m8_375 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="string.Equals(propertyName, JsonTypeReflector.ArrayValuesPropertyName, StringComparison.Ordinal)", span="751-751"];
m8_356 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="reference != null", span="710-710"];
m8_344 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="newValue = null", span="682-682"];
m8_383 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="return false;", span="766-766"];
m8_380 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="return true;", span="757-757"];
m8_369 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="metadataProperty = true", span="740-740"];
m8_347 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="propertyName.Length > 0 && propertyName[0] == '$'", span="688-688"];
m8_348 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="bool metadataProperty", span="692-692"];
m8_374 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="metadataProperty = true", span="749-749"];
m8_363 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="metadataProperty = true", span="728-728"];
m8_381 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="metadataProperty = false", span="761-761"];
m8_384 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="679-679"];
m8_1005 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", span="2376-2376"];
m8_1016 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="2385-2385"];
m8_1017 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, reader.Path, ''ShouldDeserialize result for property '{0}' on {1}: {2}''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType, shouldDeserialize)), null)", span="2387-2387"];
m8_1015 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="bool shouldDeserialize = property.ShouldDeserialize(target)", span="2383-2383"];
m8_1018 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return shouldDeserialize;", span="2390-2390"];
m8_1013 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="property.ShouldDeserialize == null", span="2378-2378"];
m8_1014 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="return true;", span="2380-2380"];
m8_1019 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", span="2376-2376"];
m8_102 [cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="85-85"];
m8_451 [cluster="System.Type.GetArrayRank()", file="JsonTextReader.cs", label="Entry System.Type.GetArrayRank()", span="0-0"];
m8_280 [cluster="Unk.CreateNewDictionary", file="JsonTextReader.cs", label="Entry Unk.CreateNewDictionary", span=""];
m8_635 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="AddReference(reader, id, underlyingDictionary)", span="1295-1295"];
m8_636 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="OnDeserializing(reader, contract, underlyingDictionary)", span="1298-1298"];
m8_639 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="contract.KeyContract = GetContractSafe(contract.DictionaryKeyType)", span="1304-1304"];
m8_641 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="contract.ItemContract = GetContractSafe(contract.DictionaryValueType)", span="1309-1309"];
m8_642 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonConverter dictionaryValueConverter = contract.ItemConverter ?? GetConverter(contract.ItemContract, null, contract, containerProperty)", span="1312-1312"];
m8_651 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="CheckPropertyName(reader, keyValue.ToString())", span="1322-1322"];
m8_655 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="keyValue = DateTimeUtils.TryParseDateTime(keyValue.ToString(), reader.DateTimeZoneHandling, reader.DateFormatString, reader.Culture, out DateTime dt)\r\n                                            ? dt\r\n                                            : EnsureType(reader, keyValue, CultureInfo.InvariantCulture, contract.KeyContract, contract.DictionaryKeyType)", span="1337-1339"];
m8_656 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="keyValue = EnsureType(reader, keyValue, CultureInfo.InvariantCulture, contract.KeyContract, contract.DictionaryKeyType)", span="1353-1353"];
m8_663 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="itemValue = DeserializeConvertable(dictionaryValueConverter, reader, contract.DictionaryValueType, null)", span="1370-1370"];
m8_664 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="itemValue = CreateValueInternal(reader, contract.DictionaryValueType, contract.ItemContract, null, contract, containerProperty, null)", span="1374-1374"];
m8_667 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="IsErrorHandled(underlyingDictionary, contract, keyValue, reader as IJsonLineInfo, reader.Path, ex)", span="1381-1381"];
m8_668 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="HandleError(reader, true, initialDepth)", span="1383-1383"];
m8_676 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="ThrowUnexpectedEndException(reader, contract, underlyingDictionary, ''Unexpected end when deserializing object.'')", span="1403-1403"];
m8_677 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="OnDeserialized(reader, contract, underlyingDictionary)", span="1406-1406"];
m8_661 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="object itemValue", span="1367-1367"];
m8_659 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!reader.ReadForType(contract.ItemContract, dictionaryValueConverter != null)", span="1362-1362"];
m8_660 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="1364-1364"];
m8_673 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1397-1397"];
m8_647 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="bool finished = false", span="1315-1315"];
m8_637 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="int initialDepth = reader.Depth", span="1300-1300"];
m8_631 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="object underlyingDictionary = dictionary is IWrappedDictionary", span="1291-1291"];
m8_634 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="id != null", span="1293-1293"];
m8_638 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="contract.KeyContract == null", span="1302-1302"];
m8_640 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="contract.ItemContract == null", span="1307-1307"];
m8_643 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="PrimitiveTypeCode keyTypeCode = (contract.KeyContract is JsonPrimitiveContract ", span="1313-1313"];
m8_662 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="dictionaryValueConverter != null && dictionaryValueConverter.CanRead", span="1368-1368"];
m8_650 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="object keyValue = reader.Value", span="1321-1321"];
m8_652 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label=keyTypeCode, span="1332-1332"];
m8_674 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!finished && reader.Read()", span="1399-1399"];
m8_654 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="PrimitiveTypeCode.DateTimeNullable", span="1335-1335"];
m8_657 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label=Exception, span="1357-1357"];
m8_665 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="dictionary[keyValue] = itemValue", span="1377-1377"];
m8_669 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw;", span="1387-1387"];
m8_666 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label=Exception, span="1379-1379"];
m8_675 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="!finished", span="1401-1401"];
m8_678 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="return underlyingDictionary;", span="1407-1407"];
m8_633 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label=dictionary, span="1291-1291"];
m8_648 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="reader.TokenType", span="1318-1318"];
m8_658 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not convert string '{0}' to dictionary key type '{1}'. Create a TypeConverter to convert from the string to the key type object.''.FormatWith(CultureInfo.InvariantCulture, reader.Value, contract.DictionaryKeyType), ex);", span="1359-1359"];
m8_646 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="PrimitiveTypeCode.Empty", span="1313-1313"];
m8_632 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="wrappedDictionary ? wrappedDictionary", span="1291-1291"];
m8_644 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label=keyContract, span="1313-1313"];
m8_649 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.PropertyName", span="1320-1320"];
m8_653 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="PrimitiveTypeCode.DateTime", span="1334-1334"];
m8_670 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.Comment", span="1391-1391"];
m8_672 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="finished = true", span="1394-1394"];
m8_671 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="JsonToken.EndObject", span="1393-1393"];
m8_645 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="keyContract.TypeCode", span="1313-1313"];
m8_679 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1289-1289"];
m8_738 [cluster="System.Collections.IList.Add(object)", file="JsonTextReader.cs", label="Entry System.Collections.IList.Add(object)", span="0-0"];
m8_1021 [cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="JsonTextReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57"];
m8_504 [cluster="Unk.CreateValueInternal", file="JsonTextReader.cs", label="Entry Unk.CreateValueInternal", span=""];
m8_618 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", span="219-219"];
m8_1083 [file="JsonTextReader.cs", label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", span=""];
m8_1084 [file="JsonTextReader.cs", label=property, span=""];
m9_34 [cluster="Newtonsoft.Json.Tests.Serialization.Baz1.Baz1()", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Baz1.Baz1()", span="513-513"];
m9_31 [cluster="System.Guid.NewGuid()", file="ShouldSerializeTests.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m9_139 [cluster="System.Console.WriteLine(string, object)", file="ShouldSerializeTests.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m9_75 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeExample()", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeExample()", span="159-159"];
m9_82 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeExample()", file="ShouldSerializeTests.cs", label="string json = JsonConvert.SerializeObject(new[] { joe, mike }, Formatting.Indented)", span="169-169"];
m9_76 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeExample()", file="ShouldSerializeTests.cs", label="Employee joe = new Employee()", span="161-161"];
m9_78 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeExample()", file="ShouldSerializeTests.cs", label="Employee mike = new Employee()", span="163-163"];
m9_81 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeExample()", file="ShouldSerializeTests.cs", label="mike.Manager = mike", span="167-167"];
m9_83 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeExample()", file="ShouldSerializeTests.cs", label="Console.WriteLine(json)", span="182-182"];
m9_77 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeExample()", file="ShouldSerializeTests.cs", label="joe.Name = ''Joe Employee''", span="162-162"];
m9_80 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeExample()", file="ShouldSerializeTests.cs", label="joe.Manager = mike", span="166-166"];
m9_79 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeExample()", file="ShouldSerializeTests.cs", label="mike.Name = ''Mike Manager''", span="164-164"];
m9_84 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeExample()", file="ShouldSerializeTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeExample()", span="159-159"];
m9_117 [cluster="Unk.IsNull", file="ShouldSerializeTests.cs", label="Entry Unk.IsNull", span=""];
m9_33 [cluster="Newtonsoft.Json.Tests.Serialization.Bar1.Bar1()", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Bar1.Bar1()", span="473-473"];
m9_87 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", span="186-186"];
m9_93 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Age'''': 27\r\n}'', json)", span="195-197"];
m9_100 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="Assert.AreEqual(27, deserialized.Age)", span="205-205"];
m9_106 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James'''',\r\n  ''''Age'''': 27,\r\n  ''''Weight'''': 0,\r\n  ''''Height'''': 0,\r\n  ''''FavoriteNumber'''': 23\r\n}'', json)", span="213-219"];
m9_108 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="Assert.AreEqual(''James'', deserialized.Name)", span="222-222"];
m9_113 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="Assert.AreEqual(27, deserialized.Age)", span="227-227"];
m9_114 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="Assert.AreEqual(23, deserialized.FavoriteNumber)", span="228-228"];
m9_94 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="SpecifiedTestClass deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json)", span="199-199"];
m9_107 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json)", span="221-221"];
m9_92 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="193-193"];
m9_99 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="Assert.IsFalse(deserialized.FavoriteNumberSpecified)", span="204-204"];
m9_101 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="c.NameSpecified = true", span="207-207"];
m9_105 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="211-211"];
m9_109 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="Assert.IsTrue(deserialized.NameSpecified)", span="223-223"];
m9_112 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="Assert.IsTrue(deserialized.FavoriteNumberSpecified)", span="226-226"];
m9_95 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="Assert.IsNull(deserialized.Name)", span="200-200"];
m9_96 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="Assert.IsFalse(deserialized.NameSpecified)", span="201-201"];
m9_97 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="Assert.IsFalse(deserialized.WeightSpecified)", span="202-202"];
m9_98 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="Assert.IsFalse(deserialized.HeightSpecified)", span="203-203"];
m9_110 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="Assert.IsTrue(deserialized.WeightSpecified)", span="224-224"];
m9_111 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="Assert.IsTrue(deserialized.HeightSpecified)", span="225-225"];
m9_88 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="SpecifiedTestClass c = new SpecifiedTestClass()", span="188-188"];
m9_91 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="c.NameSpecified = false", span="191-191"];
m9_102 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="c.WeightSpecified = true", span="208-208"];
m9_104 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="c.FavoriteNumber = 23", span="210-210"];
m9_89 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="c.Name = ''James''", span="189-189"];
m9_90 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="c.Age = 27", span="190-190"];
m9_103 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="c.HeightSpecified = true", span="209-209"];
m9_115 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", file="ShouldSerializeTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedTest()", span="186-186"];
m9_119 [cluster="Unk.IsTrue", file="ShouldSerializeTests.cs", label="Entry Unk.IsTrue", span=""];
m9_52 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29"];
m9_51 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="493-493"];
m9_54 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", file="ShouldSerializeTests.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", span="0-0"];
m9_7 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.B.B()", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.B.B()", span="42-42"];
m9_85 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.Employee.Employee()", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.Employee.Employee()", span="361-361"];
m9_151 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.NewEmployee.NewEmployee()", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.NewEmployee.NewEmployee()", span="372-372"];
m9_118 [cluster="Unk.IsFalse", file="ShouldSerializeTests.cs", label="Entry Unk.IsFalse", span=""];
m9_57 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString()", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString()", span="66-66"];
m9_86 [cluster="System.Console.WriteLine(string)", file="ShouldSerializeTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m9_36 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.Serialize(Newtonsoft.Json.Tests.Serialization.Foo1)", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.Serialize(Newtonsoft.Json.Tests.Serialization.Foo1)", span="112-112"];
m9_40 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.Serialize(Newtonsoft.Json.Tests.Serialization.Foo1)", file="ShouldSerializeTests.cs", label="JsonSerializer jsonSerializer = JsonSerializer.CreateDefault()", span="115-115"];
m9_47 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.Serialize(Newtonsoft.Json.Tests.Serialization.Foo1)", file="ShouldSerializeTests.cs", label="jsonSerializer.Serialize(jsonWriter, f, typeof(Foo1))", span="124-124"];
m9_49 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.Serialize(Newtonsoft.Json.Tests.Serialization.Foo1)", file="ShouldSerializeTests.cs", label="return sw.ToString();", span="129-129"];
m9_41 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.Serialize(Newtonsoft.Json.Tests.Serialization.Foo1)", file="ShouldSerializeTests.cs", label="var traceWriter = new MemoryTraceWriter()", span="116-116"];
m9_42 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.Serialize(Newtonsoft.Json.Tests.Serialization.Foo1)", file="ShouldSerializeTests.cs", label="jsonSerializer.TraceWriter = traceWriter", span="117-117"];
m9_45 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.Serialize(Newtonsoft.Json.Tests.Serialization.Foo1)", file="ShouldSerializeTests.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="121-121"];
m9_46 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.Serialize(Newtonsoft.Json.Tests.Serialization.Foo1)", file="ShouldSerializeTests.cs", label="jsonWriter.Formatting = Formatting.None", span="123-123"];
m9_48 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.Serialize(Newtonsoft.Json.Tests.Serialization.Foo1)", file="ShouldSerializeTests.cs", label="Console.Out.WriteLine(''Trace output:\n{0}'', traceWriter.ToString())", span="127-127"];
m9_44 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.Serialize(Newtonsoft.Json.Tests.Serialization.Foo1)", file="ShouldSerializeTests.cs", label="StringWriter sw = new StringWriter(sb, CultureInfo.InvariantCulture)", span="120-120"];
m9_43 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.Serialize(Newtonsoft.Json.Tests.Serialization.Foo1)", file="ShouldSerializeTests.cs", label="StringBuilder sb = new StringBuilder(256)", span="119-119"];
m9_50 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.Serialize(Newtonsoft.Json.Tests.Serialization.Foo1)", file="ShouldSerializeTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.Serialize(Newtonsoft.Json.Tests.Serialization.Foo1)", span="112-112"];
m9_9 [cluster="Unk.AreEqual", file="ShouldSerializeTests.cs", label="Entry Unk.AreEqual", span=""];
m9_10 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", span="60-60"];
m9_21 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", color=green, community=0, file="ShouldSerializeTests.cs", label="3: Assert.AreEqual(setFoo.myBar.myBaz[0].myFrob[0].name, deserializedSetFoo.myBar.myBaz[0].myFrob[0].name)", span="101-101"];
m9_11 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", file="ShouldSerializeTests.cs", label="var setFoo = new Foo1()\r\n            {\r\n                name = Guid.NewGuid().ToString(),\r\n                myBar = new Bar1()\r\n                {\r\n                    name = Guid.NewGuid().ToString(),\r\n                    myBaz = new Baz1[] { \r\n						new Baz1(){\r\n							name = Guid.NewGuid().ToString(),\r\n							myFrob = new Frob1[]{\r\n								new Frob1{name = Guid.NewGuid().ToString()}\r\n							}\r\n						},\r\n						new Baz1(){\r\n							name = Guid.NewGuid().ToString(),\r\n							myFrob = new Frob1[]{\r\n								new Frob1{name = Guid.NewGuid().ToString()}\r\n							}\r\n						},\r\n						new Baz1(){\r\n							name = Guid.NewGuid().ToString(),\r\n							myFrob = new Frob1[]{\r\n								new Frob1{name = Guid.NewGuid().ToString()}\r\n							}\r\n						},\r\n					}\r\n                }\r\n            }", span="62-89"];
m9_13 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", file="ShouldSerializeTests.cs", label="var deserializedSetFoo = JsonConvert.DeserializeObject<Foo1>(setFooJson)", span="92-92"];
m9_20 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", file="ShouldSerializeTests.cs", label="Assert.IsNotNull(deserializedSetFoo.myBar.myBaz[0].myFrob[0])", span="100-100"];
m9_22 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", file="ShouldSerializeTests.cs", label="Assert.AreEqual(setFoo.myBar.myBaz[1].name, deserializedSetFoo.myBar.myBaz[1].name)", span="102-102"];
m9_23 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", color=green, community=0, file="ShouldSerializeTests.cs", label="3: Assert.IsNotNull(deserializedSetFoo.myBar.myBaz[2].myFrob[0])", span="103-103"];
m9_24 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", file="ShouldSerializeTests.cs", label="Assert.AreEqual(setFoo.myBar.myBaz[1].myFrob[0].name, deserializedSetFoo.myBar.myBaz[1].myFrob[0].name)", span="104-104"];
m9_12 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", file="ShouldSerializeTests.cs", label="var setFooJson = Serialize(setFoo)", span="91-91"];
m9_14 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", file="ShouldSerializeTests.cs", label="Assert.AreEqual(setFoo.name, deserializedSetFoo.name)", span="94-94"];
m9_16 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", file="ShouldSerializeTests.cs", label="Assert.AreEqual(setFoo.myBar.name, deserializedSetFoo.myBar.name)", span="96-96"];
m9_18 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", file="ShouldSerializeTests.cs", label="Assert.AreEqual(setFoo.myBar.myBaz.Length, deserializedSetFoo.myBar.myBaz.Length)", span="98-98"];
m9_19 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", file="ShouldSerializeTests.cs", label="Assert.AreEqual(setFoo.myBar.myBaz[0].name, deserializedSetFoo.myBar.myBaz[0].name)", span="99-99"];
m9_25 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", file="ShouldSerializeTests.cs", label="Assert.AreEqual(setFoo.myBar.myBaz[2].name, deserializedSetFoo.myBar.myBaz[2].name)", span="105-105"];
m9_27 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", file="ShouldSerializeTests.cs", label="Assert.AreEqual(setFoo.myBar.myBaz[2].myFrob[0].name, deserializedSetFoo.myBar.myBaz[2].myFrob[0].name)", span="107-107"];
m9_28 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", file="ShouldSerializeTests.cs", label="Assert.AreEqual(true, setFoo.myBar.ShouldSerializemyBazCalled)", span="109-109"];
m9_15 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", file="ShouldSerializeTests.cs", label="Assert.NotNull(deserializedSetFoo.myBar)", span="95-95"];
m9_17 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", file="ShouldSerializeTests.cs", label="Assert.NotNull(deserializedSetFoo.myBar.myBaz)", span="97-97"];
m9_26 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", file="ShouldSerializeTests.cs", label="Assert.IsNotNull(deserializedSetFoo.myBar.myBaz[2].myFrob[0])", span="106-106"];
m9_29 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", file="ShouldSerializeTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerialize()", span="60-60"];
m9_74 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="512-512"];
m9_35 [cluster="Newtonsoft.Json.Tests.Serialization.Frob1.Frob1()", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Frob1.Frob1()", span="546-546"];
m9_8 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="499-499"];
m9_38 [cluster="Unk.NotNull", file="ShouldSerializeTests.cs", label="Entry Unk.NotNull", span=""];
m9_39 [cluster="Unk.IsNotNull", file="ShouldSerializeTests.cs", label="Entry Unk.IsNotNull", span=""];
m9_37 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="726-726"];
m9_32 [cluster="System.Guid.ToString()", file="ShouldSerializeTests.cs", label="Entry System.Guid.ToString()", span="0-0"];
m9_3 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerializeSimple()", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerializeSimple()", span="52-52"];
m9_5 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerializeSimple()", file="ShouldSerializeTests.cs", label="Assert.AreEqual(''{}'', json)", span="56-56"];
m9_4 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerializeSimple()", file="ShouldSerializeTests.cs", label="string json = JsonConvert.SerializeObject(new B())", span="54-54"];
m9_6 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerializeSimple()", file="ShouldSerializeTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.VirtualShouldSerializeSimple()", span="52-52"];
m9_120 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedExample()", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedExample()", span="292-292"];
m9_132 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedExample()", file="ShouldSerializeTests.cs", label="FamilyDetails mike = JsonConvert.DeserializeObject<FamilyDetails>(mikeString)", span="317-317"];
m9_135 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedExample()", file="ShouldSerializeTests.cs", label="mike = JsonConvert.DeserializeObject<FamilyDetails>(mikeFullDisclosureString)", span="322-322"];
m9_131 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedExample()", file="ShouldSerializeTests.cs", label="string mikeString = ''{\''Name\'': \''Mike Person\''}''", span="316-316"];
m9_133 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedExample()", file="ShouldSerializeTests.cs", label="Console.WriteLine(''mikeString specifies number of children: {0}'', mike.NumberOfChildrenSpecified)", span="319-319"];
m9_134 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedExample()", file="ShouldSerializeTests.cs", label="string mikeFullDisclosureString = ''{\''Name\'': \''Mike Person\'', \''NumberOfChildren\'': \''0\''}''", span="321-321"];
m9_136 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedExample()", file="ShouldSerializeTests.cs", label="Console.WriteLine(''mikeString specifies number of children: {0}'', mike.NumberOfChildrenSpecified)", span="324-324"];
m9_130 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedExample()", file="ShouldSerializeTests.cs", label="Console.WriteLine(json)", span="314-314"];
m9_129 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedExample()", file="ShouldSerializeTests.cs", label="string json = JsonConvert.SerializeObject(new[] { joe, martha }, Formatting.Indented)", span="304-304"];
m9_121 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedExample()", file="ShouldSerializeTests.cs", label="FamilyDetails joe = new FamilyDetails()", span="294-294"];
m9_125 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedExample()", file="ShouldSerializeTests.cs", label="FamilyDetails martha = new FamilyDetails()", span="299-299"];
m9_128 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedExample()", file="ShouldSerializeTests.cs", label="martha.NumberOfChildrenSpecified = false", span="302-302"];
m9_122 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedExample()", file="ShouldSerializeTests.cs", label="joe.Name = ''Joe Family Details''", span="295-295"];
m9_123 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedExample()", file="ShouldSerializeTests.cs", label="joe.NumberOfChildren = 4", span="296-296"];
m9_124 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedExample()", file="ShouldSerializeTests.cs", label="joe.NumberOfChildrenSpecified = true", span="297-297"];
m9_126 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedExample()", file="ShouldSerializeTests.cs", label="martha.Name = ''Martha Family Details''", span="300-300"];
m9_127 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedExample()", file="ShouldSerializeTests.cs", label="martha.NumberOfChildren = 3", span="301-301"];
m9_137 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedExample()", file="ShouldSerializeTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.SpecifiedExample()", span="292-292"];
m9_58 [cluster="System.IO.TextWriter.WriteLine(string, object)", file="ShouldSerializeTests.cs", label="Entry System.IO.TextWriter.WriteLine(string, object)", span="0-0"];
m9_59 [cluster="System.IO.StringWriter.ToString()", file="ShouldSerializeTests.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m9_30 [cluster="Newtonsoft.Json.Tests.Serialization.Foo1.Foo1()", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Foo1.Foo1()", span="437-437"];
m9_53 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="ShouldSerializeTests.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m9_55 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116"];
m9_73 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeTestClass()", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeTestClass()", span="383-383"];
m9_60 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeTest()", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeTest()", span="133-133"];
m9_65 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeTest()", file="ShouldSerializeTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Age'''': 27\r\n}'', json)", span="141-143"];
m9_68 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeTest()", file="ShouldSerializeTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James'''',\r\n  ''''Age'''': 27\r\n}'', json)", span="148-151"];
m9_70 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeTest()", file="ShouldSerializeTests.cs", label="Assert.AreEqual(''James'', deserialized.Name)", span="154-154"];
m9_71 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeTest()", file="ShouldSerializeTests.cs", label="Assert.AreEqual(27, deserialized.Age)", span="155-155"];
m9_69 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeTest()", file="ShouldSerializeTests.cs", label="ShouldSerializeTestClass deserialized = JsonConvert.DeserializeObject<ShouldSerializeTestClass>(json)", span="153-153"];
m9_64 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeTest()", file="ShouldSerializeTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="139-139"];
m9_66 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeTest()", file="ShouldSerializeTests.cs", label="c._shouldSerializeName = true", span="145-145"];
m9_67 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeTest()", file="ShouldSerializeTests.cs", label="json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="146-146"];
m9_61 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeTest()", file="ShouldSerializeTests.cs", label="ShouldSerializeTestClass c = new ShouldSerializeTestClass()", span="135-135"];
m9_63 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeTest()", file="ShouldSerializeTests.cs", label="c.Age = 27", span="137-137"];
m9_62 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeTest()", file="ShouldSerializeTests.cs", label="c.Name = ''James''", span="136-136"];
m9_72 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeTest()", file="ShouldSerializeTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeTest()", span="133-133"];
m9_116 [cluster="Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass.SpecifiedTestClass()", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass.SpecifiedTestClass()", span="401-401"];
m9_138 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.FamilyDetails.FamilyDetails()", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.FamilyDetails.FamilyDetails()", span="282-282"];
m9_56 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="771-771"];
m9_140 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeInheritedClassTest()", file="ShouldSerializeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeInheritedClassTest()", span="328-328"];
m9_149 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeInheritedClassTest()", file="ShouldSerializeTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Age'''': 100,\r\n  ''''Name'''': ''''Joe Employee'''',\r\n  ''''Manager'''': {\r\n    ''''Name'''': ''''Mike Manager''''\r\n  }\r\n}'', json)", span="352-358"];
m9_148 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeInheritedClassTest()", file="ShouldSerializeTests.cs", label="string json = JsonConvert.SerializeObject(joe, Formatting.Indented)", span="350-350"];
m9_141 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeInheritedClassTest()", file="ShouldSerializeTests.cs", label="NewEmployee joe = new NewEmployee()", span="330-330"];
m9_147 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeInheritedClassTest()", file="ShouldSerializeTests.cs", label="joe.Manager = mike", span="338-338"];
m9_142 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeInheritedClassTest()", file="ShouldSerializeTests.cs", label="joe.Name = ''Joe Employee''", span="331-331"];
m9_143 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeInheritedClassTest()", file="ShouldSerializeTests.cs", label="joe.Age = 100", span="332-332"];
m9_144 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeInheritedClassTest()", file="ShouldSerializeTests.cs", label="Employee mike = new Employee()", span="334-334"];
m9_146 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeInheritedClassTest()", file="ShouldSerializeTests.cs", label="mike.Manager = mike", span="336-336"];
m9_145 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeInheritedClassTest()", file="ShouldSerializeTests.cs", label="mike.Name = ''Mike Manager''", span="335-335"];
m9_150 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeInheritedClassTest()", file="ShouldSerializeTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests.ShouldSerializeInheritedClassTest()", span="328-328"];
m9_185 [file="ShouldSerializeTests.cs", label="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests", span=""];
m11_318 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", span="956-956"];
m11_319 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", file="TypeNameHandlingTests.cs", label="return new CustomEnumerable<T>(newVal, this);", span="958-958"];
m11_320 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", span="956-956"];
m11_206 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.CustomSerializationBinder()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.CustomSerializationBinder()", span="644-644"];
m11_25 [cluster="System.Text.StringBuilder.StringBuilder()", file="TypeNameHandlingTests.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m11_567 [cluster="System.Guid.NewGuid()", file="TypeNameHandlingTests.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m11_400 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameList<T>.TypeNameList()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameList<T>.TypeNameList()", span="1922-1922"];
m11_104 [cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="34-34"];
m11_183 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", span="583-583"];
m11_184 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="string listRef = ReflectionUtils.GetTypeName(typeof(List<int>), FormatterAssemblyStyle.Simple, null)", span="585-585"];
m11_185 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="TypeNameProperty typeNameProperty = new TypeNameProperty\r\n            {\r\n                Name = ''Name!'',\r\n                Value = new List<int> { 1, 2, 3, 4, 5 }\r\n            }", span="587-591"];
m11_187 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Value'''': {\r\n    ''''$type'''': '''''' + listRef + @'''''',\r\n    ''''$values'''': [\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      5\r\n    ]\r\n  }\r\n}'', json)", span="595-607"];
m11_186 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(typeNameProperty, Formatting.Indented)", span="593-593"];
m11_188 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="TypeNameProperty deserialized = JsonConvert.DeserializeObject<TypeNameProperty>(json)", span="609-609"];
m11_189 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''Name!'', deserialized.Name)", span="610-610"];
m11_190 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(List<int>), deserialized.Value)", span="611-611"];
m11_191 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="List<int> nested = (List<int>)deserialized.Value", span="613-613"];
m11_192 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(5, nested.Count)", span="614-614"];
m11_193 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, nested[0])", span="615-615"];
m11_194 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(2, nested[1])", span="616-616"];
m11_195 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(3, nested[2])", span="617-617"];
m11_196 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(4, nested[3])", span="618-618"];
m11_197 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(5, nested[4])", span="619-619"];
m11_198 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", span="583-583"];
m11_279 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", span="819-819"];
m11_280 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="TypeNameHandlingTests.cs", label="Message message = new Message()", span="821-821"];
m11_281 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="TypeNameHandlingTests.cs", label="message.Address = ''http://www.google.com''", span="822-822"];
m11_282 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="TypeNameHandlingTests.cs", label="message.Body = new SearchDetails\r\n            {\r\n                Query = ''Json.NET'',\r\n                Language = ''en-us''\r\n            }", span="823-827"];
m11_283 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(message, Formatting.Indented)", span="829-829"];
m11_284 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="TypeNameHandlingTests.cs", label="Message deserialized = JsonConvert.DeserializeObject<Message>(json)", span="839-839"];
m11_285 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="TypeNameHandlingTests.cs", label="SearchDetails searchDetails = (SearchDetails)deserialized.Body", span="841-841"];
m11_286 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", span="819-819"];
m11_647 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", span="1863-1863"];
m11_648 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs", label="obj == null", span="1865-1865"];
m11_650 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs", label="ReferenceEquals(this, obj)", span="1866-1866"];
m11_652 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs", label="obj is IExample", span="1867-1867"];
m11_653 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs", label="return Name.Equals(((IExample)obj).Name);", span="1869-1869"];
m11_649 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs", label="return false;", span="1865-1865"];
m11_651 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs", label="return true;", span="1866-1866"];
m11_654 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs", label="return false;", span="1873-1873"];
m11_655 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", span="1863-1863"];
m11_580 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", span="1637-1637"];
m11_581 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs", label="MyParent p = new MyParent\r\n            {\r\n                Child = new MyChildList\r\n                {\r\n                    ''string!''\r\n                }\r\n            }", span="1639-1645"];
m11_582 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n                MissingMemberHandling = MissingMemberHandling.Ignore,\r\n                DefaultValueHandling = DefaultValueHandling.Ignore,\r\n                NullValueHandling = NullValueHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            }", span="1647-1655"];
m11_583 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(p, settings)", span="1657-1657"];
m11_585 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs", label="MyParent p2 = JsonConvert.DeserializeObject<MyParent>(json, settings)", span="1668-1668"];
m11_584 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''c'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MyChildList, Newtonsoft.Json.Tests'''',\r\n    ''''$values'''': [\r\n      ''''string!''''\r\n    ]\r\n  }\r\n}'', json)", span="1659-1666"];
m11_586 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(MyChildList), p2.Child)", span="1669-1669"];
m11_587 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, ((MyChildList)p2.Child).Count)", span="1670-1670"];
m11_588 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''string!'', ((MyChildList)p2.Child)[0])", span="1671-1671"];
m11_589 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", span="1637-1637"];
m11_17 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", span="112-112"];
m11_18 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="TypeNameHandlingTests.cs", label="StringBuilder sb = new StringBuilder()", span="114-114"];
m11_19 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="TypeNameHandlingTests.cs", label="int i = 0", span="115-115"];
m11_21 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="TypeNameHandlingTests.cs", label="sb.Append(@''{''''$value'''':'')", span="117-117"];
m11_23 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="TypeNameHandlingTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(''Unexpected token when deserializing primitive value: StartObject. Path '$value', line 1, position 11.'', () =>\r\n            {\r\n                var reader = new JsonTextReader(new StringReader(sb.ToString()));\r\n                var ser = new JsonSerializer();\r\n                ser.SpecialPropertyHandling = SpecialPropertyHandling.Default;\r\n                ser.Deserialize<bool>(reader);\r\n            })", span="120-126"];
m11_20 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="TypeNameHandlingTests.cs", label="i < 10000", span="115-115"];
m11_22 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="TypeNameHandlingTests.cs", label="i++", span="115-115"];
m11_24 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", span="112-112"];
m11_621 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1765-1765"];
m11_622 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="info.AddValue(''c'', Child)", span="1767-1767"];
m11_623 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1765-1765"];
m11_351 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Car.Car()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Car.Car()", span="982-982"];
m11_288 [cluster="Newtonsoft.Json.Tests.Serialization.SearchDetails.SearchDetails()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SearchDetails.SearchDetails()", span="1794-1794"];
m11_56 [cluster="Unk.IsTrue", file="TypeNameHandlingTests.cs", label="Entry Unk.IsTrue", span=""];
m11_289 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", span="853-853"];
m11_290 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs", label="Dictionary<string, object> collection = new Dictionary<string, object>()\r\n            {\r\n                { ''First'', new UrlStatus { Status = 404, Url = @''http://www.bing.com'' } },\r\n                { ''Second'', new UrlStatus { Status = 400, Url = @''http://www.google.com'' } },\r\n                {\r\n                    ''List'', new List<UrlStatus>\r\n                    {\r\n                        new UrlStatus { Status = 300, Url = @''http://www.yahoo.com'' },\r\n                        new UrlStatus { Status = 200, Url = @''http://www.askjeeves.com'' }\r\n                    }\r\n                }\r\n            }", span="855-866"];
m11_291 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(collection, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Simple\r\n            })", span="868-872"];
m11_292 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs", label="string urlStatusTypeName = ReflectionUtils.GetTypeName(typeof(UrlStatus), FormatterAssemblyStyle.Simple, null)", span="874-874"];
m11_293 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n  ''''First'''': {\r\n    ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n    ''''Status'''': 404,\r\n    ''''Url'''': ''''http://www.bing.com''''\r\n  },\r\n  ''''Second'''': {\r\n    ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n    ''''Status'''': 400,\r\n    ''''Url'''': ''''http://www.google.com''''\r\n  },\r\n  ''''List'''': {\r\n    ''''$type'''': ''''System.Collections.Generic.List`1[['' + urlStatusTypeName + @'']], mscorlib'''',\r\n    ''''$values'''': [\r\n      {\r\n        ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n        ''''Status'''': 300,\r\n        ''''Url'''': ''''http://www.yahoo.com''''\r\n      },\r\n      {\r\n        ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n        ''''Status'''': 200,\r\n        ''''Url'''': ''''http://www.askjeeves.com''''\r\n      }\r\n    ]\r\n  }\r\n}'', json)", span="876-903"];
m11_294 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs", label="object c = JsonConvert.DeserializeObject(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Simple\r\n            })", span="905-909"];
m11_295 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, object>), c)", span="911-911"];
m11_296 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs", label="Dictionary<string, object> newCollection = (Dictionary<string, object>)c", span="913-913"];
m11_297 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(3, newCollection.Count)", span="914-914"];
m11_298 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''http://www.bing.com'', ((UrlStatus)newCollection[''First'']).Url)", span="915-915"];
m11_299 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs", label="List<UrlStatus> statues = (List<UrlStatus>)newCollection[''List'']", span="917-917"];
m11_300 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(2, statues.Count)", span="918-918"];
m11_301 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", span="853-853"];
m11_625 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", span="1817-1817"];
m11_626 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="TypeNameHandlingTests.cs", label="SerializableWrapper w = obj as SerializableWrapper", span="1819-1819"];
m11_627 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="TypeNameHandlingTests.cs", label="w == null", span="1821-1821"];
m11_629 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="TypeNameHandlingTests.cs", label="return Equals(w.Content, Content);", span="1824-1824"];
m11_628 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="TypeNameHandlingTests.cs", label="return false;", span="1822-1822"];
m11_630 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", span="1817-1817"];
m11_274 [cluster="Newtonsoft.Json.Tests.TestObjects.ContentSubClass.ContentSubClass(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ContentSubClass.ContentSubClass(string)", span="33-33"];
m11_82 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", span="141-141"];
m11_569 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", span="1602-1602"];
m11_570 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="MyParent p = new MyParent\r\n            {\r\n                Child = new MyChild\r\n                {\r\n                    MyProperty = ''string!''\r\n                }\r\n            }", span="1604-1610"];
m11_571 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n                MissingMemberHandling = MissingMemberHandling.Ignore,\r\n                DefaultValueHandling = DefaultValueHandling.Ignore,\r\n                NullValueHandling = NullValueHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            }", span="1612-1620"];
m11_572 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(p, settings)", span="1622-1622"];
m11_574 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="MyParent p2 = JsonConvert.DeserializeObject<MyParent>(json, settings)", span="1631-1631"];
m11_573 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''c'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MyChild, Newtonsoft.Json.Tests'''',\r\n    ''''p'''': ''''string!''''\r\n  }\r\n}'', json)", span="1624-1629"];
m11_575 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(MyChild), p2.Child)", span="1632-1632"];
m11_576 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''string!'', ((MyChild)p2.Child).MyProperty)", span="1633-1633"];
m11_577 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", span="1602-1602"];
m11_52 [cluster="Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", span="27-27"];
m11_361 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.SerializableWrapper()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializableWrapper.SerializableWrapper()", span="1813-1813"];
m11_454 [cluster="object.ToString()", file="TypeNameHandlingTests.cs", label="Entry object.ToString()", span="0-0"];
m11_383 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="182-182"];
m11_658 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", span="1877-1877"];
m11_659 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="TypeNameHandlingTests.cs", label="Name == null", span="1879-1879"];
m11_660 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="TypeNameHandlingTests.cs", label="return 0;", span="1880-1880"];
m11_661 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="TypeNameHandlingTests.cs", label="return Name.GetHashCode();", span="1882-1882"];
m11_662 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", span="1877-1877"];
m11_39 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", span="130-130"];
m11_40 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs", label="var serializer = new JsonSerializer()\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            }", span="132-135"];
m11_41 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs", label="var sw = new StringWriter()", span="136-136"];
m11_42 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs", label="serializer.Serialize(new JsonTextWriter(sw) { Formatting = Formatting.Indented }, new WagePerson(), typeof(Person))", span="137-137"];
m11_47 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs", label="var person = serializer.Deserialize<Person>(rd)", span="151-151"];
m11_43 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs", label="var result = sw.ToString()", span="138-138"];
m11_44 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.WagePerson, Newtonsoft.Json.Tests'''',\r\n  ''''HourlyWage'''': 0.0,\r\n  ''''Name'''': null,\r\n  ''''BirthDate'''': ''''0001-01-01T00:00:00'''',\r\n  ''''LastModified'''': ''''0001-01-01T00:00:00''''\r\n}'', result)", span="140-146"];
m11_45 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs", label="Assert.IsTrue(result.Contains(''WagePerson''))", span="148-148"];
m11_46 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs", label="var rd = new JsonTextReader(new StringReader(result))", span="149-149"];
m11_48 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(WagePerson), person)", span="153-153"];
m11_49 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", span="130-130"];
m11_225 [cluster="Newtonsoft.Json.Tests.Serialization.Purchase.Purchase()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Purchase.Purchase()", span="1805-1805"];
m11_554 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDynamic.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDynamic.PropertyItemTypeNameHandlingDynamic()", span="1894-1894"];
m11_199 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", span="623-623"];
m11_200 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee'''',\r\n  ''''Name'''': ''''Name!''''\r\n}''", span="625-629"];
m11_201 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="object p = JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                Binder = new CustomSerializationBinder()\r\n            })", span="631-635"];
m11_202 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(Person), p)", span="637-637"];
m11_203 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Person person = (Person)p", span="639-639"];
m11_204 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''Name!'', person.Name)", span="641-641"];
m11_205 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", span="623-623"];
m11_453 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameObject.TypeNameObject()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameObject.TypeNameObject()", span="1932-1932"];
m11_419 [cluster="Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", span="61-61"];
m11_54 [cluster="System.IO.StringWriter.ToString()", file="TypeNameHandlingTests.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m11_207 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.BindToType(string, string)", span="646-646"];
m11_208 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="return typeof(Person);", span="648-648"];
m11_209 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.BindToType(string, string)", span="646-646"];
m11_663 [cluster="string.GetHashCode()", file="TypeNameHandlingTests.cs", label="Entry string.GetHashCode()", span="0-0"];
m11_224 [cluster="Newtonsoft.Json.Tests.Serialization.Customer.Customer()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Customer.Customer()", span="1800-1800"];
m11_210 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", span="654-654"];
m11_211 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="TypeNameSerializationBinder binder = new TypeNameSerializationBinder(''Newtonsoft.Json.Tests.Serialization.{0}, Newtonsoft.Json.Tests'')", span="656-656"];
m11_212 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="IList<object> values = new List<object>\r\n            {\r\n                new Customer\r\n                {\r\n                    Name = ''Caroline Customer''\r\n                },\r\n                new Purchase\r\n                {\r\n                    ProductName = ''Elbow Grease'',\r\n                    Price = 5.99m,\r\n                    Quantity = 1\r\n                }\r\n            }", span="658-670"];
m11_213 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(values, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n                Binder = binder\r\n            })", span="672-676"];
m11_214 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$type'''': ''''Customer'''',\r\n    ''''Name'''': ''''Caroline Customer''''\r\n  },\r\n  {\r\n    ''''$type'''': ''''Purchase'''',\r\n    ''''ProductName'''': ''''Elbow Grease'''',\r\n    ''''Price'''': 5.99,\r\n    ''''Quantity'''': 1\r\n  }\r\n]'', json)", span="692-703"];
m11_215 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="IList<object> newValues = JsonConvert.DeserializeObject<IList<object>>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n                Binder = new TypeNameSerializationBinder(''Newtonsoft.Json.Tests.Serialization.{0}, Newtonsoft.Json.Tests'')\r\n            })", span="705-709"];
m11_216 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(Customer), newValues[0])", span="711-711"];
m11_217 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Customer customer = (Customer)newValues[0]", span="712-712"];
m11_219 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(Purchase), newValues[1])", span="715-715"];
m11_220 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Purchase purchase = (Purchase)newValues[1]", span="716-716"];
m11_218 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''Caroline Customer'', customer.Name)", span="713-713"];
m11_221 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''Elbow Grease'', purchase.ProductName)", span="717-717"];
m11_222 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", span="654-654"];
m11_236 [cluster="string.Format(string, object)", file="TypeNameHandlingTests.cs", label="Entry string.Format(string, object)", span="0-0"];
m11_53 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="762-762"];
m11_106 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", span="334-334"];
m11_107 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="string employeeRef = typeof(EmployeeReference).AssemblyQualifiedName", span="336-336"];
m11_108 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="string personRef = typeof(Person).AssemblyQualifiedName", span="337-337"];
m11_109 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''$type'''': '''''' + employeeRef + @'''''',\r\n    ''''Name'''': ''''Bob'''',\r\n    ''''Manager'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': '''''' + employeeRef + @'''''',\r\n      ''''Name'''': ''''Frank'''',\r\n      ''''Manager'''': null\r\n    }\r\n  },\r\n  {\r\n    ''''$type'''': '''''' + personRef + @'''''',\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''\/Date(978134400000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978134400000)\/''''\r\n  },\r\n  ''''String!'''',\r\n  -2147483648\r\n]''", span="339-359"];
m11_110 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="List<object> values = (List<object>)JsonConvert.DeserializeObject(json, typeof(List<object>), new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n            })", span="361-365"];
m11_111 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(4, values.Count)", span="367-367"];
m11_112 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="EmployeeReference e = (EmployeeReference)values[0]", span="369-369"];
m11_113 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="Person p = (Person)values[1]", span="370-370"];
m11_119 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''String!'', values[2])", span="379-379"];
m11_120 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual((long)int.MinValue, values[3])", span="380-380"];
m11_114 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''Bob'', e.Name)", span="372-372"];
m11_115 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''Frank'', e.Manager.Name)", span="373-373"];
m11_116 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(null, p.Name)", span="375-375"];
m11_117 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.BirthDate)", span="376-376"];
m11_118 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.LastModified)", span="377-377"];
m11_121 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", span="334-334"];
m11_434 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameDictionary<T>.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameDictionary<T>.TypeNameDictionary()", span="1927-1927"];
m11_7 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359"];
m11_137 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="690-690"];
m11_527 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87"];
m11_122 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", span="384-384"];
m11_123 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="TypeNameHandlingTests.cs", label="string employeeRef = typeof(EmployeeReference).AssemblyQualifiedName", span="386-386"];
m11_124 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="TypeNameHandlingTests.cs", label="string personRef = typeof(Person).AssemblyQualifiedName", span="387-387"];
m11_125 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="TypeNameHandlingTests.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="389-394"];
m11_128 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="TypeNameHandlingTests.cs", label="Assert.IsTrue(ex.Message.StartsWith(@''Type specified in JSON ''' + employeeRef + @''' is not compatible with ''' + personRef + @'''.''))", span="406-406"];
m11_126 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="TypeNameHandlingTests.cs", label="JsonConvert.DeserializeObject(json, typeof(Person), new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects,\r\n                    TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n                })", span="398-402"];
m11_127 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="TypeNameHandlingTests.cs", label=JsonSerializationException, span="404-404"];
m11_129 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", span="384-384"];
m11_643 [cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="TypeNameHandlingTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0"];
m11_161 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", span="508-508"];
m11_162 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="TypeNameHandlingTests.cs", label="string containerTypeName = typeof(Container).AssemblyQualifiedName", span="510-510"];
m11_163 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="TypeNameHandlingTests.cs", label="string productListTypeName = typeof(List<Product>).AssemblyQualifiedName", span="511-511"];
m11_166 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''$type'''': '''''' + containerTypeName + @'''''',\r\n  ''''In'''': {\r\n    ''''$type'''': '''''' + productListTypeName + @'''''',\r\n    ''''$values'''': []\r\n  },\r\n  ''''Out'''': {\r\n    ''''$type'''': '''''' + productListTypeName + @'''''',\r\n    ''''$values'''': []\r\n  }\r\n}'', json)", span="527-537"];
m11_164 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="TypeNameHandlingTests.cs", label="Container container = new Container\r\n            {\r\n                In = new List<Product>(),\r\n                Out = new List<Product>()\r\n            }", span="513-517"];
m11_165 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(container, Formatting.Indented,\r\n                new JsonSerializerSettings\r\n                {\r\n                    NullValueHandling = NullValueHandling.Ignore,\r\n                    TypeNameHandling = TypeNameHandling.All,\r\n                    TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n                })", span="519-525"];
m11_167 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", span="508-508"];
m11_238 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", span="745-745"];
m11_239 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="HolderClass testObject = new HolderClass()", span="747-747"];
m11_240 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="testObject.TestMember = new ContentSubClass(''First One'')", span="748-748"];
m11_241 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="testObject.AnotherTestMember = new Dictionary<int, IList<ContentBaseClass>>()", span="749-749"];
m11_242 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="testObject.AnotherTestMember.Add(1, new List<ContentBaseClass>())", span="750-750"];
m11_243 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="testObject.AnotherTestMember[1].Add(new ContentSubClass(''Second One''))", span="751-751"];
m11_244 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="testObject.AThirdTestMember = new ContentSubClass(''Third One'')", span="752-752"];
m11_251 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="serializingTester.Serialize(jsonWriter, testObject)", span="762-762"];
m11_245 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="JsonSerializer serializingTester = new JsonSerializer()", span="754-754"];
m11_246 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="serializingTester.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="755-755"];
m11_250 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="serializingTester.TypeNameHandling = TypeNameHandling.Auto", span="761-761"];
m11_247 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="StringWriter sw = new StringWriter()", span="757-757"];
m11_248 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="758-758"];
m11_252 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="string json = sw.ToString()", span="765-765"];
m11_249 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="jsonWriter.Formatting = Formatting.Indented", span="760-760"];
m11_253 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="string contentSubClassRef = ReflectionUtils.GetTypeName(typeof(ContentSubClass), FormatterAssemblyStyle.Simple, null)", span="767-767"];
m11_257 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(expected, json)", span="791-791"];
m11_258 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="StringReader sr = new StringReader(json)", span="793-793"];
m11_254 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="string dictionaryRef = ReflectionUtils.GetTypeName(typeof(Dictionary<int, IList<ContentBaseClass>>), FormatterAssemblyStyle.Simple, null)", span="768-768"];
m11_256 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="string expected = @''{\r\n  ''''TestMember'''': {\r\n    ''''$type'''': '''''' + contentSubClassRef + @'''''',\r\n    ''''SomeString'''': ''''First One''''\r\n  },\r\n  ''''AnotherTestMember'''': {\r\n    ''''$type'''': '''''' + dictionaryRef + @'''''',\r\n    ''''1'''': [\r\n      {\r\n        ''''$type'''': '''''' + contentSubClassRef + @'''''',\r\n        ''''SomeString'''': ''''Second One''''\r\n      }\r\n    ]\r\n  },\r\n  ''''AThirdTestMember'''': {\r\n    ''''$type'''': '''''' + contentSubClassRef + @'''''',\r\n    ''''SomeString'''': ''''Third One''''\r\n  }\r\n}''", span="771-789"];
m11_255 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="string listRef = ReflectionUtils.GetTypeName(typeof(List<ContentBaseClass>), FormatterAssemblyStyle.Simple, null)", span="769-769"];
m11_259 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="JsonSerializer deserializingTester = new JsonSerializer()", span="795-795"];
m11_261 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="799-799"];
m11_260 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="HolderClass anotherTestObject", span="797-797"];
m11_262 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="deserializingTester.TypeNameHandling = TypeNameHandling.Auto", span="801-801"];
m11_263 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="anotherTestObject = deserializingTester.Deserialize<HolderClass>(jsonReader)", span="803-803"];
m11_264 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="Assert.IsNotNull(anotherTestObject)", span="806-806"];
m11_265 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(ContentSubClass), anotherTestObject.TestMember)", span="807-807"];
m11_266 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(Dictionary<int, IList<ContentBaseClass>>), anotherTestObject.AnotherTestMember)", span="808-808"];
m11_267 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, anotherTestObject.AnotherTestMember.Count)", span="809-809"];
m11_268 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="IList<ContentBaseClass> list = anotherTestObject.AnotherTestMember[1]", span="811-811"];
m11_269 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(List<ContentBaseClass>), list)", span="813-813"];
m11_270 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, list.Count)", span="814-814"];
m11_271 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(ContentSubClass), list[0])", span="815-815"];
m11_272 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", span="745-745"];
m11_362 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", span="1059-1059"];
m11_363 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs", label="Console.WriteLine(''Type Name Handling: '' + flag.ToString())", span="1061-1061"];
m11_366 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs", label="serializer.TypeNameHandling = flag", span="1066-1066"];
m11_367 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs", label="serializer.Serialize(new JsonTextWriter(writer), e)", span="1069-1069"];
m11_371 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(e, f, ''Objects should be equal after round trip json serialization'')", span="1080-1080"];
m11_364 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs", label="StringWriter writer = new StringWriter()", span="1062-1062"];
m11_365 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1065-1065"];
m11_368 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs", label="Console.WriteLine(writer.ToString())", span="1070-1070"];
m11_370 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs", label="SerializableWrapper f = serializer.Deserialize<SerializableWrapper>(new JsonTextReader(new StringReader(writer.ToString())))", span="1077-1077"];
m11_369 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs", label="Console.WriteLine()", span="1071-1071"];
m11_372 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", span="1059-1059"];
m11_435 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", span="1227-1227"];
m11_436 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="TypeNameObject o1 = new TypeNameObject()", span="1229-1229"];
m11_437 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="o1.Object1 = new TestComponentSimple { MyProperty = 1 }", span="1231-1231"];
m11_438 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="o1.Object2 = 123", span="1232-1232"];
m11_439 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="o1.ObjectNotHandled = new TestComponentSimple { MyProperty = int.MaxValue }", span="1233-1233"];
m11_440 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="o1.String = ''String!''", span="1234-1234"];
m11_441 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="o1.Integer = int.MaxValue", span="1235-1235"];
m11_442 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(o1, Formatting.Indented)", span="1237-1237"];
m11_443 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="string expected = @''{\r\n  ''''Object1'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 1\r\n  },\r\n  ''''Object2'''': 123,\r\n  ''''ObjectNotHandled'''': {\r\n    ''''MyProperty'''': 2147483647\r\n  },\r\n  ''''String'''': ''''String!'''',\r\n  ''''Integer'''': 2147483647\r\n}''", span="1238-1249"];
m11_444 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(expected, json)", span="1250-1250"];
m11_445 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="TypeNameObject o2 = JsonConvert.DeserializeObject<TypeNameObject>(json)", span="1252-1252"];
m11_446 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="Assert.IsNotNull(o2)", span="1253-1253"];
m11_447 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), o2.Object1)", span="1255-1255"];
m11_448 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, ((TestComponentSimple)o2.Object1).MyProperty)", span="1256-1256"];
m11_449 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(long), o2.Object2)", span="1257-1257"];
m11_450 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o2.ObjectNotHandled)", span="1258-1258"];
m11_451 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''MyProperty'''': 2147483647\r\n}'', o2.ObjectNotHandled.ToString())", span="1259-1261"];
m11_452 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", span="1227-1227"];
m11_303 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="704-704"];
m11_619 [cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="TypeNameHandlingTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0"];
m11_237 [cluster="System.Type.GetType(string, bool)", file="TypeNameHandlingTests.cs", label="Entry System.Type.GetType(string, bool)", span="0-0"];
m11_90 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="820-820"];
m11_321 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", span="961-961"];
m11_322 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs", label="count == 0", span="963-963"];
m11_323 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs", label="yield break;", span="964-964"];
m11_324 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs", label="yield return value;", span="965-965"];
m11_328 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs", label="yield return nextInLine.value;", span="971-971"];
m11_325 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs", label="var nextInLine = next", span="967-967"];
m11_326 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs", label="nextInLine != null", span="968-968"];
m11_327 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs", label="nextInLine.count != 0", span="970-970"];
m11_329 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs", label="nextInLine = nextInLine.next", span="972-972"];
m11_330 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", span="961-961"];
m11_525 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingObject.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingObject.PropertyItemTypeNameHandlingObject()", span="1887-1887"];
m11_275 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m11_455 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", span="1265-1265"];
m11_456 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="PropertyItemTypeNameHandling c1 = new PropertyItemTypeNameHandling()", span="1267-1267"];
m11_457 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="c1.Data = new List<object>\r\n            {\r\n                1,\r\n                ''two'',\r\n                new TestComponentSimple { MyProperty = 1 }\r\n            }", span="1268-1273"];
m11_458 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1275-1275"];
m11_459 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Data'''': [\r\n    1,\r\n    ''''two'''',\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    }\r\n  ]\r\n}'', json)", span="1276-1285"];
m11_460 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="PropertyItemTypeNameHandling c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1287-1287"];
m11_461 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(3, c2.Data.Count)", span="1288-1288"];
m11_462 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(long), c2.Data[0])", span="1290-1290"];
m11_463 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(string), c2.Data[1])", span="1291-1291"];
m11_464 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[2])", span="1292-1292"];
m11_465 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="TestComponentSimple c = (TestComponentSimple)c2.Data[2]", span="1293-1293"];
m11_466 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, c.MyProperty)", span="1294-1294"];
m11_467 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", span="1265-1265"];
m11_468 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandling.PropertyItemTypeNameHandling()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandling.PropertyItemTypeNameHandling()", span="1915-1915"];
m11_91 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", span="263-263"];
m11_92 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="TypeNameHandlingTests.cs", label="string cookieRef = ReflectionUtils.GetTypeName(typeof(Cookie), FormatterAssemblyStyle.Simple, null)", span="265-265"];
m11_93 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="TypeNameHandlingTests.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + cookieRef + @''''''\r\n}''", span="267-270"];
m11_94 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="TypeNameHandlingTests.cs", label="object cookie = JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="272-275"];
m11_95 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(Cookie), cookie)", span="277-277"];
m11_96 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", span="263-263"];
m11_304 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", span="923-923"];
m11_305 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="TypeNameHandlingTests.cs", label="string productClassRef = ReflectionUtils.GetTypeName(typeof(CustomEnumerable<Product>), FormatterAssemblyStyle.Simple, null)", span="925-925"];
m11_306 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="TypeNameHandlingTests.cs", label="CustomEnumerable<Product> products = new CustomEnumerable<Product>()", span="927-927"];
m11_308 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''$type'''': '''''' + productClassRef + @'''''',\r\n  ''''$values'''': []\r\n}'', json)", span="931-934"];
m11_307 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(products, Formatting.Indented, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All })", span="929-929"];
m11_309 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", span="923-923"];
m11_555 [cluster="Newtonsoft.Json.Tests.Linq.DynamicDictionary.DynamicDictionary()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicDictionary.DynamicDictionary()", span="826-826"];
m11_624 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="TypeNameHandlingTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m11_273 [cluster="Newtonsoft.Json.Tests.TestObjects.HolderClass.HolderClass()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.HolderClass.HolderClass()", span="31-31"];
m11_656 [cluster="object.ReferenceEquals(object, object)", file="TypeNameHandlingTests.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m11_55 [cluster="string.Contains(string)", file="TypeNameHandlingTests.cs", label="Entry string.Contains(string)", span="0-0"];
m11_38 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="658-658"];
m11_353 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", span="1037-1037"];
m11_354 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="TypeNameHandlingTests.cs", label="IExample e = new Example(''Rob'')", span="1040-1040"];
m11_355 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="TypeNameHandlingTests.cs", label="SerializableWrapper w = new SerializableWrapper\r\n            {\r\n                Content = e\r\n            }", span="1042-1045"];
m11_356 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="TypeNameHandlingTests.cs", label="TestJsonSerializationRoundTrip(w, TypeNameHandling.All)", span="1054-1054"];
m11_357 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="TypeNameHandlingTests.cs", label="TestJsonSerializationRoundTrip(w, TypeNameHandling.Auto)", span="1055-1055"];
m11_358 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="TypeNameHandlingTests.cs", label="TestJsonSerializationRoundTrip(w, TypeNameHandling.Objects)", span="1056-1056"];
m11_359 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", span="1037-1037"];
m11_331 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", span="976-976"];
m11_332 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="TypeNameHandlingTests.cs", label="return GetEnumerator();", span="978-978"];
m11_333 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", span="976-976"];
m11_63 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", span="181-181"];
m11_64 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs", label="Wrapper wrapper = new Wrapper()", span="183-183"];
m11_65 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs", label="wrapper.Array = new List<EmployeeReference>\r\n            {\r\n                new EmployeeReference()\r\n            }", span="184-187"];
m11_66 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs", label="wrapper.Dictionary = new Dictionary<string, EmployeeReference>\r\n            {\r\n                { ''First'', new EmployeeReference() }\r\n            }", span="188-191"];
m11_67 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(wrapper, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="193-196"];
m11_68 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Array'''': [\r\n    {\r\n      ''''$id'''': ''''1'''',\r\n      ''''Name'''': null,\r\n      ''''Manager'''': null\r\n    }\r\n  ],\r\n  ''''Dictionary'''': {\r\n    ''''First'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''Name'''': null,\r\n      ''''Manager'''': null\r\n    }\r\n  }\r\n}'', json)", span="198-213"];
m11_69 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs", label="Wrapper w2 = JsonConvert.DeserializeObject<Wrapper>(json)", span="215-215"];
m11_70 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(List<EmployeeReference>), w2.Array)", span="216-216"];
m11_71 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, EmployeeReference>), w2.Dictionary)", span="217-217"];
m11_72 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", span="181-181"];
m11_644 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1856-1856"];
m11_645 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="info.AddValue(''name'', Name)", span="1858-1858"];
m11_646 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1856-1856"];
m11_34 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m11_469 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", span="1298-1298"];
m11_470 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="PropertyItemTypeNameHandling c1 = new PropertyItemTypeNameHandling\r\n            {\r\n                Data = new List<object>\r\n                {\r\n                    new TestComponentSimple { MyProperty = 1 },\r\n                    new List<object>\r\n                    {\r\n                        new List<object>\r\n                        {\r\n                            new List<object>()\r\n                        }\r\n                    }\r\n                }\r\n            }", span="1300-1313"];
m11_471 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1315-1315"];
m11_472 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Data'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        [\r\n          []\r\n        ]\r\n      ]\r\n    }\r\n  ]\r\n}'', json)", span="1316-1331"];
m11_473 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="PropertyItemTypeNameHandling c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1333-1333"];
m11_474 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="1334-1334"];
m11_475 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[0])", span="1336-1336"];
m11_476 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(List<object>), c2.Data[1])", span="1337-1337"];
m11_477 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="List<object> c = (List<object>)c2.Data[1]", span="1338-1338"];
m11_478 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JArray), c[0])", span="1339-1339"];
m11_479 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="json = @''{\r\n  ''''Data'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n          ''''MyProperty'''': 1\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}''", span="1341-1357"];
m11_480 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1359-1359"];
m11_481 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="1360-1360"];
m11_482 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[0])", span="1362-1362"];
m11_483 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(List<object>), c2.Data[1])", span="1363-1363"];
m11_484 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="c = (List<object>)c2.Data[1]", span="1364-1364"];
m11_485 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), c[0])", span="1365-1365"];
m11_486 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="JObject o = (JObject)c[0]", span="1366-1366"];
m11_487 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, (int)o[''MyProperty''])", span="1367-1367"];
m11_488 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", span="1298-1298"];
m11_160 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="789-789"];
m11_130 [cluster="string.StartsWith(string)", file="TypeNameHandlingTests.cs", label="Entry string.StartsWith(string)", span="0-0"];
m11_168 [cluster="Newtonsoft.Json.Tests.TestObjects.Container.Container()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Container.Container()", span="29-29"];
m11_6 [cluster="Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", span="30-30"];
m11_568 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="557-557"];
m11_83 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", span="241-241"];
m11_84 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="TypeNameHandlingTests.cs", label="string employeeRef = ReflectionUtils.GetTypeName(typeof(EmployeeReference), FormatterAssemblyStyle.Simple, null)", span="243-243"];
m11_85 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="TypeNameHandlingTests.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="245-250"];
m11_86 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="TypeNameHandlingTests.cs", label="object employee = JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="252-255"];
m11_87 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(EmployeeReference), employee)", span="257-257"];
m11_88 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''Name!'', ((EmployeeReference)employee).Name)", span="258-258"];
m11_89 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", span="241-241"];
m11_509 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDictionary.PropertyItemTypeNameHandlingDictionary()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDictionary.PropertyItemTypeNameHandlingDictionary()", span="1909-1909"];
m11_420 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", span="1200-1200"];
m11_421 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="TypeNameDictionary<object> l = new TypeNameDictionary<object>()", span="1202-1202"];
m11_422 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="l.Add(''First'', new TestComponentSimple { MyProperty = 1 })", span="1203-1203"];
m11_423 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="l.Add(''Second'', ''String!'')", span="1204-1204"];
m11_424 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="l.Add(''Third'', long.MaxValue)", span="1205-1205"];
m11_425 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1207-1207"];
m11_426 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''First'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 1\r\n  },\r\n  ''''Second'''': ''''String!'''',\r\n  ''''Third'''': 9223372036854775807\r\n}'', json)", span="1208-1215"];
m11_427 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="TypeNameDictionary<object> l2 = JsonConvert.DeserializeObject<TypeNameDictionary<object>>(json)", span="1217-1217"];
m11_428 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(3, l2.Count)", span="1218-1218"];
m11_429 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), l2[''First''])", span="1220-1220"];
m11_430 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, ((TestComponentSimple)l2[''First'']).MyProperty)", span="1221-1221"];
m11_431 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(string), l2[''Second''])", span="1222-1222"];
m11_432 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(long), l2[''Third''])", span="1223-1223"];
m11_433 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", span="1200-1200"];
m11_376 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", span="1086-1086"];
m11_377 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="TypeNameHandlingTests.cs", label="Message message = new Message\r\n            {\r\n                Address = ''jamesnk@testtown.com'',\r\n                Body = new Version(1, 2, 3, 4)\r\n            }", span="1088-1092"];
m11_378 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(message, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full,\r\n                Binder = new MetroBinder(),\r\n                ContractResolver = new DefaultContractResolver\r\n                {\r\n#if !(NETFX_CORE || PORTABLE)\r\n                    IgnoreSerializableAttribute = true\r\n#endif\r\n                }\r\n            })", span="1094-1105"];
m11_379 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''$type'''': '''':::MESSAGE:::, AssemblyName'''',\r\n  ''''Address'''': ''''jamesnk@testtown.com'''',\r\n  ''''Body'''': {\r\n    ''''$type'''': '''':::VERSION:::, AssemblyName'''',\r\n    ''''Major'''': 1,\r\n    ''''Minor'''': 2,\r\n    ''''Build'''': 3,\r\n    ''''Revision'''': 4,\r\n    ''''MajorRevision'''': 0,\r\n    ''''MinorRevision'''': 4\r\n  }\r\n}'', json)", span="1107-1119"];
m11_380 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", span="1086-1086"];
m11_391 [cluster="string.ToUpper(System.Globalization.CultureInfo)", file="TypeNameHandlingTests.cs", label="Entry string.ToUpper(System.Globalization.CultureInfo)", span="0-0"];
m11_150 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", span="476-476"];
m11_151 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs", label="string typeName = typeof(SendHttpRequest).AssemblyQualifiedName", span="478-478"];
m11_152 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs", label="string json = @''{\r\n''''$type'''': '''''' + typeName + @'''''',\r\n''''RequestData'''': {\r\n''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib,Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'''',\r\n''''Id'''': ''''siedemnaście'''',\r\n''''X'''': ''''323''''\r\n},\r\n''''Method'''': ''''GET'''',\r\n''''Url'''': ''''http://www.onet.pl'''',\r\n''''RequestEncoding'''': ''''UTF-8'''',\r\n''''CorrelationId'''': ''''xyz''''\r\n}''", span="480-491"];
m11_153 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs", label="ICorrelatedMessage message = JsonConvert.DeserializeObject<ICorrelatedMessage>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n            })", span="493-497"];
m11_154 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(SendHttpRequest), message)", span="499-499"];
m11_155 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs", label="SendHttpRequest request = (SendHttpRequest)message", span="501-501"];
m11_156 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''xyz'', request.CorrelationId)", span="502-502"];
m11_157 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(2, request.RequestData.Count)", span="503-503"];
m11_158 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''siedemnaście'', request.RequestData[''Id''])", span="504-504"];
m11_159 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", span="476-476"];
m11_8 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="593-593"];
m11_334 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", span="996-996"];
m11_335 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="Car testerObject = new Car()", span="998-998"];
m11_336 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="testerObject.Year = new DateTime(2000, 10, 5, 1, 1, 1, DateTimeKind.Utc)", span="999-999"];
m11_338 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="testerObject.Objects = new object[] { data, ''prueba'' }", span="1001-1001"];
m11_342 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="string output = JsonConvert.SerializeObject(testerObject, Formatting.Indented, jsonSettings)", span="1007-1007"];
m11_337 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="byte[] data = new byte[] { 75, 65, 82, 73, 82, 65 }", span="1000-1000"];
m11_349 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="CollectionAssert.AreEquivalent(data, d)", span="1032-1032"];
m11_339 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="JsonSerializerSettings jsonSettings = new JsonSerializerSettings()", span="1003-1003"];
m11_340 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="jsonSettings.NullValueHandling = NullValueHandling.Ignore", span="1004-1004"];
m11_341 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="jsonSettings.TypeNameHandling = TypeNameHandling.All", span="1005-1005"];
m11_345 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="Car obj = JsonConvert.DeserializeObject<Car>(output, jsonSettings)", span="1025-1025"];
m11_343 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="string carClassRef = ReflectionUtils.GetTypeName(typeof(Car), FormatterAssemblyStyle.Simple, null)", span="1009-1009"];
m11_344 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(output, @''{\r\n  ''''$type'''': '''''' + carClassRef + @'''''',\r\n  ''''Year'''': ''''2000-10-05T01:01:01Z'''',\r\n  ''''Objects'''': {\r\n    ''''$type'''': ''''System.Object[], mscorlib'''',\r\n    ''''$values'''': [\r\n      {\r\n        ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n        ''''$value'''': ''''S0FSSVJB''''\r\n      },\r\n      ''''prueba''''\r\n    ]\r\n  }\r\n}'')", span="1011-1024"];
m11_346 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="Assert.IsNotNull(obj)", span="1027-1027"];
m11_347 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="Assert.IsTrue(obj.Objects[0] is byte[])", span="1029-1029"];
m11_348 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="byte[] d = (byte[])obj.Objects[0]", span="1031-1031"];
m11_350 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", span="996-996"];
m11_138 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="402-402"];
m11_615 [cluster="System.Collections.Generic.Stack<T>.Stack(System.Collections.Generic.IEnumerable<T>)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.Stack<T>.Stack(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m11_73 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Wrapper.Wrapper()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Wrapper.Wrapper()", span="174-174"];
m11_181 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", span="540-540"];
m11_277 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="789-789"];
m11_37 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="435-435"];
m11_97 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", span="282-282"];
m11_98 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="string employeeRef = typeof(EmployeeReference).AssemblyQualifiedName", span="284-284"];
m11_99 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="string personRef = typeof(Person).AssemblyQualifiedName", span="285-285"];
m11_102 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''$type'''': '''''' + employeeRef + @'''''',\r\n    ''''Name'''': ''''Bob'''',\r\n    ''''Manager'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': '''''' + employeeRef + @'''''',\r\n      ''''Name'''': ''''Frank'''',\r\n      ''''Manager'''': null\r\n    }\r\n  },\r\n  {\r\n    ''''$type'''': '''''' + personRef + @'''''',\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''2000-12-30T00:00:00Z'''',\r\n    ''''LastModified'''': ''''2000-12-30T00:00:00Z''''\r\n  },\r\n  ''''String!'''',\r\n  -2147483648\r\n]'', json)", span="310-330"];
m11_100 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="List<object> values = new List<object>\r\n            {\r\n                new EmployeeReference\r\n                {\r\n                    Name = ''Bob'',\r\n                    Manager = new EmployeeReference { Name = ''Frank'' }\r\n                },\r\n                new Person\r\n                {\r\n                    Department = ''Department'',\r\n                    BirthDate = new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc),\r\n                    LastModified = new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc)\r\n                },\r\n                ''String!'',\r\n                int.MinValue\r\n            }", span="287-302"];
m11_101 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(values, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n            })", span="304-308"];
m11_103 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", span="282-282"];
m11_302 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.UrlStatus.UrlStatus()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.UrlStatus.UrlStatus()", span="845-845"];
m11_401 [cluster="System.Collections.Generic.List<T>.Add(T)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m11_556 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", span="1579-1579"];
m11_557 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="string contextKey = ''k1''", span="1581-1581"];
m11_558 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="var someValue = Guid.NewGuid()", span="1582-1582"];
m11_560 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="inputContext.Add(contextKey, someValue)", span="1585-1585"];
m11_565 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(someValue, deserializedObject[contextKey])", span="1598-1598"];
m11_559 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="Dictionary<string, Guid> inputContext = new Dictionary<string, Guid>()", span="1584-1584"];
m11_562 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="string serializedString = JsonConvert.SerializeObject(inputContext, jsonSerializerSettings)", span="1592-1592"];
m11_561 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="JsonSerializerSettings jsonSerializerSettings = new JsonSerializerSettings()\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                TypeNameHandling = TypeNameHandling.All\r\n            }", span="1587-1591"];
m11_564 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="var deserializedObject = (Dictionary<string, Guid>)JsonConvert.DeserializeObject(serializedString, jsonSerializerSettings)", span="1596-1596"];
m11_563 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="Console.WriteLine(serializedString)", span="1594-1594"];
m11_566 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", span="1579-1579"];
m11_131 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", span="411-411"];
m11_132 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="TypeNameHandlingTests.cs", label="string employeeRef = typeof(EmployeeReference).AssemblyQualifiedName", span="413-413"];
m11_133 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="TypeNameHandlingTests.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="415-420"];
m11_134 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="TypeNameHandlingTests.cs", label="JObject o = (JObject)JsonConvert.DeserializeObject(json)", span="422-422"];
m11_135 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}'', o.ToString())", span="424-427"];
m11_136 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", span="411-411"];
m11_374 [cluster="System.Console.WriteLine(string)", file="TypeNameHandlingTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m11_382 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.MetroBinder()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.MetroBinder()", span="1122-1122"];
m11_526 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTestObject.TypeNameHandlingTestObject()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTestObject.TypeNameHandlingTestObject()", span="1901-1901"];
m11_5 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m11_9 [cluster="Unk.AreEqual", file="TypeNameHandlingTests.cs", label="Entry Unk.AreEqual", span=""];
m11_352 [cluster="Unk.AreEquivalent", file="TypeNameHandlingTests.cs", label="Entry Unk.AreEquivalent", span=""];
m11_62 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="613-613"];
m11_278 [cluster="Unk.IsNotNull", file="TypeNameHandlingTests.cs", label="Entry Unk.IsNotNull", span=""];
m11_384 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToType(string, string)", span="1124-1124"];
m11_385 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="return null;", span="1126-1126"];
m11_386 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToType(string, string)", span="1124-1124"];
m11_276 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m11_228 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", span="729-729"];
m11_229 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", file="TypeNameHandlingTests.cs", label="assemblyName = null", span="731-731"];
m11_230 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", file="TypeNameHandlingTests.cs", label="typeName = serializedType.Name", span="732-732"];
m11_231 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", span="729-729"];
m11_139 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", span="431-431"];
m11_140 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", file="TypeNameHandlingTests.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="433-438"];
m11_141 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", file="TypeNameHandlingTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''Type specified in JSON 'Newtonsoft.Json.Tests.TestObjects.Employee' was not resolved. Path '$type', line 3, position 56.'',\r\n                () =>\r\n                {\r\n                    JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n                    {\r\n                        TypeNameHandling = TypeNameHandling.Objects\r\n                    });\r\n                })", span="440-448"];
m11_142 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", span="431-431"];
m11_310 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", span="951-951"];
m11_316 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="TypeNameHandlingTests.cs", label="count = 0", span="953-953"];
m11_317 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", span="951-951"];
m11_223 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", span="724-724"];
m11_226 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="TypeNameHandlingTests.cs", label="TypeFormat = typeFormat", span="726-726"];
m11_227 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", span="724-724"];
m11_146 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest.SendHttpRequest()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest.SendHttpRequest()", span="458-458"];
m11_147 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest.SendHttpRequest()", file="TypeNameHandlingTests.cs", label="RequestEncoding = ''UTF-8''", span="460-460"];
m11_148 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest.SendHttpRequest()", file="TypeNameHandlingTests.cs", label="Method = ''GET''", span="461-461"];
m11_149 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest.SendHttpRequest()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest.SendHttpRequest()", span="458-458"];
m11_51 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116"];
m11_143 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="Entry lambda expression", span="442-448"];
m11_29 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="var reader = new JsonTextReader(new StringReader(sb.ToString()))", span="122-122"];
m11_28 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="Entry lambda expression", span="120-126"];
m11_30 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="var ser = new JsonSerializer()", span="123-123"];
m11_32 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="ser.Deserialize<bool>(reader)", span="125-125"];
m11_31 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="ser.SpecialPropertyHandling = SpecialPropertyHandling.Default", span="124-124"];
m11_33 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="Exit lambda expression", span="120-126"];
m11_144 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n                    {\r\n                        TypeNameHandling = TypeNameHandling.Objects\r\n                    })", span="444-447"];
m11_145 [cluster="lambda expression", file="TypeNameHandlingTests.cs", label="Exit lambda expression", span="442-448"];
m11_375 [cluster="System.Console.WriteLine()", file="TypeNameHandlingTests.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m11_58 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", span="158-158"];
m11_59 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(new WagePerson(), typeof(object), Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="160-163"];
m11_60 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.WagePerson, Newtonsoft.Json.Tests'''',\r\n  ''''HourlyWage'''': 0.0,\r\n  ''''Name'''': null,\r\n  ''''BirthDate'''': ''''0001-01-01T00:00:00'''',\r\n  ''''LastModified'''': ''''0001-01-01T00:00:00''''\r\n}'', json)", span="165-171"];
m11_61 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", span="158-158"];
m11_169 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", span="549-549"];
m11_170 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="string typeNamePropertyRef = ReflectionUtils.GetTypeName(typeof(TypeNameProperty), FormatterAssemblyStyle.Simple, null)", span="551-551"];
m11_171 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="TypeNameProperty typeNameProperty = new TypeNameProperty\r\n            {\r\n                Name = ''Name!'',\r\n                Value = new TypeNameProperty\r\n                {\r\n                    Name = ''Nested!''\r\n                }\r\n            }", span="553-560"];
m11_173 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Value'''': {\r\n    ''''$type'''': '''''' + typeNamePropertyRef + @'''''',\r\n    ''''Name'''': ''''Nested!'''',\r\n    ''''Value'''': null\r\n  }\r\n}'', json)", span="564-571"];
m11_172 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(typeNameProperty, Formatting.Indented)", span="562-562"];
m11_174 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="TypeNameProperty deserialized = JsonConvert.DeserializeObject<TypeNameProperty>(json)", span="573-573"];
m11_175 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''Name!'', deserialized.Name)", span="574-574"];
m11_176 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(TypeNameProperty), deserialized.Value)", span="575-575"];
m11_177 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="TypeNameProperty nested = (TypeNameProperty)deserialized.Value", span="577-577"];
m11_178 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''Nested!'', nested.Name)", span="578-578"];
m11_179 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(null, nested.Value)", span="579-579"];
m11_180 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", span="549-549"];
m11_392 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", span="1142-1142"];
m11_393 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs", label="TypeNameList<int> l = new TypeNameList<int>()", span="1144-1144"];
m11_394 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs", label="l.Add(1)", span="1145-1145"];
m11_395 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs", label="l.Add(2)", span="1146-1146"];
m11_396 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs", label="l.Add(3)", span="1147-1147"];
m11_397 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1149-1149"];
m11_398 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', json)", span="1150-1154"];
m11_399 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", span="1142-1142"];
m11_57 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="152-152"];
m11_35 [cluster="System.IO.StringReader.StringReader(string)", file="TypeNameHandlingTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m11_76 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", span="221-221"];
m11_77 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="TypeNameHandlingTests.cs", label="string employeeRef = ReflectionUtils.GetTypeName(typeof(EmployeeReference), FormatterAssemblyStyle.Simple, null)", span="223-223"];
m11_78 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="TypeNameHandlingTests.cs", label="EmployeeReference employee = new EmployeeReference()", span="225-225"];
m11_80 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': null,\r\n  ''''Manager'''': null\r\n}'', json)", span="232-237"];
m11_79 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(employee, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="227-230"];
m11_81 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", span="221-221"];
m11_0 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", span="57-57"];
m11_1 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="TypeNameHandlingTests.cs", label="Dictionary<string, object> dic = new Dictionary<string, object>\r\n            {\r\n                { ''movie'', new Movie { Name = ''Die Hard''}}\r\n            }", span="59-62"];
m11_2 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="64-67"];
m11_3 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''movie'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Movie, Newtonsoft.Json.Tests'''',\r\n    ''''Name'''': ''''Die Hard'''',\r\n    ''''Description'''': null,\r\n    ''''Classification'''': null,\r\n    ''''Studio'''': null,\r\n    ''''ReleaseDate'''': null,\r\n    ''''ReleaseCountries'''': null\r\n  }\r\n}'', json)", span="69-79"];
m11_4 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", span="57-57"];
m11_528 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", span="1505-1505"];
m11_529 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="PropertyItemTypeNameHandlingDynamic d1 = new PropertyItemTypeNameHandlingDynamic()", span="1507-1507"];
m11_530 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="dynamic data = new DynamicDictionary()", span="1509-1509"];
m11_535 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="d1.Data = (DynamicDictionary)data", span="1523-1523"];
m11_536 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(d1, Formatting.Indented)", span="1525-1525"];
m11_531 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="data.one = new TestComponentSimple\r\n            {\r\n                MyProperty = 1\r\n            }", span="1510-1513"];
m11_534 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="data.two = data2", span="1521-1521"];
m11_532 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="dynamic data2 = new DynamicDictionary()", span="1515-1515"];
m11_533 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="data2.one = new TestComponentSimple\r\n            {\r\n                MyProperty = 2\r\n            }", span="1516-1519"];
m11_537 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Linq.DynamicDictionary, Newtonsoft.Json.Tests'''',\r\n      ''''one'''': {\r\n        ''''MyProperty'''': 2\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="1526-1539"];
m11_538 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="PropertyItemTypeNameHandlingDynamic d2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDynamic>(json)", span="1541-1541"];
m11_539 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="Assert.IsNotNull(d2)", span="1542-1542"];
m11_540 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="Assert.IsNotNull(d2.Data)", span="1543-1543"];
m11_541 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="dynamic data3 = d2.Data", span="1545-1545"];
m11_542 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="TestComponentSimple c = (TestComponentSimple)data3.one", span="1546-1546"];
m11_544 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="dynamic data4 = data3.two", span="1549-1549"];
m11_543 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, c.MyProperty)", span="1547-1547"];
m11_545 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="JObject o = (JObject)data4.one", span="1550-1550"];
m11_546 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(2, (int)o[''MyProperty''])", span="1551-1551"];
m11_547 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="json = @''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Linq.DynamicDictionary, Newtonsoft.Json.Tests'''',\r\n      ''''one'''': {\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n        ''''MyProperty'''': 2\r\n      }\r\n    }\r\n  }\r\n}''", span="1553-1567"];
m11_548 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="d2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDynamic>(json)", span="1569-1569"];
m11_549 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="data3 = d2.Data", span="1570-1570"];
m11_550 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="data4 = data3.two", span="1571-1571"];
m11_551 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="o = (JObject)data4.one", span="1572-1572"];
m11_552 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(2, (int)o[''MyProperty''])", span="1573-1573"];
m11_553 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", span="1505-1505"];
m11_381 [cluster="System.Version.Version(int, int, int, int)", file="TypeNameHandlingTests.cs", label="Entry System.Version.Version(int, int, int, int)", span="0-0"];
m11_590 [cluster="Newtonsoft.Json.Tests.Serialization.MyChildList.MyChildList()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MyChildList.MyChildList()", span="1777-1777"];
m11_27 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="175-175"];
m11_15 [cluster="System.Collections.Generic.List<T>.List()", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m11_579 [cluster="Newtonsoft.Json.Tests.Serialization.MyChild.MyChild()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MyChild.MyChild()", span="1771-1771"];
m11_602 [cluster="Newtonsoft.Json.Tests.Serialization.ParentParent.ParentParent()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ParentParent.ParentParent()", span="1745-1745"];
m11_373 [cluster="System.Enum.ToString()", file="TypeNameHandlingTests.cs", label="Entry System.Enum.ToString()", span="0-0"];
m11_578 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", span="1761-1761"];
m11_620 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", span="1761-1761"];
m11_50 [cluster="System.IO.StringWriter.StringWriter()", file="TypeNameHandlingTests.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m11_591 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", span="1675-1675"];
m11_592 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="ParentParent pp = new ParentParent()", span="1677-1677"];
m11_593 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="pp.ParentProp = new MyParent\r\n            {\r\n                Child = new MyChild\r\n                {\r\n                    MyProperty = ''string!''\r\n                }\r\n            }", span="1679-1685"];
m11_595 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(pp, settings)", span="1696-1696"];
m11_594 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n                MissingMemberHandling = MissingMemberHandling.Ignore,\r\n                DefaultValueHandling = DefaultValueHandling.Ignore,\r\n                NullValueHandling = NullValueHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            }", span="1687-1694"];
m11_597 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="ParentParent pp2 = JsonConvert.DeserializeObject<ParentParent>(json, settings)", span="1707-1707"];
m11_596 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''ParentProp'''': {\r\n    ''''c'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MyChild, Newtonsoft.Json.Tests'''',\r\n      ''''p'''': ''''string!''''\r\n    }\r\n  }\r\n}'', json)", span="1698-1705"];
m11_598 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="MyParent p2 = pp2.ParentProp", span="1708-1708"];
m11_599 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(MyChild), p2.Child)", span="1709-1709"];
m11_600 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(''string!'', ((MyChild)p2.Child).MyProperty)", span="1710-1710"];
m11_601 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", span="1675-1675"];
m11_637 [cluster="object.GetHashCode()", file="TypeNameHandlingTests.cs", label="Entry object.GetHashCode()", span="0-0"];
m11_287 [cluster="Newtonsoft.Json.Tests.Serialization.Message.Message()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Message.Message()", span="1786-1786"];
m11_387 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToName(System.Type, out string, out string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToName(System.Type, out string, out string)", span="1129-1129"];
m11_388 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToName(System.Type, out string, out string)", file="TypeNameHandlingTests.cs", label="assemblyName = ''AssemblyName''", span="1131-1131"];
m11_389 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToName(System.Type, out string, out string)", file="TypeNameHandlingTests.cs", label="typeName = '':::'' + serializedType.Name.ToUpper(CultureInfo.InvariantCulture) + '':::''", span="1133-1133"];
m11_390 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToName(System.Type, out string, out string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToName(System.Type, out string, out string)", span="1129-1129"];
m11_603 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", span="1715-1715"];
m11_604 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="var input = new List<Stack<string>>()", span="1717-1717"];
m11_605 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="input.Add(new Stack<string>(new List<string> { ''One'', ''Two'', ''Three'' }))", span="1719-1719"];
m11_606 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="input.Add(new Stack<string>(new List<string> { ''Four'', ''Five'', ''Six'' }))", span="1720-1720"];
m11_607 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="input.Add(new Stack<string>(new List<string> { ''Seven'', ''Eight'', ''Nine'' }))", span="1721-1721"];
m11_608 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="string serialized = JsonConvert.SerializeObject(input,\r\n                Newtonsoft.Json.Formatting.Indented,\r\n                new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All, TypeNameAssemblyFormat = FormatterAssemblyStyle.Full } // TypeNameHandling.Auto will work\r\n            )", span="1723-1726"];
m11_609 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="Console.WriteLine(serialized)", span="1728-1728"];
m11_610 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="var output = JsonConvert.DeserializeObject<List<Stack<string>>>(serialized,\r\n                new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All }\r\n            )", span="1730-1732"];
m11_611 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label=output, span="1734-1734"];
m11_612 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label=stack, span="1736-1736"];
m11_613 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="Console.WriteLine(value)", span="1738-1738"];
m11_614 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", span="1715-1715"];
m11_489 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", span="1371-1371"];
m11_490 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="PropertyItemTypeNameHandlingDictionary c1 = new PropertyItemTypeNameHandlingDictionary()\r\n            {\r\n                Data = new Dictionary<string, object>\r\n                {\r\n                    {\r\n                        ''one'', new TestComponentSimple { MyProperty = 1 }\r\n                    },\r\n                    {\r\n                        ''two'', new Dictionary<string, object>\r\n                        {\r\n                            {\r\n                                ''one'', new Dictionary<string, object>\r\n                                {\r\n                                    { ''one'', 1 }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }", span="1373-1392"];
m11_491 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1394-1394"];
m11_492 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n      ''''one'''': {\r\n        ''''one'''': 1\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="1395-1408"];
m11_493 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="PropertyItemTypeNameHandlingDictionary c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDictionary>(json)", span="1410-1410"];
m11_494 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="1411-1411"];
m11_495 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[''one''])", span="1413-1413"];
m11_496 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, object>), c2.Data[''two''])", span="1414-1414"];
m11_497 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="Dictionary<string, object> c = (Dictionary<string, object>)c2.Data[''two'']", span="1415-1415"];
m11_498 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), c[''one''])", span="1416-1416"];
m11_499 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="json = @''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n      ''''one'''': {\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n        ''''MyProperty'''': 1\r\n      }\r\n    }\r\n  }\r\n}''", span="1418-1432"];
m11_500 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDictionary>(json)", span="1434-1434"];
m11_501 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="1435-1435"];
m11_502 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[''one''])", span="1437-1437"];
m11_503 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, object>), c2.Data[''two''])", span="1438-1438"];
m11_504 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="c = (Dictionary<string, object>)c2.Data[''two'']", span="1439-1439"];
m11_505 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), c[''one''])", span="1440-1440"];
m11_506 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="JObject o = (JObject)c[''one'']", span="1442-1442"];
m11_507 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, (int)o[''MyProperty''])", span="1443-1443"];
m11_508 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", span="1371-1371"];
m11_10 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", span="83-83"];
m11_11 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="TypeNameHandlingTests.cs", label="IList<KeyValuePair<string, object>> dic = new List<KeyValuePair<string, object>>\r\n            {\r\n                new KeyValuePair<string, object>(''movie'', new Movie { Name = ''Die Hard''})\r\n            }", span="85-88"];
m11_12 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="90-93"];
m11_13 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Key'''': ''''movie'''',\r\n    ''''Value'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Movie, Newtonsoft.Json.Tests'''',\r\n      ''''Name'''': ''''Die Hard'''',\r\n      ''''Description'''': null,\r\n      ''''Classification'''': null,\r\n      ''''Studio'''': null,\r\n      ''''ReleaseDate'''': null,\r\n      ''''ReleaseCountries'''': null\r\n    }\r\n  }\r\n]'', json)", span="95-108"];
m11_14 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", span="83-83"];
m11_16 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m11_510 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", span="1447-1447"];
m11_511 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="PropertyItemTypeNameHandlingObject o1 = new PropertyItemTypeNameHandlingObject\r\n            {\r\n                Data = new TypeNameHandlingTestObject\r\n                {\r\n                    Prop1 = new List<object>\r\n                    {\r\n                        new TestComponentSimple\r\n                        {\r\n                            MyProperty = 1\r\n                        }\r\n                    },\r\n                    Prop2 = new TestComponentSimple\r\n                    {\r\n                        MyProperty = 1\r\n                    },\r\n                    Prop3 = 3,\r\n                    Prop4 = new JObject()\r\n                }\r\n            }", span="1449-1467"];
m11_512 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(o1, Formatting.Indented)", span="1469-1469"];
m11_513 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''Prop1'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''MyProperty'''': 1\r\n        }\r\n      ]\r\n    },\r\n    ''''Prop2'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''Prop3'''': 3,\r\n    ''''Prop4'''': {}\r\n  }\r\n}'', json)", span="1470-1487"];
m11_514 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="PropertyItemTypeNameHandlingObject o2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingObject>(json)", span="1489-1489"];
m11_515 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="Assert.IsNotNull(o2)", span="1490-1490"];
m11_516 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="Assert.IsNotNull(o2.Data)", span="1491-1491"];
m11_517 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(List<object>), o2.Data.Prop1)", span="1493-1493"];
m11_518 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), o2.Data.Prop2)", span="1494-1494"];
m11_519 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(long), o2.Data.Prop3)", span="1495-1495"];
m11_520 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o2.Data.Prop4)", span="1496-1496"];
m11_521 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="List<object> o = (List<object>)o2.Data.Prop1", span="1498-1498"];
m11_522 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="JObject j = (JObject)o[0]", span="1499-1499"];
m11_523 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(1, (int)j[''MyProperty''])", span="1500-1500"];
m11_524 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", span="1447-1447"];
m11_631 [cluster="object.Equals(object, object)", file="TypeNameHandlingTests.cs", label="Entry object.Equals(object, object)", span="0-0"];
m11_182 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="512-512"];
m11_360 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.Example(string)", span="1846-1846"];
m11_638 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="TypeNameHandlingTests.cs", label="Name = name", span="1848-1848"];
m11_639 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.Example(string)", span="1846-1846"];
m11_657 [cluster="string.Equals(string)", file="TypeNameHandlingTests.cs", label="Entry string.Equals(string)", span="0-0"];
m11_75 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="726-726"];
m11_418 [cluster="Newtonsoft.Json.Tests.TestObjects.TestComponentSimple.TestComponentSimple()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TestComponentSimple.TestComponentSimple()", span="33-33"];
m11_311 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", span="944-944"];
m11_312 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="TypeNameHandlingTests.cs", label="this.value = value", span="946-946"];
m11_313 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="TypeNameHandlingTests.cs", label="this.next = next", span="947-947"];
m11_314 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="TypeNameHandlingTests.cs", label="count = this.next.count + 1", span="948-948"];
m11_315 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", span="944-944"];
m11_632 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", span="1827-1827"];
m11_633 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", file="TypeNameHandlingTests.cs", label="Content == null", span="1829-1829"];
m11_634 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", file="TypeNameHandlingTests.cs", label="return 0;", span="1830-1830"];
m11_635 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", file="TypeNameHandlingTests.cs", label="return Content.GetHashCode();", span="1832-1832"];
m11_636 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", span="1827-1827"];
m11_402 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", span="1158-1158"];
m11_403 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="var c1 = new TestComponentSimple()", span="1160-1160"];
m11_404 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="TypeNameList<object> l = new TypeNameList<object>()", span="1162-1162"];
m11_405 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="l.Add(c1)", span="1163-1163"];
m11_406 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="l.Add(new Employee\r\n            {\r\n                BirthDate = new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                Department = ''Department!''\r\n            })", span="1164-1168"];
m11_407 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="l.Add(''String!'')", span="1169-1169"];
m11_408 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="l.Add(long.MaxValue)", span="1170-1170"];
m11_409 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1172-1172"];
m11_410 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 0\r\n  },\r\n  {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee, Newtonsoft.Json.Tests'''',\r\n    ''''FirstName'''': null,\r\n    ''''LastName'''': null,\r\n    ''''BirthDate'''': ''''2000-12-12T12:12:12Z'''',\r\n    ''''Department'''': ''''Department!'''',\r\n    ''''JobTitle'''': null\r\n  },\r\n  ''''String!'''',\r\n  9223372036854775807\r\n]'', json)", span="1173-1188"];
m11_411 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="TypeNameList<object> l2 = JsonConvert.DeserializeObject<TypeNameList<object>>(json)", span="1190-1190"];
m11_412 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="Assert.AreEqual(4, l2.Count)", span="1191-1191"];
m11_413 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), l2[0])", span="1193-1193"];
m11_414 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(Employee), l2[1])", span="1194-1194"];
m11_415 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(string), l2[2])", span="1195-1195"];
m11_416 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="CustomAssert.IsInstanceOfType(typeof(long), l2[3])", span="1196-1196"];
m11_417 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", span="1158-1158"];
m11_105 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="TypeNameHandlingTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m11_616 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1756-1756"];
m11_617 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="Child = (ISomeBase)info.GetValue(''c'', typeof(ISomeBase))", span="1758-1758"];
m11_618 [cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1756-1756"];
m11_26 [cluster="System.Text.StringBuilder.Append(string)", file="TypeNameHandlingTests.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m11_640 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1851-1851"];
m11_641 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="Name = info.GetString(''name'')", span="1853-1853"];
m11_642 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1851-1851"];
m11_36 [cluster="System.Text.StringBuilder.ToString()", file="TypeNameHandlingTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m11_232 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", span="735-735"];
m11_233 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="string resolvedTypeName = string.Format(TypeFormat, typeName)", span="737-737"];
m11_234 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="return Type.GetType(resolvedTypeName, true);", span="739-739"];
m11_235 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", span="735-735"];
m11_74 [cluster="Newtonsoft.Json.Tests.TestObjects.EmployeeReference.EmployeeReference()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.EmployeeReference.EmployeeReference()", span="28-28"];
m11_664 [file="TypeNameHandlingTests.cs", label=sb, span=""];
m11_665 [file="TypeNameHandlingTests.cs", label=json, span=""];
m11_666 [file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest", span=""];
m11_667 [file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder", span=""];
m11_668 [file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", span=""];
m11_669 [file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", span=""];
m11_670 [file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.MyParent", span=""];
m11_671 [file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper", span=""];
m11_672 [file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.Example", span=""];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_11  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_6  [key=2, style=dotted];
m1_12 -> m1_7  [key=2, style=dotted];
m1_12 -> m1_14  [color=darkseagreen4, key=1, label=binaryClass, style=dashed];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_16  [key=2, style=dotted];
m1_13 -> m1_9  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_9  [key=2, style=dotted];
m1_15 -> m1_10  [color=blue, key=0, style=bold];
m1_51 -> m1_52  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_52  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_6  [key=2, style=dotted];
m1_53 -> m1_7  [key=2, style=dotted];
m1_53 -> m1_55  [color=darkseagreen4, key=1, label=byteArrayClass, style=dashed];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_57  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_9  [key=2, style=dotted];
m1_56 -> m1_51  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_1  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_6  [key=2, style=dotted];
m1_2 -> m1_7  [key=2, style=dotted];
m1_2 -> m1_4  [color=darkseagreen4, key=1, label=binaryClass, style=dashed];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_8  [key=2, style=dotted];
m1_3 -> m1_9  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_9  [key=2, style=dotted];
m1_5 -> m1_0  [color=blue, key=0, style=bold];
m1_44 -> m1_45  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_45  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_6  [key=2, style=dotted];
m1_46 -> m1_7  [key=2, style=dotted];
m1_46 -> m1_48  [color=darkseagreen4, key=1, label=sqlBinaryClass, style=dashed];
m1_46 -> m1_49  [color=darkseagreen4, key=1, label=sqlBinaryClass, style=dashed];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_43  [key=2, style=dotted];
m1_47 -> m1_9  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_43  [key=2, style=dotted];
m1_48 -> m1_9  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_9  [key=2, style=dotted];
m1_50 -> m1_44  [color=blue, key=0, style=bold];
m1_34 -> m1_35  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_42  [key=2, style=dotted];
m1_35 -> m1_37  [color=darkseagreen4, key=1, label=sqlBinaryClass, style=dashed];
m1_35 -> m1_38  [color=darkseagreen4, key=1, label=sqlBinaryClass, style=dashed];
m1_35 -> m1_39  [color=darkseagreen4, key=1, label=sqlBinaryClass, style=dashed];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_43  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_43  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_6  [key=2, style=dotted];
m1_39 -> m1_25  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_9  [key=2, style=dotted];
m1_41 -> m1_34  [color=blue, key=0, style=bold];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_33  [key=2, style=dotted];
m1_27 -> m1_29  [color=darkseagreen4, key=1, label=byteArrayClass, style=dashed];
m1_27 -> m1_30  [color=darkseagreen4, key=1, label=byteArrayClass, style=dashed];
m1_28 -> m1_29  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_6  [key=2, style=dotted];
m1_30 -> m1_25  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_9  [key=2, style=dotted];
m1_32 -> m1_26  [color=blue, key=0, style=bold];
m1_17 -> m1_18  [key=0, style=solid];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_24  [key=2, style=dotted];
m1_18 -> m1_20  [color=darkseagreen4, key=1, label=binaryClass, style=dashed];
m1_18 -> m1_21  [color=darkseagreen4, key=1, label=binaryClass, style=dashed];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_8  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_6  [key=2, style=dotted];
m1_21 -> m1_25  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_9  [key=2, style=dotted];
m1_23 -> m1_17  [color=blue, key=0, style=bold];
m1_58 -> m1_59  [key=0, style=solid];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_59  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_65  [key=2, style=dotted];
m1_60 -> m1_62  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_60 -> m1_63  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_66  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_9  [key=2, style=dotted];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_57  [key=2, style=dotted];
m1_64 -> m1_58  [color=blue, key=0, style=bold];
m2_130 -> m2_131  [key=0, style=solid];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_134  [key=2, style=dotted];
m2_131 -> m2_136  [color=darkseagreen4, key=1, label=c, style=dashed];
m2_132 -> m2_133  [key=0, style=solid];
m2_132 -> m2_86  [key=2, style=dotted];
m2_132 -> m2_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_133 -> m2_130  [color=blue, key=0, style=bold];
m2_325 -> m2_326  [key=0, style=solid];
m2_326 -> m2_327  [key=0, style=solid];
m2_326 -> m2_14  [key=2, style=dotted];
m2_326 -> m2_15  [key=2, style=dotted];
m2_326 -> m2_330  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_327 -> m2_328  [key=0, style=solid];
m2_327 -> m2_16  [key=2, style=dotted];
m2_327 -> m2_329  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_330 -> m2_331  [key=0, style=solid];
m2_330 -> m2_16  [key=2, style=dotted];
m2_330 -> m2_332  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_328 -> m2_329  [key=0, style=solid];
m2_328 -> m2_52  [key=2, style=dotted];
m2_329 -> m2_330  [key=0, style=solid];
m2_329 -> m2_8  [key=2, style=dotted];
m2_331 -> m2_332  [key=0, style=solid];
m2_331 -> m2_8  [key=2, style=dotted];
m2_332 -> m2_333  [key=0, style=solid];
m2_332 -> m2_8  [key=2, style=dotted];
m2_333 -> m2_325  [color=blue, key=0, style=bold];
m2_374 -> m2_375  [key=0, style=solid];
m2_375 -> m2_376  [key=0, style=solid];
m2_375 -> m2_44  [key=2, style=dotted];
m2_375 -> m2_14  [key=2, style=dotted];
m2_375 -> m2_15  [key=2, style=dotted];
m2_376 -> m2_377  [key=0, style=solid];
m2_376 -> m2_62  [key=2, style=dotted];
m2_376 -> m2_63  [key=2, style=dotted];
m2_376 -> m2_378  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_376 -> m2_379  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_376 -> m2_380  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_377 -> m2_378  [key=0, style=solid];
m2_377 -> m2_52  [key=2, style=dotted];
m2_378 -> m2_379  [key=0, style=solid];
m2_378 -> m2_8  [key=2, style=dotted];
m2_379 -> m2_380  [key=0, style=solid];
m2_379 -> m2_14  [key=2, style=dotted];
m2_379 -> m2_15  [key=2, style=dotted];
m2_379 -> m2_291  [key=2, style=dotted];
m2_379 -> m2_292  [key=2, style=dotted];
m2_380 -> m2_381  [key=0, style=solid];
m2_380 -> m2_14  [key=2, style=dotted];
m2_380 -> m2_15  [key=2, style=dotted];
m2_380 -> m2_291  [key=2, style=dotted];
m2_380 -> m2_292  [key=2, style=dotted];
m2_381 -> m2_374  [color=blue, key=0, style=bold];
m2_142 -> m2_143  [key=0, style=solid];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_14  [key=2, style=dotted];
m2_143 -> m2_15  [key=2, style=dotted];
m2_143 -> m2_147  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_144 -> m2_145  [key=0, style=solid];
m2_144 -> m2_86  [key=2, style=dotted];
m2_144 -> m2_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_145 -> m2_142  [color=blue, key=0, style=bold];
m2_201 -> m2_202  [key=0, style=solid];
m2_202 -> m2_203  [key=0, style=solid];
m2_202 -> m2_44  [key=2, style=dotted];
m2_203 -> m2_204  [key=0, style=solid];
m2_203 -> m2_16  [key=2, style=dotted];
m2_203 -> m2_205  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_203 -> m2_206  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_204 -> m2_205  [key=0, style=solid];
m2_204 -> m2_52  [key=2, style=dotted];
m2_205 -> m2_206  [key=0, style=solid];
m2_205 -> m2_8  [key=2, style=dotted];
m2_206 -> m2_207  [key=0, style=solid];
m2_206 -> m2_8  [key=2, style=dotted];
m2_207 -> m2_201  [color=blue, key=0, style=bold];
m2_402 -> m2_403  [key=0, style=solid];
m2_403 -> m2_404  [key=0, style=solid];
m2_403 -> m2_44  [key=2, style=dotted];
m2_403 -> m2_61  [key=2, style=dotted];
m2_403 -> m2_15  [key=2, style=dotted];
m2_403 -> m2_306  [key=2, style=dotted];
m2_403 -> m2_14  [key=2, style=dotted];
m2_404 -> m2_405  [key=0, style=solid];
m2_404 -> m2_62  [key=2, style=dotted];
m2_404 -> m2_63  [key=2, style=dotted];
m2_404 -> m2_406  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_404 -> m2_407  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_404 -> m2_408  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_405 -> m2_406  [key=0, style=solid];
m2_405 -> m2_52  [key=2, style=dotted];
m2_406 -> m2_407  [key=0, style=solid];
m2_406 -> m2_8  [key=2, style=dotted];
m2_407 -> m2_408  [key=0, style=solid];
m2_407 -> m2_8  [key=2, style=dotted];
m2_408 -> m2_409  [key=0, style=solid];
m2_408 -> m2_8  [key=2, style=dotted];
m2_409 -> m2_402  [color=blue, key=0, style=bold];
m2_149 -> m2_150  [key=0, style=solid];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_14  [key=2, style=dotted];
m2_150 -> m2_15  [key=2, style=dotted];
m2_151 -> m2_152  [color=red, key=0, style=solid];
m2_151 -> m2_7  [key=2, style=dotted];
m2_152 -> m2_153  [color=red, key=0, style=solid];
m2_152 -> m2_8  [color=red, key=2, style=dotted];
m2_153 -> m2_149  [color=blue, key=0, style=bold];
m2_138 -> m2_139  [key=0, style=solid];
m2_139 -> m2_140  [key=0, style=solid];
m2_139 -> m2_134  [key=2, style=dotted];
m2_140 -> m2_141  [key=0, style=solid];
m2_140 -> m2_16  [key=2, style=dotted];
m2_140 -> m2_76  [key=2, style=dotted];
m2_141 -> m2_138  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_1  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_6  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_7  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_8  [key=2, style=dotted];
m2_5 -> m2_0  [color=blue, key=0, style=bold];
m2_194 -> m2_195  [key=0, style=solid];
m2_195 -> m2_196  [key=0, style=solid];
m2_195 -> m2_44  [key=2, style=dotted];
m2_195 -> m2_199  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_196 -> m2_197  [key=0, style=solid];
m2_196 -> m2_86  [key=2, style=dotted];
m2_196 -> m2_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_197 -> m2_194  [color=blue, key=0, style=bold];
m2_116 -> m2_117  [key=0, style=solid];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_44  [key=2, style=dotted];
m2_117 -> m2_121  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_86  [key=2, style=dotted];
m2_118 -> m2_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_119 -> m2_116  [color=blue, key=0, style=bold];
m2_189 -> m2_190  [key=0, style=solid];
m2_190 -> m2_191  [key=0, style=solid];
m2_190 -> m2_44  [key=2, style=dotted];
m2_191 -> m2_192  [key=0, style=solid];
m2_191 -> m2_16  [key=2, style=dotted];
m2_192 -> m2_193  [key=0, style=solid];
m2_192 -> m2_76  [key=2, style=dotted];
m2_193 -> m2_189  [color=blue, key=0, style=bold];
m2_368 -> m2_369  [key=0, style=solid];
m2_369 -> m2_370  [key=0, style=solid];
m2_369 -> m2_44  [key=2, style=dotted];
m2_370 -> m2_371  [key=0, style=solid];
m2_370 -> m2_62  [key=2, style=dotted];
m2_370 -> m2_63  [key=2, style=dotted];
m2_370 -> m2_372  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_371 -> m2_372  [key=0, style=solid];
m2_371 -> m2_52  [key=2, style=dotted];
m2_372 -> m2_373  [key=0, style=solid];
m2_372 -> m2_8  [key=2, style=dotted];
m2_373 -> m2_368  [color=blue, key=0, style=bold];
m2_34 -> m2_35  [key=0, style=solid];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_14  [key=2, style=dotted];
m2_35 -> m2_15  [key=2, style=dotted];
m2_35 -> m2_37  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_16  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_8  [key=2, style=dotted];
m2_38 -> m2_34  [color=blue, key=0, style=bold];
m2_71 -> m2_72  [key=0, style=solid];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_14  [key=2, style=dotted];
m2_72 -> m2_15  [key=2, style=dotted];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_16  [key=2, style=dotted];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_76  [key=2, style=dotted];
m2_75 -> m2_71  [color=blue, key=0, style=bold];
m2_64 -> m2_65  [key=0, style=solid];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_14  [key=2, style=dotted];
m2_65 -> m2_15  [key=2, style=dotted];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_16  [key=2, style=dotted];
m2_66 -> m2_68  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_66 -> m2_69  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_52  [key=2, style=dotted];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_8  [key=2, style=dotted];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_8  [key=2, style=dotted];
m2_70 -> m2_64  [color=blue, key=0, style=bold];
m2_123 -> m2_124  [key=0, style=solid];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_44  [key=2, style=dotted];
m2_124 -> m2_128  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_86  [key=2, style=dotted];
m2_125 -> m2_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_126 -> m2_123  [color=blue, key=0, style=bold];
m2_82 -> m2_83  [key=0, style=solid];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_14  [key=2, style=dotted];
m2_83 -> m2_15  [key=2, style=dotted];
m2_83 -> m2_88  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_86  [key=2, style=dotted];
m2_84 -> m2_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_85 -> m2_82  [color=blue, key=0, style=bold];
m2_410 -> m2_411  [key=0, style=solid];
m2_411 -> m2_412  [key=0, style=solid];
m2_411 -> m2_415  [key=2, style=dotted];
m2_412 -> m2_413  [key=0, style=solid];
m2_412 -> m2_16  [key=2, style=dotted];
m2_413 -> m2_414  [key=0, style=solid];
m2_413 -> m2_8  [key=2, style=dotted];
m2_414 -> m2_410  [color=blue, key=0, style=bold];
m2_97 -> m2_98  [key=0, style=solid];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_14  [key=2, style=dotted];
m2_98 -> m2_15  [key=2, style=dotted];
m2_98 -> m2_102  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_86  [key=2, style=dotted];
m2_99 -> m2_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_100 -> m2_97  [color=blue, key=0, style=bold];
m2_307 -> m2_308  [key=0, style=solid];
m2_308 -> m2_309  [key=0, style=solid];
m2_308 -> m2_277  [key=2, style=dotted];
m2_308 -> m2_311  [color=darkseagreen4, key=1, label=o1, style=dashed];
m2_308 -> m2_316  [color=darkseagreen4, key=1, label=o1, style=dashed];
m2_309 -> m2_310  [key=0, style=solid];
m2_309 -> m2_277  [key=2, style=dotted];
m2_309 -> m2_311  [color=darkseagreen4, key=1, label=o2, style=dashed];
m2_309 -> m2_318  [color=darkseagreen4, key=1, label=o2, style=dashed];
m2_311 -> m2_312  [key=0, style=solid];
m2_311 -> m2_44  [key=2, style=dotted];
m2_311 -> m2_315  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_316 -> m2_317  [key=0, style=solid];
m2_316 -> m2_291  [key=2, style=dotted];
m2_316 -> m2_292  [key=2, style=dotted];
m2_310 -> m2_311  [key=0, style=solid];
m2_310 -> m2_277  [key=2, style=dotted];
m2_310 -> m2_306  [key=2, style=dotted];
m2_310 -> m2_320  [color=darkseagreen4, key=1, label=o3, style=dashed];
m2_318 -> m2_319  [key=0, style=solid];
m2_318 -> m2_291  [key=2, style=dotted];
m2_318 -> m2_292  [key=2, style=dotted];
m2_320 -> m2_321  [key=0, style=solid];
m2_320 -> m2_291  [key=2, style=dotted];
m2_320 -> m2_292  [key=2, style=dotted];
m2_312 -> m2_313  [key=0, style=solid];
m2_312 -> m2_62  [key=2, style=dotted];
m2_312 -> m2_63  [key=2, style=dotted];
m2_312 -> m2_314  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_312 -> m2_315  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_312 -> m2_316  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_312 -> m2_317  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_312 -> m2_318  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_312 -> m2_319  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_312 -> m2_320  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_312 -> m2_321  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_312 -> m2_322  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_312 -> m2_323  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_315 -> m2_316  [key=0, style=solid];
m2_315 -> m2_291  [key=2, style=dotted];
m2_315 -> m2_292  [key=2, style=dotted];
m2_313 -> m2_314  [key=0, style=solid];
m2_313 -> m2_52  [key=2, style=dotted];
m2_314 -> m2_315  [key=0, style=solid];
m2_314 -> m2_8  [key=2, style=dotted];
m2_317 -> m2_318  [key=0, style=solid];
m2_317 -> m2_8  [key=2, style=dotted];
m2_319 -> m2_320  [key=0, style=solid];
m2_319 -> m2_8  [key=2, style=dotted];
m2_321 -> m2_322  [key=0, style=solid];
m2_321 -> m2_277  [key=2, style=dotted];
m2_321 -> m2_306  [key=2, style=dotted];
m2_321 -> m2_291  [key=2, style=dotted];
m2_321 -> m2_292  [key=2, style=dotted];
m2_322 -> m2_323  [key=0, style=solid];
m2_322 -> m2_306  [key=2, style=dotted];
m2_322 -> m2_291  [key=2, style=dotted];
m2_322 -> m2_292  [key=2, style=dotted];
m2_323 -> m2_324  [key=0, style=solid];
m2_323 -> m2_8  [key=2, style=dotted];
m2_324 -> m2_307  [color=blue, key=0, style=bold];
m2_353 -> m2_354  [key=0, style=solid];
m2_354 -> m2_355  [key=0, style=solid];
m2_354 -> m2_44  [key=2, style=dotted];
m2_354 -> m2_306  [key=2, style=dotted];
m2_354 -> m2_14  [key=2, style=dotted];
m2_354 -> m2_15  [key=2, style=dotted];
m2_355 -> m2_356  [key=0, style=solid];
m2_355 -> m2_62  [key=2, style=dotted];
m2_355 -> m2_63  [key=2, style=dotted];
m2_355 -> m2_357  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_355 -> m2_358  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_356 -> m2_357  [key=0, style=solid];
m2_356 -> m2_52  [key=2, style=dotted];
m2_357 -> m2_358  [key=0, style=solid];
m2_357 -> m2_8  [key=2, style=dotted];
m2_358 -> m2_359  [key=0, style=solid];
m2_358 -> m2_306  [key=2, style=dotted];
m2_358 -> m2_14  [key=2, style=dotted];
m2_358 -> m2_15  [key=2, style=dotted];
m2_358 -> m2_291  [key=2, style=dotted];
m2_358 -> m2_292  [key=2, style=dotted];
m2_359 -> m2_353  [color=blue, key=0, style=bold];
m2_154 -> m2_155  [key=0, style=solid];
m2_155 -> m2_156  [key=0, style=solid];
m2_155 -> m2_14  [key=2, style=dotted];
m2_155 -> m2_15  [key=2, style=dotted];
m2_155 -> m2_159  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> m2_86  [key=2, style=dotted];
m2_156 -> m2_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_157 -> m2_154  [color=blue, key=0, style=bold];
m2_392 -> m2_393  [key=0, style=solid];
m2_393 -> m2_394  [key=0, style=solid];
m2_393 -> m2_44  [key=2, style=dotted];
m2_393 -> m2_14  [key=2, style=dotted];
m2_393 -> m2_15  [key=2, style=dotted];
m2_394 -> m2_395  [key=0, style=solid];
m2_394 -> m2_62  [key=2, style=dotted];
m2_394 -> m2_63  [key=2, style=dotted];
m2_394 -> m2_396  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_394 -> m2_397  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_394 -> m2_398  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_394 -> m2_399  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_394 -> m2_400  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_395 -> m2_396  [key=0, style=solid];
m2_395 -> m2_52  [key=2, style=dotted];
m2_396 -> m2_397  [key=0, style=solid];
m2_396 -> m2_8  [key=2, style=dotted];
m2_397 -> m2_398  [key=0, style=solid];
m2_397 -> m2_14  [key=2, style=dotted];
m2_397 -> m2_15  [key=2, style=dotted];
m2_397 -> m2_291  [key=2, style=dotted];
m2_397 -> m2_292  [key=2, style=dotted];
m2_398 -> m2_399  [key=0, style=solid];
m2_398 -> m2_14  [key=2, style=dotted];
m2_398 -> m2_15  [key=2, style=dotted];
m2_398 -> m2_291  [key=2, style=dotted];
m2_398 -> m2_292  [key=2, style=dotted];
m2_399 -> m2_400  [key=0, style=solid];
m2_399 -> m2_14  [key=2, style=dotted];
m2_399 -> m2_15  [key=2, style=dotted];
m2_399 -> m2_291  [key=2, style=dotted];
m2_399 -> m2_292  [key=2, style=dotted];
m2_400 -> m2_401  [key=0, style=solid];
m2_400 -> m2_14  [key=2, style=dotted];
m2_400 -> m2_15  [key=2, style=dotted];
m2_400 -> m2_291  [key=2, style=dotted];
m2_400 -> m2_292  [key=2, style=dotted];
m2_401 -> m2_392  [color=blue, key=0, style=bold];
m2_24 -> m2_25  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_14  [key=2, style=dotted];
m2_25 -> m2_15  [key=2, style=dotted];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_16  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_8  [key=2, style=dotted];
m2_28 -> m2_24  [color=blue, key=0, style=bold];
m2_9 -> m2_10  [key=0, style=solid];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_14  [key=2, style=dotted];
m2_10 -> m2_15  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_16  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_8  [key=2, style=dotted];
m2_13 -> m2_9  [color=blue, key=0, style=bold];
m2_334 -> m2_335  [key=0, style=solid];
m2_335 -> m2_336  [key=0, style=solid];
m2_335 -> m2_6  [key=2, style=dotted];
m2_336 -> m2_337  [key=0, style=solid];
m2_336 -> m2_16  [key=2, style=dotted];
m2_337 -> m2_338  [key=0, style=solid];
m2_337 -> m2_8  [key=2, style=dotted];
m2_338 -> m2_334  [color=blue, key=0, style=bold];
m2_161 -> m2_162  [key=0, style=solid];
m2_162 -> m2_163  [key=0, style=solid];
m2_162 -> m2_44  [key=2, style=dotted];
m2_162 -> m2_166  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_86  [key=2, style=dotted];
m2_163 -> m2_165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_164 -> m2_161  [color=blue, key=0, style=bold];
m2_168 -> m2_169  [key=0, style=solid];
m2_169 -> m2_170  [key=0, style=solid];
m2_169 -> m2_44  [key=2, style=dotted];
m2_169 -> m2_178  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_169 -> m2_171  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_169 -> m2_181  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_169 -> m2_172  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_169 -> m2_184  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_170 -> m2_171  [key=0, style=solid];
m2_170 -> m2_86  [key=2, style=dotted];
m2_170 -> m2_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_171 -> m2_172  [key=0, style=solid];
m2_171 -> m2_86  [key=2, style=dotted];
m2_171 -> m2_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_172 -> m2_173  [key=0, style=solid];
m2_172 -> m2_86  [key=2, style=dotted];
m2_172 -> m2_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_176  [key=2, style=dotted];
m2_173 -> m2_187  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_174 -> m2_175  [key=0, style=solid];
m2_174 -> m2_86  [key=2, style=dotted];
m2_174 -> m2_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_175 -> m2_168  [color=blue, key=0, style=bold];
m2_346 -> m2_347  [key=0, style=solid];
m2_347 -> m2_348  [key=0, style=solid];
m2_347 -> m2_44  [key=2, style=dotted];
m2_347 -> m2_14  [key=2, style=dotted];
m2_347 -> m2_15  [key=2, style=dotted];
m2_348 -> m2_349  [key=0, style=solid];
m2_348 -> m2_62  [key=2, style=dotted];
m2_348 -> m2_63  [key=2, style=dotted];
m2_348 -> m2_350  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_348 -> m2_351  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_349 -> m2_350  [key=0, style=solid];
m2_349 -> m2_52  [key=2, style=dotted];
m2_350 -> m2_351  [key=0, style=solid];
m2_350 -> m2_8  [key=2, style=dotted];
m2_351 -> m2_352  [key=0, style=solid];
m2_351 -> m2_14  [key=2, style=dotted];
m2_351 -> m2_15  [key=2, style=dotted];
m2_351 -> m2_291  [key=2, style=dotted];
m2_351 -> m2_292  [key=2, style=dotted];
m2_352 -> m2_346  [color=blue, key=0, style=bold];
m2_109 -> m2_110  [key=0, style=solid];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_44  [key=2, style=dotted];
m2_110 -> m2_114  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_86  [key=2, style=dotted];
m2_111 -> m2_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_112 -> m2_109  [color=blue, key=0, style=bold];
m2_90 -> m2_91  [key=0, style=solid];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_14  [key=2, style=dotted];
m2_91 -> m2_15  [key=2, style=dotted];
m2_91 -> m2_95  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_86  [key=2, style=dotted];
m2_92 -> m2_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_93 -> m2_90  [color=blue, key=0, style=bold];
m2_339 -> m2_340  [key=0, style=solid];
m2_340 -> m2_341  [key=0, style=solid];
m2_340 -> m2_44  [key=2, style=dotted];
m2_340 -> m2_14  [key=2, style=dotted];
m2_340 -> m2_15  [key=2, style=dotted];
m2_341 -> m2_342  [key=0, style=solid];
m2_341 -> m2_62  [key=2, style=dotted];
m2_341 -> m2_63  [key=2, style=dotted];
m2_341 -> m2_343  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_341 -> m2_344  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_342 -> m2_343  [key=0, style=solid];
m2_342 -> m2_52  [key=2, style=dotted];
m2_343 -> m2_344  [key=0, style=solid];
m2_343 -> m2_8  [key=2, style=dotted];
m2_344 -> m2_345  [key=0, style=solid];
m2_344 -> m2_14  [key=2, style=dotted];
m2_344 -> m2_15  [key=2, style=dotted];
m2_344 -> m2_291  [key=2, style=dotted];
m2_344 -> m2_292  [key=2, style=dotted];
m2_345 -> m2_339  [color=blue, key=0, style=bold];
m2_45 -> m2_46  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_14  [key=2, style=dotted];
m2_46 -> m2_15  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_16  [key=2, style=dotted];
m2_47 -> m2_49  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_47 -> m2_50  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_52  [key=2, style=dotted];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_8  [key=2, style=dotted];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_8  [key=2, style=dotted];
m2_51 -> m2_45  [color=blue, key=0, style=bold];
m2_29 -> m2_30  [key=0, style=solid];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_14  [key=2, style=dotted];
m2_30 -> m2_15  [key=2, style=dotted];
m2_30 -> m2_32  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_16  [key=2, style=dotted];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_8  [key=2, style=dotted];
m2_33 -> m2_29  [color=blue, key=0, style=bold];
m2_278 -> m2_279  [key=0, style=solid];
m2_279 -> m2_280  [key=0, style=solid];
m2_279 -> m2_277  [key=2, style=dotted];
m2_279 -> m2_281  [color=darkseagreen4, key=1, label=o1, style=dashed];
m2_279 -> m2_286  [color=darkseagreen4, key=1, label=o1, style=dashed];
m2_280 -> m2_281  [key=0, style=solid];
m2_280 -> m2_277  [key=2, style=dotted];
m2_280 -> m2_288  [color=darkseagreen4, key=1, label=o2, style=dashed];
m2_281 -> m2_282  [key=0, style=solid];
m2_281 -> m2_44  [key=2, style=dotted];
m2_281 -> m2_285  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_286 -> m2_287  [key=0, style=solid];
m2_286 -> m2_291  [key=2, style=dotted];
m2_286 -> m2_292  [key=2, style=dotted];
m2_288 -> m2_289  [key=0, style=solid];
m2_288 -> m2_291  [key=2, style=dotted];
m2_288 -> m2_292  [key=2, style=dotted];
m2_282 -> m2_283  [key=0, style=solid];
m2_282 -> m2_62  [key=2, style=dotted];
m2_282 -> m2_63  [key=2, style=dotted];
m2_282 -> m2_284  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_282 -> m2_285  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_282 -> m2_286  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_282 -> m2_287  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_282 -> m2_288  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_282 -> m2_289  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_285 -> m2_286  [key=0, style=solid];
m2_285 -> m2_291  [key=2, style=dotted];
m2_285 -> m2_292  [key=2, style=dotted];
m2_283 -> m2_284  [key=0, style=solid];
m2_283 -> m2_52  [key=2, style=dotted];
m2_284 -> m2_285  [key=0, style=solid];
m2_284 -> m2_8  [key=2, style=dotted];
m2_287 -> m2_288  [key=0, style=solid];
m2_287 -> m2_8  [key=2, style=dotted];
m2_289 -> m2_290  [key=0, style=solid];
m2_289 -> m2_8  [key=2, style=dotted];
m2_290 -> m2_278  [color=blue, key=0, style=bold];
m2_416 -> m2_417  [key=0, style=solid];
m2_417 -> m2_418  [key=0, style=solid];
m2_417 -> m2_6  [key=2, style=dotted];
m2_417 -> m2_419  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_417 -> m2_420  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_417 -> m2_424  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_417 -> m2_425  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_417 -> m2_426  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_418 -> m2_419  [key=0, style=solid];
m2_418 -> m2_16  [key=2, style=dotted];
m2_418 -> m2_421  [color=darkseagreen4, key=1, label=name, style=dashed];
m2_419 -> m2_420  [key=0, style=solid];
m2_419 -> m2_16  [key=2, style=dotted];
m2_419 -> m2_422  [color=darkseagreen4, key=1, label=productPrice, style=dashed];
m2_420 -> m2_421  [key=0, style=solid];
m2_420 -> m2_16  [key=2, style=dotted];
m2_420 -> m2_423  [color=darkseagreen4, key=1, label=productName, style=dashed];
m2_424 -> m2_425  [key=0, style=solid];
m2_424 -> m2_16  [key=2, style=dotted];
m2_424 -> m2_435  [key=2, style=dotted];
m2_424 -> m2_436  [key=2, style=dotted];
m2_424 -> m2_438  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_424 -> m2_427  [color=darkseagreen4, key=1, label=storeNames, style=dashed];
m2_424 -> m2_428  [color=darkseagreen4, key=1, label=storeNames, style=dashed];
m2_424 -> m2_429  [color=darkseagreen4, key=1, label=storeNames, style=dashed];
m2_425 -> m2_426  [key=0, style=solid];
m2_425 -> m2_435  [key=2, style=dotted];
m2_425 -> m2_436  [key=2, style=dotted];
m2_425 -> m2_441  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_425 -> m2_430  [color=darkseagreen4, key=1, label=firstProductNames, style=dashed];
m2_425 -> m2_431  [color=darkseagreen4, key=1, label=firstProductNames, style=dashed];
m2_425 -> m2_432  [color=darkseagreen4, key=1, label=firstProductNames, style=dashed];
m2_426 -> m2_427  [key=0, style=solid];
m2_426 -> m2_437  [key=2, style=dotted];
m2_426 -> m2_444  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_426 -> m2_433  [color=darkseagreen4, key=1, label=totalPrice, style=dashed];
m2_421 -> m2_422  [key=0, style=solid];
m2_421 -> m2_8  [key=2, style=dotted];
m2_422 -> m2_423  [key=0, style=solid];
m2_422 -> m2_8  [key=2, style=dotted];
m2_423 -> m2_424  [key=0, style=solid];
m2_423 -> m2_8  [key=2, style=dotted];
m2_427 -> m2_428  [key=0, style=solid];
m2_427 -> m2_8  [key=2, style=dotted];
m2_428 -> m2_429  [key=0, style=solid];
m2_428 -> m2_8  [key=2, style=dotted];
m2_429 -> m2_430  [key=0, style=solid];
m2_429 -> m2_8  [key=2, style=dotted];
m2_430 -> m2_431  [key=0, style=solid];
m2_430 -> m2_8  [key=2, style=dotted];
m2_431 -> m2_432  [key=0, style=solid];
m2_431 -> m2_8  [key=2, style=dotted];
m2_432 -> m2_433  [key=0, style=solid];
m2_432 -> m2_8  [key=2, style=dotted];
m2_433 -> m2_434  [key=0, style=solid];
m2_433 -> m2_8  [key=2, style=dotted];
m2_434 -> m2_416  [color=blue, key=0, style=bold];
m2_77 -> m2_78  [key=0, style=solid];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_14  [key=2, style=dotted];
m2_78 -> m2_15  [key=2, style=dotted];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_16  [key=2, style=dotted];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_76  [key=2, style=dotted];
m2_81 -> m2_77  [color=blue, key=0, style=bold];
m2_267 -> m2_268  [key=0, style=solid];
m2_268 -> m2_269  [key=0, style=solid];
m2_268 -> m2_277  [key=2, style=dotted];
m2_268 -> m2_270  [color=darkseagreen4, key=1, label=o1, style=dashed];
m2_269 -> m2_270  [key=0, style=solid];
m2_269 -> m2_277  [key=2, style=dotted];
m2_270 -> m2_271  [key=0, style=solid];
m2_270 -> m2_44  [key=2, style=dotted];
m2_271 -> m2_272  [key=0, style=solid];
m2_271 -> m2_62  [key=2, style=dotted];
m2_271 -> m2_63  [key=2, style=dotted];
m2_271 -> m2_273  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_271 -> m2_274  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_271 -> m2_275  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_272 -> m2_273  [key=0, style=solid];
m2_272 -> m2_52  [key=2, style=dotted];
m2_273 -> m2_274  [key=0, style=solid];
m2_273 -> m2_8  [key=2, style=dotted];
m2_274 -> m2_275  [key=0, style=solid];
m2_274 -> m2_8  [key=2, style=dotted];
m2_275 -> m2_276  [key=0, style=solid];
m2_275 -> m2_8  [key=2, style=dotted];
m2_276 -> m2_267  [color=blue, key=0, style=bold];
m2_208 -> m2_209  [key=0, style=solid];
m2_209 -> m2_210  [key=0, style=solid];
m2_209 -> m2_44  [key=2, style=dotted];
m2_209 -> m2_211  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_209 -> m2_216  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_209 -> m2_219  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_209 -> m2_222  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_209 -> m2_224  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_209 -> m2_227  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_209 -> m2_238  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_210 -> m2_211  [key=0, style=solid];
m2_210 -> m2_210  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken> t", style=bold];
m2_211 -> m2_212  [key=0, style=solid];
m2_211 -> m2_62  [key=2, style=dotted];
m2_211 -> m2_63  [key=2, style=dotted];
m2_211 -> m2_213  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_211 -> m2_214  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_211 -> m2_215  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_216 -> m2_217  [key=0, style=solid];
m2_216 -> m2_62  [key=2, style=dotted];
m2_216 -> m2_63  [key=2, style=dotted];
m2_216 -> m2_218  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_219 -> m2_220  [key=0, style=solid];
m2_219 -> m2_62  [key=2, style=dotted];
m2_219 -> m2_63  [key=2, style=dotted];
m2_219 -> m2_221  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_222 -> m2_223  [key=0, style=solid];
m2_222 -> m2_62  [key=2, style=dotted];
m2_222 -> m2_63  [key=2, style=dotted];
m2_224 -> m2_225  [key=0, style=solid];
m2_224 -> m2_62  [key=2, style=dotted];
m2_224 -> m2_63  [key=2, style=dotted];
m2_224 -> m2_226  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_227 -> m2_228  [key=0, style=solid];
m2_227 -> m2_62  [key=2, style=dotted];
m2_227 -> m2_63  [key=2, style=dotted];
m2_227 -> m2_229  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_227 -> m2_230  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_227 -> m2_231  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_227 -> m2_232  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_227 -> m2_233  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_227 -> m2_234  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_227 -> m2_235  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_227 -> m2_236  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_227 -> m2_237  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_238 -> m2_239  [key=0, style=solid];
m2_238 -> m2_62  [key=2, style=dotted];
m2_238 -> m2_63  [key=2, style=dotted];
m2_238 -> m2_240  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_238 -> m2_241  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_238 -> m2_242  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_238 -> m2_243  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_238 -> m2_244  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_212 -> m2_213  [key=0, style=solid];
m2_212 -> m2_8  [key=2, style=dotted];
m2_213 -> m2_214  [key=0, style=solid];
m2_213 -> m2_8  [key=2, style=dotted];
m2_214 -> m2_215  [key=0, style=solid];
m2_214 -> m2_8  [key=2, style=dotted];
m2_215 -> m2_216  [key=0, style=solid];
m2_215 -> m2_8  [key=2, style=dotted];
m2_217 -> m2_218  [key=0, style=solid];
m2_217 -> m2_8  [key=2, style=dotted];
m2_218 -> m2_219  [key=0, style=solid];
m2_218 -> m2_8  [key=2, style=dotted];
m2_220 -> m2_221  [key=0, style=solid];
m2_220 -> m2_8  [key=2, style=dotted];
m2_221 -> m2_222  [key=0, style=solid];
m2_221 -> m2_8  [key=2, style=dotted];
m2_223 -> m2_224  [key=0, style=solid];
m2_223 -> m2_8  [key=2, style=dotted];
m2_225 -> m2_226  [key=0, style=solid];
m2_225 -> m2_8  [key=2, style=dotted];
m2_226 -> m2_227  [key=0, style=solid];
m2_226 -> m2_8  [key=2, style=dotted];
m2_228 -> m2_229  [key=0, style=solid];
m2_228 -> m2_8  [key=2, style=dotted];
m2_229 -> m2_230  [key=0, style=solid];
m2_229 -> m2_8  [key=2, style=dotted];
m2_230 -> m2_231  [key=0, style=solid];
m2_230 -> m2_8  [key=2, style=dotted];
m2_231 -> m2_232  [key=0, style=solid];
m2_231 -> m2_8  [key=2, style=dotted];
m2_232 -> m2_233  [key=0, style=solid];
m2_232 -> m2_8  [key=2, style=dotted];
m2_233 -> m2_234  [key=0, style=solid];
m2_233 -> m2_8  [key=2, style=dotted];
m2_234 -> m2_235  [key=0, style=solid];
m2_234 -> m2_8  [key=2, style=dotted];
m2_235 -> m2_236  [key=0, style=solid];
m2_235 -> m2_8  [key=2, style=dotted];
m2_236 -> m2_237  [key=0, style=solid];
m2_236 -> m2_8  [key=2, style=dotted];
m2_237 -> m2_238  [key=0, style=solid];
m2_237 -> m2_8  [key=2, style=dotted];
m2_239 -> m2_240  [key=0, style=solid];
m2_239 -> m2_8  [key=2, style=dotted];
m2_240 -> m2_241  [key=0, style=solid];
m2_240 -> m2_8  [key=2, style=dotted];
m2_241 -> m2_242  [key=0, style=solid];
m2_241 -> m2_8  [key=2, style=dotted];
m2_242 -> m2_243  [key=0, style=solid];
m2_242 -> m2_8  [key=2, style=dotted];
m2_243 -> m2_244  [key=0, style=solid];
m2_243 -> m2_8  [key=2, style=dotted];
m2_244 -> m2_245  [key=0, style=solid];
m2_244 -> m2_8  [key=2, style=dotted];
m2_245 -> m2_208  [color=blue, key=0, style=bold];
m2_382 -> m2_383  [key=0, style=solid];
m2_383 -> m2_384  [key=0, style=solid];
m2_383 -> m2_44  [key=2, style=dotted];
m2_383 -> m2_14  [key=2, style=dotted];
m2_383 -> m2_390  [key=2, style=dotted];
m2_383 -> m2_391  [key=2, style=dotted];
m2_384 -> m2_385  [key=0, style=solid];
m2_384 -> m2_62  [key=2, style=dotted];
m2_384 -> m2_63  [key=2, style=dotted];
m2_384 -> m2_386  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_384 -> m2_387  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_384 -> m2_388  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_385 -> m2_386  [key=0, style=solid];
m2_385 -> m2_52  [key=2, style=dotted];
m2_386 -> m2_387  [key=0, style=solid];
m2_386 -> m2_8  [key=2, style=dotted];
m2_387 -> m2_388  [key=0, style=solid];
m2_387 -> m2_14  [key=2, style=dotted];
m2_387 -> m2_15  [key=2, style=dotted];
m2_387 -> m2_291  [key=2, style=dotted];
m2_387 -> m2_292  [key=2, style=dotted];
m2_388 -> m2_389  [key=0, style=solid];
m2_388 -> m2_14  [key=2, style=dotted];
m2_388 -> m2_15  [key=2, style=dotted];
m2_388 -> m2_291  [key=2, style=dotted];
m2_388 -> m2_292  [key=2, style=dotted];
m2_389 -> m2_382  [color=blue, key=0, style=bold];
m2_360 -> m2_361  [key=0, style=solid];
m2_361 -> m2_362  [key=0, style=solid];
m2_361 -> m2_44  [key=2, style=dotted];
m2_362 -> m2_363  [key=0, style=solid];
m2_362 -> m2_62  [key=2, style=dotted];
m2_362 -> m2_63  [key=2, style=dotted];
m2_362 -> m2_364  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_362 -> m2_365  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_362 -> m2_366  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_363 -> m2_364  [key=0, style=solid];
m2_363 -> m2_52  [key=2, style=dotted];
m2_364 -> m2_365  [key=0, style=solid];
m2_364 -> m2_8  [key=2, style=dotted];
m2_365 -> m2_366  [key=0, style=solid];
m2_365 -> m2_8  [key=2, style=dotted];
m2_366 -> m2_367  [key=0, style=solid];
m2_366 -> m2_8  [key=2, style=dotted];
m2_367 -> m2_360  [color=blue, key=0, style=bold];
m2_444 -> m2_445  [key=0, style=solid];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_7  [key=2, style=dotted];
m2_87 -> m2_88  [key=0, style=solid];
m2_89 -> m2_87  [color=blue, key=0, style=bold];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_7  [key=2, style=dotted];
m2_94 -> m2_95  [key=0, style=solid];
m2_96 -> m2_94  [color=blue, key=0, style=bold];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_7  [key=2, style=dotted];
m2_101 -> m2_102  [key=0, style=solid];
m2_103 -> m2_101  [color=blue, key=0, style=bold];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_16  [key=2, style=dotted];
m2_113 -> m2_114  [key=0, style=solid];
m2_115 -> m2_113  [color=blue, key=0, style=bold];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_7  [key=2, style=dotted];
m2_120 -> m2_121  [key=0, style=solid];
m2_122 -> m2_120  [color=blue, key=0, style=bold];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_7  [key=2, style=dotted];
m2_127 -> m2_128  [key=0, style=solid];
m2_129 -> m2_127  [color=blue, key=0, style=bold];
m2_136 -> m2_137  [key=0, style=solid];
m2_136 -> m2_7  [key=2, style=dotted];
m2_135 -> m2_136  [key=0, style=solid];
m2_137 -> m2_135  [color=blue, key=0, style=bold];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_7  [key=2, style=dotted];
m2_146 -> m2_147  [key=0, style=solid];
m2_148 -> m2_146  [color=blue, key=0, style=bold];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_7  [key=2, style=dotted];
m2_158 -> m2_159  [key=0, style=solid];
m2_160 -> m2_158  [color=blue, key=0, style=bold];
m2_166 -> m2_167  [key=0, style=solid];
m2_166 -> m2_7  [key=2, style=dotted];
m2_165 -> m2_166  [key=0, style=solid];
m2_167 -> m2_165  [color=blue, key=0, style=bold];
m2_178 -> m2_179  [key=0, style=solid];
m2_178 -> m2_7  [key=2, style=dotted];
m2_181 -> m2_182  [key=0, style=solid];
m2_181 -> m2_7  [key=2, style=dotted];
m2_184 -> m2_185  [key=0, style=solid];
m2_184 -> m2_7  [key=2, style=dotted];
m2_177 -> m2_178  [key=0, style=solid];
m2_180 -> m2_181  [key=0, style=solid];
m2_183 -> m2_184  [key=0, style=solid];
m2_187 -> m2_188  [key=0, style=solid];
m2_187 -> m2_7  [key=2, style=dotted];
m2_186 -> m2_187  [key=0, style=solid];
m2_179 -> m2_177  [color=blue, key=0, style=bold];
m2_182 -> m2_180  [color=blue, key=0, style=bold];
m2_185 -> m2_183  [color=blue, key=0, style=bold];
m2_188 -> m2_186  [color=blue, key=0, style=bold];
m2_199 -> m2_200  [key=0, style=solid];
m2_199 -> m2_7  [key=2, style=dotted];
m2_198 -> m2_199  [key=0, style=solid];
m2_200 -> m2_198  [color=blue, key=0, style=bold];
m2_438 -> m2_439  [key=0, style=solid];
m2_441 -> m2_442  [key=0, style=solid];
m2_439 -> m2_440  [key=0, style=solid];
m2_440 -> m2_438  [color=blue, key=0, style=bold];
m2_442 -> m2_443  [key=0, style=solid];
m2_442 -> m2_16  [key=2, style=dotted];
m2_443 -> m2_441  [color=blue, key=0, style=bold];
m2_445 -> m2_446  [key=0, style=solid];
m2_445 -> m2_16  [key=2, style=dotted];
m2_446 -> m2_444  [color=blue, key=0, style=bold];
m2_256 -> m2_257  [key=0, style=solid];
m2_257 -> m2_258  [key=0, style=solid];
m2_257 -> m2_44  [key=2, style=dotted];
m2_258 -> m2_259  [key=0, style=solid];
m2_258 -> m2_62  [key=2, style=dotted];
m2_258 -> m2_260  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_258 -> m2_261  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_258 -> m2_262  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_258 -> m2_263  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_259 -> m2_260  [key=0, style=solid];
m2_259 -> m2_52  [key=2, style=dotted];
m2_260 -> m2_261  [key=0, style=solid];
m2_260 -> m2_265  [key=2, style=dotted];
m2_260 -> m2_8  [key=2, style=dotted];
m2_261 -> m2_262  [key=0, style=solid];
m2_261 -> m2_266  [key=2, style=dotted];
m2_261 -> m2_8  [key=2, style=dotted];
m2_262 -> m2_263  [key=0, style=solid];
m2_262 -> m2_266  [key=2, style=dotted];
m2_262 -> m2_8  [key=2, style=dotted];
m2_263 -> m2_264  [key=0, style=solid];
m2_263 -> m2_266  [key=2, style=dotted];
m2_263 -> m2_8  [key=2, style=dotted];
m2_264 -> m2_256  [color=blue, key=0, style=bold];
m2_53 -> m2_54  [key=0, style=solid];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_61  [key=2, style=dotted];
m2_54 -> m2_15  [key=2, style=dotted];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_62  [key=2, style=dotted];
m2_55 -> m2_63  [key=2, style=dotted];
m2_55 -> m2_57  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_55 -> m2_58  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_55 -> m2_59  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_52  [key=2, style=dotted];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_8  [key=2, style=dotted];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_8  [key=2, style=dotted];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_8  [key=2, style=dotted];
m2_60 -> m2_53  [color=blue, key=0, style=bold];
m2_39 -> m2_40  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_14  [key=2, style=dotted];
m2_40 -> m2_15  [key=2, style=dotted];
m2_40 -> m2_44  [key=2, style=dotted];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_16  [key=2, style=dotted];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_8  [key=2, style=dotted];
m2_43 -> m2_39  [color=blue, key=0, style=bold];
m2_293 -> m2_294  [key=0, style=solid];
m2_294 -> m2_295  [key=0, style=solid];
m2_294 -> m2_277  [key=2, style=dotted];
m2_294 -> m2_297  [color=darkseagreen4, key=1, label=o1, style=dashed];
m2_295 -> m2_296  [key=0, style=solid];
m2_295 -> m2_277  [key=2, style=dotted];
m2_295 -> m2_297  [color=darkseagreen4, key=1, label=o2, style=dashed];
m2_297 -> m2_298  [key=0, style=solid];
m2_297 -> m2_44  [key=2, style=dotted];
m2_296 -> m2_297  [key=0, style=solid];
m2_296 -> m2_277  [key=2, style=dotted];
m2_296 -> m2_306  [key=2, style=dotted];
m2_298 -> m2_299  [key=0, style=solid];
m2_298 -> m2_62  [key=2, style=dotted];
m2_298 -> m2_63  [key=2, style=dotted];
m2_298 -> m2_300  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_298 -> m2_301  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_298 -> m2_302  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_298 -> m2_303  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_298 -> m2_304  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_299 -> m2_300  [key=0, style=solid];
m2_299 -> m2_52  [key=2, style=dotted];
m2_300 -> m2_301  [key=0, style=solid];
m2_300 -> m2_8  [key=2, style=dotted];
m2_301 -> m2_302  [key=0, style=solid];
m2_301 -> m2_8  [key=2, style=dotted];
m2_302 -> m2_303  [key=0, style=solid];
m2_302 -> m2_8  [key=2, style=dotted];
m2_303 -> m2_304  [key=0, style=solid];
m2_303 -> m2_277  [key=2, style=dotted];
m2_303 -> m2_306  [key=2, style=dotted];
m2_303 -> m2_291  [key=2, style=dotted];
m2_303 -> m2_292  [key=2, style=dotted];
m2_304 -> m2_305  [key=0, style=solid];
m2_304 -> m2_306  [key=2, style=dotted];
m2_304 -> m2_291  [key=2, style=dotted];
m2_304 -> m2_292  [key=2, style=dotted];
m2_305 -> m2_293  [color=blue, key=0, style=bold];
m2_246 -> m2_247  [key=0, style=solid];
m2_247 -> m2_248  [key=0, style=solid];
m2_247 -> m2_44  [key=2, style=dotted];
m2_248 -> m2_249  [key=0, style=solid];
m2_248 -> m2_62  [key=2, style=dotted];
m2_248 -> m2_63  [key=2, style=dotted];
m2_248 -> m2_250  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_248 -> m2_251  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_248 -> m2_252  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_248 -> m2_253  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_248 -> m2_254  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_249 -> m2_250  [key=0, style=solid];
m2_249 -> m2_52  [key=2, style=dotted];
m2_250 -> m2_251  [key=0, style=solid];
m2_250 -> m2_8  [key=2, style=dotted];
m2_251 -> m2_252  [key=0, style=solid];
m2_251 -> m2_8  [key=2, style=dotted];
m2_252 -> m2_253  [key=0, style=solid];
m2_252 -> m2_8  [key=2, style=dotted];
m2_253 -> m2_254  [key=0, style=solid];
m2_253 -> m2_8  [key=2, style=dotted];
m2_254 -> m2_255  [key=0, style=solid];
m2_254 -> m2_8  [key=2, style=dotted];
m2_255 -> m2_246  [color=blue, key=0, style=bold];
m2_104 -> m2_105  [key=0, style=solid];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_44  [key=2, style=dotted];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_16  [key=2, style=dotted];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_76  [key=2, style=dotted];
m2_108 -> m2_104  [color=blue, key=0, style=bold];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_14  [key=2, style=dotted];
m2_18 -> m2_15  [key=2, style=dotted];
m2_18 -> m2_20  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_18 -> m2_21  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_16  [key=2, style=dotted];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_8  [key=2, style=dotted];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_16  [key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_8  [key=2, style=dotted];
m2_23 -> m2_17  [color=blue, key=0, style=bold];
m2_447 -> m2_88  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_448 -> m2_95  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_449 -> m2_102  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_450 -> m2_114  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_451 -> m2_121  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_452 -> m2_128  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_453 -> m2_136  [color=darkseagreen4, key=1, label=c, style=dashed];
m2_454 -> m2_147  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_455 -> m2_159  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_456 -> m2_166  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_457 -> m2_178  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_457 -> m2_181  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_457 -> m2_184  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_457 -> m2_187  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_458 -> m2_199  [color=darkseagreen4, key=1, label=a, style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_11  [key=2, style=dotted];
m3_1 -> m3_3  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m3_1 -> m3_4  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m3_1 -> m3_5  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m3_1 -> m3_6  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m3_1 -> m3_7  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m3_1 -> m3_8  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m3_1 -> m3_9  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_12  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_12  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_12  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_12  [key=2, style=dotted];
m3_7 -> m3_8  [key=0, style=solid];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_12  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_12  [key=2, style=dotted];
m3_10 -> m3_0  [color=blue, key=0, style=bold];
m3_13 -> m3_14  [key=0, style=solid];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_11  [key=2, style=dotted];
m3_14 -> m3_16  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m3_14 -> m3_17  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m3_14 -> m3_18  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m3_14 -> m3_19  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_12  [key=2, style=dotted];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_12  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_12  [key=2, style=dotted];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_12  [key=2, style=dotted];
m3_20 -> m3_13  [color=blue, key=0, style=bold];
m3_21 -> m3_22  [key=0, style=solid];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_11  [key=2, style=dotted];
m3_22 -> m3_24  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m3_22 -> m3_25  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m3_22 -> m3_26  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m3_22 -> m3_27  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_12  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_12  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_12  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_12  [key=2, style=dotted];
m3_28 -> m3_21  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=0, style=solid];
m4_2 -> m4_4  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_0  [color=blue, key=0, style=bold];
m4_48 -> m4_49  [key=0, style=solid];
m4_49 -> m4_48  [color=blue, key=0, style=bold];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_69  [color=darkorchid, key=3, label="method methodReturn byte[] ReadAsBytesInternal", style=bold];
m4_103 -> m4_112  [color=darkorchid, key=3, label="method methodReturn byte[] ReadAsBytesInternal", style=bold];
m4_103 -> m4_118  [color=darkorchid, key=3, label="method methodReturn byte[] ReadAsBytesInternal", style=bold];
m4_103 -> m4_133  [color=darkorchid, key=3, label="method methodReturn byte[] ReadAsBytesInternal", style=bold];
m4_104 -> m4_105  [key=0, style=solid];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_110  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_105 -> m4_116  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_105 -> m4_121  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_105 -> m4_123  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_105 -> m4_125  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_105 -> m4_139  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_105 -> m4_141  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_109  [key=0, style=solid];
m4_106 -> m4_60  [key=2, style=dotted];
m4_110 -> m4_105  [key=0, style=solid];
m4_110 -> m4_111  [key=0, style=solid];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_121  [key=0, style=solid];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_123  [key=0, style=solid];
m4_123 -> m4_124  [key=0, style=solid];
m4_123 -> m4_125  [key=0, style=solid];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_139  [key=0, style=solid];
m4_139 -> m4_140  [key=0, style=solid];
m4_139 -> m4_141  [key=0, style=solid];
m4_141 -> m4_142  [key=0, style=solid];
m4_141 -> m4_27  [key=2, style=dotted];
m4_141 -> m4_28  [key=2, style=dotted];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_97  [key=2, style=dotted];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_116  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_109 -> m4_121  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_109 -> m4_123  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_109 -> m4_125  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_109 -> m4_139  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_109 -> m4_141  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_108 -> m4_142  [key=0, style=solid];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_116  [key=0, style=solid];
m4_111 -> m4_143  [key=2, style=dotted];
m4_112 -> m4_113  [key=0, style=solid];
m4_112 -> m4_52  [key=2, style=dotted];
m4_112 -> m4_114  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_112 -> m4_115  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_60  [key=2, style=dotted];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_99  [key=2, style=dotted];
m4_115 -> m4_142  [key=0, style=solid];
m4_117 -> m4_118  [key=0, style=solid];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_144  [key=2, style=dotted];
m4_118 -> m4_120  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_119 -> m4_120  [key=0, style=solid];
m4_119 -> m4_99  [key=2, style=dotted];
m4_120 -> m4_142  [key=0, style=solid];
m4_122 -> m4_142  [key=0, style=solid];
m4_124 -> m4_142  [key=0, style=solid];
m4_126 -> m4_127  [key=0, style=solid];
m4_126 -> m4_145  [key=2, style=dotted];
m4_126 -> m4_131  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_126 -> m4_133  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_127 -> m4_128  [key=0, style=solid];
m4_127 -> m4_138  [key=0, style=solid];
m4_127 -> m4_60  [key=2, style=dotted];
m4_131 -> m4_127  [key=0, style=solid];
m4_131 -> m4_146  [key=2, style=dotted];
m4_131 -> m4_26  [key=2, style=dotted];
m4_133 -> m4_134  [key=0, style=solid];
m4_133 -> m4_147  [key=2, style=dotted];
m4_133 -> m4_135  [color=darkseagreen4, key=1, label=d, style=dashed];
m4_128 -> m4_129  [key=0, style=solid];
m4_128 -> m4_137  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_128 -> m4_139  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_128 -> m4_141  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_138 -> m4_142  [key=0, style=solid];
m4_138 -> m4_28  [key=2, style=dotted];
m4_129 -> m4_130  [key=0, style=solid];
m4_129 -> m4_132  [key=0, style=solid];
m4_129 -> m4_136  [key=0, style=solid];
m4_129 -> m4_137  [key=0, style=solid];
m4_137 -> m4_142  [key=0, style=solid];
m4_137 -> m4_27  [key=2, style=dotted];
m4_137 -> m4_28  [key=2, style=dotted];
m4_130 -> m4_131  [key=0, style=solid];
m4_132 -> m4_133  [key=0, style=solid];
m4_136 -> m4_127  [key=0, style=solid];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_99  [key=2, style=dotted];
m4_135 -> m4_142  [key=0, style=solid];
m4_140 -> m4_142  [key=0, style=solid];
m4_142 -> m4_103  [color=blue, key=0, style=bold];
m4_292 -> m4_293  [key=0, style=solid];
m4_293 -> m4_294  [key=0, style=solid];
m4_293 -> m4_99  [key=2, style=dotted];
m4_294 -> m4_292  [color=blue, key=0, style=bold];
m4_46 -> m4_47  [key=0, style=solid];
m4_47 -> m4_46  [color=blue, key=0, style=bold];
m4_5 -> m4_6  [key=0, style=solid];
m4_6 -> m4_7  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_13  [key=2, style=dotted];
m4_8 -> m4_9  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_10 -> m4_11  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_12 -> m4_5  [color=blue, key=0, style=bold];
m4_97 -> m4_290  [key=0, style=solid];
m4_97 -> m4_68  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m4_97 -> m4_82  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m4_290 -> m4_291  [key=0, style=solid];
m4_290 -> m4_99  [key=2, style=dotted];
m4_291 -> m4_97  [color=blue, key=0, style=bold];
m4_343 -> m4_381  [key=0, style=solid];
m4_343 -> m4_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m4_343 -> m4_331  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken token", style=bold];
m4_343 -> m4_278  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonContainerType GetTypeForCloseToken", style=bold];
m4_343 -> m4_85  [color=red, key=3, label="method methodReturn Newtonsoft.Json.JsonContainerType GetTypeForCloseToken", style=bold];
m4_343 -> m4_306  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonContainerType GetTypeForCloseToken", style=bold];
m4_381 -> m4_382  [key=0, style=solid];
m4_381 -> m4_384  [key=0, style=solid];
m4_381 -> m4_386  [key=0, style=solid];
m4_381 -> m4_388  [key=0, style=solid];
m4_388 -> m4_389  [key=0, style=solid];
m4_388 -> m4_27  [key=2, style=dotted];
m4_388 -> m4_28  [key=2, style=dotted];
m4_382 -> m4_383  [key=0, style=solid];
m4_384 -> m4_385  [key=0, style=solid];
m4_386 -> m4_387  [key=0, style=solid];
m4_383 -> m4_389  [key=0, style=solid];
m4_385 -> m4_389  [key=0, style=solid];
m4_387 -> m4_389  [key=0, style=solid];
m4_389 -> m4_343  [color=blue, key=0, style=bold];
m4_235 -> m4_236  [key=0, style=solid];
m4_235 -> m4_69  [color=darkorchid, key=3, label="method methodReturn System.DateTime? ReadAsDateTimeInternal", style=bold];
m4_235 -> m4_245  [color=darkorchid, key=3, label="method methodReturn System.DateTime? ReadAsDateTimeInternal", style=bold];
m4_236 -> m4_237  [key=0, style=solid];
m4_237 -> m4_238  [key=0, style=solid];
m4_237 -> m4_240  [key=0, style=solid];
m4_237 -> m4_60  [key=2, style=dotted];
m4_238 -> m4_239  [key=0, style=solid];
m4_238 -> m4_97  [key=2, style=dotted];
m4_240 -> m4_236  [key=0, style=solid];
m4_240 -> m4_241  [key=0, style=solid];
m4_239 -> m4_265  [key=0, style=solid];
m4_241 -> m4_242  [key=0, style=solid];
m4_241 -> m4_243  [key=0, style=solid];
m4_242 -> m4_265  [key=0, style=solid];
m4_243 -> m4_244  [key=0, style=solid];
m4_243 -> m4_245  [key=0, style=solid];
m4_244 -> m4_265  [key=0, style=solid];
m4_245 -> m4_246  [key=0, style=solid];
m4_246 -> m4_247  [key=0, style=solid];
m4_246 -> m4_262  [key=0, style=solid];
m4_247 -> m4_248  [key=0, style=solid];
m4_247 -> m4_252  [color=red, key=1, label=s, style=dashed];
m4_247 -> m4_257  [color=darkseagreen4, key=1, label=s, style=dashed];
m4_262 -> m4_263  [key=0, style=solid];
m4_262 -> m4_264  [key=0, style=solid];
m4_248 -> m4_249  [key=0, style=solid];
m4_248 -> m4_251  [key=0, style=solid];
m4_248 -> m4_100  [key=2, style=dotted];
m4_252 -> m4_253  [color=red, key=0, style=solid];
m4_252 -> m4_257  [color=red, key=0, style=solid];
m4_252 -> m4_101  [color=red, key=2, style=dotted];
m4_257 -> m4_258  [key=0, style=solid];
m4_257 -> m4_261  [key=0, style=solid];
m4_257 -> m4_267  [key=2, style=dotted];
m4_249 -> m4_250  [key=0, style=solid];
m4_249 -> m4_97  [key=2, style=dotted];
m4_251 -> m4_252  [color=red, key=0, style=solid];
m4_250 -> m4_265  [key=0, style=solid];
m4_253 -> m4_254  [key=0, style=solid];
m4_254 -> m4_255  [key=0, style=solid];
m4_254 -> m4_266  [key=2, style=dotted];
m4_254 -> m4_254  [color=darkseagreen4, key=1, label=dt, style=dashed];
m4_254 -> m4_256  [color=darkseagreen4, key=1, label=dt, style=dashed];
m4_255 -> m4_256  [key=0, style=solid];
m4_255 -> m4_99  [key=2, style=dotted];
m4_256 -> m4_265  [key=0, style=solid];
m4_258 -> m4_259  [key=0, style=solid];
m4_258 -> m4_266  [key=2, style=dotted];
m4_258 -> m4_258  [color=darkseagreen4, key=1, label=dt, style=dashed];
m4_258 -> m4_260  [color=darkseagreen4, key=1, label=dt, style=dashed];
m4_261 -> m4_265  [key=0, style=solid];
m4_261 -> m4_27  [key=2, style=dotted];
m4_261 -> m4_28  [key=2, style=dotted];
m4_259 -> m4_260  [key=0, style=solid];
m4_259 -> m4_99  [key=2, style=dotted];
m4_260 -> m4_265  [key=0, style=solid];
m4_263 -> m4_265  [key=0, style=solid];
m4_264 -> m4_265  [key=0, style=solid];
m4_264 -> m4_27  [key=2, style=dotted];
m4_264 -> m4_28  [key=2, style=dotted];
m4_265 -> m4_235  [color=blue, key=0, style=bold];
m4_43 -> m4_44  [key=0, style=solid];
m4_44 -> m4_45  [key=0, style=solid];
m4_45 -> m4_43  [color=blue, key=0, style=bold];
m4_397 -> m4_398  [key=0, style=solid];
m4_398 -> m4_399  [key=0, style=solid];
m4_399 -> m4_400  [key=0, style=solid];
m4_400 -> m4_401  [key=0, style=solid];
m4_401 -> m4_397  [color=blue, key=0, style=bold];
m4_232 -> m4_362  [key=0, style=solid];
m4_232 -> m4_210  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken token", style=bold];
m4_232 -> m4_290  [color=darkorchid, key=3, label="method methodReturn bool IsPrimitiveToken", style=bold];
m4_232 -> m4_74  [color=darkorchid, key=3, label="method methodReturn bool IsPrimitiveToken", style=bold];
m4_362 -> m4_363  [key=0, style=solid];
m4_362 -> m4_372  [key=0, style=solid];
m4_363 -> m4_364  [key=0, style=solid];
m4_372 -> m4_373  [key=0, style=solid];
m4_364 -> m4_365  [key=0, style=solid];
m4_365 -> m4_366  [key=0, style=solid];
m4_366 -> m4_367  [key=0, style=solid];
m4_367 -> m4_368  [key=0, style=solid];
m4_368 -> m4_369  [key=0, style=solid];
m4_369 -> m4_370  [key=0, style=solid];
m4_370 -> m4_371  [key=0, style=solid];
m4_371 -> m4_373  [key=0, style=solid];
m4_373 -> m4_232  [color=blue, key=0, style=bold];
m4_54 -> m4_55  [key=0, style=solid];
m4_55 -> m4_54  [color=blue, key=0, style=bold];
m4_331 -> m4_336  [key=0, style=solid];
m4_331 -> m4_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m4_331 -> m4_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m4_331 -> m4_308  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken endToken", style=bold];
m4_331 -> m4_310  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken endToken", style=bold];
m4_331 -> m4_312  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken endToken", style=bold];
m4_336 -> m4_337  [key=0, style=solid];
m4_336 -> m4_29  [key=2, style=dotted];
m4_336 -> m4_338  [color=darkseagreen4, key=1, label=currentObject, style=dashed];
m4_337 -> m4_338  [key=0, style=solid];
m4_337 -> m4_339  [key=0, style=solid];
m4_337 -> m4_343  [key=2, style=dotted];
m4_338 -> m4_342  [key=0, style=solid];
m4_338 -> m4_344  [key=2, style=dotted];
m4_338 -> m4_28  [key=2, style=dotted];
m4_339 -> m4_340  [key=0, style=solid];
m4_339 -> m4_341  [key=0, style=solid];
m4_339 -> m4_43  [key=2, style=dotted];
m4_340 -> m4_342  [key=0, style=solid];
m4_341 -> m4_342  [key=0, style=solid];
m4_341 -> m4_332  [key=2, style=dotted];
m4_342 -> m4_331  [color=blue, key=0, style=bold];
m4_332 -> m4_358  [key=0, style=solid];
m4_358 -> m4_359  [key=0, style=solid];
m4_358 -> m4_360  [key=0, style=solid];
m4_359 -> m4_361  [key=0, style=solid];
m4_360 -> m4_361  [key=0, style=solid];
m4_361 -> m4_332  [color=blue, key=0, style=bold];
m4_52 -> m4_53  [key=0, style=solid];
m4_53 -> m4_52  [color=blue, key=0, style=bold];
m4_60 -> m4_61  [key=0, style=solid];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_63  [key=2, style=dotted];
m4_62 -> m4_60  [color=blue, key=0, style=bold];
m4_148 -> m4_149  [key=0, style=solid];
m4_148 -> m4_69  [color=darkorchid, key=3, label="method methodReturn decimal? ReadAsDecimalInternal", style=bold];
m4_148 -> m4_162  [color=darkorchid, key=3, label="method methodReturn decimal? ReadAsDecimalInternal", style=bold];
m4_149 -> m4_150  [key=0, style=solid];
m4_150 -> m4_151  [key=0, style=solid];
m4_150 -> m4_155  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_150 -> m4_156  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_150 -> m4_160  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_150 -> m4_163  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_150 -> m4_172  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_150 -> m4_174  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_151 -> m4_152  [key=0, style=solid];
m4_151 -> m4_154  [key=0, style=solid];
m4_151 -> m4_60  [key=2, style=dotted];
m4_155 -> m4_150  [key=0, style=solid];
m4_155 -> m4_156  [key=0, style=solid];
m4_156 -> m4_157  [key=0, style=solid];
m4_156 -> m4_160  [key=0, style=solid];
m4_160 -> m4_161  [key=0, style=solid];
m4_160 -> m4_162  [key=0, style=solid];
m4_163 -> m4_164  [key=0, style=solid];
m4_163 -> m4_172  [key=0, style=solid];
m4_172 -> m4_173  [key=0, style=solid];
m4_172 -> m4_174  [key=0, style=solid];
m4_174 -> m4_175  [key=0, style=solid];
m4_174 -> m4_27  [key=2, style=dotted];
m4_174 -> m4_28  [key=2, style=dotted];
m4_152 -> m4_153  [key=0, style=solid];
m4_152 -> m4_97  [key=2, style=dotted];
m4_154 -> m4_155  [key=0, style=solid];
m4_154 -> m4_156  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_154 -> m4_160  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_154 -> m4_163  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_154 -> m4_172  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_154 -> m4_174  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_153 -> m4_175  [key=0, style=solid];
m4_157 -> m4_158  [key=0, style=solid];
m4_157 -> m4_159  [key=0, style=solid];
m4_158 -> m4_159  [key=0, style=solid];
m4_158 -> m4_176  [key=2, style=dotted];
m4_158 -> m4_99  [key=2, style=dotted];
m4_159 -> m4_175  [key=0, style=solid];
m4_161 -> m4_175  [key=0, style=solid];
m4_162 -> m4_163  [key=0, style=solid];
m4_164 -> m4_165  [key=0, style=solid];
m4_164 -> m4_168  [color=darkseagreen4, key=1, label=s, style=dashed];
m4_165 -> m4_166  [key=0, style=solid];
m4_165 -> m4_168  [key=0, style=solid];
m4_165 -> m4_100  [key=2, style=dotted];
m4_168 -> m4_169  [key=0, style=solid];
m4_168 -> m4_171  [key=0, style=solid];
m4_168 -> m4_177  [key=2, style=dotted];
m4_168 -> m4_170  [color=darkseagreen4, key=1, label=d, style=dashed];
m4_166 -> m4_167  [key=0, style=solid];
m4_166 -> m4_97  [key=2, style=dotted];
m4_167 -> m4_175  [key=0, style=solid];
m4_169 -> m4_170  [key=0, style=solid];
m4_169 -> m4_99  [key=2, style=dotted];
m4_171 -> m4_175  [key=0, style=solid];
m4_171 -> m4_27  [key=2, style=dotted];
m4_171 -> m4_28  [key=2, style=dotted];
m4_170 -> m4_175  [key=0, style=solid];
m4_173 -> m4_175  [key=0, style=solid];
m4_175 -> m4_148  [color=blue, key=0, style=bold];
m4_393 -> m4_394  [key=0, style=solid];
m4_393 -> m4_290  [color=darkorchid, key=3, label="Parameter variable bool disposing", style=bold];
m4_394 -> m4_395  [key=0, style=solid];
m4_394 -> m4_396  [key=0, style=solid];
m4_395 -> m4_396  [key=0, style=solid];
m4_395 -> m4_397  [key=2, style=dotted];
m4_396 -> m4_393  [color=blue, key=0, style=bold];
m4_143 -> m4_268  [key=0, style=solid];
m4_143 -> m4_290  [color=darkorchid, key=3, label="method methodReturn bool IsWrappedInTypeObject", style=bold];
m4_143 -> m4_74  [color=darkorchid, key=3, label="method methodReturn bool IsWrappedInTypeObject", style=bold];
m4_268 -> m4_269  [key=0, style=solid];
m4_269 -> m4_270  [key=0, style=solid];
m4_269 -> m4_279  [key=0, style=solid];
m4_270 -> m4_271  [key=0, style=solid];
m4_270 -> m4_272  [key=0, style=solid];
m4_270 -> m4_60  [key=2, style=dotted];
m4_279 -> m4_280  [key=0, style=solid];
m4_271 -> m4_280  [key=0, style=solid];
m4_271 -> m4_28  [key=2, style=dotted];
m4_272 -> m4_273  [key=0, style=solid];
m4_272 -> m4_278  [key=0, style=solid];
m4_272 -> m4_234  [key=2, style=dotted];
m4_273 -> m4_274  [key=0, style=solid];
m4_273 -> m4_60  [key=2, style=dotted];
m4_278 -> m4_280  [key=0, style=solid];
m4_278 -> m4_27  [key=2, style=dotted];
m4_278 -> m4_28  [key=2, style=dotted];
m4_274 -> m4_275  [key=0, style=solid];
m4_274 -> m4_278  [key=0, style=solid];
m4_274 -> m4_234  [key=2, style=dotted];
m4_274 -> m4_281  [key=2, style=dotted];
m4_275 -> m4_276  [key=0, style=solid];
m4_275 -> m4_60  [key=2, style=dotted];
m4_276 -> m4_277  [key=0, style=solid];
m4_276 -> m4_278  [key=0, style=solid];
m4_276 -> m4_234  [key=2, style=dotted];
m4_277 -> m4_280  [key=0, style=solid];
m4_280 -> m4_143  [color=blue, key=0, style=bold];
m4_390 -> m4_391  [key=0, style=solid];
m4_391 -> m4_392  [key=0, style=solid];
m4_391 -> m4_393  [key=2, style=dotted];
m4_392 -> m4_390  [color=blue, key=0, style=bold];
m4_58 -> m4_59  [key=0, style=solid];
m4_59 -> m4_58  [color=blue, key=0, style=bold];
m4_29 -> m4_30  [key=0, style=solid];
m4_30 -> m4_31  [key=0, style=solid];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_35  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_39  [color=darkseagreen4, key=1, label=oldPosition, style=dashed];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_39  [color=darkseagreen4, key=1, label=oldPosition, style=dashed];
m4_33 -> m4_34  [key=0, style=solid];
m4_39 -> m4_40  [key=0, style=solid];
m4_34 -> m4_37  [key=0, style=solid];
m4_34 -> m4_41  [key=2, style=dotted];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_42  [key=2, style=dotted];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_39  [key=0, style=solid];
m4_38 -> m4_39  [key=0, style=solid];
m4_40 -> m4_29  [color=blue, key=0, style=bold];
m4_345 -> m4_346  [key=0, style=solid];
m4_346 -> m4_347  [key=0, style=solid];
m4_346 -> m4_43  [key=2, style=dotted];
m4_346 -> m4_356  [color=darkseagreen4, key=1, label=currentObject, style=dashed];
m4_347 -> m4_348  [key=0, style=solid];
m4_347 -> m4_350  [key=0, style=solid];
m4_347 -> m4_352  [key=0, style=solid];
m4_347 -> m4_354  [key=0, style=solid];
m4_347 -> m4_356  [key=0, style=solid];
m4_356 -> m4_357  [key=0, style=solid];
m4_356 -> m4_27  [key=2, style=dotted];
m4_356 -> m4_28  [key=2, style=dotted];
m4_348 -> m4_349  [key=0, style=solid];
m4_350 -> m4_351  [key=0, style=solid];
m4_352 -> m4_353  [key=0, style=solid];
m4_354 -> m4_355  [key=0, style=solid];
m4_349 -> m4_357  [key=0, style=solid];
m4_351 -> m4_357  [key=0, style=solid];
m4_353 -> m4_357  [key=0, style=solid];
m4_355 -> m4_357  [key=0, style=solid];
m4_355 -> m4_332  [key=2, style=dotted];
m4_357 -> m4_345  [color=blue, key=0, style=bold];
m4_178 -> m4_179  [key=0, style=solid];
m4_178 -> m4_69  [color=darkorchid, key=3, label="method methodReturn int? ReadAsInt32Internal", style=bold];
m4_178 -> m4_192  [color=darkorchid, key=3, label="method methodReturn int? ReadAsInt32Internal", style=bold];
m4_179 -> m4_180  [key=0, style=solid];
m4_180 -> m4_181  [key=0, style=solid];
m4_180 -> m4_185  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_180 -> m4_186  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_180 -> m4_190  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_180 -> m4_193  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_180 -> m4_202  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_181 -> m4_182  [key=0, style=solid];
m4_181 -> m4_184  [key=0, style=solid];
m4_181 -> m4_60  [key=2, style=dotted];
m4_185 -> m4_180  [key=0, style=solid];
m4_185 -> m4_186  [key=0, style=solid];
m4_186 -> m4_187  [key=0, style=solid];
m4_186 -> m4_190  [key=0, style=solid];
m4_190 -> m4_191  [key=0, style=solid];
m4_190 -> m4_192  [key=0, style=solid];
m4_193 -> m4_194  [key=0, style=solid];
m4_193 -> m4_202  [key=0, style=solid];
m4_202 -> m4_203  [key=0, style=solid];
m4_202 -> m4_204  [key=0, style=solid];
m4_182 -> m4_183  [key=0, style=solid];
m4_182 -> m4_97  [key=2, style=dotted];
m4_184 -> m4_185  [key=0, style=solid];
m4_184 -> m4_186  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_184 -> m4_190  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_184 -> m4_193  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_184 -> m4_202  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_183 -> m4_205  [key=0, style=solid];
m4_187 -> m4_188  [key=0, style=solid];
m4_187 -> m4_189  [key=0, style=solid];
m4_188 -> m4_189  [key=0, style=solid];
m4_188 -> m4_206  [key=2, style=dotted];
m4_188 -> m4_99  [key=2, style=dotted];
m4_189 -> m4_205  [key=0, style=solid];
m4_191 -> m4_205  [key=0, style=solid];
m4_192 -> m4_193  [key=0, style=solid];
m4_194 -> m4_195  [key=0, style=solid];
m4_194 -> m4_198  [color=darkseagreen4, key=1, label=s, style=dashed];
m4_195 -> m4_196  [key=0, style=solid];
m4_195 -> m4_198  [key=0, style=solid];
m4_195 -> m4_100  [key=2, style=dotted];
m4_198 -> m4_199  [key=0, style=solid];
m4_198 -> m4_201  [key=0, style=solid];
m4_198 -> m4_207  [key=2, style=dotted];
m4_198 -> m4_200  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_196 -> m4_197  [key=0, style=solid];
m4_196 -> m4_97  [key=2, style=dotted];
m4_197 -> m4_205  [key=0, style=solid];
m4_199 -> m4_200  [key=0, style=solid];
m4_199 -> m4_99  [key=2, style=dotted];
m4_201 -> m4_205  [key=0, style=solid];
m4_201 -> m4_27  [key=2, style=dotted];
m4_201 -> m4_28  [key=2, style=dotted];
m4_200 -> m4_205  [key=0, style=solid];
m4_203 -> m4_205  [key=0, style=solid];
m4_204 -> m4_205  [key=0, style=solid];
m4_204 -> m4_27  [key=2, style=dotted];
m4_204 -> m4_28  [key=2, style=dotted];
m4_205 -> m4_178  [color=blue, key=0, style=bold];
m4_99 -> m4_295  [key=0, style=solid];
m4_99 -> m4_296  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_99 -> m4_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m4_99 -> m4_315  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_99 -> m4_328  [color=darkseagreen4, key=1, label=bool, style=dashed];
m4_99 -> m4_74  [color=darkorchid, key=3, label="Parameter variable bool updateIndex", style=bold];
m4_99 -> m4_114  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m4_99 -> m4_158  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m4_99 -> m4_188  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m4_99 -> m4_226  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m4_99 -> m4_97  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m4_99 -> m4_292  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m4_99 -> m4_290  [color=darkorchid, key=3, label="Parameter variable bool updateIndex", style=bold];
m4_99 -> m4_78  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m4_99 -> m4_112  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m4_99 -> m4_118  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m4_99 -> m4_133  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m4_99 -> m4_162  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m4_99 -> m4_192  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m4_99 -> m4_222  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m4_99 -> m4_245  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m4_99 -> m4_69  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m4_295 -> m4_296  [key=0, style=solid];
m4_296 -> m4_297  [key=0, style=solid];
m4_297 -> m4_298  [key=0, style=solid];
m4_297 -> m4_301  [key=0, style=solid];
m4_297 -> m4_304  [key=0, style=solid];
m4_297 -> m4_307  [key=0, style=solid];
m4_297 -> m4_309  [key=0, style=solid];
m4_297 -> m4_311  [key=0, style=solid];
m4_297 -> m4_313  [key=0, style=solid];
m4_297 -> m4_316  [key=0, style=solid];
m4_315 -> m4_330  [key=0, style=solid];
m4_328 -> m4_329  [key=0, style=solid];
m4_328 -> m4_330  [key=0, style=solid];
m4_298 -> m4_299  [key=0, style=solid];
m4_301 -> m4_302  [key=0, style=solid];
m4_304 -> m4_305  [key=0, style=solid];
m4_307 -> m4_308  [key=0, style=solid];
m4_309 -> m4_310  [key=0, style=solid];
m4_311 -> m4_312  [key=0, style=solid];
m4_313 -> m4_314  [key=0, style=solid];
m4_316 -> m4_317  [key=0, style=solid];
m4_299 -> m4_300  [key=0, style=solid];
m4_300 -> m4_330  [key=0, style=solid];
m4_300 -> m4_14  [key=2, style=dotted];
m4_302 -> m4_303  [key=0, style=solid];
m4_303 -> m4_330  [key=0, style=solid];
m4_303 -> m4_14  [key=2, style=dotted];
m4_305 -> m4_306  [key=0, style=solid];
m4_306 -> m4_330  [key=0, style=solid];
m4_306 -> m4_14  [key=2, style=dotted];
m4_308 -> m4_330  [key=0, style=solid];
m4_308 -> m4_331  [key=2, style=dotted];
m4_310 -> m4_330  [key=0, style=solid];
m4_310 -> m4_331  [key=2, style=dotted];
m4_312 -> m4_330  [key=0, style=solid];
m4_312 -> m4_331  [key=2, style=dotted];
m4_314 -> m4_315  [key=0, style=solid];
m4_317 -> m4_318  [key=0, style=solid];
m4_318 -> m4_319  [key=0, style=solid];
m4_319 -> m4_320  [key=0, style=solid];
m4_320 -> m4_321  [key=0, style=solid];
m4_321 -> m4_322  [key=0, style=solid];
m4_322 -> m4_323  [key=0, style=solid];
m4_323 -> m4_324  [key=0, style=solid];
m4_324 -> m4_325  [key=0, style=solid];
m4_325 -> m4_326  [key=0, style=solid];
m4_325 -> m4_327  [key=0, style=solid];
m4_325 -> m4_43  [key=2, style=dotted];
m4_326 -> m4_328  [key=0, style=solid];
m4_327 -> m4_328  [key=0, style=solid];
m4_327 -> m4_332  [key=2, style=dotted];
m4_329 -> m4_330  [key=0, style=solid];
m4_329 -> m4_24  [key=2, style=dotted];
m4_330 -> m4_99  [color=blue, key=0, style=bold];
m4_50 -> m4_51  [key=0, style=solid];
m4_51 -> m4_50  [color=blue, key=0, style=bold];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonContainerType", style=dashed];
m4_14 -> m4_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonContainerType", style=dashed];
m4_14 -> m4_278  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonContainerType value", style=bold];
m4_14 -> m4_85  [color=red, key=3, label="Parameter variable Newtonsoft.Json.JsonContainerType value", style=bold];
m4_14 -> m4_306  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonContainerType value", style=bold];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_24  [key=2, style=dotted];
m4_17 -> m4_23  [key=0, style=solid];
m4_17 -> m4_25  [key=2, style=dotted];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_25  [key=2, style=dotted];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_18  [key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_26  [key=2, style=dotted];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_23  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_27  [key=2, style=dotted];
m4_22 -> m4_28  [key=2, style=dotted];
m4_23 -> m4_14  [color=blue, key=0, style=bold];
m4_289 -> m4_374  [key=0, style=solid];
m4_289 -> m4_290  [color=darkorchid, key=3, label="method methodReturn bool IsStartToken", style=bold];
m4_289 -> m4_74  [color=darkorchid, key=3, label="method methodReturn bool IsStartToken", style=bold];
m4_374 -> m4_375  [key=0, style=solid];
m4_374 -> m4_379  [key=0, style=solid];
m4_375 -> m4_376  [key=0, style=solid];
m4_379 -> m4_380  [key=0, style=solid];
m4_376 -> m4_377  [key=0, style=solid];
m4_377 -> m4_378  [key=0, style=solid];
m4_378 -> m4_380  [key=0, style=solid];
m4_380 -> m4_289  [color=blue, key=0, style=bold];
m4_282 -> m4_283  [key=0, style=solid];
m4_283 -> m4_284  [key=0, style=solid];
m4_283 -> m4_285  [key=0, style=solid];
m4_284 -> m4_285  [key=0, style=solid];
m4_284 -> m4_46  [key=2, style=dotted];
m4_285 -> m4_286  [key=0, style=solid];
m4_285 -> m4_288  [key=0, style=solid];
m4_285 -> m4_289  [key=2, style=dotted];
m4_286 -> m4_287  [key=0, style=solid];
m4_287 -> m4_287  [key=0, style=solid];
m4_287 -> m4_288  [key=0, style=solid];
m4_287 -> m4_46  [key=2, style=dotted];
m4_288 -> m4_282  [color=blue, key=0, style=bold];
m4_24 -> m4_333  [key=0, style=solid];
m4_333 -> m4_334  [key=0, style=solid];
m4_333 -> m4_335  [key=0, style=solid];
m4_334 -> m4_335  [key=0, style=solid];
m4_335 -> m4_24  [color=blue, key=0, style=bold];
m4_56 -> m4_57  [key=0, style=solid];
m4_57 -> m4_56  [color=blue, key=0, style=bold];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_69  [color=darkorchid, key=3, label="method methodReturn System.DateTimeOffset? ReadAsDateTimeOffsetInternal", style=bold];
m4_64 -> m4_78  [color=darkorchid, key=3, label="method methodReturn System.DateTimeOffset? ReadAsDateTimeOffsetInternal", style=bold];
m4_65 -> m4_66  [key=0, style=solid];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_71  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_66 -> m4_72  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_66 -> m4_76  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_66 -> m4_79  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_66 -> m4_93  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_66 -> m4_95  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_70  [key=0, style=solid];
m4_67 -> m4_60  [key=2, style=dotted];
m4_71 -> m4_66  [key=0, style=solid];
m4_71 -> m4_72  [key=0, style=solid];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_76  [key=0, style=solid];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_78  [key=0, style=solid];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_93  [key=0, style=solid];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_95  [key=0, style=solid];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_27  [key=2, style=dotted];
m4_95 -> m4_28  [key=2, style=dotted];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_97  [key=2, style=dotted];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_72  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_70 -> m4_76  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_70 -> m4_79  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_70 -> m4_93  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_70 -> m4_95  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_69 -> m4_96  [key=0, style=solid];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_75  [key=0, style=solid];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_98  [key=2, style=dotted];
m4_74 -> m4_99  [key=2, style=dotted];
m4_75 -> m4_96  [key=0, style=solid];
m4_77 -> m4_96  [key=0, style=solid];
m4_78 -> m4_79  [key=0, style=solid];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_85  [color=red, key=1, label=s, style=dashed];
m4_80 -> m4_89  [color=darkseagreen4, key=1, label=s, style=dashed];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_84  [key=0, style=solid];
m4_81 -> m4_100  [key=2, style=dotted];
m4_85 -> m4_86  [color=red, key=0, style=solid];
m4_85 -> m4_89  [color=red, key=0, style=solid];
m4_85 -> m4_101  [color=red, key=2, style=dotted];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_92  [key=0, style=solid];
m4_89 -> m4_102  [key=2, style=dotted];
m4_89 -> m4_91  [color=darkseagreen4, key=1, label=dt, style=dashed];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_97  [key=2, style=dotted];
m4_84 -> m4_85  [color=red, key=0, style=solid];
m4_83 -> m4_96  [key=0, style=solid];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_88  [color=darkseagreen4, key=1, label=dt, style=dashed];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_99  [key=2, style=dotted];
m4_88 -> m4_96  [key=0, style=solid];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_99  [key=2, style=dotted];
m4_92 -> m4_96  [key=0, style=solid];
m4_92 -> m4_27  [key=2, style=dotted];
m4_92 -> m4_28  [key=2, style=dotted];
m4_91 -> m4_96  [key=0, style=solid];
m4_94 -> m4_96  [key=0, style=solid];
m4_96 -> m4_64  [color=blue, key=0, style=bold];
m4_208 -> m4_209  [key=0, style=solid];
m4_208 -> m4_69  [color=darkorchid, key=3, label="method methodReturn string ReadAsStringInternal", style=bold];
m4_208 -> m4_222  [color=darkorchid, key=3, label="method methodReturn string ReadAsStringInternal", style=bold];
m4_209 -> m4_210  [key=0, style=solid];
m4_210 -> m4_211  [key=0, style=solid];
m4_210 -> m4_215  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_210 -> m4_216  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_210 -> m4_218  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_210 -> m4_220  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_210 -> m4_228  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_210 -> m4_230  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_211 -> m4_212  [key=0, style=solid];
m4_211 -> m4_214  [key=0, style=solid];
m4_211 -> m4_60  [key=2, style=dotted];
m4_215 -> m4_210  [key=0, style=solid];
m4_215 -> m4_216  [key=0, style=solid];
m4_216 -> m4_217  [key=0, style=solid];
m4_216 -> m4_218  [key=0, style=solid];
m4_218 -> m4_219  [key=0, style=solid];
m4_218 -> m4_220  [key=0, style=solid];
m4_220 -> m4_221  [key=0, style=solid];
m4_220 -> m4_228  [key=0, style=solid];
m4_220 -> m4_232  [key=2, style=dotted];
m4_228 -> m4_229  [key=0, style=solid];
m4_228 -> m4_230  [key=0, style=solid];
m4_230 -> m4_231  [key=0, style=solid];
m4_230 -> m4_27  [key=2, style=dotted];
m4_230 -> m4_28  [key=2, style=dotted];
m4_212 -> m4_213  [key=0, style=solid];
m4_212 -> m4_97  [key=2, style=dotted];
m4_214 -> m4_215  [key=0, style=solid];
m4_214 -> m4_216  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_214 -> m4_218  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_214 -> m4_220  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_214 -> m4_228  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_214 -> m4_230  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_213 -> m4_231  [key=0, style=solid];
m4_217 -> m4_231  [key=0, style=solid];
m4_219 -> m4_231  [key=0, style=solid];
m4_221 -> m4_222  [key=0, style=solid];
m4_221 -> m4_228  [key=0, style=solid];
m4_222 -> m4_223  [key=0, style=solid];
m4_223 -> m4_224  [key=0, style=solid];
m4_223 -> m4_225  [key=0, style=solid];
m4_224 -> m4_226  [key=0, style=solid];
m4_224 -> m4_233  [key=2, style=dotted];
m4_224 -> m4_227  [color=darkseagreen4, key=1, label=s, style=dashed];
m4_225 -> m4_226  [key=0, style=solid];
m4_225 -> m4_234  [key=2, style=dotted];
m4_225 -> m4_227  [color=darkseagreen4, key=1, label=s, style=dashed];
m4_226 -> m4_227  [key=0, style=solid];
m4_226 -> m4_99  [key=2, style=dotted];
m4_227 -> m4_231  [key=0, style=solid];
m4_229 -> m4_231  [key=0, style=solid];
m4_231 -> m4_208  [color=blue, key=0, style=bold];
m4_402 -> m4_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_85  [color=red, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_131  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_149  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_152  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_166  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_168  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_179  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_184  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_252  [color=red, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_275  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_287  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_302  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_329  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_402 -> m4_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_184 -> m5_190  [key=0, style=solid];
m5_184 -> m5_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_197  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_184 -> m5_181  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m5_184 -> m5_180  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_184 -> m5_121  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m5_190 -> m5_191  [key=0, style=solid];
m5_190 -> m5_117  [key=2, style=dotted];
m5_192 -> m5_193  [key=0, style=solid];
m5_192 -> m5_195  [key=0, style=solid];
m5_193 -> m5_194  [key=0, style=solid];
m5_193 -> m5_224  [color=darkseagreen4, key=1, label=previousFormatting, style=dashed];
m5_193 -> m5_225  [color=darkseagreen4, key=1, label=previousFormatting, style=dashed];
m5_194 -> m5_195  [key=0, style=solid];
m5_196 -> m5_197  [key=0, style=solid];
m5_196 -> m5_199  [key=0, style=solid];
m5_197 -> m5_198  [key=0, style=solid];
m5_197 -> m5_226  [color=darkseagreen4, key=1, label=previousDateFormatHandling, style=dashed];
m5_197 -> m5_227  [color=darkseagreen4, key=1, label=previousDateFormatHandling, style=dashed];
m5_198 -> m5_199  [key=0, style=solid];
m5_200 -> m5_201  [key=0, style=solid];
m5_200 -> m5_203  [key=0, style=solid];
m5_201 -> m5_202  [key=0, style=solid];
m5_201 -> m5_228  [color=darkseagreen4, key=1, label=previousDateTimeZoneHandling, style=dashed];
m5_201 -> m5_229  [color=darkseagreen4, key=1, label=previousDateTimeZoneHandling, style=dashed];
m5_202 -> m5_203  [key=0, style=solid];
m5_204 -> m5_205  [key=0, style=solid];
m5_204 -> m5_207  [key=0, style=solid];
m5_205 -> m5_206  [key=0, style=solid];
m5_205 -> m5_230  [color=darkseagreen4, key=1, label=previousFloatFormatHandling, style=dashed];
m5_205 -> m5_231  [color=darkseagreen4, key=1, label=previousFloatFormatHandling, style=dashed];
m5_206 -> m5_207  [key=0, style=solid];
m5_208 -> m5_209  [key=0, style=solid];
m5_208 -> m5_211  [key=0, style=solid];
m5_209 -> m5_210  [key=0, style=solid];
m5_209 -> m5_232  [color=darkseagreen4, key=1, label=previousStringEscapeHandling, style=dashed];
m5_209 -> m5_233  [color=darkseagreen4, key=1, label=previousStringEscapeHandling, style=dashed];
m5_210 -> m5_211  [key=0, style=solid];
m5_212 -> m5_213  [key=0, style=solid];
m5_212 -> m5_215  [key=0, style=solid];
m5_212 -> m5_171  [key=2, style=dotted];
m5_213 -> m5_214  [key=0, style=solid];
m5_213 -> m5_236  [color=darkseagreen4, key=1, label=previousCulture, style=dashed];
m5_213 -> m5_237  [color=darkseagreen4, key=1, label=previousCulture, style=dashed];
m5_214 -> m5_215  [key=0, style=solid];
m5_216 -> m5_217  [key=0, style=solid];
m5_216 -> m5_219  [key=0, style=solid];
m5_217 -> m5_218  [key=0, style=solid];
m5_217 -> m5_235  [color=darkseagreen4, key=1, label=previousDateFormatString, style=dashed];
m5_218 -> m5_219  [key=0, style=solid];
m5_219 -> m5_220  [key=0, style=solid];
m5_219 -> m5_239  [key=2, style=dotted];
m5_219 -> m5_221  [color=darkseagreen4, key=1, label=traceJsonWriter, style=dashed];
m5_219 -> m5_222  [color=darkseagreen4, key=1, label=traceJsonWriter, style=dashed];
m5_219 -> m5_223  [color=darkseagreen4, key=1, label=traceJsonWriter, style=dashed];
m5_221 -> m5_222  [key=0, style=solid];
m5_221 -> m5_241  [key=2, style=dotted];
m5_225 -> m5_226  [key=0, style=solid];
m5_227 -> m5_228  [key=0, style=solid];
m5_229 -> m5_230  [key=0, style=solid];
m5_231 -> m5_232  [key=0, style=solid];
m5_233 -> m5_234  [key=0, style=solid];
m5_235 -> m5_236  [key=0, style=solid];
m5_237 -> m5_238  [key=0, style=solid];
m5_191 -> m5_192  [key=0, style=solid];
m5_191 -> m5_224  [color=darkseagreen4, key=1, label=previousFormatting, style=dashed];
m5_191 -> m5_225  [color=darkseagreen4, key=1, label=previousFormatting, style=dashed];
m5_191 -> m5_121  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Formatting? previousFormatting", style=bold];
m5_224 -> m5_225  [key=0, style=solid];
m5_224 -> m5_226  [key=0, style=solid];
m5_195 -> m5_196  [key=0, style=solid];
m5_195 -> m5_226  [color=darkseagreen4, key=1, label=previousDateFormatHandling, style=dashed];
m5_195 -> m5_227  [color=darkseagreen4, key=1, label=previousDateFormatHandling, style=dashed];
m5_195 -> m5_121  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.DateFormatHandling? previousDateFormatHandling", style=bold];
m5_226 -> m5_227  [key=0, style=solid];
m5_226 -> m5_228  [key=0, style=solid];
m5_199 -> m5_200  [key=0, style=solid];
m5_199 -> m5_228  [color=darkseagreen4, key=1, label=previousDateTimeZoneHandling, style=dashed];
m5_199 -> m5_229  [color=darkseagreen4, key=1, label=previousDateTimeZoneHandling, style=dashed];
m5_199 -> m5_121  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.DateTimeZoneHandling? previousDateTimeZoneHandling", style=bold];
m5_228 -> m5_229  [key=0, style=solid];
m5_228 -> m5_230  [key=0, style=solid];
m5_203 -> m5_204  [key=0, style=solid];
m5_203 -> m5_230  [color=darkseagreen4, key=1, label=previousFloatFormatHandling, style=dashed];
m5_203 -> m5_231  [color=darkseagreen4, key=1, label=previousFloatFormatHandling, style=dashed];
m5_203 -> m5_121  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.FloatFormatHandling? previousFloatFormatHandling", style=bold];
m5_230 -> m5_231  [key=0, style=solid];
m5_230 -> m5_232  [key=0, style=solid];
m5_207 -> m5_208  [key=0, style=solid];
m5_207 -> m5_232  [color=darkseagreen4, key=1, label=previousStringEscapeHandling, style=dashed];
m5_207 -> m5_233  [color=darkseagreen4, key=1, label=previousStringEscapeHandling, style=dashed];
m5_207 -> m5_121  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.StringEscapeHandling? previousStringEscapeHandling", style=bold];
m5_232 -> m5_233  [key=0, style=solid];
m5_232 -> m5_234  [key=0, style=solid];
m5_211 -> m5_212  [key=0, style=solid];
m5_211 -> m5_236  [color=darkseagreen4, key=1, label=previousCulture, style=dashed];
m5_211 -> m5_237  [color=darkseagreen4, key=1, label=previousCulture, style=dashed];
m5_211 -> m5_121  [color=darkorchid, key=3, label="Local variable System.Globalization.CultureInfo previousCulture", style=bold];
m5_236 -> m5_237  [key=0, style=solid];
m5_236 -> m5_238  [key=0, style=solid];
m5_215 -> m5_216  [key=0, style=solid];
m5_215 -> m5_235  [color=darkseagreen4, key=1, label=previousDateFormatString, style=dashed];
m5_215 -> m5_121  [color=darkorchid, key=3, label="Local variable string previousDateFormatString", style=bold];
m5_220 -> m5_221  [key=0, style=solid];
m5_220 -> m5_240  [key=2, style=dotted];
m5_222 -> m5_223  [key=0, style=solid];
m5_222 -> m5_224  [key=0, style=solid];
m5_223 -> m5_224  [key=0, style=solid];
m5_223 -> m5_242  [key=2, style=dotted];
m5_223 -> m5_175  [key=2, style=dotted];
m5_234 -> m5_235  [key=0, style=solid];
m5_234 -> m5_236  [key=0, style=solid];
m5_238 -> m5_184  [color=blue, key=0, style=bold];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_104  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m5_109 -> m5_110  [key=0, style=solid];
m5_109 -> m5_111  [key=2, style=dotted];
m5_110 -> m5_108  [color=blue, key=0, style=bold];
m5_132 -> m5_133  [key=0, style=solid];
m5_132 -> m5_135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_143  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_145  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_147  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_149  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_152  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_153  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_160  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_166  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_168  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_132 -> m5_123  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m5_133 -> m5_134  [key=0, style=solid];
m5_133 -> m5_117  [key=2, style=dotted];
m5_135 -> m5_136  [key=0, style=solid];
m5_135 -> m5_138  [key=0, style=solid];
m5_135 -> m5_171  [key=2, style=dotted];
m5_136 -> m5_137  [key=0, style=solid];
m5_136 -> m5_159  [color=darkseagreen4, key=1, label=previousCulture, style=dashed];
m5_136 -> m5_160  [color=darkseagreen4, key=1, label=previousCulture, style=dashed];
m5_137 -> m5_138  [key=0, style=solid];
m5_139 -> m5_140  [key=0, style=solid];
m5_139 -> m5_142  [key=0, style=solid];
m5_140 -> m5_141  [key=0, style=solid];
m5_140 -> m5_161  [color=darkseagreen4, key=1, label=previousDateTimeZoneHandling, style=dashed];
m5_140 -> m5_162  [color=darkseagreen4, key=1, label=previousDateTimeZoneHandling, style=dashed];
m5_141 -> m5_142  [key=0, style=solid];
m5_143 -> m5_144  [key=0, style=solid];
m5_143 -> m5_146  [key=0, style=solid];
m5_144 -> m5_145  [key=0, style=solid];
m5_144 -> m5_163  [color=darkseagreen4, key=1, label=previousDateParseHandling, style=dashed];
m5_144 -> m5_164  [color=darkseagreen4, key=1, label=previousDateParseHandling, style=dashed];
m5_145 -> m5_146  [key=0, style=solid];
m5_147 -> m5_148  [key=0, style=solid];
m5_147 -> m5_150  [key=0, style=solid];
m5_148 -> m5_149  [key=0, style=solid];
m5_148 -> m5_165  [color=darkseagreen4, key=1, label=previousFloatParseHandling, style=dashed];
m5_148 -> m5_166  [color=darkseagreen4, key=1, label=previousFloatParseHandling, style=dashed];
m5_149 -> m5_150  [key=0, style=solid];
m5_151 -> m5_152  [key=0, style=solid];
m5_151 -> m5_154  [key=0, style=solid];
m5_152 -> m5_153  [key=0, style=solid];
m5_152 -> m5_168  [color=darkseagreen4, key=1, label=previousMaxDepth, style=dashed];
m5_153 -> m5_154  [key=0, style=solid];
m5_154 -> m5_155  [key=0, style=solid];
m5_154 -> m5_172  [key=2, style=dotted];
m5_154 -> m5_156  [color=darkseagreen4, key=1, label=traceJsonReader, style=dashed];
m5_154 -> m5_157  [color=darkseagreen4, key=1, label=traceJsonReader, style=dashed];
m5_154 -> m5_158  [color=darkseagreen4, key=1, label=traceJsonReader, style=dashed];
m5_156 -> m5_157  [key=0, style=solid];
m5_156 -> m5_173  [key=2, style=dotted];
m5_156 -> m5_169  [color=darkseagreen4, key=1, label=value, style=dashed];
m5_160 -> m5_161  [key=0, style=solid];
m5_162 -> m5_163  [key=0, style=solid];
m5_164 -> m5_165  [key=0, style=solid];
m5_166 -> m5_167  [key=0, style=solid];
m5_168 -> m5_169  [key=0, style=solid];
m5_134 -> m5_135  [key=0, style=solid];
m5_134 -> m5_159  [color=darkseagreen4, key=1, label=previousCulture, style=dashed];
m5_134 -> m5_160  [color=darkseagreen4, key=1, label=previousCulture, style=dashed];
m5_134 -> m5_121  [color=darkorchid, key=3, label="Local variable System.Globalization.CultureInfo previousCulture", style=bold];
m5_159 -> m5_160  [key=0, style=solid];
m5_159 -> m5_161  [key=0, style=solid];
m5_138 -> m5_139  [key=0, style=solid];
m5_138 -> m5_161  [color=darkseagreen4, key=1, label=previousDateTimeZoneHandling, style=dashed];
m5_138 -> m5_162  [color=darkseagreen4, key=1, label=previousDateTimeZoneHandling, style=dashed];
m5_138 -> m5_121  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.DateTimeZoneHandling? previousDateTimeZoneHandling", style=bold];
m5_161 -> m5_162  [key=0, style=solid];
m5_161 -> m5_163  [key=0, style=solid];
m5_142 -> m5_143  [key=0, style=solid];
m5_142 -> m5_163  [color=darkseagreen4, key=1, label=previousDateParseHandling, style=dashed];
m5_142 -> m5_164  [color=darkseagreen4, key=1, label=previousDateParseHandling, style=dashed];
m5_142 -> m5_121  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.DateParseHandling? previousDateParseHandling", style=bold];
m5_163 -> m5_164  [key=0, style=solid];
m5_163 -> m5_165  [key=0, style=solid];
m5_146 -> m5_147  [key=0, style=solid];
m5_146 -> m5_165  [color=darkseagreen4, key=1, label=previousFloatParseHandling, style=dashed];
m5_146 -> m5_166  [color=darkseagreen4, key=1, label=previousFloatParseHandling, style=dashed];
m5_146 -> m5_121  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.FloatParseHandling? previousFloatParseHandling", style=bold];
m5_165 -> m5_166  [key=0, style=solid];
m5_165 -> m5_167  [key=0, style=solid];
m5_150 -> m5_151  [key=0, style=solid];
m5_150 -> m5_168  [color=darkseagreen4, key=1, label=previousMaxDepth, style=dashed];
m5_150 -> m5_121  [color=darkorchid, key=3, label="Local variable int? previousMaxDepth", style=bold];
m5_155 -> m5_156  [key=0, style=solid];
m5_155 -> m5_118  [key=2, style=dotted];
m5_157 -> m5_158  [key=0, style=solid];
m5_157 -> m5_159  [key=0, style=solid];
m5_158 -> m5_159  [key=0, style=solid];
m5_158 -> m5_174  [key=2, style=dotted];
m5_158 -> m5_175  [key=2, style=dotted];
m5_169 -> m5_170  [key=0, style=solid];
m5_167 -> m5_168  [key=0, style=solid];
m5_167 -> m5_169  [key=0, style=solid];
m5_170 -> m5_132  [color=blue, key=0, style=bold];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_113  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_111 -> m5_115  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_111 -> m5_108  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m5_112 -> m5_113  [key=0, style=solid];
m5_112 -> m5_117  [key=2, style=dotted];
m5_113 -> m5_114  [key=0, style=solid];
m5_113 -> m5_117  [key=2, style=dotted];
m5_115 -> m5_116  [key=0, style=solid];
m5_115 -> m5_119  [key=2, style=dotted];
m5_114 -> m5_115  [key=0, style=solid];
m5_114 -> m5_118  [key=2, style=dotted];
m5_116 -> m5_111  [color=blue, key=0, style=bold];
m5_249 -> m5_250  [key=0, style=solid];
m5_249 -> m5_252  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonConverter GetMatchingConverter", style=bold];
m5_250 -> m5_251  [key=0, style=solid];
m5_250 -> m5_252  [key=2, style=dotted];
m5_251 -> m5_249  [color=blue, key=0, style=bold];
m5_263 -> m5_264  [key=0, style=solid];
m5_263 -> m5_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m5_264 -> m5_265  [key=0, style=solid];
m5_264 -> m5_266  [color=darkseagreen4, key=1, label=error, style=dashed];
m5_266 -> m5_267  [key=0, style=solid];
m5_266 -> m5_268  [key=2, style=dotted];
m5_265 -> m5_266  [key=0, style=solid];
m5_265 -> m5_267  [key=0, style=solid];
m5_267 -> m5_263  [color=blue, key=0, style=bold];
m5_124 -> m5_125  [key=0, style=solid];
m5_124 -> m5_123  [color=darkorchid, key=3, label="method methodReturn object Deserialize", style=bold];
m5_125 -> m5_126  [key=0, style=solid];
m5_125 -> m5_107  [key=2, style=dotted];
m5_125 -> m5_123  [key=2, style=dotted];
m5_126 -> m5_124  [color=blue, key=0, style=bold];
m5_104 -> m5_105  [key=0, style=solid];
m5_105 -> m5_106  [key=0, style=solid];
m5_105 -> m5_107  [key=2, style=dotted];
m5_105 -> m5_108  [key=2, style=dotted];
m5_106 -> m5_104  [color=blue, key=0, style=bold];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_21 -> m5_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_21 -> m5_30  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_18  [key=2, style=dotted];
m5_22 -> m5_24  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_22 -> m5_25  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_25  [key=0, style=solid];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_27  [key=2, style=dotted];
m5_25 -> m5_26  [key=0, style=solid];
m5_26 -> m5_21  [color=blue, key=0, style=bold];
m5_180 -> m5_188  [key=0, style=solid];
m5_180 -> m5_176  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_188 -> m5_189  [key=0, style=solid];
m5_188 -> m5_184  [key=2, style=dotted];
m5_189 -> m5_180  [color=blue, key=0, style=bold];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_12 -> m5_13  [key=0, style=solid];
m5_13 -> m5_14  [key=0, style=solid];
m5_14 -> m5_15  [key=0, style=solid];
m5_15 -> m5_16  [key=0, style=solid];
m5_16 -> m5_17  [key=0, style=solid];
m5_17 -> m5_3  [color=blue, key=0, style=bold];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_21  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonSerializer CreateDefault", style=bold];
m5_29 -> m5_30  [key=0, style=solid];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_33  [key=2, style=dotted];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_21  [key=2, style=dotted];
m5_32 -> m5_28  [color=blue, key=0, style=bold];
m5_185 -> m5_186  [key=0, style=solid];
m5_186 -> m5_187  [key=0, style=solid];
m5_186 -> m5_179  [key=2, style=dotted];
m5_186 -> m5_181  [key=2, style=dotted];
m5_187 -> m5_185  [color=blue, key=0, style=bold];
m5_252 -> m5_253  [key=0, style=solid];
m5_252 -> m5_255  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>", style=dashed];
m5_252 -> m5_256  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>", style=dashed];
m5_252 -> m5_257  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_252 -> m5_249  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m5_252 -> m5_121  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonConverter GetMatchingConverter", style=bold];
m5_253 -> m5_254  [key=0, style=solid];
m5_253 -> m5_260  [key=0, style=solid];
m5_255 -> m5_256  [key=0, style=solid];
m5_255 -> m5_260  [key=0, style=solid];
m5_255 -> m5_42  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m5_256 -> m5_257  [key=0, style=solid];
m5_256 -> m5_258  [color=darkseagreen4, key=1, label=converter, style=dashed];
m5_257 -> m5_258  [key=0, style=solid];
m5_257 -> m5_259  [key=0, style=solid];
m5_257 -> m5_262  [key=2, style=dotted];
m5_254 -> m5_255  [key=0, style=solid];
m5_254 -> m5_256  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_254 -> m5_259  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_260 -> m5_261  [key=0, style=solid];
m5_259 -> m5_255  [key=0, style=solid];
m5_259 -> m5_259  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_258 -> m5_261  [key=0, style=solid];
m5_261 -> m5_252  [color=blue, key=0, style=bold];
m5_18 -> m5_19  [key=0, style=solid];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_3  [key=2, style=dotted];
m5_20 -> m5_18  [color=blue, key=0, style=bold];
m5_120 -> m5_121  [key=0, style=solid];
m5_120 -> m5_123  [color=darkorchid, key=3, label="method methodReturn object Deserialize", style=bold];
m5_121 -> m5_122  [key=0, style=solid];
m5_121 -> m5_123  [key=2, style=dotted];
m5_122 -> m5_120  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_34 -> m5_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_28  [key=2, style=dotted];
m5_35 -> m5_37  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_35 -> m5_38  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_38  [key=0, style=solid];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_27  [key=2, style=dotted];
m5_38 -> m5_39  [key=0, style=solid];
m5_39 -> m5_34  [color=blue, key=0, style=bold];
m5_127 -> m5_128  [key=0, style=solid];
m5_127 -> m5_123  [color=darkorchid, key=3, label="method methodReturn T Deserialize", style=bold];
m5_128 -> m5_129  [key=0, style=solid];
m5_128 -> m5_123  [key=2, style=dotted];
m5_129 -> m5_127  [color=blue, key=0, style=bold];
m5_243 -> m5_244  [key=0, style=solid];
m5_244 -> m5_245  [key=0, style=solid];
m5_244 -> m5_246  [key=0, style=solid];
m5_245 -> m5_246  [key=0, style=solid];
m5_245 -> m5_248  [key=2, style=dotted];
m5_246 -> m5_247  [key=0, style=solid];
m5_247 -> m5_243  [color=blue, key=0, style=bold];
m5_176 -> m5_177  [key=0, style=solid];
m5_177 -> m5_178  [key=0, style=solid];
m5_177 -> m5_179  [key=2, style=dotted];
m5_177 -> m5_180  [key=2, style=dotted];
m5_178 -> m5_176  [color=blue, key=0, style=bold];
m5_27 -> m5_40  [key=0, style=solid];
m5_27 -> m5_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_72  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_78  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_27 -> m5_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_27 -> m5_22  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializer serializer", style=bold];
m5_27 -> m5_35  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializer serializer", style=bold];
m5_27 -> m5_21  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m5_27 -> m5_34  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_45  [key=0, style=solid];
m5_40 -> m5_102  [key=2, style=dotted];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_45  [key=0, style=solid];
m5_42 -> m5_42  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_103  [key=2, style=dotted];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_47  [key=0, style=solid];
m5_46 -> m5_47  [key=0, style=solid];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_49  [key=0, style=solid];
m5_48 -> m5_49  [key=0, style=solid];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_51  [key=0, style=solid];
m5_50 -> m5_51  [key=0, style=solid];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_53  [key=0, style=solid];
m5_52 -> m5_53  [key=0, style=solid];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_55  [key=0, style=solid];
m5_54 -> m5_55  [key=0, style=solid];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_57  [key=0, style=solid];
m5_56 -> m5_57  [key=0, style=solid];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_59  [key=0, style=solid];
m5_58 -> m5_59  [key=0, style=solid];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_61  [key=0, style=solid];
m5_60 -> m5_61  [key=0, style=solid];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_63  [key=0, style=solid];
m5_62 -> m5_63  [key=0, style=solid];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_65  [key=0, style=solid];
m5_64 -> m5_65  [key=0, style=solid];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_67  [key=0, style=solid];
m5_66 -> m5_67  [key=0, style=solid];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_69  [key=0, style=solid];
m5_68 -> m5_69  [key=0, style=solid];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_71  [key=0, style=solid];
m5_70 -> m5_71  [key=0, style=solid];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_73  [key=0, style=solid];
m5_72 -> m5_73  [key=0, style=solid];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_75  [key=0, style=solid];
m5_74 -> m5_75  [key=0, style=solid];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_77  [key=0, style=solid];
m5_76 -> m5_77  [key=0, style=solid];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_79  [key=0, style=solid];
m5_78 -> m5_79  [key=0, style=solid];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> m5_81  [key=0, style=solid];
m5_80 -> m5_81  [key=0, style=solid];
m5_81 -> m5_82  [key=0, style=solid];
m5_81 -> m5_83  [key=0, style=solid];
m5_82 -> m5_83  [key=0, style=solid];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_85  [key=0, style=solid];
m5_84 -> m5_85  [key=0, style=solid];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_87  [key=0, style=solid];
m5_86 -> m5_87  [key=0, style=solid];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_90  [key=0, style=solid];
m5_88 -> m5_89  [key=0, style=solid];
m5_89 -> m5_90  [key=0, style=solid];
m5_90 -> m5_91  [key=0, style=solid];
m5_90 -> m5_92  [key=0, style=solid];
m5_91 -> m5_92  [key=0, style=solid];
m5_92 -> m5_93  [key=0, style=solid];
m5_92 -> m5_94  [key=0, style=solid];
m5_93 -> m5_94  [key=0, style=solid];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_96  [key=0, style=solid];
m5_95 -> m5_96  [key=0, style=solid];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_98  [key=0, style=solid];
m5_97 -> m5_98  [key=0, style=solid];
m5_98 -> m5_99  [key=0, style=solid];
m5_98 -> m5_101  [key=0, style=solid];
m5_99 -> m5_100  [key=0, style=solid];
m5_100 -> m5_101  [key=0, style=solid];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_41 -> m5_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_44 -> m5_42  [key=0, style=solid];
m5_44 -> m5_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_101 -> m5_27  [color=blue, key=0, style=bold];
m5_123 -> m5_130  [key=0, style=solid];
m5_123 -> m5_120  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m5_123 -> m5_127  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m5_123 -> m5_121  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m5_123 -> m5_124  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m5_123 -> m5_132  [color=darkorchid, key=3, label="method methodReturn object Deserialize", style=bold];
m5_130 -> m5_131  [key=0, style=solid];
m5_130 -> m5_132  [key=2, style=dotted];
m5_131 -> m5_123  [color=blue, key=0, style=bold];
m5_181 -> m5_182  [key=0, style=solid];
m5_181 -> m5_185  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m5_182 -> m5_183  [key=0, style=solid];
m5_182 -> m5_184  [key=2, style=dotted];
m5_183 -> m5_181  [color=blue, key=0, style=bold];
m5_269 -> m5_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_143  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_145  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_147  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_149  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_153  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m5_269 -> m5_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_5  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_6  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_7  [key=2, style=dotted];
m7_4 -> m7_0  [color=blue, key=0, style=bold];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_54  [key=2, style=dotted];
m8_40 -> m8_27  [key=2, style=dotted];
m8_104 -> m8_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_104 -> m8_159  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_104 -> m8_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_104 -> m8_105  [key=0, style=solid];
m8_104 -> m8_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_104 -> m8_109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_104 -> m8_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_104 -> m8_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_104 -> m8_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_104 -> m8_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_111 -> m8_112  [key=0, style=solid];
m8_111 -> m8_117  [key=0, style=solid];
m8_111 -> m8_122  [key=2, style=dotted];
m8_118 -> m8_33  [key=2, style=dotted];
m8_118 -> m8_119  [key=0, style=solid];
m8_105 -> m8_28  [key=2, style=dotted];
m8_105 -> m8_106  [key=0, style=solid];
m8_105 -> m8_29  [key=2, style=dotted];
m8_109 -> m8_111  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m8_109 -> m8_110  [key=0, style=solid];
m8_109 -> m8_112  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m8_110 -> m8_111  [key=0, style=solid];
m8_110 -> m8_118  [key=0, style=solid];
m8_110 -> m8_121  [key=2, style=dotted];
m8_112 -> m8_113  [key=0, style=solid];
m8_112 -> m8_123  [key=2, style=dotted];
m8_117 -> m8_118  [key=0, style=solid];
m8_117 -> m8_78  [key=2, style=dotted];
m8_117 -> m8_107  [key=0, style=solid];
m8_113 -> m8_124  [key=2, style=dotted];
m8_113 -> m8_117  [key=0, style=solid];
m8_106 -> m8_112  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_106 -> m8_113  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_106 -> m8_107  [key=0, style=solid];
m8_106 -> m8_102  [key=2, style=dotted];
m8_106 -> m8_115  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_106 -> m8_116  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_108 -> m8_109  [key=0, style=solid];
m8_108 -> m8_114  [key=0, style=solid];
m8_114 -> m8_117  [key=0, style=solid];
m8_114 -> m8_115  [key=0, style=solid];
m8_107 -> m8_108  [key=0, style=solid];
m8_107 -> m8_120  [key=2, style=dotted];
m8_116 -> m8_119  [key=0, style=solid];
m8_115 -> m8_116  [key=0, style=solid];
m8_115 -> m8_125  [key=2, style=dotted];
m8_119 -> m8_104  [color=blue, key=0, style=bold];
m8_48 -> m8_51  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_48 -> m8_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_48 -> m8_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_48 -> m8_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_48 -> m8_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_48 -> m8_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_48 -> m8_61  [color=darkseagreen4, key=1, label=bool, style=dashed];
m8_48 -> m8_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_48 -> m8_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_48 -> m8_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_48 -> m8_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_48 -> m8_11  [color=darkorchid, key=3, label="method methodReturn object Deserialize", style=bold];
m8_48 -> m8_57  [color=darkorchid, key=3, label="method methodReturn object Deserialize", style=bold];
m8_48 -> m8_54  [key=2, style=dotted];
m8_48 -> m8_27  [key=2, style=dotted];
m8_56 -> m8_72  [color=green, key=0, style=solid];
m8_54 -> m8_56  [color=green, key=0, style=solid];
m8_54 -> m8_55  [key=0, style=solid];
m8_51 -> m8_54  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_43  [key=2, style=dotted];
m8_51 -> m8_53  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_51 -> m8_55  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_51 -> m8_60  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_51 -> m8_67  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_51 -> m8_27  [key=2, style=dotted];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_57  [key=0, style=solid];
m8_53 -> m8_75  [key=2, style=dotted];
m8_53 -> m8_28  [color=blue, key=0, style=bold];
m8_55 -> m8_72  [key=0, style=solid];
m8_55 -> m8_36  [key=2, style=dotted];
m8_55 -> m8_33  [key=2, style=dotted];
m8_50 -> m8_72  [key=0, style=solid];
m8_50 -> m8_73  [key=2, style=dotted];
m8_50 -> m8_28  [key=2, style=dotted];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_54  [key=2, style=dotted];
m8_50 -> m8_27  [key=2, style=dotted];
m8_64 -> m8_72  [key=0, style=solid];
m8_64 -> m8_33  [key=2, style=dotted];
m8_65 -> m8_72  [key=0, style=solid];
m8_69 -> m8_72  [key=0, style=solid];
m8_71 -> m8_72  [key=0, style=solid];
m8_49 -> m8_51  [key=0, style=solid];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_54  [key=2, style=dotted];
m8_49 -> m8_27  [key=2, style=dotted];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_74  [key=2, style=dotted];
m8_52 -> m8_58  [color=darkseagreen4, key=1, label=converter, style=dashed];
m8_52 -> m8_59  [color=darkseagreen4, key=1, label=converter, style=dashed];
m8_52 -> m8_54  [key=2, style=dotted];
m8_52 -> m8_27  [key=2, style=dotted];
m8_60 -> m8_65  [color=darkseagreen4, key=1, label=deserializedValue, style=dashed];
m8_60 -> m8_77  [key=2, style=dotted];
m8_60 -> m8_61  [key=0, style=solid];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_70  [key=0, style=solid];
m8_67 -> m8_79  [key=2, style=dotted];
m8_57 -> m8_77  [color=darkorchid, key=3, label="Local variable object deserializedValue", style=bold];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_76  [color=darkorchid, key=3, label="Local variable object deserializedValue", style=bold];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_62  [key=0, style=solid];
m8_59 -> m8_65  [color=darkseagreen4, key=1, label=deserializedValue, style=dashed];
m8_59 -> m8_61  [key=0, style=solid];
m8_59 -> m8_76  [key=2, style=dotted];
m8_61 -> m8_65  [key=0, style=solid];
m8_61 -> m8_62  [key=0, style=solid];
m8_62 -> m8_65  [key=0, style=solid];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_78  [key=2, style=dotted];
m8_68 -> m8_69  [key=0, style=solid];
m8_68 -> m8_80  [key=2, style=dotted];
m8_70 -> m8_71  [key=0, style=solid];
m8_70 -> m8_81  [key=2, style=dotted];
m8_58 -> m8_60  [key=0, style=solid];
m8_58 -> m8_59  [key=0, style=solid];
m8_66 -> m8_67  [key=0, style=solid];
m8_72 -> m8_48  [color=blue, key=0, style=bold];
m8_76 -> m8_48  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m8_76 -> m8_52  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter converter", style=bold];
m8_76 -> m8_890  [key=0, style=solid];
m8_76 -> m8_891  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m8_76 -> m8_892  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m8_76 -> m8_894  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m8_76 -> m8_642  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter converter", style=bold];
m8_76 -> m8_687  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter converter", style=bold];
m8_76 -> m8_759  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter converter", style=bold];
m8_76 -> m8_909  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter converter", style=bold];
m8_76 -> m8_41  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_76 -> m8_450  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_76 -> m8_35  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_76 -> m8_870  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_76 -> m8_11  [color=darkorchid, key=3, label="Parameter variable object existingValue", style=bold];
m8_890 -> m8_891  [key=0, style=solid];
m8_890 -> m8_892  [key=0, style=solid];
m8_891 -> m8_892  [key=0, style=solid];
m8_891 -> m8_30  [key=2, style=dotted];
m8_891 -> m8_282  [key=2, style=dotted];
m8_891 -> m8_338  [key=2, style=dotted];
m8_891 -> m8_339  [key=2, style=dotted];
m8_892 -> m8_893  [key=0, style=solid];
m8_892 -> m8_82  [key=2, style=dotted];
m8_892 -> m8_897  [key=2, style=dotted];
m8_892 -> m8_895  [color=darkseagreen4, key=1, label=value, style=dashed];
m8_893 -> m8_894  [key=0, style=solid];
m8_893 -> m8_895  [key=0, style=solid];
m8_894 -> m8_895  [key=0, style=solid];
m8_894 -> m8_30  [key=2, style=dotted];
m8_894 -> m8_282  [key=2, style=dotted];
m8_894 -> m8_338  [key=2, style=dotted];
m8_894 -> m8_339  [key=2, style=dotted];
m8_895 -> m8_896  [key=0, style=solid];
m8_896 -> m8_76  [color=blue, key=0, style=bold];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_54  [key=2, style=dotted];
m8_39 -> m8_27  [key=2, style=dotted];
m8_1006 -> m8_955  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence> requiredProperties", style=bold];
m8_1006 -> m8_42  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_1006 -> m8_1066  [key=0, style=solid];
m8_1006 -> m8_1068  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_1006 -> m8_1070  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_1006 -> m8_1075  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_1006 -> m8_964  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m8_1070 -> m8_162  [key=2, style=dotted];
m8_1070 -> m8_1075  [key=0, style=solid];
m8_1066 -> m8_1076  [key=0, style=solid];
m8_1066 -> m8_1067  [key=0, style=solid];
m8_1068 -> m8_1069  [key=0, style=solid];
m8_1068 -> m8_1071  [key=0, style=solid];
m8_1068 -> m8_1074  [key=0, style=solid];
m8_1075 -> m8_1076  [key=0, style=solid];
m8_1067 -> m8_1021  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence propertyPresence", style=bold];
m8_1067 -> m8_1068  [key=0, style=solid];
m8_1069 -> m8_1070  [key=0, style=solid];
m8_1071 -> m8_1072  [key=0, style=solid];
m8_1074 -> m8_1075  [key=0, style=solid];
m8_1073 -> m8_1075  [key=0, style=solid];
m8_1072 -> m8_1073  [key=0, style=solid];
m8_1076 -> m8_1006  [color=blue, key=0, style=bold];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_54  [key=2, style=dotted];
m8_38 -> m8_27  [key=2, style=dotted];
m8_934 -> m8_1042  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_934 -> m8_870  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_934 -> m8_1039  [key=0, style=solid];
m8_934 -> m8_1040  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_934 -> m8_1041  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_934 -> m8_1004  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_1042 -> m8_77  [key=2, style=dotted];
m8_1042 -> m8_1043  [key=0, style=solid];
m8_1039 -> m8_77  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m8_1039 -> m8_1040  [key=0, style=solid];
m8_1040 -> m8_1042  [key=0, style=solid];
m8_1040 -> m8_1041  [key=0, style=solid];
m8_1043 -> m8_1044  [key=0, style=solid];
m8_1041 -> m8_1043  [key=0, style=solid];
m8_1041 -> m8_272  [key=2, style=dotted];
m8_1044 -> m8_934  [color=blue, key=0, style=bold];
m8_544 -> m8_545  [key=0, style=solid];
m8_544 -> m8_546  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_544 -> m8_547  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_544 -> m8_41  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_544 -> m8_450  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_544 -> m8_35  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_544 -> m8_42  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_544 -> m8_549  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_544 -> m8_785  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_544 -> m8_631  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_544 -> m8_747  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_544 -> m8_822  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_545 -> m8_546  [key=0, style=solid];
m8_545 -> m8_547  [key=0, style=solid];
m8_546 -> m8_547  [key=0, style=solid];
m8_546 -> m8_30  [key=2, style=dotted];
m8_546 -> m8_282  [key=2, style=dotted];
m8_546 -> m8_338  [key=2, style=dotted];
m8_546 -> m8_339  [key=2, style=dotted];
m8_547 -> m8_548  [key=0, style=solid];
m8_547 -> m8_550  [key=0, style=solid];
m8_547 -> m8_336  [key=2, style=dotted];
m8_547 -> m8_551  [key=2, style=dotted];
m8_549 -> m8_36  [key=2, style=dotted];
m8_549 -> m8_550  [key=0, style=solid];
m8_549 -> m8_403  [key=2, style=dotted];
m8_548 -> m8_549  [key=0, style=solid];
m8_550 -> m8_544  [color=blue, key=0, style=bold];
m8_26 -> m8_36  [key=2, style=dotted];
m8_26 -> m8_33  [key=2, style=dotted];
m8_26 -> m8_27  [key=0, style=solid];
m8_540 -> m8_529  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.DefaultValueHandling flag", style=bold];
m8_540 -> m8_552  [key=0, style=solid];
m8_552 -> m8_553  [key=0, style=solid];
m8_553 -> m8_540  [color=blue, key=0, style=bold];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_54  [key=2, style=dotted];
m8_29 -> m8_27  [key=2, style=dotted];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_54  [key=2, style=dotted];
m8_37 -> m8_27  [key=2, style=dotted];
m8_74 -> m8_51  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_74 -> m8_182  [key=0, style=solid];
m8_74 -> m8_183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m8_74 -> m8_184  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m8_74 -> m8_185  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_74 -> m8_186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_74 -> m8_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m8_74 -> m8_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m8_74 -> m8_189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_74 -> m8_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_74 -> m8_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_74 -> m8_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_74 -> m8_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_74 -> m8_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_74 -> m8_508  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m8_74 -> m8_686  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_74 -> m8_11  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m8_74 -> m8_41  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m8_74 -> m8_450  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m8_74 -> m8_35  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m8_74 -> m8_870  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m8_74 -> m8_42  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m8_193 -> m8_194  [key=0, style=solid];
m8_193 -> m8_195  [key=0, style=solid];
m8_193 -> m8_199  [key=2, style=dotted];
m8_182 -> m8_74  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.JsonConverter converter", style=bold];
m8_182 -> m8_11  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.JsonConverter converter", style=bold];
m8_182 -> m8_183  [key=0, style=solid];
m8_182 -> m8_197  [color=darkseagreen4, key=1, label=converter, style=dashed];
m8_182 -> m8_190  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.JsonConverter converter", style=bold];
m8_183 -> m8_184  [key=0, style=solid];
m8_183 -> m8_185  [key=0, style=solid];
m8_184 -> m8_197  [key=0, style=solid];
m8_185 -> m8_186  [key=0, style=solid];
m8_185 -> m8_187  [key=0, style=solid];
m8_186 -> m8_197  [key=0, style=solid];
m8_187 -> m8_188  [key=0, style=solid];
m8_187 -> m8_189  [key=0, style=solid];
m8_188 -> m8_197  [key=0, style=solid];
m8_189 -> m8_190  [key=0, style=solid];
m8_189 -> m8_197  [key=0, style=solid];
m8_191 -> m8_193  [key=0, style=solid];
m8_191 -> m8_192  [key=0, style=solid];
m8_192 -> m8_197  [key=0, style=solid];
m8_195 -> m8_196  [key=0, style=solid];
m8_195 -> m8_197  [key=0, style=solid];
m8_196 -> m8_197  [key=0, style=solid];
m8_194 -> m8_197  [key=0, style=solid];
m8_197 -> m8_198  [key=0, style=solid];
m8_190 -> m8_191  [key=0, style=solid];
m8_190 -> m8_190  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_198 -> m8_74  [color=blue, key=0, style=bold];
m8_88 -> m8_77  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_88 -> m8_11  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JToken CreateJToken", style=bold];
m8_88 -> m8_89  [key=0, style=solid];
m8_88 -> m8_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_88 -> m8_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_88 -> m8_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_88 -> m8_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_88 -> m8_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_88 -> m8_95  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JToken CreateJToken", style=bold];
m8_88 -> m8_160  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_89 -> m8_28  [key=2, style=dotted];
m8_89 -> m8_90  [key=0, style=solid];
m8_89 -> m8_29  [key=2, style=dotted];
m8_90 -> m8_91  [key=0, style=solid];
m8_90 -> m8_95  [key=0, style=solid];
m8_91 -> m8_92  [key=0, style=solid];
m8_91 -> m8_93  [key=0, style=solid];
m8_92 -> m8_100  [key=0, style=solid];
m8_92 -> m8_101  [key=2, style=dotted];
m8_93 -> m8_94  [key=0, style=solid];
m8_93 -> m8_95  [key=0, style=solid];
m8_97 -> m8_98  [key=0, style=solid];
m8_97 -> m8_103  [key=2, style=dotted];
m8_95 -> m8_96  [key=0, style=solid];
m8_94 -> m8_100  [key=0, style=solid];
m8_99 -> m8_100  [key=0, style=solid];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> m8_102  [key=2, style=dotted];
m8_96 -> m8_98  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_98 -> m8_99  [key=0, style=solid];
m8_100 -> m8_88  [color=blue, key=0, style=bold];
m8_80 -> m8_48  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_80 -> m8_68  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m8_80 -> m8_1077  [key=0, style=solid];
m8_80 -> m8_1078  [color=darkseagreen4, key=1, label=bool, style=dashed];
m8_80 -> m8_1079  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_80 -> m8_1080  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_80 -> m8_1081  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_80 -> m8_41  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_80 -> m8_450  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_80 -> m8_681  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_80 -> m8_35  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_80 -> m8_42  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_80 -> m8_880  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m8_80 -> m8_668  [color=darkorchid, key=3, label="Parameter variable bool readPastError", style=bold];
m8_80 -> m8_637  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m8_80 -> m8_693  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m8_80 -> m8_756  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m8_1077 -> m8_1078  [key=0, style=solid];
m8_1077 -> m8_81  [key=2, style=dotted];
m8_1078 -> m8_1082  [key=0, style=solid];
m8_1078 -> m8_1079  [key=0, style=solid];
m8_1079 -> m8_1080  [key=0, style=solid];
m8_1079 -> m8_340  [key=2, style=dotted];
m8_1080 -> m8_1082  [key=0, style=solid];
m8_1080 -> m8_1081  [key=0, style=solid];
m8_1081 -> m8_78  [key=2, style=dotted];
m8_1081 -> m8_1082  [key=0, style=solid];
m8_1081 -> m8_1080  [key=0, style=solid];
m8_1082 -> m8_80  [color=blue, key=0, style=bold];
m8_35 -> m8_11  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_35 -> m8_417  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonArrayContract contract", style=bold];
m8_35 -> m8_419  [color=darkorchid, key=3, label="Parameter variable System.Collections.IList list", style=bold];
m8_35 -> m8_751  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_35 -> m8_755  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_35 -> m8_758  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_35 -> m8_759  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_35 -> m8_768  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_35 -> m8_769  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_35 -> m8_773  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_35 -> m8_774  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_35 -> m8_781  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_35 -> m8_782  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_35 -> m8_747  [key=0, style=solid];
m8_35 -> m8_749  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_35 -> m8_750  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_35 -> m8_752  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_35 -> m8_753  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_35 -> m8_756  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_35 -> m8_757  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_35 -> m8_762  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_35 -> m8_763  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_35 -> m8_770  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_35 -> m8_772  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_35 -> m8_776  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_35 -> m8_2  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_35 -> m8_160  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_35 -> m8_10  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonArrayContract contract", style=bold];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_54  [key=2, style=dotted];
m8_35 -> m8_27  [key=2, style=dotted];
m8_751 -> m8_752  [key=0, style=solid];
m8_751 -> m8_544  [key=2, style=dotted];
m8_755 -> m8_756  [key=0, style=solid];
m8_755 -> m8_619  [key=2, style=dotted];
m8_758 -> m8_43  [key=2, style=dotted];
m8_758 -> m8_758  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_758 -> m8_759  [key=0, style=solid];
m8_759 -> m8_74  [key=2, style=dotted];
m8_759 -> m8_760  [key=0, style=solid];
m8_759 -> m8_762  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m8_759 -> m8_767  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m8_759 -> m8_768  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m8_768 -> m8_76  [key=2, style=dotted];
m8_768 -> m8_770  [key=0, style=solid];
m8_769 -> m8_77  [key=2, style=dotted];
m8_769 -> m8_770  [key=0, style=solid];
m8_773 -> m8_774  [key=0, style=solid];
m8_773 -> m8_778  [key=0, style=solid];
m8_773 -> m8_79  [key=2, style=dotted];
m8_774 -> m8_80  [key=2, style=dotted];
m8_774 -> m8_775  [key=0, style=solid];
m8_781 -> m8_782  [key=0, style=solid];
m8_781 -> m8_681  [key=2, style=dotted];
m8_782 -> m8_783  [key=0, style=solid];
m8_782 -> m8_625  [key=2, style=dotted];
m8_766 -> m8_77  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m8_766 -> m8_76  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m8_766 -> m8_767  [key=0, style=solid];
m8_762 -> m8_75  [key=2, style=dotted];
m8_762 -> m8_763  [key=0, style=solid];
m8_762 -> m8_780  [key=0, style=solid];
m8_761 -> m8_68  [color=darkorchid, key=3, label="Local variable bool finished", style=bold];
m8_761 -> m8_762  [key=0, style=solid];
m8_761 -> m8_779  [color=darkseagreen4, key=1, label=finished, style=dashed];
m8_761 -> m8_780  [color=darkseagreen4, key=1, label=finished, style=dashed];
m8_756 -> m8_774  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m8_756 -> m8_757  [key=0, style=solid];
m8_756 -> m8_772  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m8_760 -> m8_11  [color=darkorchid, key=3, label="Local variable int? previousErrorIndex", style=bold];
m8_760 -> m8_761  [key=0, style=solid];
m8_760 -> m8_775  [color=darkseagreen4, key=1, label=previousErrorIndex, style=dashed];
m8_747 -> m8_751  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m8_747 -> m8_755  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m8_747 -> m8_773  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m8_747 -> m8_781  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m8_747 -> m8_782  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m8_747 -> m8_748  [key=0, style=solid];
m8_747 -> m8_754  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m8_747 -> m8_783  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m8_750 -> m8_751  [key=0, style=solid];
m8_750 -> m8_752  [key=0, style=solid];
m8_752 -> m8_755  [key=0, style=solid];
m8_752 -> m8_753  [key=0, style=solid];
m8_757 -> m8_758  [key=0, style=solid];
m8_757 -> m8_759  [key=0, style=solid];
m8_767 -> m8_768  [key=0, style=solid];
m8_767 -> m8_769  [key=0, style=solid];
m8_770 -> m8_771  [key=0, style=solid];
m8_770 -> m8_779  [key=0, style=solid];
m8_770 -> m8_738  [key=2, style=dotted];
m8_772 -> m8_773  [key=0, style=solid];
m8_772 -> m8_739  [key=2, style=dotted];
m8_772 -> m8_775  [color=darkseagreen4, key=1, label=errorPosition, style=dashed];
m8_772 -> m8_777  [color=darkseagreen4, key=1, label=errorPosition, style=dashed];
m8_778 -> m8_784  [key=0, style=solid];
m8_775 -> m8_776  [key=0, style=solid];
m8_775 -> m8_777  [key=0, style=solid];
m8_780 -> m8_781  [key=0, style=solid];
m8_780 -> m8_782  [key=0, style=solid];
m8_783 -> m8_784  [key=0, style=solid];
m8_749 -> m8_750  [key=0, style=solid];
m8_753 -> m8_754  [key=0, style=solid];
m8_753 -> m8_340  [key=2, style=dotted];
m8_763 -> m8_766  [key=0, style=solid];
m8_763 -> m8_764  [key=0, style=solid];
m8_776 -> m8_784  [key=0, style=solid];
m8_776 -> m8_403  [key=2, style=dotted];
m8_779 -> m8_761  [key=0, style=solid];
m8_779 -> m8_780  [key=0, style=solid];
m8_748 -> m8_749  [key=0, style=solid];
m8_754 -> m8_784  [key=0, style=solid];
m8_771 -> m8_772  [key=0, style=solid];
m8_777 -> m8_779  [key=0, style=solid];
m8_765 -> m8_780  [color=darkseagreen4, key=1, label=finished, style=dashed];
m8_765 -> m8_779  [key=0, style=solid];
m8_765 -> m8_771  [key=0, style=solid];
m8_764 -> m8_765  [key=0, style=solid];
m8_784 -> m8_35  [color=blue, key=0, style=bold];
m8_404 -> m8_410  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_404 -> m8_160  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_404 -> m8_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_404 -> m8_411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_404 -> m8_405  [key=0, style=solid];
m8_404 -> m8_407  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_410 -> m8_410  [color=darkseagreen4, key=1, label=message, style=dashed];
m8_410 -> m8_411  [key=0, style=solid];
m8_410 -> m8_168  [key=2, style=dotted];
m8_410 -> m8_282  [key=2, style=dotted];
m8_406 -> m8_36  [key=2, style=dotted];
m8_406 -> m8_33  [key=2, style=dotted];
m8_406 -> m8_412  [key=0, style=solid];
m8_411 -> m8_33  [key=2, style=dotted];
m8_411 -> m8_412  [key=0, style=solid];
m8_409 -> m8_410  [key=0, style=solid];
m8_405 -> m8_406  [key=0, style=solid];
m8_405 -> m8_407  [key=0, style=solid];
m8_407 -> m8_409  [key=0, style=solid];
m8_407 -> m8_408  [key=0, style=solid];
m8_408 -> m8_409  [key=0, style=solid];
m8_413 -> m8_412  [key=0, style=solid];
m8_412 -> m8_404  [color=blue, key=0, style=bold];
m8_43 -> m8_48  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_46  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_43 -> m8_11  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract GetContractSafe", style=bold];
m8_43 -> m8_388  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m8_43 -> m8_54  [key=2, style=dotted];
m8_43 -> m8_27  [key=2, style=dotted];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_31  [key=2, style=dotted];
m8_46 -> m8_54  [key=2, style=dotted];
m8_46 -> m8_27  [key=2, style=dotted];
m8_44 -> m8_46  [key=0, style=solid];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_54  [key=2, style=dotted];
m8_44 -> m8_27  [key=2, style=dotted];
m8_45 -> m8_47  [key=0, style=solid];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_54  [key=2, style=dotted];
m8_45 -> m8_27  [key=2, style=dotted];
m8_47 -> m8_43  [color=blue, key=0, style=bold];
m8_47 -> m8_48  [key=0, style=solid];
m8_47 -> m8_54  [key=2, style=dotted];
m8_47 -> m8_27  [key=2, style=dotted];
m8_283 -> m8_68  [color=darkorchid, key=3, label="method methodReturn bool ReadMetadataPropertiesToken", style=bold];
m8_283 -> m8_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_283 -> m8_312  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_283 -> m8_329  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_283 -> m8_668  [color=darkorchid, key=3, label="method methodReturn bool ReadMetadataPropertiesToken", style=bold];
m8_283 -> m8_160  [color=darkorchid, key=3, label="Parameter variable object newValue", style=bold];
m8_283 -> m8_284  [key=0, style=solid];
m8_283 -> m8_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_283 -> m8_287  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_283 -> m8_305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_283 -> m8_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_283 -> m8_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_283 -> m8_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_283 -> m8_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_283 -> m8_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_283 -> m8_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_283 -> m8_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_283 -> m8_334  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_302 -> m8_303  [key=0, style=solid];
m8_302 -> m8_336  [key=2, style=dotted];
m8_302 -> m8_337  [key=2, style=dotted];
m8_302 -> m8_304  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_302 -> m8_334  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_303 -> m8_304  [key=0, style=solid];
m8_303 -> m8_305  [key=0, style=solid];
m8_304 -> m8_305  [key=0, style=solid];
m8_304 -> m8_30  [key=2, style=dotted];
m8_304 -> m8_282  [key=2, style=dotted];
m8_304 -> m8_338  [key=2, style=dotted];
m8_304 -> m8_339  [key=2, style=dotted];
m8_312 -> m8_312  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_312 -> m8_313  [key=0, style=solid];
m8_312 -> m8_341  [key=2, style=dotted];
m8_312 -> m8_329  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_312 -> m8_334  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_329 -> m8_330  [key=0, style=solid];
m8_329 -> m8_160  [key=2, style=dotted];
m8_329 -> m8_334  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_291 -> m8_36  [key=2, style=dotted];
m8_291 -> m8_334  [key=0, style=solid];
m8_291 -> m8_335  [key=2, style=dotted];
m8_301 -> m8_36  [key=2, style=dotted];
m8_301 -> m8_334  [key=0, style=solid];
m8_301 -> m8_335  [key=2, style=dotted];
m8_293 -> m8_11  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Linq.JToken additionalContent", style=bold];
m8_293 -> m8_301  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m8_293 -> m8_294  [key=0, style=solid];
m8_293 -> m8_300  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m8_298 -> m8_302  [color=darkseagreen4, key=1, label=reference, style=dashed];
m8_298 -> m8_304  [color=darkseagreen4, key=1, label=reference, style=dashed];
m8_298 -> m8_299  [key=0, style=solid];
m8_300 -> m8_302  [key=0, style=solid];
m8_300 -> m8_301  [key=0, style=solid];
m8_305 -> m8_306  [key=0, style=solid];
m8_305 -> m8_340  [key=2, style=dotted];
m8_309 -> m8_312  [color=darkseagreen4, key=1, label=qualifiedTypeName, style=dashed];
m8_309 -> m8_310  [key=0, style=solid];
m8_310 -> m8_312  [color=darkseagreen4, key=1, label=typeTokenReader, style=dashed];
m8_310 -> m8_311  [key=0, style=solid];
m8_310 -> m8_273  [key=2, style=dotted];
m8_311 -> m8_312  [key=0, style=solid];
m8_311 -> m8_37  [key=2, style=dotted];
m8_313 -> m8_314  [key=0, style=solid];
m8_284 -> m8_329  [color=darkseagreen4, key=1, label="out string", style=dashed];
m8_284 -> m8_334  [color=darkseagreen4, key=1, label="out string", style=dashed];
m8_284 -> m8_285  [key=0, style=solid];
m8_324 -> m8_329  [color=darkseagreen4, key=1, label="out string", style=dashed];
m8_324 -> m8_334  [color=darkseagreen4, key=1, label="out string", style=dashed];
m8_324 -> m8_325  [key=0, style=solid];
m8_327 -> m8_329  [color=darkseagreen4, key=1, label=listReader, style=dashed];
m8_327 -> m8_328  [key=0, style=solid];
m8_327 -> m8_273  [key=2, style=dotted];
m8_328 -> m8_329  [key=0, style=solid];
m8_328 -> m8_37  [key=2, style=dotted];
m8_330 -> m8_331  [key=0, style=solid];
m8_330 -> m8_340  [key=2, style=dotted];
m8_288 -> m8_291  [color=darkseagreen4, key=1, label=refToken, style=dashed];
m8_288 -> m8_298  [color=darkseagreen4, key=1, label=refToken, style=dashed];
m8_288 -> m8_289  [key=0, style=solid];
m8_288 -> m8_290  [color=darkseagreen4, key=1, label=refToken, style=dashed];
m8_288 -> m8_292  [color=darkseagreen4, key=1, label=refToken, style=dashed];
m8_290 -> m8_291  [key=0, style=solid];
m8_290 -> m8_292  [key=0, style=solid];
m8_295 -> m8_301  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m8_295 -> m8_298  [key=0, style=solid];
m8_295 -> m8_300  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m8_297 -> m8_301  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m8_297 -> m8_298  [key=0, style=solid];
m8_297 -> m8_300  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m8_286 -> m8_287  [key=0, style=solid];
m8_286 -> m8_332  [key=0, style=solid];
m8_287 -> m8_313  [color=darkseagreen4, key=1, label=current, style=dashed];
m8_287 -> m8_288  [key=0, style=solid];
m8_287 -> m8_307  [color=darkseagreen4, key=1, label=current, style=dashed];
m8_287 -> m8_322  [color=darkseagreen4, key=1, label=current, style=dashed];
m8_287 -> m8_325  [color=darkseagreen4, key=1, label=current, style=dashed];
m8_316 -> m8_317  [key=0, style=solid];
m8_316 -> m8_37  [key=2, style=dotted];
m8_317 -> m8_318  [key=0, style=solid];
m8_317 -> m8_320  [key=0, style=solid];
m8_318 -> m8_319  [key=0, style=solid];
m8_318 -> m8_320  [key=0, style=solid];
m8_320 -> m8_321  [key=0, style=solid];
m8_320 -> m8_37  [key=2, style=dotted];
m8_321 -> m8_315  [key=0, style=solid];
m8_321 -> m8_340  [key=2, style=dotted];
m8_332 -> m8_333  [key=0, style=solid];
m8_332 -> m8_37  [key=2, style=dotted];
m8_292 -> m8_293  [key=0, style=solid];
m8_292 -> m8_295  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_292 -> m8_297  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_292 -> m8_294  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_292 -> m8_296  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_294 -> m8_295  [key=0, style=solid];
m8_294 -> m8_296  [key=0, style=solid];
m8_296 -> m8_298  [key=0, style=solid];
m8_296 -> m8_297  [key=0, style=solid];
m8_299 -> m8_300  [key=0, style=solid];
m8_299 -> m8_307  [key=0, style=solid];
m8_285 -> m8_334  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_285 -> m8_286  [key=0, style=solid];
m8_306 -> m8_334  [key=0, style=solid];
m8_319 -> m8_334  [key=0, style=solid];
m8_331 -> m8_334  [key=0, style=solid];
m8_333 -> m8_334  [key=0, style=solid];
m8_307 -> m8_309  [color=darkseagreen4, key=1, label=typeToken, style=dashed];
m8_307 -> m8_310  [color=darkseagreen4, key=1, label=typeToken, style=dashed];
m8_307 -> m8_308  [key=0, style=solid];
m8_308 -> m8_309  [key=0, style=solid];
m8_308 -> m8_322  [key=0, style=solid];
m8_314 -> m8_315  [key=0, style=solid];
m8_314 -> m8_322  [key=0, style=solid];
m8_322 -> m8_324  [color=darkseagreen4, key=1, label=idToken, style=dashed];
m8_322 -> m8_323  [key=0, style=solid];
m8_323 -> m8_324  [key=0, style=solid];
m8_323 -> m8_325  [key=0, style=solid];
m8_325 -> m8_327  [color=darkseagreen4, key=1, label=valuesToken, style=dashed];
m8_325 -> m8_326  [key=0, style=solid];
m8_326 -> m8_327  [key=0, style=solid];
m8_326 -> m8_332  [key=0, style=solid];
m8_289 -> m8_290  [key=0, style=solid];
m8_289 -> m8_307  [key=0, style=solid];
m8_315 -> m8_316  [key=0, style=solid];
m8_315 -> m8_322  [key=0, style=solid];
m8_334 -> m8_283  [color=blue, key=0, style=bold];
m8_625 -> m8_626  [key=0, style=solid];
m8_625 -> m8_627  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_625 -> m8_628  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_625 -> m8_41  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_625 -> m8_450  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_625 -> m8_35  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_625 -> m8_42  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_625 -> m8_785  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_625 -> m8_631  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_625 -> m8_747  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_625 -> m8_822  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_626 -> m8_627  [key=0, style=solid];
m8_626 -> m8_628  [key=0, style=solid];
m8_627 -> m8_36  [key=2, style=dotted];
m8_627 -> m8_628  [key=0, style=solid];
m8_627 -> m8_338  [key=2, style=dotted];
m8_627 -> m8_339  [key=2, style=dotted];
m8_628 -> m8_629  [key=0, style=solid];
m8_628 -> m8_630  [key=2, style=dotted];
m8_629 -> m8_625  [color=blue, key=0, style=bold];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_54  [key=2, style=dotted];
m8_32 -> m8_27  [key=2, style=dotted];
m8_880 -> m8_668  [color=darkorchid, key=3, label="Parameter variable bool setDefaultValue", style=bold];
m8_880 -> m8_1053  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_880 -> m8_1054  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_880 -> m8_1055  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_880 -> m8_1062  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_880 -> m8_1063  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_880 -> m8_42  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract contract", style=bold];
m8_880 -> m8_1050  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_880 -> m8_1058  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_880 -> m8_1060  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_880 -> m8_1045  [key=0, style=solid];
m8_880 -> m8_1046  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_880 -> m8_1047  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence", style=dashed];
m8_880 -> m8_1051  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_880 -> m8_1052  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_880 -> m8_822  [color=darkorchid, key=3, label="Parameter variable object newObject", style=bold];
m8_880 -> m8_785  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract contract", style=bold];
m8_880 -> m8_958  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m8_880 -> m8_997  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m8_880 -> m8_998  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence presence", style=bold];
m8_1053 -> m8_43  [key=2, style=dotted];
m8_1053 -> m8_1054  [key=0, style=solid];
m8_1054 -> m8_1055  [key=0, style=solid];
m8_1054 -> m8_1061  [key=0, style=solid];
m8_1054 -> m8_1065  [key=0, style=solid];
m8_1054 -> m8_538  [key=2, style=dotted];
m8_1054 -> m8_540  [key=2, style=dotted];
m8_1055 -> m8_1061  [key=0, style=solid];
m8_1055 -> m8_1065  [key=0, style=solid];
m8_1055 -> m8_542  [key=2, style=dotted];
m8_1055 -> m8_161  [key=2, style=dotted];
m8_1055 -> m8_506  [key=2, style=dotted];
m8_1062 -> m8_1063  [key=0, style=solid];
m8_1062 -> m8_1064  [key=0, style=solid];
m8_1062 -> m8_79  [key=2, style=dotted];
m8_1063 -> m8_80  [key=2, style=dotted];
m8_1063 -> m8_1065  [key=0, style=solid];
m8_1050 -> m8_36  [key=2, style=dotted];
m8_1050 -> m8_33  [key=2, style=dotted];
m8_1050 -> m8_1065  [key=0, style=solid];
m8_1058 -> m8_36  [key=2, style=dotted];
m8_1058 -> m8_33  [key=2, style=dotted];
m8_1058 -> m8_1065  [key=0, style=solid];
m8_1060 -> m8_36  [key=2, style=dotted];
m8_1060 -> m8_33  [key=2, style=dotted];
m8_1060 -> m8_1065  [key=0, style=solid];
m8_1052 -> m8_1053  [key=0, style=solid];
m8_1052 -> m8_1054  [key=0, style=solid];
m8_1061 -> m8_1062  [key=0, style=solid];
m8_1064 -> m8_1065  [key=0, style=solid];
m8_1049 -> m8_1050  [key=0, style=solid];
m8_1049 -> m8_1051  [key=0, style=solid];
m8_1057 -> m8_1058  [key=0, style=solid];
m8_1057 -> m8_1059  [key=0, style=solid];
m8_1059 -> m8_1060  [key=0, style=solid];
m8_1059 -> m8_1061  [key=0, style=solid];
m8_1059 -> m8_1065  [key=0, style=solid];
m8_1045 -> m8_1065  [key=0, style=solid];
m8_1045 -> m8_1046  [key=0, style=solid];
m8_1046 -> m8_1049  [color=darkseagreen4, key=1, label=resolvedRequired, style=dashed];
m8_1046 -> m8_1057  [color=darkseagreen4, key=1, label=resolvedRequired, style=dashed];
m8_1046 -> m8_1059  [color=darkseagreen4, key=1, label=resolvedRequired, style=dashed];
m8_1046 -> m8_1047  [key=0, style=solid];
m8_1047 -> m8_1048  [key=0, style=solid];
m8_1047 -> m8_1056  [key=0, style=solid];
m8_1051 -> m8_1052  [key=0, style=solid];
m8_1051 -> m8_1061  [key=0, style=solid];
m8_1051 -> m8_1065  [key=0, style=solid];
m8_1048 -> m8_1049  [key=0, style=solid];
m8_1056 -> m8_1057  [key=0, style=solid];
m8_1065 -> m8_880  [color=blue, key=0, style=bold];
m8_562 -> m8_580  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_562 -> m8_564  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_562 -> m8_590  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_562 -> m8_591  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_562 -> m8_563  [key=0, style=solid];
m8_562 -> m8_565  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_562 -> m8_566  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_562 -> m8_568  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_562 -> m8_569  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_562 -> m8_570  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_562 -> m8_571  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_562 -> m8_574  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_562 -> m8_576  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_562 -> m8_577  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_562 -> m8_578  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_562 -> m8_581  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_562 -> m8_582  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_562 -> m8_583  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_562 -> m8_586  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_562 -> m8_588  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_562 -> m8_589  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_580 -> m8_581  [key=0, style=solid];
m8_580 -> m8_586  [key=0, style=solid];
m8_564 -> m8_36  [key=2, style=dotted];
m8_564 -> m8_33  [key=2, style=dotted];
m8_564 -> m8_592  [key=0, style=solid];
m8_590 -> m8_36  [key=2, style=dotted];
m8_590 -> m8_33  [key=2, style=dotted];
m8_590 -> m8_592  [key=0, style=solid];
m8_591 -> m8_36  [key=2, style=dotted];
m8_591 -> m8_33  [key=2, style=dotted];
m8_591 -> m8_592  [key=0, style=solid];
m8_574 -> m8_580  [key=0, style=solid];
m8_574 -> m8_575  [key=0, style=solid];
m8_581 -> m8_582  [key=0, style=solid];
m8_581 -> m8_594  [key=2, style=dotted];
m8_581 -> m8_583  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_581 -> m8_585  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_586 -> m8_587  [key=0, style=solid];
m8_586 -> m8_589  [key=0, style=solid];
m8_563 -> m8_564  [key=0, style=solid];
m8_563 -> m8_565  [key=0, style=solid];
m8_589 -> m8_590  [key=0, style=solid];
m8_589 -> m8_591  [key=0, style=solid];
m8_571 -> m8_34  [key=2, style=dotted];
m8_571 -> m8_571  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_571 -> m8_572  [key=0, style=solid];
m8_571 -> m8_573  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_578 -> m8_34  [key=2, style=dotted];
m8_578 -> m8_578  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_578 -> m8_579  [key=0, style=solid];
m8_583 -> m8_34  [key=2, style=dotted];
m8_583 -> m8_583  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_583 -> m8_584  [key=0, style=solid];
m8_583 -> m8_585  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_565 -> m8_574  [key=0, style=solid];
m8_565 -> m8_566  [key=0, style=solid];
m8_566 -> m8_567  [key=0, style=solid];
m8_566 -> m8_569  [key=0, style=solid];
m8_568 -> m8_592  [key=0, style=solid];
m8_568 -> m8_593  [key=2, style=dotted];
m8_569 -> m8_571  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_569 -> m8_281  [key=2, style=dotted];
m8_569 -> m8_570  [key=0, style=solid];
m8_569 -> m8_573  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_570 -> m8_571  [key=0, style=solid];
m8_570 -> m8_572  [key=0, style=solid];
m8_576 -> m8_578  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_576 -> m8_577  [key=0, style=solid];
m8_576 -> m8_593  [key=2, style=dotted];
m8_576 -> m8_579  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_577 -> m8_578  [key=0, style=solid];
m8_577 -> m8_579  [key=0, style=solid];
m8_582 -> m8_583  [key=0, style=solid];
m8_582 -> m8_584  [key=0, style=solid];
m8_588 -> m8_592  [key=0, style=solid];
m8_588 -> m8_593  [key=2, style=dotted];
m8_575 -> m8_592  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_575 -> m8_576  [key=0, style=solid];
m8_585 -> m8_592  [key=0, style=solid];
m8_587 -> m8_592  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_587 -> m8_588  [key=0, style=solid];
m8_567 -> m8_592  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_567 -> m8_568  [key=0, style=solid];
m8_573 -> m8_592  [key=0, style=solid];
m8_572 -> m8_592  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_572 -> m8_573  [key=0, style=solid];
m8_579 -> m8_592  [key=0, style=solid];
m8_584 -> m8_592  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_584 -> m8_585  [key=0, style=solid];
m8_592 -> m8_562  [color=blue, key=0, style=bold];
m8_161 -> m8_77  [color=darkorchid, key=3, label="Parameter variable System.Type targetType", style=bold];
m8_161 -> m8_11  [color=darkorchid, key=3, label="method methodReturn object EnsureType", style=bold];
m8_161 -> m8_41  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_161 -> m8_161  [color=darkorchid, key=3, label="method methodReturn object EnsureType", style=bold];
m8_161 -> m8_457  [key=0, style=solid];
m8_161 -> m8_458  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_161 -> m8_459  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_161 -> m8_460  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_161 -> m8_461  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_161 -> m8_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_161 -> m8_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_161 -> m8_465  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_161 -> m8_466  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_161 -> m8_467  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_161 -> m8_469  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_161 -> m8_470  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_161 -> m8_471  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_161 -> m8_473  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_161 -> m8_474  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_161 -> m8_785  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_161 -> m8_880  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_161 -> m8_140  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_161 -> m8_147  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_161 -> m8_650  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_457 -> m8_458  [key=0, style=solid];
m8_457 -> m8_459  [key=0, style=solid];
m8_458 -> m8_475  [key=0, style=solid];
m8_459 -> m8_460  [key=0, style=solid];
m8_459 -> m8_476  [key=2, style=dotted];
m8_460 -> m8_461  [key=0, style=solid];
m8_460 -> m8_474  [key=0, style=solid];
m8_461 -> m8_462  [key=0, style=solid];
m8_461 -> m8_463  [key=0, style=solid];
m8_463 -> m8_464  [key=0, style=solid];
m8_463 -> m8_471  [key=0, style=solid];
m8_464 -> m8_465  [key=0, style=solid];
m8_464 -> m8_468  [color=darkseagreen4, key=1, label=primitiveContract, style=dashed];
m8_465 -> m8_466  [key=0, style=solid];
m8_465 -> m8_470  [key=0, style=solid];
m8_466 -> m8_467  [key=0, style=solid];
m8_466 -> m8_468  [key=0, style=solid];
m8_467 -> m8_38  [key=2, style=dotted];
m8_467 -> m8_475  [key=0, style=solid];
m8_467 -> m8_477  [key=2, style=dotted];
m8_469 -> m8_475  [key=0, style=solid];
m8_469 -> m8_479  [key=2, style=dotted];
m8_470 -> m8_475  [key=0, style=solid];
m8_470 -> m8_480  [key=2, style=dotted];
m8_471 -> m8_475  [key=0, style=solid];
m8_471 -> m8_481  [key=2, style=dotted];
m8_473 -> m8_282  [key=2, style=dotted];
m8_473 -> m8_475  [key=0, style=solid];
m8_473 -> m8_482  [key=2, style=dotted];
m8_473 -> m8_403  [key=2, style=dotted];
m8_474 -> m8_475  [key=0, style=solid];
m8_462 -> m8_475  [key=0, style=solid];
m8_468 -> m8_469  [key=0, style=solid];
m8_468 -> m8_470  [key=0, style=solid];
m8_468 -> m8_468  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_468 -> m8_478  [key=2, style=dotted];
m8_472 -> m8_473  [key=0, style=solid];
m8_475 -> m8_161  [color=blue, key=0, style=bold];
m8_162 -> m8_77  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_162 -> m8_165  [key=0, style=solid];
m8_162 -> m8_140  [color=darkorchid, key=3, label="Parameter variable string s", style=bold];
m8_162 -> m8_801  [color=darkorchid, key=3, label="Parameter variable string s", style=bold];
m8_165 -> m8_166  [key=0, style=solid];
m8_165 -> m8_167  [key=2, style=dotted];
m8_166 -> m8_162  [color=blue, key=0, style=bold];
m8_28 -> m8_29  [key=0, style=solid];
m8_82 -> m8_83  [key=0, style=solid];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_85  [key=0, style=solid];
m8_84 -> m8_85  [key=0, style=solid];
m8_84 -> m8_87  [key=2, style=dotted];
m8_85 -> m8_86  [key=0, style=solid];
m8_86 -> m8_82  [color=blue, key=0, style=bold];
m8_159 -> m8_77  [color=darkorchid, key=3, label="Parameter variable object existingValue", style=bold];
m8_159 -> m8_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_159 -> m8_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_159 -> m8_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_159 -> m8_42  [color=darkorchid, key=3, label="method methodReturn object CreateObject", style=bold];
m8_159 -> m8_200  [key=0, style=solid];
m8_159 -> m8_201  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_159 -> m8_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_159 -> m8_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_159 -> m8_230  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_159 -> m8_231  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_159 -> m8_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_159 -> m8_239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_159 -> m8_248  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_159 -> m8_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_159 -> m8_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_159 -> m8_256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_159 -> m8_104  [color=darkorchid, key=3, label="method methodReturn object CreateObject", style=bold];
m8_159 -> m8_229  [color=darkorchid, key=3, label="method methodReturn object CreateObject", style=bold];
m8_159 -> m8_247  [color=darkorchid, key=3, label="method methodReturn object CreateObject", style=bold];
m8_202 -> m8_203  [key=0, style=solid];
m8_202 -> m8_205  [key=0, style=solid];
m8_205 -> m8_206  [key=0, style=solid];
m8_205 -> m8_220  [key=0, style=solid];
m8_218 -> m8_218  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m8_218 -> m8_219  [key=0, style=solid];
m8_218 -> m8_223  [key=0, style=solid];
m8_218 -> m8_275  [key=2, style=dotted];
m8_218 -> m8_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_218 -> m8_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_218 -> m8_230  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m8_218 -> m8_232  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_218 -> m8_235  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_218 -> m8_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_218 -> m8_242  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m8_218 -> m8_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_218 -> m8_251  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_218 -> m8_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_218 -> m8_253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_218 -> m8_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_218 -> m8_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_218 -> m8_256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_218 -> m8_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_218 -> m8_259  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_218 -> m8_266  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_218 -> m8_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_221 -> m8_221  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m8_221 -> m8_222  [key=0, style=solid];
m8_221 -> m8_223  [key=0, style=solid];
m8_221 -> m8_276  [key=2, style=dotted];
m8_221 -> m8_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_221 -> m8_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_221 -> m8_230  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m8_221 -> m8_232  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_221 -> m8_235  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_221 -> m8_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_221 -> m8_242  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m8_221 -> m8_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_221 -> m8_251  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_221 -> m8_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_221 -> m8_253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_221 -> m8_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_221 -> m8_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_221 -> m8_256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_221 -> m8_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_221 -> m8_259  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_221 -> m8_266  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_221 -> m8_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_223 -> m8_224  [key=0, style=solid];
m8_223 -> m8_225  [key=0, style=solid];
m8_223 -> m8_277  [key=2, style=dotted];
m8_224 -> m8_271  [key=0, style=solid];
m8_224 -> m8_104  [key=2, style=dotted];
m8_232 -> m8_233  [key=0, style=solid];
m8_232 -> m8_279  [key=2, style=dotted];
m8_232 -> m8_234  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m8_232 -> m8_235  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m8_235 -> m8_271  [key=0, style=solid];
m8_235 -> m8_42  [key=2, style=dotted];
m8_238 -> m8_239  [key=0, style=solid];
m8_238 -> m8_268  [key=0, style=solid];
m8_238 -> m8_38  [key=2, style=dotted];
m8_238 -> m8_39  [key=2, style=dotted];
m8_242 -> m8_77  [key=2, style=dotted];
m8_242 -> m8_243  [key=0, style=solid];
m8_242 -> m8_244  [color=darkseagreen4, key=1, label=value, style=dashed];
m8_249 -> m8_250  [key=0, style=solid];
m8_249 -> m8_280  [key=2, style=dotted];
m8_249 -> m8_259  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_249 -> m8_262  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_249 -> m8_263  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_249 -> m8_264  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_249 -> m8_265  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_259 -> m8_260  [key=0, style=solid];
m8_259 -> m8_41  [key=2, style=dotted];
m8_266 -> m8_267  [key=0, style=solid];
m8_266 -> m8_40  [key=2, style=dotted];
m8_266 -> m8_41  [key=2, style=dotted];
m8_269 -> m8_269  [color=darkseagreen4, key=1, label=message, style=dashed];
m8_269 -> m8_270  [key=0, style=solid];
m8_269 -> m8_168  [key=2, style=dotted];
m8_269 -> m8_282  [key=2, style=dotted];
m8_201 -> m8_202  [key=0, style=solid];
m8_201 -> m8_218  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m8_201 -> m8_221  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m8_201 -> m8_242  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m8_201 -> m8_269  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m8_201 -> m8_159  [color=darkorchid, key=3, label="Local variable System.Type resolvedObjectType", style=bold];
m8_201 -> m8_230  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m8_252 -> m8_36  [key=2, style=dotted];
m8_252 -> m8_33  [key=2, style=dotted];
m8_252 -> m8_271  [key=0, style=solid];
m8_254 -> m8_36  [key=2, style=dotted];
m8_254 -> m8_33  [key=2, style=dotted];
m8_254 -> m8_271  [key=0, style=solid];
m8_256 -> m8_36  [key=2, style=dotted];
m8_256 -> m8_33  [key=2, style=dotted];
m8_256 -> m8_271  [key=0, style=solid];
m8_258 -> m8_36  [key=2, style=dotted];
m8_258 -> m8_33  [key=2, style=dotted];
m8_258 -> m8_271  [key=0, style=solid];
m8_241 -> m8_33  [key=2, style=dotted];
m8_241 -> m8_271  [key=0, style=solid];
m8_270 -> m8_33  [key=2, style=dotted];
m8_270 -> m8_271  [key=0, style=solid];
m8_227 -> m8_68  [color=darkorchid, key=3, label="Local variable bool createdFromNonDefaultCreator", style=bold];
m8_227 -> m8_228  [key=0, style=solid];
m8_227 -> m8_233  [color=darkseagreen4, key=1, label=createdFromNonDefaultCreator, style=dashed];
m8_203 -> m8_204  [key=0, style=solid];
m8_203 -> m8_37  [key=2, style=dotted];
m8_206 -> m8_207  [key=0, style=solid];
m8_206 -> m8_208  [key=0, style=solid];
m8_220 -> m8_221  [key=0, style=solid];
m8_220 -> m8_37  [key=2, style=dotted];
m8_217 -> m8_218  [key=0, style=solid];
m8_217 -> m8_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_217 -> m8_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_217 -> m8_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_217 -> m8_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_217 -> m8_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_217 -> m8_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_217 -> m8_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_217 -> m8_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_217 -> m8_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_217 -> m8_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_217 -> m8_256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_217 -> m8_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_217 -> m8_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_217 -> m8_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_217 -> m8_239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_217 -> m8_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_217 -> m8_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_219 -> m8_271  [key=0, style=solid];
m8_225 -> m8_226  [key=0, style=solid];
m8_225 -> m8_236  [key=0, style=solid];
m8_225 -> m8_245  [key=0, style=solid];
m8_228 -> m8_232  [color=darkseagreen4, key=1, label=objectContract, style=dashed];
m8_228 -> m8_235  [color=darkseagreen4, key=1, label=objectContract, style=dashed];
m8_228 -> m8_229  [key=0, style=solid];
m8_230 -> m8_232  [key=0, style=solid];
m8_230 -> m8_231  [key=0, style=solid];
m8_230 -> m8_30  [key=2, style=dotted];
m8_230 -> m8_278  [key=2, style=dotted];
m8_237 -> m8_238  [key=0, style=solid];
m8_237 -> m8_242  [color=darkseagreen4, key=1, label=primitiveContract, style=dashed];
m8_246 -> m8_249  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m8_246 -> m8_259  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m8_246 -> m8_266  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m8_246 -> m8_247  [key=0, style=solid];
m8_246 -> m8_257  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m8_246 -> m8_261  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m8_251 -> m8_252  [key=0, style=solid];
m8_251 -> m8_253  [key=0, style=solid];
m8_253 -> m8_254  [key=0, style=solid];
m8_253 -> m8_255  [key=0, style=solid];
m8_255 -> m8_256  [key=0, style=solid];
m8_255 -> m8_257  [key=0, style=solid];
m8_222 -> m8_271  [key=0, style=solid];
m8_204 -> m8_223  [key=0, style=solid];
m8_204 -> m8_232  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_204 -> m8_235  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_204 -> m8_259  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_204 -> m8_266  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_204 -> m8_251  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_233 -> m8_235  [key=0, style=solid];
m8_233 -> m8_234  [key=0, style=solid];
m8_234 -> m8_271  [key=0, style=solid];
m8_231 -> m8_235  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m8_231 -> m8_233  [key=0, style=solid];
m8_231 -> m8_234  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m8_239 -> m8_240  [key=0, style=solid];
m8_239 -> m8_37  [key=2, style=dotted];
m8_268 -> m8_269  [key=0, style=solid];
m8_240 -> m8_242  [key=0, style=solid];
m8_240 -> m8_241  [key=0, style=solid];
m8_243 -> m8_244  [key=0, style=solid];
m8_243 -> m8_37  [key=2, style=dotted];
m8_244 -> m8_271  [key=0, style=solid];
m8_248 -> m8_249  [key=0, style=solid];
m8_248 -> m8_266  [key=0, style=solid];
m8_247 -> m8_249  [color=darkorchid, key=3, label="Local variable object targetDictionary", style=bold];
m8_247 -> m8_41  [color=darkorchid, key=3, label="Local variable object targetDictionary", style=bold];
m8_247 -> m8_248  [key=0, style=solid];
m8_250 -> m8_259  [key=0, style=solid];
m8_250 -> m8_251  [key=0, style=solid];
m8_262 -> m8_271  [key=0, style=solid];
m8_262 -> m8_281  [key=2, style=dotted];
m8_263 -> m8_264  [key=0, style=solid];
m8_263 -> m8_265  [key=0, style=solid];
m8_264 -> m8_271  [key=0, style=solid];
m8_265 -> m8_267  [key=0, style=solid];
m8_257 -> m8_259  [key=0, style=solid];
m8_257 -> m8_258  [key=0, style=solid];
m8_260 -> m8_263  [key=0, style=solid];
m8_260 -> m8_261  [key=0, style=solid];
m8_267 -> m8_271  [key=0, style=solid];
m8_200 -> m8_201  [key=0, style=solid];
m8_229 -> m8_159  [color=darkorchid, key=3, label="Local variable object targetObject", style=bold];
m8_229 -> m8_230  [key=0, style=solid];
m8_229 -> m8_279  [color=darkorchid, key=3, label="Local variable object targetObject", style=bold];
m8_208 -> m8_209  [key=0, style=solid];
m8_208 -> m8_272  [key=2, style=dotted];
m8_210 -> m8_211  [key=0, style=solid];
m8_211 -> m8_212  [key=0, style=solid];
m8_212 -> m8_213  [key=0, style=solid];
m8_213 -> m8_214  [key=0, style=solid];
m8_214 -> m8_215  [key=0, style=solid];
m8_215 -> m8_216  [key=0, style=solid];
m8_226 -> m8_227  [key=0, style=solid];
m8_207 -> m8_208  [key=0, style=solid];
m8_216 -> m8_217  [key=0, style=solid];
m8_216 -> m8_274  [key=2, style=dotted];
m8_236 -> m8_237  [key=0, style=solid];
m8_245 -> m8_246  [key=0, style=solid];
m8_261 -> m8_262  [key=0, style=solid];
m8_209 -> m8_210  [key=0, style=solid];
m8_209 -> m8_273  [key=2, style=dotted];
m8_271 -> m8_159  [color=blue, key=0, style=bold];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_54  [key=2, style=dotted];
m8_30 -> m8_27  [key=2, style=dotted];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_54  [key=2, style=dotted];
m8_31 -> m8_27  [key=2, style=dotted];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_54  [key=2, style=dotted];
m8_33 -> m8_27  [key=2, style=dotted];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_54  [key=2, style=dotted];
m8_34 -> m8_27  [key=2, style=dotted];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_54  [key=2, style=dotted];
m8_36 -> m8_27  [key=2, style=dotted];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_54  [key=2, style=dotted];
m8_41 -> m8_27  [key=2, style=dotted];
m8_41 -> m8_11  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m8_41 -> m8_249  [color=darkorchid, key=3, label="Parameter variable System.Collections.IDictionary dictionary", style=bold];
m8_41 -> m8_635  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_636  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_639  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_41 -> m8_641  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_41 -> m8_642  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_41 -> m8_651  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_655  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_656  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_663  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_664  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_667  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_668  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_676  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_677  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_631  [key=0, style=solid];
m8_41 -> m8_633  [color=darkseagreen4, key=1, label="System.Collections.IDictionary", style=dashed];
m8_41 -> m8_634  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_41 -> m8_637  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_638  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_41 -> m8_640  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_41 -> m8_643  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_41 -> m8_648  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_650  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_658  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_659  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_660  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_665  [color=darkseagreen4, key=1, label="System.Collections.IDictionary", style=dashed];
m8_41 -> m8_673  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_674  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_2  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_41 -> m8_159  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m8_41 -> m8_21  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonDictionaryContract contract", style=bold];
m8_41 -> m8_246  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonDictionaryContract contract", style=bold];
m8_41 -> m8_15  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_41 -> m8_200  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_54  [key=2, style=dotted];
m8_42 -> m8_27  [key=2, style=dotted];
m8_42 -> m8_11  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty member", style=bold];
m8_42 -> m8_5  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract contract", style=bold];
m8_42 -> m8_954  [key=0, style=solid];
m8_42 -> m8_955  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_42 -> m8_957  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_42 -> m8_963  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_42 -> m8_967  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_42 -> m8_971  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_42 -> m8_972  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_42 -> m8_974  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_42 -> m8_975  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_42 -> m8_978  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_42 -> m8_981  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_42 -> m8_982  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_42 -> m8_983  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_42 -> m8_985  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_42 -> m8_986  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_42 -> m8_994  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_42 -> m8_999  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_42 -> m8_1000  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_42 -> m8_42  [color=darkorchid, key=3, label="method methodReturn object PopulateObject", style=bold];
m8_42 -> m8_956  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_42 -> m8_958  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_42 -> m8_960  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_42 -> m8_962  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_42 -> m8_964  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_42 -> m8_969  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_42 -> m8_970  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_42 -> m8_973  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_42 -> m8_979  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_42 -> m8_980  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_42 -> m8_991  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_42 -> m8_992  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_42 -> m8_1001  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_42 -> m8_2  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_42 -> m8_229  [color=darkorchid, key=3, label="Parameter variable object newObject", style=bold];
m8_42 -> m8_159  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty member", style=bold];
m8_42 -> m8_228  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract contract", style=bold];
m8_42 -> m8_15  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_42 -> m8_200  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_681 -> m8_11  [color=darkorchid, key=3, label="Parameter variable object currentObject", style=bold];
m8_681 -> m8_730  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m8_681 -> m8_743  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_681 -> m8_744  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_681 -> m8_41  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_681 -> m8_450  [color=darkorchid, key=3, label="Parameter variable object currentObject", style=bold];
m8_681 -> m8_35  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_681 -> m8_870  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_681 -> m8_42  [color=darkorchid, key=3, label="Parameter variable object currentObject", style=bold];
m8_681 -> m8_118  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m8_681 -> m8_741  [key=0, style=solid];
m8_681 -> m8_631  [color=darkorchid, key=3, label="Parameter variable object currentObject", style=bold];
m8_681 -> m8_747  [color=darkorchid, key=3, label="Parameter variable object currentObject", style=bold];
m8_743 -> m8_744  [key=0, style=solid];
m8_743 -> m8_745  [key=0, style=solid];
m8_743 -> m8_79  [key=2, style=dotted];
m8_744 -> m8_80  [key=2, style=dotted];
m8_744 -> m8_746  [key=0, style=solid];
m8_741 -> m8_33  [key=2, style=dotted];
m8_741 -> m8_746  [key=0, style=solid];
m8_742 -> m8_743  [key=0, style=solid];
m8_745 -> m8_746  [key=0, style=solid];
m8_746 -> m8_681  [color=blue, key=0, style=bold];
m8_483 -> m8_68  [color=darkorchid, key=3, label="method methodReturn bool SetPropertyValue", style=bold];
m8_483 -> m8_484  [key=0, style=solid];
m8_483 -> m8_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_483 -> m8_491  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_483 -> m8_492  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_483 -> m8_496  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_483 -> m8_668  [color=darkorchid, key=3, label="method methodReturn bool SetPropertyValue", style=bold];
m8_483 -> m8_978  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter propertyConverter", style=bold];
m8_483 -> m8_42  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m8_483 -> m8_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_483 -> m8_489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_483 -> m8_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_483 -> m8_494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_483 -> m8_497  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_483 -> m8_964  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m8_484 -> m8_484  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m8_484 -> m8_485  [key=0, style=solid];
m8_484 -> m8_486  [key=0, style=solid];
m8_484 -> m8_501  [key=2, style=dotted];
m8_484 -> m8_487  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m8_484 -> m8_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m8_490 -> m8_492  [key=0, style=solid];
m8_490 -> m8_503  [key=2, style=dotted];
m8_490 -> m8_493  [color=darkseagreen4, key=1, label=value, style=dashed];
m8_491 -> m8_492  [key=0, style=solid];
m8_491 -> m8_504  [key=2, style=dotted];
m8_491 -> m8_493  [color=darkseagreen4, key=1, label=value, style=dashed];
m8_492 -> m8_493  [key=0, style=solid];
m8_492 -> m8_499  [key=0, style=solid];
m8_492 -> m8_505  [key=2, style=dotted];
m8_495 -> m8_496  [key=0, style=solid];
m8_495 -> m8_497  [key=0, style=solid];
m8_496 -> m8_496  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_496 -> m8_497  [key=0, style=solid];
m8_496 -> m8_282  [key=2, style=dotted];
m8_496 -> m8_338  [key=2, style=dotted];
m8_496 -> m8_339  [key=2, style=dotted];
m8_485 -> m8_500  [key=0, style=solid];
m8_486 -> m8_487  [key=0, style=solid];
m8_487 -> m8_491  [key=0, style=solid];
m8_487 -> m8_488  [key=0, style=solid];
m8_488 -> m8_490  [key=0, style=solid];
m8_488 -> m8_489  [key=0, style=solid];
m8_489 -> m8_490  [key=0, style=solid];
m8_489 -> m8_502  [key=2, style=dotted];
m8_493 -> m8_494  [key=0, style=solid];
m8_493 -> m8_506  [key=2, style=dotted];
m8_499 -> m8_500  [key=0, style=solid];
m8_494 -> m8_495  [key=0, style=solid];
m8_494 -> m8_498  [key=0, style=solid];
m8_497 -> m8_498  [key=0, style=solid];
m8_497 -> m8_507  [key=2, style=dotted];
m8_498 -> m8_500  [key=0, style=solid];
m8_500 -> m8_483  [color=blue, key=0, style=bold];
m8_341 -> m8_43  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_341 -> m8_385  [key=0, style=solid];
m8_341 -> m8_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_341 -> m8_387  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_341 -> m8_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_341 -> m8_393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_341 -> m8_396  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_341 -> m8_397  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_341 -> m8_400  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_341 -> m8_310  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_341 -> m8_342  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember", style=bold];
m8_341 -> m8_283  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember", style=bold];
m8_341 -> m8_388  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m8_341 -> m8_309  [color=darkorchid, key=3, label="Parameter variable string qualifiedTypeName", style=bold];
m8_341 -> m8_366  [color=darkorchid, key=3, label="Parameter variable string qualifiedTypeName", style=bold];
m8_385 -> m8_386  [key=0, style=solid];
m8_389 -> m8_390  [key=0, style=solid];
m8_389 -> m8_392  [key=0, style=solid];
m8_389 -> m8_402  [key=2, style=dotted];
m8_389 -> m8_395  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m8_389 -> m8_396  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m8_389 -> m8_397  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m8_389 -> m8_398  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m8_389 -> m8_399  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m8_394 -> m8_395  [key=0, style=solid];
m8_394 -> m8_396  [key=0, style=solid];
m8_395 -> m8_396  [key=0, style=solid];
m8_395 -> m8_282  [key=2, style=dotted];
m8_395 -> m8_338  [key=2, style=dotted];
m8_395 -> m8_339  [key=2, style=dotted];
m8_399 -> m8_43  [key=2, style=dotted];
m8_399 -> m8_400  [key=0, style=solid];
m8_388 -> m8_389  [key=0, style=solid];
m8_391 -> m8_36  [key=2, style=dotted];
m8_391 -> m8_400  [key=0, style=solid];
m8_391 -> m8_403  [key=2, style=dotted];
m8_393 -> m8_36  [key=2, style=dotted];
m8_393 -> m8_33  [key=2, style=dotted];
m8_393 -> m8_400  [key=0, style=solid];
m8_397 -> m8_33  [key=2, style=dotted];
m8_397 -> m8_400  [key=0, style=solid];
m8_397 -> m8_282  [key=2, style=dotted];
m8_386 -> m8_387  [key=0, style=solid];
m8_386 -> m8_400  [key=0, style=solid];
m8_387 -> m8_389  [color=darkseagreen4, key=1, label=typeNameKey, style=dashed];
m8_387 -> m8_388  [key=0, style=solid];
m8_387 -> m8_401  [key=2, style=dotted];
m8_390 -> m8_391  [key=0, style=solid];
m8_392 -> m8_394  [key=0, style=solid];
m8_392 -> m8_393  [key=0, style=solid];
m8_396 -> m8_397  [key=0, style=solid];
m8_396 -> m8_398  [key=0, style=solid];
m8_396 -> m8_278  [key=2, style=dotted];
m8_398 -> m8_399  [key=0, style=solid];
m8_398 -> m8_400  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_400 -> m8_341  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_26  [key=2, style=dotted];
m8_1 -> m8_27  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_26  [key=2, style=dotted];
m8_2 -> m8_27  [key=2, style=dotted];
m8_2 -> m8_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_4  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_2 -> m8_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_26  [key=2, style=dotted];
m8_3 -> m8_27  [key=2, style=dotted];
m8_3 -> m8_28  [key=2, style=dotted];
m8_3 -> m8_29  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_26  [key=2, style=dotted];
m8_4 -> m8_27  [key=2, style=dotted];
m8_4 -> m8_12  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m8_4 -> m8_25  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m8_4 -> m8_30  [key=2, style=dotted];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_26  [key=2, style=dotted];
m8_5 -> m8_27  [key=2, style=dotted];
m8_5 -> m8_31  [key=2, style=dotted];
m8_5 -> m8_9  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_5 -> m8_10  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_5 -> m8_20  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_5 -> m8_21  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_5 -> m8_23  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_5 -> m8_24  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_26  [key=2, style=dotted];
m8_6 -> m8_27  [key=2, style=dotted];
m8_6 -> m8_8  [key=0, style=solid];
m8_6 -> m8_32  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_26  [key=2, style=dotted];
m8_7 -> m8_27  [key=2, style=dotted];
m8_7 -> m8_33  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_26  [key=2, style=dotted];
m8_8 -> m8_27  [key=2, style=dotted];
m8_8 -> m8_13  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_26  [key=2, style=dotted];
m8_9 -> m8_27  [key=2, style=dotted];
m8_9 -> m8_12  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_26  [key=2, style=dotted];
m8_10 -> m8_27  [key=2, style=dotted];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_26  [key=2, style=dotted];
m8_11 -> m8_27  [key=2, style=dotted];
m8_11 -> m8_34  [key=2, style=dotted];
m8_11 -> m8_35  [key=2, style=dotted];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_26  [key=2, style=dotted];
m8_12 -> m8_27  [key=2, style=dotted];
m8_12 -> m8_36  [key=2, style=dotted];
m8_12 -> m8_33  [key=2, style=dotted];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_26  [key=2, style=dotted];
m8_13 -> m8_27  [key=2, style=dotted];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_26  [key=2, style=dotted];
m8_14 -> m8_27  [key=2, style=dotted];
m8_14 -> m8_37  [key=2, style=dotted];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_26  [key=2, style=dotted];
m8_15 -> m8_27  [key=2, style=dotted];
m8_15 -> m8_11  [color=darkorchid, key=3, label="Local variable string id", style=bold];
m8_15 -> m8_22  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_15 -> m8_24  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_26  [key=2, style=dotted];
m8_16 -> m8_27  [key=2, style=dotted];
m8_16 -> m8_16  [color=darkorchid, key=3, label="Field variable char UnicodeReplacementChar", style=bold];
m8_16 -> m8_20  [key=0, style=solid];
m8_16 -> m8_38  [key=2, style=dotted];
m8_16 -> m8_39  [key=2, style=dotted];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_26  [key=2, style=dotted];
m8_17 -> m8_27  [key=2, style=dotted];
m8_17 -> m8_37  [key=2, style=dotted];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_26  [key=2, style=dotted];
m8_18 -> m8_27  [key=2, style=dotted];
m8_18 -> m8_31  [color=darkorchid, key=3, label="Field variable System.IO.TextReader _reader", style=bold];
m8_18 -> m8_22  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_18 -> m8_24  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_18 -> m8_38  [key=2, style=dotted];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_26  [key=2, style=dotted];
m8_19 -> m8_27  [key=2, style=dotted];
m8_19 -> m8_37  [key=2, style=dotted];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_26  [key=2, style=dotted];
m8_20 -> m8_27  [key=2, style=dotted];
m8_20 -> m8_23  [key=0, style=solid];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_26  [key=2, style=dotted];
m8_21 -> m8_27  [key=2, style=dotted];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_26  [key=2, style=dotted];
m8_22 -> m8_27  [key=2, style=dotted];
m8_22 -> m8_21  [color=darkorchid, key=3, label="Field variable int _lineStartPos", style=bold];
m8_22 -> m8_40  [key=2, style=dotted];
m8_22 -> m8_41  [key=2, style=dotted];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_26  [key=2, style=dotted];
m8_23 -> m8_27  [key=2, style=dotted];
m8_23 -> m8_25  [key=0, style=solid];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_26  [key=2, style=dotted];
m8_24 -> m8_27  [key=2, style=dotted];
m8_24 -> m8_42  [key=2, style=dotted];
m8_25 -> m8_0  [color=blue, key=0, style=bold];
m8_25 -> m8_36  [key=2, style=dotted];
m8_25 -> m8_33  [key=2, style=dotted];
m8_25 -> m8_27  [key=0, style=solid];
m8_619 -> m8_620  [key=0, style=solid];
m8_619 -> m8_621  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_619 -> m8_622  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_619 -> m8_41  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_619 -> m8_450  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_619 -> m8_35  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_619 -> m8_42  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_619 -> m8_785  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_619 -> m8_631  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_619 -> m8_747  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_619 -> m8_822  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_620 -> m8_621  [key=0, style=solid];
m8_620 -> m8_622  [key=0, style=solid];
m8_621 -> m8_36  [key=2, style=dotted];
m8_621 -> m8_622  [key=0, style=solid];
m8_621 -> m8_338  [key=2, style=dotted];
m8_621 -> m8_339  [key=2, style=dotted];
m8_622 -> m8_623  [key=0, style=solid];
m8_622 -> m8_624  [key=2, style=dotted];
m8_623 -> m8_619  [color=blue, key=0, style=bold];
m8_160 -> m8_77  [color=darkorchid, key=3, label="Parameter variable object existingValue", style=bold];
m8_160 -> m8_11  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_160 -> m8_415  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_160 -> m8_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_431  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_88  [color=darkorchid, key=3, label="method methodReturn object CreateList", style=bold];
m8_160 -> m8_414  [key=0, style=solid];
m8_160 -> m8_418  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_160 -> m8_421  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_160 -> m8_422  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_423  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_160 -> m8_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_160 -> m8_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_428  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_160 -> m8_445  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_327  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_160 -> m8_342  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_160 -> m8_283  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_415 -> m8_416  [key=0, style=solid];
m8_415 -> m8_417  [key=0, style=solid];
m8_415 -> m8_277  [key=2, style=dotted];
m8_416 -> m8_448  [key=0, style=solid];
m8_416 -> m8_88  [key=2, style=dotted];
m8_417 -> m8_418  [key=0, style=solid];
m8_417 -> m8_404  [key=2, style=dotted];
m8_417 -> m8_419  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_417 -> m8_427  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_417 -> m8_429  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_417 -> m8_430  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_417 -> m8_431  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_417 -> m8_433  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_417 -> m8_434  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_417 -> m8_435  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_417 -> m8_436  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_417 -> m8_439  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_417 -> m8_444  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_417 -> m8_446  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_419 -> m8_420  [key=0, style=solid];
m8_419 -> m8_449  [key=2, style=dotted];
m8_419 -> m8_430  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_419 -> m8_431  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_419 -> m8_434  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_419 -> m8_436  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_419 -> m8_437  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_419 -> m8_440  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_419 -> m8_441  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_419 -> m8_442  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_419 -> m8_443  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_430 -> m8_432  [key=0, style=solid];
m8_430 -> m8_35  [key=2, style=dotted];
m8_431 -> m8_432  [key=0, style=solid];
m8_431 -> m8_450  [key=2, style=dotted];
m8_446 -> m8_447  [key=0, style=solid];
m8_446 -> m8_34  [key=2, style=dotted];
m8_446 -> m8_35  [key=2, style=dotted];
m8_422 -> m8_36  [key=2, style=dotted];
m8_422 -> m8_33  [key=2, style=dotted];
m8_422 -> m8_448  [key=0, style=solid];
m8_424 -> m8_36  [key=2, style=dotted];
m8_424 -> m8_33  [key=2, style=dotted];
m8_424 -> m8_448  [key=0, style=solid];
m8_426 -> m8_36  [key=2, style=dotted];
m8_426 -> m8_33  [key=2, style=dotted];
m8_426 -> m8_448  [key=0, style=solid];
m8_428 -> m8_36  [key=2, style=dotted];
m8_428 -> m8_33  [key=2, style=dotted];
m8_428 -> m8_448  [key=0, style=solid];
m8_445 -> m8_36  [key=2, style=dotted];
m8_445 -> m8_33  [key=2, style=dotted];
m8_445 -> m8_448  [key=0, style=solid];
m8_414 -> m8_415  [key=0, style=solid];
m8_414 -> m8_419  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m8_414 -> m8_35  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m8_418 -> m8_419  [key=0, style=solid];
m8_418 -> m8_444  [key=0, style=solid];
m8_427 -> m8_428  [key=0, style=solid];
m8_427 -> m8_429  [key=0, style=solid];
m8_429 -> m8_430  [key=0, style=solid];
m8_429 -> m8_431  [key=0, style=solid];
m8_433 -> m8_434  [key=0, style=solid];
m8_433 -> m8_435  [key=0, style=solid];
m8_434 -> m8_434  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_434 -> m8_443  [key=0, style=solid];
m8_434 -> m8_451  [key=2, style=dotted];
m8_434 -> m8_452  [key=2, style=dotted];
m8_435 -> m8_436  [key=0, style=solid];
m8_435 -> m8_439  [key=0, style=solid];
m8_436 -> m8_437  [key=0, style=solid];
m8_436 -> m8_453  [key=2, style=dotted];
m8_436 -> m8_438  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_439 -> m8_440  [key=0, style=solid];
m8_444 -> m8_446  [key=0, style=solid];
m8_444 -> m8_445  [key=0, style=solid];
m8_420 -> m8_429  [key=0, style=solid];
m8_420 -> m8_421  [key=0, style=solid];
m8_437 -> m8_438  [key=0, style=solid];
m8_437 -> m8_454  [key=2, style=dotted];
m8_440 -> m8_448  [key=0, style=solid];
m8_440 -> m8_281  [key=2, style=dotted];
m8_441 -> m8_442  [key=0, style=solid];
m8_441 -> m8_443  [key=0, style=solid];
m8_442 -> m8_448  [key=0, style=solid];
m8_443 -> m8_447  [key=0, style=solid];
m8_432 -> m8_433  [key=0, style=solid];
m8_432 -> m8_441  [key=0, style=solid];
m8_447 -> m8_448  [key=0, style=solid];
m8_447 -> m8_447  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_421 -> m8_422  [key=0, style=solid];
m8_421 -> m8_423  [key=0, style=solid];
m8_423 -> m8_424  [key=0, style=solid];
m8_423 -> m8_425  [key=0, style=solid];
m8_425 -> m8_426  [key=0, style=solid];
m8_425 -> m8_427  [key=0, style=solid];
m8_438 -> m8_443  [key=0, style=solid];
m8_448 -> m8_160  [color=blue, key=0, style=bold];
m8_277 -> m8_160  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_277 -> m8_159  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_277 -> m8_455  [key=0, style=solid];
m8_455 -> m8_456  [key=0, style=solid];
m8_456 -> m8_277  [color=blue, key=0, style=bold];
m8_505 -> m8_68  [color=darkorchid, key=3, label="method methodReturn bool ShouldSetPropertyValue", style=bold];
m8_505 -> m8_554  [key=0, style=solid];
m8_505 -> m8_556  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_505 -> m8_668  [color=darkorchid, key=3, label="method methodReturn bool ShouldSetPropertyValue", style=bold];
m8_505 -> m8_483  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m8_505 -> m8_558  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_505 -> m8_828  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m8_505 -> m8_486  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_505 -> m8_829  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_554 -> m8_555  [key=0, style=solid];
m8_554 -> m8_556  [key=0, style=solid];
m8_554 -> m8_538  [key=2, style=dotted];
m8_556 -> m8_557  [key=0, style=solid];
m8_556 -> m8_558  [key=0, style=solid];
m8_556 -> m8_538  [key=2, style=dotted];
m8_556 -> m8_540  [key=2, style=dotted];
m8_556 -> m8_542  [key=2, style=dotted];
m8_556 -> m8_543  [key=2, style=dotted];
m8_555 -> m8_561  [key=0, style=solid];
m8_557 -> m8_561  [key=0, style=solid];
m8_558 -> m8_559  [key=0, style=solid];
m8_558 -> m8_560  [key=0, style=solid];
m8_559 -> m8_561  [key=0, style=solid];
m8_560 -> m8_561  [key=0, style=solid];
m8_561 -> m8_505  [color=blue, key=0, style=bold];
m8_27 -> m8_2  [color=blue, key=0, style=bold];
m8_595 -> m8_605  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_595 -> m8_615  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_595 -> m8_616  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_595 -> m8_596  [key=0, style=solid];
m8_595 -> m8_597  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_595 -> m8_599  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_595 -> m8_601  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_595 -> m8_602  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_595 -> m8_604  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_595 -> m8_606  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_595 -> m8_607  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_595 -> m8_608  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_595 -> m8_611  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_595 -> m8_613  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_595 -> m8_614  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_605 -> m8_606  [key=0, style=solid];
m8_605 -> m8_611  [key=0, style=solid];
m8_615 -> m8_36  [key=2, style=dotted];
m8_615 -> m8_33  [key=2, style=dotted];
m8_615 -> m8_617  [key=0, style=solid];
m8_616 -> m8_36  [key=2, style=dotted];
m8_616 -> m8_33  [key=2, style=dotted];
m8_616 -> m8_617  [key=0, style=solid];
m8_602 -> m8_605  [key=0, style=solid];
m8_602 -> m8_603  [key=0, style=solid];
m8_606 -> m8_607  [key=0, style=solid];
m8_606 -> m8_594  [key=2, style=dotted];
m8_606 -> m8_608  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_606 -> m8_610  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_611 -> m8_612  [key=0, style=solid];
m8_611 -> m8_614  [key=0, style=solid];
m8_614 -> m8_615  [key=0, style=solid];
m8_614 -> m8_616  [key=0, style=solid];
m8_608 -> m8_40  [key=2, style=dotted];
m8_608 -> m8_608  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_608 -> m8_609  [key=0, style=solid];
m8_608 -> m8_610  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_596 -> m8_602  [key=0, style=solid];
m8_596 -> m8_596  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_596 -> m8_597  [key=0, style=solid];
m8_597 -> m8_598  [key=0, style=solid];
m8_597 -> m8_600  [key=0, style=solid];
m8_599 -> m8_617  [key=0, style=solid];
m8_599 -> m8_618  [key=2, style=dotted];
m8_601 -> m8_617  [key=0, style=solid];
m8_601 -> m8_281  [key=2, style=dotted];
m8_604 -> m8_617  [key=0, style=solid];
m8_604 -> m8_618  [key=2, style=dotted];
m8_607 -> m8_608  [key=0, style=solid];
m8_607 -> m8_609  [key=0, style=solid];
m8_613 -> m8_617  [key=0, style=solid];
m8_613 -> m8_618  [key=2, style=dotted];
m8_603 -> m8_617  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_603 -> m8_604  [key=0, style=solid];
m8_610 -> m8_617  [key=0, style=solid];
m8_612 -> m8_617  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_612 -> m8_613  [key=0, style=solid];
m8_598 -> m8_617  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_598 -> m8_599  [key=0, style=solid];
m8_600 -> m8_617  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_600 -> m8_601  [key=0, style=solid];
m8_609 -> m8_617  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_609 -> m8_610  [key=0, style=solid];
m8_617 -> m8_595  [color=blue, key=0, style=bold];
m8_279 -> m8_939  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_279 -> m8_941  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_279 -> m8_945  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_279 -> m8_159  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m8_279 -> m8_948  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_279 -> m8_949  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_279 -> m8_227  [color=darkorchid, key=3, label="Parameter variable bool createdFromNonDefaultCreator", style=bold];
m8_279 -> m8_935  [key=0, style=solid];
m8_279 -> m8_228  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract objectContract", style=bold];
m8_279 -> m8_936  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_279 -> m8_937  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_279 -> m8_940  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_279 -> m8_942  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_279 -> m8_943  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_279 -> m8_947  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_279 -> m8_200  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_279 -> m8_785  [color=darkorchid, key=3, label="method methodReturn object CreateNewObject", style=bold];
m8_939 -> m8_952  [key=0, style=solid];
m8_939 -> m8_785  [key=2, style=dotted];
m8_941 -> m8_942  [key=0, style=solid];
m8_941 -> m8_943  [key=0, style=solid];
m8_945 -> m8_952  [key=0, style=solid];
m8_945 -> m8_785  [key=2, style=dotted];
m8_948 -> m8_36  [key=2, style=dotted];
m8_948 -> m8_33  [key=2, style=dotted];
m8_948 -> m8_952  [key=0, style=solid];
m8_949 -> m8_36  [key=2, style=dotted];
m8_949 -> m8_33  [key=2, style=dotted];
m8_949 -> m8_952  [key=0, style=solid];
m8_935 -> m8_11  [color=darkorchid, key=3, label="Local variable object newObject", style=bold];
m8_935 -> m8_936  [key=0, style=solid];
m8_935 -> m8_946  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_935 -> m8_951  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_938 -> m8_939  [key=0, style=solid];
m8_936 -> m8_941  [key=0, style=solid];
m8_936 -> m8_937  [key=0, style=solid];
m8_942 -> m8_946  [key=0, style=solid];
m8_942 -> m8_594  [key=2, style=dotted];
m8_942 -> m8_951  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_943 -> m8_944  [key=0, style=solid];
m8_943 -> m8_946  [key=0, style=solid];
m8_944 -> m8_945  [key=0, style=solid];
m8_947 -> m8_948  [key=0, style=solid];
m8_947 -> m8_949  [key=0, style=solid];
m8_946 -> m8_947  [key=0, style=solid];
m8_946 -> m8_950  [key=0, style=solid];
m8_951 -> m8_952  [key=0, style=solid];
m8_937 -> m8_938  [key=0, style=solid];
m8_937 -> m8_940  [key=0, style=solid];
m8_940 -> m8_946  [key=0, style=solid];
m8_940 -> m8_951  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_940 -> m8_953  [key=2, style=dotted];
m8_940 -> m8_281  [key=2, style=dotted];
m8_950 -> m8_952  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_950 -> m8_951  [key=0, style=solid];
m8_952 -> m8_279  [color=blue, key=0, style=bold];
m8_887 -> m8_888  [key=0, style=solid];
m8_1007 -> m8_1008  [key=0, style=solid];
m8_1010 -> m8_1011  [key=0, style=solid];
m8_881 -> m8_882  [key=0, style=solid];
m8_884 -> m8_885  [key=0, style=solid];
m8_1009 -> m8_1007  [color=blue, key=0, style=bold];
m8_1008 -> m8_1009  [key=0, style=solid];
m8_1012 -> m8_1010  [color=blue, key=0, style=bold];
m8_1011 -> m8_1012  [key=0, style=solid];
m8_885 -> m8_886  [key=0, style=solid];
m8_883 -> m8_881  [color=blue, key=0, style=bold];
m8_882 -> m8_883  [key=0, style=solid];
m8_886 -> m8_884  [color=blue, key=0, style=bold];
m8_888 -> m8_889  [key=0, style=solid];
m8_889 -> m8_887  [color=blue, key=0, style=bold];
m8_870 -> m8_909  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_870 -> m8_913  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_870 -> m8_914  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_870 -> m8_918  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_870 -> m8_922  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_870 -> m8_930  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_870 -> m8_898  [key=0, style=solid];
m8_870 -> m8_900  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_870 -> m8_902  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_870 -> m8_903  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_870 -> m8_910  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_870 -> m8_911  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_870 -> m8_915  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_870 -> m8_916  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_870 -> m8_920  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_870 -> m8_921  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_870 -> m8_923  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_870 -> m8_927  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_870 -> m8_928  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_870 -> m8_785  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_870 -> m8_788  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m8_908 -> m8_43  [key=2, style=dotted];
m8_908 -> m8_909  [key=0, style=solid];
m8_909 -> m8_74  [key=2, style=dotted];
m8_909 -> m8_910  [key=0, style=solid];
m8_909 -> m8_912  [color=darkseagreen4, key=1, label=propertyConverter, style=dashed];
m8_909 -> m8_913  [color=darkseagreen4, key=1, label=propertyConverter, style=dashed];
m8_913 -> m8_76  [key=2, style=dotted];
m8_913 -> m8_928  [key=0, style=solid];
m8_914 -> m8_77  [key=2, style=dotted];
m8_914 -> m8_928  [key=0, style=solid];
m8_917 -> m8_918  [key=0, style=solid];
m8_917 -> m8_919  [key=0, style=solid];
m8_918 -> m8_919  [key=0, style=solid];
m8_918 -> m8_282  [key=2, style=dotted];
m8_918 -> m8_338  [key=2, style=dotted];
m8_918 -> m8_339  [key=2, style=dotted];
m8_919 -> m8_920  [key=0, style=solid];
m8_919 -> m8_921  [key=0, style=solid];
m8_922 -> m8_928  [key=0, style=solid];
m8_922 -> m8_934  [key=2, style=dotted];
m8_930 -> m8_931  [key=0, style=solid];
m8_930 -> m8_681  [key=2, style=dotted];
m8_905 -> m8_908  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_905 -> m8_909  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_905 -> m8_913  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_905 -> m8_914  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_905 -> m8_906  [key=0, style=solid];
m8_905 -> m8_907  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_905 -> m8_910  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_910 -> m8_75  [key=2, style=dotted];
m8_910 -> m8_911  [key=0, style=solid];
m8_910 -> m8_912  [key=0, style=solid];
m8_911 -> m8_36  [key=2, style=dotted];
m8_911 -> m8_33  [key=2, style=dotted];
m8_911 -> m8_932  [key=0, style=solid];
m8_916 -> m8_36  [key=2, style=dotted];
m8_916 -> m8_33  [key=2, style=dotted];
m8_916 -> m8_932  [key=0, style=solid];
m8_920 -> m8_33  [key=2, style=dotted];
m8_920 -> m8_932  [key=0, style=solid];
m8_920 -> m8_282  [key=2, style=dotted];
m8_927 -> m8_33  [key=2, style=dotted];
m8_927 -> m8_932  [key=0, style=solid];
m8_899 -> m8_68  [color=darkorchid, key=3, label="Local variable bool exit", style=bold];
m8_899 -> m8_900  [key=0, style=solid];
m8_907 -> m8_908  [key=0, style=solid];
m8_907 -> m8_909  [key=0, style=solid];
m8_912 -> m8_913  [key=0, style=solid];
m8_912 -> m8_914  [key=0, style=solid];
m8_903 -> m8_913  [color=darkseagreen4, key=1, label=creatorPropertyContext, style=dashed];
m8_903 -> m8_914  [color=darkseagreen4, key=1, label=creatorPropertyContext, style=dashed];
m8_903 -> m8_922  [color=darkseagreen4, key=1, label=creatorPropertyContext, style=dashed];
m8_903 -> m8_905  [color=darkseagreen4, key=1, label=creatorPropertyContext, style=dashed];
m8_903 -> m8_38  [key=2, style=dotted];
m8_903 -> m8_904  [key=0, style=solid];
m8_903 -> m8_872  [key=2, style=dotted];
m8_903 -> m8_933  [key=2, style=dotted];
m8_928 -> m8_78  [key=2, style=dotted];
m8_928 -> m8_899  [key=0, style=solid];
m8_928 -> m8_929  [key=0, style=solid];
m8_915 -> m8_917  [key=0, style=solid];
m8_915 -> m8_916  [key=0, style=solid];
m8_915 -> m8_78  [key=2, style=dotted];
m8_902 -> m8_918  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_902 -> m8_911  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_902 -> m8_916  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_902 -> m8_920  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_902 -> m8_38  [key=2, style=dotted];
m8_902 -> m8_903  [key=0, style=solid];
m8_921 -> m8_922  [key=0, style=solid];
m8_921 -> m8_923  [key=0, style=solid];
m8_929 -> m8_930  [key=0, style=solid];
m8_929 -> m8_931  [key=0, style=solid];
m8_931 -> m8_932  [key=0, style=solid];
m8_898 -> m8_899  [key=0, style=solid];
m8_898 -> m8_931  [color=darkseagreen4, key=1, label=propertyValues, style=dashed];
m8_898 -> m8_740  [key=2, style=dotted];
m8_898 -> m8_904  [color=darkseagreen4, key=1, label=propertyValues, style=dashed];
m8_900 -> m8_927  [key=0, style=solid];
m8_900 -> m8_901  [key=0, style=solid];
m8_900 -> m8_924  [key=0, style=solid];
m8_900 -> m8_925  [key=0, style=solid];
m8_923 -> m8_928  [key=0, style=solid];
m8_923 -> m8_340  [key=2, style=dotted];
m8_904 -> m8_905  [key=0, style=solid];
m8_904 -> m8_873  [key=2, style=dotted];
m8_906 -> m8_907  [key=0, style=solid];
m8_906 -> m8_915  [key=0, style=solid];
m8_924 -> m8_928  [key=0, style=solid];
m8_926 -> m8_928  [key=0, style=solid];
m8_926 -> m8_929  [color=darkseagreen4, key=1, label=exit, style=dashed];
m8_901 -> m8_902  [key=0, style=solid];
m8_925 -> m8_926  [key=0, style=solid];
m8_932 -> m8_870  [color=blue, key=0, style=bold];
m8_450 -> m8_417  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonArrayContract contract", style=bold];
m8_450 -> m8_419  [color=darkorchid, key=3, label="Parameter variable System.Collections.IList list", style=bold];
m8_450 -> m8_684  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_450 -> m8_685  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_450 -> m8_686  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_450 -> m8_687  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_450 -> m8_703  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_450 -> m8_704  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_450 -> m8_708  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_450 -> m8_709  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_450 -> m8_730  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_450 -> m8_731  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_450 -> m8_450  [color=darkorchid, key=3, label="method methodReturn object PopulateMultidimensionalArray", style=bold];
m8_450 -> m8_682  [key=0, style=solid];
m8_450 -> m8_683  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_450 -> m8_690  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_450 -> m8_691  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_450 -> m8_693  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_450 -> m8_695  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_450 -> m8_696  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_450 -> m8_707  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_450 -> m8_711  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_450 -> m8_714  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_450 -> m8_715  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_450 -> m8_727  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_450 -> m8_732  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_450 -> m8_160  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_684 -> m8_685  [key=0, style=solid];
m8_684 -> m8_544  [key=2, style=dotted];
m8_685 -> m8_686  [key=0, style=solid];
m8_685 -> m8_619  [key=2, style=dotted];
m8_686 -> m8_43  [key=2, style=dotted];
m8_686 -> m8_687  [key=0, style=solid];
m8_686 -> m8_695  [color=darkseagreen4, key=1, label=collectionItemContract, style=dashed];
m8_686 -> m8_704  [color=darkseagreen4, key=1, label=collectionItemContract, style=dashed];
m8_687 -> m8_74  [key=2, style=dotted];
m8_687 -> m8_687  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_687 -> m8_688  [key=0, style=solid];
m8_687 -> m8_695  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m8_687 -> m8_702  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m8_687 -> m8_703  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m8_703 -> m8_76  [key=2, style=dotted];
m8_703 -> m8_705  [key=0, style=solid];
m8_704 -> m8_77  [key=2, style=dotted];
m8_704 -> m8_705  [key=0, style=solid];
m8_708 -> m8_709  [key=0, style=solid];
m8_708 -> m8_713  [key=0, style=solid];
m8_708 -> m8_79  [key=2, style=dotted];
m8_709 -> m8_80  [key=2, style=dotted];
m8_709 -> m8_710  [key=0, style=solid];
m8_730 -> m8_731  [key=0, style=solid];
m8_730 -> m8_681  [key=2, style=dotted];
m8_731 -> m8_732  [key=0, style=solid];
m8_731 -> m8_625  [key=2, style=dotted];
m8_701 -> m8_77  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m8_701 -> m8_76  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m8_701 -> m8_702  [key=0, style=solid];
m8_695 -> m8_75  [key=2, style=dotted];
m8_695 -> m8_696  [key=0, style=solid];
m8_695 -> m8_729  [key=0, style=solid];
m8_727 -> m8_33  [key=2, style=dotted];
m8_727 -> m8_733  [key=0, style=solid];
m8_692 -> m8_68  [color=darkorchid, key=3, label="Local variable bool finished", style=bold];
m8_692 -> m8_693  [key=0, style=solid];
m8_692 -> m8_728  [color=darkseagreen4, key=1, label=finished, style=dashed];
m8_692 -> m8_729  [color=darkseagreen4, key=1, label=finished, style=dashed];
m8_693 -> m8_709  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m8_693 -> m8_694  [key=0, style=solid];
m8_693 -> m8_707  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m8_688 -> m8_11  [color=darkorchid, key=3, label="Local variable int? previousErrorIndex", style=bold];
m8_688 -> m8_689  [key=0, style=solid];
m8_688 -> m8_710  [color=darkseagreen4, key=1, label=previousErrorIndex, style=dashed];
m8_683 -> m8_684  [key=0, style=solid];
m8_683 -> m8_685  [key=0, style=solid];
m8_702 -> m8_703  [key=0, style=solid];
m8_702 -> m8_704  [key=0, style=solid];
m8_705 -> m8_706  [key=0, style=solid];
m8_705 -> m8_728  [key=0, style=solid];
m8_705 -> m8_738  [key=2, style=dotted];
m8_707 -> m8_708  [key=0, style=solid];
m8_707 -> m8_739  [key=2, style=dotted];
m8_707 -> m8_710  [color=darkseagreen4, key=1, label=errorPosition, style=dashed];
m8_707 -> m8_712  [color=darkseagreen4, key=1, label=errorPosition, style=dashed];
m8_713 -> m8_733  [key=0, style=solid];
m8_710 -> m8_710  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_710 -> m8_711  [key=0, style=solid];
m8_710 -> m8_712  [key=0, style=solid];
m8_729 -> m8_730  [key=0, style=solid];
m8_729 -> m8_731  [key=0, style=solid];
m8_732 -> m8_733  [key=0, style=solid];
m8_691 -> m8_450  [color=darkorchid, key=3, label="Local variable System.Collections.IList currentList", style=bold];
m8_691 -> m8_692  [key=0, style=solid];
m8_691 -> m8_718  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m8_691 -> m8_717  [color=darkorchid, key=3, label="Local variable System.Collections.IList currentList", style=bold];
m8_682 -> m8_683  [key=0, style=solid];
m8_682 -> m8_451  [key=2, style=dotted];
m8_682 -> m8_694  [color=darkseagreen4, key=1, label=rank, style=dashed];
m8_690 -> m8_691  [key=0, style=solid];
m8_690 -> m8_735  [key=2, style=dotted];
m8_696 -> m8_701  [key=0, style=solid];
m8_696 -> m8_697  [key=0, style=solid];
m8_711 -> m8_733  [key=0, style=solid];
m8_711 -> m8_403  [key=2, style=dotted];
m8_714 -> m8_78  [key=2, style=dotted];
m8_714 -> m8_729  [key=0, style=solid];
m8_714 -> m8_715  [key=0, style=solid];
m8_715 -> m8_727  [key=0, style=solid];
m8_715 -> m8_716  [key=0, style=solid];
m8_715 -> m8_721  [key=0, style=solid];
m8_715 -> m8_726  [key=0, style=solid];
m8_694 -> m8_695  [key=0, style=solid];
m8_694 -> m8_714  [key=0, style=solid];
m8_728 -> m8_692  [key=0, style=solid];
m8_728 -> m8_729  [key=0, style=solid];
m8_689 -> m8_690  [key=0, style=solid];
m8_689 -> m8_694  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m8_689 -> m8_734  [key=2, style=dotted];
m8_689 -> m8_698  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m8_689 -> m8_699  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m8_689 -> m8_719  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m8_689 -> m8_722  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m8_689 -> m8_723  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m8_689 -> m8_724  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m8_699 -> m8_705  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m8_699 -> m8_700  [key=0, style=solid];
m8_699 -> m8_737  [key=2, style=dotted];
m8_706 -> m8_707  [key=0, style=solid];
m8_712 -> m8_728  [key=0, style=solid];
m8_700 -> m8_710  [color=darkseagreen4, key=1, label=previousErrorIndex, style=dashed];
m8_700 -> m8_728  [key=0, style=solid];
m8_700 -> m8_706  [key=0, style=solid];
m8_725 -> m8_729  [color=darkseagreen4, key=1, label=finished, style=dashed];
m8_725 -> m8_728  [key=0, style=solid];
m8_718 -> m8_738  [key=2, style=dotted];
m8_718 -> m8_719  [key=0, style=solid];
m8_717 -> m8_718  [key=0, style=solid];
m8_717 -> m8_717  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_717 -> m8_740  [key=2, style=dotted];
m8_717 -> m8_719  [color=darkseagreen4, key=1, label=newList, style=dashed];
m8_717 -> m8_720  [color=darkseagreen4, key=1, label=newList, style=dashed];
m8_697 -> m8_698  [key=0, style=solid];
m8_716 -> m8_717  [key=0, style=solid];
m8_721 -> m8_722  [key=0, style=solid];
m8_726 -> m8_728  [key=0, style=solid];
m8_724 -> m8_728  [key=0, style=solid];
m8_724 -> m8_737  [key=2, style=dotted];
m8_720 -> m8_728  [key=0, style=solid];
m8_698 -> m8_699  [key=0, style=solid];
m8_698 -> m8_736  [key=2, style=dotted];
m8_719 -> m8_735  [key=2, style=dotted];
m8_719 -> m8_720  [key=0, style=solid];
m8_722 -> m8_723  [key=0, style=solid];
m8_722 -> m8_736  [key=2, style=dotted];
m8_723 -> m8_725  [key=0, style=solid];
m8_723 -> m8_724  [key=0, style=solid];
m8_733 -> m8_450  [color=blue, key=0, style=bold];
m8_77 -> m8_51  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_77 -> m8_48  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m8_77 -> m8_126  [key=0, style=solid];
m8_77 -> m8_127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_77 -> m8_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_77 -> m8_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_77 -> m8_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_77 -> m8_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_77 -> m8_140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_77 -> m8_141  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_77 -> m8_143  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_77 -> m8_145  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_77 -> m8_147  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_77 -> m8_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_77 -> m8_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_77 -> m8_153  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_77 -> m8_155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_77 -> m8_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_77 -> m8_157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_77 -> m8_159  [color=darkorchid, key=3, label="method methodReturn object CreateValueInternal", style=bold];
m8_77 -> m8_41  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember", style=bold];
m8_77 -> m8_450  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember", style=bold];
m8_77 -> m8_35  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember", style=bold];
m8_77 -> m8_870  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember", style=bold];
m8_77 -> m8_934  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember", style=bold];
m8_77 -> m8_201  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m8_77 -> m8_11  [color=darkorchid, key=3, label="method methodReturn object CreateValueInternal", style=bold];
m8_77 -> m8_124  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_77 -> m8_686  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_77 -> m8_905  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty member", style=bold];
m8_77 -> m8_88  [color=darkorchid, key=3, label="method methodReturn object CreateValueInternal", style=bold];
m8_77 -> m8_160  [color=darkorchid, key=3, label="method methodReturn object CreateValueInternal", style=bold];
m8_77 -> m8_161  [color=darkorchid, key=3, label="method methodReturn object CreateValueInternal", style=bold];
m8_127 -> m8_158  [key=0, style=solid];
m8_127 -> m8_88  [key=2, style=dotted];
m8_130 -> m8_158  [key=0, style=solid];
m8_130 -> m8_159  [key=2, style=dotted];
m8_132 -> m8_158  [key=0, style=solid];
m8_132 -> m8_160  [key=2, style=dotted];
m8_138 -> m8_158  [key=0, style=solid];
m8_138 -> m8_161  [key=2, style=dotted];
m8_145 -> m8_158  [key=0, style=solid];
m8_145 -> m8_161  [key=2, style=dotted];
m8_148 -> m8_158  [key=0, style=solid];
m8_148 -> m8_161  [key=2, style=dotted];
m8_151 -> m8_158  [key=0, style=solid];
m8_151 -> m8_161  [key=2, style=dotted];
m8_126 -> m8_127  [key=0, style=solid];
m8_126 -> m8_128  [key=0, style=solid];
m8_128 -> m8_129  [key=0, style=solid];
m8_128 -> m8_131  [key=0, style=solid];
m8_128 -> m8_133  [key=0, style=solid];
m8_128 -> m8_139  [key=0, style=solid];
m8_128 -> m8_146  [key=0, style=solid];
m8_128 -> m8_149  [key=0, style=solid];
m8_128 -> m8_152  [key=0, style=solid];
m8_128 -> m8_154  [key=0, style=solid];
m8_128 -> m8_155  [key=0, style=solid];
m8_140 -> m8_145  [color=darkseagreen4, key=1, label=s, style=dashed];
m8_140 -> m8_141  [key=0, style=solid];
m8_140 -> m8_144  [color=darkseagreen4, key=1, label=s, style=dashed];
m8_141 -> m8_162  [key=2, style=dotted];
m8_141 -> m8_142  [key=0, style=solid];
m8_141 -> m8_143  [key=0, style=solid];
m8_143 -> m8_145  [key=0, style=solid];
m8_143 -> m8_144  [key=0, style=solid];
m8_147 -> m8_148  [key=0, style=solid];
m8_147 -> m8_38  [key=2, style=dotted];
m8_153 -> m8_158  [key=0, style=solid];
m8_153 -> m8_164  [key=2, style=dotted];
m8_155 -> m8_33  [key=2, style=dotted];
m8_155 -> m8_158  [key=0, style=solid];
m8_156 -> m8_127  [key=0, style=solid];
m8_156 -> m8_157  [key=0, style=solid];
m8_156 -> m8_78  [key=2, style=dotted];
m8_157 -> m8_33  [key=2, style=dotted];
m8_157 -> m8_158  [key=0, style=solid];
m8_129 -> m8_130  [key=0, style=solid];
m8_131 -> m8_132  [key=0, style=solid];
m8_137 -> m8_138  [key=0, style=solid];
m8_150 -> m8_151  [key=0, style=solid];
m8_144 -> m8_158  [key=0, style=solid];
m8_144 -> m8_163  [key=2, style=dotted];
m8_142 -> m8_158  [key=0, style=solid];
m8_142 -> m8_142  [color=darkorchid, key=3, label="Local variable string s", style=bold];
m8_133 -> m8_134  [key=0, style=solid];
m8_139 -> m8_140  [key=0, style=solid];
m8_146 -> m8_147  [key=0, style=solid];
m8_149 -> m8_150  [key=0, style=solid];
m8_152 -> m8_153  [key=0, style=solid];
m8_154 -> m8_156  [key=0, style=solid];
m8_136 -> m8_137  [key=0, style=solid];
m8_134 -> m8_135  [key=0, style=solid];
m8_135 -> m8_136  [key=0, style=solid];
m8_158 -> m8_77  [color=blue, key=0, style=bold];
m8_954 -> m8_955  [key=0, style=solid];
m8_954 -> m8_619  [key=2, style=dotted];
m8_955 -> m8_956  [key=0, style=solid];
m8_955 -> m8_540  [key=2, style=dotted];
m8_955 -> m8_1003  [key=2, style=dotted];
m8_955 -> m8_1007  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_955 -> m8_1010  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_955 -> m8_974  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m8_955 -> m8_981  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m8_955 -> m8_995  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m8_955 -> m8_996  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m8_957 -> m8_958  [key=0, style=solid];
m8_957 -> m8_544  [key=2, style=dotted];
m8_963 -> m8_964  [key=0, style=solid];
m8_963 -> m8_992  [key=0, style=solid];
m8_963 -> m8_122  [key=2, style=dotted];
m8_966 -> m8_967  [key=0, style=solid];
m8_966 -> m8_968  [key=0, style=solid];
m8_967 -> m8_968  [key=0, style=solid];
m8_967 -> m8_282  [key=2, style=dotted];
m8_967 -> m8_338  [key=2, style=dotted];
m8_967 -> m8_339  [key=2, style=dotted];
m8_968 -> m8_969  [key=0, style=solid];
m8_968 -> m8_970  [key=0, style=solid];
m8_971 -> m8_992  [key=0, style=solid];
m8_971 -> m8_1004  [key=2, style=dotted];
m8_972 -> m8_973  [key=0, style=solid];
m8_972 -> m8_976  [key=0, style=solid];
m8_972 -> m8_1005  [key=2, style=dotted];
m8_974 -> m8_975  [key=0, style=solid];
m8_974 -> m8_1006  [key=2, style=dotted];
m8_975 -> m8_984  [key=0, style=solid];
m8_975 -> m8_992  [key=0, style=solid];
m8_975 -> m8_1004  [key=2, style=dotted];
m8_977 -> m8_43  [key=2, style=dotted];
m8_977 -> m8_978  [key=0, style=solid];
m8_978 -> m8_74  [key=2, style=dotted];
m8_978 -> m8_979  [key=0, style=solid];
m8_978 -> m8_982  [color=darkseagreen4, key=1, label=propertyConverter, style=dashed];
m8_981 -> m8_982  [key=0, style=solid];
m8_981 -> m8_1006  [key=2, style=dotted];
m8_982 -> m8_983  [key=0, style=solid];
m8_982 -> m8_984  [key=0, style=solid];
m8_982 -> m8_992  [key=0, style=solid];
m8_982 -> m8_483  [key=2, style=dotted];
m8_983 -> m8_984  [key=0, style=solid];
m8_983 -> m8_992  [key=0, style=solid];
m8_983 -> m8_1004  [key=2, style=dotted];
m8_985 -> m8_986  [key=0, style=solid];
m8_985 -> m8_987  [key=0, style=solid];
m8_985 -> m8_79  [key=2, style=dotted];
m8_986 -> m8_80  [key=2, style=dotted];
m8_986 -> m8_992  [key=0, style=solid];
m8_994 -> m8_995  [key=0, style=solid];
m8_994 -> m8_681  [key=2, style=dotted];
m8_999 -> m8_996  [key=0, style=solid];
m8_999 -> m8_880  [key=2, style=dotted];
m8_1000 -> m8_1001  [key=0, style=solid];
m8_1000 -> m8_625  [key=2, style=dotted];
m8_979 -> m8_75  [key=2, style=dotted];
m8_979 -> m8_981  [key=0, style=solid];
m8_979 -> m8_980  [key=0, style=solid];
m8_980 -> m8_36  [key=2, style=dotted];
m8_980 -> m8_33  [key=2, style=dotted];
m8_980 -> m8_992  [key=0, style=solid];
m8_969 -> m8_33  [key=2, style=dotted];
m8_969 -> m8_992  [key=0, style=solid];
m8_969 -> m8_282  [key=2, style=dotted];
m8_991 -> m8_33  [key=2, style=dotted];
m8_991 -> m8_1002  [key=0, style=solid];
m8_959 -> m8_68  [color=darkorchid, key=3, label="Local variable bool finished", style=bold];
m8_959 -> m8_960  [key=0, style=solid];
m8_956 -> m8_957  [key=0, style=solid];
m8_956 -> m8_958  [key=0, style=solid];
m8_995 -> m8_1000  [key=0, style=solid];
m8_995 -> m8_996  [key=0, style=solid];
m8_996 -> m8_1000  [key=0, style=solid];
m8_996 -> m8_997  [key=0, style=solid];
m8_958 -> m8_986  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m8_958 -> m8_999  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m8_958 -> m8_959  [key=0, style=solid];
m8_962 -> m8_963  [key=0, style=solid];
m8_962 -> m8_967  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_962 -> m8_971  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_962 -> m8_975  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_962 -> m8_983  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_962 -> m8_985  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_962 -> m8_980  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_962 -> m8_969  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_962 -> m8_38  [key=2, style=dotted];
m8_962 -> m8_964  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_964 -> m8_972  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_964 -> m8_974  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_964 -> m8_977  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_964 -> m8_978  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_964 -> m8_981  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_964 -> m8_982  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_964 -> m8_979  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_964 -> m8_965  [key=0, style=solid];
m8_964 -> m8_933  [key=2, style=dotted];
m8_964 -> m8_976  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_992 -> m8_78  [key=2, style=dotted];
m8_992 -> m8_959  [key=0, style=solid];
m8_992 -> m8_993  [key=0, style=solid];
m8_965 -> m8_966  [key=0, style=solid];
m8_965 -> m8_972  [key=0, style=solid];
m8_970 -> m8_971  [key=0, style=solid];
m8_970 -> m8_78  [key=2, style=dotted];
m8_970 -> m8_992  [key=0, style=solid];
m8_973 -> m8_974  [key=0, style=solid];
m8_973 -> m8_78  [key=2, style=dotted];
m8_973 -> m8_992  [key=0, style=solid];
m8_976 -> m8_977  [key=0, style=solid];
m8_976 -> m8_978  [key=0, style=solid];
m8_984 -> m8_985  [key=0, style=solid];
m8_987 -> m8_1002  [key=0, style=solid];
m8_993 -> m8_994  [key=0, style=solid];
m8_993 -> m8_995  [key=0, style=solid];
m8_997 -> m8_999  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_997 -> m8_997  [color=darkseagreen4, key=1, label=propertyPresence, style=dashed];
m8_997 -> m8_998  [key=0, style=solid];
m8_998 -> m8_999  [key=0, style=solid];
m8_998 -> m8_998  [color=darkseagreen4, key=1, label=propertyPresence, style=dashed];
m8_1001 -> m8_1002  [key=0, style=solid];
m8_960 -> m8_991  [key=0, style=solid];
m8_960 -> m8_961  [key=0, style=solid];
m8_960 -> m8_988  [key=0, style=solid];
m8_960 -> m8_990  [key=0, style=solid];
m8_961 -> m8_962  [key=0, style=solid];
m8_990 -> m8_992  [key=0, style=solid];
m8_989 -> m8_992  [key=0, style=solid];
m8_989 -> m8_993  [color=darkseagreen4, key=1, label=finished, style=dashed];
m8_988 -> m8_989  [key=0, style=solid];
m8_1002 -> m8_42  [color=blue, key=0, style=bold];
m8_1004 -> m8_1033  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_1004 -> m8_42  [color=darkorchid, key=3, label="Parameter variable object o", style=bold];
m8_1004 -> m8_1036  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_1004 -> m8_962  [color=darkorchid, key=3, label="Parameter variable string memberName", style=bold];
m8_1004 -> m8_1032  [key=0, style=solid];
m8_1004 -> m8_1034  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_1004 -> m8_1037  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_1033 -> m8_1034  [key=0, style=solid];
m8_1033 -> m8_934  [key=2, style=dotted];
m8_1036 -> m8_36  [key=2, style=dotted];
m8_1036 -> m8_1038  [key=0, style=solid];
m8_1036 -> m8_403  [key=2, style=dotted];
m8_1032 -> m8_1033  [key=0, style=solid];
m8_1032 -> m8_1037  [key=0, style=solid];
m8_1034 -> m8_1035  [key=0, style=solid];
m8_1034 -> m8_1038  [key=0, style=solid];
m8_1034 -> m8_878  [key=2, style=dotted];
m8_1035 -> m8_1036  [key=0, style=solid];
m8_1037 -> m8_1038  [key=0, style=solid];
m8_1037 -> m8_340  [key=2, style=dotted];
m8_1038 -> m8_1004  [color=blue, key=0, style=bold];
m8_122 -> m8_68  [color=darkorchid, key=3, label="method methodReturn bool CheckPropertyName", style=bold];
m8_122 -> m8_668  [color=darkorchid, key=3, label="method methodReturn bool CheckPropertyName", style=bold];
m8_122 -> m8_1022  [key=0, style=solid];
m8_122 -> m8_41  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_122 -> m8_42  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_122 -> m8_1023  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_122 -> m8_1028  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_122 -> m8_104  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_122 -> m8_109  [color=darkorchid, key=3, label="Parameter variable string memberName", style=bold];
m8_122 -> m8_962  [color=darkorchid, key=3, label="Parameter variable string memberName", style=bold];
m8_1022 -> m8_1023  [key=0, style=solid];
m8_1022 -> m8_1030  [key=0, style=solid];
m8_1023 -> m8_1024  [key=0, style=solid];
m8_1030 -> m8_1031  [key=0, style=solid];
m8_1028 -> m8_1029  [key=0, style=solid];
m8_1028 -> m8_340  [key=2, style=dotted];
m8_1024 -> m8_1025  [key=0, style=solid];
m8_1029 -> m8_1031  [key=0, style=solid];
m8_1027 -> m8_1028  [key=0, style=solid];
m8_1025 -> m8_1026  [key=0, style=solid];
m8_1026 -> m8_1027  [key=0, style=solid];
m8_1031 -> m8_122  [color=blue, key=0, style=bold];
m8_168 -> m8_159  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_168 -> m8_169  [key=0, style=solid];
m8_168 -> m8_172  [color=darkorchid, key=3, label="method methodReturn string GetExpectedDescription", style=bold];
m8_168 -> m8_174  [color=darkorchid, key=3, label="method methodReturn string GetExpectedDescription", style=bold];
m8_168 -> m8_176  [color=darkorchid, key=3, label="method methodReturn string GetExpectedDescription", style=bold];
m8_168 -> m8_178  [color=darkorchid, key=3, label="method methodReturn string GetExpectedDescription", style=bold];
m8_168 -> m8_404  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_169 -> m8_170  [key=0, style=solid];
m8_169 -> m8_173  [key=0, style=solid];
m8_169 -> m8_175  [key=0, style=solid];
m8_169 -> m8_177  [key=0, style=solid];
m8_169 -> m8_179  [key=0, style=solid];
m8_172 -> m8_180  [key=0, style=solid];
m8_174 -> m8_180  [key=0, style=solid];
m8_176 -> m8_180  [key=0, style=solid];
m8_178 -> m8_180  [key=0, style=solid];
m8_179 -> m8_180  [key=0, style=solid];
m8_179 -> m8_181  [key=2, style=dotted];
m8_170 -> m8_171  [key=0, style=solid];
m8_173 -> m8_174  [key=0, style=solid];
m8_175 -> m8_176  [key=0, style=solid];
m8_177 -> m8_178  [key=0, style=solid];
m8_171 -> m8_172  [key=0, style=solid];
m8_180 -> m8_168  [color=blue, key=0, style=bold];
m8_508 -> m8_74  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter propertyConverter", style=bold];
m8_508 -> m8_43  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract propertyContract", style=bold];
m8_508 -> m8_68  [color=darkorchid, key=3, label="method methodReturn bool CalculatePropertyDetails", style=bold];
m8_508 -> m8_517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_508 -> m8_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_508 -> m8_527  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_508 -> m8_529  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_508 -> m8_535  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_508 -> m8_668  [color=darkorchid, key=3, label="method methodReturn bool CalculatePropertyDetails", style=bold];
m8_508 -> m8_509  [key=0, style=solid];
m8_508 -> m8_513  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_508 -> m8_515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_508 -> m8_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_508 -> m8_519  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_508 -> m8_520  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_508 -> m8_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_508 -> m8_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_508 -> m8_534  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_508 -> m8_537  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.JsonConverter", style=dashed];
m8_517 -> m8_43  [key=2, style=dotted];
m8_517 -> m8_518  [key=0, style=solid];
m8_518 -> m8_519  [key=0, style=solid];
m8_518 -> m8_538  [key=2, style=dotted];
m8_523 -> m8_43  [key=2, style=dotted];
m8_523 -> m8_524  [key=0, style=solid];
m8_523 -> m8_30  [key=2, style=dotted];
m8_527 -> m8_528  [key=0, style=solid];
m8_527 -> m8_529  [key=0, style=solid];
m8_527 -> m8_538  [key=2, style=dotted];
m8_529 -> m8_530  [key=0, style=solid];
m8_529 -> m8_531  [key=0, style=solid];
m8_529 -> m8_538  [key=2, style=dotted];
m8_529 -> m8_540  [key=2, style=dotted];
m8_529 -> m8_541  [key=2, style=dotted];
m8_529 -> m8_542  [key=2, style=dotted];
m8_529 -> m8_543  [key=2, style=dotted];
m8_533 -> m8_43  [key=2, style=dotted];
m8_533 -> m8_534  [key=0, style=solid];
m8_533 -> m8_30  [key=2, style=dotted];
m8_533 -> m8_535  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_533 -> m8_537  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_535 -> m8_74  [key=2, style=dotted];
m8_535 -> m8_536  [key=0, style=solid];
m8_535 -> m8_537  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.JsonConverter", style=dashed];
m8_516 -> m8_517  [key=0, style=solid];
m8_516 -> m8_518  [key=0, style=solid];
m8_519 -> m8_520  [key=0, style=solid];
m8_519 -> m8_525  [key=0, style=solid];
m8_520 -> m8_523  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_520 -> m8_533  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_520 -> m8_521  [key=0, style=solid];
m8_520 -> m8_502  [key=2, style=dotted];
m8_520 -> m8_522  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_520 -> m8_531  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_520 -> m8_537  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_522 -> m8_523  [key=0, style=solid];
m8_522 -> m8_522  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_522 -> m8_525  [key=0, style=solid];
m8_524 -> m8_525  [key=0, style=solid];
m8_524 -> m8_539  [key=2, style=dotted];
m8_524 -> m8_537  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_515 -> m8_527  [color=darkseagreen4, key=1, label=tokenType, style=dashed];
m8_515 -> m8_529  [color=darkseagreen4, key=1, label=tokenType, style=dashed];
m8_515 -> m8_516  [key=0, style=solid];
m8_515 -> m8_519  [color=darkseagreen4, key=1, label=tokenType, style=dashed];
m8_525 -> m8_527  [key=0, style=solid];
m8_525 -> m8_526  [key=0, style=solid];
m8_528 -> m8_537  [key=0, style=solid];
m8_530 -> m8_537  [key=0, style=solid];
m8_531 -> m8_533  [key=0, style=solid];
m8_531 -> m8_532  [key=0, style=solid];
m8_509 -> m8_533  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_509 -> m8_531  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_509 -> m8_510  [key=0, style=solid];
m8_509 -> m8_537  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_534 -> m8_535  [key=0, style=solid];
m8_534 -> m8_536  [key=0, style=solid];
m8_536 -> m8_537  [key=0, style=solid];
m8_513 -> m8_515  [key=0, style=solid];
m8_513 -> m8_514  [key=0, style=solid];
m8_532 -> m8_537  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_532 -> m8_536  [key=0, style=solid];
m8_521 -> m8_522  [key=0, style=solid];
m8_521 -> m8_537  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_510 -> m8_525  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_510 -> m8_537  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_510 -> m8_511  [key=0, style=solid];
m8_526 -> m8_537  [key=0, style=solid];
m8_512 -> m8_537  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_512 -> m8_513  [key=0, style=solid];
m8_514 -> m8_537  [key=0, style=solid];
m8_511 -> m8_512  [key=0, style=solid];
m8_537 -> m8_508  [color=blue, key=0, style=bold];
m8_853 -> m8_854  [key=0, style=solid];
m8_787 -> m8_788  [key=0, style=solid];
m8_787 -> m8_540  [key=2, style=dotted];
m8_787 -> m8_793  [color=darkseagreen4, key=1, label=trackPresence, style=dashed];
m8_787 -> m8_799  [color=darkseagreen4, key=1, label=trackPresence, style=dashed];
m8_787 -> m8_813  [color=darkseagreen4, key=1, label=trackPresence, style=dashed];
m8_787 -> m8_860  [color=darkseagreen4, key=1, label=trackPresence, style=dashed];
m8_789 -> m8_790  [key=0, style=solid];
m8_789 -> m8_792  [key=0, style=solid];
m8_791 -> m8_792  [key=0, style=solid];
m8_791 -> m8_282  [key=2, style=dotted];
m8_791 -> m8_338  [key=2, style=dotted];
m8_791 -> m8_339  [key=2, style=dotted];
m8_792 -> m8_793  [key=0, style=solid];
m8_792 -> m8_870  [key=2, style=dotted];
m8_792 -> m8_795  [color=darkseagreen4, key=1, label=propertyContexts, style=dashed];
m8_792 -> m8_796  [color=darkseagreen4, key=1, label=propertyContexts, style=dashed];
m8_792 -> m8_798  [color=darkseagreen4, key=1, label=propertyContexts, style=dashed];
m8_792 -> m8_826  [color=darkseagreen4, key=1, label=propertyContexts, style=dashed];
m8_792 -> m8_857  [color=darkseagreen4, key=1, label=propertyContexts, style=dashed];
m8_792 -> m8_861  [color=darkseagreen4, key=1, label=propertyContexts, style=dashed];
m8_816 -> m8_43  [key=2, style=dotted];
m8_816 -> m8_817  [key=0, style=solid];
m8_817 -> m8_818  [key=0, style=solid];
m8_817 -> m8_819  [key=0, style=solid];
m8_817 -> m8_538  [key=2, style=dotted];
m8_817 -> m8_540  [key=2, style=dotted];
m8_818 -> m8_819  [key=0, style=solid];
m8_818 -> m8_542  [key=2, style=dotted];
m8_818 -> m8_161  [key=2, style=dotted];
m8_824 -> m8_825  [key=0, style=solid];
m8_824 -> m8_544  [key=2, style=dotted];
m8_825 -> m8_826  [key=0, style=solid];
m8_825 -> m8_619  [key=2, style=dotted];
m8_830 -> m8_831  [key=0, style=solid];
m8_830 -> m8_833  [key=0, style=solid];
m8_830 -> m8_505  [key=2, style=dotted];
m8_834 -> m8_835  [key=0, style=solid];
m8_834 -> m8_31  [key=2, style=dotted];
m8_834 -> m8_836  [color=darkseagreen4, key=1, label=propertyContract, style=dashed];
m8_834 -> m8_844  [color=darkseagreen4, key=1, label=propertyContract, style=dashed];
m8_834 -> m8_845  [color=darkseagreen4, key=1, label=propertyContract, style=dashed];
m8_863 -> m8_861  [key=0, style=solid];
m8_863 -> m8_879  [key=2, style=dotted];
m8_863 -> m8_880  [key=2, style=dotted];
m8_864 -> m8_865  [key=0, style=solid];
m8_864 -> m8_625  [key=2, style=dotted];
m8_786 -> m8_28  [key=2, style=dotted];
m8_786 -> m8_787  [key=0, style=solid];
m8_786 -> m8_29  [key=2, style=dotted];
m8_785 -> m8_787  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_785 -> m8_791  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_785 -> m8_792  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_785 -> m8_818  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_785 -> m8_824  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_785 -> m8_825  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_785 -> m8_863  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_785 -> m8_864  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_785 -> m8_786  [key=0, style=solid];
m8_785 -> m8_279  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_785 -> m8_788  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_785 -> m8_790  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_785 -> m8_794  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_785 -> m8_797  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_785 -> m8_811  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_785 -> m8_819  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_785 -> m8_822  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ObjectConstructor<object>", style=dashed];
m8_785 -> m8_823  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_785 -> m8_856  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_785 -> m8_859  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_788 -> m8_789  [key=0, style=solid];
m8_788 -> m8_792  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m8_793 -> m8_794  [key=0, style=solid];
m8_793 -> m8_797  [key=0, style=solid];
m8_799 -> m8_800  [key=0, style=solid];
m8_799 -> m8_809  [key=0, style=solid];
m8_813 -> m8_814  [key=0, style=solid];
m8_813 -> m8_819  [key=0, style=solid];
m8_860 -> m8_864  [key=0, style=solid];
m8_860 -> m8_861  [key=0, style=solid];
m8_790 -> m8_791  [key=0, style=solid];
m8_790 -> m8_867  [key=2, style=dotted];
m8_790 -> m8_868  [key=2, style=dotted];
m8_790 -> m8_869  [key=2, style=dotted];
m8_790 -> m8_881  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_795 -> m8_796  [key=0, style=solid];
m8_795 -> m8_794  [key=0, style=solid];
m8_795 -> m8_871  [key=2, style=dotted];
m8_795 -> m8_884  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_796 -> m8_794  [key=0, style=solid];
m8_796 -> m8_872  [key=2, style=dotted];
m8_796 -> m8_873  [key=2, style=dotted];
m8_798 -> m8_818  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_798 -> m8_799  [key=0, style=solid];
m8_798 -> m8_822  [key=0, style=solid];
m8_798 -> m8_800  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_798 -> m8_801  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_798 -> m8_806  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_798 -> m8_808  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_798 -> m8_809  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_798 -> m8_810  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_798 -> m8_811  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_798 -> m8_814  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_798 -> m8_820  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_798 -> m8_821  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_826 -> m8_827  [key=0, style=solid];
m8_826 -> m8_856  [key=0, style=solid];
m8_826 -> m8_828  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_826 -> m8_829  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_826 -> m8_832  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_826 -> m8_855  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_857 -> m8_860  [key=0, style=solid];
m8_857 -> m8_858  [key=0, style=solid];
m8_857 -> m8_859  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m8_861 -> m8_863  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_861 -> m8_864  [key=0, style=solid];
m8_861 -> m8_862  [key=0, style=solid];
m8_811 -> m8_816  [color=darkseagreen4, key=1, label=constructorProperty, style=dashed];
m8_811 -> m8_817  [color=darkseagreen4, key=1, label=constructorProperty, style=dashed];
m8_811 -> m8_818  [color=darkseagreen4, key=1, label=constructorProperty, style=dashed];
m8_811 -> m8_812  [key=0, style=solid];
m8_811 -> m8_874  [key=2, style=dotted];
m8_811 -> m8_887  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_811 -> m8_815  [color=darkseagreen4, key=1, label=constructorProperty, style=dashed];
m8_811 -> m8_819  [color=darkseagreen4, key=1, label=constructorProperty, style=dashed];
m8_809 -> m8_816  [color=darkseagreen4, key=1, label=constructorProperty, style=dashed];
m8_809 -> m8_817  [color=darkseagreen4, key=1, label=constructorProperty, style=dashed];
m8_809 -> m8_818  [color=darkseagreen4, key=1, label=constructorProperty, style=dashed];
m8_809 -> m8_810  [key=0, style=solid];
m8_809 -> m8_812  [color=darkseagreen4, key=1, label=constructorProperty, style=dashed];
m8_809 -> m8_815  [color=darkseagreen4, key=1, label=constructorProperty, style=dashed];
m8_809 -> m8_819  [color=darkseagreen4, key=1, label=constructorProperty, style=dashed];
m8_815 -> m8_816  [key=0, style=solid];
m8_815 -> m8_817  [key=0, style=solid];
m8_819 -> m8_820  [key=0, style=solid];
m8_819 -> m8_875  [key=2, style=dotted];
m8_822 -> m8_824  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_822 -> m8_825  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_822 -> m8_863  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_822 -> m8_864  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_822 -> m8_823  [key=0, style=solid];
m8_822 -> m8_281  [key=2, style=dotted];
m8_822 -> m8_831  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_822 -> m8_838  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_822 -> m8_847  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_822 -> m8_859  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_822 -> m8_865  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_823 -> m8_824  [key=0, style=solid];
m8_823 -> m8_825  [key=0, style=solid];
m8_828 -> m8_830  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_828 -> m8_834  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_828 -> m8_829  [key=0, style=solid];
m8_828 -> m8_831  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_828 -> m8_833  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_828 -> m8_838  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_828 -> m8_847  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_829 -> m8_830  [key=0, style=solid];
m8_829 -> m8_831  [color=darkseagreen4, key=1, label=value, style=dashed];
m8_829 -> m8_833  [color=darkseagreen4, key=1, label=value, style=dashed];
m8_829 -> m8_841  [color=darkseagreen4, key=1, label=value, style=dashed];
m8_829 -> m8_850  [color=darkseagreen4, key=1, label=value, style=dashed];
m8_831 -> m8_832  [key=0, style=solid];
m8_831 -> m8_506  [key=2, style=dotted];
m8_833 -> m8_834  [key=0, style=solid];
m8_833 -> m8_826  [key=0, style=solid];
m8_835 -> m8_836  [key=0, style=solid];
m8_835 -> m8_844  [key=0, style=solid];
m8_836 -> m8_837  [key=0, style=solid];
m8_836 -> m8_840  [color=darkseagreen4, key=1, label=propertyArrayContract, style=dashed];
m8_836 -> m8_841  [color=darkseagreen4, key=1, label=propertyArrayContract, style=dashed];
m8_844 -> m8_845  [key=0, style=solid];
m8_844 -> m8_855  [key=0, style=solid];
m8_845 -> m8_846  [key=0, style=solid];
m8_845 -> m8_849  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m8_845 -> m8_850  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m8_862 -> m8_863  [key=0, style=solid];
m8_862 -> m8_861  [key=0, style=solid];
m8_865 -> m8_866  [key=0, style=solid];
m8_806 -> m8_162  [key=2, style=dotted];
m8_806 -> m8_808  [key=0, style=solid];
m8_801 -> m8_806  [color=darkseagreen4, key=1, label=v, style=dashed];
m8_801 -> m8_802  [key=0, style=solid];
m8_801 -> m8_803  [color=darkseagreen4, key=1, label=v, style=dashed];
m8_801 -> m8_805  [color=darkseagreen4, key=1, label=v, style=dashed];
m8_841 -> m8_34  [key=2, style=dotted];
m8_841 -> m8_842  [key=0, style=solid];
m8_840 -> m8_34  [key=2, style=dotted];
m8_840 -> m8_841  [key=0, style=solid];
m8_840 -> m8_843  [color=darkseagreen4, key=1, label=createdObjectCollectionWrapper, style=dashed];
m8_850 -> m8_40  [key=2, style=dotted];
m8_850 -> m8_851  [key=0, style=solid];
m8_849 -> m8_40  [key=2, style=dotted];
m8_849 -> m8_850  [key=0, style=solid];
m8_849 -> m8_854  [color=darkseagreen4, key=1, label=targetDictionary, style=dashed];
m8_794 -> m8_795  [key=0, style=solid];
m8_794 -> m8_796  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_794 -> m8_797  [key=0, style=solid];
m8_794 -> m8_885  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_797 -> m8_798  [key=0, style=solid];
m8_797 -> m8_822  [color=darkseagreen4, key=1, label=creatorParameterValues, style=dashed];
m8_797 -> m8_820  [color=darkseagreen4, key=1, label=creatorParameterValues, style=dashed];
m8_856 -> m8_860  [key=0, style=solid];
m8_856 -> m8_857  [key=0, style=solid];
m8_859 -> m8_857  [key=0, style=solid];
m8_859 -> m8_878  [key=2, style=dotted];
m8_800 -> m8_809  [key=0, style=solid];
m8_800 -> m8_801  [key=0, style=solid];
m8_812 -> m8_813  [key=0, style=solid];
m8_812 -> m8_798  [key=0, style=solid];
m8_814 -> m8_815  [key=0, style=solid];
m8_814 -> m8_819  [key=0, style=solid];
m8_821 -> m8_798  [key=0, style=solid];
m8_808 -> m8_809  [key=0, style=solid];
m8_810 -> m8_811  [key=0, style=solid];
m8_810 -> m8_812  [key=0, style=solid];
m8_820 -> m8_821  [key=0, style=solid];
m8_827 -> m8_826  [key=0, style=solid];
m8_827 -> m8_828  [key=0, style=solid];
m8_832 -> m8_826  [key=0, style=solid];
m8_855 -> m8_826  [key=0, style=solid];
m8_858 -> m8_857  [key=0, style=solid];
m8_858 -> m8_859  [key=0, style=solid];
m8_838 -> m8_840  [color=darkseagreen4, key=1, label=createdObjectCollection, style=dashed];
m8_838 -> m8_502  [key=2, style=dotted];
m8_838 -> m8_839  [key=0, style=solid];
m8_847 -> m8_849  [color=darkseagreen4, key=1, label=createdObjectDictionary, style=dashed];
m8_847 -> m8_502  [key=2, style=dotted];
m8_847 -> m8_848  [key=0, style=solid];
m8_837 -> m8_855  [key=0, style=solid];
m8_837 -> m8_838  [key=0, style=solid];
m8_846 -> m8_855  [key=0, style=solid];
m8_846 -> m8_847  [key=0, style=solid];
m8_802 -> m8_1021  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence propertyPresence", style=bold];
m8_802 -> m8_803  [key=0, style=solid];
m8_805 -> m8_806  [key=0, style=solid];
m8_805 -> m8_807  [key=0, style=solid];
m8_803 -> m8_805  [key=0, style=solid];
m8_803 -> m8_804  [key=0, style=solid];
m8_842 -> m8_855  [key=0, style=solid];
m8_842 -> m8_843  [key=0, style=solid];
m8_839 -> m8_840  [key=0, style=solid];
m8_839 -> m8_855  [key=0, style=solid];
m8_843 -> m8_738  [key=2, style=dotted];
m8_843 -> m8_842  [key=0, style=solid];
m8_851 -> m8_852  [key=0, style=solid];
m8_851 -> m8_876  [key=2, style=dotted];
m8_851 -> m8_853  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_848 -> m8_849  [key=0, style=solid];
m8_848 -> m8_855  [key=0, style=solid];
m8_854 -> m8_854  [color=darkseagreen4, key=1, label=entry, style=dashed];
m8_854 -> m8_852  [key=0, style=solid];
m8_804 -> m8_808  [key=0, style=solid];
m8_807 -> m8_808  [key=0, style=solid];
m8_852 -> m8_855  [key=0, style=solid];
m8_852 -> m8_853  [key=0, style=solid];
m8_852 -> m8_877  [key=2, style=dotted];
m8_866 -> m8_785  [color=blue, key=0, style=bold];
m8_342 -> m8_68  [color=darkorchid, key=3, label="method methodReturn bool ReadMetadataProperties", style=bold];
m8_342 -> m8_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_377  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_668  [color=darkorchid, key=3, label="method methodReturn bool ReadMetadataProperties", style=bold];
m8_342 -> m8_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_343  [key=0, style=solid];
m8_342 -> m8_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_342 -> m8_384  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_359 -> m8_360  [key=0, style=solid];
m8_359 -> m8_336  [key=2, style=dotted];
m8_359 -> m8_337  [key=2, style=dotted];
m8_359 -> m8_361  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_359 -> m8_384  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_360 -> m8_361  [key=0, style=solid];
m8_360 -> m8_362  [key=0, style=solid];
m8_361 -> m8_362  [key=0, style=solid];
m8_361 -> m8_30  [key=2, style=dotted];
m8_361 -> m8_282  [key=2, style=dotted];
m8_361 -> m8_338  [key=2, style=dotted];
m8_361 -> m8_339  [key=2, style=dotted];
m8_367 -> m8_367  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_367 -> m8_368  [key=0, style=solid];
m8_367 -> m8_341  [key=2, style=dotted];
m8_367 -> m8_384  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_377 -> m8_378  [key=0, style=solid];
m8_377 -> m8_160  [key=2, style=dotted];
m8_377 -> m8_379  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_353 -> m8_36  [key=2, style=dotted];
m8_353 -> m8_33  [key=2, style=dotted];
m8_353 -> m8_384  [key=0, style=solid];
m8_358 -> m8_36  [key=2, style=dotted];
m8_358 -> m8_33  [key=2, style=dotted];
m8_358 -> m8_384  [key=0, style=solid];
m8_354 -> m8_359  [color=darkseagreen4, key=1, label=reference, style=dashed];
m8_354 -> m8_361  [color=darkseagreen4, key=1, label=reference, style=dashed];
m8_354 -> m8_38  [key=2, style=dotted];
m8_354 -> m8_355  [key=0, style=solid];
m8_354 -> m8_356  [color=darkseagreen4, key=1, label=reference, style=dashed];
m8_357 -> m8_359  [key=0, style=solid];
m8_357 -> m8_358  [key=0, style=solid];
m8_362 -> m8_384  [key=0, style=solid];
m8_366 -> m8_367  [key=0, style=solid];
m8_366 -> m8_38  [key=2, style=dotted];
m8_368 -> m8_369  [key=0, style=solid];
m8_368 -> m8_37  [key=2, style=dotted];
m8_343 -> m8_377  [color=darkseagreen4, key=1, label="out string", style=dashed];
m8_343 -> m8_384  [color=darkseagreen4, key=1, label="out string", style=dashed];
m8_343 -> m8_344  [key=0, style=solid];
m8_376 -> m8_377  [key=0, style=solid];
m8_376 -> m8_37  [key=2, style=dotted];
m8_378 -> m8_379  [key=0, style=solid];
m8_378 -> m8_37  [key=2, style=dotted];
m8_379 -> m8_384  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_379 -> m8_380  [key=0, style=solid];
m8_352 -> m8_353  [key=0, style=solid];
m8_352 -> m8_354  [key=0, style=solid];
m8_345 -> m8_346  [key=0, style=solid];
m8_345 -> m8_383  [key=0, style=solid];
m8_346 -> m8_38  [key=2, style=dotted];
m8_346 -> m8_347  [key=0, style=solid];
m8_349 -> m8_38  [key=2, style=dotted];
m8_349 -> m8_350  [key=0, style=solid];
m8_349 -> m8_364  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m8_349 -> m8_370  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m8_349 -> m8_375  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m8_351 -> m8_352  [key=0, style=solid];
m8_351 -> m8_37  [key=2, style=dotted];
m8_355 -> m8_356  [key=0, style=solid];
m8_355 -> m8_37  [key=2, style=dotted];
m8_365 -> m8_366  [key=0, style=solid];
m8_365 -> m8_37  [key=2, style=dotted];
m8_371 -> m8_372  [key=0, style=solid];
m8_371 -> m8_37  [key=2, style=dotted];
m8_372 -> m8_38  [key=2, style=dotted];
m8_372 -> m8_384  [color=darkseagreen4, key=1, label="out string", style=dashed];
m8_372 -> m8_373  [key=0, style=solid];
m8_373 -> m8_374  [key=0, style=solid];
m8_373 -> m8_37  [key=2, style=dotted];
m8_382 -> m8_348  [key=0, style=solid];
m8_382 -> m8_383  [key=0, style=solid];
m8_350 -> m8_39  [key=2, style=dotted];
m8_350 -> m8_351  [key=0, style=solid];
m8_350 -> m8_364  [key=0, style=solid];
m8_364 -> m8_39  [key=2, style=dotted];
m8_364 -> m8_365  [key=0, style=solid];
m8_364 -> m8_370  [key=0, style=solid];
m8_370 -> m8_39  [key=2, style=dotted];
m8_370 -> m8_371  [key=0, style=solid];
m8_370 -> m8_375  [key=0, style=solid];
m8_375 -> m8_39  [key=2, style=dotted];
m8_375 -> m8_376  [key=0, style=solid];
m8_375 -> m8_381  [key=0, style=solid];
m8_356 -> m8_357  [key=0, style=solid];
m8_356 -> m8_363  [key=0, style=solid];
m8_344 -> m8_384  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_344 -> m8_345  [key=0, style=solid];
m8_383 -> m8_384  [key=0, style=solid];
m8_380 -> m8_384  [key=0, style=solid];
m8_369 -> m8_382  [key=0, style=solid];
m8_347 -> m8_383  [key=0, style=solid];
m8_347 -> m8_348  [key=0, style=solid];
m8_348 -> m8_349  [key=0, style=solid];
m8_348 -> m8_382  [color=darkseagreen4, key=1, label=metadataProperty, style=dashed];
m8_374 -> m8_382  [key=0, style=solid];
m8_363 -> m8_382  [key=0, style=solid];
m8_381 -> m8_382  [key=0, style=solid];
m8_384 -> m8_342  [color=blue, key=0, style=bold];
m8_1005 -> m8_668  [color=darkorchid, key=3, label="method methodReturn bool ShouldDeserialize", style=bold];
m8_1005 -> m8_1017  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_1005 -> m8_42  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m8_1005 -> m8_1013  [key=0, style=solid];
m8_1005 -> m8_1015  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_1005 -> m8_964  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m8_1016 -> m8_1017  [key=0, style=solid];
m8_1016 -> m8_1018  [key=0, style=solid];
m8_1017 -> m8_1018  [key=0, style=solid];
m8_1017 -> m8_1021  [key=2, style=dotted];
m8_1017 -> m8_338  [key=2, style=dotted];
m8_1017 -> m8_339  [key=2, style=dotted];
m8_1015 -> m8_1016  [key=0, style=solid];
m8_1015 -> m8_1017  [color=darkseagreen4, key=1, label=shouldDeserialize, style=dashed];
m8_1015 -> m8_1020  [key=2, style=dotted];
m8_1015 -> m8_1018  [color=darkseagreen4, key=1, label=shouldDeserialize, style=dashed];
m8_1018 -> m8_1019  [key=0, style=solid];
m8_1013 -> m8_1015  [key=0, style=solid];
m8_1013 -> m8_1014  [key=0, style=solid];
m8_1014 -> m8_1019  [key=0, style=solid];
m8_1019 -> m8_1005  [color=blue, key=0, style=bold];
m8_635 -> m8_636  [key=0, style=solid];
m8_635 -> m8_544  [key=2, style=dotted];
m8_636 -> m8_637  [key=0, style=solid];
m8_636 -> m8_619  [key=2, style=dotted];
m8_639 -> m8_43  [key=2, style=dotted];
m8_639 -> m8_640  [key=0, style=solid];
m8_641 -> m8_43  [key=2, style=dotted];
m8_641 -> m8_642  [key=0, style=solid];
m8_642 -> m8_74  [key=2, style=dotted];
m8_642 -> m8_643  [key=0, style=solid];
m8_642 -> m8_659  [color=darkseagreen4, key=1, label=dictionaryValueConverter, style=dashed];
m8_642 -> m8_662  [color=darkseagreen4, key=1, label=dictionaryValueConverter, style=dashed];
m8_642 -> m8_663  [color=darkseagreen4, key=1, label=dictionaryValueConverter, style=dashed];
m8_651 -> m8_652  [key=0, style=solid];
m8_651 -> m8_674  [key=0, style=solid];
m8_651 -> m8_38  [key=2, style=dotted];
m8_651 -> m8_122  [key=2, style=dotted];
m8_655 -> m8_655  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m8_655 -> m8_657  [key=0, style=solid];
m8_655 -> m8_659  [key=0, style=solid];
m8_655 -> m8_38  [key=2, style=dotted];
m8_655 -> m8_680  [key=2, style=dotted];
m8_655 -> m8_161  [key=2, style=dotted];
m8_655 -> m8_656  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m8_656 -> m8_656  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m8_656 -> m8_657  [key=0, style=solid];
m8_656 -> m8_659  [key=0, style=solid];
m8_656 -> m8_161  [key=2, style=dotted];
m8_656 -> m8_665  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m8_656 -> m8_667  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m8_663 -> m8_76  [key=2, style=dotted];
m8_663 -> m8_665  [key=0, style=solid];
m8_664 -> m8_77  [key=2, style=dotted];
m8_664 -> m8_665  [key=0, style=solid];
m8_667 -> m8_668  [key=0, style=solid];
m8_667 -> m8_669  [key=0, style=solid];
m8_667 -> m8_79  [key=2, style=dotted];
m8_668 -> m8_80  [key=2, style=dotted];
m8_668 -> m8_664  [color=darkorchid, key=3, label="Field variable string _name", style=bold];
m8_668 -> m8_674  [key=0, style=solid];
m8_676 -> m8_677  [key=0, style=solid];
m8_676 -> m8_681  [key=2, style=dotted];
m8_677 -> m8_678  [key=0, style=solid];
m8_677 -> m8_625  [key=2, style=dotted];
m8_661 -> m8_77  [color=darkorchid, key=3, label="Local variable object itemValue", style=bold];
m8_661 -> m8_76  [color=darkorchid, key=3, label="Local variable object itemValue", style=bold];
m8_661 -> m8_662  [key=0, style=solid];
m8_659 -> m8_75  [key=2, style=dotted];
m8_659 -> m8_661  [key=0, style=solid];
m8_659 -> m8_660  [key=0, style=solid];
m8_660 -> m8_33  [key=2, style=dotted];
m8_660 -> m8_674  [key=0, style=solid];
m8_673 -> m8_33  [key=2, style=dotted];
m8_673 -> m8_679  [key=0, style=solid];
m8_647 -> m8_68  [color=darkorchid, key=3, label="Local variable bool finished", style=bold];
m8_647 -> m8_648  [key=0, style=solid];
m8_637 -> m8_668  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m8_637 -> m8_638  [key=0, style=solid];
m8_631 -> m8_635  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m8_631 -> m8_636  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m8_631 -> m8_667  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m8_631 -> m8_676  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m8_631 -> m8_677  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m8_631 -> m8_632  [key=0, style=solid];
m8_631 -> m8_678  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m8_634 -> m8_635  [key=0, style=solid];
m8_634 -> m8_636  [key=0, style=solid];
m8_638 -> m8_639  [key=0, style=solid];
m8_638 -> m8_640  [key=0, style=solid];
m8_640 -> m8_641  [key=0, style=solid];
m8_640 -> m8_642  [key=0, style=solid];
m8_643 -> m8_644  [key=0, style=solid];
m8_643 -> m8_652  [color=darkseagreen4, key=1, label=keyTypeCode, style=dashed];
m8_662 -> m8_663  [key=0, style=solid];
m8_662 -> m8_664  [key=0, style=solid];
m8_650 -> m8_651  [key=0, style=solid];
m8_650 -> m8_655  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m8_650 -> m8_161  [color=darkorchid, key=3, label="Local variable object keyValue", style=bold];
m8_652 -> m8_656  [key=0, style=solid];
m8_652 -> m8_653  [key=0, style=solid];
m8_674 -> m8_78  [key=2, style=dotted];
m8_674 -> m8_647  [key=0, style=solid];
m8_674 -> m8_675  [key=0, style=solid];
m8_654 -> m8_655  [key=0, style=solid];
m8_657 -> m8_658  [key=0, style=solid];
m8_665 -> m8_674  [key=0, style=solid];
m8_665 -> m8_666  [key=0, style=solid];
m8_669 -> m8_664  [color=darkorchid, key=3, label="Property variable int Rank", style=bold];
m8_669 -> m8_679  [key=0, style=solid];
m8_666 -> m8_667  [key=0, style=solid];
m8_675 -> m8_676  [key=0, style=solid];
m8_675 -> m8_677  [key=0, style=solid];
m8_678 -> m8_679  [key=0, style=solid];
m8_633 -> m8_634  [key=0, style=solid];
m8_648 -> m8_673  [key=0, style=solid];
m8_648 -> m8_649  [key=0, style=solid];
m8_648 -> m8_670  [key=0, style=solid];
m8_648 -> m8_671  [key=0, style=solid];
m8_658 -> m8_282  [key=2, style=dotted];
m8_658 -> m8_674  [key=0, style=solid];
m8_658 -> m8_403  [key=2, style=dotted];
m8_646 -> m8_647  [key=0, style=solid];
m8_632 -> m8_633  [key=0, style=solid];
m8_644 -> m8_645  [key=0, style=solid];
m8_649 -> m8_650  [key=0, style=solid];
m8_653 -> m8_654  [key=0, style=solid];
m8_670 -> m8_674  [key=0, style=solid];
m8_672 -> m8_674  [key=0, style=solid];
m8_672 -> m8_675  [color=darkseagreen4, key=1, label=finished, style=dashed];
m8_671 -> m8_672  [key=0, style=solid];
m8_645 -> m8_646  [key=0, style=solid];
m8_679 -> m8_41  [color=blue, key=0, style=bold];
m8_1083 -> m8_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_145  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_302  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_329  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_377  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_410  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_415  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_431  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_484  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_491  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_492  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_496  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_527  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_529  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_535  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_545  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_546  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_547  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_554  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_556  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_580  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_605  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_620  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_621  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_622  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_626  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_627  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_628  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_635  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_636  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_639  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_641  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_642  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_651  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_655  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_656  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_663  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_664  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_667  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_668  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_676  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_677  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_684  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_685  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_686  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_687  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_703  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_704  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_708  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_709  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_730  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_731  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_743  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_744  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_751  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_755  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_758  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_759  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_768  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_769  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_773  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_774  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_781  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_782  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_787  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_789  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_791  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_792  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_816  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_817  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_818  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_824  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_825  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_830  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_834  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_863  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_864  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_890  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_891  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_892  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_893  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_894  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_908  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_909  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_913  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_914  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_917  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_918  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_919  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_922  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_930  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_939  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_941  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_945  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_954  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_955  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_957  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_963  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_966  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_967  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_968  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_971  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_972  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_974  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_975  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_977  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_978  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_981  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_982  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_983  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_985  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_986  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_994  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_999  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_1000  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_1016  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_1017  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_1022  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_1033  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_1042  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_1053  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_1054  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_1055  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_1062  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_1063  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1083 -> m8_1077  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1084 -> m8_885  [color=darkseagreen4, key=1, label=property, style=dashed];
m9_75 -> m9_76  [key=0, style=solid];
m9_82 -> m9_74  [key=2, style=dotted];
m9_82 -> m9_83  [key=0, style=solid];
m9_76 -> m9_82  [color=darkseagreen4, key=1, label=joe, style=dashed];
m9_76 -> m9_77  [key=0, style=solid];
m9_76 -> m9_85  [key=2, style=dotted];
m9_76 -> m9_80  [color=darkseagreen4, key=1, label=joe, style=dashed];
m9_78 -> m9_82  [color=darkseagreen4, key=1, label=mike, style=dashed];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_85  [key=2, style=dotted];
m9_78 -> m9_80  [color=darkseagreen4, key=1, label=mike, style=dashed];
m9_78 -> m9_81  [color=darkseagreen4, key=1, label=mike, style=dashed];
m9_81 -> m9_82  [key=0, style=solid];
m9_83 -> m9_86  [key=2, style=dotted];
m9_83 -> m9_84  [key=0, style=solid];
m9_77 -> m9_78  [key=0, style=solid];
m9_80 -> m9_81  [key=0, style=solid];
m9_79 -> m9_80  [key=0, style=solid];
m9_84 -> m9_75  [color=blue, key=0, style=bold];
m9_87 -> m9_88  [key=0, style=solid];
m9_93 -> m9_9  [key=2, style=dotted];
m9_93 -> m9_94  [key=0, style=solid];
m9_100 -> m9_9  [key=2, style=dotted];
m9_100 -> m9_101  [key=0, style=solid];
m9_106 -> m9_9  [key=2, style=dotted];
m9_106 -> m9_107  [key=0, style=solid];
m9_108 -> m9_9  [key=2, style=dotted];
m9_108 -> m9_109  [key=0, style=solid];
m9_113 -> m9_9  [key=2, style=dotted];
m9_113 -> m9_114  [key=0, style=solid];
m9_114 -> m9_9  [key=2, style=dotted];
m9_114 -> m9_115  [key=0, style=solid];
m9_94 -> m9_37  [key=2, style=dotted];
m9_94 -> m9_100  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m9_94 -> m9_95  [key=0, style=solid];
m9_94 -> m9_96  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m9_94 -> m9_97  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m9_94 -> m9_98  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m9_94 -> m9_99  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m9_107 -> m9_37  [key=2, style=dotted];
m9_107 -> m9_108  [key=0, style=solid];
m9_107 -> m9_113  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m9_107 -> m9_114  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m9_107 -> m9_109  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m9_107 -> m9_110  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m9_107 -> m9_111  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m9_107 -> m9_112  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_94  [color=darkseagreen4, key=1, label=json, style=dashed];
m9_92 -> m9_74  [key=2, style=dotted];
m9_99 -> m9_100  [key=0, style=solid];
m9_99 -> m9_118  [key=2, style=dotted];
m9_101 -> m9_102  [key=0, style=solid];
m9_105 -> m9_106  [key=0, style=solid];
m9_105 -> m9_107  [color=darkseagreen4, key=1, label=json, style=dashed];
m9_105 -> m9_74  [key=2, style=dotted];
m9_109 -> m9_110  [key=0, style=solid];
m9_109 -> m9_119  [key=2, style=dotted];
m9_112 -> m9_113  [key=0, style=solid];
m9_112 -> m9_119  [key=2, style=dotted];
m9_95 -> m9_96  [key=0, style=solid];
m9_95 -> m9_117  [key=2, style=dotted];
m9_96 -> m9_97  [key=0, style=solid];
m9_96 -> m9_118  [key=2, style=dotted];
m9_97 -> m9_98  [key=0, style=solid];
m9_97 -> m9_118  [key=2, style=dotted];
m9_98 -> m9_99  [key=0, style=solid];
m9_98 -> m9_118  [key=2, style=dotted];
m9_110 -> m9_111  [key=0, style=solid];
m9_110 -> m9_119  [key=2, style=dotted];
m9_111 -> m9_112  [key=0, style=solid];
m9_111 -> m9_119  [key=2, style=dotted];
m9_88 -> m9_92  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_88 -> m9_101  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_88 -> m9_105  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_88 -> m9_89  [key=0, style=solid];
m9_88 -> m9_116  [key=2, style=dotted];
m9_88 -> m9_90  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_88 -> m9_91  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_88 -> m9_102  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_88 -> m9_103  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_88 -> m9_104  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_91 -> m9_92  [key=0, style=solid];
m9_102 -> m9_103  [key=0, style=solid];
m9_104 -> m9_105  [key=0, style=solid];
m9_89 -> m9_90  [key=0, style=solid];
m9_90 -> m9_91  [key=0, style=solid];
m9_103 -> m9_104  [key=0, style=solid];
m9_115 -> m9_87  [color=blue, key=0, style=bold];
m9_36 -> m9_11  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Tests.Serialization.Foo1 f", style=bold];
m9_36 -> m9_40  [key=0, style=solid];
m9_36 -> m9_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Foo1", style=dashed];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_51  [key=2, style=dotted];
m9_40 -> m9_42  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m9_40 -> m9_47  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m9_47 -> m9_48  [key=0, style=solid];
m9_47 -> m9_56  [key=2, style=dotted];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_59  [key=2, style=dotted];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_52  [key=2, style=dotted];
m9_41 -> m9_48  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m9_42 -> m9_43  [key=0, style=solid];
m9_45 -> m9_47  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_55  [key=2, style=dotted];
m9_46 -> m9_47  [key=0, style=solid];
m9_48 -> m9_49  [key=0, style=solid];
m9_48 -> m9_57  [key=2, style=dotted];
m9_48 -> m9_58  [key=2, style=dotted];
m9_44 -> m9_49  [color=darkseagreen4, key=1, label=sw, style=dashed];
m9_44 -> m9_45  [key=0, style=solid];
m9_44 -> m9_54  [key=2, style=dotted];
m9_43 -> m9_44  [key=0, style=solid];
m9_43 -> m9_53  [key=2, style=dotted];
m9_50 -> m9_36  [color=blue, key=0, style=bold];
m9_10 -> m9_11  [key=0, style=solid];
m9_21 -> m9_22  [color=green, key=0, style=solid];
m9_21 -> m9_9  [color=green, key=2, style=dotted];
m9_11 -> m9_21  [color=green, key=1, label=setFoo, style=dashed];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_30  [key=2, style=dotted];
m9_11 -> m9_31  [key=2, style=dotted];
m9_11 -> m9_32  [key=2, style=dotted];
m9_11 -> m9_33  [key=2, style=dotted];
m9_11 -> m9_34  [key=2, style=dotted];
m9_11 -> m9_35  [key=2, style=dotted];
m9_11 -> m9_14  [color=darkseagreen4, key=1, label=setFoo, style=dashed];
m9_11 -> m9_16  [color=darkseagreen4, key=1, label=setFoo, style=dashed];
m9_11 -> m9_18  [color=darkseagreen4, key=1, label=setFoo, style=dashed];
m9_11 -> m9_19  [color=darkseagreen4, key=1, label=setFoo, style=dashed];
m9_11 -> m9_22  [color=darkseagreen4, key=1, label=setFoo, style=dashed];
m9_11 -> m9_24  [color=darkseagreen4, key=1, label=setFoo, style=dashed];
m9_11 -> m9_25  [color=darkseagreen4, key=1, label=setFoo, style=dashed];
m9_11 -> m9_27  [color=darkseagreen4, key=1, label=setFoo, style=dashed];
m9_11 -> m9_28  [color=darkseagreen4, key=1, label=setFoo, style=dashed];
m9_13 -> m9_21  [color=green, key=1, label=deserializedSetFoo, style=dashed];
m9_13 -> m9_23  [color=green, key=1, label=deserializedSetFoo, style=dashed];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_37  [key=2, style=dotted];
m9_13 -> m9_15  [color=darkseagreen4, key=1, label=deserializedSetFoo, style=dashed];
m9_13 -> m9_16  [color=darkseagreen4, key=1, label=deserializedSetFoo, style=dashed];
m9_13 -> m9_17  [color=darkseagreen4, key=1, label=deserializedSetFoo, style=dashed];
m9_13 -> m9_18  [color=darkseagreen4, key=1, label=deserializedSetFoo, style=dashed];
m9_13 -> m9_19  [color=darkseagreen4, key=1, label=deserializedSetFoo, style=dashed];
m9_13 -> m9_20  [color=darkseagreen4, key=1, label=deserializedSetFoo, style=dashed];
m9_13 -> m9_22  [color=darkseagreen4, key=1, label=deserializedSetFoo, style=dashed];
m9_13 -> m9_24  [color=darkseagreen4, key=1, label=deserializedSetFoo, style=dashed];
m9_13 -> m9_25  [color=darkseagreen4, key=1, label=deserializedSetFoo, style=dashed];
m9_13 -> m9_26  [color=darkseagreen4, key=1, label=deserializedSetFoo, style=dashed];
m9_13 -> m9_27  [color=darkseagreen4, key=1, label=deserializedSetFoo, style=dashed];
m9_20 -> m9_21  [color=green, key=0, style=solid];
m9_20 -> m9_39  [key=2, style=dotted];
m9_22 -> m9_23  [color=green, key=0, style=solid];
m9_22 -> m9_9  [key=2, style=dotted];
m9_23 -> m9_24  [color=green, key=0, style=solid];
m9_23 -> m9_39  [color=green, key=2, style=dotted];
m9_24 -> m9_9  [key=2, style=dotted];
m9_24 -> m9_25  [key=0, style=solid];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_36  [key=2, style=dotted];
m9_14 -> m9_9  [key=2, style=dotted];
m9_14 -> m9_15  [key=0, style=solid];
m9_16 -> m9_9  [key=2, style=dotted];
m9_16 -> m9_17  [key=0, style=solid];
m9_18 -> m9_9  [key=2, style=dotted];
m9_18 -> m9_19  [key=0, style=solid];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_9  [key=2, style=dotted];
m9_25 -> m9_9  [key=2, style=dotted];
m9_25 -> m9_26  [key=0, style=solid];
m9_27 -> m9_9  [key=2, style=dotted];
m9_27 -> m9_28  [key=0, style=solid];
m9_28 -> m9_9  [key=2, style=dotted];
m9_28 -> m9_29  [key=0, style=solid];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_38  [key=2, style=dotted];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_38  [key=2, style=dotted];
m9_26 -> m9_39  [key=2, style=dotted];
m9_26 -> m9_27  [key=0, style=solid];
m9_29 -> m9_10  [color=blue, key=0, style=bold];
m9_3 -> m9_4  [key=0, style=solid];
m9_5 -> m9_9  [key=2, style=dotted];
m9_5 -> m9_6  [key=0, style=solid];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_7  [key=2, style=dotted];
m9_4 -> m9_8  [key=2, style=dotted];
m9_6 -> m9_3  [color=blue, key=0, style=bold];
m9_120 -> m9_121  [key=0, style=solid];
m9_132 -> m9_37  [key=2, style=dotted];
m9_132 -> m9_133  [key=0, style=solid];
m9_135 -> m9_37  [key=2, style=dotted];
m9_135 -> m9_136  [key=0, style=solid];
m9_131 -> m9_132  [key=0, style=solid];
m9_131 -> m9_131  [color=darkorchid, key=3, label="Local variable string mikeString", style=bold];
m9_133 -> m9_134  [key=0, style=solid];
m9_133 -> m9_139  [key=2, style=dotted];
m9_134 -> m9_135  [key=0, style=solid];
m9_134 -> m9_134  [color=darkorchid, key=3, label="Local variable string mikeFullDisclosureString", style=bold];
m9_136 -> m9_137  [key=0, style=solid];
m9_136 -> m9_139  [key=2, style=dotted];
m9_130 -> m9_131  [key=0, style=solid];
m9_130 -> m9_86  [key=2, style=dotted];
m9_129 -> m9_74  [key=2, style=dotted];
m9_129 -> m9_130  [key=0, style=solid];
m9_121 -> m9_129  [color=darkseagreen4, key=1, label=joe, style=dashed];
m9_121 -> m9_122  [key=0, style=solid];
m9_121 -> m9_138  [key=2, style=dotted];
m9_121 -> m9_123  [color=darkseagreen4, key=1, label=joe, style=dashed];
m9_121 -> m9_124  [color=darkseagreen4, key=1, label=joe, style=dashed];
m9_125 -> m9_129  [color=darkseagreen4, key=1, label=martha, style=dashed];
m9_125 -> m9_126  [key=0, style=solid];
m9_125 -> m9_138  [key=2, style=dotted];
m9_125 -> m9_127  [color=darkseagreen4, key=1, label=martha, style=dashed];
m9_125 -> m9_128  [color=darkseagreen4, key=1, label=martha, style=dashed];
m9_128 -> m9_129  [key=0, style=solid];
m9_122 -> m9_123  [key=0, style=solid];
m9_123 -> m9_124  [key=0, style=solid];
m9_124 -> m9_125  [key=0, style=solid];
m9_126 -> m9_127  [key=0, style=solid];
m9_127 -> m9_128  [key=0, style=solid];
m9_137 -> m9_120  [color=blue, key=0, style=bold];
m9_60 -> m9_61  [key=0, style=solid];
m9_65 -> m9_9  [key=2, style=dotted];
m9_65 -> m9_66  [key=0, style=solid];
m9_68 -> m9_9  [key=2, style=dotted];
m9_68 -> m9_69  [key=0, style=solid];
m9_70 -> m9_9  [key=2, style=dotted];
m9_70 -> m9_71  [key=0, style=solid];
m9_71 -> m9_9  [key=2, style=dotted];
m9_71 -> m9_72  [key=0, style=solid];
m9_69 -> m9_37  [key=2, style=dotted];
m9_69 -> m9_70  [key=0, style=solid];
m9_69 -> m9_71  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m9_64 -> m9_65  [key=0, style=solid];
m9_64 -> m9_74  [key=2, style=dotted];
m9_66 -> m9_67  [key=0, style=solid];
m9_67 -> m9_68  [key=0, style=solid];
m9_67 -> m9_69  [color=darkseagreen4, key=1, label=json, style=dashed];
m9_67 -> m9_74  [key=2, style=dotted];
m9_61 -> m9_64  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_61 -> m9_66  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_61 -> m9_67  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_61 -> m9_62  [key=0, style=solid];
m9_61 -> m9_73  [key=2, style=dotted];
m9_61 -> m9_63  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_63 -> m9_64  [key=0, style=solid];
m9_62 -> m9_63  [key=0, style=solid];
m9_72 -> m9_60  [color=blue, key=0, style=bold];
m9_140 -> m9_141  [key=0, style=solid];
m9_149 -> m9_9  [key=2, style=dotted];
m9_149 -> m9_150  [key=0, style=solid];
m9_148 -> m9_149  [key=0, style=solid];
m9_148 -> m9_74  [key=2, style=dotted];
m9_141 -> m9_148  [color=darkseagreen4, key=1, label=joe, style=dashed];
m9_141 -> m9_142  [key=0, style=solid];
m9_141 -> m9_151  [key=2, style=dotted];
m9_141 -> m9_143  [color=darkseagreen4, key=1, label=joe, style=dashed];
m9_141 -> m9_147  [color=darkseagreen4, key=1, label=joe, style=dashed];
m9_147 -> m9_148  [key=0, style=solid];
m9_142 -> m9_143  [key=0, style=solid];
m9_143 -> m9_144  [key=0, style=solid];
m9_144 -> m9_147  [color=darkseagreen4, key=1, label=mike, style=dashed];
m9_144 -> m9_145  [key=0, style=solid];
m9_144 -> m9_85  [key=2, style=dotted];
m9_144 -> m9_146  [color=darkseagreen4, key=1, label=mike, style=dashed];
m9_146 -> m9_147  [key=0, style=solid];
m9_145 -> m9_146  [key=0, style=solid];
m9_150 -> m9_140  [color=blue, key=0, style=bold];
m9_185 -> m9_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests", style=dashed];
m11_318 -> m11_319  [key=0, style=solid];
m11_319 -> m11_320  [key=0, style=solid];
m11_319 -> m11_311  [key=2, style=dotted];
m11_320 -> m11_318  [color=blue, key=0, style=bold];
m11_183 -> m11_184  [key=0, style=solid];
m11_184 -> m11_185  [key=0, style=solid];
m11_184 -> m11_82  [key=2, style=dotted];
m11_184 -> m11_187  [color=darkseagreen4, key=1, label=listRef, style=dashed];
m11_185 -> m11_186  [key=0, style=solid];
m11_185 -> m11_181  [key=2, style=dotted];
m11_185 -> m11_15  [key=2, style=dotted];
m11_187 -> m11_188  [key=0, style=solid];
m11_187 -> m11_9  [key=2, style=dotted];
m11_186 -> m11_187  [key=0, style=solid];
m11_186 -> m11_182  [key=2, style=dotted];
m11_186 -> m11_188  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_188 -> m11_189  [key=0, style=solid];
m11_188 -> m11_75  [key=2, style=dotted];
m11_188 -> m11_190  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m11_188 -> m11_191  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m11_189 -> m11_190  [key=0, style=solid];
m11_189 -> m11_9  [key=2, style=dotted];
m11_190 -> m11_191  [key=0, style=solid];
m11_190 -> m11_57  [key=2, style=dotted];
m11_191 -> m11_192  [key=0, style=solid];
m11_191 -> m11_193  [color=darkseagreen4, key=1, label=nested, style=dashed];
m11_191 -> m11_194  [color=darkseagreen4, key=1, label=nested, style=dashed];
m11_191 -> m11_195  [color=darkseagreen4, key=1, label=nested, style=dashed];
m11_191 -> m11_196  [color=darkseagreen4, key=1, label=nested, style=dashed];
m11_191 -> m11_197  [color=darkseagreen4, key=1, label=nested, style=dashed];
m11_192 -> m11_193  [key=0, style=solid];
m11_192 -> m11_9  [key=2, style=dotted];
m11_193 -> m11_194  [key=0, style=solid];
m11_193 -> m11_9  [key=2, style=dotted];
m11_194 -> m11_195  [key=0, style=solid];
m11_194 -> m11_9  [key=2, style=dotted];
m11_195 -> m11_196  [key=0, style=solid];
m11_195 -> m11_9  [key=2, style=dotted];
m11_196 -> m11_197  [key=0, style=solid];
m11_196 -> m11_9  [key=2, style=dotted];
m11_197 -> m11_198  [key=0, style=solid];
m11_197 -> m11_9  [key=2, style=dotted];
m11_198 -> m11_183  [color=blue, key=0, style=bold];
m11_279 -> m11_280  [key=0, style=solid];
m11_280 -> m11_281  [key=0, style=solid];
m11_280 -> m11_287  [key=2, style=dotted];
m11_280 -> m11_282  [color=darkseagreen4, key=1, label=message, style=dashed];
m11_280 -> m11_283  [color=darkseagreen4, key=1, label=message, style=dashed];
m11_281 -> m11_282  [key=0, style=solid];
m11_282 -> m11_283  [key=0, style=solid];
m11_282 -> m11_288  [key=2, style=dotted];
m11_283 -> m11_284  [key=0, style=solid];
m11_283 -> m11_182  [key=2, style=dotted];
m11_284 -> m11_285  [key=0, style=solid];
m11_284 -> m11_75  [key=2, style=dotted];
m11_285 -> m11_286  [key=0, style=solid];
m11_286 -> m11_279  [color=blue, key=0, style=bold];
m11_647 -> m11_648  [key=0, style=solid];
m11_647 -> m11_650  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_647 -> m11_652  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_647 -> m11_653  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_647 -> m11_628  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m11_648 -> m11_649  [key=0, style=solid];
m11_648 -> m11_650  [key=0, style=solid];
m11_650 -> m11_651  [key=0, style=solid];
m11_650 -> m11_652  [key=0, style=solid];
m11_650 -> m11_656  [key=2, style=dotted];
m11_652 -> m11_653  [key=0, style=solid];
m11_652 -> m11_654  [key=0, style=solid];
m11_653 -> m11_655  [key=0, style=solid];
m11_653 -> m11_657  [key=2, style=dotted];
m11_649 -> m11_655  [key=0, style=solid];
m11_651 -> m11_655  [key=0, style=solid];
m11_654 -> m11_655  [key=0, style=solid];
m11_655 -> m11_647  [color=blue, key=0, style=bold];
m11_580 -> m11_581  [key=0, style=solid];
m11_581 -> m11_582  [key=0, style=solid];
m11_581 -> m11_578  [key=2, style=dotted];
m11_581 -> m11_590  [key=2, style=dotted];
m11_581 -> m11_583  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_582 -> m11_583  [key=0, style=solid];
m11_582 -> m11_7  [key=2, style=dotted];
m11_582 -> m11_585  [color=darkseagreen4, key=1, label=settings, style=dashed];
m11_583 -> m11_584  [key=0, style=solid];
m11_583 -> m11_568  [key=2, style=dotted];
m11_583 -> m11_585  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_585 -> m11_586  [key=0, style=solid];
m11_585 -> m11_160  [key=2, style=dotted];
m11_585 -> m11_587  [color=darkseagreen4, key=1, label=p2, style=dashed];
m11_585 -> m11_588  [color=darkseagreen4, key=1, label=p2, style=dashed];
m11_584 -> m11_585  [key=0, style=solid];
m11_584 -> m11_9  [key=2, style=dotted];
m11_586 -> m11_587  [key=0, style=solid];
m11_586 -> m11_57  [key=2, style=dotted];
m11_587 -> m11_588  [key=0, style=solid];
m11_587 -> m11_9  [key=2, style=dotted];
m11_588 -> m11_589  [key=0, style=solid];
m11_588 -> m11_9  [key=2, style=dotted];
m11_589 -> m11_580  [color=blue, key=0, style=bold];
m11_17 -> m11_18  [key=0, style=solid];
m11_18 -> m11_19  [key=0, style=solid];
m11_18 -> m11_25  [key=2, style=dotted];
m11_18 -> m11_21  [color=darkseagreen4, key=1, label=sb, style=dashed];
m11_18 -> m11_23  [color=darkseagreen4, key=1, label=sb, style=dashed];
m11_18 -> m11_29  [color=darkseagreen4, key=1, label=sb, style=dashed];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_22  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_19 -> m11_19  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_21 -> m11_22  [key=0, style=solid];
m11_21 -> m11_26  [key=2, style=dotted];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_27  [key=2, style=dotted];
m11_23 -> m11_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_23  [key=0, style=solid];
m11_22 -> m11_20  [key=0, style=solid];
m11_22 -> m11_22  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_24 -> m11_17  [color=blue, key=0, style=bold];
m11_621 -> m11_622  [key=0, style=solid];
m11_622 -> m11_623  [key=0, style=solid];
m11_622 -> m11_624  [key=2, style=dotted];
m11_623 -> m11_621  [color=blue, key=0, style=bold];
m11_289 -> m11_290  [key=0, style=solid];
m11_290 -> m11_291  [key=0, style=solid];
m11_290 -> m11_5  [key=2, style=dotted];
m11_290 -> m11_302  [key=2, style=dotted];
m11_290 -> m11_15  [key=2, style=dotted];
m11_291 -> m11_292  [key=0, style=solid];
m11_291 -> m11_7  [key=2, style=dotted];
m11_291 -> m11_8  [key=2, style=dotted];
m11_291 -> m11_293  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_291 -> m11_294  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_292 -> m11_293  [key=0, style=solid];
m11_292 -> m11_82  [key=2, style=dotted];
m11_293 -> m11_294  [key=0, style=solid];
m11_293 -> m11_9  [key=2, style=dotted];
m11_294 -> m11_295  [key=0, style=solid];
m11_294 -> m11_7  [key=2, style=dotted];
m11_294 -> m11_303  [key=2, style=dotted];
m11_294 -> m11_296  [color=darkseagreen4, key=1, label=c, style=dashed];
m11_295 -> m11_296  [key=0, style=solid];
m11_295 -> m11_57  [key=2, style=dotted];
m11_296 -> m11_297  [key=0, style=solid];
m11_296 -> m11_298  [color=darkseagreen4, key=1, label=newCollection, style=dashed];
m11_296 -> m11_299  [color=darkseagreen4, key=1, label=newCollection, style=dashed];
m11_297 -> m11_298  [key=0, style=solid];
m11_297 -> m11_9  [key=2, style=dotted];
m11_298 -> m11_299  [key=0, style=solid];
m11_298 -> m11_9  [key=2, style=dotted];
m11_299 -> m11_300  [key=0, style=solid];
m11_300 -> m11_301  [key=0, style=solid];
m11_300 -> m11_9  [key=2, style=dotted];
m11_301 -> m11_289  [color=blue, key=0, style=bold];
m11_625 -> m11_626  [key=0, style=solid];
m11_625 -> m11_628  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m11_626 -> m11_627  [key=0, style=solid];
m11_626 -> m11_629  [color=darkseagreen4, key=1, label=w, style=dashed];
m11_627 -> m11_628  [key=0, style=solid];
m11_627 -> m11_629  [key=0, style=solid];
m11_629 -> m11_630  [key=0, style=solid];
m11_629 -> m11_631  [key=2, style=dotted];
m11_628 -> m11_630  [key=0, style=solid];
m11_630 -> m11_625  [color=blue, key=0, style=bold];
m11_569 -> m11_570  [key=0, style=solid];
m11_570 -> m11_571  [key=0, style=solid];
m11_570 -> m11_578  [key=2, style=dotted];
m11_570 -> m11_579  [key=2, style=dotted];
m11_570 -> m11_572  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_571 -> m11_572  [key=0, style=solid];
m11_571 -> m11_7  [key=2, style=dotted];
m11_571 -> m11_574  [color=darkseagreen4, key=1, label=settings, style=dashed];
m11_572 -> m11_573  [key=0, style=solid];
m11_572 -> m11_568  [key=2, style=dotted];
m11_572 -> m11_574  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_574 -> m11_575  [key=0, style=solid];
m11_574 -> m11_160  [key=2, style=dotted];
m11_574 -> m11_576  [color=darkseagreen4, key=1, label=p2, style=dashed];
m11_573 -> m11_574  [key=0, style=solid];
m11_573 -> m11_9  [key=2, style=dotted];
m11_575 -> m11_576  [key=0, style=solid];
m11_575 -> m11_57  [key=2, style=dotted];
m11_576 -> m11_577  [key=0, style=solid];
m11_576 -> m11_9  [key=2, style=dotted];
m11_577 -> m11_569  [color=blue, key=0, style=bold];
m11_658 -> m11_659  [key=0, style=solid];
m11_658 -> m11_19  [color=darkorchid, key=3, label="method methodReturn int GetHashCode", style=bold];
m11_659 -> m11_660  [key=0, style=solid];
m11_659 -> m11_661  [key=0, style=solid];
m11_660 -> m11_662  [key=0, style=solid];
m11_661 -> m11_662  [key=0, style=solid];
m11_661 -> m11_663  [key=2, style=dotted];
m11_662 -> m11_658  [color=blue, key=0, style=bold];
m11_39 -> m11_40  [key=0, style=solid];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_37  [key=2, style=dotted];
m11_40 -> m11_42  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m11_40 -> m11_47  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_50  [key=2, style=dotted];
m11_41 -> m11_43  [color=darkseagreen4, key=1, label=sw, style=dashed];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_51  [key=2, style=dotted];
m11_42 -> m11_52  [key=2, style=dotted];
m11_42 -> m11_53  [key=2, style=dotted];
m11_47 -> m11_48  [key=0, style=solid];
m11_47 -> m11_38  [key=2, style=dotted];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_54  [key=2, style=dotted];
m11_43 -> m11_45  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_43 -> m11_46  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_9  [key=2, style=dotted];
m11_45 -> m11_46  [key=0, style=solid];
m11_45 -> m11_55  [key=2, style=dotted];
m11_45 -> m11_56  [key=2, style=dotted];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_34  [key=2, style=dotted];
m11_46 -> m11_35  [key=2, style=dotted];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_57  [key=2, style=dotted];
m11_49 -> m11_39  [color=blue, key=0, style=bold];
m11_199 -> m11_200  [key=0, style=solid];
m11_200 -> m11_201  [key=0, style=solid];
m11_200 -> m11_200  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_201 -> m11_202  [key=0, style=solid];
m11_201 -> m11_7  [key=2, style=dotted];
m11_201 -> m11_206  [key=2, style=dotted];
m11_201 -> m11_90  [key=2, style=dotted];
m11_201 -> m11_203  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_202 -> m11_203  [key=0, style=solid];
m11_202 -> m11_57  [key=2, style=dotted];
m11_203 -> m11_204  [key=0, style=solid];
m11_204 -> m11_205  [key=0, style=solid];
m11_204 -> m11_9  [key=2, style=dotted];
m11_205 -> m11_199  [color=blue, key=0, style=bold];
m11_207 -> m11_208  [key=0, style=solid];
m11_208 -> m11_209  [key=0, style=solid];
m11_209 -> m11_207  [color=blue, key=0, style=bold];
m11_210 -> m11_211  [key=0, style=solid];
m11_211 -> m11_212  [key=0, style=solid];
m11_211 -> m11_223  [key=2, style=dotted];
m11_211 -> m11_213  [color=darkseagreen4, key=1, label=binder, style=dashed];
m11_212 -> m11_213  [key=0, style=solid];
m11_212 -> m11_15  [key=2, style=dotted];
m11_212 -> m11_224  [key=2, style=dotted];
m11_212 -> m11_225  [key=2, style=dotted];
m11_213 -> m11_214  [key=0, style=solid];
m11_213 -> m11_7  [key=2, style=dotted];
m11_213 -> m11_8  [key=2, style=dotted];
m11_213 -> m11_215  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_214 -> m11_215  [key=0, style=solid];
m11_214 -> m11_9  [key=2, style=dotted];
m11_215 -> m11_216  [key=0, style=solid];
m11_215 -> m11_7  [key=2, style=dotted];
m11_215 -> m11_223  [key=2, style=dotted];
m11_215 -> m11_160  [key=2, style=dotted];
m11_215 -> m11_217  [color=darkseagreen4, key=1, label=newValues, style=dashed];
m11_215 -> m11_219  [color=darkseagreen4, key=1, label=newValues, style=dashed];
m11_215 -> m11_220  [color=darkseagreen4, key=1, label=newValues, style=dashed];
m11_216 -> m11_217  [key=0, style=solid];
m11_216 -> m11_57  [key=2, style=dotted];
m11_217 -> m11_218  [key=0, style=solid];
m11_219 -> m11_220  [key=0, style=solid];
m11_219 -> m11_57  [key=2, style=dotted];
m11_220 -> m11_221  [key=0, style=solid];
m11_218 -> m11_219  [key=0, style=solid];
m11_218 -> m11_9  [key=2, style=dotted];
m11_221 -> m11_222  [key=0, style=solid];
m11_221 -> m11_9  [key=2, style=dotted];
m11_222 -> m11_210  [color=blue, key=0, style=bold];
m11_106 -> m11_107  [key=0, style=solid];
m11_107 -> m11_108  [key=0, style=solid];
m11_107 -> m11_109  [color=darkseagreen4, key=1, label=employeeRef, style=dashed];
m11_108 -> m11_109  [key=0, style=solid];
m11_109 -> m11_110  [key=0, style=solid];
m11_110 -> m11_111  [key=0, style=solid];
m11_110 -> m11_7  [key=2, style=dotted];
m11_110 -> m11_90  [key=2, style=dotted];
m11_110 -> m11_112  [color=darkseagreen4, key=1, label=values, style=dashed];
m11_110 -> m11_113  [color=darkseagreen4, key=1, label=values, style=dashed];
m11_110 -> m11_119  [color=darkseagreen4, key=1, label=values, style=dashed];
m11_110 -> m11_120  [color=darkseagreen4, key=1, label=values, style=dashed];
m11_111 -> m11_112  [key=0, style=solid];
m11_111 -> m11_9  [key=2, style=dotted];
m11_112 -> m11_113  [key=0, style=solid];
m11_112 -> m11_114  [color=darkseagreen4, key=1, label=e, style=dashed];
m11_112 -> m11_115  [color=darkseagreen4, key=1, label=e, style=dashed];
m11_113 -> m11_114  [key=0, style=solid];
m11_113 -> m11_116  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_113 -> m11_117  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_113 -> m11_118  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_119 -> m11_120  [key=0, style=solid];
m11_119 -> m11_9  [key=2, style=dotted];
m11_120 -> m11_121  [key=0, style=solid];
m11_120 -> m11_9  [key=2, style=dotted];
m11_114 -> m11_115  [key=0, style=solid];
m11_114 -> m11_9  [key=2, style=dotted];
m11_115 -> m11_116  [key=0, style=solid];
m11_115 -> m11_9  [key=2, style=dotted];
m11_116 -> m11_117  [key=0, style=solid];
m11_116 -> m11_9  [key=2, style=dotted];
m11_117 -> m11_118  [key=0, style=solid];
m11_117 -> m11_105  [key=2, style=dotted];
m11_117 -> m11_9  [key=2, style=dotted];
m11_118 -> m11_119  [key=0, style=solid];
m11_118 -> m11_105  [key=2, style=dotted];
m11_118 -> m11_9  [key=2, style=dotted];
m11_121 -> m11_106  [color=blue, key=0, style=bold];
m11_122 -> m11_123  [key=0, style=solid];
m11_123 -> m11_124  [key=0, style=solid];
m11_123 -> m11_125  [color=darkseagreen4, key=1, label=employeeRef, style=dashed];
m11_123 -> m11_128  [color=darkseagreen4, key=1, label=employeeRef, style=dashed];
m11_124 -> m11_125  [key=0, style=solid];
m11_124 -> m11_128  [color=darkseagreen4, key=1, label=personRef, style=dashed];
m11_125 -> m11_126  [key=0, style=solid];
m11_128 -> m11_129  [key=0, style=solid];
m11_128 -> m11_130  [key=2, style=dotted];
m11_128 -> m11_56  [key=2, style=dotted];
m11_126 -> m11_127  [key=0, style=solid];
m11_126 -> m11_129  [key=0, style=solid];
m11_126 -> m11_7  [key=2, style=dotted];
m11_126 -> m11_90  [key=2, style=dotted];
m11_127 -> m11_128  [key=0, style=solid];
m11_129 -> m11_122  [color=blue, key=0, style=bold];
m11_161 -> m11_162  [key=0, style=solid];
m11_162 -> m11_163  [key=0, style=solid];
m11_162 -> m11_166  [color=darkseagreen4, key=1, label=containerTypeName, style=dashed];
m11_163 -> m11_164  [key=0, style=solid];
m11_163 -> m11_166  [color=darkseagreen4, key=1, label=productListTypeName, style=dashed];
m11_166 -> m11_167  [key=0, style=solid];
m11_166 -> m11_9  [key=2, style=dotted];
m11_164 -> m11_165  [key=0, style=solid];
m11_164 -> m11_168  [key=2, style=dotted];
m11_164 -> m11_15  [key=2, style=dotted];
m11_165 -> m11_166  [key=0, style=solid];
m11_165 -> m11_7  [key=2, style=dotted];
m11_165 -> m11_8  [key=2, style=dotted];
m11_167 -> m11_161  [color=blue, key=0, style=bold];
m11_238 -> m11_239  [key=0, style=solid];
m11_239 -> m11_240  [key=0, style=solid];
m11_239 -> m11_273  [key=2, style=dotted];
m11_239 -> m11_241  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m11_239 -> m11_242  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m11_239 -> m11_243  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m11_239 -> m11_244  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m11_239 -> m11_251  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m11_240 -> m11_241  [key=0, style=solid];
m11_240 -> m11_274  [key=2, style=dotted];
m11_241 -> m11_242  [key=0, style=solid];
m11_241 -> m11_5  [key=2, style=dotted];
m11_242 -> m11_243  [key=0, style=solid];
m11_242 -> m11_15  [key=2, style=dotted];
m11_242 -> m11_275  [key=2, style=dotted];
m11_243 -> m11_244  [key=0, style=solid];
m11_243 -> m11_274  [key=2, style=dotted];
m11_243 -> m11_276  [key=2, style=dotted];
m11_244 -> m11_245  [key=0, style=solid];
m11_244 -> m11_274  [key=2, style=dotted];
m11_251 -> m11_252  [key=0, style=solid];
m11_251 -> m11_277  [key=2, style=dotted];
m11_245 -> m11_246  [key=0, style=solid];
m11_245 -> m11_37  [key=2, style=dotted];
m11_245 -> m11_250  [color=darkseagreen4, key=1, label=serializingTester, style=dashed];
m11_245 -> m11_251  [color=darkseagreen4, key=1, label=serializingTester, style=dashed];
m11_246 -> m11_247  [key=0, style=solid];
m11_250 -> m11_251  [key=0, style=solid];
m11_247 -> m11_248  [key=0, style=solid];
m11_247 -> m11_50  [key=2, style=dotted];
m11_247 -> m11_252  [color=darkseagreen4, key=1, label=sw, style=dashed];
m11_248 -> m11_249  [key=0, style=solid];
m11_248 -> m11_51  [key=2, style=dotted];
m11_248 -> m11_251  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m11_252 -> m11_253  [key=0, style=solid];
m11_252 -> m11_54  [key=2, style=dotted];
m11_252 -> m11_257  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_252 -> m11_258  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_249 -> m11_250  [key=0, style=solid];
m11_253 -> m11_254  [key=0, style=solid];
m11_253 -> m11_82  [key=2, style=dotted];
m11_253 -> m11_256  [color=darkseagreen4, key=1, label=contentSubClassRef, style=dashed];
m11_257 -> m11_258  [key=0, style=solid];
m11_257 -> m11_9  [key=2, style=dotted];
m11_258 -> m11_259  [key=0, style=solid];
m11_258 -> m11_35  [key=2, style=dotted];
m11_258 -> m11_261  [color=darkseagreen4, key=1, label=sr, style=dashed];
m11_254 -> m11_255  [key=0, style=solid];
m11_254 -> m11_82  [key=2, style=dotted];
m11_254 -> m11_256  [color=darkseagreen4, key=1, label=dictionaryRef, style=dashed];
m11_256 -> m11_257  [key=0, style=solid];
m11_255 -> m11_256  [key=0, style=solid];
m11_255 -> m11_82  [key=2, style=dotted];
m11_259 -> m11_260  [key=0, style=solid];
m11_259 -> m11_37  [key=2, style=dotted];
m11_259 -> m11_262  [color=darkseagreen4, key=1, label=deserializingTester, style=dashed];
m11_259 -> m11_263  [color=darkseagreen4, key=1, label=deserializingTester, style=dashed];
m11_261 -> m11_262  [key=0, style=solid];
m11_261 -> m11_34  [key=2, style=dotted];
m11_261 -> m11_263  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m11_260 -> m11_261  [key=0, style=solid];
m11_262 -> m11_263  [key=0, style=solid];
m11_263 -> m11_264  [key=0, style=solid];
m11_263 -> m11_38  [key=2, style=dotted];
m11_263 -> m11_265  [color=darkseagreen4, key=1, label=anotherTestObject, style=dashed];
m11_263 -> m11_266  [color=darkseagreen4, key=1, label=anotherTestObject, style=dashed];
m11_263 -> m11_267  [color=darkseagreen4, key=1, label=anotherTestObject, style=dashed];
m11_263 -> m11_268  [color=darkseagreen4, key=1, label=anotherTestObject, style=dashed];
m11_264 -> m11_265  [key=0, style=solid];
m11_264 -> m11_278  [key=2, style=dotted];
m11_265 -> m11_266  [key=0, style=solid];
m11_265 -> m11_57  [key=2, style=dotted];
m11_266 -> m11_267  [key=0, style=solid];
m11_266 -> m11_57  [key=2, style=dotted];
m11_267 -> m11_268  [key=0, style=solid];
m11_267 -> m11_9  [key=2, style=dotted];
m11_268 -> m11_269  [key=0, style=solid];
m11_268 -> m11_270  [color=darkseagreen4, key=1, label=list, style=dashed];
m11_268 -> m11_271  [color=darkseagreen4, key=1, label=list, style=dashed];
m11_269 -> m11_270  [key=0, style=solid];
m11_269 -> m11_57  [key=2, style=dotted];
m11_270 -> m11_271  [key=0, style=solid];
m11_270 -> m11_9  [key=2, style=dotted];
m11_271 -> m11_272  [key=0, style=solid];
m11_271 -> m11_57  [key=2, style=dotted];
m11_272 -> m11_238  [color=blue, key=0, style=bold];
m11_362 -> m11_363  [key=0, style=solid];
m11_362 -> m11_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.TypeNameHandling", style=dashed];
m11_362 -> m11_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper", style=dashed];
m11_362 -> m11_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper", style=dashed];
m11_362 -> m11_355  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Tests.Serialization.SerializableWrapper e", style=bold];
m11_362 -> m11_356  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.TypeNameHandling flag", style=bold];
m11_362 -> m11_357  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.TypeNameHandling flag", style=bold];
m11_362 -> m11_2  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.TypeNameHandling flag", style=bold];
m11_363 -> m11_364  [key=0, style=solid];
m11_363 -> m11_373  [key=2, style=dotted];
m11_363 -> m11_374  [key=2, style=dotted];
m11_366 -> m11_367  [key=0, style=solid];
m11_367 -> m11_368  [key=0, style=solid];
m11_367 -> m11_51  [key=2, style=dotted];
m11_367 -> m11_277  [key=2, style=dotted];
m11_371 -> m11_372  [key=0, style=solid];
m11_371 -> m11_9  [key=2, style=dotted];
m11_364 -> m11_365  [key=0, style=solid];
m11_364 -> m11_50  [key=2, style=dotted];
m11_364 -> m11_367  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_364 -> m11_368  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_364 -> m11_370  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_365 -> m11_366  [key=0, style=solid];
m11_365 -> m11_37  [key=2, style=dotted];
m11_365 -> m11_367  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m11_365 -> m11_370  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m11_368 -> m11_369  [key=0, style=solid];
m11_368 -> m11_54  [key=2, style=dotted];
m11_368 -> m11_374  [key=2, style=dotted];
m11_370 -> m11_371  [key=0, style=solid];
m11_370 -> m11_34  [key=2, style=dotted];
m11_370 -> m11_35  [key=2, style=dotted];
m11_370 -> m11_54  [key=2, style=dotted];
m11_370 -> m11_38  [key=2, style=dotted];
m11_369 -> m11_370  [key=0, style=solid];
m11_369 -> m11_375  [key=2, style=dotted];
m11_372 -> m11_362  [color=blue, key=0, style=bold];
m11_435 -> m11_436  [key=0, style=solid];
m11_436 -> m11_437  [key=0, style=solid];
m11_436 -> m11_453  [key=2, style=dotted];
m11_436 -> m11_438  [color=darkseagreen4, key=1, label=o1, style=dashed];
m11_436 -> m11_439  [color=darkseagreen4, key=1, label=o1, style=dashed];
m11_436 -> m11_440  [color=darkseagreen4, key=1, label=o1, style=dashed];
m11_436 -> m11_441  [color=darkseagreen4, key=1, label=o1, style=dashed];
m11_436 -> m11_442  [color=darkseagreen4, key=1, label=o1, style=dashed];
m11_437 -> m11_438  [key=0, style=solid];
m11_437 -> m11_418  [key=2, style=dotted];
m11_438 -> m11_439  [key=0, style=solid];
m11_439 -> m11_440  [key=0, style=solid];
m11_439 -> m11_418  [key=2, style=dotted];
m11_440 -> m11_441  [key=0, style=solid];
m11_441 -> m11_442  [key=0, style=solid];
m11_442 -> m11_443  [key=0, style=solid];
m11_442 -> m11_182  [key=2, style=dotted];
m11_442 -> m11_444  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_442 -> m11_445  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_443 -> m11_444  [key=0, style=solid];
m11_443 -> m11_443  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m11_444 -> m11_445  [key=0, style=solid];
m11_444 -> m11_9  [key=2, style=dotted];
m11_445 -> m11_446  [key=0, style=solid];
m11_445 -> m11_75  [key=2, style=dotted];
m11_445 -> m11_447  [color=darkseagreen4, key=1, label=o2, style=dashed];
m11_445 -> m11_448  [color=darkseagreen4, key=1, label=o2, style=dashed];
m11_445 -> m11_449  [color=darkseagreen4, key=1, label=o2, style=dashed];
m11_445 -> m11_450  [color=darkseagreen4, key=1, label=o2, style=dashed];
m11_445 -> m11_451  [color=darkseagreen4, key=1, label=o2, style=dashed];
m11_446 -> m11_447  [key=0, style=solid];
m11_446 -> m11_278  [key=2, style=dotted];
m11_447 -> m11_448  [key=0, style=solid];
m11_447 -> m11_57  [key=2, style=dotted];
m11_448 -> m11_449  [key=0, style=solid];
m11_448 -> m11_9  [key=2, style=dotted];
m11_449 -> m11_450  [key=0, style=solid];
m11_449 -> m11_57  [key=2, style=dotted];
m11_450 -> m11_451  [key=0, style=solid];
m11_450 -> m11_57  [key=2, style=dotted];
m11_451 -> m11_452  [key=0, style=solid];
m11_451 -> m11_454  [key=2, style=dotted];
m11_451 -> m11_9  [key=2, style=dotted];
m11_452 -> m11_435  [color=blue, key=0, style=bold];
m11_321 -> m11_322  [key=0, style=solid];
m11_321 -> m11_323  [color=crimson, key=0, style=bold];
m11_321 -> m11_324  [color=crimson, key=0, style=bold];
m11_321 -> m11_328  [color=crimson, key=0, style=bold];
m11_322 -> m11_323  [key=0, style=solid];
m11_322 -> m11_324  [key=0, style=solid];
m11_323 -> m11_324  [key=0, style=solid];
m11_324 -> m11_325  [key=0, style=solid];
m11_328 -> m11_329  [key=0, style=solid];
m11_325 -> m11_326  [key=0, style=solid];
m11_325 -> m11_327  [color=darkseagreen4, key=1, label=nextInLine, style=dashed];
m11_325 -> m11_328  [color=darkseagreen4, key=1, label=nextInLine, style=dashed];
m11_325 -> m11_329  [color=darkseagreen4, key=1, label=nextInLine, style=dashed];
m11_326 -> m11_327  [key=0, style=solid];
m11_326 -> m11_330  [key=0, style=solid];
m11_327 -> m11_328  [key=0, style=solid];
m11_327 -> m11_329  [key=0, style=solid];
m11_329 -> m11_326  [key=0, style=solid];
m11_329 -> m11_329  [color=darkseagreen4, key=1, label=nextInLine, style=dashed];
m11_330 -> m11_321  [color=blue, key=0, style=bold];
m11_455 -> m11_456  [key=0, style=solid];
m11_456 -> m11_457  [key=0, style=solid];
m11_456 -> m11_468  [key=2, style=dotted];
m11_456 -> m11_458  [color=darkseagreen4, key=1, label=c1, style=dashed];
m11_457 -> m11_458  [key=0, style=solid];
m11_457 -> m11_15  [key=2, style=dotted];
m11_457 -> m11_418  [key=2, style=dotted];
m11_458 -> m11_459  [key=0, style=solid];
m11_458 -> m11_182  [key=2, style=dotted];
m11_458 -> m11_460  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_459 -> m11_460  [key=0, style=solid];
m11_459 -> m11_9  [key=2, style=dotted];
m11_460 -> m11_461  [key=0, style=solid];
m11_460 -> m11_75  [key=2, style=dotted];
m11_460 -> m11_462  [color=darkseagreen4, key=1, label=c2, style=dashed];
m11_460 -> m11_463  [color=darkseagreen4, key=1, label=c2, style=dashed];
m11_460 -> m11_464  [color=darkseagreen4, key=1, label=c2, style=dashed];
m11_460 -> m11_465  [color=darkseagreen4, key=1, label=c2, style=dashed];
m11_461 -> m11_462  [key=0, style=solid];
m11_461 -> m11_9  [key=2, style=dotted];
m11_462 -> m11_463  [key=0, style=solid];
m11_462 -> m11_57  [key=2, style=dotted];
m11_463 -> m11_464  [key=0, style=solid];
m11_463 -> m11_57  [key=2, style=dotted];
m11_464 -> m11_465  [key=0, style=solid];
m11_464 -> m11_57  [key=2, style=dotted];
m11_465 -> m11_466  [key=0, style=solid];
m11_466 -> m11_467  [key=0, style=solid];
m11_466 -> m11_9  [key=2, style=dotted];
m11_467 -> m11_455  [color=blue, key=0, style=bold];
m11_91 -> m11_92  [key=0, style=solid];
m11_92 -> m11_93  [key=0, style=solid];
m11_92 -> m11_82  [key=2, style=dotted];
m11_93 -> m11_94  [key=0, style=solid];
m11_94 -> m11_95  [key=0, style=solid];
m11_94 -> m11_7  [key=2, style=dotted];
m11_94 -> m11_90  [key=2, style=dotted];
m11_95 -> m11_96  [key=0, style=solid];
m11_95 -> m11_57  [key=2, style=dotted];
m11_96 -> m11_91  [color=blue, key=0, style=bold];
m11_304 -> m11_305  [key=0, style=solid];
m11_305 -> m11_306  [key=0, style=solid];
m11_305 -> m11_82  [key=2, style=dotted];
m11_305 -> m11_308  [color=darkseagreen4, key=1, label=productClassRef, style=dashed];
m11_306 -> m11_307  [key=0, style=solid];
m11_306 -> m11_310  [key=2, style=dotted];
m11_308 -> m11_309  [key=0, style=solid];
m11_308 -> m11_9  [key=2, style=dotted];
m11_307 -> m11_308  [key=0, style=solid];
m11_307 -> m11_7  [key=2, style=dotted];
m11_307 -> m11_8  [key=2, style=dotted];
m11_309 -> m11_304  [color=blue, key=0, style=bold];
m11_353 -> m11_354  [key=0, style=solid];
m11_354 -> m11_355  [key=0, style=solid];
m11_354 -> m11_360  [key=2, style=dotted];
m11_355 -> m11_356  [key=0, style=solid];
m11_355 -> m11_361  [key=2, style=dotted];
m11_355 -> m11_357  [color=darkseagreen4, key=1, label=w, style=dashed];
m11_355 -> m11_358  [color=darkseagreen4, key=1, label=w, style=dashed];
m11_356 -> m11_357  [key=0, style=solid];
m11_356 -> m11_362  [key=2, style=dotted];
m11_357 -> m11_358  [key=0, style=solid];
m11_357 -> m11_362  [key=2, style=dotted];
m11_358 -> m11_359  [key=0, style=solid];
m11_358 -> m11_362  [key=2, style=dotted];
m11_359 -> m11_353  [color=blue, key=0, style=bold];
m11_331 -> m11_332  [key=0, style=solid];
m11_331 -> m11_321  [color=darkorchid, key=3, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator", style=bold];
m11_332 -> m11_333  [key=0, style=solid];
m11_332 -> m11_321  [key=2, style=dotted];
m11_333 -> m11_331  [color=blue, key=0, style=bold];
m11_63 -> m11_64  [key=0, style=solid];
m11_64 -> m11_65  [key=0, style=solid];
m11_64 -> m11_73  [key=2, style=dotted];
m11_64 -> m11_66  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m11_64 -> m11_67  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m11_65 -> m11_66  [key=0, style=solid];
m11_65 -> m11_15  [key=2, style=dotted];
m11_65 -> m11_74  [key=2, style=dotted];
m11_66 -> m11_67  [key=0, style=solid];
m11_66 -> m11_5  [key=2, style=dotted];
m11_66 -> m11_74  [key=2, style=dotted];
m11_67 -> m11_68  [key=0, style=solid];
m11_67 -> m11_7  [key=2, style=dotted];
m11_67 -> m11_8  [key=2, style=dotted];
m11_67 -> m11_69  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_68 -> m11_69  [key=0, style=solid];
m11_68 -> m11_9  [key=2, style=dotted];
m11_69 -> m11_70  [key=0, style=solid];
m11_69 -> m11_75  [key=2, style=dotted];
m11_69 -> m11_71  [color=darkseagreen4, key=1, label=w2, style=dashed];
m11_70 -> m11_71  [key=0, style=solid];
m11_70 -> m11_57  [key=2, style=dotted];
m11_71 -> m11_72  [key=0, style=solid];
m11_71 -> m11_57  [key=2, style=dotted];
m11_72 -> m11_63  [color=blue, key=0, style=bold];
m11_644 -> m11_645  [key=0, style=solid];
m11_645 -> m11_646  [key=0, style=solid];
m11_645 -> m11_624  [key=2, style=dotted];
m11_646 -> m11_644  [color=blue, key=0, style=bold];
m11_469 -> m11_470  [key=0, style=solid];
m11_470 -> m11_471  [key=0, style=solid];
m11_470 -> m11_468  [key=2, style=dotted];
m11_470 -> m11_15  [key=2, style=dotted];
m11_470 -> m11_418  [key=2, style=dotted];
m11_471 -> m11_472  [key=0, style=solid];
m11_471 -> m11_182  [key=2, style=dotted];
m11_471 -> m11_473  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_472 -> m11_473  [key=0, style=solid];
m11_472 -> m11_9  [key=2, style=dotted];
m11_473 -> m11_474  [key=0, style=solid];
m11_473 -> m11_75  [key=2, style=dotted];
m11_473 -> m11_475  [color=darkseagreen4, key=1, label=c2, style=dashed];
m11_473 -> m11_476  [color=darkseagreen4, key=1, label=c2, style=dashed];
m11_473 -> m11_477  [color=darkseagreen4, key=1, label=c2, style=dashed];
m11_474 -> m11_475  [key=0, style=solid];
m11_474 -> m11_9  [key=2, style=dotted];
m11_475 -> m11_476  [key=0, style=solid];
m11_475 -> m11_57  [key=2, style=dotted];
m11_476 -> m11_477  [key=0, style=solid];
m11_476 -> m11_57  [key=2, style=dotted];
m11_477 -> m11_478  [key=0, style=solid];
m11_478 -> m11_479  [key=0, style=solid];
m11_478 -> m11_57  [key=2, style=dotted];
m11_479 -> m11_480  [key=0, style=solid];
m11_480 -> m11_481  [key=0, style=solid];
m11_480 -> m11_75  [key=2, style=dotted];
m11_480 -> m11_482  [color=darkseagreen4, key=1, label=c2, style=dashed];
m11_480 -> m11_483  [color=darkseagreen4, key=1, label=c2, style=dashed];
m11_480 -> m11_484  [color=darkseagreen4, key=1, label=c2, style=dashed];
m11_481 -> m11_482  [key=0, style=solid];
m11_481 -> m11_9  [key=2, style=dotted];
m11_482 -> m11_483  [key=0, style=solid];
m11_482 -> m11_57  [key=2, style=dotted];
m11_483 -> m11_484  [key=0, style=solid];
m11_483 -> m11_57  [key=2, style=dotted];
m11_484 -> m11_485  [key=0, style=solid];
m11_484 -> m11_486  [color=darkseagreen4, key=1, label=c, style=dashed];
m11_485 -> m11_486  [key=0, style=solid];
m11_485 -> m11_57  [key=2, style=dotted];
m11_486 -> m11_487  [key=0, style=solid];
m11_487 -> m11_488  [key=0, style=solid];
m11_487 -> m11_9  [key=2, style=dotted];
m11_488 -> m11_469  [color=blue, key=0, style=bold];
m11_83 -> m11_84  [key=0, style=solid];
m11_84 -> m11_85  [key=0, style=solid];
m11_84 -> m11_82  [key=2, style=dotted];
m11_85 -> m11_86  [key=0, style=solid];
m11_86 -> m11_87  [key=0, style=solid];
m11_86 -> m11_7  [key=2, style=dotted];
m11_86 -> m11_90  [key=2, style=dotted];
m11_86 -> m11_88  [color=darkseagreen4, key=1, label=employee, style=dashed];
m11_87 -> m11_88  [key=0, style=solid];
m11_87 -> m11_57  [key=2, style=dotted];
m11_88 -> m11_89  [key=0, style=solid];
m11_88 -> m11_9  [key=2, style=dotted];
m11_89 -> m11_83  [color=blue, key=0, style=bold];
m11_420 -> m11_421  [key=0, style=solid];
m11_421 -> m11_422  [key=0, style=solid];
m11_421 -> m11_434  [key=2, style=dotted];
m11_421 -> m11_423  [color=darkseagreen4, key=1, label=l, style=dashed];
m11_421 -> m11_424  [color=darkseagreen4, key=1, label=l, style=dashed];
m11_421 -> m11_425  [color=darkseagreen4, key=1, label=l, style=dashed];
m11_422 -> m11_423  [key=0, style=solid];
m11_422 -> m11_418  [key=2, style=dotted];
m11_422 -> m11_275  [key=2, style=dotted];
m11_423 -> m11_424  [key=0, style=solid];
m11_423 -> m11_275  [key=2, style=dotted];
m11_424 -> m11_425  [key=0, style=solid];
m11_424 -> m11_275  [key=2, style=dotted];
m11_425 -> m11_426  [key=0, style=solid];
m11_425 -> m11_182  [key=2, style=dotted];
m11_425 -> m11_427  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_426 -> m11_427  [key=0, style=solid];
m11_426 -> m11_9  [key=2, style=dotted];
m11_427 -> m11_428  [key=0, style=solid];
m11_427 -> m11_75  [key=2, style=dotted];
m11_427 -> m11_429  [color=darkseagreen4, key=1, label=l2, style=dashed];
m11_427 -> m11_430  [color=darkseagreen4, key=1, label=l2, style=dashed];
m11_427 -> m11_431  [color=darkseagreen4, key=1, label=l2, style=dashed];
m11_427 -> m11_432  [color=darkseagreen4, key=1, label=l2, style=dashed];
m11_428 -> m11_429  [key=0, style=solid];
m11_428 -> m11_9  [key=2, style=dotted];
m11_429 -> m11_430  [key=0, style=solid];
m11_429 -> m11_57  [key=2, style=dotted];
m11_430 -> m11_431  [key=0, style=solid];
m11_430 -> m11_9  [key=2, style=dotted];
m11_431 -> m11_432  [key=0, style=solid];
m11_431 -> m11_57  [key=2, style=dotted];
m11_432 -> m11_433  [key=0, style=solid];
m11_432 -> m11_57  [key=2, style=dotted];
m11_433 -> m11_420  [color=blue, key=0, style=bold];
m11_376 -> m11_377  [key=0, style=solid];
m11_377 -> m11_378  [key=0, style=solid];
m11_377 -> m11_287  [key=2, style=dotted];
m11_377 -> m11_381  [key=2, style=dotted];
m11_378 -> m11_379  [key=0, style=solid];
m11_378 -> m11_7  [key=2, style=dotted];
m11_378 -> m11_382  [key=2, style=dotted];
m11_378 -> m11_383  [key=2, style=dotted];
m11_378 -> m11_8  [key=2, style=dotted];
m11_379 -> m11_380  [key=0, style=solid];
m11_379 -> m11_9  [key=2, style=dotted];
m11_380 -> m11_376  [color=blue, key=0, style=bold];
m11_150 -> m11_151  [key=0, style=solid];
m11_151 -> m11_152  [key=0, style=solid];
m11_152 -> m11_153  [key=0, style=solid];
m11_153 -> m11_154  [key=0, style=solid];
m11_153 -> m11_7  [key=2, style=dotted];
m11_153 -> m11_160  [key=2, style=dotted];
m11_153 -> m11_155  [color=darkseagreen4, key=1, label=message, style=dashed];
m11_154 -> m11_155  [key=0, style=solid];
m11_154 -> m11_57  [key=2, style=dotted];
m11_155 -> m11_156  [key=0, style=solid];
m11_155 -> m11_157  [color=darkseagreen4, key=1, label=request, style=dashed];
m11_155 -> m11_158  [color=darkseagreen4, key=1, label=request, style=dashed];
m11_156 -> m11_157  [key=0, style=solid];
m11_156 -> m11_9  [key=2, style=dotted];
m11_157 -> m11_158  [key=0, style=solid];
m11_157 -> m11_9  [key=2, style=dotted];
m11_158 -> m11_159  [key=0, style=solid];
m11_158 -> m11_9  [key=2, style=dotted];
m11_159 -> m11_150  [color=blue, key=0, style=bold];
m11_334 -> m11_335  [key=0, style=solid];
m11_335 -> m11_336  [key=0, style=solid];
m11_335 -> m11_351  [key=2, style=dotted];
m11_335 -> m11_338  [color=darkseagreen4, key=1, label=testerObject, style=dashed];
m11_335 -> m11_342  [color=darkseagreen4, key=1, label=testerObject, style=dashed];
m11_336 -> m11_337  [key=0, style=solid];
m11_336 -> m11_105  [key=2, style=dotted];
m11_338 -> m11_339  [key=0, style=solid];
m11_342 -> m11_343  [key=0, style=solid];
m11_342 -> m11_8  [key=2, style=dotted];
m11_342 -> m11_344  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_342 -> m11_345  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_337 -> m11_338  [key=0, style=solid];
m11_337 -> m11_349  [color=darkseagreen4, key=1, label=data, style=dashed];
m11_349 -> m11_350  [key=0, style=solid];
m11_349 -> m11_352  [key=2, style=dotted];
m11_339 -> m11_340  [key=0, style=solid];
m11_339 -> m11_7  [key=2, style=dotted];
m11_339 -> m11_341  [color=darkseagreen4, key=1, label=jsonSettings, style=dashed];
m11_339 -> m11_342  [color=darkseagreen4, key=1, label=jsonSettings, style=dashed];
m11_339 -> m11_345  [color=darkseagreen4, key=1, label=jsonSettings, style=dashed];
m11_340 -> m11_341  [key=0, style=solid];
m11_341 -> m11_342  [key=0, style=solid];
m11_345 -> m11_346  [key=0, style=solid];
m11_345 -> m11_160  [key=2, style=dotted];
m11_345 -> m11_347  [color=darkseagreen4, key=1, label=obj, style=dashed];
m11_345 -> m11_348  [color=darkseagreen4, key=1, label=obj, style=dashed];
m11_343 -> m11_344  [key=0, style=solid];
m11_343 -> m11_82  [key=2, style=dotted];
m11_344 -> m11_345  [key=0, style=solid];
m11_344 -> m11_9  [key=2, style=dotted];
m11_346 -> m11_347  [key=0, style=solid];
m11_346 -> m11_278  [key=2, style=dotted];
m11_347 -> m11_348  [key=0, style=solid];
m11_347 -> m11_56  [key=2, style=dotted];
m11_348 -> m11_349  [key=0, style=solid];
m11_350 -> m11_334  [color=blue, key=0, style=bold];
m11_97 -> m11_98  [key=0, style=solid];
m11_98 -> m11_99  [key=0, style=solid];
m11_98 -> m11_102  [color=darkseagreen4, key=1, label=employeeRef, style=dashed];
m11_99 -> m11_100  [key=0, style=solid];
m11_99 -> m11_102  [color=darkseagreen4, key=1, label=personRef, style=dashed];
m11_102 -> m11_103  [key=0, style=solid];
m11_102 -> m11_9  [key=2, style=dotted];
m11_100 -> m11_101  [key=0, style=solid];
m11_100 -> m11_15  [key=2, style=dotted];
m11_100 -> m11_74  [key=2, style=dotted];
m11_100 -> m11_104  [key=2, style=dotted];
m11_100 -> m11_105  [key=2, style=dotted];
m11_101 -> m11_102  [key=0, style=solid];
m11_101 -> m11_7  [key=2, style=dotted];
m11_101 -> m11_8  [key=2, style=dotted];
m11_103 -> m11_97  [color=blue, key=0, style=bold];
m11_556 -> m11_557  [key=0, style=solid];
m11_557 -> m11_558  [key=0, style=solid];
m11_557 -> m11_560  [color=darkseagreen4, key=1, label=contextKey, style=dashed];
m11_557 -> m11_565  [color=darkseagreen4, key=1, label=contextKey, style=dashed];
m11_557 -> m11_557  [color=darkorchid, key=3, label="Local variable string contextKey", style=bold];
m11_558 -> m11_559  [key=0, style=solid];
m11_558 -> m11_567  [key=2, style=dotted];
m11_558 -> m11_560  [color=darkseagreen4, key=1, label=someValue, style=dashed];
m11_558 -> m11_565  [color=darkseagreen4, key=1, label=someValue, style=dashed];
m11_560 -> m11_561  [key=0, style=solid];
m11_560 -> m11_275  [key=2, style=dotted];
m11_565 -> m11_566  [key=0, style=solid];
m11_565 -> m11_9  [key=2, style=dotted];
m11_559 -> m11_560  [key=0, style=solid];
m11_559 -> m11_5  [key=2, style=dotted];
m11_559 -> m11_562  [color=darkseagreen4, key=1, label=inputContext, style=dashed];
m11_562 -> m11_563  [key=0, style=solid];
m11_562 -> m11_568  [key=2, style=dotted];
m11_562 -> m11_564  [color=darkseagreen4, key=1, label=serializedString, style=dashed];
m11_561 -> m11_562  [key=0, style=solid];
m11_561 -> m11_7  [key=2, style=dotted];
m11_561 -> m11_564  [color=darkseagreen4, key=1, label=jsonSerializerSettings, style=dashed];
m11_564 -> m11_565  [key=0, style=solid];
m11_564 -> m11_303  [key=2, style=dotted];
m11_563 -> m11_564  [key=0, style=solid];
m11_563 -> m11_374  [key=2, style=dotted];
m11_566 -> m11_556  [color=blue, key=0, style=bold];
m11_131 -> m11_132  [key=0, style=solid];
m11_132 -> m11_133  [key=0, style=solid];
m11_133 -> m11_134  [key=0, style=solid];
m11_134 -> m11_135  [key=0, style=solid];
m11_134 -> m11_137  [key=2, style=dotted];
m11_135 -> m11_136  [key=0, style=solid];
m11_135 -> m11_138  [key=2, style=dotted];
m11_135 -> m11_9  [key=2, style=dotted];
m11_136 -> m11_131  [color=blue, key=0, style=bold];
m11_384 -> m11_385  [key=0, style=solid];
m11_384 -> m11_77  [color=darkorchid, key=3, label="method methodReturn System.Type BindToType", style=bold];
m11_385 -> m11_386  [key=0, style=solid];
m11_386 -> m11_384  [color=blue, key=0, style=bold];
m11_228 -> m11_229  [key=0, style=solid];
m11_228 -> m11_230  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_229 -> m11_230  [key=0, style=solid];
m11_229 -> m11_231  [color=darkseagreen4, key=1, label="out string", style=dashed];
m11_230 -> m11_231  [key=0, style=solid];
m11_231 -> m11_228  [color=blue, key=0, style=bold];
m11_139 -> m11_140  [key=0, style=solid];
m11_140 -> m11_141  [key=0, style=solid];
m11_140 -> m11_144  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_140 -> m11_140  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_141 -> m11_142  [key=0, style=solid];
m11_141 -> m11_27  [key=2, style=dotted];
m11_141 -> m11_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_142 -> m11_139  [color=blue, key=0, style=bold];
m11_310 -> m11_316  [key=0, style=solid];
m11_316 -> m11_317  [key=0, style=solid];
m11_317 -> m11_310  [color=blue, key=0, style=bold];
m11_223 -> m11_226  [key=0, style=solid];
m11_226 -> m11_227  [key=0, style=solid];
m11_227 -> m11_223  [color=blue, key=0, style=bold];
m11_146 -> m11_147  [key=0, style=solid];
m11_147 -> m11_148  [key=0, style=solid];
m11_148 -> m11_149  [key=0, style=solid];
m11_149 -> m11_146  [color=blue, key=0, style=bold];
m11_143 -> m11_144  [key=0, style=solid];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_34  [key=2, style=dotted];
m11_29 -> m11_35  [key=2, style=dotted];
m11_29 -> m11_36  [key=2, style=dotted];
m11_29 -> m11_32  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_28 -> m11_29  [key=0, style=solid];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_37  [key=2, style=dotted];
m11_30 -> m11_32  [color=darkseagreen4, key=1, label=ser, style=dashed];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_38  [key=2, style=dotted];
m11_31 -> m11_32  [key=0, style=solid];
m11_33 -> m11_28  [color=blue, key=0, style=bold];
m11_144 -> m11_145  [key=0, style=solid];
m11_144 -> m11_7  [key=2, style=dotted];
m11_144 -> m11_90  [key=2, style=dotted];
m11_145 -> m11_143  [color=blue, key=0, style=bold];
m11_58 -> m11_59  [key=0, style=solid];
m11_59 -> m11_60  [key=0, style=solid];
m11_59 -> m11_52  [key=2, style=dotted];
m11_59 -> m11_7  [key=2, style=dotted];
m11_59 -> m11_62  [key=2, style=dotted];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_9  [key=2, style=dotted];
m11_61 -> m11_58  [color=blue, key=0, style=bold];
m11_169 -> m11_170  [key=0, style=solid];
m11_170 -> m11_171  [key=0, style=solid];
m11_170 -> m11_82  [key=2, style=dotted];
m11_170 -> m11_173  [color=darkseagreen4, key=1, label=typeNamePropertyRef, style=dashed];
m11_171 -> m11_172  [key=0, style=solid];
m11_171 -> m11_181  [key=2, style=dotted];
m11_173 -> m11_174  [key=0, style=solid];
m11_173 -> m11_9  [key=2, style=dotted];
m11_172 -> m11_173  [key=0, style=solid];
m11_172 -> m11_182  [key=2, style=dotted];
m11_172 -> m11_174  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_174 -> m11_175  [key=0, style=solid];
m11_174 -> m11_75  [key=2, style=dotted];
m11_174 -> m11_176  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m11_174 -> m11_177  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m11_175 -> m11_176  [key=0, style=solid];
m11_175 -> m11_9  [key=2, style=dotted];
m11_176 -> m11_177  [key=0, style=solid];
m11_176 -> m11_57  [key=2, style=dotted];
m11_177 -> m11_178  [key=0, style=solid];
m11_177 -> m11_179  [color=darkseagreen4, key=1, label=nested, style=dashed];
m11_178 -> m11_179  [key=0, style=solid];
m11_178 -> m11_9  [key=2, style=dotted];
m11_179 -> m11_180  [key=0, style=solid];
m11_179 -> m11_9  [key=2, style=dotted];
m11_180 -> m11_169  [color=blue, key=0, style=bold];
m11_392 -> m11_393  [key=0, style=solid];
m11_393 -> m11_394  [key=0, style=solid];
m11_393 -> m11_400  [key=2, style=dotted];
m11_393 -> m11_395  [color=darkseagreen4, key=1, label=l, style=dashed];
m11_393 -> m11_396  [color=darkseagreen4, key=1, label=l, style=dashed];
m11_393 -> m11_397  [color=darkseagreen4, key=1, label=l, style=dashed];
m11_394 -> m11_395  [key=0, style=solid];
m11_394 -> m11_401  [key=2, style=dotted];
m11_395 -> m11_396  [key=0, style=solid];
m11_395 -> m11_401  [key=2, style=dotted];
m11_396 -> m11_397  [key=0, style=solid];
m11_396 -> m11_401  [key=2, style=dotted];
m11_397 -> m11_398  [key=0, style=solid];
m11_397 -> m11_182  [key=2, style=dotted];
m11_398 -> m11_399  [key=0, style=solid];
m11_398 -> m11_9  [key=2, style=dotted];
m11_399 -> m11_392  [color=blue, key=0, style=bold];
m11_76 -> m11_77  [key=0, style=solid];
m11_77 -> m11_78  [key=0, style=solid];
m11_77 -> m11_82  [key=2, style=dotted];
m11_77 -> m11_80  [color=darkseagreen4, key=1, label=employeeRef, style=dashed];
m11_78 -> m11_79  [key=0, style=solid];
m11_78 -> m11_74  [key=2, style=dotted];
m11_80 -> m11_81  [key=0, style=solid];
m11_80 -> m11_9  [key=2, style=dotted];
m11_79 -> m11_80  [key=0, style=solid];
m11_79 -> m11_7  [key=2, style=dotted];
m11_79 -> m11_8  [key=2, style=dotted];
m11_81 -> m11_76  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_5  [key=2, style=dotted];
m11_1 -> m11_6  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_7  [key=2, style=dotted];
m11_2 -> m11_8  [key=2, style=dotted];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_9  [key=2, style=dotted];
m11_4 -> m11_0  [color=blue, key=0, style=bold];
m11_528 -> m11_529  [key=0, style=solid];
m11_529 -> m11_530  [key=0, style=solid];
m11_529 -> m11_554  [key=2, style=dotted];
m11_529 -> m11_535  [color=darkseagreen4, key=1, label=d1, style=dashed];
m11_529 -> m11_536  [color=darkseagreen4, key=1, label=d1, style=dashed];
m11_530 -> m11_531  [key=0, style=solid];
m11_530 -> m11_555  [key=2, style=dotted];
m11_530 -> m11_534  [color=darkseagreen4, key=1, label=data, style=dashed];
m11_530 -> m11_535  [color=darkseagreen4, key=1, label=data, style=dashed];
m11_535 -> m11_536  [key=0, style=solid];
m11_536 -> m11_537  [key=0, style=solid];
m11_536 -> m11_182  [key=2, style=dotted];
m11_536 -> m11_538  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_531 -> m11_532  [key=0, style=solid];
m11_531 -> m11_418  [key=2, style=dotted];
m11_534 -> m11_535  [key=0, style=solid];
m11_532 -> m11_533  [key=0, style=solid];
m11_532 -> m11_555  [key=2, style=dotted];
m11_532 -> m11_534  [color=darkseagreen4, key=1, label=data2, style=dashed];
m11_533 -> m11_534  [key=0, style=solid];
m11_533 -> m11_418  [key=2, style=dotted];
m11_537 -> m11_538  [key=0, style=solid];
m11_537 -> m11_9  [key=2, style=dotted];
m11_538 -> m11_539  [key=0, style=solid];
m11_538 -> m11_75  [key=2, style=dotted];
m11_538 -> m11_540  [color=darkseagreen4, key=1, label=d2, style=dashed];
m11_538 -> m11_541  [color=darkseagreen4, key=1, label=d2, style=dashed];
m11_539 -> m11_540  [key=0, style=solid];
m11_539 -> m11_278  [key=2, style=dotted];
m11_540 -> m11_541  [key=0, style=solid];
m11_540 -> m11_278  [key=2, style=dotted];
m11_541 -> m11_542  [key=0, style=solid];
m11_541 -> m11_544  [color=darkseagreen4, key=1, label=data3, style=dashed];
m11_542 -> m11_543  [key=0, style=solid];
m11_544 -> m11_545  [key=0, style=solid];
m11_543 -> m11_544  [key=0, style=solid];
m11_543 -> m11_9  [key=2, style=dotted];
m11_545 -> m11_546  [key=0, style=solid];
m11_546 -> m11_547  [key=0, style=solid];
m11_546 -> m11_9  [key=2, style=dotted];
m11_547 -> m11_548  [key=0, style=solid];
m11_548 -> m11_549  [key=0, style=solid];
m11_548 -> m11_75  [key=2, style=dotted];
m11_549 -> m11_550  [key=0, style=solid];
m11_550 -> m11_551  [key=0, style=solid];
m11_551 -> m11_552  [key=0, style=solid];
m11_552 -> m11_553  [key=0, style=solid];
m11_552 -> m11_9  [key=2, style=dotted];
m11_553 -> m11_528  [color=blue, key=0, style=bold];
m11_578 -> m11_620  [key=0, style=solid];
m11_620 -> m11_578  [color=blue, key=0, style=bold];
m11_591 -> m11_592  [key=0, style=solid];
m11_592 -> m11_593  [key=0, style=solid];
m11_592 -> m11_602  [key=2, style=dotted];
m11_592 -> m11_595  [color=darkseagreen4, key=1, label=pp, style=dashed];
m11_593 -> m11_594  [key=0, style=solid];
m11_593 -> m11_578  [key=2, style=dotted];
m11_593 -> m11_579  [key=2, style=dotted];
m11_595 -> m11_596  [key=0, style=solid];
m11_595 -> m11_568  [key=2, style=dotted];
m11_595 -> m11_597  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_594 -> m11_595  [key=0, style=solid];
m11_594 -> m11_7  [key=2, style=dotted];
m11_594 -> m11_597  [color=darkseagreen4, key=1, label=settings, style=dashed];
m11_597 -> m11_598  [key=0, style=solid];
m11_597 -> m11_160  [key=2, style=dotted];
m11_596 -> m11_597  [key=0, style=solid];
m11_596 -> m11_9  [key=2, style=dotted];
m11_598 -> m11_599  [key=0, style=solid];
m11_598 -> m11_600  [color=darkseagreen4, key=1, label=p2, style=dashed];
m11_599 -> m11_600  [key=0, style=solid];
m11_599 -> m11_57  [key=2, style=dotted];
m11_600 -> m11_601  [key=0, style=solid];
m11_600 -> m11_9  [key=2, style=dotted];
m11_601 -> m11_591  [color=blue, key=0, style=bold];
m11_387 -> m11_388  [key=0, style=solid];
m11_387 -> m11_389  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_388 -> m11_389  [key=0, style=solid];
m11_388 -> m11_390  [color=darkseagreen4, key=1, label="out string", style=dashed];
m11_389 -> m11_390  [key=0, style=solid];
m11_389 -> m11_391  [key=2, style=dotted];
m11_390 -> m11_387  [color=blue, key=0, style=bold];
m11_603 -> m11_604  [key=0, style=solid];
m11_604 -> m11_605  [key=0, style=solid];
m11_604 -> m11_15  [key=2, style=dotted];
m11_604 -> m11_606  [color=darkseagreen4, key=1, label=input, style=dashed];
m11_604 -> m11_607  [color=darkseagreen4, key=1, label=input, style=dashed];
m11_604 -> m11_608  [color=darkseagreen4, key=1, label=input, style=dashed];
m11_605 -> m11_606  [key=0, style=solid];
m11_605 -> m11_615  [key=2, style=dotted];
m11_605 -> m11_15  [key=2, style=dotted];
m11_605 -> m11_401  [key=2, style=dotted];
m11_606 -> m11_607  [key=0, style=solid];
m11_606 -> m11_615  [key=2, style=dotted];
m11_606 -> m11_15  [key=2, style=dotted];
m11_606 -> m11_401  [key=2, style=dotted];
m11_607 -> m11_608  [key=0, style=solid];
m11_607 -> m11_615  [key=2, style=dotted];
m11_607 -> m11_15  [key=2, style=dotted];
m11_607 -> m11_401  [key=2, style=dotted];
m11_608 -> m11_609  [key=0, style=solid];
m11_608 -> m11_7  [key=2, style=dotted];
m11_608 -> m11_8  [key=2, style=dotted];
m11_608 -> m11_610  [color=darkseagreen4, key=1, label=serialized, style=dashed];
m11_609 -> m11_610  [key=0, style=solid];
m11_609 -> m11_374  [key=2, style=dotted];
m11_610 -> m11_611  [key=0, style=solid];
m11_610 -> m11_7  [key=2, style=dotted];
m11_610 -> m11_160  [key=2, style=dotted];
m11_611 -> m11_612  [key=0, style=solid];
m11_611 -> m11_614  [key=0, style=solid];
m11_612 -> m11_613  [key=0, style=solid];
m11_612 -> m11_611  [key=0, style=solid];
m11_613 -> m11_612  [key=0, style=solid];
m11_613 -> m11_374  [key=2, style=dotted];
m11_614 -> m11_603  [color=blue, key=0, style=bold];
m11_489 -> m11_490  [key=0, style=solid];
m11_490 -> m11_491  [key=0, style=solid];
m11_490 -> m11_509  [key=2, style=dotted];
m11_490 -> m11_5  [key=2, style=dotted];
m11_490 -> m11_418  [key=2, style=dotted];
m11_491 -> m11_492  [key=0, style=solid];
m11_491 -> m11_182  [key=2, style=dotted];
m11_491 -> m11_493  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_492 -> m11_493  [key=0, style=solid];
m11_492 -> m11_9  [key=2, style=dotted];
m11_493 -> m11_494  [key=0, style=solid];
m11_493 -> m11_75  [key=2, style=dotted];
m11_493 -> m11_495  [color=darkseagreen4, key=1, label=c2, style=dashed];
m11_493 -> m11_496  [color=darkseagreen4, key=1, label=c2, style=dashed];
m11_493 -> m11_497  [color=darkseagreen4, key=1, label=c2, style=dashed];
m11_494 -> m11_495  [key=0, style=solid];
m11_494 -> m11_9  [key=2, style=dotted];
m11_495 -> m11_496  [key=0, style=solid];
m11_495 -> m11_57  [key=2, style=dotted];
m11_496 -> m11_497  [key=0, style=solid];
m11_496 -> m11_57  [key=2, style=dotted];
m11_497 -> m11_498  [key=0, style=solid];
m11_498 -> m11_499  [key=0, style=solid];
m11_498 -> m11_57  [key=2, style=dotted];
m11_499 -> m11_500  [key=0, style=solid];
m11_500 -> m11_501  [key=0, style=solid];
m11_500 -> m11_75  [key=2, style=dotted];
m11_500 -> m11_502  [color=darkseagreen4, key=1, label=c2, style=dashed];
m11_500 -> m11_503  [color=darkseagreen4, key=1, label=c2, style=dashed];
m11_500 -> m11_504  [color=darkseagreen4, key=1, label=c2, style=dashed];
m11_501 -> m11_502  [key=0, style=solid];
m11_501 -> m11_9  [key=2, style=dotted];
m11_502 -> m11_503  [key=0, style=solid];
m11_502 -> m11_57  [key=2, style=dotted];
m11_503 -> m11_504  [key=0, style=solid];
m11_503 -> m11_57  [key=2, style=dotted];
m11_504 -> m11_505  [key=0, style=solid];
m11_504 -> m11_506  [color=darkseagreen4, key=1, label=c, style=dashed];
m11_505 -> m11_506  [key=0, style=solid];
m11_505 -> m11_57  [key=2, style=dotted];
m11_506 -> m11_507  [key=0, style=solid];
m11_507 -> m11_508  [key=0, style=solid];
m11_507 -> m11_9  [key=2, style=dotted];
m11_508 -> m11_489  [color=blue, key=0, style=bold];
m11_10 -> m11_11  [key=0, style=solid];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_15  [key=2, style=dotted];
m11_11 -> m11_16  [key=2, style=dotted];
m11_11 -> m11_6  [key=2, style=dotted];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_7  [key=2, style=dotted];
m11_12 -> m11_8  [key=2, style=dotted];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_9  [key=2, style=dotted];
m11_14 -> m11_10  [color=blue, key=0, style=bold];
m11_510 -> m11_511  [key=0, style=solid];
m11_511 -> m11_512  [key=0, style=solid];
m11_511 -> m11_525  [key=2, style=dotted];
m11_511 -> m11_526  [key=2, style=dotted];
m11_511 -> m11_15  [key=2, style=dotted];
m11_511 -> m11_418  [key=2, style=dotted];
m11_511 -> m11_527  [key=2, style=dotted];
m11_512 -> m11_513  [key=0, style=solid];
m11_512 -> m11_182  [key=2, style=dotted];
m11_512 -> m11_514  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_513 -> m11_514  [key=0, style=solid];
m11_513 -> m11_9  [key=2, style=dotted];
m11_514 -> m11_515  [key=0, style=solid];
m11_514 -> m11_75  [key=2, style=dotted];
m11_514 -> m11_516  [color=darkseagreen4, key=1, label=o2, style=dashed];
m11_514 -> m11_517  [color=darkseagreen4, key=1, label=o2, style=dashed];
m11_514 -> m11_518  [color=darkseagreen4, key=1, label=o2, style=dashed];
m11_514 -> m11_519  [color=darkseagreen4, key=1, label=o2, style=dashed];
m11_514 -> m11_520  [color=darkseagreen4, key=1, label=o2, style=dashed];
m11_514 -> m11_521  [color=darkseagreen4, key=1, label=o2, style=dashed];
m11_515 -> m11_516  [key=0, style=solid];
m11_515 -> m11_278  [key=2, style=dotted];
m11_516 -> m11_517  [key=0, style=solid];
m11_516 -> m11_278  [key=2, style=dotted];
m11_517 -> m11_518  [key=0, style=solid];
m11_517 -> m11_57  [key=2, style=dotted];
m11_518 -> m11_519  [key=0, style=solid];
m11_518 -> m11_57  [key=2, style=dotted];
m11_519 -> m11_520  [key=0, style=solid];
m11_519 -> m11_57  [key=2, style=dotted];
m11_520 -> m11_521  [key=0, style=solid];
m11_520 -> m11_57  [key=2, style=dotted];
m11_521 -> m11_522  [key=0, style=solid];
m11_522 -> m11_523  [key=0, style=solid];
m11_523 -> m11_524  [key=0, style=solid];
m11_523 -> m11_9  [key=2, style=dotted];
m11_524 -> m11_510  [color=blue, key=0, style=bold];
m11_360 -> m11_638  [key=0, style=solid];
m11_638 -> m11_639  [key=0, style=solid];
m11_639 -> m11_360  [color=blue, key=0, style=bold];
m11_311 -> m11_312  [key=0, style=solid];
m11_311 -> m11_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m11_312 -> m11_313  [key=0, style=solid];
m11_313 -> m11_314  [key=0, style=solid];
m11_314 -> m11_315  [key=0, style=solid];
m11_315 -> m11_311  [color=blue, key=0, style=bold];
m11_632 -> m11_633  [key=0, style=solid];
m11_632 -> m11_19  [color=darkorchid, key=3, label="method methodReturn int GetHashCode", style=bold];
m11_633 -> m11_634  [key=0, style=solid];
m11_633 -> m11_635  [key=0, style=solid];
m11_634 -> m11_636  [key=0, style=solid];
m11_635 -> m11_636  [key=0, style=solid];
m11_635 -> m11_637  [key=2, style=dotted];
m11_636 -> m11_632  [color=blue, key=0, style=bold];
m11_402 -> m11_403  [key=0, style=solid];
m11_403 -> m11_404  [key=0, style=solid];
m11_403 -> m11_418  [key=2, style=dotted];
m11_403 -> m11_405  [color=darkseagreen4, key=1, label=c1, style=dashed];
m11_404 -> m11_405  [key=0, style=solid];
m11_404 -> m11_400  [key=2, style=dotted];
m11_404 -> m11_406  [color=darkseagreen4, key=1, label=l, style=dashed];
m11_404 -> m11_407  [color=darkseagreen4, key=1, label=l, style=dashed];
m11_404 -> m11_408  [color=darkseagreen4, key=1, label=l, style=dashed];
m11_404 -> m11_409  [color=darkseagreen4, key=1, label=l, style=dashed];
m11_405 -> m11_406  [key=0, style=solid];
m11_405 -> m11_401  [key=2, style=dotted];
m11_406 -> m11_407  [key=0, style=solid];
m11_406 -> m11_419  [key=2, style=dotted];
m11_406 -> m11_105  [key=2, style=dotted];
m11_406 -> m11_401  [key=2, style=dotted];
m11_407 -> m11_408  [key=0, style=solid];
m11_407 -> m11_401  [key=2, style=dotted];
m11_408 -> m11_409  [key=0, style=solid];
m11_408 -> m11_401  [key=2, style=dotted];
m11_409 -> m11_410  [key=0, style=solid];
m11_409 -> m11_182  [key=2, style=dotted];
m11_409 -> m11_411  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_410 -> m11_411  [key=0, style=solid];
m11_410 -> m11_9  [key=2, style=dotted];
m11_411 -> m11_412  [key=0, style=solid];
m11_411 -> m11_75  [key=2, style=dotted];
m11_411 -> m11_413  [color=darkseagreen4, key=1, label=l2, style=dashed];
m11_411 -> m11_414  [color=darkseagreen4, key=1, label=l2, style=dashed];
m11_411 -> m11_415  [color=darkseagreen4, key=1, label=l2, style=dashed];
m11_411 -> m11_416  [color=darkseagreen4, key=1, label=l2, style=dashed];
m11_412 -> m11_413  [key=0, style=solid];
m11_412 -> m11_9  [key=2, style=dotted];
m11_413 -> m11_414  [key=0, style=solid];
m11_413 -> m11_57  [key=2, style=dotted];
m11_414 -> m11_415  [key=0, style=solid];
m11_414 -> m11_57  [key=2, style=dotted];
m11_415 -> m11_416  [key=0, style=solid];
m11_415 -> m11_57  [key=2, style=dotted];
m11_416 -> m11_417  [key=0, style=solid];
m11_416 -> m11_57  [key=2, style=dotted];
m11_417 -> m11_402  [color=blue, key=0, style=bold];
m11_616 -> m11_617  [key=0, style=solid];
m11_617 -> m11_618  [key=0, style=solid];
m11_617 -> m11_619  [key=2, style=dotted];
m11_618 -> m11_616  [color=blue, key=0, style=bold];
m11_640 -> m11_641  [key=0, style=solid];
m11_641 -> m11_642  [key=0, style=solid];
m11_641 -> m11_643  [key=2, style=dotted];
m11_642 -> m11_640  [color=blue, key=0, style=bold];
m11_232 -> m11_233  [key=0, style=solid];
m11_233 -> m11_234  [key=0, style=solid];
m11_233 -> m11_236  [key=2, style=dotted];
m11_234 -> m11_235  [key=0, style=solid];
m11_234 -> m11_237  [key=2, style=dotted];
m11_235 -> m11_232  [color=blue, key=0, style=bold];
m11_664 -> m11_29  [color=darkseagreen4, key=1, label=sb, style=dashed];
m11_665 -> m11_144  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_666 -> m11_147  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest", style=dashed];
m11_666 -> m11_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest", style=dashed];
m11_667 -> m11_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder", style=dashed];
m11_667 -> m11_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder", style=dashed];
m11_668 -> m11_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m11_668 -> m11_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m11_668 -> m11_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m11_668 -> m11_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m11_668 -> m11_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m11_668 -> m11_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m11_668 -> m11_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m11_668 -> m11_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m11_668 -> m11_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m11_669 -> m11_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", style=dashed];
m11_669 -> m11_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", style=dashed];
m11_669 -> m11_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", style=dashed];
m11_670 -> m11_617  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.MyParent", style=dashed];
m11_670 -> m11_622  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.MyParent", style=dashed];
m11_671 -> m11_629  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper", style=dashed];
m11_671 -> m11_633  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper", style=dashed];
m11_671 -> m11_635  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper", style=dashed];
m11_672 -> m11_638  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m11_672 -> m11_641  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m11_672 -> m11_645  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m11_672 -> m11_650  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m11_672 -> m11_653  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m11_672 -> m11_659  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m11_672 -> m11_661  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
}
