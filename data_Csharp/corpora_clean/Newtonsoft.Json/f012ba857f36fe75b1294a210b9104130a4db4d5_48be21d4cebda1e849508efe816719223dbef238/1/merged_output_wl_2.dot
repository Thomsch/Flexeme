digraph  {
d35 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableWithoutAttributeContract()", color=green, community=0, label="0: DefaultContractResolver contractResolver = new DefaultContractResolver()", span="130-130"];
d34 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableWithoutAttributeContract()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableWithoutAttributeContract()", span="128-128"];
d36 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableWithoutAttributeContract()", color=green, community=0, label="0: JsonContract contract = contractResolver.ResolveContract(typeof(ISerializableWithoutAttributeTestObject))", span="131-131"];
d31 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="167-167"];
d37 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableWithoutAttributeContract()", color=green, community=0, label="0: Assert.AreEqual(JsonContractType.Object, contract.ContractType)", span="133-133"];
d32 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="185-185"];
d38 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableWithoutAttributeContract()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableWithoutAttributeContract()", span="128-128"];
d33 [cluster="Unk.AreEqual", label="Entry Unk.AreEqual", span=""];
d27 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableContract()", label="DefaultContractResolver contractResolver = new DefaultContractResolver()", span="121-121"];
d40 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveObjectContractWithFieldsSerialization()", label="DefaultContractResolver contractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="139-142"];
d65 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", label="var resolver = new DefaultContractResolver()", span="181-181"];
d74 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()", label="var resolver = new DefaultContractResolver()", span="192-192"];
d83 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", label="var resolver = new DefaultContractResolver()", span="203-203"];
d106 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", label="var resolver = new DefaultContractResolver()", span="228-228"];
d126 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", label="var resolver = new DefaultContractResolver()", span="259-259"];
d143 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", label="var resolver = new DefaultContractResolver()", span="286-286"];
d159 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", label="var resolver = new DefaultContractResolver()", span="308-308"];
d241 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", label="var resolver = new DefaultContractResolver()", span="449-449"];
d246 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", label="var resolver = new DefaultContractResolver()", span="459-459"];
d255 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", label="var resolver = new DefaultContractResolver()", span="468-468"];
d265 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", label="var resolver = new DefaultContractResolver()", span="483-483"];
d276 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", label="var resolver = new DefaultContractResolver()", span="499-499"];
d311 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", label="DefaultContractResolver skipCompilerGeneratedResolver = new DefaultContractResolver\r\n            {\r\n                DefaultMembersSearchFlags = BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public\r\n            }", span="597-600"];
d314 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", label="DefaultContractResolver includeCompilerGeneratedResolver = new DefaultContractResolver\r\n            {\r\n                DefaultMembersSearchFlags = BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public,\r\n                SerializeCompilerGeneratedMembers = true\r\n            }", span="612-616"];
d325 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", label="DefaultContractResolver resolver = new DefaultContractResolver()", span="640-640"];
d351 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", label="DefaultContractResolver resolver = new DefaultContractResolver()", span="676-676"];
d360 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", label="DefaultContractResolver resolver = new DefaultContractResolver()", span="691-691"];
d373 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", label="DefaultContractResolver resolver = new DefaultContractResolver()", span="730-730"];
d393 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", label="DefaultContractResolver resolver = new DefaultContractResolver()", span="759-759"];
d28 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableContract()", label="JsonContract contract = contractResolver.ResolveContract(typeof(ISerializableTestObject))", span="122-122"];
d41 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveObjectContractWithFieldsSerialization()", label="JsonObjectContract contract = (JsonObjectContract)contractResolver.ResolveContract(typeof(AnswerFilterModel))", span="143-143"];
d66 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", label="var contract = (JsonArrayContract)resolver.ResolveContract(typeof(IList<int>))", span="182-182"];
d75 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()", label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(Invoice))", span="193-193"];
d84 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(AbstractTestClass))", span="204-204"];
d107 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", label="var contract = (JsonArrayContract)resolver.ResolveContract(typeof(AbstractListTestClass<int>))", span="229-229"];
d127 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", label="var contract = (JsonArrayContract)resolver.ResolveContract(typeof(IList<int>))", span="260-260"];
d144 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", label="var contract = (JsonDictionaryContract)resolver.ResolveContract(typeof(IDictionary<string, int>))", span="287-287"];
d160 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", label="var contract = (JsonDictionaryContract)resolver.ResolveContract(typeof(AbstractDictionaryTestClass<string, int>))", span="309-309"];
d242 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(AddressWithDataMember))", span="450-450"];
d247 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(NumberFormatInfo))", span="460-460"];
d256 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(PublicParameterizedConstructorWithPropertyNameConflictWithAttribute))", span="469-469"];
d266 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(MultipleParametrizedConstructorsJsonConstructor))", span="484-484"];
d277 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(MultipleParametrizedConstructorsJsonConstructor))", span="500-500"];
d326 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", label="JsonObjectContract contract = (JsonObjectContract)resolver.ResolveContract(typeof(ClassWithExtensionData))", span="641-641"];
d353 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", label="JsonObjectContract contract = (JsonObjectContract)resolver.ResolveContract(typeof(ClassWithShouldSerialize))", span="679-679"];
d361 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", label="JsonObjectContract contract = (JsonObjectContract)resolver.ResolveContract(typeof(ClassWithShouldSerialize))", span="693-693"];
d375 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", label="JsonObjectContract contract = (JsonObjectContract)resolver.ResolveContract(typeof(ClassWithIsSpecified))", span="733-733"];
d394 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", label="JsonObjectContract contract = (JsonObjectContract)resolver.ResolveContract(typeof(ClassWithIsSpecified))", span="761-761"];
d29 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableContract()", label="Assert.AreEqual(JsonContractType.Serializable, contract.ContractType)", span="124-124"];
d42 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveObjectContractWithFieldsSerialization()", label="Assert.AreEqual(MemberSerialization.Fields, contract.MemberSerialization)", span="145-145"];
d46 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", label="Assert.AreEqual(null, p.GetResolvedDefaultValue())", span="154-154"];
d47 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", label="Assert.AreEqual(null, p.DefaultValue)", span="155-155"];
d49 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", label="Assert.AreEqual(0, p.GetResolvedDefaultValue())", span="159-159"];
d50 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", label="Assert.AreEqual(null, p.DefaultValue)", span="160-160"];
d52 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", label="Assert.AreEqual(new DateTime(), p.GetResolvedDefaultValue())", span="164-164"];
d53 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", label="Assert.AreEqual(null, p.DefaultValue)", span="165-165"];
d55 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", label="Assert.AreEqual(null, p.GetResolvedDefaultValue())", span="169-169"];
d56 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", label="Assert.AreEqual(null, p.DefaultValue)", span="170-170"];
d58 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", label="Assert.AreEqual(CompareOptions.None, (CompareOptions)p.GetResolvedDefaultValue())", span="174-174"];
d59 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", label="Assert.AreEqual(null, p.DefaultValue)", span="175-175"];
d68 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", label="Assert.AreEqual(typeof(List<int>), contract.CreatedType)", span="185-185"];
d77 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()", label="Assert.AreEqual(1, property.AttributeProvider.GetAttributes(false).Count)", span="196-196"];
d78 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()", label="Assert.AreEqual(typeof(DefaultValueAttribute), property.AttributeProvider.GetAttributes(false)[0].GetType())", span="197-197"];
d91 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", label="Assert.AreEqual(''Value!'', o.Value)", span="222-222"];
d114 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", label="Assert.AreEqual(2, l.Count)", span="247-247"];
d115 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", label="Assert.AreEqual(1, l[0])", span="248-248"];
d116 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", label="Assert.AreEqual(2, l[1])", span="249-249"];
d132 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", label="Assert.AreEqual(typeof(CustomList<int>), l.GetType())", span="272-272"];
d133 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", label="Assert.AreEqual(3, l.Count)", span="273-273"];
d134 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", label="Assert.AreEqual(1, l[0])", span="274-274"];
d135 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", label="Assert.AreEqual(2, l[1])", span="275-275"];
d136 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", label="Assert.AreEqual(3, l[2])", span="276-276"];
d149 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", label="Assert.AreEqual(typeof(CustomDictionary<string, int>), d.GetType())", span="299-299"];
d150 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", label="Assert.AreEqual(2, d.Count)", span="300-300"];
d151 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", label="Assert.AreEqual(1, d[''key1''])", span="301-301"];
d152 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", label="Assert.AreEqual(2, d[''key2''])", span="302-302"];
d167 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", label="Assert.AreEqual(2, d.Count)", span="327-327"];
d168 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", label="Assert.AreEqual(1, d[''key1''])", span="328-328"];
d169 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", label="Assert.AreEqual(2, d[''key2''])", span="329-329"];
d180 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", label="Assert.AreEqual(@''{''''AddressLine1-'-\''''-'''':''''value!''''}'', json)", span="348-348"];
d184 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", label="Assert.AreEqual(@''AddressLine1-'-''''-'', reader.Value)", span="354-354"];
d194 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", label="Assert.AreEqual(@''{''''\u003cb\u003eAddressLine1\u003c/b\u003e'''':''''value!''''}'', json)", span="375-375"];
d198 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", label="Assert.AreEqual(@''<b>AddressLine1</b>'', reader.Value)", span="381-381"];
d243 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", label="Assert.AreEqual(''AddressLine1'', contract.Properties[0].PropertyName)", span="452-452"];
d259 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", label="Assert.AreEqual(1, contract.CreatorParameters.Count)", span="473-473"];
d260 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", label="Assert.AreEqual(''name'', contract.CreatorParameters[0].PropertyName)", span="474-474"];
d269 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", label="Assert.AreEqual(2, contract.CreatorParameters.Count)", span="488-488"];
d270 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", label="Assert.AreEqual(''Value'', contract.CreatorParameters[0].PropertyName)", span="489-489"];
d271 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", label="Assert.AreEqual(''Age'', contract.CreatorParameters[1].PropertyName)", span="490-490"];
d282 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", label="Assert.AreEqual(''value!'', o.Value)", span="516-516"];
d283 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", label="Assert.AreEqual(1, o.Age)", span="517-517"];
d318 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", label="Assert.AreEqual(''Property'', (string)o[''<StringProperty>k__BackingField''])", span="625-625"];
d319 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", label="Assert.AreEqual(2, (int)o[''<IntProperty>k__BackingField''])", span="626-626"];
d355 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", label="Assert.AreEqual(null, property1.ShouldSerialize)", span="682-682"];
d357 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", label="Assert.AreEqual(null, property2.ShouldSerialize)", span="685-685"];
d365 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", label="Assert.AreEqual(null, property2.ShouldSerialize)", span="699-699"];
d377 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", label="Assert.AreEqual(null, property1.GetIsSpecified)", span="736-736"];
d378 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", label="Assert.AreEqual(null, property1.SetIsSpecified)", span="737-737"];
d380 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", label="Assert.AreEqual(null, property2.GetIsSpecified)", span="740-740"];
d381 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", label="Assert.AreEqual(null, property2.SetIsSpecified)", span="741-741"];
d383 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", label="Assert.AreEqual(null, property3.GetIsSpecified)", span="744-744"];
d384 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", label="Assert.AreEqual(null, property3.SetIsSpecified)", span="745-745"];
d386 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", label="Assert.AreEqual(null, property4.GetIsSpecified)", span="748-748"];
d387 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", label="Assert.AreEqual(null, property4.SetIsSpecified)", span="749-749"];
d389 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", label="Assert.AreEqual(null, property5.GetIsSpecified)", span="752-752"];
d390 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", label="Assert.AreEqual(null, property5.SetIsSpecified)", span="753-753"];
d402 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", label="Assert.AreEqual(null, property3.GetIsSpecified)", span="772-772"];
d403 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", label="Assert.AreEqual(null, property3.SetIsSpecified)", span="773-773"];
d405 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", label="Assert.AreEqual(null, property4.GetIsSpecified)", span="776-776"];
d406 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", label="Assert.AreEqual(null, property4.SetIsSpecified)", span="777-777"];
d408 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", label="Assert.AreEqual(null, property5.GetIsSpecified)", span="780-780"];
d409 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", label="Assert.AreEqual(null, property5.SetIsSpecified)", span="781-781"];
d26 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableContract()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableContract()", span="119-119"];
d39 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveObjectContractWithFieldsSerialization()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveObjectContractWithFieldsSerialization()", span="137-137"];
d64 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", span="179-179"];
d73 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()", span="190-190"];
d82 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", span="201-201"];
d88 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<AbstractTestClass>(@''{Value:'Value!'}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            }), ''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.AbstractTestClass. Type is an interface or abstract class and cannot be instantiated. Path 'Value', line 1, position 7.'')", span="210-213"];
d99 [cluster="lambda expression", label="JsonConvert.DeserializeObject<AbstractTestClass>(@''{Value:'Value!'}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="210-213"];
d90 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", label="var o = JsonConvert.DeserializeObject<AbstractTestClass>(@''{Value:'Value!'}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="217-220"];
d105 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", span="226-226"];
d111 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<AbstractListTestClass<int>>(@''[1,2]'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            }), ''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.AbstractListTestClass`1[System.Int32]. Type is an interface or abstract class and cannot be instantiated. Path '', line 1, position 1.'')", span="235-238"];
d119 [cluster="lambda expression", label="JsonConvert.DeserializeObject<AbstractListTestClass<int>>(@''[1,2]'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="235-238"];
d113 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", label="var l = JsonConvert.DeserializeObject<AbstractListTestClass<int>>(@''[1,2]'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="242-245"];
d125 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", span="257-257"];
d131 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", label="var l = JsonConvert.DeserializeObject<IList<int>>(@''[1,2,3]'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="267-270"];
d142 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", span="284-284"];
d148 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", label="var d = JsonConvert.DeserializeObject<IDictionary<string, int>>(@''{key1:1,key2:2}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="294-297"];
d158 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", span="306-306"];
d164 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<AbstractDictionaryTestClass<string, int>>(@''{key1:1,key2:2}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            }), ''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.AbstractDictionaryTestClass`2[System.String,System.Int32]. Type is an interface or abstract class and cannot be instantiated. Path 'key1', line 1, position 6.'')", span="315-318"];
d172 [cluster="lambda expression", label="JsonConvert.DeserializeObject<AbstractDictionaryTestClass<string, int>>(@''{key1:1,key2:2}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="315-318"];
d166 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", label="var d = JsonConvert.DeserializeObject<AbstractDictionaryTestClass<string, int>>(@''{key1:1,key2:2}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="322-325"];
d240 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", span="447-447"];
d245 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", span="457-457"];
d254 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", span="466-466"];
d264 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", span="481-481"];
d275 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", span="497-497"];
d281 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", label="var o = JsonConvert.DeserializeObject<MultipleParametrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="511-514"];
d310 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", label="StructTest structTest = new StructTest\r\n            {\r\n                IntField = 1,\r\n                IntProperty = 2,\r\n                StringField = ''Field'',\r\n                StringProperty = ''Property''\r\n            }", span="589-595"];
d312 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", label="string skipCompilerGeneratedJson = JsonConvert.SerializeObject(structTest, Formatting.Indented,\r\n                new JsonSerializerSettings { ContractResolver = skipCompilerGeneratedResolver })", span="602-603"];
d313 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", label="StringAssert.AreEqual(@''{\r\n  ''''StringField'''': ''''Field'''',\r\n  ''''IntField'''': 1,\r\n  ''''StringProperty'''': ''''Property'''',\r\n  ''''IntProperty'''': 2\r\n}'', skipCompilerGeneratedJson)", span="605-610"];
d315 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", label="string includeCompilerGeneratedJson = JsonConvert.SerializeObject(structTest, Formatting.Indented,\r\n                new JsonSerializerSettings { ContractResolver = includeCompilerGeneratedResolver })", span="618-619"];
d324 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", span="638-638"];
d350 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", span="674-674"];
d352 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", label="resolver.IgnoreShouldSerializeMembers = true", span="677-677"];
d359 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", span="689-689"];
d372 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", span="728-728"];
d374 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", label="resolver.IgnoreIsSpecifiedMembers = true", span="731-731"];
d392 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", span="757-757"];
d67 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", label="Assert.IsTrue(contract.IsInstantiable)", span="184-184"];
d69 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", label="Assert.IsNotNull(contract.DefaultCreator)", span="186-186"];
d76 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()", label="JsonProperty property = contract.Properties[''FollowUpDays'']", span="195-195"];
d85 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", label="Assert.IsFalse(contract.IsInstantiable)", span="206-206"];
d86 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", label="Assert.IsNull(contract.DefaultCreator)", span="207-207"];
d87 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", label="Assert.IsNull(contract.OverrideCreator)", span="208-208"];
d89 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", label="contract.DefaultCreator = () => new AbstractImplementationTestClass()", span="215-215"];
d108 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", label="Assert.IsFalse(contract.IsInstantiable)", span="231-231"];
d109 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", label="Assert.IsNull(contract.DefaultCreator)", span="232-232"];
d110 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", label="Assert.IsFalse(contract.HasParameterizedCreatorInternal)", span="233-233"];
d112 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", label="contract.DefaultCreator = () => new AbstractImplementationListTestClass<int>()", span="240-240"];
d128 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", label="Assert.IsTrue(contract.IsInstantiable)", span="262-262"];
d129 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", label="Assert.IsNotNull(contract.DefaultCreator)", span="263-263"];
d130 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", label="contract.DefaultCreator = () => new CustomList<int>()", span="265-265"];
d145 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", label="Assert.IsTrue(contract.IsInstantiable)", span="289-289"];
d146 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", label="Assert.IsNotNull(contract.DefaultCreator)", span="290-290"];
d147 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", label="contract.DefaultCreator = () => new CustomDictionary<string, int>()", span="292-292"];
d161 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", label="Assert.IsFalse(contract.IsInstantiable)", span="311-311"];
d162 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", label="Assert.IsNull(contract.DefaultCreator)", span="312-312"];
d163 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", label="Assert.IsFalse(contract.HasParameterizedCreatorInternal)", span="313-313"];
d165 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", label="contract.DefaultCreator = () => new AbstractImplementationDictionaryTestClass<string, int>()", span="320-320"];
d248 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", label="Assert.IsFalse(contract.Properties.Any(c => c.PropertyName == ''InvariantInfo''))", span="462-462"];
d257 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", label="Assert.IsNull(contract.DefaultCreator)", span="471-471"];
d258 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", label="Assert.IsNotNull(contract.ParameterizedCreator)", span="472-472"];
d261 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", label="contract.ParameterizedCreator = null", span="476-476"];
d262 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", label="Assert.IsNull(contract.ParameterizedCreator)", span="477-477"];
d267 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", label="Assert.IsNull(contract.DefaultCreator)", span="486-486"];
d268 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", label="Assert.IsNotNull(contract.OverrideCreator)", span="487-487"];
d272 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", label="contract.OverrideCreator = null", span="492-492"];
d273 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", label="Assert.IsNull(contract.OverrideCreator)", span="493-493"];
d278 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", label="bool ensureCustomCreatorCalled = false", span="502-502"];
d279 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", label="contract.OverrideCreator = args =>\r\n            {\r\n                ensureCustomCreatorCalled = true;\r\n                return new MultipleParametrizedConstructorsJsonConstructor((string)args[0], (int)args[1]);\r\n            }", span="504-508"];
d280 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", label="Assert.IsNotNull(contract.OverrideCreator)", span="509-509"];
d327 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", label="ClassWithExtensionData myClass = new ClassWithExtensionData\r\n            {\r\n                Data = new Dictionary<string, object>\r\n                {\r\n                    { ''SomeField'', ''Field'' },\r\n                }\r\n            }", span="643-649"];
d328 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", label="ExtensionDataGetter getter = contract.ExtensionDataGetter", span="651-651"];
d354 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", label="var property1 = contract.Properties[''Prop1'']", span="681-681"];
d356 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", label="var property2 = contract.Properties[''Prop2'']", span="684-684"];
d362 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", label="var property1 = contract.Properties[''Prop1'']", span="695-695"];
d364 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", label="var property2 = contract.Properties[''Prop2'']", span="698-698"];
d376 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", label="var property1 = contract.Properties[''Prop1'']", span="735-735"];
d379 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", label="var property2 = contract.Properties[''Prop2'']", span="739-739"];
d382 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", label="var property3 = contract.Properties[''Prop3'']", span="743-743"];
d385 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", label="var property4 = contract.Properties[''Prop4'']", span="747-747"];
d388 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", label="var property5 = contract.Properties[''Prop5'']", span="751-751"];
d395 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", label="var property1 = contract.Properties[''Prop1'']", span="763-763"];
d398 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", label="var property2 = contract.Properties[''Prop2'']", span="767-767"];
d401 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", label="var property3 = contract.Properties[''Prop3'']", span="771-771"];
d404 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", label="var property4 = contract.Properties[''Prop4'']", span="775-775"];
d407 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", label="var property5 = contract.Properties[''Prop5'']", span="779-779"];
d30 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableContract()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableContract()", span="119-119"];
d43 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveObjectContractWithFieldsSerialization()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveObjectContractWithFieldsSerialization()", span="137-137"];
d45 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", label="JsonProperty p = new JsonProperty()", span="152-152"];
d62 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", label="Entry Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="177-177"];
d48 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", label="p.PropertyType = typeof(int)", span="157-157"];
d51 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", label="p.PropertyType = typeof(DateTime)", span="162-162"];
d63 [cluster="System.DateTime.DateTime()", label="Entry System.DateTime.DateTime()", span="0-0"];
d54 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", label="p.PropertyType = null", span="167-167"];
d57 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", label="p.PropertyType = typeof(CompareOptions)", span="172-172"];
d60 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", span="150-150"];
d347 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ClassWithShouldSerialize.ShouldSerializeProp1()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ClassWithShouldSerialize.ShouldSerializeProp1()", span="667-667"];
d80 [cluster="Newtonsoft.Json.Serialization.IAttributeProvider.GetAttributes(bool)", label="Entry Newtonsoft.Json.Serialization.IAttributeProvider.GetAttributes(bool)", span="40-40"];
d79 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()", span="190-190"];
d81 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
d92 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", span="201-201"];
d117 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", span="226-226"];
d137 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", span="257-257"];
d153 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", span="284-284"];
d170 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", span="306-306"];
d179 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", label="string json = JsonConvert.SerializeObject(\r\n                new AddressWithDataMember\r\n                {\r\n                    AddressLine1 = ''value!''\r\n                },\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new EscapedPropertiesContractResolver\r\n                    {\r\n                        PropertySuffix = @''-'-''''-''\r\n                    }\r\n                })", span="335-346"];
d181 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="350-350"];
d183 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", label="reader.Read()", span="352-352"];
d185 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", span="333-333"];
d193 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", label="string json = JsonConvert.SerializeObject(\r\n                new AddressWithDataMember\r\n                {\r\n                    AddressLine1 = ''value!''\r\n                },\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new EscapedPropertiesContractResolver\r\n                    {\r\n                        PropertyPrefix = ''<b>'',\r\n                        PropertySuffix = ''</b>''\r\n                    },\r\n                    StringEscapeHandling = StringEscapeHandling.EscapeHtml\r\n                })", span="360-373"];
d195 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="377-377"];
d197 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", label="reader.Read()", span="379-379"];
d199 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", span="358-358"];
d244 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", span="447-447"];
d284 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", label="Assert.IsTrue(ensureCustomCreatorCalled)", span="518-518"];
d316 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", label="JObject o = JObject.Parse(includeCompilerGeneratedJson)", span="621-621"];
d317 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", label="Console.WriteLine(includeCompilerGeneratedJson)", span="623-623"];
d320 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", span="587-587"];
d358 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", span="674-674"];
d366 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", span="689-689"];
d391 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", span="728-728"];
d410 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", span="757-757"];
d70 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", span="179-179"];
d95 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="370-370"];
d98 [cluster="lambda expression", label="Entry lambda expression", span="210-213"];
d414 [label=resolver, span=""];
d100 [cluster="lambda expression", label="Exit lambda expression", span="210-213"];
d96 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="447-447"];
d97 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="766-766"];
d118 [cluster="lambda expression", label="Entry lambda expression", span="235-238"];
d415 [label=resolver, span=""];
d120 [cluster="lambda expression", label="Exit lambda expression", span="235-238"];
d171 [cluster="lambda expression", label="Entry lambda expression", span="315-318"];
d416 [label=resolver, span=""];
d173 [cluster="lambda expression", label="Exit lambda expression", span="315-318"];
d249 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", span="457-457"];
d263 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", span="466-466"];
d274 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", span="481-481"];
d285 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", span="497-497"];
d309 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", span="587-587"];
d321 [cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27"];
d299 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="618-618"];
d300 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="341-341"];
d335 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", span="638-638"];
d71 [cluster="Unk.IsTrue", label="Entry Unk.IsTrue", span=""];
d72 [cluster="Unk.IsNotNull", label="Entry Unk.IsNotNull", span=""];
d93 [cluster="Unk.IsFalse", label="Entry Unk.IsFalse", span=""];
d94 [cluster="Unk.IsNull", label="Entry Unk.IsNull", span=""];
d250 [cluster="Unk.Any", label="Entry Unk.Any", span=""];
d251 [cluster="lambda expression", label="Entry lambda expression", span="462-462"];
d288 [cluster="lambda expression", label="return new MultipleParametrizedConstructorsJsonConstructor((string)args[0], (int)args[1]);", span="507-507"];
d336 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ClassWithExtensionData.ClassWithExtensionData()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ClassWithExtensionData.ClassWithExtensionData()", span="631-631"];
d337 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
d329 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", label="IEnumerable<KeyValuePair<object, object>> dictionaryData = getter(myClass).ToDictionary(kv => kv.Key, kv => kv.Value)", span="653-653"];
d332 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", label="IEnumerable<KeyValuePair<object, object>> extensionData = getter(myClass)", span="657-657"];
d363 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", label="Assert.AreNotEqual(null, property1.ShouldSerialize)", span="696-696"];
d396 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", label="Assert.AreNotEqual(null, property1.GetIsSpecified)", span="764-764"];
d397 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", label="Assert.AreNotEqual(null, property1.SetIsSpecified)", span="765-765"];
d399 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", label="Assert.AreNotEqual(null, property2.GetIsSpecified)", span="768-768"];
d400 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", label="Assert.AreNotEqual(null, property2.SetIsSpecified)", span="769-769"];
d44 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", span="150-150"];
d61 [cluster="Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", label="Entry Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", span="38-38"];
d349 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ClassWithShouldSerialize.ShouldSerializeProp1()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ClassWithShouldSerialize.ShouldSerializeProp1()", span="667-667"];
d348 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ClassWithShouldSerialize.ShouldSerializeProp1()", label="return false;", span="669-669"];
d178 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", span="333-333"];
d186 [cluster="Newtonsoft.Json.Tests.Serialization.AddressWithDataMember.AddressWithDataMember()", label="Entry Newtonsoft.Json.Tests.Serialization.AddressWithDataMember.AddressWithDataMember()", span="106-106"];
d187 [cluster="Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver.EscapedPropertiesContractResolver()", label="Entry Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver.EscapedPropertiesContractResolver()", span="73-73"];
d188 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="582-582"];
d182 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", label="reader.Read()", span="351-351"];
d189 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="82-82"];
d190 [cluster="System.IO.StringReader.StringReader(string)", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
d191 [cluster="Newtonsoft.Json.JsonTextReader.Read()", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="400-400"];
d192 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", span="358-358"];
d196 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", label="reader.Read()", span="378-378"];
d287 [cluster="lambda expression", label="ensureCustomCreatorCalled = true", span="506-506"];
d322 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="392-392"];
d323 [cluster="System.Console.WriteLine(string)", label="Entry System.Console.WriteLine(string)", span="0-0"];
d293 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", label="string iPersonJson = JsonConvert.SerializeObject(employee, Formatting.Indented,\r\n                new JsonSerializerSettings { ContractResolver = new IPersonContractResolver() })", span="533-534"];
d303 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", label="string startingWithA = JsonConvert.SerializeObject(book, Formatting.Indented,\r\n                new JsonSerializerSettings { ContractResolver = new DynamicContractResolver('A') })", span="555-556"];
d304 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", label="string startingWithB = JsonConvert.SerializeObject(book, Formatting.Indented,\r\n                new JsonSerializerSettings { ContractResolver = new DynamicContractResolver('B') })", span="564-565"];
d294 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Maurice'''',\r\n  ''''LastName'''': ''''Moss'''',\r\n  ''''BirthDate'''': ''''1977-12-30T01:01:01Z''''\r\n}'', iPersonJson)", span="536-540"];
d305 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", label="StringAssert.AreEqual(@''{\r\n  ''''AuthorName'''': ''''Brandon Sanderson'''',\r\n  ''''AuthorAge'''': 34,\r\n  ''''AuthorCountry'''': ''''United States of America''''\r\n}'', startingWithA)", span="572-576"];
d306 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", label="StringAssert.AreEqual(@''{\r\n  ''''BookName'''': ''''The Gathering Storm'''',\r\n  ''''BookPrice'''': 16.19\r\n}'', startingWithB)", span="578-581"];
d334 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", label="Assert.IsTrue(extensionData.Any())", span="659-659"];
d202 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="Assert.IsTrue(p._skipPropertyNameEscape)", span="388-388"];
d204 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="Assert.IsTrue(p._skipPropertyNameEscape)", span="391-391"];
d206 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="Assert.IsTrue(p._skipPropertyNameEscape)", span="394-394"];
d208 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="Assert.IsTrue(p._skipPropertyNameEscape)", span="397-397"];
d210 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="Assert.IsTrue(p._skipPropertyNameEscape)", span="400-400"];
d212 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="Assert.IsTrue(p._skipPropertyNameEscape)", span="403-403"];
d214 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="Assert.IsTrue(p._skipPropertyNameEscape)", span="406-406"];
d216 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="Assert.IsTrue(p._skipPropertyNameEscape)", span="409-409"];
d218 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="Assert.IsTrue(p._skipPropertyNameEscape)", span="412-412"];
d330 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", label="Assert.IsTrue(dictionaryData.Any())", span="654-654"];
d331 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", label="Assert.IsTrue(dictionaryData.Any())", span="655-655"];
d333 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", label="Assert.IsTrue(extensionData.Any())", span="658-658"];
d220 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="Assert.IsFalse(p._skipPropertyNameEscape)", span="415-415"];
d222 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="Assert.IsFalse(p._skipPropertyNameEscape)", span="418-418"];
d224 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="Assert.IsFalse(p._skipPropertyNameEscape)", span="421-421"];
d226 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="Assert.IsFalse(p._skipPropertyNameEscape)", span="424-424"];
d228 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="Assert.IsFalse(p._skipPropertyNameEscape)", span="427-427"];
d230 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="Assert.IsFalse(p._skipPropertyNameEscape)", span="430-430"];
d232 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="Assert.IsFalse(p._skipPropertyNameEscape)", span="433-433"];
d234 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="Assert.IsFalse(p._skipPropertyNameEscape)", span="436-436"];
d236 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="Assert.IsFalse(p._skipPropertyNameEscape)", span="439-439"];
d238 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="Assert.IsFalse(p._skipPropertyNameEscape)", span="442-442"];
d253 [cluster="lambda expression", label="Exit lambda expression", span="462-462"];
d252 [cluster="lambda expression", label="c.PropertyName == ''InvariantInfo''", span="462-462"];
d286 [cluster="lambda expression", label="Entry lambda expression", span="504-508"];
d289 [cluster="lambda expression", label="Exit lambda expression", span="504-508"];
d290 [cluster="Newtonsoft.Json.Tests.TestObjects.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", label="Entry Newtonsoft.Json.Tests.TestObjects.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", span="40-40"];
d338 [cluster="Newtonsoft.Json.Serialization.ExtensionDataGetter.Invoke(object)", label="Entry Newtonsoft.Json.Serialization.ExtensionDataGetter.Invoke(object)", span="75-75"];
d339 [cluster="Unk.ToDictionary", label="Entry Unk.ToDictionary", span=""];
d341 [cluster="lambda expression", label="Entry lambda expression", span="653-653"];
d344 [cluster="lambda expression", label="Entry lambda expression", span="653-653"];
d367 [cluster="Unk.AreNotEqual", label="Entry Unk.AreNotEqual", span=""];
d201 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="JsonProperty p = new JsonProperty { PropertyName = ''abc'' }", span="387-387"];
d203 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="p = new JsonProperty { PropertyName = ''123'' }", span="390-390"];
d205 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="p = new JsonProperty { PropertyName = ''._-'' }", span="393-393"];
d207 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="p = new JsonProperty { PropertyName = ''!@#'' }", span="396-396"];
d209 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="p = new JsonProperty { PropertyName = ''$%^'' }", span="399-399"];
d211 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="p = new JsonProperty { PropertyName = ''?*('' }", span="402-402"];
d213 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="p = new JsonProperty { PropertyName = '')_+'' }", span="405-405"];
d215 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="p = new JsonProperty { PropertyName = ''=:,'' }", span="408-408"];
d217 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="p = new JsonProperty { PropertyName = null }", span="411-411"];
d219 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="p = new JsonProperty { PropertyName = ''&'' }", span="414-414"];
d221 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="p = new JsonProperty { PropertyName = ''<'' }", span="417-417"];
d223 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="p = new JsonProperty { PropertyName = ''>'' }", span="420-420"];
d225 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="p = new JsonProperty { PropertyName = ''''' }", span="423-423"];
d227 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="p = new JsonProperty { PropertyName = @'''''''' }", span="426-426"];
d229 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="p = new JsonProperty { PropertyName = Environment.NewLine }", span="429-429"];
d231 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="p = new JsonProperty { PropertyName = ''\0'' }", span="432-432"];
d233 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="p = new JsonProperty { PropertyName = ''\n'' }", span="435-435"];
d235 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="p = new JsonProperty { PropertyName = ''\v'' }", span="438-438"];
d237 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="p = new JsonProperty { PropertyName = ''\u00B9'' }", span="441-441"];
d292 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", label="Employee employee = new Employee\r\n            {\r\n                BirthDate = new DateTime(1977, 12, 30, 1, 1, 1, DateTimeKind.Utc),\r\n                FirstName = ''Maurice'',\r\n                LastName = ''Moss'',\r\n                Department = ''IT'',\r\n                JobTitle = ''Support''\r\n            }", span="524-531"];
d298 [cluster="Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.IPersonContractResolver()", label="Entry Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.IPersonContractResolver()", span="93-93"];
d302 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", label="Book book = new Book\r\n            {\r\n                BookName = ''The Gathering Storm'',\r\n                BookPrice = 16.19m,\r\n                AuthorName = ''Brandon Sanderson'',\r\n                AuthorAge = 34,\r\n                AuthorCountry = ''United States of America''\r\n            }", span="546-553"];
d0 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", span="56-56"];
d295 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", span="522-522"];
d307 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", span="544-544"];
d340 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
d239 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", span="385-385"];
d343 [cluster="lambda expression", label="Exit lambda expression", span="653-653"];
d342 [cluster="lambda expression", label="kv.Key", span="653-653"];
d346 [cluster="lambda expression", label="Exit lambda expression", span="653-653"];
d345 [cluster="lambda expression", label="kv.Value", span="653-653"];
d200 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", span="385-385"];
d291 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", span="522-522"];
d296 [cluster="Newtonsoft.Json.Tests.TestObjects.Organization.Employee.Employee()", label="Entry Newtonsoft.Json.Tests.TestObjects.Organization.Employee.Employee()", span="29-29"];
d297 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
d301 [cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", span="544-544"];
d308 [cluster="Newtonsoft.Json.Tests.Serialization.Book.Book()", label="Entry Newtonsoft.Json.Tests.Serialization.Book.Book()", span="84-84"];
d2 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", span="56-56"];
d1 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", label="_startingWithChar = startingWithChar", span="58-58"];
d411 [label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver", span=""];
d4 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", label="IList<JsonProperty> properties = base.CreateProperties(type, memberSerialization)", span="63-63"];
d5 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", label="properties =\r\n                properties.Where(p => p.PropertyName.StartsWith(_startingWithChar.ToString())).ToList()", span="66-67"];
d12 [cluster="lambda expression", label="p.PropertyName.StartsWith(_startingWithChar.ToString())", span="67-67"];
d3 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="61-61"];
d8 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1297-1297"];
d6 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", label="return properties;", span="69-69"];
d9 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
d10 [cluster="Unk.ToList", label="Entry Unk.ToList", span=""];
d11 [cluster="lambda expression", label="Entry lambda expression", span="67-67"];
d13 [cluster="lambda expression", label="Exit lambda expression", span="67-67"];
d14 [cluster="char.ToString()", label="Entry char.ToString()", span="0-0"];
d15 [cluster="string.StartsWith(string)", label="Entry string.StartsWith(string)", span="0-0"];
d7 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="61-61"];
m0_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", span="11-11"];
m0_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs", label="string schemaJson", span="14-14"];
m0_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs", label="JsonSchemaResolver resolver = new JsonSchemaResolver()", span="15-15"];
m0_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs", label="schemaJson = @''{\r\n              'id': 'person',\r\n              'type': 'object',\r\n              'properties': {\r\n                'name': {'type':'string'},\r\n                'age': {'type':'integer'}\r\n              }\r\n            }''", span="17-24"];
m0_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs", label="JsonSchema personSchema = JsonSchema.Parse(schemaJson, resolver)", span="26-26"];
m0_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs", label="JsonSchema employeeSchema = JsonSchema.Parse(schemaJson, resolver)", span="38-38"];
m0_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs", label="schemaJson = @''{\r\n              'id': 'employee',\r\n              'type': 'object',\r\n              'extends': {'$ref':'person'},\r\n              'properties': {\r\n                'salary': {'type':'number'},\r\n                'jobTitle': {'type':'string'}\r\n              }\r\n            }''", span="28-36"];
m0_7 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs", label="string json = @''{\r\n              'name': 'James',\r\n              'age': 29,\r\n              'salary': 9000.01,\r\n              'jobTitle': 'Junior Vice President'\r\n            }''", span="40-45"];
m0_9 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs", label="bool valid = employee.IsValid(employeeSchema)", span="49-49"];
m0_8 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs", label="JObject employee = JObject.Parse(json)", span="47-47"];
m0_10 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs", label="Console.WriteLine(valid)", span="51-51"];
m0_11 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", span="11-11"];
m0_15 [cluster="Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema)", span="44-44"];
m0_12 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", span="50-50"];
m0_13 [cluster="Newtonsoft.Json.Schema.JsonSchema.Parse(string, Newtonsoft.Json.Schema.JsonSchemaResolver)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Schema.JsonSchema.Parse(string, Newtonsoft.Json.Schema.JsonSchemaResolver)", span="299-299"];
m0_16 [cluster="System.Console.WriteLine(bool)", file="DefaultContractResolver.cs", label="Entry System.Console.WriteLine(bool)", span="0-0"];
m1_28 [cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0"];
m1_42 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0"];
m1_71 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0"];
m1_35 [cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0"];
m1_74 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0"];
m1_64 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", span="0-0"];
m1_33 [cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0"];
m1_67 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0"];
m1_66 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0"];
m1_32 [cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0"];
m1_29 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt32(string)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt32(string)", span="0-0"];
m1_43 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="84-84"];
m1_44 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="info.AddValue((string)''stringValue'', (object)_stringValue)", span="86-86"];
m1_45 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="info.AddValue((string)''intValue'', (int)_intValue)", span="87-87"];
m1_46 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="info.AddValue((string)''dateTimeOffsetValue'', (object)_dateTimeOffsetValue)", span="88-88"];
m1_47 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="info.AddValue((string)''personValue'', (object)_personValue)", span="89-89"];
m1_48 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="info.AddValue((string)''nullPersonValue'', (object)_nullPersonValue)", span="90-90"];
m1_49 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="info.AddValue(''nullableInt'', null)", span="91-91"];
m1_50 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="info.AddValue((string)''booleanValue'', (bool)_booleanValue)", span="93-93"];
m1_51 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="info.AddValue((string)''byteValue'', (byte)_byteValue)", span="94-94"];
m1_52 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="info.AddValue((string)''charValue'', (char)_charValue)", span="95-95"];
m1_53 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="info.AddValue((string)''dateTimeValue'', (DateTime)_dateTimeValue)", span="96-96"];
m1_54 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="info.AddValue((string)''decimalValue'', (decimal)_decimalValue)", span="97-97"];
m1_55 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="info.AddValue((string)''shortValue'', (short)_shortValue)", span="98-98"];
m1_56 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="info.AddValue((string)''longValue'', (long)_longValue)", span="99-99"];
m1_57 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="info.AddValue((string)''sbyteValue'', (sbyte)_sbyteValue)", span="100-100"];
m1_58 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="info.AddValue((string)''floatValue'', (float)_floatValue)", span="101-101"];
m1_59 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="info.AddValue((string)''ushortValue'', (ushort)_ushortValue)", span="102-102"];
m1_60 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="info.AddValue((string)''uintValue'', (uint)_uintValue)", span="103-103"];
m1_61 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="info.AddValue((string)''ulongValue'', (ulong)_ulongValue)", span="104-104"];
m1_62 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="84-84"];
m1_75 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0"];
m1_65 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0"];
m1_38 [cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0"];
m1_34 [cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0"];
m1_72 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0"];
m1_39 [cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0"];
m1_8 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="61-61"];
m1_9 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="_stringValue = info.GetString(''stringValue'')", span="63-63"];
m1_10 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="_intValue = info.GetInt32(''intValue'')", span="64-64"];
m1_11 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="65-65"];
m1_12 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="66-66"];
m1_13 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="67-67"];
m1_14 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="68-68"];
m1_15 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="_booleanValue = info.GetBoolean(''booleanValue'')", span="70-70"];
m1_16 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="_byteValue = info.GetByte(''byteValue'')", span="71-71"];
m1_17 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="_charValue = info.GetChar(''charValue'')", span="72-72"];
m1_18 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="73-73"];
m1_19 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="_decimalValue = info.GetDecimal(''decimalValue'')", span="74-74"];
m1_20 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="_shortValue = info.GetInt16(''shortValue'')", span="75-75"];
m1_21 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="_longValue = info.GetInt64(''longValue'')", span="76-76"];
m1_22 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="77-77"];
m1_23 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="_floatValue = info.GetSingle(''floatValue'')", span="78-78"];
m1_24 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="_ushortValue = info.GetUInt16(''ushortValue'')", span="79-79"];
m1_25 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="_uintValue = info.GetUInt32(''uintValue'')", span="80-80"];
m1_26 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="_ulongValue = info.GetUInt64(''ulongValue'')", span="81-81"];
m1_27 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="61-61"];
m1_7 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="ISerializableTestObject.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m1_76 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0"];
m1_0 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="ISerializableTestObject.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", span="52-52"];
m1_1 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="ISerializableTestObject.cs", label="_stringValue = stringValue", span="54-54"];
m1_2 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="ISerializableTestObject.cs", label="_intValue = intValue", span="55-55"];
m1_3 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="ISerializableTestObject.cs", label="_dateTimeOffsetValue = dateTimeOffset", span="56-56"];
m1_4 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="ISerializableTestObject.cs", label="_personValue = personValue", span="57-57"];
m1_5 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="ISerializableTestObject.cs", label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="58-58"];
m1_6 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="ISerializableTestObject.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", span="52-52"];
m1_31 [cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0"];
m1_70 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0"];
m1_41 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0"];
m1_30 [cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0"];
m1_69 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0"];
m1_73 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0"];
m1_37 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0"];
m1_63 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m1_40 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0"];
m1_36 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0"];
m1_68 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="ISerializableTestObject.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0"];
m1_77 [file="ISerializableTestObject.cs", label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", span=""];
m6_10 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="Ratio.cs", label="Exit Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="56-56"];
m6_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectToken.Example()", file="Ratio.cs", label="Console.WriteLine(name)", span="46-46"];
m6_12 [cluster="System.Console.WriteLine(decimal)", file="Ratio.cs", label="Entry System.Console.WriteLine(decimal)", span="0-0"];
m6_11 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.Create(System.Type)", file="Ratio.cs", label="Entry Newtonsoft.Json.Converters.CustomCreationConverter<T>.Create(System.Type)", span="71-71"];
m6_14 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.Create(System.Type)", file="Ratio.cs", label="Exit Newtonsoft.Json.Converters.CustomCreationConverter<T>.Create(System.Type)", span="71-71"];
m6_18 [cluster="System.Type.IsAssignableFrom(System.Type)", file="Ratio.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m6_13 [cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="Ratio.cs", label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="334-334"];
m6_0 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Ratio.cs", label="Entry Newtonsoft.Json.Converters.CustomCreationConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44"];
m6_1 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="Ratio.cs", label="1: throw new NotSupportedException(''CustomCreationConverter should only be used while deserializing.'');", span="46-46"];
m6_2 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Ratio.cs", label="Exit Newtonsoft.Json.Converters.CustomCreationConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44"];
m6_4 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="Ratio.cs", label="Entry Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="56-56"];
m6_6 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="Ratio.cs", label="value == null", span="59-59"];
m6_5 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="Ratio.cs", label="T value = Create(objectType)", span="58-58"];
m6_7 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="Ratio.cs", label="throw new JsonSerializationException(''No object created.'');", span="60-60"];
m6_8 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="Ratio.cs", label="serializer.Populate(reader, value)", span="62-62"];
m6_9 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="Ratio.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359"];
m6_15 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.CanConvert(System.Type)", file="Ratio.cs", label="Entry Newtonsoft.Json.Converters.CustomCreationConverter<T>.CanConvert(System.Type)", span="80-80"];
m6_16 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.CanConvert(System.Type)", file="Ratio.cs", label="return typeof (T).IsAssignableFrom(objectType);", span="82-82"];
m6_17 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.CanConvert(System.Type)", file="Ratio.cs", label="Exit Newtonsoft.Json.Converters.CustomCreationConverter<T>.CanConvert(System.Type)", span="80-80"];
m6_19 [file="Ratio.cs", label="Newtonsoft.Json.Converters.CustomCreationConverter<T>", span=""];
m7_2 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="ReferenceLoopHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", span="53-53"];
m7_3 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="ReferenceLoopHandlingTests.cs", label="Console.WriteLine(EscapeJson(json))", span="55-55"];
m7_4 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="ReferenceLoopHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", span="53-53"];
m7_9 [cluster="string.Replace(string, string)", file="ReferenceLoopHandlingTests.cs", label="Entry string.Replace(string, string)", span="0-0"];
m7_5 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="ReferenceLoopHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", span="58-58"];
m7_7 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="ReferenceLoopHandlingTests.cs", label="return @''@'''''' + json.Replace(@'''''''', @'''''''''''') + @'''''''';", span="60-60"];
m7_8 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="ReferenceLoopHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", span="58-58"];
m7_0 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="ReferenceLoopHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", span="39-39"];
m7_1 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="ReferenceLoopHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", span="39-39"];
m7_10 [file="ReferenceLoopHandlingTests.cs", label="Newtonsoft.Json.Tests.TestFixtureBase", span=""];
m8_48 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m8_52 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="600-600"];
m8_53 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", span="138-138"];
m8_50 [cluster="object.ToString()", file="StringEnumConverter.cs", label="Entry object.ToString()", span="0-0"];
m8_29 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="123-123"];
m8_30 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="reader.TokenType == JsonToken.Null", span="125-125"];
m8_31 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="!ReflectionUtils.IsNullableType(objectType)", span="127-127"];
m8_32 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot convert null value to {0}.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="129-129"];
m8_34 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="bool isNullable = ReflectionUtils.IsNullableType(objectType)", span="135-135"];
m8_35 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="Type t = isNullable ? Nullable.GetUnderlyingType(objectType) : objectType", span="136-136"];
m8_36 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="reader.TokenType == JsonToken.String", span="140-140"];
m8_37 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="string enumText = reader.Value.ToString()", span="142-142"];
m8_39 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="reader.TokenType == JsonToken.Integer", span="147-147"];
m8_41 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="throw JsonSerializationException.Create(reader, ''Integer value {0} is not allowed.''.FormatWith(CultureInfo.InvariantCulture, reader.Value));", span="151-151"];
m8_42 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="return ConvertUtils.ConvertOrCast(reader.Value, CultureInfo.InvariantCulture, t);", span="154-154"];
m8_44 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="throw JsonSerializationException.Create(reader, ''Error converting value {0} to type '{1}'.''.FormatWith(CultureInfo.InvariantCulture, MiscellaneousUtils.FormatValueForPrint(reader.Value), objectType), ex);", span="159-159"];
m8_45 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token {0} when parsing enum.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="163-163"];
m8_33 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="return null;", span="132-132"];
m8_38 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="return EnumUtils.ParseEnumName(enumText, isNullable, !AllowIntegerValues, t);", span="144-144"];
m8_40 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="!AllowIntegerValues", span="149-149"];
m8_43 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label=Exception, span="157-157"];
m8_46 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="123-123"];
m8_22 [cluster="char.IsNumber(char)", file="StringEnumConverter.cs", label="Entry char.IsNumber(char)", span="0-0"];
m8_3 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter(bool)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter(bool)", span="71-71"];
m8_4 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter(bool)", file="StringEnumConverter.cs", label="CamelCaseText = camelCaseText", span="74-74"];
m8_5 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter(bool)", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter(bool)", span="71-71"];
m8_24 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92"];
m8_60 [cluster="System.Type.IsEnum()", file="StringEnumConverter.cs", label="Entry System.Type.IsEnum()", span="189-189"];
m8_20 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="907-907"];
m8_0 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="62-62"];
m8_1 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="StringEnumConverter.cs", label="AllowIntegerValues = true", span="64-64"];
m8_2 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="62-62"];
m8_6 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="83-83"];
m8_7 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="value == null", span="85-85"];
m8_8 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="writer.WriteNull()", span="87-87"];
m8_10 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="Enum e = (Enum)value", span="91-91"];
m8_14 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="throw JsonSerializationException.Create(null, writer.ContainerPath, ''Integer value {0} is not allowed.''.FormatWith(CultureInfo.InvariantCulture, enumName), null);", span="99-99"];
m8_15 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="writer.WriteValue(value)", span="103-103"];
m8_18 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="writer.WriteValue(finalName)", span="111-111"];
m8_9 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="return;", span="88-88"];
m8_11 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="string enumName = e.ToString(''G'')", span="93-93"];
m8_16 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="Type enumType = e.GetType()", span="107-107"];
m8_12 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="char.IsNumber(enumName[0]) || enumName[0] == '-'", span="95-95"];
m8_17 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="string finalName = EnumUtils.ToEnumName(enumType, enumName, CamelCaseText)", span="109-109"];
m8_13 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="!AllowIntegerValues", span="97-97"];
m8_19 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="83-83"];
m8_54 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="StringEnumConverter.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m8_25 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1424-1424"];
m8_47 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="263-263"];
m8_49 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="StringEnumConverter.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m8_51 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", span="187-187"];
m8_28 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="945-945"];
m8_21 [cluster="System.Enum.ToString(string)", file="StringEnumConverter.cs", label="Entry System.Enum.ToString(string)", span="0-0"];
m8_23 [cluster="string.FormatWith(System.IFormatProvider, object)", file="StringEnumConverter.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m8_27 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", span="233-233"];
m8_55 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="87-87"];
m8_56 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", span="173-173"];
m8_57 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", file="StringEnumConverter.cs", label="Type t = (ReflectionUtils.IsNullableType(objectType))\r\n                ? Nullable.GetUnderlyingType(objectType)\r\n                : objectType", span="175-177"];
m8_58 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", file="StringEnumConverter.cs", label="return t.IsEnum();", span="179-179"];
m8_59 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", span="173-173"];
m8_61 [file="StringEnumConverter.cs", label="Newtonsoft.Json.Converters.StringEnumConverter", span=""];
d35 -> d36  [color=green, key=0, style=solid];
d35 -> d31  [color=green, key=2, style=dotted];
d34 -> d35  [color=green, key=0, style=solid];
d36 -> d37  [color=green, key=0, style=solid];
d36 -> d32  [color=green, key=2, style=dotted];
d37 -> d38  [color=green, key=0, style=solid];
d37 -> d33  [color=green, key=2, style=dotted];
d38 -> d34  [color=blue, key=0, style=bold];
d27 -> d31  [key=2, style=dotted];
d27 -> d28  [key=0, style=solid];
d40 -> d31  [key=2, style=dotted];
d40 -> d41  [key=0, style=solid];
d65 -> d31  [key=2, style=dotted];
d65 -> d66  [key=0, style=solid];
d74 -> d31  [key=2, style=dotted];
d74 -> d75  [key=0, style=solid];
d83 -> d31  [key=2, style=dotted];
d83 -> d84  [key=0, style=solid];
d83 -> d88  [color=darkseagreen4, key=1, label=resolver, style=dashed];
d83 -> d99  [color=darkseagreen4, key=1, label=resolver, style=dashed];
d83 -> d90  [color=darkseagreen4, key=1, label=resolver, style=dashed];
d106 -> d31  [key=2, style=dotted];
d106 -> d107  [key=0, style=solid];
d106 -> d111  [color=darkseagreen4, key=1, label=resolver, style=dashed];
d106 -> d119  [color=darkseagreen4, key=1, label=resolver, style=dashed];
d106 -> d113  [color=darkseagreen4, key=1, label=resolver, style=dashed];
d126 -> d31  [key=2, style=dotted];
d126 -> d127  [key=0, style=solid];
d126 -> d131  [color=darkseagreen4, key=1, label=resolver, style=dashed];
d143 -> d31  [key=2, style=dotted];
d143 -> d144  [key=0, style=solid];
d143 -> d148  [color=darkseagreen4, key=1, label=resolver, style=dashed];
d159 -> d31  [key=2, style=dotted];
d159 -> d160  [key=0, style=solid];
d159 -> d164  [color=darkseagreen4, key=1, label=resolver, style=dashed];
d159 -> d172  [color=darkseagreen4, key=1, label=resolver, style=dashed];
d159 -> d166  [color=darkseagreen4, key=1, label=resolver, style=dashed];
d241 -> d31  [key=2, style=dotted];
d241 -> d242  [key=0, style=solid];
d246 -> d31  [key=2, style=dotted];
d246 -> d247  [key=0, style=solid];
d255 -> d31  [key=2, style=dotted];
d255 -> d256  [key=0, style=solid];
d265 -> d31  [key=2, style=dotted];
d265 -> d266  [key=0, style=solid];
d276 -> d31  [key=2, style=dotted];
d276 -> d277  [key=0, style=solid];
d276 -> d281  [color=darkseagreen4, key=1, label=resolver, style=dashed];
d311 -> d31  [key=2, style=dotted];
d311 -> d312  [key=0, style=solid];
d314 -> d31  [key=2, style=dotted];
d314 -> d315  [key=0, style=solid];
d325 -> d31  [key=2, style=dotted];
d325 -> d326  [key=0, style=solid];
d351 -> d31  [key=2, style=dotted];
d351 -> d352  [key=0, style=solid];
d351 -> d353  [color=darkseagreen4, key=1, label=resolver, style=dashed];
d360 -> d31  [key=2, style=dotted];
d360 -> d361  [key=0, style=solid];
d373 -> d31  [key=2, style=dotted];
d373 -> d374  [key=0, style=solid];
d373 -> d375  [color=darkseagreen4, key=1, label=resolver, style=dashed];
d393 -> d31  [key=2, style=dotted];
d393 -> d394  [key=0, style=solid];
d28 -> d32  [key=2, style=dotted];
d28 -> d29  [key=0, style=solid];
d41 -> d32  [key=2, style=dotted];
d41 -> d42  [key=0, style=solid];
d66 -> d32  [key=2, style=dotted];
d66 -> d67  [key=0, style=solid];
d66 -> d68  [color=darkseagreen4, key=1, label=contract, style=dashed];
d66 -> d69  [color=darkseagreen4, key=1, label=contract, style=dashed];
d75 -> d32  [key=2, style=dotted];
d75 -> d76  [key=0, style=solid];
d84 -> d32  [key=2, style=dotted];
d84 -> d85  [key=0, style=solid];
d84 -> d86  [color=darkseagreen4, key=1, label=contract, style=dashed];
d84 -> d87  [color=darkseagreen4, key=1, label=contract, style=dashed];
d84 -> d89  [color=darkseagreen4, key=1, label=contract, style=dashed];
d107 -> d32  [key=2, style=dotted];
d107 -> d108  [key=0, style=solid];
d107 -> d109  [color=darkseagreen4, key=1, label=contract, style=dashed];
d107 -> d110  [color=darkseagreen4, key=1, label=contract, style=dashed];
d107 -> d112  [color=darkseagreen4, key=1, label=contract, style=dashed];
d127 -> d32  [key=2, style=dotted];
d127 -> d128  [key=0, style=solid];
d127 -> d129  [color=darkseagreen4, key=1, label=contract, style=dashed];
d127 -> d130  [color=darkseagreen4, key=1, label=contract, style=dashed];
d144 -> d32  [key=2, style=dotted];
d144 -> d145  [key=0, style=solid];
d144 -> d146  [color=darkseagreen4, key=1, label=contract, style=dashed];
d144 -> d147  [color=darkseagreen4, key=1, label=contract, style=dashed];
d160 -> d32  [key=2, style=dotted];
d160 -> d161  [key=0, style=solid];
d160 -> d162  [color=darkseagreen4, key=1, label=contract, style=dashed];
d160 -> d163  [color=darkseagreen4, key=1, label=contract, style=dashed];
d160 -> d165  [color=darkseagreen4, key=1, label=contract, style=dashed];
d242 -> d32  [key=2, style=dotted];
d242 -> d243  [key=0, style=solid];
d247 -> d32  [key=2, style=dotted];
d247 -> d248  [key=0, style=solid];
d256 -> d32  [key=2, style=dotted];
d256 -> d257  [key=0, style=solid];
d256 -> d258  [color=darkseagreen4, key=1, label=contract, style=dashed];
d256 -> d259  [color=darkseagreen4, key=1, label=contract, style=dashed];
d256 -> d260  [color=darkseagreen4, key=1, label=contract, style=dashed];
d256 -> d261  [color=darkseagreen4, key=1, label=contract, style=dashed];
d256 -> d262  [color=darkseagreen4, key=1, label=contract, style=dashed];
d266 -> d32  [key=2, style=dotted];
d266 -> d267  [key=0, style=solid];
d266 -> d268  [color=darkseagreen4, key=1, label=contract, style=dashed];
d266 -> d269  [color=darkseagreen4, key=1, label=contract, style=dashed];
d266 -> d270  [color=darkseagreen4, key=1, label=contract, style=dashed];
d266 -> d271  [color=darkseagreen4, key=1, label=contract, style=dashed];
d266 -> d272  [color=darkseagreen4, key=1, label=contract, style=dashed];
d266 -> d273  [color=darkseagreen4, key=1, label=contract, style=dashed];
d277 -> d32  [key=2, style=dotted];
d277 -> d278  [key=0, style=solid];
d277 -> d279  [color=darkseagreen4, key=1, label=contract, style=dashed];
d277 -> d280  [color=darkseagreen4, key=1, label=contract, style=dashed];
d326 -> d32  [key=2, style=dotted];
d326 -> d327  [key=0, style=solid];
d326 -> d328  [color=darkseagreen4, key=1, label=contract, style=dashed];
d353 -> d32  [key=2, style=dotted];
d353 -> d354  [key=0, style=solid];
d353 -> d356  [color=darkseagreen4, key=1, label=contract, style=dashed];
d361 -> d32  [key=2, style=dotted];
d361 -> d362  [key=0, style=solid];
d361 -> d364  [color=darkseagreen4, key=1, label=contract, style=dashed];
d375 -> d32  [key=2, style=dotted];
d375 -> d376  [key=0, style=solid];
d375 -> d379  [color=darkseagreen4, key=1, label=contract, style=dashed];
d375 -> d382  [color=darkseagreen4, key=1, label=contract, style=dashed];
d375 -> d385  [color=darkseagreen4, key=1, label=contract, style=dashed];
d375 -> d388  [color=darkseagreen4, key=1, label=contract, style=dashed];
d394 -> d32  [key=2, style=dotted];
d394 -> d395  [key=0, style=solid];
d394 -> d398  [color=darkseagreen4, key=1, label=contract, style=dashed];
d394 -> d401  [color=darkseagreen4, key=1, label=contract, style=dashed];
d394 -> d404  [color=darkseagreen4, key=1, label=contract, style=dashed];
d394 -> d407  [color=darkseagreen4, key=1, label=contract, style=dashed];
d29 -> d33  [key=2, style=dotted];
d29 -> d30  [key=0, style=solid];
d42 -> d33  [key=2, style=dotted];
d42 -> d43  [key=0, style=solid];
d46 -> d33  [key=2, style=dotted];
d46 -> d47  [key=0, style=solid];
d46 -> d62  [key=2, style=dotted];
d47 -> d33  [key=2, style=dotted];
d47 -> d48  [key=0, style=solid];
d49 -> d33  [key=2, style=dotted];
d49 -> d50  [key=0, style=solid];
d49 -> d62  [key=2, style=dotted];
d50 -> d33  [key=2, style=dotted];
d50 -> d51  [key=0, style=solid];
d52 -> d33  [key=2, style=dotted];
d52 -> d53  [key=0, style=solid];
d52 -> d63  [key=2, style=dotted];
d52 -> d62  [key=2, style=dotted];
d53 -> d33  [key=2, style=dotted];
d53 -> d54  [key=0, style=solid];
d55 -> d33  [key=2, style=dotted];
d55 -> d56  [key=0, style=solid];
d55 -> d62  [key=2, style=dotted];
d56 -> d33  [key=2, style=dotted];
d56 -> d57  [key=0, style=solid];
d58 -> d33  [key=2, style=dotted];
d58 -> d59  [key=0, style=solid];
d58 -> d62  [key=2, style=dotted];
d59 -> d33  [key=2, style=dotted];
d59 -> d60  [key=0, style=solid];
d68 -> d33  [key=2, style=dotted];
d68 -> d69  [key=0, style=solid];
d77 -> d33  [key=2, style=dotted];
d77 -> d78  [key=0, style=solid];
d77 -> d80  [key=2, style=dotted];
d78 -> d33  [key=2, style=dotted];
d78 -> d79  [key=0, style=solid];
d78 -> d80  [key=2, style=dotted];
d78 -> d81  [key=2, style=dotted];
d91 -> d33  [key=2, style=dotted];
d91 -> d92  [key=0, style=solid];
d114 -> d33  [key=2, style=dotted];
d114 -> d115  [key=0, style=solid];
d115 -> d33  [key=2, style=dotted];
d115 -> d116  [key=0, style=solid];
d116 -> d33  [key=2, style=dotted];
d116 -> d117  [key=0, style=solid];
d132 -> d33  [key=2, style=dotted];
d132 -> d133  [key=0, style=solid];
d132 -> d81  [key=2, style=dotted];
d133 -> d33  [key=2, style=dotted];
d133 -> d134  [key=0, style=solid];
d134 -> d33  [key=2, style=dotted];
d134 -> d135  [key=0, style=solid];
d135 -> d33  [key=2, style=dotted];
d135 -> d136  [key=0, style=solid];
d136 -> d33  [key=2, style=dotted];
d136 -> d137  [key=0, style=solid];
d149 -> d33  [key=2, style=dotted];
d149 -> d150  [key=0, style=solid];
d149 -> d81  [key=2, style=dotted];
d150 -> d33  [key=2, style=dotted];
d150 -> d151  [key=0, style=solid];
d151 -> d33  [key=2, style=dotted];
d151 -> d152  [key=0, style=solid];
d152 -> d33  [key=2, style=dotted];
d152 -> d153  [key=0, style=solid];
d167 -> d33  [key=2, style=dotted];
d167 -> d168  [key=0, style=solid];
d168 -> d33  [key=2, style=dotted];
d168 -> d169  [key=0, style=solid];
d169 -> d33  [key=2, style=dotted];
d169 -> d170  [key=0, style=solid];
d180 -> d33  [key=2, style=dotted];
d180 -> d181  [key=0, style=solid];
d184 -> d33  [key=2, style=dotted];
d184 -> d185  [key=0, style=solid];
d194 -> d33  [key=2, style=dotted];
d194 -> d195  [key=0, style=solid];
d198 -> d33  [key=2, style=dotted];
d198 -> d199  [key=0, style=solid];
d243 -> d33  [key=2, style=dotted];
d243 -> d244  [key=0, style=solid];
d259 -> d33  [key=2, style=dotted];
d259 -> d260  [key=0, style=solid];
d260 -> d33  [key=2, style=dotted];
d260 -> d261  [key=0, style=solid];
d269 -> d33  [key=2, style=dotted];
d269 -> d270  [key=0, style=solid];
d270 -> d33  [key=2, style=dotted];
d270 -> d271  [key=0, style=solid];
d271 -> d33  [key=2, style=dotted];
d271 -> d272  [key=0, style=solid];
d282 -> d33  [key=2, style=dotted];
d282 -> d283  [key=0, style=solid];
d283 -> d33  [key=2, style=dotted];
d283 -> d284  [key=0, style=solid];
d318 -> d33  [key=2, style=dotted];
d318 -> d319  [key=0, style=solid];
d319 -> d33  [key=2, style=dotted];
d319 -> d320  [key=0, style=solid];
d355 -> d33  [key=2, style=dotted];
d355 -> d356  [key=0, style=solid];
d357 -> d33  [key=2, style=dotted];
d357 -> d358  [key=0, style=solid];
d365 -> d33  [key=2, style=dotted];
d365 -> d366  [key=0, style=solid];
d377 -> d33  [key=2, style=dotted];
d377 -> d378  [key=0, style=solid];
d378 -> d33  [key=2, style=dotted];
d378 -> d379  [key=0, style=solid];
d380 -> d33  [key=2, style=dotted];
d380 -> d381  [key=0, style=solid];
d381 -> d33  [key=2, style=dotted];
d381 -> d382  [key=0, style=solid];
d383 -> d33  [key=2, style=dotted];
d383 -> d384  [key=0, style=solid];
d384 -> d33  [key=2, style=dotted];
d384 -> d385  [key=0, style=solid];
d386 -> d33  [key=2, style=dotted];
d386 -> d387  [key=0, style=solid];
d387 -> d33  [key=2, style=dotted];
d387 -> d388  [key=0, style=solid];
d389 -> d33  [key=2, style=dotted];
d389 -> d390  [key=0, style=solid];
d390 -> d33  [key=2, style=dotted];
d390 -> d391  [key=0, style=solid];
d402 -> d33  [key=2, style=dotted];
d402 -> d403  [key=0, style=solid];
d403 -> d33  [key=2, style=dotted];
d403 -> d404  [key=0, style=solid];
d405 -> d33  [key=2, style=dotted];
d405 -> d406  [key=0, style=solid];
d406 -> d33  [key=2, style=dotted];
d406 -> d407  [key=0, style=solid];
d408 -> d33  [key=2, style=dotted];
d408 -> d409  [key=0, style=solid];
d409 -> d33  [key=2, style=dotted];
d409 -> d410  [key=0, style=solid];
d26 -> d27  [key=0, style=solid];
d39 -> d40  [key=0, style=solid];
d64 -> d65  [key=0, style=solid];
d73 -> d74  [key=0, style=solid];
d82 -> d83  [key=0, style=solid];
d88 -> d89  [key=0, style=solid];
d88 -> d95  [key=2, style=dotted];
d88 -> d98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d99 -> d100  [key=0, style=solid];
d99 -> d96  [key=2, style=dotted];
d99 -> d97  [key=2, style=dotted];
d90 -> d91  [key=0, style=solid];
d90 -> d96  [key=2, style=dotted];
d90 -> d97  [key=2, style=dotted];
d105 -> d106  [key=0, style=solid];
d111 -> d112  [key=0, style=solid];
d111 -> d95  [key=2, style=dotted];
d111 -> d118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d119 -> d120  [key=0, style=solid];
d119 -> d96  [key=2, style=dotted];
d119 -> d97  [key=2, style=dotted];
d113 -> d114  [key=0, style=solid];
d113 -> d115  [color=darkseagreen4, key=1, label=l, style=dashed];
d113 -> d116  [color=darkseagreen4, key=1, label=l, style=dashed];
d113 -> d96  [key=2, style=dotted];
d113 -> d97  [key=2, style=dotted];
d125 -> d126  [key=0, style=solid];
d131 -> d132  [key=0, style=solid];
d131 -> d133  [color=darkseagreen4, key=1, label=l, style=dashed];
d131 -> d134  [color=darkseagreen4, key=1, label=l, style=dashed];
d131 -> d135  [color=darkseagreen4, key=1, label=l, style=dashed];
d131 -> d136  [color=darkseagreen4, key=1, label=l, style=dashed];
d131 -> d96  [key=2, style=dotted];
d131 -> d97  [key=2, style=dotted];
d142 -> d143  [key=0, style=solid];
d148 -> d149  [key=0, style=solid];
d148 -> d150  [color=darkseagreen4, key=1, label=d, style=dashed];
d148 -> d151  [color=darkseagreen4, key=1, label=d, style=dashed];
d148 -> d152  [color=darkseagreen4, key=1, label=d, style=dashed];
d148 -> d96  [key=2, style=dotted];
d148 -> d97  [key=2, style=dotted];
d158 -> d159  [key=0, style=solid];
d164 -> d165  [key=0, style=solid];
d164 -> d95  [key=2, style=dotted];
d164 -> d171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d172 -> d173  [key=0, style=solid];
d172 -> d96  [key=2, style=dotted];
d172 -> d97  [key=2, style=dotted];
d166 -> d167  [key=0, style=solid];
d166 -> d168  [color=darkseagreen4, key=1, label=d, style=dashed];
d166 -> d169  [color=darkseagreen4, key=1, label=d, style=dashed];
d166 -> d96  [key=2, style=dotted];
d166 -> d97  [key=2, style=dotted];
d240 -> d241  [key=0, style=solid];
d245 -> d246  [key=0, style=solid];
d254 -> d255  [key=0, style=solid];
d264 -> d265  [key=0, style=solid];
d275 -> d276  [key=0, style=solid];
d281 -> d282  [key=0, style=solid];
d281 -> d283  [color=darkseagreen4, key=1, label=o, style=dashed];
d281 -> d96  [key=2, style=dotted];
d281 -> d97  [key=2, style=dotted];
d310 -> d311  [key=0, style=solid];
d310 -> d321  [key=2, style=dotted];
d310 -> d312  [color=darkseagreen4, key=1, label=structTest, style=dashed];
d310 -> d315  [color=darkseagreen4, key=1, label=structTest, style=dashed];
d312 -> d313  [key=0, style=solid];
d312 -> d96  [key=2, style=dotted];
d312 -> d299  [key=2, style=dotted];
d313 -> d314  [key=0, style=solid];
d313 -> d300  [key=2, style=dotted];
d315 -> d316  [key=0, style=solid];
d315 -> d96  [key=2, style=dotted];
d315 -> d299  [key=2, style=dotted];
d315 -> d317  [color=darkseagreen4, key=1, label=includeCompilerGeneratedJson, style=dashed];
d324 -> d325  [key=0, style=solid];
d350 -> d351  [key=0, style=solid];
d352 -> d353  [key=0, style=solid];
d359 -> d360  [key=0, style=solid];
d372 -> d373  [key=0, style=solid];
d374 -> d375  [key=0, style=solid];
d392 -> d393  [key=0, style=solid];
d67 -> d68  [key=0, style=solid];
d67 -> d71  [key=2, style=dotted];
d69 -> d70  [key=0, style=solid];
d69 -> d72  [key=2, style=dotted];
d76 -> d77  [key=0, style=solid];
d76 -> d78  [color=darkseagreen4, key=1, label=property, style=dashed];
d85 -> d86  [key=0, style=solid];
d85 -> d93  [key=2, style=dotted];
d86 -> d87  [key=0, style=solid];
d86 -> d94  [key=2, style=dotted];
d87 -> d88  [key=0, style=solid];
d87 -> d94  [key=2, style=dotted];
d89 -> d90  [key=0, style=solid];
d108 -> d109  [key=0, style=solid];
d108 -> d93  [key=2, style=dotted];
d109 -> d110  [key=0, style=solid];
d109 -> d94  [key=2, style=dotted];
d110 -> d111  [key=0, style=solid];
d110 -> d93  [key=2, style=dotted];
d112 -> d113  [key=0, style=solid];
d128 -> d129  [key=0, style=solid];
d128 -> d71  [key=2, style=dotted];
d129 -> d130  [key=0, style=solid];
d129 -> d72  [key=2, style=dotted];
d130 -> d131  [key=0, style=solid];
d145 -> d146  [key=0, style=solid];
d145 -> d71  [key=2, style=dotted];
d146 -> d147  [key=0, style=solid];
d146 -> d72  [key=2, style=dotted];
d147 -> d148  [key=0, style=solid];
d161 -> d162  [key=0, style=solid];
d161 -> d93  [key=2, style=dotted];
d162 -> d163  [key=0, style=solid];
d162 -> d94  [key=2, style=dotted];
d163 -> d164  [key=0, style=solid];
d163 -> d93  [key=2, style=dotted];
d165 -> d166  [key=0, style=solid];
d248 -> d249  [key=0, style=solid];
d248 -> d250  [key=2, style=dotted];
d248 -> d93  [key=2, style=dotted];
d248 -> d251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d257 -> d258  [key=0, style=solid];
d257 -> d94  [key=2, style=dotted];
d258 -> d259  [key=0, style=solid];
d258 -> d72  [key=2, style=dotted];
d261 -> d262  [key=0, style=solid];
d262 -> d263  [key=0, style=solid];
d262 -> d94  [key=2, style=dotted];
d267 -> d268  [key=0, style=solid];
d267 -> d94  [key=2, style=dotted];
d268 -> d269  [key=0, style=solid];
d268 -> d72  [key=2, style=dotted];
d272 -> d273  [key=0, style=solid];
d273 -> d274  [key=0, style=solid];
d273 -> d94  [key=2, style=dotted];
d278 -> d77  [color=darkorchid, key=3, label="Local variable bool ensureCustomCreatorCalled", style=bold];
d278 -> d279  [key=0, style=solid];
d279 -> d280  [key=0, style=solid];
d279 -> d288  [color=darkseagreen4, key=1, label="?", style=dashed];
d280 -> d281  [key=0, style=solid];
d280 -> d72  [key=2, style=dotted];
d327 -> d328  [key=0, style=solid];
d327 -> d336  [key=2, style=dotted];
d327 -> d337  [key=2, style=dotted];
d327 -> d329  [color=darkseagreen4, key=1, label=myClass, style=dashed];
d327 -> d332  [color=darkseagreen4, key=1, label=myClass, style=dashed];
d328 -> d329  [key=0, style=solid];
d328 -> d332  [color=darkseagreen4, key=1, label=getter, style=dashed];
d354 -> d355  [key=0, style=solid];
d356 -> d357  [key=0, style=solid];
d362 -> d363  [key=0, style=solid];
d364 -> d365  [key=0, style=solid];
d376 -> d377  [key=0, style=solid];
d376 -> d378  [color=darkseagreen4, key=1, label=property1, style=dashed];
d379 -> d380  [key=0, style=solid];
d379 -> d381  [color=darkseagreen4, key=1, label=property2, style=dashed];
d382 -> d383  [key=0, style=solid];
d382 -> d384  [color=darkseagreen4, key=1, label=property3, style=dashed];
d385 -> d386  [key=0, style=solid];
d385 -> d387  [color=darkseagreen4, key=1, label=property4, style=dashed];
d388 -> d389  [key=0, style=solid];
d388 -> d390  [color=darkseagreen4, key=1, label=property5, style=dashed];
d395 -> d396  [key=0, style=solid];
d395 -> d397  [color=darkseagreen4, key=1, label=property1, style=dashed];
d398 -> d399  [key=0, style=solid];
d398 -> d400  [color=darkseagreen4, key=1, label=property2, style=dashed];
d401 -> d402  [key=0, style=solid];
d401 -> d403  [color=darkseagreen4, key=1, label=property3, style=dashed];
d404 -> d405  [key=0, style=solid];
d404 -> d406  [color=darkseagreen4, key=1, label=property4, style=dashed];
d407 -> d408  [key=0, style=solid];
d407 -> d409  [color=darkseagreen4, key=1, label=property5, style=dashed];
d30 -> d26  [color=blue, key=0, style=bold];
d43 -> d39  [color=blue, key=0, style=bold];
d45 -> d46  [key=0, style=solid];
d45 -> d47  [color=darkseagreen4, key=1, label=p, style=dashed];
d45 -> d49  [color=darkseagreen4, key=1, label=p, style=dashed];
d45 -> d50  [color=darkseagreen4, key=1, label=p, style=dashed];
d45 -> d52  [color=darkseagreen4, key=1, label=p, style=dashed];
d45 -> d53  [color=darkseagreen4, key=1, label=p, style=dashed];
d45 -> d55  [color=darkseagreen4, key=1, label=p, style=dashed];
d45 -> d56  [color=darkseagreen4, key=1, label=p, style=dashed];
d45 -> d58  [color=darkseagreen4, key=1, label=p, style=dashed];
d45 -> d59  [color=darkseagreen4, key=1, label=p, style=dashed];
d45 -> d61  [key=2, style=dotted];
d45 -> d48  [color=darkseagreen4, key=1, label=p, style=dashed];
d45 -> d51  [color=darkseagreen4, key=1, label=p, style=dashed];
d45 -> d54  [color=darkseagreen4, key=1, label=p, style=dashed];
d45 -> d57  [color=darkseagreen4, key=1, label=p, style=dashed];
d48 -> d49  [key=0, style=solid];
d51 -> d52  [key=0, style=solid];
d54 -> d55  [key=0, style=solid];
d57 -> d58  [key=0, style=solid];
d60 -> d44  [color=blue, key=0, style=bold];
d347 -> d77  [color=darkorchid, key=3, label="method methodReturn bool ShouldSerializeProp1", style=bold];
d347 -> d348  [key=0, style=solid];
d79 -> d73  [color=blue, key=0, style=bold];
d92 -> d82  [color=blue, key=0, style=bold];
d117 -> d105  [color=blue, key=0, style=bold];
d137 -> d125  [color=blue, key=0, style=bold];
d153 -> d142  [color=blue, key=0, style=bold];
d170 -> d158  [color=blue, key=0, style=bold];
d179 -> d180  [key=0, style=solid];
d179 -> d186  [key=2, style=dotted];
d179 -> d96  [key=2, style=dotted];
d179 -> d187  [key=2, style=dotted];
d179 -> d188  [key=2, style=dotted];
d179 -> d181  [color=darkseagreen4, key=1, label=json, style=dashed];
d181 -> d184  [color=darkseagreen4, key=1, label=reader, style=dashed];
d181 -> d182  [key=0, style=solid];
d181 -> d189  [key=2, style=dotted];
d181 -> d190  [key=2, style=dotted];
d181 -> d183  [color=darkseagreen4, key=1, label=reader, style=dashed];
d183 -> d184  [key=0, style=solid];
d183 -> d191  [key=2, style=dotted];
d185 -> d178  [color=blue, key=0, style=bold];
d193 -> d194  [key=0, style=solid];
d193 -> d186  [key=2, style=dotted];
d193 -> d96  [key=2, style=dotted];
d193 -> d187  [key=2, style=dotted];
d193 -> d188  [key=2, style=dotted];
d193 -> d195  [color=darkseagreen4, key=1, label=json, style=dashed];
d195 -> d198  [color=darkseagreen4, key=1, label=reader, style=dashed];
d195 -> d196  [key=0, style=solid];
d195 -> d189  [key=2, style=dotted];
d195 -> d190  [key=2, style=dotted];
d195 -> d197  [color=darkseagreen4, key=1, label=reader, style=dashed];
d197 -> d198  [key=0, style=solid];
d197 -> d191  [key=2, style=dotted];
d199 -> d192  [color=blue, key=0, style=bold];
d244 -> d240  [color=blue, key=0, style=bold];
d284 -> d285  [key=0, style=solid];
d284 -> d71  [key=2, style=dotted];
d316 -> d318  [color=darkseagreen4, key=1, label=o, style=dashed];
d316 -> d319  [color=darkseagreen4, key=1, label=o, style=dashed];
d316 -> d317  [key=0, style=solid];
d316 -> d322  [key=2, style=dotted];
d317 -> d318  [key=0, style=solid];
d317 -> d323  [key=2, style=dotted];
d320 -> d309  [color=blue, key=0, style=bold];
d358 -> d350  [color=blue, key=0, style=bold];
d366 -> d359  [color=blue, key=0, style=bold];
d391 -> d372  [color=blue, key=0, style=bold];
d410 -> d392  [color=blue, key=0, style=bold];
d70 -> d64  [color=blue, key=0, style=bold];
d98 -> d99  [key=0, style=solid];
d414 -> d99  [color=darkseagreen4, key=1, label=resolver, style=dashed];
d100 -> d98  [color=blue, key=0, style=bold];
d118 -> d119  [key=0, style=solid];
d415 -> d119  [color=darkseagreen4, key=1, label=resolver, style=dashed];
d120 -> d118  [color=blue, key=0, style=bold];
d171 -> d172  [key=0, style=solid];
d416 -> d172  [color=darkseagreen4, key=1, label=resolver, style=dashed];
d173 -> d171  [color=blue, key=0, style=bold];
d249 -> d245  [color=blue, key=0, style=bold];
d263 -> d254  [color=blue, key=0, style=bold];
d274 -> d264  [color=blue, key=0, style=bold];
d285 -> d275  [color=blue, key=0, style=bold];
d309 -> d310  [key=0, style=solid];
d335 -> d324  [color=blue, key=0, style=bold];
d251 -> d252  [key=0, style=solid];
d288 -> d289  [key=0, style=solid];
d288 -> d290  [key=2, style=dotted];
d329 -> d330  [key=0, style=solid];
d329 -> d338  [key=2, style=dotted];
d329 -> d339  [key=2, style=dotted];
d329 -> d341  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d329 -> d344  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d329 -> d331  [color=darkseagreen4, key=1, label=dictionaryData, style=dashed];
d332 -> d333  [key=0, style=solid];
d332 -> d338  [key=2, style=dotted];
d332 -> d334  [color=darkseagreen4, key=1, label=extensionData, style=dashed];
d363 -> d364  [key=0, style=solid];
d363 -> d367  [key=2, style=dotted];
d396 -> d397  [key=0, style=solid];
d396 -> d367  [key=2, style=dotted];
d397 -> d398  [key=0, style=solid];
d397 -> d367  [key=2, style=dotted];
d399 -> d400  [key=0, style=solid];
d399 -> d367  [key=2, style=dotted];
d400 -> d401  [key=0, style=solid];
d400 -> d367  [key=2, style=dotted];
d44 -> d45  [key=0, style=solid];
d349 -> d347  [color=blue, key=0, style=bold];
d348 -> d349  [key=0, style=solid];
d178 -> d179  [key=0, style=solid];
d182 -> d183  [key=0, style=solid];
d182 -> d191  [key=2, style=dotted];
d192 -> d193  [key=0, style=solid];
d196 -> d197  [key=0, style=solid];
d196 -> d191  [key=2, style=dotted];
d287 -> d284  [color=darkseagreen4, key=1, label=ensureCustomCreatorCalled, style=dashed];
d287 -> d288  [key=0, style=solid];
d287 -> d289  [color=darkseagreen4, key=1, label=ensureCustomCreatorCalled, style=dashed];
d293 -> d96  [key=2, style=dotted];
d293 -> d299  [key=2, style=dotted];
d293 -> d294  [key=0, style=solid];
d293 -> d298  [key=2, style=dotted];
d303 -> d96  [key=2, style=dotted];
d303 -> d299  [key=2, style=dotted];
d303 -> d304  [key=0, style=solid];
d303 -> d0  [key=2, style=dotted];
d303 -> d305  [color=darkseagreen4, key=1, label=startingWithA, style=dashed];
d304 -> d96  [key=2, style=dotted];
d304 -> d299  [key=2, style=dotted];
d304 -> d305  [key=0, style=solid];
d304 -> d0  [key=2, style=dotted];
d304 -> d306  [color=darkseagreen4, key=1, label=startingWithB, style=dashed];
d294 -> d300  [key=2, style=dotted];
d294 -> d295  [key=0, style=solid];
d305 -> d300  [key=2, style=dotted];
d305 -> d306  [key=0, style=solid];
d306 -> d300  [key=2, style=dotted];
d306 -> d307  [key=0, style=solid];
d334 -> d335  [key=0, style=solid];
d334 -> d71  [key=2, style=dotted];
d334 -> d340  [key=2, style=dotted];
d202 -> d71  [key=2, style=dotted];
d202 -> d203  [key=0, style=solid];
d204 -> d71  [key=2, style=dotted];
d204 -> d205  [key=0, style=solid];
d206 -> d71  [key=2, style=dotted];
d206 -> d207  [key=0, style=solid];
d208 -> d71  [key=2, style=dotted];
d208 -> d209  [key=0, style=solid];
d210 -> d71  [key=2, style=dotted];
d210 -> d211  [key=0, style=solid];
d212 -> d71  [key=2, style=dotted];
d212 -> d213  [key=0, style=solid];
d214 -> d71  [key=2, style=dotted];
d214 -> d215  [key=0, style=solid];
d216 -> d71  [key=2, style=dotted];
d216 -> d217  [key=0, style=solid];
d218 -> d71  [key=2, style=dotted];
d218 -> d219  [key=0, style=solid];
d330 -> d71  [key=2, style=dotted];
d330 -> d331  [key=0, style=solid];
d330 -> d340  [key=2, style=dotted];
d331 -> d71  [key=2, style=dotted];
d331 -> d332  [key=0, style=solid];
d331 -> d340  [key=2, style=dotted];
d333 -> d71  [key=2, style=dotted];
d333 -> d334  [key=0, style=solid];
d333 -> d340  [key=2, style=dotted];
d220 -> d93  [key=2, style=dotted];
d220 -> d221  [key=0, style=solid];
d222 -> d93  [key=2, style=dotted];
d222 -> d223  [key=0, style=solid];
d224 -> d93  [key=2, style=dotted];
d224 -> d225  [key=0, style=solid];
d226 -> d93  [key=2, style=dotted];
d226 -> d227  [key=0, style=solid];
d228 -> d93  [key=2, style=dotted];
d228 -> d229  [key=0, style=solid];
d230 -> d93  [key=2, style=dotted];
d230 -> d231  [key=0, style=solid];
d232 -> d93  [key=2, style=dotted];
d232 -> d233  [key=0, style=solid];
d234 -> d93  [key=2, style=dotted];
d234 -> d235  [key=0, style=solid];
d236 -> d93  [key=2, style=dotted];
d236 -> d237  [key=0, style=solid];
d238 -> d93  [key=2, style=dotted];
d238 -> d239  [key=0, style=solid];
d253 -> d251  [color=blue, key=0, style=bold];
d252 -> d253  [key=0, style=solid];
d286 -> d288  [color=darkseagreen4, key=1, label="?", style=dashed];
d286 -> d287  [key=0, style=solid];
d289 -> d286  [color=blue, key=0, style=bold];
d341 -> d342  [key=0, style=solid];
d344 -> d345  [key=0, style=solid];
d201 -> d61  [key=2, style=dotted];
d201 -> d202  [key=0, style=solid];
d203 -> d61  [key=2, style=dotted];
d203 -> d204  [key=0, style=solid];
d205 -> d61  [key=2, style=dotted];
d205 -> d206  [key=0, style=solid];
d207 -> d61  [key=2, style=dotted];
d207 -> d208  [key=0, style=solid];
d209 -> d61  [key=2, style=dotted];
d209 -> d210  [key=0, style=solid];
d211 -> d61  [key=2, style=dotted];
d211 -> d212  [key=0, style=solid];
d213 -> d61  [key=2, style=dotted];
d213 -> d214  [key=0, style=solid];
d215 -> d61  [key=2, style=dotted];
d215 -> d216  [key=0, style=solid];
d217 -> d61  [key=2, style=dotted];
d217 -> d218  [key=0, style=solid];
d219 -> d61  [key=2, style=dotted];
d219 -> d220  [key=0, style=solid];
d221 -> d61  [key=2, style=dotted];
d221 -> d222  [key=0, style=solid];
d223 -> d61  [key=2, style=dotted];
d223 -> d224  [key=0, style=solid];
d225 -> d61  [key=2, style=dotted];
d225 -> d226  [key=0, style=solid];
d227 -> d61  [key=2, style=dotted];
d227 -> d228  [key=0, style=solid];
d229 -> d61  [key=2, style=dotted];
d229 -> d230  [key=0, style=solid];
d231 -> d61  [key=2, style=dotted];
d231 -> d232  [key=0, style=solid];
d233 -> d61  [key=2, style=dotted];
d233 -> d234  [key=0, style=solid];
d235 -> d61  [key=2, style=dotted];
d235 -> d236  [key=0, style=solid];
d237 -> d61  [key=2, style=dotted];
d237 -> d238  [key=0, style=solid];
d292 -> d293  [key=0, style=solid];
d292 -> d296  [key=2, style=dotted];
d292 -> d297  [key=2, style=dotted];
d302 -> d303  [key=0, style=solid];
d302 -> d304  [color=darkseagreen4, key=1, label=book, style=dashed];
d302 -> d308  [key=2, style=dotted];
d0 -> d1  [key=0, style=solid];
d295 -> d291  [color=blue, key=0, style=bold];
d307 -> d301  [color=blue, key=0, style=bold];
d239 -> d200  [color=blue, key=0, style=bold];
d343 -> d341  [color=blue, key=0, style=bold];
d342 -> d343  [key=0, style=solid];
d342 -> d342  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<object, object>", style=dashed];
d346 -> d344  [color=blue, key=0, style=bold];
d345 -> d346  [key=0, style=solid];
d345 -> d345  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<object, object>", style=dashed];
d200 -> d201  [key=0, style=solid];
d291 -> d292  [key=0, style=solid];
d301 -> d302  [key=0, style=solid];
d2 -> d0  [color=blue, key=0, style=bold];
d1 -> d2  [key=0, style=solid];
d411 -> d1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver", style=dashed];
d411 -> d4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver", style=dashed];
d411 -> d5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver", style=dashed];
d411 -> d12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver", style=dashed];
d4 -> d5  [key=0, style=solid];
d4 -> d8  [key=2, style=dotted];
d5 -> d5  [color=darkseagreen4, key=1, label=properties, style=dashed];
d5 -> d6  [key=0, style=solid];
d5 -> d9  [key=2, style=dotted];
d5 -> d10  [key=2, style=dotted];
d5 -> d11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d12 -> d13  [key=0, style=solid];
d12 -> d14  [key=2, style=dotted];
d12 -> d15  [key=2, style=dotted];
d3 -> d4  [key=0, style=solid];
d6 -> d7  [key=0, style=solid];
d11 -> d12  [key=0, style=solid];
d13 -> d11  [color=blue, key=0, style=bold];
d7 -> d3  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_12  [key=2, style=dotted];
m0_2 -> m0_4  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m0_2 -> m0_6  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_13  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_13  [key=2, style=dotted];
m0_6 -> m0_9  [color=darkseagreen4, key=1, label=employeeSchema, style=dashed];
m0_5 -> m0_6  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_15  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> d322  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_16  [key=2, style=dotted];
m0_11 -> m0_0  [color=blue, key=0, style=bold];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_45  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_43 -> m1_46  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_43 -> m1_47  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_43 -> m1_48  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_43 -> m1_49  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_43 -> m1_50  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_43 -> m1_51  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_43 -> m1_52  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_43 -> m1_53  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_43 -> m1_54  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_43 -> m1_55  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_43 -> m1_56  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_43 -> m1_57  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_43 -> m1_58  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_43 -> m1_59  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_43 -> m1_60  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_43 -> m1_61  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_63  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_64  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_63  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_63  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_63  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_63  [key=2, style=dotted];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_65  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_66  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_67  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_68  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_69  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_70  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_71  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_72  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_73  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_74  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_75  [key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_76  [key=2, style=dotted];
m1_62 -> m1_43  [color=blue, key=0, style=bold];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_10  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_8 -> m1_11  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_8 -> m1_12  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_8 -> m1_13  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_8 -> m1_14  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_8 -> m1_15  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_8 -> m1_16  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_8 -> m1_17  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_8 -> m1_18  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_8 -> m1_19  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_8 -> m1_20  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_8 -> m1_21  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_8 -> m1_22  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_8 -> m1_23  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_8 -> m1_24  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_8 -> m1_25  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_8 -> m1_26  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_28  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_29  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_30  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_30  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_30  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_30  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_31  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_32  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_33  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_34  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_35  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_36  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_37  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_38  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_39  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_40  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_41  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_42  [key=2, style=dotted];
m1_27 -> m1_8  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m1_0 -> m1_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.Organization.Person", style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [key=2, style=dotted];
m1_6 -> m1_0  [color=blue, key=0, style=bold];
m1_77 -> m1_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m1_77 -> m1_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", style=dashed];
m6_10 -> m6_4  [color=blue, key=0, style=bold];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> d323  [key=2, style=dotted];
m6_11 -> m6_14  [key=0, style=solid];
m6_14 -> m6_11  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [color=green, key=0, style=solid];
m6_1 -> m6_1  [color=green, key=3, label="Field variable int _denominator", style=bold];
m6_1 -> m6_2  [color=green, key=0, style=solid];
m6_1 -> m6_9  [color=green, key=2, style=dotted];
m6_1 -> m6_4  [color=green, key=1, label=o, style=dashed];
m6_1 -> m6_6  [color=green, key=1, label=o, style=dashed];
m6_1 -> m6_3  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_10  [key=2, style=dotted];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_10  [key=2, style=dotted];
m6_4 -> m6_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_10  [key=2, style=dotted];
m6_6 -> m6_8  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_12  [key=2, style=dotted];
m6_5 -> m6_11  [key=2, style=dotted];
m6_5 -> m6_8  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_5 -> m6_9  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> d323  [key=2, style=dotted];
m6_7 -> m6_10  [key=0, style=solid];
m6_7 -> m6_12  [key=2, style=dotted];
m6_8 -> m6_0  [color=blue, key=0, style=bold];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_13  [key=2, style=dotted];
m6_9 -> m6_10  [key=0, style=solid];
m6_15 -> m6_16  [key=0, style=solid];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_18  [key=2, style=dotted];
m6_17 -> m6_15  [color=blue, key=0, style=bold];
m6_19 -> m6_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.CustomCreationConverter<T>", style=dashed];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_5  [key=2, style=dotted];
m7_3 -> d323  [key=2, style=dotted];
m7_4 -> m7_2  [color=blue, key=0, style=bold];
m7_5 -> m7_7  [key=0, style=solid];
m7_5 -> m7_2  [color=green, key=3, label="Parameter variable string json", style=bold];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_9  [key=2, style=dotted];
m7_8 -> m7_5  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m7_10 -> m7_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestFixtureBase", style=dashed];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_31  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_29 -> m8_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_29 -> m8_34  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_29 -> m8_35  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_29 -> m8_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_29 -> m8_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_29 -> m8_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_29 -> m8_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_29 -> m8_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_29 -> m8_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_29 -> m8_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_29 -> m8_14  [color=darkorchid, key=3, label="method methodReturn object ReadJson", style=bold];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_34  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_33  [key=0, style=solid];
m8_31 -> m8_47  [key=2, style=dotted];
m8_32 -> m8_46  [key=0, style=solid];
m8_32 -> m8_23  [key=2, style=dotted];
m8_32 -> m8_48  [key=2, style=dotted];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_47  [key=2, style=dotted];
m8_34 -> m8_38  [color=darkseagreen4, key=1, label=isNullable, style=dashed];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_49  [key=2, style=dotted];
m8_35 -> m8_38  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_35 -> m8_42  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_39  [key=0, style=solid];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_50  [key=2, style=dotted];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_43  [key=0, style=solid];
m8_39 -> m8_45  [key=0, style=solid];
m8_41 -> m8_45  [key=0, style=solid];
m8_41 -> m8_23  [key=2, style=dotted];
m8_41 -> m8_48  [key=2, style=dotted];
m8_42 -> m8_46  [key=0, style=solid];
m8_42 -> m8_52  [key=2, style=dotted];
m8_44 -> m8_46  [key=0, style=solid];
m8_44 -> m8_53  [key=2, style=dotted];
m8_44 -> m8_54  [key=2, style=dotted];
m8_44 -> m8_55  [key=2, style=dotted];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_23  [key=2, style=dotted];
m8_45 -> m8_48  [key=2, style=dotted];
m8_33 -> m8_46  [key=0, style=solid];
m8_38 -> m8_46  [key=0, style=solid];
m8_38 -> m8_51  [key=2, style=dotted];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_42  [key=0, style=solid];
m8_43 -> m8_44  [key=0, style=solid];
m8_46 -> m8_29  [color=blue, key=0, style=bold];
m8_3 -> m8_4  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_3  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_0  [color=blue, key=0, style=bold];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_6 -> m8_10  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_6 -> m8_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_6 -> m8_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_6 -> m8_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_10  [key=0, style=solid];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_20  [key=2, style=dotted];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_16  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_14 -> m8_19  [key=0, style=solid];
m8_14 -> m8_23  [key=2, style=dotted];
m8_14 -> m8_24  [key=2, style=dotted];
m8_15 -> m8_19  [key=0, style=solid];
m8_15 -> m8_25  [key=2, style=dotted];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_28  [key=2, style=dotted];
m8_9 -> m8_19  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_21  [key=2, style=dotted];
m8_11 -> m8_14  [color=darkseagreen4, key=1, label=enumName, style=dashed];
m8_11 -> m8_17  [color=darkseagreen4, key=1, label=enumName, style=dashed];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> d81  [key=2, style=dotted];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_16  [key=0, style=solid];
m8_12 -> m8_22  [key=2, style=dotted];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_27  [key=2, style=dotted];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_15  [key=0, style=solid];
m8_19 -> m8_6  [color=blue, key=0, style=bold];
m8_56 -> m8_57  [key=0, style=solid];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_47  [key=2, style=dotted];
m8_57 -> m8_49  [key=2, style=dotted];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_60  [key=2, style=dotted];
m8_59 -> m8_56  [color=blue, key=0, style=bold];
m8_61 -> m8_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.StringEnumConverter", style=dashed];
m8_61 -> m8_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.StringEnumConverter", style=dashed];
m8_61 -> m8_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.StringEnumConverter", style=dashed];
m8_61 -> m8_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.StringEnumConverter", style=dashed];
m8_61 -> m8_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.StringEnumConverter", style=dashed];
m8_61 -> m8_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.StringEnumConverter", style=dashed];
}
