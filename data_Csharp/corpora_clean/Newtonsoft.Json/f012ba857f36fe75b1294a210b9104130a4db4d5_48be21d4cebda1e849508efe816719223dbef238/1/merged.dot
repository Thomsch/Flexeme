digraph  {
d35 [label="DefaultContractResolver contractResolver = new DefaultContractResolver()", span="130-130", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableWithoutAttributeContract()", color=green, community=0];
d34 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableWithoutAttributeContract()", span="128-128", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableWithoutAttributeContract()"];
d36 [label="JsonContract contract = contractResolver.ResolveContract(typeof(ISerializableWithoutAttributeTestObject))", span="131-131", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableWithoutAttributeContract()", color=green, community=0];
d31 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="167-167", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()"];
d37 [label="Assert.AreEqual(JsonContractType.Object, contract.ContractType)", span="133-133", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableWithoutAttributeContract()", color=green, community=0];
d32 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="185-185", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)"];
d38 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableWithoutAttributeContract()", span="128-128", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableWithoutAttributeContract()"];
d33 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual"];
d27 [label="DefaultContractResolver contractResolver = new DefaultContractResolver()", span="121-121", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableContract()"];
d40 [label="DefaultContractResolver contractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="139-142", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveObjectContractWithFieldsSerialization()"];
d65 [label="var resolver = new DefaultContractResolver()", span="181-181", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()"];
d74 [label="var resolver = new DefaultContractResolver()", span="192-192", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()"];
d83 [label="var resolver = new DefaultContractResolver()", span="203-203", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()"];
d106 [label="var resolver = new DefaultContractResolver()", span="228-228", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()"];
d126 [label="var resolver = new DefaultContractResolver()", span="259-259", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()"];
d143 [label="var resolver = new DefaultContractResolver()", span="286-286", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()"];
d159 [label="var resolver = new DefaultContractResolver()", span="308-308", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()"];
d241 [label="var resolver = new DefaultContractResolver()", span="449-449", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()"];
d246 [label="var resolver = new DefaultContractResolver()", span="459-459", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()"];
d255 [label="var resolver = new DefaultContractResolver()", span="468-468", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()"];
d265 [label="var resolver = new DefaultContractResolver()", span="483-483", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()"];
d276 [label="var resolver = new DefaultContractResolver()", span="499-499", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()"];
d311 [label="DefaultContractResolver skipCompilerGeneratedResolver = new DefaultContractResolver\r\n            {\r\n                DefaultMembersSearchFlags = BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public\r\n            }", span="597-600", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()"];
d314 [label="DefaultContractResolver includeCompilerGeneratedResolver = new DefaultContractResolver\r\n            {\r\n                DefaultMembersSearchFlags = BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public,\r\n                SerializeCompilerGeneratedMembers = true\r\n            }", span="612-616", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()"];
d325 [label="DefaultContractResolver resolver = new DefaultContractResolver()", span="640-640", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()"];
d351 [label="DefaultContractResolver resolver = new DefaultContractResolver()", span="676-676", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()"];
d360 [label="DefaultContractResolver resolver = new DefaultContractResolver()", span="691-691", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()"];
d373 [label="DefaultContractResolver resolver = new DefaultContractResolver()", span="730-730", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()"];
d393 [label="DefaultContractResolver resolver = new DefaultContractResolver()", span="759-759", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()"];
d28 [label="JsonContract contract = contractResolver.ResolveContract(typeof(ISerializableTestObject))", span="122-122", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableContract()"];
d41 [label="JsonObjectContract contract = (JsonObjectContract)contractResolver.ResolveContract(typeof(AnswerFilterModel))", span="143-143", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveObjectContractWithFieldsSerialization()"];
d66 [label="var contract = (JsonArrayContract)resolver.ResolveContract(typeof(IList<int>))", span="182-182", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()"];
d75 [label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(Invoice))", span="193-193", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()"];
d84 [label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(AbstractTestClass))", span="204-204", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()"];
d107 [label="var contract = (JsonArrayContract)resolver.ResolveContract(typeof(AbstractListTestClass<int>))", span="229-229", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()"];
d127 [label="var contract = (JsonArrayContract)resolver.ResolveContract(typeof(IList<int>))", span="260-260", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()"];
d144 [label="var contract = (JsonDictionaryContract)resolver.ResolveContract(typeof(IDictionary<string, int>))", span="287-287", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()"];
d160 [label="var contract = (JsonDictionaryContract)resolver.ResolveContract(typeof(AbstractDictionaryTestClass<string, int>))", span="309-309", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()"];
d242 [label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(AddressWithDataMember))", span="450-450", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()"];
d247 [label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(NumberFormatInfo))", span="460-460", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()"];
d256 [label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(PublicParameterizedConstructorWithPropertyNameConflictWithAttribute))", span="469-469", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()"];
d266 [label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(MultipleParametrizedConstructorsJsonConstructor))", span="484-484", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()"];
d277 [label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(MultipleParametrizedConstructorsJsonConstructor))", span="500-500", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()"];
d326 [label="JsonObjectContract contract = (JsonObjectContract)resolver.ResolveContract(typeof(ClassWithExtensionData))", span="641-641", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()"];
d353 [label="JsonObjectContract contract = (JsonObjectContract)resolver.ResolveContract(typeof(ClassWithShouldSerialize))", span="679-679", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()"];
d361 [label="JsonObjectContract contract = (JsonObjectContract)resolver.ResolveContract(typeof(ClassWithShouldSerialize))", span="693-693", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()"];
d375 [label="JsonObjectContract contract = (JsonObjectContract)resolver.ResolveContract(typeof(ClassWithIsSpecified))", span="733-733", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()"];
d394 [label="JsonObjectContract contract = (JsonObjectContract)resolver.ResolveContract(typeof(ClassWithIsSpecified))", span="761-761", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()"];
d29 [label="Assert.AreEqual(JsonContractType.Serializable, contract.ContractType)", span="124-124", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableContract()"];
d42 [label="Assert.AreEqual(MemberSerialization.Fields, contract.MemberSerialization)", span="145-145", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveObjectContractWithFieldsSerialization()"];
d46 [label="Assert.AreEqual(null, p.GetResolvedDefaultValue())", span="154-154", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()"];
d47 [label="Assert.AreEqual(null, p.DefaultValue)", span="155-155", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()"];
d49 [label="Assert.AreEqual(0, p.GetResolvedDefaultValue())", span="159-159", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()"];
d50 [label="Assert.AreEqual(null, p.DefaultValue)", span="160-160", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()"];
d52 [label="Assert.AreEqual(new DateTime(), p.GetResolvedDefaultValue())", span="164-164", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()"];
d53 [label="Assert.AreEqual(null, p.DefaultValue)", span="165-165", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()"];
d55 [label="Assert.AreEqual(null, p.GetResolvedDefaultValue())", span="169-169", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()"];
d56 [label="Assert.AreEqual(null, p.DefaultValue)", span="170-170", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()"];
d58 [label="Assert.AreEqual(CompareOptions.None, (CompareOptions)p.GetResolvedDefaultValue())", span="174-174", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()"];
d59 [label="Assert.AreEqual(null, p.DefaultValue)", span="175-175", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()"];
d68 [label="Assert.AreEqual(typeof(List<int>), contract.CreatedType)", span="185-185", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()"];
d77 [label="Assert.AreEqual(1, property.AttributeProvider.GetAttributes(false).Count)", span="196-196", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()"];
d78 [label="Assert.AreEqual(typeof(DefaultValueAttribute), property.AttributeProvider.GetAttributes(false)[0].GetType())", span="197-197", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()"];
d91 [label="Assert.AreEqual(''Value!'', o.Value)", span="222-222", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()"];
d114 [label="Assert.AreEqual(2, l.Count)", span="247-247", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()"];
d115 [label="Assert.AreEqual(1, l[0])", span="248-248", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()"];
d116 [label="Assert.AreEqual(2, l[1])", span="249-249", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()"];
d132 [label="Assert.AreEqual(typeof(CustomList<int>), l.GetType())", span="272-272", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()"];
d133 [label="Assert.AreEqual(3, l.Count)", span="273-273", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()"];
d134 [label="Assert.AreEqual(1, l[0])", span="274-274", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()"];
d135 [label="Assert.AreEqual(2, l[1])", span="275-275", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()"];
d136 [label="Assert.AreEqual(3, l[2])", span="276-276", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()"];
d149 [label="Assert.AreEqual(typeof(CustomDictionary<string, int>), d.GetType())", span="299-299", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()"];
d150 [label="Assert.AreEqual(2, d.Count)", span="300-300", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()"];
d151 [label="Assert.AreEqual(1, d[''key1''])", span="301-301", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()"];
d152 [label="Assert.AreEqual(2, d[''key2''])", span="302-302", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()"];
d167 [label="Assert.AreEqual(2, d.Count)", span="327-327", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()"];
d168 [label="Assert.AreEqual(1, d[''key1''])", span="328-328", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()"];
d169 [label="Assert.AreEqual(2, d[''key2''])", span="329-329", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()"];
d180 [label="Assert.AreEqual(@''{''''AddressLine1-'-\''''-'''':''''value!''''}'', json)", span="348-348", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()"];
d184 [label="Assert.AreEqual(@''AddressLine1-'-''''-'', reader.Value)", span="354-354", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()"];
d194 [label="Assert.AreEqual(@''{''''\u003cb\u003eAddressLine1\u003c/b\u003e'''':''''value!''''}'', json)", span="375-375", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()"];
d198 [label="Assert.AreEqual(@''<b>AddressLine1</b>'', reader.Value)", span="381-381", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()"];
d243 [label="Assert.AreEqual(''AddressLine1'', contract.Properties[0].PropertyName)", span="452-452", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()"];
d259 [label="Assert.AreEqual(1, contract.CreatorParameters.Count)", span="473-473", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()"];
d260 [label="Assert.AreEqual(''name'', contract.CreatorParameters[0].PropertyName)", span="474-474", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()"];
d269 [label="Assert.AreEqual(2, contract.CreatorParameters.Count)", span="488-488", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()"];
d270 [label="Assert.AreEqual(''Value'', contract.CreatorParameters[0].PropertyName)", span="489-489", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()"];
d271 [label="Assert.AreEqual(''Age'', contract.CreatorParameters[1].PropertyName)", span="490-490", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()"];
d282 [label="Assert.AreEqual(''value!'', o.Value)", span="516-516", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()"];
d283 [label="Assert.AreEqual(1, o.Age)", span="517-517", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()"];
d318 [label="Assert.AreEqual(''Property'', (string)o[''<StringProperty>k__BackingField''])", span="625-625", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()"];
d319 [label="Assert.AreEqual(2, (int)o[''<IntProperty>k__BackingField''])", span="626-626", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()"];
d355 [label="Assert.AreEqual(null, property1.ShouldSerialize)", span="682-682", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()"];
d357 [label="Assert.AreEqual(null, property2.ShouldSerialize)", span="685-685", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()"];
d365 [label="Assert.AreEqual(null, property2.ShouldSerialize)", span="699-699", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()"];
d377 [label="Assert.AreEqual(null, property1.GetIsSpecified)", span="736-736", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()"];
d378 [label="Assert.AreEqual(null, property1.SetIsSpecified)", span="737-737", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()"];
d380 [label="Assert.AreEqual(null, property2.GetIsSpecified)", span="740-740", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()"];
d381 [label="Assert.AreEqual(null, property2.SetIsSpecified)", span="741-741", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()"];
d383 [label="Assert.AreEqual(null, property3.GetIsSpecified)", span="744-744", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()"];
d384 [label="Assert.AreEqual(null, property3.SetIsSpecified)", span="745-745", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()"];
d386 [label="Assert.AreEqual(null, property4.GetIsSpecified)", span="748-748", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()"];
d387 [label="Assert.AreEqual(null, property4.SetIsSpecified)", span="749-749", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()"];
d389 [label="Assert.AreEqual(null, property5.GetIsSpecified)", span="752-752", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()"];
d390 [label="Assert.AreEqual(null, property5.SetIsSpecified)", span="753-753", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()"];
d402 [label="Assert.AreEqual(null, property3.GetIsSpecified)", span="772-772", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()"];
d403 [label="Assert.AreEqual(null, property3.SetIsSpecified)", span="773-773", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()"];
d405 [label="Assert.AreEqual(null, property4.GetIsSpecified)", span="776-776", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()"];
d406 [label="Assert.AreEqual(null, property4.SetIsSpecified)", span="777-777", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()"];
d408 [label="Assert.AreEqual(null, property5.GetIsSpecified)", span="780-780", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()"];
d409 [label="Assert.AreEqual(null, property5.SetIsSpecified)", span="781-781", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()"];
d26 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableContract()", span="119-119", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableContract()"];
d39 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveObjectContractWithFieldsSerialization()", span="137-137", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveObjectContractWithFieldsSerialization()"];
d64 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", span="179-179", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()"];
d73 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()", span="190-190", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()"];
d82 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", span="201-201", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()"];
d88 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<AbstractTestClass>(@''{Value:'Value!'}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            }), ''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.AbstractTestClass. Type is an interface or abstract class and cannot be instantiated. Path 'Value', line 1, position 7.'')", span="210-213", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()"];
d99 [label="JsonConvert.DeserializeObject<AbstractTestClass>(@''{Value:'Value!'}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="210-213", cluster="lambda expression"];
d90 [label="var o = JsonConvert.DeserializeObject<AbstractTestClass>(@''{Value:'Value!'}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="217-220", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()"];
d105 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", span="226-226", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()"];
d111 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<AbstractListTestClass<int>>(@''[1,2]'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            }), ''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.AbstractListTestClass`1[System.Int32]. Type is an interface or abstract class and cannot be instantiated. Path '', line 1, position 1.'')", span="235-238", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()"];
d119 [label="JsonConvert.DeserializeObject<AbstractListTestClass<int>>(@''[1,2]'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="235-238", cluster="lambda expression"];
d113 [label="var l = JsonConvert.DeserializeObject<AbstractListTestClass<int>>(@''[1,2]'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="242-245", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()"];
d125 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", span="257-257", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()"];
d131 [label="var l = JsonConvert.DeserializeObject<IList<int>>(@''[1,2,3]'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="267-270", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()"];
d142 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", span="284-284", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()"];
d148 [label="var d = JsonConvert.DeserializeObject<IDictionary<string, int>>(@''{key1:1,key2:2}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="294-297", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()"];
d158 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", span="306-306", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()"];
d164 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<AbstractDictionaryTestClass<string, int>>(@''{key1:1,key2:2}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            }), ''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.AbstractDictionaryTestClass`2[System.String,System.Int32]. Type is an interface or abstract class and cannot be instantiated. Path 'key1', line 1, position 6.'')", span="315-318", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()"];
d172 [label="JsonConvert.DeserializeObject<AbstractDictionaryTestClass<string, int>>(@''{key1:1,key2:2}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="315-318", cluster="lambda expression"];
d166 [label="var d = JsonConvert.DeserializeObject<AbstractDictionaryTestClass<string, int>>(@''{key1:1,key2:2}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="322-325", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()"];
d240 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", span="447-447", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()"];
d245 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", span="457-457", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()"];
d254 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", span="466-466", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()"];
d264 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", span="481-481", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()"];
d275 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", span="497-497", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()"];
d281 [label="var o = JsonConvert.DeserializeObject<MultipleParametrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="511-514", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()"];
d310 [label="StructTest structTest = new StructTest\r\n            {\r\n                IntField = 1,\r\n                IntProperty = 2,\r\n                StringField = ''Field'',\r\n                StringProperty = ''Property''\r\n            }", span="589-595", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()"];
d312 [label="string skipCompilerGeneratedJson = JsonConvert.SerializeObject(structTest, Formatting.Indented,\r\n                new JsonSerializerSettings { ContractResolver = skipCompilerGeneratedResolver })", span="602-603", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()"];
d313 [label="StringAssert.AreEqual(@''{\r\n  ''''StringField'''': ''''Field'''',\r\n  ''''IntField'''': 1,\r\n  ''''StringProperty'''': ''''Property'''',\r\n  ''''IntProperty'''': 2\r\n}'', skipCompilerGeneratedJson)", span="605-610", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()"];
d315 [label="string includeCompilerGeneratedJson = JsonConvert.SerializeObject(structTest, Formatting.Indented,\r\n                new JsonSerializerSettings { ContractResolver = includeCompilerGeneratedResolver })", span="618-619", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()"];
d324 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", span="638-638", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()"];
d350 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", span="674-674", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()"];
d352 [label="resolver.IgnoreShouldSerializeMembers = true", span="677-677", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()"];
d359 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", span="689-689", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()"];
d372 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", span="728-728", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()"];
d374 [label="resolver.IgnoreIsSpecifiedMembers = true", span="731-731", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()"];
d392 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", span="757-757", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()"];
d67 [label="Assert.IsTrue(contract.IsInstantiable)", span="184-184", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()"];
d69 [label="Assert.IsNotNull(contract.DefaultCreator)", span="186-186", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()"];
d76 [label="JsonProperty property = contract.Properties[''FollowUpDays'']", span="195-195", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()"];
d85 [label="Assert.IsFalse(contract.IsInstantiable)", span="206-206", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()"];
d86 [label="Assert.IsNull(contract.DefaultCreator)", span="207-207", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()"];
d87 [label="Assert.IsNull(contract.OverrideCreator)", span="208-208", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()"];
d89 [label="contract.DefaultCreator = () => new AbstractImplementationTestClass()", span="215-215", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()"];
d108 [label="Assert.IsFalse(contract.IsInstantiable)", span="231-231", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()"];
d109 [label="Assert.IsNull(contract.DefaultCreator)", span="232-232", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()"];
d110 [label="Assert.IsFalse(contract.HasParameterizedCreatorInternal)", span="233-233", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()"];
d112 [label="contract.DefaultCreator = () => new AbstractImplementationListTestClass<int>()", span="240-240", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()"];
d128 [label="Assert.IsTrue(contract.IsInstantiable)", span="262-262", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()"];
d129 [label="Assert.IsNotNull(contract.DefaultCreator)", span="263-263", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()"];
d130 [label="contract.DefaultCreator = () => new CustomList<int>()", span="265-265", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()"];
d145 [label="Assert.IsTrue(contract.IsInstantiable)", span="289-289", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()"];
d146 [label="Assert.IsNotNull(contract.DefaultCreator)", span="290-290", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()"];
d147 [label="contract.DefaultCreator = () => new CustomDictionary<string, int>()", span="292-292", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()"];
d161 [label="Assert.IsFalse(contract.IsInstantiable)", span="311-311", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()"];
d162 [label="Assert.IsNull(contract.DefaultCreator)", span="312-312", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()"];
d163 [label="Assert.IsFalse(contract.HasParameterizedCreatorInternal)", span="313-313", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()"];
d165 [label="contract.DefaultCreator = () => new AbstractImplementationDictionaryTestClass<string, int>()", span="320-320", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()"];
d248 [label="Assert.IsFalse(contract.Properties.Any(c => c.PropertyName == ''InvariantInfo''))", span="462-462", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()"];
d257 [label="Assert.IsNull(contract.DefaultCreator)", span="471-471", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()"];
d258 [label="Assert.IsNotNull(contract.ParameterizedCreator)", span="472-472", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()"];
d261 [label="contract.ParameterizedCreator = null", span="476-476", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()"];
d262 [label="Assert.IsNull(contract.ParameterizedCreator)", span="477-477", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()"];
d267 [label="Assert.IsNull(contract.DefaultCreator)", span="486-486", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()"];
d268 [label="Assert.IsNotNull(contract.OverrideCreator)", span="487-487", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()"];
d272 [label="contract.OverrideCreator = null", span="492-492", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()"];
d273 [label="Assert.IsNull(contract.OverrideCreator)", span="493-493", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()"];
d278 [label="bool ensureCustomCreatorCalled = false", span="502-502", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()"];
d279 [label="contract.OverrideCreator = args =>\r\n            {\r\n                ensureCustomCreatorCalled = true;\r\n                return new MultipleParametrizedConstructorsJsonConstructor((string)args[0], (int)args[1]);\r\n            }", span="504-508", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()"];
d280 [label="Assert.IsNotNull(contract.OverrideCreator)", span="509-509", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()"];
d327 [label="ClassWithExtensionData myClass = new ClassWithExtensionData\r\n            {\r\n                Data = new Dictionary<string, object>\r\n                {\r\n                    { ''SomeField'', ''Field'' },\r\n                }\r\n            }", span="643-649", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()"];
d328 [label="ExtensionDataGetter getter = contract.ExtensionDataGetter", span="651-651", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()"];
d354 [label="var property1 = contract.Properties[''Prop1'']", span="681-681", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()"];
d356 [label="var property2 = contract.Properties[''Prop2'']", span="684-684", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()"];
d362 [label="var property1 = contract.Properties[''Prop1'']", span="695-695", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()"];
d364 [label="var property2 = contract.Properties[''Prop2'']", span="698-698", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()"];
d376 [label="var property1 = contract.Properties[''Prop1'']", span="735-735", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()"];
d379 [label="var property2 = contract.Properties[''Prop2'']", span="739-739", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()"];
d382 [label="var property3 = contract.Properties[''Prop3'']", span="743-743", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()"];
d385 [label="var property4 = contract.Properties[''Prop4'']", span="747-747", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()"];
d388 [label="var property5 = contract.Properties[''Prop5'']", span="751-751", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()"];
d395 [label="var property1 = contract.Properties[''Prop1'']", span="763-763", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()"];
d398 [label="var property2 = contract.Properties[''Prop2'']", span="767-767", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()"];
d401 [label="var property3 = contract.Properties[''Prop3'']", span="771-771", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()"];
d404 [label="var property4 = contract.Properties[''Prop4'']", span="775-775", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()"];
d407 [label="var property5 = contract.Properties[''Prop5'']", span="779-779", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()"];
d30 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableContract()", span="119-119", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveSerializableContract()"];
d43 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveObjectContractWithFieldsSerialization()", span="137-137", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveObjectContractWithFieldsSerialization()"];
d45 [label="JsonProperty p = new JsonProperty()", span="152-152", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()"];
d62 [label="Entry Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="177-177", cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()"];
d48 [label="p.PropertyType = typeof(int)", span="157-157", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()"];
d51 [label="p.PropertyType = typeof(DateTime)", span="162-162", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()"];
d63 [label="Entry System.DateTime.DateTime()", span="0-0", cluster="System.DateTime.DateTime()"];
d54 [label="p.PropertyType = null", span="167-167", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()"];
d57 [label="p.PropertyType = typeof(CompareOptions)", span="172-172", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()"];
d60 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", span="150-150", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()"];
d347 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ClassWithShouldSerialize.ShouldSerializeProp1()", span="667-667", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ClassWithShouldSerialize.ShouldSerializeProp1()"];
d80 [label="Entry Newtonsoft.Json.Serialization.IAttributeProvider.GetAttributes(bool)", span="40-40", cluster="Newtonsoft.Json.Serialization.IAttributeProvider.GetAttributes(bool)"];
d79 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()", span="190-190", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()"];
d81 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
d92 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", span="201-201", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()"];
d117 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", span="226-226", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()"];
d137 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", span="257-257", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()"];
d153 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", span="284-284", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()"];
d170 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", span="306-306", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()"];
d179 [label="string json = JsonConvert.SerializeObject(\r\n                new AddressWithDataMember\r\n                {\r\n                    AddressLine1 = ''value!''\r\n                },\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new EscapedPropertiesContractResolver\r\n                    {\r\n                        PropertySuffix = @''-'-''''-''\r\n                    }\r\n                })", span="335-346", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()"];
d181 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="350-350", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()"];
d183 [label="reader.Read()", span="352-352", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()"];
d185 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", span="333-333", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()"];
d193 [label="string json = JsonConvert.SerializeObject(\r\n                new AddressWithDataMember\r\n                {\r\n                    AddressLine1 = ''value!''\r\n                },\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new EscapedPropertiesContractResolver\r\n                    {\r\n                        PropertyPrefix = ''<b>'',\r\n                        PropertySuffix = ''</b>''\r\n                    },\r\n                    StringEscapeHandling = StringEscapeHandling.EscapeHtml\r\n                })", span="360-373", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()"];
d195 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="377-377", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()"];
d197 [label="reader.Read()", span="379-379", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()"];
d199 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", span="358-358", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()"];
d244 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", span="447-447", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()"];
d284 [label="Assert.IsTrue(ensureCustomCreatorCalled)", span="518-518", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()"];
d316 [label="JObject o = JObject.Parse(includeCompilerGeneratedJson)", span="621-621", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()"];
d317 [label="Console.WriteLine(includeCompilerGeneratedJson)", span="623-623", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()"];
d320 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", span="587-587", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()"];
d358 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", span="674-674", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()"];
d366 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", span="689-689", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()"];
d391 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", span="728-728", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()"];
d410 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", span="757-757", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()"];
d70 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", span="179-179", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()"];
d95 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="370-370", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])"];
d98 [label="Entry lambda expression", span="210-213", cluster="lambda expression"];
d414 [label=resolver, span=""];
d100 [label="Exit lambda expression", span="210-213", cluster="lambda expression"];
d96 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="447-447", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()"];
d97 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="766-766", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)"];
d118 [label="Entry lambda expression", span="235-238", cluster="lambda expression"];
d415 [label=resolver, span=""];
d120 [label="Exit lambda expression", span="235-238", cluster="lambda expression"];
d171 [label="Entry lambda expression", span="315-318", cluster="lambda expression"];
d416 [label=resolver, span=""];
d173 [label="Exit lambda expression", span="315-318", cluster="lambda expression"];
d249 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", span="457-457", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()"];
d263 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", span="466-466", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()"];
d274 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", span="481-481", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()"];
d285 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", span="497-497", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()"];
d309 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", span="587-587", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()"];
d321 [label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()"];
d299 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="618-618", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)"];
d300 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="341-341", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)"];
d335 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", span="638-638", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()"];
d71 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue"];
d72 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull"];
d93 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse"];
d94 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull"];
d250 [label="Entry Unk.Any", span="", cluster="Unk.Any"];
d251 [label="Entry lambda expression", span="462-462", cluster="lambda expression"];
d288 [label="return new MultipleParametrizedConstructorsJsonConstructor((string)args[0], (int)args[1]);", span="507-507", cluster="lambda expression"];
d336 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ClassWithExtensionData.ClassWithExtensionData()", span="631-631", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ClassWithExtensionData.ClassWithExtensionData()"];
d337 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
d329 [label="IEnumerable<KeyValuePair<object, object>> dictionaryData = getter(myClass).ToDictionary(kv => kv.Key, kv => kv.Value)", span="653-653", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()"];
d332 [label="IEnumerable<KeyValuePair<object, object>> extensionData = getter(myClass)", span="657-657", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()"];
d363 [label="Assert.AreNotEqual(null, property1.ShouldSerialize)", span="696-696", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()"];
d396 [label="Assert.AreNotEqual(null, property1.GetIsSpecified)", span="764-764", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()"];
d397 [label="Assert.AreNotEqual(null, property1.SetIsSpecified)", span="765-765", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()"];
d399 [label="Assert.AreNotEqual(null, property2.GetIsSpecified)", span="768-768", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()"];
d400 [label="Assert.AreNotEqual(null, property2.SetIsSpecified)", span="769-769", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()"];
d44 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", span="150-150", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()"];
d61 [label="Entry Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", span="38-38", cluster="Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()"];
d349 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ClassWithShouldSerialize.ShouldSerializeProp1()", span="667-667", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ClassWithShouldSerialize.ShouldSerializeProp1()"];
d348 [label="return false;", span="669-669", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ClassWithShouldSerialize.ShouldSerializeProp1()"];
d178 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", span="333-333", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()"];
d186 [label="Entry Newtonsoft.Json.Tests.Serialization.AddressWithDataMember.AddressWithDataMember()", span="106-106", cluster="Newtonsoft.Json.Tests.Serialization.AddressWithDataMember.AddressWithDataMember()"];
d187 [label="Entry Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver.EscapedPropertiesContractResolver()", span="73-73", cluster="Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver.EscapedPropertiesContractResolver()"];
d188 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="582-582", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)"];
d182 [label="reader.Read()", span="351-351", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()"];
d189 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="82-82", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)"];
d190 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)"];
d191 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="400-400", cluster="Newtonsoft.Json.JsonTextReader.Read()"];
d192 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", span="358-358", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()"];
d196 [label="reader.Read()", span="378-378", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()"];
d287 [label="ensureCustomCreatorCalled = true", span="506-506", cluster="lambda expression"];
d322 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="392-392", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)"];
d323 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)"];
d293 [label="string iPersonJson = JsonConvert.SerializeObject(employee, Formatting.Indented,\r\n                new JsonSerializerSettings { ContractResolver = new IPersonContractResolver() })", span="533-534", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()"];
d303 [label="string startingWithA = JsonConvert.SerializeObject(book, Formatting.Indented,\r\n                new JsonSerializerSettings { ContractResolver = new DynamicContractResolver('A') })", span="555-556", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()"];
d304 [label="string startingWithB = JsonConvert.SerializeObject(book, Formatting.Indented,\r\n                new JsonSerializerSettings { ContractResolver = new DynamicContractResolver('B') })", span="564-565", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()"];
d294 [label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Maurice'''',\r\n  ''''LastName'''': ''''Moss'''',\r\n  ''''BirthDate'''': ''''1977-12-30T01:01:01Z''''\r\n}'', iPersonJson)", span="536-540", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()"];
d305 [label="StringAssert.AreEqual(@''{\r\n  ''''AuthorName'''': ''''Brandon Sanderson'''',\r\n  ''''AuthorAge'''': 34,\r\n  ''''AuthorCountry'''': ''''United States of America''''\r\n}'', startingWithA)", span="572-576", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()"];
d306 [label="StringAssert.AreEqual(@''{\r\n  ''''BookName'''': ''''The Gathering Storm'''',\r\n  ''''BookPrice'''': 16.19\r\n}'', startingWithB)", span="578-581", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()"];
d334 [label="Assert.IsTrue(extensionData.Any())", span="659-659", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()"];
d202 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="388-388", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d204 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="391-391", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d206 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="394-394", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d208 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="397-397", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d210 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="400-400", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d212 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="403-403", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d214 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="406-406", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d216 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="409-409", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d218 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="412-412", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d330 [label="Assert.IsTrue(dictionaryData.Any())", span="654-654", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()"];
d331 [label="Assert.IsTrue(dictionaryData.Any())", span="655-655", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()"];
d333 [label="Assert.IsTrue(extensionData.Any())", span="658-658", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()"];
d220 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="415-415", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d222 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="418-418", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d224 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="421-421", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d226 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="424-424", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d228 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="427-427", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d230 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="430-430", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d232 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="433-433", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d234 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="436-436", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d236 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="439-439", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d238 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="442-442", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d253 [label="Exit lambda expression", span="462-462", cluster="lambda expression"];
d252 [label="c.PropertyName == ''InvariantInfo''", span="462-462", cluster="lambda expression"];
d286 [label="Entry lambda expression", span="504-508", cluster="lambda expression"];
d289 [label="Exit lambda expression", span="504-508", cluster="lambda expression"];
d290 [label="Entry Newtonsoft.Json.Tests.TestObjects.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", span="40-40", cluster="Newtonsoft.Json.Tests.TestObjects.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)"];
d338 [label="Entry Newtonsoft.Json.Serialization.ExtensionDataGetter.Invoke(object)", span="75-75", cluster="Newtonsoft.Json.Serialization.ExtensionDataGetter.Invoke(object)"];
d339 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary"];
d341 [label="Entry lambda expression", span="653-653", cluster="lambda expression"];
d344 [label="Entry lambda expression", span="653-653", cluster="lambda expression"];
d367 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual"];
d201 [label="JsonProperty p = new JsonProperty { PropertyName = ''abc'' }", span="387-387", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d203 [label="p = new JsonProperty { PropertyName = ''123'' }", span="390-390", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d205 [label="p = new JsonProperty { PropertyName = ''._-'' }", span="393-393", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d207 [label="p = new JsonProperty { PropertyName = ''!@#'' }", span="396-396", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d209 [label="p = new JsonProperty { PropertyName = ''$%^'' }", span="399-399", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d211 [label="p = new JsonProperty { PropertyName = ''?*('' }", span="402-402", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d213 [label="p = new JsonProperty { PropertyName = '')_+'' }", span="405-405", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d215 [label="p = new JsonProperty { PropertyName = ''=:,'' }", span="408-408", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d217 [label="p = new JsonProperty { PropertyName = null }", span="411-411", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d219 [label="p = new JsonProperty { PropertyName = ''&'' }", span="414-414", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d221 [label="p = new JsonProperty { PropertyName = ''<'' }", span="417-417", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d223 [label="p = new JsonProperty { PropertyName = ''>'' }", span="420-420", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d225 [label="p = new JsonProperty { PropertyName = ''''' }", span="423-423", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d227 [label="p = new JsonProperty { PropertyName = @'''''''' }", span="426-426", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d229 [label="p = new JsonProperty { PropertyName = Environment.NewLine }", span="429-429", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d231 [label="p = new JsonProperty { PropertyName = ''\0'' }", span="432-432", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d233 [label="p = new JsonProperty { PropertyName = ''\n'' }", span="435-435", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d235 [label="p = new JsonProperty { PropertyName = ''\v'' }", span="438-438", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d237 [label="p = new JsonProperty { PropertyName = ''\u00B9'' }", span="441-441", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d292 [label="Employee employee = new Employee\r\n            {\r\n                BirthDate = new DateTime(1977, 12, 30, 1, 1, 1, DateTimeKind.Utc),\r\n                FirstName = ''Maurice'',\r\n                LastName = ''Moss'',\r\n                Department = ''IT'',\r\n                JobTitle = ''Support''\r\n            }", span="524-531", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()"];
d298 [label="Entry Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.IPersonContractResolver()", span="93-93", cluster="Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.IPersonContractResolver()"];
d302 [label="Book book = new Book\r\n            {\r\n                BookName = ''The Gathering Storm'',\r\n                BookPrice = 16.19m,\r\n                AuthorName = ''Brandon Sanderson'',\r\n                AuthorAge = 34,\r\n                AuthorCountry = ''United States of America''\r\n            }", span="546-553", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()"];
d0 [label="Entry Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", span="56-56", cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)"];
d295 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", span="522-522", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()"];
d307 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", span="544-544", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()"];
d340 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()"];
d239 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", span="385-385", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d343 [label="Exit lambda expression", span="653-653", cluster="lambda expression"];
d342 [label="kv.Key", span="653-653", cluster="lambda expression"];
d346 [label="Exit lambda expression", span="653-653", cluster="lambda expression"];
d345 [label="kv.Value", span="653-653", cluster="lambda expression"];
d200 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", span="385-385", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()"];
d291 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", span="522-522", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()"];
d296 [label="Entry Newtonsoft.Json.Tests.TestObjects.Organization.Employee.Employee()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Organization.Employee.Employee()"];
d297 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)"];
d301 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", span="544-544", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()"];
d308 [label="Entry Newtonsoft.Json.Tests.Serialization.Book.Book()", span="84-84", cluster="Newtonsoft.Json.Tests.Serialization.Book.Book()"];
d2 [label="Exit Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", span="56-56", cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)"];
d1 [label="_startingWithChar = startingWithChar", span="58-58", cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)"];
d411 [label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver", span=""];
d4 [label="IList<JsonProperty> properties = base.CreateProperties(type, memberSerialization)", span="63-63", cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
d5 [label="properties =\r\n                properties.Where(p => p.PropertyName.StartsWith(_startingWithChar.ToString())).ToList()", span="66-67", cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
d12 [label="p.PropertyName.StartsWith(_startingWithChar.ToString())", span="67-67", cluster="lambda expression"];
d3 [label="Entry Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="61-61", cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
d8 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1297-1297", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
d6 [label="return properties;", span="69-69", cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
d9 [label="Entry Unk.Where", span="", cluster="Unk.Where"];
d10 [label="Entry Unk.ToList", span="", cluster="Unk.ToList"];
d11 [label="Entry lambda expression", span="67-67", cluster="lambda expression"];
d13 [label="Exit lambda expression", span="67-67", cluster="lambda expression"];
d14 [label="Entry char.ToString()", span="0-0", cluster="char.ToString()"];
d15 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)"];
d7 [label="Exit Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="61-61", cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
m0_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", span="11-11", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs"];
m0_1 [label="string schemaJson", span="14-14", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs"];
m0_2 [label="JsonSchemaResolver resolver = new JsonSchemaResolver()", span="15-15", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs"];
m0_3 [label="schemaJson = @''{\r\n              'id': 'person',\r\n              'type': 'object',\r\n              'properties': {\r\n                'name': {'type':'string'},\r\n                'age': {'type':'integer'}\r\n              }\r\n            }''", span="17-24", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs"];
m0_4 [label="JsonSchema personSchema = JsonSchema.Parse(schemaJson, resolver)", span="26-26", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs"];
m0_6 [label="JsonSchema employeeSchema = JsonSchema.Parse(schemaJson, resolver)", span="38-38", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs"];
m0_5 [label="schemaJson = @''{\r\n              'id': 'employee',\r\n              'type': 'object',\r\n              'extends': {'$ref':'person'},\r\n              'properties': {\r\n                'salary': {'type':'number'},\r\n                'jobTitle': {'type':'string'}\r\n              }\r\n            }''", span="28-36", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs"];
m0_7 [label="string json = @''{\r\n              'name': 'James',\r\n              'age': 29,\r\n              'salary': 9000.01,\r\n              'jobTitle': 'Junior Vice President'\r\n            }''", span="40-45", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs"];
m0_9 [label="bool valid = employee.IsValid(employeeSchema)", span="49-49", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs"];
m0_8 [label="JObject employee = JObject.Parse(json)", span="47-47", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs"];
m0_10 [label="Console.WriteLine(valid)", span="51-51", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs"];
m0_11 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", span="11-11", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="DefaultContractResolver.cs"];
m0_15 [label="Entry Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema)", span="44-44", cluster="Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs"];
m0_12 [label="Entry Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", span="50-50", cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", file="DefaultContractResolver.cs"];
m0_13 [label="Entry Newtonsoft.Json.Schema.JsonSchema.Parse(string, Newtonsoft.Json.Schema.JsonSchemaResolver)", span="299-299", cluster="Newtonsoft.Json.Schema.JsonSchema.Parse(string, Newtonsoft.Json.Schema.JsonSchemaResolver)", file="DefaultContractResolver.cs"];
m0_16 [label="Entry System.Console.WriteLine(bool)", span="0-0", cluster="System.Console.WriteLine(bool)", file="DefaultContractResolver.cs"];
m1_28 [label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="ISerializableTestObject.cs"];
m1_42 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="ISerializableTestObject.cs"];
m1_71 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="ISerializableTestObject.cs"];
m1_35 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="ISerializableTestObject.cs"];
m1_74 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="ISerializableTestObject.cs"];
m1_64 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", file="ISerializableTestObject.cs"];
m1_33 [label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="ISerializableTestObject.cs"];
m1_67 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="ISerializableTestObject.cs"];
m1_66 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="ISerializableTestObject.cs"];
m1_32 [label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="ISerializableTestObject.cs"];
m1_29 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt32(string)", file="ISerializableTestObject.cs"];
m1_43 [label="Entry Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="84-84", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_44 [label="info.AddValue((string)''stringValue'', (object)_stringValue)", span="86-86", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_45 [label="info.AddValue((string)''intValue'', (int)_intValue)", span="87-87", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_46 [label="info.AddValue((string)''dateTimeOffsetValue'', (object)_dateTimeOffsetValue)", span="88-88", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_47 [label="info.AddValue((string)''personValue'', (object)_personValue)", span="89-89", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_48 [label="info.AddValue((string)''nullPersonValue'', (object)_nullPersonValue)", span="90-90", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_49 [label="info.AddValue(''nullableInt'', null)", span="91-91", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_50 [label="info.AddValue((string)''booleanValue'', (bool)_booleanValue)", span="93-93", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_51 [label="info.AddValue((string)''byteValue'', (byte)_byteValue)", span="94-94", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_52 [label="info.AddValue((string)''charValue'', (char)_charValue)", span="95-95", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_53 [label="info.AddValue((string)''dateTimeValue'', (DateTime)_dateTimeValue)", span="96-96", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_54 [label="info.AddValue((string)''decimalValue'', (decimal)_decimalValue)", span="97-97", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_55 [label="info.AddValue((string)''shortValue'', (short)_shortValue)", span="98-98", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_56 [label="info.AddValue((string)''longValue'', (long)_longValue)", span="99-99", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_57 [label="info.AddValue((string)''sbyteValue'', (sbyte)_sbyteValue)", span="100-100", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_58 [label="info.AddValue((string)''floatValue'', (float)_floatValue)", span="101-101", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_59 [label="info.AddValue((string)''ushortValue'', (ushort)_ushortValue)", span="102-102", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_60 [label="info.AddValue((string)''uintValue'', (uint)_uintValue)", span="103-103", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_61 [label="info.AddValue((string)''ulongValue'', (ulong)_ulongValue)", span="104-104", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_62 [label="Exit Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="84-84", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_75 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="ISerializableTestObject.cs"];
m1_65 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="ISerializableTestObject.cs"];
m1_38 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="ISerializableTestObject.cs"];
m1_34 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="ISerializableTestObject.cs"];
m1_72 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="ISerializableTestObject.cs"];
m1_39 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="ISerializableTestObject.cs"];
m1_8 [label="Entry Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="61-61", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_9 [label="_stringValue = info.GetString(''stringValue'')", span="63-63", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_10 [label="_intValue = info.GetInt32(''intValue'')", span="64-64", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_11 [label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="65-65", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_12 [label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="66-66", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_13 [label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="67-67", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_14 [label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="68-68", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_15 [label="_booleanValue = info.GetBoolean(''booleanValue'')", span="70-70", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_16 [label="_byteValue = info.GetByte(''byteValue'')", span="71-71", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_17 [label="_charValue = info.GetChar(''charValue'')", span="72-72", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_18 [label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="73-73", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_19 [label="_decimalValue = info.GetDecimal(''decimalValue'')", span="74-74", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_20 [label="_shortValue = info.GetInt16(''shortValue'')", span="75-75", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_21 [label="_longValue = info.GetInt64(''longValue'')", span="76-76", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_22 [label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="77-77", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_23 [label="_floatValue = info.GetSingle(''floatValue'')", span="78-78", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_24 [label="_ushortValue = info.GetUInt16(''ushortValue'')", span="79-79", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_25 [label="_uintValue = info.GetUInt32(''uintValue'')", span="80-80", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_26 [label="_ulongValue = info.GetUInt64(''ulongValue'')", span="81-81", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_27 [label="Exit Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="61-61", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ISerializableTestObject.cs"];
m1_7 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="ISerializableTestObject.cs"];
m1_76 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="ISerializableTestObject.cs"];
m1_0 [label="Entry Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", span="52-52", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="ISerializableTestObject.cs"];
m1_1 [label="_stringValue = stringValue", span="54-54", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="ISerializableTestObject.cs"];
m1_2 [label="_intValue = intValue", span="55-55", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="ISerializableTestObject.cs"];
m1_3 [label="_dateTimeOffsetValue = dateTimeOffset", span="56-56", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="ISerializableTestObject.cs"];
m1_4 [label="_personValue = personValue", span="57-57", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="ISerializableTestObject.cs"];
m1_5 [label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="58-58", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="ISerializableTestObject.cs"];
m1_6 [label="Exit Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", span="52-52", cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="ISerializableTestObject.cs"];
m1_31 [label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="ISerializableTestObject.cs"];
m1_70 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="ISerializableTestObject.cs"];
m1_41 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="ISerializableTestObject.cs"];
m1_30 [label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="ISerializableTestObject.cs"];
m1_69 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="ISerializableTestObject.cs"];
m1_73 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="ISerializableTestObject.cs"];
m1_37 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="ISerializableTestObject.cs"];
m1_63 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="ISerializableTestObject.cs"];
m1_40 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="ISerializableTestObject.cs"];
m1_36 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="ISerializableTestObject.cs"];
m1_68 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="ISerializableTestObject.cs"];
m1_77 [label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject", span="", file="ISerializableTestObject.cs"];
m6_10 [label="Exit Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="56-56", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="Ratio.cs"];
m6_3 [label="Console.WriteLine(name)", span="46-46", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectToken.Example()", file="Ratio.cs"];
m6_12 [label="Entry System.Console.WriteLine(decimal)", span="0-0", cluster="System.Console.WriteLine(decimal)", file="Ratio.cs"];
m6_11 [label="Entry Newtonsoft.Json.Converters.CustomCreationConverter<T>.Create(System.Type)", span="71-71", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.Create(System.Type)", file="Ratio.cs"];
m6_14 [label="Exit Newtonsoft.Json.Converters.CustomCreationConverter<T>.Create(System.Type)", span="71-71", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.Create(System.Type)", file="Ratio.cs"];
m6_18 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="Ratio.cs"];
m6_13 [label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="334-334", cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="Ratio.cs"];
m6_0 [label="Entry Newtonsoft.Json.Converters.CustomCreationConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Ratio.cs"];
m6_1 [label="throw new NotSupportedException(''CustomCreationConverter should only be used while deserializing.'');", span="46-46", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="Ratio.cs"];
m6_2 [label="Exit Newtonsoft.Json.Converters.CustomCreationConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Ratio.cs"];
m6_4 [label="Entry Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="56-56", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="Ratio.cs"];
m6_6 [label="value == null", span="59-59", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="Ratio.cs"];
m6_5 [label="T value = Create(objectType)", span="58-58", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="Ratio.cs"];
m6_7 [label="throw new JsonSerializationException(''No object created.'');", span="60-60", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="Ratio.cs"];
m6_8 [label="serializer.Populate(reader, value)", span="62-62", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="Ratio.cs"];
m6_9 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="Ratio.cs"];
m6_15 [label="Entry Newtonsoft.Json.Converters.CustomCreationConverter<T>.CanConvert(System.Type)", span="80-80", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.CanConvert(System.Type)", file="Ratio.cs"];
m6_16 [label="return typeof (T).IsAssignableFrom(objectType);", span="82-82", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.CanConvert(System.Type)", file="Ratio.cs"];
m6_17 [label="Exit Newtonsoft.Json.Converters.CustomCreationConverter<T>.CanConvert(System.Type)", span="80-80", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.CanConvert(System.Type)", file="Ratio.cs"];
m6_19 [label="Newtonsoft.Json.Converters.CustomCreationConverter<T>", span="", file="Ratio.cs"];
m7_2 [label="Entry Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", span="53-53", cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="ReferenceLoopHandlingTests.cs"];
m7_3 [label="Console.WriteLine(EscapeJson(json))", span="55-55", cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="ReferenceLoopHandlingTests.cs"];
m7_4 [label="Exit Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", span="53-53", cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="ReferenceLoopHandlingTests.cs"];
m7_9 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="ReferenceLoopHandlingTests.cs"];
m7_5 [label="Entry Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", span="58-58", cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="ReferenceLoopHandlingTests.cs"];
m7_7 [label="return @''@'''''' + json.Replace(@'''''''', @'''''''''''') + @'''''''';", span="60-60", cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="ReferenceLoopHandlingTests.cs"];
m7_8 [label="Exit Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", span="58-58", cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="ReferenceLoopHandlingTests.cs"];
m7_0 [label="Entry Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", span="39-39", cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="ReferenceLoopHandlingTests.cs"];
m7_1 [label="Exit Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", span="39-39", cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="ReferenceLoopHandlingTests.cs"];
m7_10 [label="Newtonsoft.Json.Tests.TestFixtureBase", span="", file="ReferenceLoopHandlingTests.cs"];
m8_48 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="StringEnumConverter.cs"];
m8_52 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="600-600", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="StringEnumConverter.cs"];
m8_53 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", span="138-138", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", file="StringEnumConverter.cs"];
m8_50 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="StringEnumConverter.cs"];
m8_29 [label="Entry Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="123-123", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_30 [label="reader.TokenType == JsonToken.Null", span="125-125", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_31 [label="!ReflectionUtils.IsNullableType(objectType)", span="127-127", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_32 [label="throw JsonSerializationException.Create(reader, ''Cannot convert null value to {0}.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="129-129", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_34 [label="bool isNullable = ReflectionUtils.IsNullableType(objectType)", span="135-135", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_35 [label="Type t = isNullable ? Nullable.GetUnderlyingType(objectType) : objectType", span="136-136", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_36 [label="reader.TokenType == JsonToken.String", span="140-140", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_37 [label="string enumText = reader.Value.ToString()", span="142-142", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_39 [label="reader.TokenType == JsonToken.Integer", span="147-147", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_41 [label="throw JsonSerializationException.Create(reader, ''Integer value {0} is not allowed.''.FormatWith(CultureInfo.InvariantCulture, reader.Value));", span="151-151", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_42 [label="return ConvertUtils.ConvertOrCast(reader.Value, CultureInfo.InvariantCulture, t);", span="154-154", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_44 [label="throw JsonSerializationException.Create(reader, ''Error converting value {0} to type '{1}'.''.FormatWith(CultureInfo.InvariantCulture, MiscellaneousUtils.FormatValueForPrint(reader.Value), objectType), ex);", span="159-159", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_45 [label="throw JsonSerializationException.Create(reader, ''Unexpected token {0} when parsing enum.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="163-163", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_33 [label="return null;", span="132-132", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_38 [label="return EnumUtils.ParseEnumName(enumText, isNullable, !AllowIntegerValues, t);", span="144-144", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_40 [label="!AllowIntegerValues", span="149-149", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_43 [label=Exception, span="157-157", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_46 [label="Exit Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="123-123", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_22 [label="Entry char.IsNumber(char)", span="0-0", cluster="char.IsNumber(char)", file="StringEnumConverter.cs"];
m8_3 [label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter(bool)", span="71-71", cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter(bool)", file="StringEnumConverter.cs"];
m8_4 [label="CamelCaseText = camelCaseText", span="74-74", cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter(bool)", file="StringEnumConverter.cs"];
m8_5 [label="Exit Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter(bool)", span="71-71", cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter(bool)", file="StringEnumConverter.cs"];
m8_24 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="StringEnumConverter.cs"];
m8_60 [label="Entry System.Type.IsEnum()", span="189-189", cluster="System.Type.IsEnum()", file="StringEnumConverter.cs"];
m8_20 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="907-907", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="StringEnumConverter.cs"];
m8_0 [label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="62-62", cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="StringEnumConverter.cs"];
m8_1 [label="AllowIntegerValues = true", span="64-64", cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="StringEnumConverter.cs"];
m8_2 [label="Exit Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="62-62", cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="StringEnumConverter.cs"];
m8_6 [label="Entry Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="83-83", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_7 [label="value == null", span="85-85", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_8 [label="writer.WriteNull()", span="87-87", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_10 [label="Enum e = (Enum)value", span="91-91", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_14 [label="throw JsonSerializationException.Create(null, writer.ContainerPath, ''Integer value {0} is not allowed.''.FormatWith(CultureInfo.InvariantCulture, enumName), null);", span="99-99", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_15 [label="writer.WriteValue(value)", span="103-103", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_18 [label="writer.WriteValue(finalName)", span="111-111", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_9 [label="return;", span="88-88", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_11 [label="string enumName = e.ToString(''G'')", span="93-93", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_16 [label="Type enumType = e.GetType()", span="107-107", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_12 [label="char.IsNumber(enumName[0]) || enumName[0] == '-'", span="95-95", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_17 [label="string finalName = EnumUtils.ToEnumName(enumType, enumName, CamelCaseText)", span="109-109", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_13 [label="!AllowIntegerValues", span="97-97", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_19 [label="Exit Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="83-83", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m8_54 [label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)", file="StringEnumConverter.cs"];
m8_25 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1424-1424", cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="StringEnumConverter.cs"];
m8_47 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="263-263", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="StringEnumConverter.cs"];
m8_49 [label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0", cluster="System.Nullable.GetUnderlyingType(System.Type)", file="StringEnumConverter.cs"];
m8_51 [label="Entry Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", span="187-187", cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="StringEnumConverter.cs"];
m8_28 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="945-945", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="StringEnumConverter.cs"];
m8_21 [label="Entry System.Enum.ToString(string)", span="0-0", cluster="System.Enum.ToString(string)", file="StringEnumConverter.cs"];
m8_23 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="StringEnumConverter.cs"];
m8_27 [label="Entry Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", span="233-233", cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="StringEnumConverter.cs"];
m8_55 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="87-87", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="StringEnumConverter.cs"];
m8_56 [label="Entry Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", span="173-173", cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", file="StringEnumConverter.cs"];
m8_57 [label="Type t = (ReflectionUtils.IsNullableType(objectType))\r\n                ? Nullable.GetUnderlyingType(objectType)\r\n                : objectType", span="175-177", cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", file="StringEnumConverter.cs"];
m8_58 [label="return t.IsEnum();", span="179-179", cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", file="StringEnumConverter.cs"];
m8_59 [label="Exit Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", span="173-173", cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", file="StringEnumConverter.cs"];
m8_61 [label="Newtonsoft.Json.Converters.StringEnumConverter", span="", file="StringEnumConverter.cs"];
d35 -> d36  [key=0, style=solid, color=green];
d35 -> d31  [key=2, style=dotted, color=green];
d34 -> d35  [key=0, style=solid, color=green];
d36 -> d37  [key=0, style=solid, color=green];
d36 -> d32  [key=2, style=dotted, color=green];
d37 -> d38  [key=0, style=solid, color=green];
d37 -> d33  [key=2, style=dotted, color=green];
d38 -> d34  [key=0, style=bold, color=blue];
d27 -> d31  [key=2, style=dotted];
d27 -> d28  [key=0, style=solid];
d40 -> d31  [key=2, style=dotted];
d40 -> d41  [key=0, style=solid];
d65 -> d31  [key=2, style=dotted];
d65 -> d66  [key=0, style=solid];
d74 -> d31  [key=2, style=dotted];
d74 -> d75  [key=0, style=solid];
d83 -> d31  [key=2, style=dotted];
d83 -> d84  [key=0, style=solid];
d83 -> d88  [key=1, style=dashed, color=darkseagreen4, label=resolver];
d83 -> d99  [key=1, style=dashed, color=darkseagreen4, label=resolver];
d83 -> d90  [key=1, style=dashed, color=darkseagreen4, label=resolver];
d106 -> d31  [key=2, style=dotted];
d106 -> d107  [key=0, style=solid];
d106 -> d111  [key=1, style=dashed, color=darkseagreen4, label=resolver];
d106 -> d119  [key=1, style=dashed, color=darkseagreen4, label=resolver];
d106 -> d113  [key=1, style=dashed, color=darkseagreen4, label=resolver];
d126 -> d31  [key=2, style=dotted];
d126 -> d127  [key=0, style=solid];
d126 -> d131  [key=1, style=dashed, color=darkseagreen4, label=resolver];
d143 -> d31  [key=2, style=dotted];
d143 -> d144  [key=0, style=solid];
d143 -> d148  [key=1, style=dashed, color=darkseagreen4, label=resolver];
d159 -> d31  [key=2, style=dotted];
d159 -> d160  [key=0, style=solid];
d159 -> d164  [key=1, style=dashed, color=darkseagreen4, label=resolver];
d159 -> d172  [key=1, style=dashed, color=darkseagreen4, label=resolver];
d159 -> d166  [key=1, style=dashed, color=darkseagreen4, label=resolver];
d241 -> d31  [key=2, style=dotted];
d241 -> d242  [key=0, style=solid];
d246 -> d31  [key=2, style=dotted];
d246 -> d247  [key=0, style=solid];
d255 -> d31  [key=2, style=dotted];
d255 -> d256  [key=0, style=solid];
d265 -> d31  [key=2, style=dotted];
d265 -> d266  [key=0, style=solid];
d276 -> d31  [key=2, style=dotted];
d276 -> d277  [key=0, style=solid];
d276 -> d281  [key=1, style=dashed, color=darkseagreen4, label=resolver];
d311 -> d31  [key=2, style=dotted];
d311 -> d312  [key=0, style=solid];
d314 -> d31  [key=2, style=dotted];
d314 -> d315  [key=0, style=solid];
d325 -> d31  [key=2, style=dotted];
d325 -> d326  [key=0, style=solid];
d351 -> d31  [key=2, style=dotted];
d351 -> d352  [key=0, style=solid];
d351 -> d353  [key=1, style=dashed, color=darkseagreen4, label=resolver];
d360 -> d31  [key=2, style=dotted];
d360 -> d361  [key=0, style=solid];
d373 -> d31  [key=2, style=dotted];
d373 -> d374  [key=0, style=solid];
d373 -> d375  [key=1, style=dashed, color=darkseagreen4, label=resolver];
d393 -> d31  [key=2, style=dotted];
d393 -> d394  [key=0, style=solid];
d28 -> d32  [key=2, style=dotted];
d28 -> d29  [key=0, style=solid];
d41 -> d32  [key=2, style=dotted];
d41 -> d42  [key=0, style=solid];
d66 -> d32  [key=2, style=dotted];
d66 -> d67  [key=0, style=solid];
d66 -> d68  [key=1, style=dashed, color=darkseagreen4, label=contract];
d66 -> d69  [key=1, style=dashed, color=darkseagreen4, label=contract];
d75 -> d32  [key=2, style=dotted];
d75 -> d76  [key=0, style=solid];
d84 -> d32  [key=2, style=dotted];
d84 -> d85  [key=0, style=solid];
d84 -> d86  [key=1, style=dashed, color=darkseagreen4, label=contract];
d84 -> d87  [key=1, style=dashed, color=darkseagreen4, label=contract];
d84 -> d89  [key=1, style=dashed, color=darkseagreen4, label=contract];
d107 -> d32  [key=2, style=dotted];
d107 -> d108  [key=0, style=solid];
d107 -> d109  [key=1, style=dashed, color=darkseagreen4, label=contract];
d107 -> d110  [key=1, style=dashed, color=darkseagreen4, label=contract];
d107 -> d112  [key=1, style=dashed, color=darkseagreen4, label=contract];
d127 -> d32  [key=2, style=dotted];
d127 -> d128  [key=0, style=solid];
d127 -> d129  [key=1, style=dashed, color=darkseagreen4, label=contract];
d127 -> d130  [key=1, style=dashed, color=darkseagreen4, label=contract];
d144 -> d32  [key=2, style=dotted];
d144 -> d145  [key=0, style=solid];
d144 -> d146  [key=1, style=dashed, color=darkseagreen4, label=contract];
d144 -> d147  [key=1, style=dashed, color=darkseagreen4, label=contract];
d160 -> d32  [key=2, style=dotted];
d160 -> d161  [key=0, style=solid];
d160 -> d162  [key=1, style=dashed, color=darkseagreen4, label=contract];
d160 -> d163  [key=1, style=dashed, color=darkseagreen4, label=contract];
d160 -> d165  [key=1, style=dashed, color=darkseagreen4, label=contract];
d242 -> d32  [key=2, style=dotted];
d242 -> d243  [key=0, style=solid];
d247 -> d32  [key=2, style=dotted];
d247 -> d248  [key=0, style=solid];
d256 -> d32  [key=2, style=dotted];
d256 -> d257  [key=0, style=solid];
d256 -> d258  [key=1, style=dashed, color=darkseagreen4, label=contract];
d256 -> d259  [key=1, style=dashed, color=darkseagreen4, label=contract];
d256 -> d260  [key=1, style=dashed, color=darkseagreen4, label=contract];
d256 -> d261  [key=1, style=dashed, color=darkseagreen4, label=contract];
d256 -> d262  [key=1, style=dashed, color=darkseagreen4, label=contract];
d266 -> d32  [key=2, style=dotted];
d266 -> d267  [key=0, style=solid];
d266 -> d268  [key=1, style=dashed, color=darkseagreen4, label=contract];
d266 -> d269  [key=1, style=dashed, color=darkseagreen4, label=contract];
d266 -> d270  [key=1, style=dashed, color=darkseagreen4, label=contract];
d266 -> d271  [key=1, style=dashed, color=darkseagreen4, label=contract];
d266 -> d272  [key=1, style=dashed, color=darkseagreen4, label=contract];
d266 -> d273  [key=1, style=dashed, color=darkseagreen4, label=contract];
d277 -> d32  [key=2, style=dotted];
d277 -> d278  [key=0, style=solid];
d277 -> d279  [key=1, style=dashed, color=darkseagreen4, label=contract];
d277 -> d280  [key=1, style=dashed, color=darkseagreen4, label=contract];
d326 -> d32  [key=2, style=dotted];
d326 -> d327  [key=0, style=solid];
d326 -> d328  [key=1, style=dashed, color=darkseagreen4, label=contract];
d353 -> d32  [key=2, style=dotted];
d353 -> d354  [key=0, style=solid];
d353 -> d356  [key=1, style=dashed, color=darkseagreen4, label=contract];
d361 -> d32  [key=2, style=dotted];
d361 -> d362  [key=0, style=solid];
d361 -> d364  [key=1, style=dashed, color=darkseagreen4, label=contract];
d375 -> d32  [key=2, style=dotted];
d375 -> d376  [key=0, style=solid];
d375 -> d379  [key=1, style=dashed, color=darkseagreen4, label=contract];
d375 -> d382  [key=1, style=dashed, color=darkseagreen4, label=contract];
d375 -> d385  [key=1, style=dashed, color=darkseagreen4, label=contract];
d375 -> d388  [key=1, style=dashed, color=darkseagreen4, label=contract];
d394 -> d32  [key=2, style=dotted];
d394 -> d395  [key=0, style=solid];
d394 -> d398  [key=1, style=dashed, color=darkseagreen4, label=contract];
d394 -> d401  [key=1, style=dashed, color=darkseagreen4, label=contract];
d394 -> d404  [key=1, style=dashed, color=darkseagreen4, label=contract];
d394 -> d407  [key=1, style=dashed, color=darkseagreen4, label=contract];
d29 -> d33  [key=2, style=dotted];
d29 -> d30  [key=0, style=solid];
d42 -> d33  [key=2, style=dotted];
d42 -> d43  [key=0, style=solid];
d46 -> d33  [key=2, style=dotted];
d46 -> d47  [key=0, style=solid];
d46 -> d62  [key=2, style=dotted];
d47 -> d33  [key=2, style=dotted];
d47 -> d48  [key=0, style=solid];
d49 -> d33  [key=2, style=dotted];
d49 -> d50  [key=0, style=solid];
d49 -> d62  [key=2, style=dotted];
d50 -> d33  [key=2, style=dotted];
d50 -> d51  [key=0, style=solid];
d52 -> d33  [key=2, style=dotted];
d52 -> d53  [key=0, style=solid];
d52 -> d63  [key=2, style=dotted];
d52 -> d62  [key=2, style=dotted];
d53 -> d33  [key=2, style=dotted];
d53 -> d54  [key=0, style=solid];
d55 -> d33  [key=2, style=dotted];
d55 -> d56  [key=0, style=solid];
d55 -> d62  [key=2, style=dotted];
d56 -> d33  [key=2, style=dotted];
d56 -> d57  [key=0, style=solid];
d58 -> d33  [key=2, style=dotted];
d58 -> d59  [key=0, style=solid];
d58 -> d62  [key=2, style=dotted];
d59 -> d33  [key=2, style=dotted];
d59 -> d60  [key=0, style=solid];
d68 -> d33  [key=2, style=dotted];
d68 -> d69  [key=0, style=solid];
d77 -> d33  [key=2, style=dotted];
d77 -> d78  [key=0, style=solid];
d77 -> d80  [key=2, style=dotted];
d78 -> d33  [key=2, style=dotted];
d78 -> d79  [key=0, style=solid];
d78 -> d80  [key=2, style=dotted];
d78 -> d81  [key=2, style=dotted];
d91 -> d33  [key=2, style=dotted];
d91 -> d92  [key=0, style=solid];
d114 -> d33  [key=2, style=dotted];
d114 -> d115  [key=0, style=solid];
d115 -> d33  [key=2, style=dotted];
d115 -> d116  [key=0, style=solid];
d116 -> d33  [key=2, style=dotted];
d116 -> d117  [key=0, style=solid];
d132 -> d33  [key=2, style=dotted];
d132 -> d133  [key=0, style=solid];
d132 -> d81  [key=2, style=dotted];
d133 -> d33  [key=2, style=dotted];
d133 -> d134  [key=0, style=solid];
d134 -> d33  [key=2, style=dotted];
d134 -> d135  [key=0, style=solid];
d135 -> d33  [key=2, style=dotted];
d135 -> d136  [key=0, style=solid];
d136 -> d33  [key=2, style=dotted];
d136 -> d137  [key=0, style=solid];
d149 -> d33  [key=2, style=dotted];
d149 -> d150  [key=0, style=solid];
d149 -> d81  [key=2, style=dotted];
d150 -> d33  [key=2, style=dotted];
d150 -> d151  [key=0, style=solid];
d151 -> d33  [key=2, style=dotted];
d151 -> d152  [key=0, style=solid];
d152 -> d33  [key=2, style=dotted];
d152 -> d153  [key=0, style=solid];
d167 -> d33  [key=2, style=dotted];
d167 -> d168  [key=0, style=solid];
d168 -> d33  [key=2, style=dotted];
d168 -> d169  [key=0, style=solid];
d169 -> d33  [key=2, style=dotted];
d169 -> d170  [key=0, style=solid];
d180 -> d33  [key=2, style=dotted];
d180 -> d181  [key=0, style=solid];
d184 -> d33  [key=2, style=dotted];
d184 -> d185  [key=0, style=solid];
d194 -> d33  [key=2, style=dotted];
d194 -> d195  [key=0, style=solid];
d198 -> d33  [key=2, style=dotted];
d198 -> d199  [key=0, style=solid];
d243 -> d33  [key=2, style=dotted];
d243 -> d244  [key=0, style=solid];
d259 -> d33  [key=2, style=dotted];
d259 -> d260  [key=0, style=solid];
d260 -> d33  [key=2, style=dotted];
d260 -> d261  [key=0, style=solid];
d269 -> d33  [key=2, style=dotted];
d269 -> d270  [key=0, style=solid];
d270 -> d33  [key=2, style=dotted];
d270 -> d271  [key=0, style=solid];
d271 -> d33  [key=2, style=dotted];
d271 -> d272  [key=0, style=solid];
d282 -> d33  [key=2, style=dotted];
d282 -> d283  [key=0, style=solid];
d283 -> d33  [key=2, style=dotted];
d283 -> d284  [key=0, style=solid];
d318 -> d33  [key=2, style=dotted];
d318 -> d319  [key=0, style=solid];
d319 -> d33  [key=2, style=dotted];
d319 -> d320  [key=0, style=solid];
d355 -> d33  [key=2, style=dotted];
d355 -> d356  [key=0, style=solid];
d357 -> d33  [key=2, style=dotted];
d357 -> d358  [key=0, style=solid];
d365 -> d33  [key=2, style=dotted];
d365 -> d366  [key=0, style=solid];
d377 -> d33  [key=2, style=dotted];
d377 -> d378  [key=0, style=solid];
d378 -> d33  [key=2, style=dotted];
d378 -> d379  [key=0, style=solid];
d380 -> d33  [key=2, style=dotted];
d380 -> d381  [key=0, style=solid];
d381 -> d33  [key=2, style=dotted];
d381 -> d382  [key=0, style=solid];
d383 -> d33  [key=2, style=dotted];
d383 -> d384  [key=0, style=solid];
d384 -> d33  [key=2, style=dotted];
d384 -> d385  [key=0, style=solid];
d386 -> d33  [key=2, style=dotted];
d386 -> d387  [key=0, style=solid];
d387 -> d33  [key=2, style=dotted];
d387 -> d388  [key=0, style=solid];
d389 -> d33  [key=2, style=dotted];
d389 -> d390  [key=0, style=solid];
d390 -> d33  [key=2, style=dotted];
d390 -> d391  [key=0, style=solid];
d402 -> d33  [key=2, style=dotted];
d402 -> d403  [key=0, style=solid];
d403 -> d33  [key=2, style=dotted];
d403 -> d404  [key=0, style=solid];
d405 -> d33  [key=2, style=dotted];
d405 -> d406  [key=0, style=solid];
d406 -> d33  [key=2, style=dotted];
d406 -> d407  [key=0, style=solid];
d408 -> d33  [key=2, style=dotted];
d408 -> d409  [key=0, style=solid];
d409 -> d33  [key=2, style=dotted];
d409 -> d410  [key=0, style=solid];
d26 -> d27  [key=0, style=solid];
d39 -> d40  [key=0, style=solid];
d64 -> d65  [key=0, style=solid];
d73 -> d74  [key=0, style=solid];
d82 -> d83  [key=0, style=solid];
d88 -> d89  [key=0, style=solid];
d88 -> d95  [key=2, style=dotted];
d88 -> d98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d99 -> d100  [key=0, style=solid];
d99 -> d96  [key=2, style=dotted];
d99 -> d97  [key=2, style=dotted];
d90 -> d91  [key=0, style=solid];
d90 -> d96  [key=2, style=dotted];
d90 -> d97  [key=2, style=dotted];
d105 -> d106  [key=0, style=solid];
d111 -> d112  [key=0, style=solid];
d111 -> d95  [key=2, style=dotted];
d111 -> d118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d119 -> d120  [key=0, style=solid];
d119 -> d96  [key=2, style=dotted];
d119 -> d97  [key=2, style=dotted];
d113 -> d114  [key=0, style=solid];
d113 -> d115  [key=1, style=dashed, color=darkseagreen4, label=l];
d113 -> d116  [key=1, style=dashed, color=darkseagreen4, label=l];
d113 -> d96  [key=2, style=dotted];
d113 -> d97  [key=2, style=dotted];
d125 -> d126  [key=0, style=solid];
d131 -> d132  [key=0, style=solid];
d131 -> d133  [key=1, style=dashed, color=darkseagreen4, label=l];
d131 -> d134  [key=1, style=dashed, color=darkseagreen4, label=l];
d131 -> d135  [key=1, style=dashed, color=darkseagreen4, label=l];
d131 -> d136  [key=1, style=dashed, color=darkseagreen4, label=l];
d131 -> d96  [key=2, style=dotted];
d131 -> d97  [key=2, style=dotted];
d142 -> d143  [key=0, style=solid];
d148 -> d149  [key=0, style=solid];
d148 -> d150  [key=1, style=dashed, color=darkseagreen4, label=d];
d148 -> d151  [key=1, style=dashed, color=darkseagreen4, label=d];
d148 -> d152  [key=1, style=dashed, color=darkseagreen4, label=d];
d148 -> d96  [key=2, style=dotted];
d148 -> d97  [key=2, style=dotted];
d158 -> d159  [key=0, style=solid];
d164 -> d165  [key=0, style=solid];
d164 -> d95  [key=2, style=dotted];
d164 -> d171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d172 -> d173  [key=0, style=solid];
d172 -> d96  [key=2, style=dotted];
d172 -> d97  [key=2, style=dotted];
d166 -> d167  [key=0, style=solid];
d166 -> d168  [key=1, style=dashed, color=darkseagreen4, label=d];
d166 -> d169  [key=1, style=dashed, color=darkseagreen4, label=d];
d166 -> d96  [key=2, style=dotted];
d166 -> d97  [key=2, style=dotted];
d240 -> d241  [key=0, style=solid];
d245 -> d246  [key=0, style=solid];
d254 -> d255  [key=0, style=solid];
d264 -> d265  [key=0, style=solid];
d275 -> d276  [key=0, style=solid];
d281 -> d282  [key=0, style=solid];
d281 -> d283  [key=1, style=dashed, color=darkseagreen4, label=o];
d281 -> d96  [key=2, style=dotted];
d281 -> d97  [key=2, style=dotted];
d310 -> d311  [key=0, style=solid];
d310 -> d321  [key=2, style=dotted];
d310 -> d312  [key=1, style=dashed, color=darkseagreen4, label=structTest];
d310 -> d315  [key=1, style=dashed, color=darkseagreen4, label=structTest];
d312 -> d313  [key=0, style=solid];
d312 -> d96  [key=2, style=dotted];
d312 -> d299  [key=2, style=dotted];
d313 -> d314  [key=0, style=solid];
d313 -> d300  [key=2, style=dotted];
d315 -> d316  [key=0, style=solid];
d315 -> d96  [key=2, style=dotted];
d315 -> d299  [key=2, style=dotted];
d315 -> d317  [key=1, style=dashed, color=darkseagreen4, label=includeCompilerGeneratedJson];
d324 -> d325  [key=0, style=solid];
d350 -> d351  [key=0, style=solid];
d352 -> d353  [key=0, style=solid];
d359 -> d360  [key=0, style=solid];
d372 -> d373  [key=0, style=solid];
d374 -> d375  [key=0, style=solid];
d392 -> d393  [key=0, style=solid];
d67 -> d68  [key=0, style=solid];
d67 -> d71  [key=2, style=dotted];
d69 -> d70  [key=0, style=solid];
d69 -> d72  [key=2, style=dotted];
d76 -> d77  [key=0, style=solid];
d76 -> d78  [key=1, style=dashed, color=darkseagreen4, label=property];
d85 -> d86  [key=0, style=solid];
d85 -> d93  [key=2, style=dotted];
d86 -> d87  [key=0, style=solid];
d86 -> d94  [key=2, style=dotted];
d87 -> d88  [key=0, style=solid];
d87 -> d94  [key=2, style=dotted];
d89 -> d90  [key=0, style=solid];
d108 -> d109  [key=0, style=solid];
d108 -> d93  [key=2, style=dotted];
d109 -> d110  [key=0, style=solid];
d109 -> d94  [key=2, style=dotted];
d110 -> d111  [key=0, style=solid];
d110 -> d93  [key=2, style=dotted];
d112 -> d113  [key=0, style=solid];
d128 -> d129  [key=0, style=solid];
d128 -> d71  [key=2, style=dotted];
d129 -> d130  [key=0, style=solid];
d129 -> d72  [key=2, style=dotted];
d130 -> d131  [key=0, style=solid];
d145 -> d146  [key=0, style=solid];
d145 -> d71  [key=2, style=dotted];
d146 -> d147  [key=0, style=solid];
d146 -> d72  [key=2, style=dotted];
d147 -> d148  [key=0, style=solid];
d161 -> d162  [key=0, style=solid];
d161 -> d93  [key=2, style=dotted];
d162 -> d163  [key=0, style=solid];
d162 -> d94  [key=2, style=dotted];
d163 -> d164  [key=0, style=solid];
d163 -> d93  [key=2, style=dotted];
d165 -> d166  [key=0, style=solid];
d248 -> d249  [key=0, style=solid];
d248 -> d250  [key=2, style=dotted];
d248 -> d93  [key=2, style=dotted];
d248 -> d251  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d257 -> d258  [key=0, style=solid];
d257 -> d94  [key=2, style=dotted];
d258 -> d259  [key=0, style=solid];
d258 -> d72  [key=2, style=dotted];
d261 -> d262  [key=0, style=solid];
d262 -> d263  [key=0, style=solid];
d262 -> d94  [key=2, style=dotted];
d267 -> d268  [key=0, style=solid];
d267 -> d94  [key=2, style=dotted];
d268 -> d269  [key=0, style=solid];
d268 -> d72  [key=2, style=dotted];
d272 -> d273  [key=0, style=solid];
d273 -> d274  [key=0, style=solid];
d273 -> d94  [key=2, style=dotted];
d278 -> d77  [key=3, color=darkorchid, style=bold, label="Local variable bool ensureCustomCreatorCalled"];
d278 -> d279  [key=0, style=solid];
d279 -> d280  [key=0, style=solid];
d279 -> d288  [key=1, style=dashed, color=darkseagreen4, label="?"];
d280 -> d281  [key=0, style=solid];
d280 -> d72  [key=2, style=dotted];
d327 -> d328  [key=0, style=solid];
d327 -> d336  [key=2, style=dotted];
d327 -> d337  [key=2, style=dotted];
d327 -> d329  [key=1, style=dashed, color=darkseagreen4, label=myClass];
d327 -> d332  [key=1, style=dashed, color=darkseagreen4, label=myClass];
d328 -> d329  [key=0, style=solid];
d328 -> d332  [key=1, style=dashed, color=darkseagreen4, label=getter];
d354 -> d355  [key=0, style=solid];
d356 -> d357  [key=0, style=solid];
d362 -> d363  [key=0, style=solid];
d364 -> d365  [key=0, style=solid];
d376 -> d377  [key=0, style=solid];
d376 -> d378  [key=1, style=dashed, color=darkseagreen4, label=property1];
d379 -> d380  [key=0, style=solid];
d379 -> d381  [key=1, style=dashed, color=darkseagreen4, label=property2];
d382 -> d383  [key=0, style=solid];
d382 -> d384  [key=1, style=dashed, color=darkseagreen4, label=property3];
d385 -> d386  [key=0, style=solid];
d385 -> d387  [key=1, style=dashed, color=darkseagreen4, label=property4];
d388 -> d389  [key=0, style=solid];
d388 -> d390  [key=1, style=dashed, color=darkseagreen4, label=property5];
d395 -> d396  [key=0, style=solid];
d395 -> d397  [key=1, style=dashed, color=darkseagreen4, label=property1];
d398 -> d399  [key=0, style=solid];
d398 -> d400  [key=1, style=dashed, color=darkseagreen4, label=property2];
d401 -> d402  [key=0, style=solid];
d401 -> d403  [key=1, style=dashed, color=darkseagreen4, label=property3];
d404 -> d405  [key=0, style=solid];
d404 -> d406  [key=1, style=dashed, color=darkseagreen4, label=property4];
d407 -> d408  [key=0, style=solid];
d407 -> d409  [key=1, style=dashed, color=darkseagreen4, label=property5];
d30 -> d26  [key=0, style=bold, color=blue];
d43 -> d39  [key=0, style=bold, color=blue];
d45 -> d46  [key=0, style=solid];
d45 -> d47  [key=1, style=dashed, color=darkseagreen4, label=p];
d45 -> d49  [key=1, style=dashed, color=darkseagreen4, label=p];
d45 -> d50  [key=1, style=dashed, color=darkseagreen4, label=p];
d45 -> d52  [key=1, style=dashed, color=darkseagreen4, label=p];
d45 -> d53  [key=1, style=dashed, color=darkseagreen4, label=p];
d45 -> d55  [key=1, style=dashed, color=darkseagreen4, label=p];
d45 -> d56  [key=1, style=dashed, color=darkseagreen4, label=p];
d45 -> d58  [key=1, style=dashed, color=darkseagreen4, label=p];
d45 -> d59  [key=1, style=dashed, color=darkseagreen4, label=p];
d45 -> d61  [key=2, style=dotted];
d45 -> d48  [key=1, style=dashed, color=darkseagreen4, label=p];
d45 -> d51  [key=1, style=dashed, color=darkseagreen4, label=p];
d45 -> d54  [key=1, style=dashed, color=darkseagreen4, label=p];
d45 -> d57  [key=1, style=dashed, color=darkseagreen4, label=p];
d48 -> d49  [key=0, style=solid];
d51 -> d52  [key=0, style=solid];
d54 -> d55  [key=0, style=solid];
d57 -> d58  [key=0, style=solid];
d60 -> d44  [key=0, style=bold, color=blue];
d347 -> d77  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldSerializeProp1"];
d347 -> d348  [key=0, style=solid];
d79 -> d73  [key=0, style=bold, color=blue];
d92 -> d82  [key=0, style=bold, color=blue];
d117 -> d105  [key=0, style=bold, color=blue];
d137 -> d125  [key=0, style=bold, color=blue];
d153 -> d142  [key=0, style=bold, color=blue];
d170 -> d158  [key=0, style=bold, color=blue];
d179 -> d180  [key=0, style=solid];
d179 -> d186  [key=2, style=dotted];
d179 -> d96  [key=2, style=dotted];
d179 -> d187  [key=2, style=dotted];
d179 -> d188  [key=2, style=dotted];
d179 -> d181  [key=1, style=dashed, color=darkseagreen4, label=json];
d181 -> d184  [key=1, style=dashed, color=darkseagreen4, label=reader];
d181 -> d182  [key=0, style=solid];
d181 -> d189  [key=2, style=dotted];
d181 -> d190  [key=2, style=dotted];
d181 -> d183  [key=1, style=dashed, color=darkseagreen4, label=reader];
d183 -> d184  [key=0, style=solid];
d183 -> d191  [key=2, style=dotted];
d185 -> d178  [key=0, style=bold, color=blue];
d193 -> d194  [key=0, style=solid];
d193 -> d186  [key=2, style=dotted];
d193 -> d96  [key=2, style=dotted];
d193 -> d187  [key=2, style=dotted];
d193 -> d188  [key=2, style=dotted];
d193 -> d195  [key=1, style=dashed, color=darkseagreen4, label=json];
d195 -> d198  [key=1, style=dashed, color=darkseagreen4, label=reader];
d195 -> d196  [key=0, style=solid];
d195 -> d189  [key=2, style=dotted];
d195 -> d190  [key=2, style=dotted];
d195 -> d197  [key=1, style=dashed, color=darkseagreen4, label=reader];
d197 -> d198  [key=0, style=solid];
d197 -> d191  [key=2, style=dotted];
d199 -> d192  [key=0, style=bold, color=blue];
d244 -> d240  [key=0, style=bold, color=blue];
d284 -> d285  [key=0, style=solid];
d284 -> d71  [key=2, style=dotted];
d316 -> d318  [key=1, style=dashed, color=darkseagreen4, label=o];
d316 -> d319  [key=1, style=dashed, color=darkseagreen4, label=o];
d316 -> d317  [key=0, style=solid];
d316 -> d322  [key=2, style=dotted];
d317 -> d318  [key=0, style=solid];
d317 -> d323  [key=2, style=dotted];
d320 -> d309  [key=0, style=bold, color=blue];
d358 -> d350  [key=0, style=bold, color=blue];
d366 -> d359  [key=0, style=bold, color=blue];
d391 -> d372  [key=0, style=bold, color=blue];
d410 -> d392  [key=0, style=bold, color=blue];
d70 -> d64  [key=0, style=bold, color=blue];
d98 -> d99  [key=0, style=solid];
d414 -> d99  [key=1, style=dashed, color=darkseagreen4, label=resolver];
d100 -> d98  [key=0, style=bold, color=blue];
d118 -> d119  [key=0, style=solid];
d415 -> d119  [key=1, style=dashed, color=darkseagreen4, label=resolver];
d120 -> d118  [key=0, style=bold, color=blue];
d171 -> d172  [key=0, style=solid];
d416 -> d172  [key=1, style=dashed, color=darkseagreen4, label=resolver];
d173 -> d171  [key=0, style=bold, color=blue];
d249 -> d245  [key=0, style=bold, color=blue];
d263 -> d254  [key=0, style=bold, color=blue];
d274 -> d264  [key=0, style=bold, color=blue];
d285 -> d275  [key=0, style=bold, color=blue];
d309 -> d310  [key=0, style=solid];
d335 -> d324  [key=0, style=bold, color=blue];
d251 -> d252  [key=0, style=solid];
d288 -> d289  [key=0, style=solid];
d288 -> d290  [key=2, style=dotted];
d329 -> d330  [key=0, style=solid];
d329 -> d338  [key=2, style=dotted];
d329 -> d339  [key=2, style=dotted];
d329 -> d341  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d329 -> d344  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d329 -> d331  [key=1, style=dashed, color=darkseagreen4, label=dictionaryData];
d332 -> d333  [key=0, style=solid];
d332 -> d338  [key=2, style=dotted];
d332 -> d334  [key=1, style=dashed, color=darkseagreen4, label=extensionData];
d363 -> d364  [key=0, style=solid];
d363 -> d367  [key=2, style=dotted];
d396 -> d397  [key=0, style=solid];
d396 -> d367  [key=2, style=dotted];
d397 -> d398  [key=0, style=solid];
d397 -> d367  [key=2, style=dotted];
d399 -> d400  [key=0, style=solid];
d399 -> d367  [key=2, style=dotted];
d400 -> d401  [key=0, style=solid];
d400 -> d367  [key=2, style=dotted];
d44 -> d45  [key=0, style=solid];
d349 -> d347  [key=0, style=bold, color=blue];
d348 -> d349  [key=0, style=solid];
d178 -> d179  [key=0, style=solid];
d182 -> d183  [key=0, style=solid];
d182 -> d191  [key=2, style=dotted];
d192 -> d193  [key=0, style=solid];
d196 -> d197  [key=0, style=solid];
d196 -> d191  [key=2, style=dotted];
d287 -> d284  [key=1, style=dashed, color=darkseagreen4, label=ensureCustomCreatorCalled];
d287 -> d288  [key=0, style=solid];
d287 -> d289  [key=1, style=dashed, color=darkseagreen4, label=ensureCustomCreatorCalled];
d293 -> d96  [key=2, style=dotted];
d293 -> d299  [key=2, style=dotted];
d293 -> d294  [key=0, style=solid];
d293 -> d298  [key=2, style=dotted];
d303 -> d96  [key=2, style=dotted];
d303 -> d299  [key=2, style=dotted];
d303 -> d304  [key=0, style=solid];
d303 -> d0  [key=2, style=dotted];
d303 -> d305  [key=1, style=dashed, color=darkseagreen4, label=startingWithA];
d304 -> d96  [key=2, style=dotted];
d304 -> d299  [key=2, style=dotted];
d304 -> d305  [key=0, style=solid];
d304 -> d0  [key=2, style=dotted];
d304 -> d306  [key=1, style=dashed, color=darkseagreen4, label=startingWithB];
d294 -> d300  [key=2, style=dotted];
d294 -> d295  [key=0, style=solid];
d305 -> d300  [key=2, style=dotted];
d305 -> d306  [key=0, style=solid];
d306 -> d300  [key=2, style=dotted];
d306 -> d307  [key=0, style=solid];
d334 -> d335  [key=0, style=solid];
d334 -> d71  [key=2, style=dotted];
d334 -> d340  [key=2, style=dotted];
d202 -> d71  [key=2, style=dotted];
d202 -> d203  [key=0, style=solid];
d204 -> d71  [key=2, style=dotted];
d204 -> d205  [key=0, style=solid];
d206 -> d71  [key=2, style=dotted];
d206 -> d207  [key=0, style=solid];
d208 -> d71  [key=2, style=dotted];
d208 -> d209  [key=0, style=solid];
d210 -> d71  [key=2, style=dotted];
d210 -> d211  [key=0, style=solid];
d212 -> d71  [key=2, style=dotted];
d212 -> d213  [key=0, style=solid];
d214 -> d71  [key=2, style=dotted];
d214 -> d215  [key=0, style=solid];
d216 -> d71  [key=2, style=dotted];
d216 -> d217  [key=0, style=solid];
d218 -> d71  [key=2, style=dotted];
d218 -> d219  [key=0, style=solid];
d330 -> d71  [key=2, style=dotted];
d330 -> d331  [key=0, style=solid];
d330 -> d340  [key=2, style=dotted];
d331 -> d71  [key=2, style=dotted];
d331 -> d332  [key=0, style=solid];
d331 -> d340  [key=2, style=dotted];
d333 -> d71  [key=2, style=dotted];
d333 -> d334  [key=0, style=solid];
d333 -> d340  [key=2, style=dotted];
d220 -> d93  [key=2, style=dotted];
d220 -> d221  [key=0, style=solid];
d222 -> d93  [key=2, style=dotted];
d222 -> d223  [key=0, style=solid];
d224 -> d93  [key=2, style=dotted];
d224 -> d225  [key=0, style=solid];
d226 -> d93  [key=2, style=dotted];
d226 -> d227  [key=0, style=solid];
d228 -> d93  [key=2, style=dotted];
d228 -> d229  [key=0, style=solid];
d230 -> d93  [key=2, style=dotted];
d230 -> d231  [key=0, style=solid];
d232 -> d93  [key=2, style=dotted];
d232 -> d233  [key=0, style=solid];
d234 -> d93  [key=2, style=dotted];
d234 -> d235  [key=0, style=solid];
d236 -> d93  [key=2, style=dotted];
d236 -> d237  [key=0, style=solid];
d238 -> d93  [key=2, style=dotted];
d238 -> d239  [key=0, style=solid];
d253 -> d251  [key=0, style=bold, color=blue];
d252 -> d253  [key=0, style=solid];
d286 -> d288  [key=1, style=dashed, color=darkseagreen4, label="?"];
d286 -> d287  [key=0, style=solid];
d289 -> d286  [key=0, style=bold, color=blue];
d341 -> d342  [key=0, style=solid];
d344 -> d345  [key=0, style=solid];
d201 -> d61  [key=2, style=dotted];
d201 -> d202  [key=0, style=solid];
d203 -> d61  [key=2, style=dotted];
d203 -> d204  [key=0, style=solid];
d205 -> d61  [key=2, style=dotted];
d205 -> d206  [key=0, style=solid];
d207 -> d61  [key=2, style=dotted];
d207 -> d208  [key=0, style=solid];
d209 -> d61  [key=2, style=dotted];
d209 -> d210  [key=0, style=solid];
d211 -> d61  [key=2, style=dotted];
d211 -> d212  [key=0, style=solid];
d213 -> d61  [key=2, style=dotted];
d213 -> d214  [key=0, style=solid];
d215 -> d61  [key=2, style=dotted];
d215 -> d216  [key=0, style=solid];
d217 -> d61  [key=2, style=dotted];
d217 -> d218  [key=0, style=solid];
d219 -> d61  [key=2, style=dotted];
d219 -> d220  [key=0, style=solid];
d221 -> d61  [key=2, style=dotted];
d221 -> d222  [key=0, style=solid];
d223 -> d61  [key=2, style=dotted];
d223 -> d224  [key=0, style=solid];
d225 -> d61  [key=2, style=dotted];
d225 -> d226  [key=0, style=solid];
d227 -> d61  [key=2, style=dotted];
d227 -> d228  [key=0, style=solid];
d229 -> d61  [key=2, style=dotted];
d229 -> d230  [key=0, style=solid];
d231 -> d61  [key=2, style=dotted];
d231 -> d232  [key=0, style=solid];
d233 -> d61  [key=2, style=dotted];
d233 -> d234  [key=0, style=solid];
d235 -> d61  [key=2, style=dotted];
d235 -> d236  [key=0, style=solid];
d237 -> d61  [key=2, style=dotted];
d237 -> d238  [key=0, style=solid];
d292 -> d293  [key=0, style=solid];
d292 -> d296  [key=2, style=dotted];
d292 -> d297  [key=2, style=dotted];
d302 -> d303  [key=0, style=solid];
d302 -> d304  [key=1, style=dashed, color=darkseagreen4, label=book];
d302 -> d308  [key=2, style=dotted];
d0 -> d1  [key=0, style=solid];
d295 -> d291  [key=0, style=bold, color=blue];
d307 -> d301  [key=0, style=bold, color=blue];
d239 -> d200  [key=0, style=bold, color=blue];
d343 -> d341  [key=0, style=bold, color=blue];
d342 -> d343  [key=0, style=solid];
d342 -> d342  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<object, object>"];
d346 -> d344  [key=0, style=bold, color=blue];
d345 -> d346  [key=0, style=solid];
d345 -> d345  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<object, object>"];
d200 -> d201  [key=0, style=solid];
d291 -> d292  [key=0, style=solid];
d301 -> d302  [key=0, style=solid];
d2 -> d0  [key=0, style=bold, color=blue];
d1 -> d2  [key=0, style=solid];
d411 -> d1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver"];
d411 -> d4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver"];
d411 -> d5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver"];
d411 -> d12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver"];
d4 -> d5  [key=0, style=solid];
d4 -> d8  [key=2, style=dotted];
d5 -> d5  [key=1, style=dashed, color=darkseagreen4, label=properties];
d5 -> d6  [key=0, style=solid];
d5 -> d9  [key=2, style=dotted];
d5 -> d10  [key=2, style=dotted];
d5 -> d11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d12 -> d13  [key=0, style=solid];
d12 -> d14  [key=2, style=dotted];
d12 -> d15  [key=2, style=dotted];
d3 -> d4  [key=0, style=solid];
d6 -> d7  [key=0, style=solid];
d11 -> d12  [key=0, style=solid];
d13 -> d11  [key=0, style=bold, color=blue];
d7 -> d3  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_12  [key=2, style=dotted];
m0_2 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m0_2 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_13  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_13  [key=2, style=dotted];
m0_6 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label=employeeSchema];
m0_5 -> m0_6  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_15  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> d322  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_16  [key=2, style=dotted];
m0_11 -> m0_0  [key=0, style=bold, color=blue];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_45  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_43 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_43 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_43 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_43 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_43 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_43 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_43 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_43 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_43 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_43 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_43 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_43 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_43 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_43 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_43 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_43 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_63  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_64  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_63  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_63  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_63  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_63  [key=2, style=dotted];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_65  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_66  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_67  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_68  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_69  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_70  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_71  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_72  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_73  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_74  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_75  [key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_76  [key=2, style=dotted];
m1_62 -> m1_43  [key=0, style=bold, color=blue];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_8 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_8 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_8 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_8 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_8 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_8 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_8 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_8 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_8 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_8 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_8 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_8 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_8 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_8 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_8 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_8 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_28  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_29  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_30  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_30  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_30  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_30  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_31  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_32  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_33  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_34  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_35  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_36  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_37  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_38  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_39  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_40  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_41  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_42  [key=2, style=dotted];
m1_27 -> m1_8  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeOffset"];
m1_0 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.Organization.Person"];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [key=2, style=dotted];
m1_6 -> m1_0  [key=0, style=bold, color=blue];
m1_77 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m1_77 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject"];
m6_10 -> m6_4  [key=0, style=bold, color=blue];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> d323  [key=2, style=dotted];
m6_11 -> m6_14  [key=0, style=solid];
m6_14 -> m6_11  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid, color=green];
m6_1 -> m6_1  [key=3, color=green, style=bold, label="Field variable int _denominator"];
m6_1 -> m6_2  [key=0, style=solid, color=green];
m6_1 -> m6_9  [key=2, style=dotted, color=green];
m6_1 -> m6_4  [key=1, style=dashed, color=green, label=o];
m6_1 -> m6_6  [key=1, style=dashed, color=green, label=o];
m6_1 -> m6_3  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_10  [key=2, style=dotted];
m6_2 -> m6_0  [key=0, style=bold, color=blue];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_10  [key=2, style=dotted];
m6_4 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_10  [key=2, style=dotted];
m6_6 -> m6_8  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_12  [key=2, style=dotted];
m6_5 -> m6_11  [key=2, style=dotted];
m6_5 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label=value];
m6_5 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label=value];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> d323  [key=2, style=dotted];
m6_7 -> m6_10  [key=0, style=solid];
m6_7 -> m6_12  [key=2, style=dotted];
m6_8 -> m6_0  [key=0, style=bold, color=blue];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_13  [key=2, style=dotted];
m6_9 -> m6_10  [key=0, style=solid];
m6_15 -> m6_16  [key=0, style=solid];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_18  [key=2, style=dotted];
m6_17 -> m6_15  [key=0, style=bold, color=blue];
m6_19 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.CustomCreationConverter<T>"];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_5  [key=2, style=dotted];
m7_3 -> d323  [key=2, style=dotted];
m7_4 -> m7_2  [key=0, style=bold, color=blue];
m7_5 -> m7_7  [key=0, style=solid];
m7_5 -> m7_2  [key=3, color=green, style=bold, label="Parameter variable string json"];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_9  [key=2, style=dotted];
m7_8 -> m7_5  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [key=0, style=bold, color=blue];
m7_10 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestFixtureBase"];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_29 -> m8_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m8_29 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_29 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_29 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m8_29 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m8_29 -> m8_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m8_29 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m8_29 -> m8_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m8_29 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m8_29 -> m8_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m8_29 -> m8_14  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_34  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_33  [key=0, style=solid];
m8_31 -> m8_47  [key=2, style=dotted];
m8_32 -> m8_46  [key=0, style=solid];
m8_32 -> m8_23  [key=2, style=dotted];
m8_32 -> m8_48  [key=2, style=dotted];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_47  [key=2, style=dotted];
m8_34 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label=isNullable];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_49  [key=2, style=dotted];
m8_35 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label=t];
m8_35 -> m8_42  [key=1, style=dashed, color=darkseagreen4, label=t];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_39  [key=0, style=solid];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_50  [key=2, style=dotted];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_43  [key=0, style=solid];
m8_39 -> m8_45  [key=0, style=solid];
m8_41 -> m8_45  [key=0, style=solid];
m8_41 -> m8_23  [key=2, style=dotted];
m8_41 -> m8_48  [key=2, style=dotted];
m8_42 -> m8_46  [key=0, style=solid];
m8_42 -> m8_52  [key=2, style=dotted];
m8_44 -> m8_46  [key=0, style=solid];
m8_44 -> m8_53  [key=2, style=dotted];
m8_44 -> m8_54  [key=2, style=dotted];
m8_44 -> m8_55  [key=2, style=dotted];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_23  [key=2, style=dotted];
m8_45 -> m8_48  [key=2, style=dotted];
m8_33 -> m8_46  [key=0, style=solid];
m8_38 -> m8_46  [key=0, style=solid];
m8_38 -> m8_51  [key=2, style=dotted];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_42  [key=0, style=solid];
m8_43 -> m8_44  [key=0, style=solid];
m8_46 -> m8_29  [key=0, style=bold, color=blue];
m8_3 -> m8_4  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_3  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m8_6 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_6 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m8_6 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m8_6 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_10  [key=0, style=solid];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_20  [key=2, style=dotted];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label=e];
m8_14 -> m8_19  [key=0, style=solid];
m8_14 -> m8_23  [key=2, style=dotted];
m8_14 -> m8_24  [key=2, style=dotted];
m8_15 -> m8_19  [key=0, style=solid];
m8_15 -> m8_25  [key=2, style=dotted];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_28  [key=2, style=dotted];
m8_9 -> m8_19  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_21  [key=2, style=dotted];
m8_11 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label=enumName];
m8_11 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label=enumName];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> d81  [key=2, style=dotted];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_16  [key=0, style=solid];
m8_12 -> m8_22  [key=2, style=dotted];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_27  [key=2, style=dotted];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_15  [key=0, style=solid];
m8_19 -> m8_6  [key=0, style=bold, color=blue];
m8_56 -> m8_57  [key=0, style=solid];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_47  [key=2, style=dotted];
m8_57 -> m8_49  [key=2, style=dotted];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_60  [key=2, style=dotted];
m8_59 -> m8_56  [key=0, style=bold, color=blue];
m8_61 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.StringEnumConverter"];
m8_61 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.StringEnumConverter"];
m8_61 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.StringEnumConverter"];
m8_61 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.StringEnumConverter"];
m8_61 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.StringEnumConverter"];
m8_61 -> m8_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.StringEnumConverter"];
}
