digraph  {
m0_6 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="BsonObjectId.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="94-94"];
m0_7 [cluster="System.Exception.Exception(string)", file="BsonObjectId.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m0_0 [cluster="Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", file="BsonObjectId.cs", label="Entry Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", span="37-37"];
m0_1 [cluster="Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", color=green, community=0, file="BsonObjectId.cs", label="0: ValidationUtils.ArgumentNotNull(value, ''value'')", span="39-39"];
m0_2 [cluster="Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", color=green, community=0, file="BsonObjectId.cs", label="0: value.Length != 12", span="40-40"];
m0_4 [cluster="Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", file="BsonObjectId.cs", label="Value = value", span="43-43"];
m0_3 [cluster="Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", color=green, community=0, file="BsonObjectId.cs", label="0: throw new Exception(''An ObjectId must be 12 bytes'');", span="41-41"];
m0_5 [cluster="Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", file="BsonObjectId.cs", label="Exit Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", span="37-37"];
m0_8 [file="BsonObjectId.cs", label="Newtonsoft.Json.Bson.BsonObjectId", span=""];
m1_65 [cluster="System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)", file="BsonObjectIdConverter.cs", label="Entry System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)", span="0-0"];
m1_48 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", span="139-139"];
m1_49 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs", label="list.ContainsValue(value, comparer)", span="141-141"];
m1_51 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs", label="list.Add(value)", span="144-144"];
m1_50 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs", label="return false;", span="142-142"];
m1_52 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs", label="return true;", span="145-145"];
m1_53 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", span="139-139"];
m1_41 [cluster="System.Type.MakeGenericType(params System.Type[])", file="BsonObjectIdConverter.cs", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
m1_125 [cluster="System.Array.GetLength(int)", file="BsonObjectIdConverter.cs", label="Entry System.Array.GetLength(int)", span="0-0"];
m1_81 [cluster="System.Func<T, TResult>.Invoke(T)", file="BsonObjectIdConverter.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m1_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BsonObjectIdConverter.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_101 [cluster="System.Collections.Generic.List<T>.List()", file="BsonObjectIdConverter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_7 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="BsonObjectIdConverter.cs", label="throw new ArgumentNullException(''initial'');", span="67-67"];
m1_145 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="BsonObjectIdConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m1_28 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", span="104-104"];
m1_29 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs", label="Type genericEnumerable = typeof(IEnumerable<>).MakeGenericType(collectionItemType)", span="106-106"];
m1_31 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs", label="collectionType.GetConstructors(BindingFlags.Public | BindingFlags.Instance)", span="109-109"];
m1_30 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs", label="ConstructorInfo match = null", span="107-107"];
m1_34 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs", label="genericEnumerable == parameters[0].ParameterType", span="115-115"];
m1_37 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs", label="genericEnumerable.IsAssignableFrom(parameters[0].ParameterType)", span="125-125"];
m1_36 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs", label="match == null", span="123-123"];
m1_39 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs", label="return match;", span="131-131"];
m1_32 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs", label="IList<ParameterInfo> parameters = constructor.GetParameters()", span="111-111"];
m1_35 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs", label="match = constructor", span="118-118"];
m1_38 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs", label="match = constructor", span="126-126"];
m1_33 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs", label="parameters.Count == 1", span="113-113"];
m1_40 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", span="104-104"];
m1_15 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="BsonObjectIdConverter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="88-88"];
m1_16 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="BsonObjectIdConverter.cs", label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="90-90"];
m1_17 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="BsonObjectIdConverter.cs", label="typeof(IDictionary).IsAssignableFrom(type)", span="92-92"];
m1_19 [cluster="Newtonsoft.Json.Converters.BsonObjectIdConverter.CanConvert(System.Type)", color=green, community=0, file="BsonObjectIdConverter.cs", label="0: return (objectType == typeof (BsonObjectId));", span="39-39"];
m1_21 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="BsonObjectIdConverter.cs", label="ReflectionUtils.ImplementsGenericDefinition(type, typeof(IReadOnlyDictionary<,>))", span="97-97"];
m1_18 [cluster="Newtonsoft.Json.Converters.BsonObjectIdConverter.CanConvert(System.Type)", file="BsonObjectIdConverter.cs", label="Entry Newtonsoft.Json.Converters.BsonObjectIdConverter.CanConvert(System.Type)", span="37-37"];
m1_20 [cluster="Newtonsoft.Json.Converters.BsonObjectIdConverter.CanConvert(System.Type)", file="BsonObjectIdConverter.cs", label="Exit Newtonsoft.Json.Converters.BsonObjectIdConverter.CanConvert(System.Type)", span="37-37"];
m1_22 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="BsonObjectIdConverter.cs", label="return true;", span="98-98"];
m1_23 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="BsonObjectIdConverter.cs", label="return false;", span="101-101"];
m1_24 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="BsonObjectIdConverter.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="88-88"];
m1_90 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", span="214-214"];
m1_91 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs", label="IList<int> dimensions = new List<int>()", span="216-216"];
m1_92 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs", label="IList currentArray = values", span="218-218"];
m1_94 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs", label="dimensions.Add(currentArray.Count)", span="221-221"];
m1_99 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs", label="return dimensions;", span="232-232"];
m1_93 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs", label=true, span="219-219"];
m1_95 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs", label="currentArray.Count == 0", span="222-222"];
m1_96 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs", label="object v = currentArray[0]", span="225-225"];
m1_97 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs", label="v is IList", span="226-226"];
m1_98 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs", label="currentArray = (IList)v", span="227-227"];
m1_100 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", span="214-214"];
m1_102 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", span="235-235"];
m1_103 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs", label="int dimension = indices.Length", span="237-237"];
m1_104 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs", label="dimension == multidimensionalArray.Rank", span="238-238"];
m1_105 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs", label="multidimensionalArray.SetValue(JaggedArrayGetValue(values, indices), indices)", span="240-240"];
m1_107 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs", label="int dimensionLength = multidimensionalArray.GetLength(dimension)", span="244-244"];
m1_108 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs", label="IList list = (IList)JaggedArrayGetValue(values, indices)", span="245-245"];
m1_115 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs", label="newIndices[i] = indices[i]", span="253-253"];
m1_118 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs", label="i < multidimensionalArray.GetLength(dimension)", span="256-256"];
m1_120 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs", label="CopyFromJaggedToMultidimensionalArray(values, multidimensionalArray, newIndices)", span="259-259"];
m1_112 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs", label="int[] newIndices = new int[dimension + 1]", span="250-250"];
m1_114 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs", label="i < dimension", span="251-251"];
m1_119 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs", label="newIndices[dimension] = i", span="258-258"];
m1_106 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs", label="return;", span="241-241"];
m1_110 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs", label="currentValuesLength != dimensionLength", span="247-247"];
m1_109 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs", label="int currentValuesLength = list.Count", span="246-246"];
m1_111 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs", label="throw new Exception(''Cannot deserialize non-cubical array as multidimensional array.'');", span="248-248"];
m1_113 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs", label="int i = 0", span="251-251"];
m1_116 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs", label="i++", span="251-251"];
m1_117 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs", label="int i = 0", span="256-256"];
m1_121 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs", label="i++", span="256-256"];
m1_122 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", span="235-235"];
m1_43 [cluster="System.Reflection.MethodBase.GetParameters()", file="BsonObjectIdConverter.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m1_54 [cluster="System.Collections.Generic.IEnumerable<TSource>.ContainsValue<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ContainsValue<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="149-149"];
m1_42 [cluster="System.Type.GetConstructors(System.Reflection.BindingFlags)", file="BsonObjectIdConverter.cs", label="Entry System.Type.GetConstructors(System.Reflection.BindingFlags)", span="0-0"];
m1_27 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="BsonObjectIdConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", span="270-270"];
m1_8 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="BsonObjectIdConverter.cs", label="collection == null", span="69-69"];
m1_137 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="BsonObjectIdConverter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", span="277-277"];
m1_138 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="BsonObjectIdConverter.cs", label="IList<int> dimensions = GetDimensions(values)", span="279-279"];
m1_139 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="BsonObjectIdConverter.cs", label="dimensions.Count < rank", span="281-281"];
m1_141 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="BsonObjectIdConverter.cs", label="Array multidimensionalArray = Array.CreateInstance(type, dimensions.ToArray())", span="286-286"];
m1_142 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="BsonObjectIdConverter.cs", label="CopyFromJaggedToMultidimensionalArray(values, multidimensionalArray, new int[0])", span="287-287"];
m1_140 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="BsonObjectIdConverter.cs", label="dimensions.Add(0)", span="283-283"];
m1_143 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="BsonObjectIdConverter.cs", label="return multidimensionalArray;", span="289-289"];
m1_144 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="BsonObjectIdConverter.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", span="277-277"];
m1_123 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", span="263-263"];
m1_127 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs", label="IList currentList = values", span="265-265"];
m1_129 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs", label="i < indices.Length", span="266-266"];
m1_130 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs", label="int index = indices[i]", span="268-268"];
m1_131 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs", label="i == indices.Length - 1", span="269-269"];
m1_128 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs", label="int i = 0", span="266-266"];
m1_132 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs", label="return currentList[index];", span="270-270"];
m1_133 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs", label="currentList = (IList)currentList[index]", span="272-272"];
m1_135 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs", label="return currentList;", span="274-274"];
m1_134 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs", label="i++", span="266-266"];
m1_136 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", span="263-263"];
m1_146 [cluster="System.Array.CreateInstance(System.Type, params int[])", file="BsonObjectIdConverter.cs", label="Entry System.Array.CreateInstance(System.Type, params int[])", span="0-0"];
m1_14 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="BsonObjectIdConverter.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m1_82 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="200-200"];
m1_83 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs", label="int index = 0", span="202-202"];
m1_84 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs", label=list, span="203-203"];
m1_85 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs", label="comparer.Equals(item, value)", span="205-205"];
m1_86 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs", label="return index;", span="207-207"];
m1_87 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs", label="index++", span="209-209"];
m1_88 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs", label="return -1;", span="211-211"];
m1_89 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="200-200"];
m1_0 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="BsonObjectIdConverter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="50-50"];
m1_2 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", color=green, community=0, file="BsonObjectIdConverter.cs", label="0: return (collection.Count == 0);", span="54-54"];
m1_1 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="BsonObjectIdConverter.cs", label="collection != null", span="52-52"];
m1_3 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", color=green, community=0, file="BsonObjectIdConverter.cs", label="1: return true;", span="56-56"];
m1_4 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", color=green, community=0, file="BsonObjectIdConverter.cs", label="0: Exit Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="50-50"];
m1_5 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="BsonObjectIdConverter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", span="64-64"];
m1_6 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="BsonObjectIdConverter.cs", label="initial == null", span="66-66"];
m1_73 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="BsonObjectIdConverter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", span="178-178"];
m1_74 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="BsonObjectIdConverter.cs", label="int index = 0", span="180-180"];
m1_75 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="BsonObjectIdConverter.cs", label=collection, span="181-181"];
m1_76 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="BsonObjectIdConverter.cs", label="predicate(value)", span="183-183"];
m1_77 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="BsonObjectIdConverter.cs", label="return index;", span="184-184"];
m1_78 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="BsonObjectIdConverter.cs", label="index++", span="186-186"];
m1_79 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="BsonObjectIdConverter.cs", label="return -1;", span="189-189"];
m1_80 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="BsonObjectIdConverter.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", span="178-178"];
m1_66 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", span="166-166"];
m1_67 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs", label="bool allAdded = true", span="168-168"];
m1_68 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs", label=values, span="169-169"];
m1_69 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs", label="!list.AddDistinct(value, comparer)", span="171-171"];
m1_71 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs", label="return allAdded;", span="175-175"];
m1_70 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs", label="allAdded = false", span="172-172"];
m1_72 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", span="166-166"];
m1_44 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", file="BsonObjectIdConverter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", span="134-134"];
m1_45 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", file="BsonObjectIdConverter.cs", label="return list.AddDistinct(value, EqualityComparer<T>.Default);", span="136-136"];
m1_46 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", file="BsonObjectIdConverter.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", span="134-134"];
m1_25 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="BsonObjectIdConverter.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52"];
m1_26 [cluster="System.Type.IsAssignableFrom(System.Type)", file="BsonObjectIdConverter.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m1_10 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="BsonObjectIdConverter.cs", label=collection, span="72-72"];
m1_11 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="BsonObjectIdConverter.cs", label="initial.Add(value)", span="74-74"];
m1_9 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="BsonObjectIdConverter.cs", label="return;", span="70-70"];
m1_12 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="BsonObjectIdConverter.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", span="64-64"];
m1_124 [cluster="System.Array.SetValue(object, params int[])", file="BsonObjectIdConverter.cs", label="Entry System.Array.SetValue(object, params int[])", span="0-0"];
m1_126 [cluster="System.Exception.Exception(string)", file="BsonObjectIdConverter.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m1_47 [cluster="System.Collections.Generic.IList<T>.AddDistinct<T>(T, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs", label="Entry System.Collections.Generic.IList<T>.AddDistinct<T>(T, System.Collections.Generic.IEqualityComparer<T>)", span="139-139"];
m1_55 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="149-149"];
m1_56 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs", label="comparer == null", span="151-151"];
m1_58 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs", label="source == null", span="154-154"];
m1_60 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs", label=source, span="157-157"];
m1_61 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs", label="comparer.Equals(local, value)", span="159-159"];
m1_57 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs", label="comparer = EqualityComparer<TSource>.Default", span="152-152"];
m1_59 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs", label="throw new ArgumentNullException(''source'');", span="155-155"];
m1_63 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs", label="return false;", span="163-163"];
m1_62 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs", label="return true;", span="160-160"];
m1_64 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="149-149"];
m4_12 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="145-145"];
m4_13 [cluster="System.Uri.Uri(string)", file="DataTableConverter.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m4_11 [cluster="System.Console.WriteLine(object)", file="DataTableConverter.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m4_9 [cluster="object.GetType()", file="DataTableConverter.cs", label="Entry object.GetType()", span="0-0"];
m4_8 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="127-127"];
m4_10 [cluster="System.Console.WriteLine(string)", file="DataTableConverter.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m4_0 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JValueValue.Example()", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Linq.JValueValue.Example()", span="10-10"];
m4_1 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JValueValue.Example()", file="DataTableConverter.cs", label="JValue s = new JValue(''A string value'')", span="12-12"];
m4_2 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JValueValue.Example()", file="DataTableConverter.cs", label="Console.WriteLine(s.Value.GetType().Name)", span="14-14"];
m4_3 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JValueValue.Example()", file="DataTableConverter.cs", label="Console.WriteLine(s.Value)", span="16-16"];
m4_4 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JValueValue.Example()", file="DataTableConverter.cs", label="JValue u = new JValue(new Uri(''http://www.google.com/''))", span="19-19"];
m4_5 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JValueValue.Example()", file="DataTableConverter.cs", label="Console.WriteLine(u.Value.GetType().Name)", span="21-21"];
m4_6 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JValueValue.Example()", file="DataTableConverter.cs", label="Console.WriteLine(u.Value)", span="23-23"];
m4_7 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JValueValue.Example()", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Linq.JValueValue.Example()", span="10-10"];
m7_12 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", span="153-153"];
m7_13 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", file="JsonConvertTest.cs", label="return type.IsGenericType;", span="156-156"];
m7_14 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", span="153-153"];
m7_59 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", span="604-604"];
m7_60 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="JsonConvertTest.cs", label="Type match", span="606-606"];
m7_61 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="JsonConvertTest.cs", label="return type.AssignableToTypeName(fullTypeName, out match);", span="607-607"];
m7_62 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", span="604-604"];
m7_15 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", span="162-162"];
m7_16 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="JsonConvertTest.cs", label="return type.IsGenericTypeDefinition;", span="165-165"];
m7_17 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", span="162-162"];
m7_56 [cluster="string.Equals(string, string, System.StringComparison)", file="JsonConvertTest.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m7_18 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", span="171-171"];
m7_19 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="JsonConvertTest.cs", label="return type.BaseType;", span="174-174"];
m7_20 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", span="171-171"];
m7_36 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", span="558-558"];
m7_37 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", file="JsonConvertTest.cs", label="return type.IsVisible;", span="561-561"];
m7_38 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", span="558-558"];
m7_3 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", span="107-107"];
m7_4 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", file="JsonConvertTest.cs", label="return memberInfo.MemberType;", span="110-110"];
m7_5 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", span="107-107"];
m7_33 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", span="549-549"];
m7_34 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="JsonConvertTest.cs", label="return type.IsAbstract;", span="552-552"];
m7_35 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", span="549-549"];
m7_27 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", span="198-198"];
m7_28 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", file="JsonConvertTest.cs", label="return type.IsClass;", span="201-201"];
m7_29 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", span="198-198"];
m7_6 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", span="135-135"];
m7_7 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", file="JsonConvertTest.cs", label="return type.ContainsGenericParameters;", span="138-138"];
m7_8 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", span="135-135"];
m7_39 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", span="567-567"];
m7_40 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="JsonConvertTest.cs", label="return type.IsValueType;", span="570-570"];
m7_41 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", span="567-567"];
m7_24 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", span="189-189"];
m7_25 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="JsonConvertTest.cs", label="return type.IsEnum;", span="192-192"];
m7_26 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", span="189-189"];
m7_58 [cluster="System.Type.GetInterfaces()", file="JsonConvertTest.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m7_42 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", span="576-576"];
m7_43 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs", label="Type current = type", span="578-578"];
m7_45 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs", label="string.Equals(current.FullName, fullTypeName, StringComparison.Ordinal)", span="582-582"];
m7_49 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs", label="type.GetInterfaces()", span="591-591"];
m7_50 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs", label="string.Equals(i.Name, fullTypeName, StringComparison.Ordinal)", span="593-593"];
m7_51 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs", label="match = type", span="595-595"];
m7_44 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs", label="current != null", span="580-580"];
m7_46 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs", label="match = current", span="584-584"];
m7_48 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs", label="current = current.BaseType()", span="588-588"];
m7_47 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs", label="return true;", span="585-585"];
m7_53 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs", label="match = null", span="600-600"];
m7_52 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs", label="return true;", span="596-596"];
m7_54 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs", label="return false;", span="601-601"];
m7_55 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", span="576-576"];
m7_9 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", span="144-144"];
m7_10 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="JsonConvertTest.cs", label="return type.IsInterface;", span="147-147"];
m7_11 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", span="144-144"];
m7_30 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", span="207-207"];
m7_31 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="JsonConvertTest.cs", label="return type.IsSealed;", span="210-210"];
m7_32 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", span="207-207"];
m7_0 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", span="98-98"];
m7_1 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="JsonConvertTest.cs", label="return d.Method;", span="101-101"];
m7_2 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", span="98-98"];
m7_74 [cluster="System.Type.ImplementInterface(System.Type)", file="JsonConvertTest.cs", label="Entry System.Type.ImplementInterface(System.Type)", span="610-610"];
m7_57 [cluster="System.Type.BaseType()", file="JsonConvertTest.cs", label="Entry System.Type.BaseType()", span="171-171"];
m7_64 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", span="610-610"];
m7_65 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonConvertTest.cs", label="Type currentType = type", span="612-612"];
m7_69 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonConvertTest.cs", label="i == interfaceType || (i != null && i.ImplementInterface(interfaceType))", span="617-617"];
m7_66 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonConvertTest.cs", label="currentType != null", span="612-612"];
m7_67 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonConvertTest.cs", label="IEnumerable<Type> interfaces = currentType.GetInterfaces()", span="614-614"];
m7_71 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonConvertTest.cs", label="currentType = currentType.BaseType()", span="612-612"];
m7_72 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonConvertTest.cs", label="return false;", span="624-624"];
m7_68 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonConvertTest.cs", label=interfaces, span="615-615"];
m7_70 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonConvertTest.cs", label="return true;", span="619-619"];
m7_73 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", span="610-610"];
m7_63 [cluster="System.Type.AssignableToTypeName(string, out System.Type)", file="JsonConvertTest.cs", label="Entry System.Type.AssignableToTypeName(string, out System.Type)", span="576-576"];
m7_21 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", span="180-180"];
m7_22 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", file="JsonConvertTest.cs", label="return type.Assembly;", span="183-183"];
m7_23 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", span="180-180"];
m9_2 [cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", file="JsonPropertyAttribute.cs", label="Entry Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", span="100-100"];
m9_3 [cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", file="JsonPropertyAttribute.cs", label="PropertyName = propertyName", span="102-102"];
m9_4 [cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", file="JsonPropertyAttribute.cs", label="Exit Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", span="100-100"];
m9_0 [cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute()", file="JsonPropertyAttribute.cs", label="Entry Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute()", span="92-92"];
m9_1 [cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute()", file="JsonPropertyAttribute.cs", label="Exit Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute()", span="92-92"];
m9_5 [file="JsonPropertyAttribute.cs", label="Newtonsoft.Json.JsonPropertyAttribute", span=""];
m12_0 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.GetPosts()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.GetPosts()", span="18-18"];
m12_1 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.GetPosts()", file="JTokenReader.cs", label="return null;", span="20-20"];
m12_2 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.GetPosts()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.GetPosts()", span="18-18"];
m12_8 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113"];
m12_3 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.Example()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.Example()", span="22-22"];
m12_4 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.Example()", file="JTokenReader.cs", label="List<Post> posts = GetPosts()", span="24-24"];
m12_5 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.Example()", file="JTokenReader.cs", label="JObject rss =\r\n        new JObject(\r\n          new JProperty(''channel'',\r\n            new JObject(\r\n              new JProperty(''title'', ''James Newton-King''),\r\n              new JProperty(''link'', ''http://james.newtonking.com''),\r\n              new JProperty(''description'', ''James Newton-King's blog.''),\r\n              new JProperty(''item'',\r\n                new JArray(\r\n                  from p in posts\r\n                  orderby p.Title\r\n                  select new JObject(\r\n                    new JProperty(''title'', p.Title),\r\n                    new JProperty(''description'', p.Description),\r\n                    new JProperty(''link'', p.Link),\r\n                    new JProperty(''category'',\r\n                      new JArray(\r\n                        from c in p.Categories\r\n                        select new JValue(c)))))))))", span="26-44"];
m12_6 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.Example()", file="JTokenReader.cs", label="Console.WriteLine(rss.ToString())", span="46-46"];
m12_7 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.Example()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.Example()", span="22-22"];
m12_12 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="127-127"];
m12_9 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="192-192"];
m12_10 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104"];
m12_14 [cluster="System.Console.WriteLine(string)", file="JTokenReader.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m12_13 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="389-389"];
m12_11 [cluster="JArray.cstr", file="JTokenReader.cs", label="Entry JArray.cstr", span=""];
m12_15 [file="JTokenReader.cs", label="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively", span=""];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_0 -> m0_2  [color=green, key=1, label="byte[]", style=dashed];
m0_0 -> m0_4  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_6  [color=green, key=2, style=dotted];
m0_2 -> m0_3  [color=green, key=0, style=solid];
m0_2 -> m0_4  [color=green, key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_3 -> m0_5  [color=green, key=0, style=solid];
m0_3 -> m0_7  [color=green, key=2, style=dotted];
m0_5 -> m0_0  [color=blue, key=0, style=bold];
m0_8 -> m0_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonObjectId", style=dashed];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_51  [key=0, style=solid];
m1_49 -> m1_54  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_14  [key=2, style=dotted];
m1_50 -> m1_53  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_53 -> m1_48  [color=blue, key=0, style=bold];
m1_7 -> m1_12  [key=0, style=solid];
m1_7 -> m1_13  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_31  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_41  [key=2, style=dotted];
m1_29 -> m1_34  [color=darkseagreen4, key=1, label=genericEnumerable, style=dashed];
m1_29 -> m1_37  [color=darkseagreen4, key=1, label=genericEnumerable, style=dashed];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_39  [key=0, style=solid];
m1_31 -> m1_42  [key=2, style=dotted];
m1_31 -> m1_35  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m1_31 -> m1_38  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_36  [color=darkseagreen4, key=1, label=match, style=dashed];
m1_30 -> m1_39  [color=darkseagreen4, key=1, label=match, style=dashed];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_36  [key=0, style=solid];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_31  [key=0, style=solid];
m1_37 -> m1_26  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_31  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_43  [key=2, style=dotted];
m1_32 -> m1_34  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m1_32 -> m1_37  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m1_35 -> m1_39  [key=0, style=solid];
m1_35 -> m1_36  [color=darkseagreen4, key=1, label=match, style=dashed];
m1_38 -> m1_31  [key=0, style=solid];
m1_38 -> m1_39  [color=darkseagreen4, key=1, label=match, style=dashed];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_31  [key=0, style=solid];
m1_40 -> m1_28  [color=blue, key=0, style=bold];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_15 -> m1_19  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_15 -> m1_21  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_25  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_19  [key=0, style=solid];
m1_17 -> m1_26  [key=2, style=dotted];
m1_19 -> m1_20  [color=green, key=0, style=solid];
m1_19 -> m1_21  [key=0, style=solid];
m1_19 -> m1_27  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=0, style=solid];
m1_21 -> m1_27  [key=2, style=dotted];
m1_18 -> m1_24  [key=0, style=solid];
m1_18 -> m1_19  [color=green, key=0, style=solid];
m1_20 -> m1_24  [key=0, style=solid];
m1_20 -> m1_18  [color=blue, key=0, style=bold];
m1_22 -> m1_24  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_24 -> m1_15  [color=blue, key=0, style=bold];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_92  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_101  [key=2, style=dotted];
m1_91 -> m1_94  [color=darkseagreen4, key=1, label=dimensions, style=dashed];
m1_91 -> m1_99  [color=darkseagreen4, key=1, label=dimensions, style=dashed];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_94  [color=darkseagreen4, key=1, label=currentArray, style=dashed];
m1_92 -> m1_95  [color=darkseagreen4, key=1, label=currentArray, style=dashed];
m1_92 -> m1_96  [color=darkseagreen4, key=1, label=currentArray, style=dashed];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_14  [key=2, style=dotted];
m1_99 -> m1_100  [key=0, style=solid];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_99  [key=0, style=solid];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_99  [key=0, style=solid];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_98  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_99  [key=0, style=solid];
m1_98 -> m1_93  [key=0, style=solid];
m1_100 -> m1_90  [color=blue, key=0, style=bold];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_104  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m1_102 -> m1_105  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m1_102 -> m1_107  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m1_102 -> m1_108  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m1_102 -> m1_115  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m1_102 -> m1_118  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m1_102 -> m1_120  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_107  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m1_103 -> m1_112  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m1_103 -> m1_114  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m1_103 -> m1_118  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m1_103 -> m1_119  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_107  [key=0, style=solid];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_123  [key=2, style=dotted];
m1_105 -> m1_124  [key=2, style=dotted];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_125  [key=2, style=dotted];
m1_107 -> m1_110  [color=darkseagreen4, key=1, label=dimensionLength, style=dashed];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_123  [key=2, style=dotted];
m1_115 -> m1_116  [key=0, style=solid];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_122  [key=0, style=solid];
m1_118 -> m1_125  [key=2, style=dotted];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_102  [key=2, style=dotted];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_115  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
m1_112 -> m1_119  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
m1_112 -> m1_120  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_117  [key=0, style=solid];
m1_119 -> m1_120  [key=0, style=solid];
m1_106 -> m1_122  [key=0, style=solid];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_112  [key=0, style=solid];
m1_109 -> m1_110  [key=0, style=solid];
m1_111 -> m1_122  [key=0, style=solid];
m1_111 -> m1_126  [key=2, style=dotted];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_115  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_113 -> m1_116  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_116 -> m1_114  [key=0, style=solid];
m1_116 -> m1_116  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_119  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_117 -> m1_121  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_121 -> m1_118  [key=0, style=solid];
m1_121 -> m1_121  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_122 -> m1_102  [color=blue, key=0, style=bold];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_10  [key=0, style=solid];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_139  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_137 -> m1_141  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_137 -> m1_142  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_90  [key=2, style=dotted];
m1_138 -> m1_140  [color=darkseagreen4, key=1, label=dimensions, style=dashed];
m1_138 -> m1_141  [color=darkseagreen4, key=1, label=dimensions, style=dashed];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_141  [key=0, style=solid];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_145  [key=2, style=dotted];
m1_141 -> m1_146  [key=2, style=dotted];
m1_141 -> m1_143  [color=darkseagreen4, key=1, label=multidimensionalArray, style=dashed];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_102  [key=2, style=dotted];
m1_140 -> m1_139  [key=0, style=solid];
m1_140 -> m1_14  [key=2, style=dotted];
m1_143 -> m1_144  [key=0, style=solid];
m1_144 -> m1_137  [color=blue, key=0, style=bold];
m1_123 -> m1_127  [key=0, style=solid];
m1_123 -> m1_129  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m1_123 -> m1_130  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m1_123 -> m1_131  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_132  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m1_127 -> m1_133  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m1_127 -> m1_135  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_135  [key=0, style=solid];
m1_130 -> m1_131  [key=0, style=solid];
m1_130 -> m1_132  [color=darkseagreen4, key=1, label=index, style=dashed];
m1_130 -> m1_133  [color=darkseagreen4, key=1, label=index, style=dashed];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_133  [key=0, style=solid];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_130  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_128 -> m1_131  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_128 -> m1_134  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_132 -> m1_136  [key=0, style=solid];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_133  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m1_133 -> m1_135  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m1_135 -> m1_136  [key=0, style=solid];
m1_134 -> m1_129  [key=0, style=solid];
m1_134 -> m1_134  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_136 -> m1_123  [color=blue, key=0, style=bold];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_84  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m1_82 -> m1_85  [color=darkseagreen4, key=1, label=TSource, style=dashed];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_86  [color=darkseagreen4, key=1, label=index, style=dashed];
m1_83 -> m1_87  [color=darkseagreen4, key=1, label=index, style=dashed];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_88  [key=0, style=solid];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_87  [key=0, style=solid];
m1_85 -> m1_65  [key=2, style=dotted];
m1_86 -> m1_89  [key=0, style=solid];
m1_87 -> m1_84  [key=0, style=solid];
m1_87 -> m1_87  [color=darkseagreen4, key=1, label=index, style=dashed];
m1_88 -> m1_89  [key=0, style=solid];
m1_89 -> m1_82  [color=blue, key=0, style=bold];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<T>", style=dashed];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_2 -> m1_3  [color=green, key=0, style=solid];
m1_2 -> m1_4  [color=green, key=1, label=bsonWriter, style=dashed];
m1_1 -> m1_2  [color=green, key=0, style=solid];
m1_1 -> m1_4  [color=green, key=1, label=objectId, style=dashed];
m1_1 -> m1_5  [color=darkseagreen4, key=1, label=objectId, style=dashed];
m1_1 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [color=green, key=0, style=solid];
m1_3 -> m1_5  [color=green, key=0, style=solid];
m1_4 -> m1_6  [color=green, key=0, style=solid];
m1_4 -> m1_7  [color=green, key=2, style=dotted];
m1_4 -> m1_0  [color=blue, key=0, style=bold];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_8  [key=2, style=dotted];
m1_5 -> m1_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m1_5 -> m1_11  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m1_6 -> m1_0  [color=blue, key=0, style=bold];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_8  [key=0, style=solid];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_75  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m1_73 -> m1_76  [color=darkseagreen4, key=1, label="System.Func<T, bool>", style=dashed];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_77  [color=darkseagreen4, key=1, label=index, style=dashed];
m1_74 -> m1_78  [color=darkseagreen4, key=1, label=index, style=dashed];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_79  [key=0, style=solid];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_78  [key=0, style=solid];
m1_76 -> m1_81  [key=2, style=dotted];
m1_77 -> m1_80  [key=0, style=solid];
m1_78 -> m1_75  [key=0, style=solid];
m1_78 -> m1_78  [color=darkseagreen4, key=1, label=index, style=dashed];
m1_79 -> m1_80  [key=0, style=solid];
m1_80 -> m1_73  [color=blue, key=0, style=bold];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_68  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m1_66 -> m1_69  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_71  [color=darkseagreen4, key=1, label=allAdded, style=dashed];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_71  [key=0, style=solid];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_68  [key=0, style=solid];
m1_69 -> m1_47  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_70 -> m1_68  [key=0, style=solid];
m1_70 -> m1_71  [color=darkseagreen4, key=1, label=allAdded, style=dashed];
m1_72 -> m1_66  [color=blue, key=0, style=bold];
m1_44 -> m1_45  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_47  [key=2, style=dotted];
m1_46 -> m1_44  [color=blue, key=0, style=bold];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_12  [key=0, style=solid];
m1_11 -> m1_10  [key=0, style=solid];
m1_11 -> m1_14  [key=2, style=dotted];
m1_9 -> m1_12  [key=0, style=solid];
m1_12 -> m1_5  [color=blue, key=0, style=bold];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_58  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m1_55 -> m1_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m1_55 -> m1_61  [color=darkseagreen4, key=1, label=TSource, style=dashed];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_58  [key=0, style=solid];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_60  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_63  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_60  [key=0, style=solid];
m1_61 -> m1_65  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_61  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEqualityComparer<TSource>", style=dashed];
m1_59 -> m1_64  [key=0, style=solid];
m1_59 -> m1_13  [key=2, style=dotted];
m1_63 -> m1_64  [key=0, style=solid];
m1_62 -> m1_64  [key=0, style=solid];
m1_64 -> m1_55  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_8  [key=2, style=dotted];
m4_1 -> m4_3  [color=darkseagreen4, key=1, label=s, style=dashed];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_9  [key=2, style=dotted];
m4_2 -> m4_10  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_11  [key=2, style=dotted];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_12  [key=2, style=dotted];
m4_4 -> m4_13  [key=2, style=dotted];
m4_4 -> m4_6  [color=darkseagreen4, key=1, label=u, style=dashed];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_9  [key=2, style=dotted];
m4_5 -> m4_10  [key=2, style=dotted];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_11  [key=2, style=dotted];
m4_7 -> m4_0  [color=blue, key=0, style=bold];
m7_12 -> m7_13  [key=0, style=solid];
m7_13 -> m7_14  [key=0, style=solid];
m7_14 -> m7_12  [color=blue, key=0, style=bold];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_61  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m7_60 -> m7_61  [key=0, style=solid];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_63  [key=2, style=dotted];
m7_62 -> m7_59  [color=blue, key=0, style=bold];
m7_15 -> m7_16  [key=0, style=solid];
m7_16 -> m7_17  [key=0, style=solid];
m7_17 -> m7_15  [color=blue, key=0, style=bold];
m7_18 -> m7_19  [key=0, style=solid];
m7_19 -> m7_20  [key=0, style=solid];
m7_20 -> m7_18  [color=blue, key=0, style=bold];
m7_36 -> m7_37  [key=0, style=solid];
m7_37 -> m7_38  [key=0, style=solid];
m7_38 -> m7_36  [color=blue, key=0, style=bold];
m7_3 -> m7_4  [key=0, style=solid];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_3  [color=blue, key=0, style=bold];
m7_33 -> m7_34  [key=0, style=solid];
m7_34 -> m7_35  [key=0, style=solid];
m7_35 -> m7_33  [color=blue, key=0, style=bold];
m7_27 -> m7_28  [key=0, style=solid];
m7_28 -> m7_29  [key=0, style=solid];
m7_29 -> m7_27  [color=blue, key=0, style=bold];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_8 -> m7_6  [color=blue, key=0, style=bold];
m7_39 -> m7_40  [key=0, style=solid];
m7_40 -> m7_41  [key=0, style=solid];
m7_41 -> m7_39  [color=blue, key=0, style=bold];
m7_24 -> m7_25  [key=0, style=solid];
m7_25 -> m7_26  [key=0, style=solid];
m7_26 -> m7_24  [color=blue, key=0, style=bold];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_42 -> m7_49  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m7_42 -> m7_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_42 -> m7_51  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_45  [color=darkseagreen4, key=1, label=current, style=dashed];
m7_43 -> m7_46  [color=darkseagreen4, key=1, label=current, style=dashed];
m7_43 -> m7_48  [color=darkseagreen4, key=1, label=current, style=dashed];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_48  [key=0, style=solid];
m7_45 -> m7_56  [key=2, style=dotted];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> m7_53  [key=0, style=solid];
m7_49 -> m7_58  [key=2, style=dotted];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_49  [key=0, style=solid];
m7_50 -> m7_56  [key=2, style=dotted];
m7_51 -> m7_52  [key=0, style=solid];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_49  [key=0, style=solid];
m7_46 -> m7_47  [key=0, style=solid];
m7_48 -> m7_44  [key=0, style=solid];
m7_48 -> m7_57  [key=2, style=dotted];
m7_48 -> m7_48  [color=darkseagreen4, key=1, label=current, style=dashed];
m7_47 -> m7_55  [key=0, style=solid];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_55  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m7_52 -> m7_55  [key=0, style=solid];
m7_54 -> m7_55  [key=0, style=solid];
m7_55 -> m7_42  [color=blue, key=0, style=bold];
m7_9 -> m7_10  [key=0, style=solid];
m7_10 -> m7_11  [key=0, style=solid];
m7_11 -> m7_9  [color=blue, key=0, style=bold];
m7_30 -> m7_31  [key=0, style=solid];
m7_31 -> m7_32  [key=0, style=solid];
m7_32 -> m7_30  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m7_64 -> m7_65  [key=0, style=solid];
m7_64 -> m7_69  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m7_65 -> m7_66  [key=0, style=solid];
m7_65 -> m7_67  [color=darkseagreen4, key=1, label=currentType, style=dashed];
m7_65 -> m7_71  [color=darkseagreen4, key=1, label=currentType, style=dashed];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_68  [key=0, style=solid];
m7_69 -> m7_74  [key=2, style=dotted];
m7_66 -> m7_67  [key=0, style=solid];
m7_66 -> m7_72  [key=0, style=solid];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_58  [key=2, style=dotted];
m7_71 -> m7_66  [key=0, style=solid];
m7_71 -> m7_57  [key=2, style=dotted];
m7_71 -> m7_71  [color=darkseagreen4, key=1, label=currentType, style=dashed];
m7_72 -> m7_73  [key=0, style=solid];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_71  [key=0, style=solid];
m7_70 -> m7_73  [key=0, style=solid];
m7_73 -> m7_64  [color=blue, key=0, style=bold];
m7_21 -> m7_22  [key=0, style=solid];
m7_22 -> m7_23  [key=0, style=solid];
m7_23 -> m7_21  [color=blue, key=0, style=bold];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_4  [key=0, style=solid];
m9_4 -> m9_2  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [color=blue, key=0, style=bold];
m9_5 -> m9_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonPropertyAttribute", style=dashed];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_2 -> m12_0  [color=blue, key=0, style=bold];
m12_3 -> m12_4  [key=0, style=solid];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_0  [key=2, style=dotted];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_8  [key=2, style=dotted];
m12_5 -> m12_9  [key=2, style=dotted];
m12_5 -> m12_10  [key=2, style=dotted];
m12_5 -> m12_11  [key=2, style=dotted];
m12_5 -> m12_12  [key=2, style=dotted];
m12_5 -> m12_5  [color=darkseagreen4, key=1, label=p, style=dashed];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_13  [key=2, style=dotted];
m12_6 -> m12_14  [key=2, style=dotted];
m12_7 -> m12_3  [color=blue, key=0, style=bold];
m12_15 -> m12_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively", style=dashed];
}
