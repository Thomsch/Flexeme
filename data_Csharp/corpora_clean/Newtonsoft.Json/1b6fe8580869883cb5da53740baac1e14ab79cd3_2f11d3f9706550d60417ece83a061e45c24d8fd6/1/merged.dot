digraph  {
m0_6 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="94-94", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="BsonObjectId.cs"];
m0_7 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="BsonObjectId.cs"];
m0_0 [label="Entry Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", span="37-37", cluster="Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", file="BsonObjectId.cs"];
m0_1 [label="ValidationUtils.ArgumentNotNull(value, ''value'')", span="39-39", cluster="Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", file="BsonObjectId.cs", color=green, community=0];
m0_2 [label="value.Length != 12", span="40-40", cluster="Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", file="BsonObjectId.cs", color=green, community=0];
m0_4 [label="Value = value", span="43-43", cluster="Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", file="BsonObjectId.cs"];
m0_3 [label="throw new Exception(''An ObjectId must be 12 bytes'');", span="41-41", cluster="Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", file="BsonObjectId.cs", color=green, community=0];
m0_5 [label="Exit Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", span="37-37", cluster="Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", file="BsonObjectId.cs"];
m0_8 [label="Newtonsoft.Json.Bson.BsonObjectId", span="", file="BsonObjectId.cs"];
m1_65 [label="Entry System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)", span="0-0", cluster="System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)", file="BsonObjectIdConverter.cs"];
m1_48 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", span="139-139", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs"];
m1_49 [label="list.ContainsValue(value, comparer)", span="141-141", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs"];
m1_51 [label="list.Add(value)", span="144-144", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs"];
m1_50 [label="return false;", span="142-142", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs"];
m1_52 [label="return true;", span="145-145", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs"];
m1_53 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", span="139-139", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs"];
m1_41 [label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])", file="BsonObjectIdConverter.cs"];
m1_125 [label="Entry System.Array.GetLength(int)", span="0-0", cluster="System.Array.GetLength(int)", file="BsonObjectIdConverter.cs"];
m1_81 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="BsonObjectIdConverter.cs"];
m1_13 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BsonObjectIdConverter.cs"];
m1_101 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BsonObjectIdConverter.cs"];
m1_7 [label="throw new ArgumentNullException(''initial'');", span="67-67", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="BsonObjectIdConverter.cs"];
m1_145 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="BsonObjectIdConverter.cs"];
m1_28 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", span="104-104", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs"];
m1_29 [label="Type genericEnumerable = typeof(IEnumerable<>).MakeGenericType(collectionItemType)", span="106-106", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs"];
m1_31 [label="collectionType.GetConstructors(BindingFlags.Public | BindingFlags.Instance)", span="109-109", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs"];
m1_30 [label="ConstructorInfo match = null", span="107-107", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs"];
m1_34 [label="genericEnumerable == parameters[0].ParameterType", span="115-115", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs"];
m1_37 [label="genericEnumerable.IsAssignableFrom(parameters[0].ParameterType)", span="125-125", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs"];
m1_36 [label="match == null", span="123-123", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs"];
m1_39 [label="return match;", span="131-131", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs"];
m1_32 [label="IList<ParameterInfo> parameters = constructor.GetParameters()", span="111-111", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs"];
m1_35 [label="match = constructor", span="118-118", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs"];
m1_38 [label="match = constructor", span="126-126", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs"];
m1_33 [label="parameters.Count == 1", span="113-113", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs"];
m1_40 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", span="104-104", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="BsonObjectIdConverter.cs"];
m1_15 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="88-88", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="BsonObjectIdConverter.cs"];
m1_16 [label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="90-90", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="BsonObjectIdConverter.cs"];
m1_17 [label="typeof(IDictionary).IsAssignableFrom(type)", span="92-92", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="BsonObjectIdConverter.cs"];
m1_19 [label="return (objectType == typeof (BsonObjectId));", span="39-39", cluster="Newtonsoft.Json.Converters.BsonObjectIdConverter.CanConvert(System.Type)", file="BsonObjectIdConverter.cs", color=green, community=0];
m1_21 [label="ReflectionUtils.ImplementsGenericDefinition(type, typeof(IReadOnlyDictionary<,>))", span="97-97", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="BsonObjectIdConverter.cs"];
m1_18 [label="Entry Newtonsoft.Json.Converters.BsonObjectIdConverter.CanConvert(System.Type)", span="37-37", cluster="Newtonsoft.Json.Converters.BsonObjectIdConverter.CanConvert(System.Type)", file="BsonObjectIdConverter.cs"];
m1_20 [label="Exit Newtonsoft.Json.Converters.BsonObjectIdConverter.CanConvert(System.Type)", span="37-37", cluster="Newtonsoft.Json.Converters.BsonObjectIdConverter.CanConvert(System.Type)", file="BsonObjectIdConverter.cs"];
m1_22 [label="return true;", span="98-98", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="BsonObjectIdConverter.cs"];
m1_23 [label="return false;", span="101-101", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="BsonObjectIdConverter.cs"];
m1_24 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="88-88", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="BsonObjectIdConverter.cs"];
m1_90 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", span="214-214", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs"];
m1_91 [label="IList<int> dimensions = new List<int>()", span="216-216", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs"];
m1_92 [label="IList currentArray = values", span="218-218", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs"];
m1_94 [label="dimensions.Add(currentArray.Count)", span="221-221", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs"];
m1_99 [label="return dimensions;", span="232-232", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs"];
m1_93 [label=true, span="219-219", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs"];
m1_95 [label="currentArray.Count == 0", span="222-222", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs"];
m1_96 [label="object v = currentArray[0]", span="225-225", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs"];
m1_97 [label="v is IList", span="226-226", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs"];
m1_98 [label="currentArray = (IList)v", span="227-227", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs"];
m1_100 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", span="214-214", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="BsonObjectIdConverter.cs"];
m1_102 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", span="235-235", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs"];
m1_103 [label="int dimension = indices.Length", span="237-237", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs"];
m1_104 [label="dimension == multidimensionalArray.Rank", span="238-238", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs"];
m1_105 [label="multidimensionalArray.SetValue(JaggedArrayGetValue(values, indices), indices)", span="240-240", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs"];
m1_107 [label="int dimensionLength = multidimensionalArray.GetLength(dimension)", span="244-244", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs"];
m1_108 [label="IList list = (IList)JaggedArrayGetValue(values, indices)", span="245-245", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs"];
m1_115 [label="newIndices[i] = indices[i]", span="253-253", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs"];
m1_118 [label="i < multidimensionalArray.GetLength(dimension)", span="256-256", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs"];
m1_120 [label="CopyFromJaggedToMultidimensionalArray(values, multidimensionalArray, newIndices)", span="259-259", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs"];
m1_112 [label="int[] newIndices = new int[dimension + 1]", span="250-250", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs"];
m1_114 [label="i < dimension", span="251-251", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs"];
m1_119 [label="newIndices[dimension] = i", span="258-258", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs"];
m1_106 [label="return;", span="241-241", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs"];
m1_110 [label="currentValuesLength != dimensionLength", span="247-247", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs"];
m1_109 [label="int currentValuesLength = list.Count", span="246-246", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs"];
m1_111 [label="throw new Exception(''Cannot deserialize non-cubical array as multidimensional array.'');", span="248-248", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs"];
m1_113 [label="int i = 0", span="251-251", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs"];
m1_116 [label="i++", span="251-251", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs"];
m1_117 [label="int i = 0", span="256-256", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs"];
m1_121 [label="i++", span="256-256", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs"];
m1_122 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", span="235-235", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="BsonObjectIdConverter.cs"];
m1_43 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="BsonObjectIdConverter.cs"];
m1_54 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ContainsValue<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="149-149", cluster="System.Collections.Generic.IEnumerable<TSource>.ContainsValue<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs"];
m1_42 [label="Entry System.Type.GetConstructors(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetConstructors(System.Reflection.BindingFlags)", file="BsonObjectIdConverter.cs"];
m1_27 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", span="270-270", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="BsonObjectIdConverter.cs"];
m1_8 [label="collection == null", span="69-69", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="BsonObjectIdConverter.cs"];
m1_137 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", span="277-277", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="BsonObjectIdConverter.cs"];
m1_138 [label="IList<int> dimensions = GetDimensions(values)", span="279-279", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="BsonObjectIdConverter.cs"];
m1_139 [label="dimensions.Count < rank", span="281-281", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="BsonObjectIdConverter.cs"];
m1_141 [label="Array multidimensionalArray = Array.CreateInstance(type, dimensions.ToArray())", span="286-286", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="BsonObjectIdConverter.cs"];
m1_142 [label="CopyFromJaggedToMultidimensionalArray(values, multidimensionalArray, new int[0])", span="287-287", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="BsonObjectIdConverter.cs"];
m1_140 [label="dimensions.Add(0)", span="283-283", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="BsonObjectIdConverter.cs"];
m1_143 [label="return multidimensionalArray;", span="289-289", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="BsonObjectIdConverter.cs"];
m1_144 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", span="277-277", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="BsonObjectIdConverter.cs"];
m1_123 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", span="263-263", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs"];
m1_127 [label="IList currentList = values", span="265-265", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs"];
m1_129 [label="i < indices.Length", span="266-266", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs"];
m1_130 [label="int index = indices[i]", span="268-268", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs"];
m1_131 [label="i == indices.Length - 1", span="269-269", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs"];
m1_128 [label="int i = 0", span="266-266", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs"];
m1_132 [label="return currentList[index];", span="270-270", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs"];
m1_133 [label="currentList = (IList)currentList[index]", span="272-272", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs"];
m1_135 [label="return currentList;", span="274-274", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs"];
m1_134 [label="i++", span="266-266", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs"];
m1_136 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", span="263-263", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="BsonObjectIdConverter.cs"];
m1_146 [label="Entry System.Array.CreateInstance(System.Type, params int[])", span="0-0", cluster="System.Array.CreateInstance(System.Type, params int[])", file="BsonObjectIdConverter.cs"];
m1_14 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="BsonObjectIdConverter.cs"];
m1_82 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="200-200", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs"];
m1_83 [label="int index = 0", span="202-202", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs"];
m1_84 [label=list, span="203-203", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs"];
m1_85 [label="comparer.Equals(item, value)", span="205-205", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs"];
m1_86 [label="return index;", span="207-207", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs"];
m1_87 [label="index++", span="209-209", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs"];
m1_88 [label="return -1;", span="211-211", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs"];
m1_89 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="200-200", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs"];
m1_0 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="50-50", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="BsonObjectIdConverter.cs"];
m1_2 [label="return (collection.Count == 0);", span="54-54", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", color=green, community=0, file="BsonObjectIdConverter.cs"];
m1_1 [label="collection != null", span="52-52", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="BsonObjectIdConverter.cs"];
m1_3 [label="return true;", span="56-56", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", color=green, community=0, file="BsonObjectIdConverter.cs"];
m1_4 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="50-50", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", color=green, community=0, file="BsonObjectIdConverter.cs"];
m1_5 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", span="64-64", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="BsonObjectIdConverter.cs"];
m1_6 [label="initial == null", span="66-66", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="BsonObjectIdConverter.cs"];
m1_73 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", span="178-178", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="BsonObjectIdConverter.cs"];
m1_74 [label="int index = 0", span="180-180", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="BsonObjectIdConverter.cs"];
m1_75 [label=collection, span="181-181", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="BsonObjectIdConverter.cs"];
m1_76 [label="predicate(value)", span="183-183", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="BsonObjectIdConverter.cs"];
m1_77 [label="return index;", span="184-184", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="BsonObjectIdConverter.cs"];
m1_78 [label="index++", span="186-186", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="BsonObjectIdConverter.cs"];
m1_79 [label="return -1;", span="189-189", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="BsonObjectIdConverter.cs"];
m1_80 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", span="178-178", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="BsonObjectIdConverter.cs"];
m1_66 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", span="166-166", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs"];
m1_67 [label="bool allAdded = true", span="168-168", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs"];
m1_68 [label=values, span="169-169", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs"];
m1_69 [label="!list.AddDistinct(value, comparer)", span="171-171", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs"];
m1_71 [label="return allAdded;", span="175-175", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs"];
m1_70 [label="allAdded = false", span="172-172", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs"];
m1_72 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", span="166-166", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs"];
m1_44 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", span="134-134", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", file="BsonObjectIdConverter.cs"];
m1_45 [label="return list.AddDistinct(value, EqualityComparer<T>.Default);", span="136-136", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", file="BsonObjectIdConverter.cs"];
m1_46 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", span="134-134", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", file="BsonObjectIdConverter.cs"];
m1_25 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="BsonObjectIdConverter.cs"];
m1_26 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="BsonObjectIdConverter.cs"];
m1_10 [label=collection, span="72-72", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="BsonObjectIdConverter.cs"];
m1_11 [label="initial.Add(value)", span="74-74", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="BsonObjectIdConverter.cs"];
m1_9 [label="return;", span="70-70", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="BsonObjectIdConverter.cs"];
m1_12 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", span="64-64", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="BsonObjectIdConverter.cs"];
m1_124 [label="Entry System.Array.SetValue(object, params int[])", span="0-0", cluster="System.Array.SetValue(object, params int[])", file="BsonObjectIdConverter.cs"];
m1_126 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="BsonObjectIdConverter.cs"];
m1_47 [label="Entry System.Collections.Generic.IList<T>.AddDistinct<T>(T, System.Collections.Generic.IEqualityComparer<T>)", span="139-139", cluster="System.Collections.Generic.IList<T>.AddDistinct<T>(T, System.Collections.Generic.IEqualityComparer<T>)", file="BsonObjectIdConverter.cs"];
m1_55 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="149-149", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs"];
m1_56 [label="comparer == null", span="151-151", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs"];
m1_58 [label="source == null", span="154-154", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs"];
m1_60 [label=source, span="157-157", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs"];
m1_61 [label="comparer.Equals(local, value)", span="159-159", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs"];
m1_57 [label="comparer = EqualityComparer<TSource>.Default", span="152-152", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs"];
m1_59 [label="throw new ArgumentNullException(''source'');", span="155-155", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs"];
m1_63 [label="return false;", span="163-163", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs"];
m1_62 [label="return true;", span="160-160", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs"];
m1_64 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="149-149", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BsonObjectIdConverter.cs"];
m4_12 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="145-145", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="DataTableConverter.cs"];
m4_13 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="DataTableConverter.cs"];
m4_11 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="DataTableConverter.cs"];
m4_9 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DataTableConverter.cs"];
m4_8 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="127-127", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="DataTableConverter.cs"];
m4_10 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="DataTableConverter.cs"];
m4_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Linq.JValueValue.Example()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JValueValue.Example()", file="DataTableConverter.cs"];
m4_1 [label="JValue s = new JValue(''A string value'')", span="12-12", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JValueValue.Example()", file="DataTableConverter.cs"];
m4_2 [label="Console.WriteLine(s.Value.GetType().Name)", span="14-14", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JValueValue.Example()", file="DataTableConverter.cs"];
m4_3 [label="Console.WriteLine(s.Value)", span="16-16", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JValueValue.Example()", file="DataTableConverter.cs"];
m4_4 [label="JValue u = new JValue(new Uri(''http://www.google.com/''))", span="19-19", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JValueValue.Example()", file="DataTableConverter.cs"];
m4_5 [label="Console.WriteLine(u.Value.GetType().Name)", span="21-21", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JValueValue.Example()", file="DataTableConverter.cs"];
m4_6 [label="Console.WriteLine(u.Value)", span="23-23", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JValueValue.Example()", file="DataTableConverter.cs"];
m4_7 [label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Linq.JValueValue.Example()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JValueValue.Example()", file="DataTableConverter.cs"];
m7_12 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", span="153-153", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", file="JsonConvertTest.cs"];
m7_13 [label="return type.IsGenericType;", span="156-156", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", file="JsonConvertTest.cs"];
m7_14 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", span="153-153", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", file="JsonConvertTest.cs"];
m7_59 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", span="604-604", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="JsonConvertTest.cs"];
m7_60 [label="Type match", span="606-606", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="JsonConvertTest.cs"];
m7_61 [label="return type.AssignableToTypeName(fullTypeName, out match);", span="607-607", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="JsonConvertTest.cs"];
m7_62 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", span="604-604", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="JsonConvertTest.cs"];
m7_15 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", span="162-162", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="JsonConvertTest.cs"];
m7_16 [label="return type.IsGenericTypeDefinition;", span="165-165", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="JsonConvertTest.cs"];
m7_17 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", span="162-162", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="JsonConvertTest.cs"];
m7_56 [label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)", file="JsonConvertTest.cs"];
m7_18 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", span="171-171", cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="JsonConvertTest.cs"];
m7_19 [label="return type.BaseType;", span="174-174", cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="JsonConvertTest.cs"];
m7_20 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", span="171-171", cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="JsonConvertTest.cs"];
m7_36 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", span="558-558", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", file="JsonConvertTest.cs"];
m7_37 [label="return type.IsVisible;", span="561-561", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", file="JsonConvertTest.cs"];
m7_38 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", span="558-558", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", file="JsonConvertTest.cs"];
m7_3 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", span="107-107", cluster="Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", file="JsonConvertTest.cs"];
m7_4 [label="return memberInfo.MemberType;", span="110-110", cluster="Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", file="JsonConvertTest.cs"];
m7_5 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", span="107-107", cluster="Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", file="JsonConvertTest.cs"];
m7_33 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", span="549-549", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="JsonConvertTest.cs"];
m7_34 [label="return type.IsAbstract;", span="552-552", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="JsonConvertTest.cs"];
m7_35 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", span="549-549", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="JsonConvertTest.cs"];
m7_27 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", span="198-198", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", file="JsonConvertTest.cs"];
m7_28 [label="return type.IsClass;", span="201-201", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", file="JsonConvertTest.cs"];
m7_29 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", span="198-198", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", file="JsonConvertTest.cs"];
m7_6 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", span="135-135", cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", file="JsonConvertTest.cs"];
m7_7 [label="return type.ContainsGenericParameters;", span="138-138", cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", file="JsonConvertTest.cs"];
m7_8 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", span="135-135", cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", file="JsonConvertTest.cs"];
m7_39 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", span="567-567", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="JsonConvertTest.cs"];
m7_40 [label="return type.IsValueType;", span="570-570", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="JsonConvertTest.cs"];
m7_41 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", span="567-567", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="JsonConvertTest.cs"];
m7_24 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", span="189-189", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="JsonConvertTest.cs"];
m7_25 [label="return type.IsEnum;", span="192-192", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="JsonConvertTest.cs"];
m7_26 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", span="189-189", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="JsonConvertTest.cs"];
m7_58 [label="Entry System.Type.GetInterfaces()", span="0-0", cluster="System.Type.GetInterfaces()", file="JsonConvertTest.cs"];
m7_42 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", span="576-576", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs"];
m7_43 [label="Type current = type", span="578-578", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs"];
m7_45 [label="string.Equals(current.FullName, fullTypeName, StringComparison.Ordinal)", span="582-582", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs"];
m7_49 [label="type.GetInterfaces()", span="591-591", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs"];
m7_50 [label="string.Equals(i.Name, fullTypeName, StringComparison.Ordinal)", span="593-593", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs"];
m7_51 [label="match = type", span="595-595", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs"];
m7_44 [label="current != null", span="580-580", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs"];
m7_46 [label="match = current", span="584-584", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs"];
m7_48 [label="current = current.BaseType()", span="588-588", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs"];
m7_47 [label="return true;", span="585-585", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs"];
m7_53 [label="match = null", span="600-600", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs"];
m7_52 [label="return true;", span="596-596", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs"];
m7_54 [label="return false;", span="601-601", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs"];
m7_55 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", span="576-576", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonConvertTest.cs"];
m7_9 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", span="144-144", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="JsonConvertTest.cs"];
m7_10 [label="return type.IsInterface;", span="147-147", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="JsonConvertTest.cs"];
m7_11 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", span="144-144", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="JsonConvertTest.cs"];
m7_30 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", span="207-207", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="JsonConvertTest.cs"];
m7_31 [label="return type.IsSealed;", span="210-210", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="JsonConvertTest.cs"];
m7_32 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", span="207-207", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="JsonConvertTest.cs"];
m7_0 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", span="98-98", cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="JsonConvertTest.cs"];
m7_1 [label="return d.Method;", span="101-101", cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="JsonConvertTest.cs"];
m7_2 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", span="98-98", cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="JsonConvertTest.cs"];
m7_74 [label="Entry System.Type.ImplementInterface(System.Type)", span="610-610", cluster="System.Type.ImplementInterface(System.Type)", file="JsonConvertTest.cs"];
m7_57 [label="Entry System.Type.BaseType()", span="171-171", cluster="System.Type.BaseType()", file="JsonConvertTest.cs"];
m7_64 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", span="610-610", cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonConvertTest.cs"];
m7_65 [label="Type currentType = type", span="612-612", cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonConvertTest.cs"];
m7_69 [label="i == interfaceType || (i != null && i.ImplementInterface(interfaceType))", span="617-617", cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonConvertTest.cs"];
m7_66 [label="currentType != null", span="612-612", cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonConvertTest.cs"];
m7_67 [label="IEnumerable<Type> interfaces = currentType.GetInterfaces()", span="614-614", cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonConvertTest.cs"];
m7_71 [label="currentType = currentType.BaseType()", span="612-612", cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonConvertTest.cs"];
m7_72 [label="return false;", span="624-624", cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonConvertTest.cs"];
m7_68 [label=interfaces, span="615-615", cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonConvertTest.cs"];
m7_70 [label="return true;", span="619-619", cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonConvertTest.cs"];
m7_73 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", span="610-610", cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonConvertTest.cs"];
m7_63 [label="Entry System.Type.AssignableToTypeName(string, out System.Type)", span="576-576", cluster="System.Type.AssignableToTypeName(string, out System.Type)", file="JsonConvertTest.cs"];
m7_21 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", span="180-180", cluster="Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", file="JsonConvertTest.cs"];
m7_22 [label="return type.Assembly;", span="183-183", cluster="Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", file="JsonConvertTest.cs"];
m7_23 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", span="180-180", cluster="Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", file="JsonConvertTest.cs"];
m9_2 [label="Entry Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", span="100-100", cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", file="JsonPropertyAttribute.cs"];
m9_3 [label="PropertyName = propertyName", span="102-102", cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", file="JsonPropertyAttribute.cs"];
m9_4 [label="Exit Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", span="100-100", cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", file="JsonPropertyAttribute.cs"];
m9_0 [label="Entry Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute()", span="92-92", cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute()", file="JsonPropertyAttribute.cs"];
m9_1 [label="Exit Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute()", span="92-92", cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute()", file="JsonPropertyAttribute.cs"];
m9_5 [label="Newtonsoft.Json.JsonPropertyAttribute", span="", file="JsonPropertyAttribute.cs"];
m12_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.GetPosts()", span="18-18", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.GetPosts()", file="JTokenReader.cs"];
m12_1 [label="return null;", span="20-20", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.GetPosts()", file="JTokenReader.cs"];
m12_2 [label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.GetPosts()", span="18-18", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.GetPosts()", file="JTokenReader.cs"];
m12_8 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JTokenReader.cs"];
m12_3 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.Example()", span="22-22", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.Example()", file="JTokenReader.cs"];
m12_4 [label="List<Post> posts = GetPosts()", span="24-24", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.Example()", file="JTokenReader.cs"];
m12_5 [label="JObject rss =\r\n        new JObject(\r\n          new JProperty(''channel'',\r\n            new JObject(\r\n              new JProperty(''title'', ''James Newton-King''),\r\n              new JProperty(''link'', ''http://james.newtonking.com''),\r\n              new JProperty(''description'', ''James Newton-King's blog.''),\r\n              new JProperty(''item'',\r\n                new JArray(\r\n                  from p in posts\r\n                  orderby p.Title\r\n                  select new JObject(\r\n                    new JProperty(''title'', p.Title),\r\n                    new JProperty(''description'', p.Description),\r\n                    new JProperty(''link'', p.Link),\r\n                    new JProperty(''category'',\r\n                      new JArray(\r\n                        from c in p.Categories\r\n                        select new JValue(c)))))))))", span="26-44", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.Example()", file="JTokenReader.cs"];
m12_6 [label="Console.WriteLine(rss.ToString())", span="46-46", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.Example()", file="JTokenReader.cs"];
m12_7 [label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.Example()", span="22-22", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively.Example()", file="JTokenReader.cs"];
m12_12 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="127-127", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JTokenReader.cs"];
m12_9 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="192-192", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JTokenReader.cs"];
m12_10 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JTokenReader.cs"];
m12_14 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JTokenReader.cs"];
m12_13 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="389-389", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JTokenReader.cs"];
m12_11 [label="Entry JArray.cstr", span="", cluster="JArray.cstr", file="JTokenReader.cs"];
m12_15 [label="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively", span="", file="JTokenReader.cs"];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_0 -> m0_2  [key=1, style=dashed, color=green, label="byte[]"];
m0_0 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_6  [key=2, style=dotted, color=green];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_4  [key=0, style=solid, color=green];
m0_4 -> m0_5  [key=0, style=solid];
m0_3 -> m0_5  [key=0, style=solid, color=green];
m0_3 -> m0_7  [key=2, style=dotted, color=green];
m0_5 -> m0_0  [key=0, style=bold, color=blue];
m0_8 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonObjectId"];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<T>"];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_51  [key=0, style=solid];
m1_49 -> m1_54  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_14  [key=2, style=dotted];
m1_50 -> m1_53  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_53 -> m1_48  [key=0, style=bold, color=blue];
m1_7 -> m1_12  [key=0, style=solid];
m1_7 -> m1_13  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_41  [key=2, style=dotted];
m1_29 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label=genericEnumerable];
m1_29 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=genericEnumerable];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_39  [key=0, style=solid];
m1_31 -> m1_42  [key=2, style=dotted];
m1_31 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label=constructor];
m1_31 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=constructor];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label=match];
m1_30 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label=match];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_36  [key=0, style=solid];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_31  [key=0, style=solid];
m1_37 -> m1_26  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_31  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_43  [key=2, style=dotted];
m1_32 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m1_32 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m1_35 -> m1_39  [key=0, style=solid];
m1_35 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label=match];
m1_38 -> m1_31  [key=0, style=solid];
m1_38 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label=match];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_31  [key=0, style=solid];
m1_40 -> m1_28  [key=0, style=bold, color=blue];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_15 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_15 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_25  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_19  [key=0, style=solid];
m1_17 -> m1_26  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid, color=green];
m1_19 -> m1_21  [key=0, style=solid];
m1_19 -> m1_27  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=0, style=solid];
m1_21 -> m1_27  [key=2, style=dotted];
m1_18 -> m1_24  [key=0, style=solid];
m1_18 -> m1_19  [key=0, style=solid, color=green];
m1_20 -> m1_24  [key=0, style=solid];
m1_20 -> m1_18  [key=0, style=bold, color=blue];
m1_22 -> m1_24  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_24 -> m1_15  [key=0, style=bold, color=blue];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IList"];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_101  [key=2, style=dotted];
m1_91 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label=dimensions];
m1_91 -> m1_99  [key=1, style=dashed, color=darkseagreen4, label=dimensions];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label=currentArray];
m1_92 -> m1_95  [key=1, style=dashed, color=darkseagreen4, label=currentArray];
m1_92 -> m1_96  [key=1, style=dashed, color=darkseagreen4, label=currentArray];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_14  [key=2, style=dotted];
m1_99 -> m1_100  [key=0, style=solid];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_99  [key=0, style=solid];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_99  [key=0, style=solid];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=v];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_99  [key=0, style=solid];
m1_98 -> m1_93  [key=0, style=solid];
m1_100 -> m1_90  [key=0, style=bold, color=blue];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
m1_102 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IList"];
m1_102 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
m1_102 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IList"];
m1_102 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m1_102 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
m1_102 -> m1_120  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IList"];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label=dimension];
m1_103 -> m1_112  [key=1, style=dashed, color=darkseagreen4, label=dimension];
m1_103 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label=dimension];
m1_103 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label=dimension];
m1_103 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label=dimension];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_107  [key=0, style=solid];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_123  [key=2, style=dotted];
m1_105 -> m1_124  [key=2, style=dotted];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_125  [key=2, style=dotted];
m1_107 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=dimensionLength];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_123  [key=2, style=dotted];
m1_115 -> m1_116  [key=0, style=solid];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_122  [key=0, style=solid];
m1_118 -> m1_125  [key=2, style=dotted];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_102  [key=2, style=dotted];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label=newIndices];
m1_112 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label=newIndices];
m1_112 -> m1_120  [key=1, style=dashed, color=darkseagreen4, label=newIndices];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_117  [key=0, style=solid];
m1_119 -> m1_120  [key=0, style=solid];
m1_106 -> m1_122  [key=0, style=solid];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_112  [key=0, style=solid];
m1_109 -> m1_110  [key=0, style=solid];
m1_111 -> m1_122  [key=0, style=solid];
m1_111 -> m1_126  [key=2, style=dotted];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_113 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_116 -> m1_114  [key=0, style=solid];
m1_116 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_117 -> m1_121  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_121 -> m1_118  [key=0, style=solid];
m1_121 -> m1_121  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_122 -> m1_102  [key=0, style=bold, color=blue];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_10  [key=0, style=solid];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_139  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_137 -> m1_141  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_137 -> m1_142  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IList"];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_90  [key=2, style=dotted];
m1_138 -> m1_140  [key=1, style=dashed, color=darkseagreen4, label=dimensions];
m1_138 -> m1_141  [key=1, style=dashed, color=darkseagreen4, label=dimensions];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_141  [key=0, style=solid];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_145  [key=2, style=dotted];
m1_141 -> m1_146  [key=2, style=dotted];
m1_141 -> m1_143  [key=1, style=dashed, color=darkseagreen4, label=multidimensionalArray];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_102  [key=2, style=dotted];
m1_140 -> m1_139  [key=0, style=solid];
m1_140 -> m1_14  [key=2, style=dotted];
m1_143 -> m1_144  [key=0, style=solid];
m1_144 -> m1_137  [key=0, style=bold, color=blue];
m1_123 -> m1_127  [key=0, style=solid];
m1_123 -> m1_129  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m1_123 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m1_123 -> m1_131  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_132  [key=1, style=dashed, color=darkseagreen4, label=currentList];
m1_127 -> m1_133  [key=1, style=dashed, color=darkseagreen4, label=currentList];
m1_127 -> m1_135  [key=1, style=dashed, color=darkseagreen4, label=currentList];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_135  [key=0, style=solid];
m1_130 -> m1_131  [key=0, style=solid];
m1_130 -> m1_132  [key=1, style=dashed, color=darkseagreen4, label=index];
m1_130 -> m1_133  [key=1, style=dashed, color=darkseagreen4, label=index];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_133  [key=0, style=solid];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_128 -> m1_131  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_128 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_132 -> m1_136  [key=0, style=solid];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_133  [key=1, style=dashed, color=darkseagreen4, label=currentList];
m1_133 -> m1_135  [key=1, style=dashed, color=darkseagreen4, label=currentList];
m1_135 -> m1_136  [key=0, style=solid];
m1_134 -> m1_129  [key=0, style=solid];
m1_134 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_136 -> m1_123  [key=0, style=bold, color=blue];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
m1_82 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label=TSource];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_86  [key=1, style=dashed, color=darkseagreen4, label=index];
m1_83 -> m1_87  [key=1, style=dashed, color=darkseagreen4, label=index];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_88  [key=0, style=solid];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_87  [key=0, style=solid];
m1_85 -> m1_65  [key=2, style=dotted];
m1_86 -> m1_89  [key=0, style=solid];
m1_87 -> m1_84  [key=0, style=solid];
m1_87 -> m1_87  [key=1, style=dashed, color=darkseagreen4, label=index];
m1_88 -> m1_89  [key=0, style=solid];
m1_89 -> m1_82  [key=0, style=bold, color=blue];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<T>"];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m1_2 -> m1_3  [key=0, style=solid, color=green];
m1_2 -> m1_4  [key=1, style=dashed, color=green, label=bsonWriter];
m1_1 -> m1_2  [key=0, style=solid, color=green];
m1_1 -> m1_4  [key=1, style=dashed, color=green, label=objectId];
m1_1 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label=objectId];
m1_1 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid, color=green];
m1_3 -> m1_5  [key=0, style=solid, color=green];
m1_4 -> m1_6  [key=0, style=solid, color=green];
m1_4 -> m1_7  [key=2, style=dotted, color=green];
m1_4 -> m1_0  [key=0, style=bold, color=blue];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_8  [key=2, style=dotted];
m1_5 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<T>"];
m1_5 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<T>"];
m1_6 -> m1_0  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_8  [key=0, style=solid];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<T>"];
m1_73 -> m1_76  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T, bool>"];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_77  [key=1, style=dashed, color=darkseagreen4, label=index];
m1_74 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=index];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_79  [key=0, style=solid];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_78  [key=0, style=solid];
m1_76 -> m1_81  [key=2, style=dotted];
m1_77 -> m1_80  [key=0, style=solid];
m1_78 -> m1_75  [key=0, style=solid];
m1_78 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=index];
m1_79 -> m1_80  [key=0, style=solid];
m1_80 -> m1_73  [key=0, style=bold, color=blue];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<T>"];
m1_66 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<T>"];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label=allAdded];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_71  [key=0, style=solid];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_68  [key=0, style=solid];
m1_69 -> m1_47  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_70 -> m1_68  [key=0, style=solid];
m1_70 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label=allAdded];
m1_72 -> m1_66  [key=0, style=bold, color=blue];
m1_44 -> m1_45  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_47  [key=2, style=dotted];
m1_46 -> m1_44  [key=0, style=bold, color=blue];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_12  [key=0, style=solid];
m1_11 -> m1_10  [key=0, style=solid];
m1_11 -> m1_14  [key=2, style=dotted];
m1_9 -> m1_12  [key=0, style=solid];
m1_12 -> m1_5  [key=0, style=bold, color=blue];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
m1_55 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
m1_55 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label=TSource];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_58  [key=0, style=solid];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_60  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_63  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_60  [key=0, style=solid];
m1_61 -> m1_65  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEqualityComparer<TSource>"];
m1_59 -> m1_64  [key=0, style=solid];
m1_59 -> m1_13  [key=2, style=dotted];
m1_63 -> m1_64  [key=0, style=solid];
m1_62 -> m1_64  [key=0, style=solid];
m1_64 -> m1_55  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_8  [key=2, style=dotted];
m4_1 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_9  [key=2, style=dotted];
m4_2 -> m4_10  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_11  [key=2, style=dotted];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_12  [key=2, style=dotted];
m4_4 -> m4_13  [key=2, style=dotted];
m4_4 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label=u];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_9  [key=2, style=dotted];
m4_5 -> m4_10  [key=2, style=dotted];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_11  [key=2, style=dotted];
m4_7 -> m4_0  [key=0, style=bold, color=blue];
m7_12 -> m7_13  [key=0, style=solid];
m7_13 -> m7_14  [key=0, style=solid];
m7_14 -> m7_12  [key=0, style=bold, color=blue];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_61  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_60 -> m7_61  [key=0, style=solid];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_63  [key=2, style=dotted];
m7_62 -> m7_59  [key=0, style=bold, color=blue];
m7_15 -> m7_16  [key=0, style=solid];
m7_16 -> m7_17  [key=0, style=solid];
m7_17 -> m7_15  [key=0, style=bold, color=blue];
m7_18 -> m7_19  [key=0, style=solid];
m7_19 -> m7_20  [key=0, style=solid];
m7_20 -> m7_18  [key=0, style=bold, color=blue];
m7_36 -> m7_37  [key=0, style=solid];
m7_37 -> m7_38  [key=0, style=solid];
m7_38 -> m7_36  [key=0, style=bold, color=blue];
m7_3 -> m7_4  [key=0, style=solid];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_3  [key=0, style=bold, color=blue];
m7_33 -> m7_34  [key=0, style=solid];
m7_34 -> m7_35  [key=0, style=solid];
m7_35 -> m7_33  [key=0, style=bold, color=blue];
m7_27 -> m7_28  [key=0, style=solid];
m7_28 -> m7_29  [key=0, style=solid];
m7_29 -> m7_27  [key=0, style=bold, color=blue];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_8 -> m7_6  [key=0, style=bold, color=blue];
m7_39 -> m7_40  [key=0, style=solid];
m7_40 -> m7_41  [key=0, style=solid];
m7_41 -> m7_39  [key=0, style=bold, color=blue];
m7_24 -> m7_25  [key=0, style=solid];
m7_25 -> m7_26  [key=0, style=solid];
m7_26 -> m7_24  [key=0, style=bold, color=blue];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_45  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_42 -> m7_49  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_42 -> m7_50  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_42 -> m7_51  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_45  [key=1, style=dashed, color=darkseagreen4, label=current];
m7_43 -> m7_46  [key=1, style=dashed, color=darkseagreen4, label=current];
m7_43 -> m7_48  [key=1, style=dashed, color=darkseagreen4, label=current];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_48  [key=0, style=solid];
m7_45 -> m7_56  [key=2, style=dotted];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> m7_53  [key=0, style=solid];
m7_49 -> m7_58  [key=2, style=dotted];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_49  [key=0, style=solid];
m7_50 -> m7_56  [key=2, style=dotted];
m7_51 -> m7_52  [key=0, style=solid];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_49  [key=0, style=solid];
m7_46 -> m7_47  [key=0, style=solid];
m7_48 -> m7_44  [key=0, style=solid];
m7_48 -> m7_57  [key=2, style=dotted];
m7_48 -> m7_48  [key=1, style=dashed, color=darkseagreen4, label=current];
m7_47 -> m7_55  [key=0, style=solid];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_55  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m7_52 -> m7_55  [key=0, style=solid];
m7_54 -> m7_55  [key=0, style=solid];
m7_55 -> m7_42  [key=0, style=bold, color=blue];
m7_9 -> m7_10  [key=0, style=solid];
m7_10 -> m7_11  [key=0, style=solid];
m7_11 -> m7_9  [key=0, style=bold, color=blue];
m7_30 -> m7_31  [key=0, style=solid];
m7_31 -> m7_32  [key=0, style=solid];
m7_32 -> m7_30  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_64 -> m7_65  [key=0, style=solid];
m7_64 -> m7_69  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_65 -> m7_66  [key=0, style=solid];
m7_65 -> m7_67  [key=1, style=dashed, color=darkseagreen4, label=currentType];
m7_65 -> m7_71  [key=1, style=dashed, color=darkseagreen4, label=currentType];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_68  [key=0, style=solid];
m7_69 -> m7_74  [key=2, style=dotted];
m7_66 -> m7_67  [key=0, style=solid];
m7_66 -> m7_72  [key=0, style=solid];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_58  [key=2, style=dotted];
m7_71 -> m7_66  [key=0, style=solid];
m7_71 -> m7_57  [key=2, style=dotted];
m7_71 -> m7_71  [key=1, style=dashed, color=darkseagreen4, label=currentType];
m7_72 -> m7_73  [key=0, style=solid];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_71  [key=0, style=solid];
m7_70 -> m7_73  [key=0, style=solid];
m7_73 -> m7_64  [key=0, style=bold, color=blue];
m7_21 -> m7_22  [key=0, style=solid];
m7_22 -> m7_23  [key=0, style=solid];
m7_23 -> m7_21  [key=0, style=bold, color=blue];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_4  [key=0, style=solid];
m9_4 -> m9_2  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [key=0, style=bold, color=blue];
m9_5 -> m9_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonPropertyAttribute"];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_2 -> m12_0  [key=0, style=bold, color=blue];
m12_3 -> m12_4  [key=0, style=solid];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_0  [key=2, style=dotted];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_8  [key=2, style=dotted];
m12_5 -> m12_9  [key=2, style=dotted];
m12_5 -> m12_10  [key=2, style=dotted];
m12_5 -> m12_11  [key=2, style=dotted];
m12_5 -> m12_12  [key=2, style=dotted];
m12_5 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label=p];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_13  [key=2, style=dotted];
m12_6 -> m12_14  [key=2, style=dotted];
m12_7 -> m12_3  [key=0, style=bold, color=blue];
m12_15 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonDeclaratively"];
}
