digraph  {
m0_0 [cluster="Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="Entry Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="51-51"];
m0_1 [cluster="Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="value == null", span="53-53"];
m0_2 [cluster="Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="writer.WriteNull()", span="55-55"];
m0_4 [cluster="Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="byte[] data = value as byte[]", span="59-59"];
m0_6 [cluster="Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="data = GetByteArray(value)", span="62-62"];
m0_7 [cluster="Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="writer.WriteValue(Convert.ToBase64String(data))", span="64-64"];
m0_3 [cluster="Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="return;", span="56-56"];
m0_9 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="BinaryConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="615-615"];
m0_8 [cluster="Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="Exit Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="51-51"];
m0_5 [cluster="Newtonsoft.Json.Converters.BinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="data == null", span="61-61"];
m0_10 [cluster="Newtonsoft.Json.Converters.BinaryConverter.GetByteArray(object)", file="BinaryConverter.cs", label="Entry Newtonsoft.Json.Converters.BinaryConverter.GetByteArray(object)", span="67-67"];
m0_11 [cluster="System.Convert.ToBase64String(byte[])", file="BinaryConverter.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m0_12 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="BinaryConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="651-651"];
m0_49 [cluster="Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", file="BinaryConverter.cs", label="Entry Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", span="129-129"];
m0_50 [cluster="Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", file="BinaryConverter.cs", label="Type t = (ReflectionUtils.IsNullableType(objectType))\r\n        ? Nullable.GetUnderlyingType(objectType)\r\n        : objectType", span="131-133"];
m0_42 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="BinaryConverter.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m0_51 [cluster="Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", file="BinaryConverter.cs", label="t == typeof(byte[])", span="135-135"];
m0_53 [cluster="Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", file="BinaryConverter.cs", label="typeof(Binary).IsAssignableFrom(t)", span="139-139"];
m0_55 [cluster="Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", file="BinaryConverter.cs", label="typeof(SqlBinary).IsAssignableFrom(t)", span="143-143"];
m0_41 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="BinaryConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="76-76"];
m0_52 [cluster="Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", file="BinaryConverter.cs", label="return true;", span="136-136"];
m0_58 [cluster="Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", file="BinaryConverter.cs", label="Exit Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", span="129-129"];
m0_54 [cluster="Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", file="BinaryConverter.cs", label="return true;", span="140-140"];
m0_46 [cluster="System.Type.IsAssignableFrom(System.Type)", file="BinaryConverter.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m0_56 [cluster="Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", file="BinaryConverter.cs", label="return true;", span="144-144"];
m0_57 [cluster="Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)", file="BinaryConverter.cs", label="return false;", span="146-146"];
m0_23 [cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="Entry Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="87-87"];
m0_24 [cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="Type t = (ReflectionUtils.IsNullableType(objectType))\r\n        ? Nullable.GetUnderlyingType(objectType)\r\n        : objectType", span="89-91"];
m0_25 [cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="reader.TokenType == JsonToken.Null", span="93-93"];
m0_26 [cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="!ReflectionUtils.IsNullable(objectType)", span="95-95"];
m0_27 [cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="throw new Exception(''Cannot convert null value to {0}.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="96-96"];
m0_29 [cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="reader.TokenType != JsonToken.String", span="101-101"];
m0_30 [cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="throw new Exception(''Unexpected token parsing binary. Expected String, got {0}.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="102-102"];
m0_31 [cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="string encodedData = reader.Value.ToString()", span="104-104"];
m0_39 [cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="throw new Exception(''Unexpected object type when writing binary: {0}''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="119-119"];
m0_33 [cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="t == typeof(byte[])", span="108-108"];
m0_35 [cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="typeof(Binary).IsAssignableFrom(t)", span="112-112"];
m0_37 [cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="typeof(SqlBinary).IsAssignableFrom(t)", span="116-116"];
m0_43 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="BinaryConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="66-66"];
m0_28 [cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="return null;", span="98-98"];
m0_40 [cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="Exit Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="87-87"];
m0_20 [cluster="System.Exception.Exception(string)", file="BinaryConverter.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m0_22 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="BinaryConverter.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48"];
m0_32 [cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="byte[] data = Convert.FromBase64String(encodedData)", span="106-106"];
m0_44 [cluster="object.ToString()", file="BinaryConverter.cs", label="Entry object.ToString()", span="0-0"];
m0_34 [cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="return data;", span="109-109"];
m0_36 [cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="return new Binary(data);", span="113-113"];
m0_38 [cluster="Newtonsoft.Json.Converters.BinaryConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="BinaryConverter.cs", label="return new SqlBinary(data);", span="117-117"];
m0_45 [cluster="System.Convert.FromBase64String(string)", file="BinaryConverter.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m0_13 [cluster="Newtonsoft.Json.Converters.BinaryConverter.GetByteArray(object)", file="BinaryConverter.cs", label="value is Binary", span="70-70"];
m0_14 [cluster="Newtonsoft.Json.Converters.BinaryConverter.GetByteArray(object)", file="BinaryConverter.cs", label="return ((Binary)value).ToArray();", span="71-71"];
m0_15 [cluster="Newtonsoft.Json.Converters.BinaryConverter.GetByteArray(object)", file="BinaryConverter.cs", label="value is SqlBinary", span="74-74"];
m0_16 [cluster="Newtonsoft.Json.Converters.BinaryConverter.GetByteArray(object)", file="BinaryConverter.cs", label="return ((SqlBinary) value).Value;", span="75-75"];
m0_17 [cluster="Newtonsoft.Json.Converters.BinaryConverter.GetByteArray(object)", file="BinaryConverter.cs", label="throw new Exception(''Unexpected value type when writing binary: {0}''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="77-77"];
m0_18 [cluster="Newtonsoft.Json.Converters.BinaryConverter.GetByteArray(object)", file="BinaryConverter.cs", label="Exit Newtonsoft.Json.Converters.BinaryConverter.GetByteArray(object)", span="67-67"];
m0_21 [cluster="object.GetType()", file="BinaryConverter.cs", label="Entry object.GetType()", span="0-0"];
m1_108 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, \\nSystem.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, \\nint, System.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", span="239-239"];
m1_109 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, \\nSystem.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", file="CollectionUtils.cs", label="IList<T> currentArray = global[current]", span="241-241"];
m1_112 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, \\nSystem.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", file="CollectionUtils.cs", label="currentSet[current] = currentArray[i]", span="245-245"];
m1_113 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, \\nSystem.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", file="CollectionUtils.cs", label="current == global.Count - 1", span="247-247"];
m1_116 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, \\nSystem.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", file="CollectionUtils.cs", label="k < currentSet.Count", span="251-251"];
m1_117 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, \\nSystem.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", file="CollectionUtils.cs", label="items.Add(currentSet[k])", span="253-253"];
m1_119 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, \\nSystem.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", file="CollectionUtils.cs", label="flattenedResult.Add(items)", span="256-256"];
m1_120 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, \\nSystem.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", file="CollectionUtils.cs", label="Recurse(global, current + 1, currentSet, flattenedResult)", span="260-260"];
m1_110 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, \\nSystem.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", file="CollectionUtils.cs", label="int i = 0", span="243-243"];
m1_111 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, \\nSystem.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", file="CollectionUtils.cs", label="i < currentArray.Count", span="243-243"];
m1_121 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, \\nSystem.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", file="CollectionUtils.cs", label="i++", span="243-243"];
m1_122 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, \\nSystem.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, \\nint, System.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", span="239-239"];
m1_114 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, \\nSystem.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", file="CollectionUtils.cs", label="List<T> items = new List<T>()", span="249-249"];
m1_115 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, \\nSystem.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", file="CollectionUtils.cs", label="int k = 0", span="251-251"];
m1_57 [cluster="System.Collections.Generic.List<T>.List()", file="CollectionUtils.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_118 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, \\nSystem.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", file="CollectionUtils.cs", label="k++", span="251-251"];
m1_60 [cluster="System.Collections.Generic.List<T>.Add(T)", file="CollectionUtils.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_131 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<\\nT>)", span="276-276"];
m1_132 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="a == null || b == null", span="278-278"];
m1_133 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="return (a == null && b == null);", span="279-279"];
m1_134 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="a.Count != b.Count", span="281-281"];
m1_138 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="i < a.Count", span="286-286"];
m1_139 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="!comparer.Equals(a[i], b[i])", span="288-288"];
m1_143 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<\\nT>)", span="276-276"];
m1_135 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="return false;", span="282-282"];
m1_136 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="EqualityComparer<T> comparer = EqualityComparer<T>.Default", span="284-284"];
m1_137 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="int i = 0", span="286-286"];
m1_141 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="i++", span="286-286"];
m1_142 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="return true;", span="292-292"];
m1_140 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="return false;", span="289-289"];
m1_144 [cluster="System.Collections.Generic.EqualityComparer<T>.Equals(T, T)", file="CollectionUtils.cs", label="Entry System.Collections.Generic.EqualityComparer<T>.Equals(T, T)", span="0-0"];
m1_34 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", span="118-118"];
m1_35 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", file="CollectionUtils.cs", label="list == null", span="120-120"];
m1_37 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", file="CollectionUtils.cs", label="step == 0", span="123-123"];
m1_40 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", file="CollectionUtils.cs", label="list.Count == 0", span="129-129"];
m1_42 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", file="CollectionUtils.cs", label="int s = step ?? 1", span="133-133"];
m1_43 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", file="CollectionUtils.cs", label="int startIndex = start ?? 0", span="134-134"];
m1_44 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", file="CollectionUtils.cs", label="int endIndex = end ?? list.Count", span="135-135"];
m1_45 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", file="CollectionUtils.cs", label="startIndex = (startIndex < 0) ? list.Count + startIndex : startIndex", span="138-138"];
m1_46 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", file="CollectionUtils.cs", label="endIndex = (endIndex < 0) ? list.Count + endIndex : endIndex", span="141-141"];
m1_48 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", file="CollectionUtils.cs", label="endIndex = Math.Min(endIndex, list.Count - 1)", span="145-145"];
m1_51 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", file="CollectionUtils.cs", label="slicedList.Add(list[i])", span="150-150"];
m1_36 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", file="CollectionUtils.cs", label="throw new ArgumentNullException(''list'');", span="121-121"];
m1_54 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", span="118-118"];
m1_55 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="CollectionUtils.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_38 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", file="CollectionUtils.cs", label="throw new ArgumentException(''Step cannot be zero.'', ''step'');", span="124-124"];
m1_39 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", file="CollectionUtils.cs", label="List<T> slicedList = new List<T>()", span="126-126"];
m1_56 [cluster="System.ArgumentException.ArgumentException(string, string)", file="CollectionUtils.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m1_41 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", file="CollectionUtils.cs", label="return slicedList;", span="130-130"];
m1_53 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", file="CollectionUtils.cs", label="return slicedList;", span="153-153"];
m1_52 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", file="CollectionUtils.cs", label="i += s", span="148-148"];
m1_47 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", file="CollectionUtils.cs", label="startIndex = Math.Max(startIndex, 0)", span="144-144"];
m1_49 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", file="CollectionUtils.cs", label="int i = startIndex", span="148-148"];
m1_58 [cluster="System.Math.Max(int, int)", file="CollectionUtils.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m1_50 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", file="CollectionUtils.cs", label="i < endIndex", span="148-148"];
m1_59 [cluster="System.Math.Min(int, int)", file="CollectionUtils.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m1_342 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", span="575-575"];
m1_343 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", file="CollectionUtils.cs", label="return list.AddDistinct(value, EqualityComparer<T>.Default);", span="577-577"];
m1_344 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", span="575-575"];
m1_345 [cluster="System.Collections.Generic.IList<T>.AddDistinct<T>(T, System.Collections.Generic.IEqualityComparer<T>)", file="CollectionUtils.cs", label="Entry System.Collections.Generic.IList<T>.AddDistinct<T>(T, System.Collections.Generic.IEqualityComparer<T>)", span="580-580"];
m1_145 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.TryGetSingleItem<T>(System.Collections.Generic.IList<T>, out T)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.TryGetSingleItem<T>(System.Collections.Generic.IList<T>, out T)", span="296-296"];
m1_146 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.TryGetSingleItem<T>(System.Collections.Generic.IList<T>, out T)", file="CollectionUtils.cs", label="return TryGetSingleItem<T>(list, false, out value);", span="298-298"];
m1_147 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.TryGetSingleItem<T>(System.Collections.Generic.IList<T>, out T)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.TryGetSingleItem<T>(System.Collections.Generic.IList<T>, out T)", span="296-296"];
m1_148 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.TryGetSingleItem<T>(System.Collections.Generic.IList<T>, bool, out T)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.TryGetSingleItem<T>(System.Collections.Generic.IList<T>, bool, out T)", span="301-301"];
m1_185 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericList(System.Type)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericList(System.Type)", span="347-347"];
m1_186 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericList(System.Type)", file="CollectionUtils.cs", label="ValidationUtils.ArgumentNotNull(listType, ''listType'')", span="349-349"];
m1_187 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericList(System.Type)", file="CollectionUtils.cs", label="return (IList)ReflectionUtils.CreateGeneric(typeof(List<>), listType);", span="351-351"];
m1_4 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="94-94"];
m1_188 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericList(System.Type)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericList(System.Type)", span="347-347"];
m1_189 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Type, params object[])", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Type, params object[])", span="561-561"];
m1_156 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>)", span="306-306"];
m1_157 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="return GetSingleItem<T>(list, false);", span="308-308"];
m1_158 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>)", span="306-306"];
m1_155 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", span="311-311"];
m1_357 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>, System.Collections.Generic.IEqualityComparer<T>)", color=green, community=0, file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>, System.Collections.Generic.IEqualityComparer<T>)", prediction=0, span="594-594"];
m1_358 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>, System.Collections.Generic.IEqualityComparer<T>)", file="CollectionUtils.cs", label="bool allAdded = true", span="596-596"];
m1_359 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>, System.Collections.Generic.IEqualityComparer<T>)", file="CollectionUtils.cs", label=values, span="597-597"];
m1_360 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>, System.Collections.Generic.IEqualityComparer<T>)", file="CollectionUtils.cs", label="!list.AddDistinct(value, comparer)", span="599-599"];
m1_362 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>, System.Collections.Generic.IEqualityComparer<T>)", file="CollectionUtils.cs", label="return allAdded;", span="603-603"];
m1_361 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>, System.Collections.Generic.IEqualityComparer<T>)", file="CollectionUtils.cs", label="allAdded = false", span="600-600"];
m1_363 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>, System.Collections.Generic.IEqualityComparer<T>)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>, System.Collections.Generic.IEqualityComparer<T>)", span="594-594"];
m1_247 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateListWrapper(object)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CreateListWrapper(object)", span="429-429"];
m1_248 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateListWrapper(object)", file="CollectionUtils.cs", label="ValidationUtils.ArgumentNotNull(list, ''list'')", span="431-431"];
m1_250 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateListWrapper(object)", file="CollectionUtils.cs", label="ReflectionUtils.ImplementsGenericDefinition(list.GetType(), typeof(IList<>), out listDefinition)", span="434-434"];
m1_252 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateListWrapper(object)", file="CollectionUtils.cs", label="Func<Type, IList<object>, object> instanceCreator = (t, a) =>\r\n        {\r\n          ConstructorInfo c = t.GetConstructor(new[] {\\nlistDefinition});\r\n          return c.Invoke(new[] { list });\r\n        }", span="439-443"];
m1_253 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateListWrapper(object)", file="CollectionUtils.cs", label="return (IWrappedList)ReflectionUtils.CreateGeneric(typeof(ListWrapper<>), new[] { collectionItemType }, instanceCreator, list);", span="445-445"];
m1_254 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateListWrapper(object)", file="CollectionUtils.cs", label="list is IList", span="447-447"];
m1_255 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateListWrapper(object)", file="CollectionUtils.cs", label="return new ListWrapper<object>((IList)list);", span="449-449"];
m1_256 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateListWrapper(object)", file="CollectionUtils.cs", label="throw new Exception(''Can not create ListWrapper for type {0}.''.FormatWith(CultureInfo.InvariantCulture, list.GetType()));", span="453-453"];
m1_260 [cluster="lambda expression", file="CollectionUtils.cs", label="return c.Invoke(new[] { list });", span="442-442"];
m1_249 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateListWrapper(object)", file="CollectionUtils.cs", label="Type listDefinition", span="433-433"];
m1_236 [cluster="object.GetType()", file="CollectionUtils.cs", label="Entry object.GetType()", span="0-0"];
m1_251 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateListWrapper(object)", file="CollectionUtils.cs", label="Type collectionItemType = ReflectionUtils.GetCollectionItemType(listDefinition)", span="436-436"];
m1_237 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="132-132"];
m1_259 [cluster="lambda expression", file="CollectionUtils.cs", label="ConstructorInfo c = t.GetConstructor(new[] {listDefinition})", span="441-441"];
m1_238 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="217-217"];
m1_257 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateListWrapper(object)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CreateListWrapper(object)", span="429-429"];
m1_239 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<\\nSystem.Type, System.Collections.Generic.IList<object>, object>, params object[])", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<\\nSystem.Type, System.Collections.Generic.IList<object>, object>, params object[])", span="571-571"];
m1_92 [cluster="Newtonsoft.Json.Utilities.ListWrapper<T>.ListWrapper(System.Collections.IList)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ListWrapper<T>.ListWrapper(System.Collections.IList)", span="46-46"];
m1_166 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="CollectionUtils.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48"];
m1_165 [cluster="System.Exception.Exception(string)", file="CollectionUtils.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m1_123 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(System.Collections.ICollection)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(System.Collections.ICollection)", span="265-265"];
m1_124 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(System.Collections.ICollection)", file="CollectionUtils.cs", label="collection == null", span="267-267"];
m1_126 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(System.Collections.ICollection)", file="CollectionUtils.cs", label="T[] array = new T[collection.Count]", span="270-270"];
m1_127 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(System.Collections.ICollection)", file="CollectionUtils.cs", label="collection.CopyTo(array, 0)", span="271-271"];
m1_125 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(System.Collections.ICollection)", file="CollectionUtils.cs", label="throw new ArgumentNullException(''collection'');", span="268-268"];
m1_129 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(System.Collections.ICollection)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(System.Collections.ICollection)", span="265-265"];
m1_128 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(System.Collections.ICollection)", file="CollectionUtils.cs", label="return new List<T>(array);", span="273-273"];
m1_130 [cluster="System.Collections.ICollection.CopyTo(System.Array, int)", file="CollectionUtils.cs", label="Entry System.Collections.ICollection.CopyTo(System.Array, int)", span="0-0"];
m1_14 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="CollectionUtils.cs", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m1_225 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", span="402-402"];
m1_226 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="CollectionUtils.cs", label="ValidationUtils.ArgumentNotNull(list, ''list'')", span="404-404"];
m1_228 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="CollectionUtils.cs", label="ReflectionUtils.ImplementsGenericDefinition(list.GetType(), typeof(ICollection<>), out collectionDefinition)", span="407-407"];
m1_230 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="CollectionUtils.cs", label="Func<Type, IList<object>, object> instanceCreator = (t, a) =>\r\n        {\r\n          ConstructorInfo c = t.GetConstructor(new[] { \\ncollectionDefinition });\r\n          return c.Invoke(new[] { list });\r\n        }", span="412-416"];
m1_231 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="CollectionUtils.cs", label="return (IWrappedCollection)ReflectionUtils.CreateGeneric(typeof(CollectionWrapper<>), new[] { collectionItemType }, instanceCreator, \\nlist);", span="418-418"];
m1_232 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="CollectionUtils.cs", label="list is IList", span="420-420"];
m1_233 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="CollectionUtils.cs", label="return new CollectionWrapper<object>((IList)list);", span="422-422"];
m1_234 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="CollectionUtils.cs", label="throw new Exception(''Can not create ListWrapper for type {0}.''.FormatWith(CultureInfo.InvariantCulture, list.GetType()));", span="426-426"];
m1_243 [cluster="lambda expression", file="CollectionUtils.cs", label="return c.Invoke(new[] { list });", span="415-415"];
m1_227 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="CollectionUtils.cs", label="Type collectionDefinition", span="406-406"];
m1_229 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="CollectionUtils.cs", label="Type collectionItemType = ReflectionUtils.GetCollectionItemType(collectionDefinition)", span="409-409"];
m1_242 [cluster="lambda expression", file="CollectionUtils.cs", label="ConstructorInfo c = t.GetConstructor(new[] { collectionDefinition })", span="414-414"];
m1_235 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", span="402-402"];
m1_240 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", span="46-46"];
m1_217 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="390-390"];
m1_218 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="CollectionUtils.cs", label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="392-392"];
m1_219 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="CollectionUtils.cs", label="typeof(IDictionary).IsAssignableFrom(type)", span="394-394"];
m1_221 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="CollectionUtils.cs", label="ReflectionUtils.ImplementsGenericDefinition(type, typeof (IDictionary<,>))", span="396-396"];
m1_220 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="CollectionUtils.cs", label="return true;", span="395-395"];
m1_205 [cluster="System.Type.IsAssignableFrom(System.Type)", file="CollectionUtils.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m1_224 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="390-390"];
m1_222 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="CollectionUtils.cs", label="return true;", span="397-397"];
m1_223 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="CollectionUtils.cs", label="return false;", span="399-399"];
m1_206 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", span="126-126"];
m1_346 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<\\nT>)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<\\nT>)", span="580-580"];
m1_349 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<\\nT>)", file="CollectionUtils.cs", label="list.Add(value)", span="585-585"];
m1_352 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="CollectionUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="0-0"];
m1_348 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<\\nT>)", file="CollectionUtils.cs", label="return false;", span="583-583"];
m1_351 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<\\nT>)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<\\nT>)", span="580-580"];
m1_350 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<\\nT>)", file="CollectionUtils.cs", label="return true;", span="586-586"];
m1_86 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="CollectionUtils.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m1_262 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", span="457-457"];
m1_263 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="CollectionUtils.cs", label="ValidationUtils.ArgumentNotNull(dictionary, ''dictionary'')", span="459-459"];
m1_265 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="CollectionUtils.cs", label="ReflectionUtils.ImplementsGenericDefinition(dictionary.GetType(), typeof(IDictionary<,>), out dictionaryDefinition)", span="462-462"];
m1_268 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="CollectionUtils.cs", label="Func<Type, IList<object>, object> instanceCreator = (t, a) =>\r\n        {\r\n          ConstructorInfo c = t.GetConstructor(new[] { \\ndictionaryDefinition });\r\n          return c.Invoke(new[] { dictionary });\r\n        }", span="468-472"];
m1_269 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="CollectionUtils.cs", label="return (IWrappedDictionary)ReflectionUtils.CreateGeneric(typeof(DictionaryWrapper<,>), new[] { dictionaryKeyType, dictionaryValueType }, \\ninstanceCreator, dictionary);", span="474-474"];
m1_270 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="CollectionUtils.cs", label="dictionary is IDictionary", span="476-476"];
m1_271 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="CollectionUtils.cs", label="return new DictionaryWrapper<object, object>((IDictionary)dictionary);", span="478-478"];
m1_272 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="CollectionUtils.cs", label="throw new Exception(''Can not create DictionaryWrapper for type {0}.''.FormatWith(CultureInfo.InvariantCulture, dictionary.GetType()));", span="482-482"];
m1_279 [cluster="lambda expression", file="CollectionUtils.cs", label="return c.Invoke(new[] { dictionary });", span="471-471"];
m1_264 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="CollectionUtils.cs", label="Type dictionaryDefinition", span="461-461"];
m1_266 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="CollectionUtils.cs", label="Type dictionaryKeyType = ReflectionUtils.GetDictionaryKeyType(dictionaryDefinition)", span="464-464"];
m1_267 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="CollectionUtils.cs", label="Type dictionaryValueType = ReflectionUtils.GetDictionaryValueType(dictionaryDefinition)", span="465-465"];
m1_278 [cluster="lambda expression", file="CollectionUtils.cs", label="ConstructorInfo c = t.GetConstructor(new[] { dictionaryDefinition })", span="470-470"];
m1_274 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", span="280-280"];
m1_275 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", span="271-271"];
m1_273 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", span="457-457"];
m1_276 [cluster="Newtonsoft.Json.Utilities.DictionaryWrapper<TKey, TValue>.DictionaryWrapper(System.Collections.IDictionary)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.DictionaryWrapper<TKey, TValue>.DictionaryWrapper(System.Collections.IDictionary)", span="20-20"];
m1_25 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmptyOrDefault<T>(System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmptyOrDefault<T>(System.Collections.Generic.IList<T>)", span="89-89"];
m1_26 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmptyOrDefault<T>(System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="IsNullOrEmpty<T>(list)", span="91-91"];
m1_28 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmptyOrDefault<T>(System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="return ReflectionUtils.ItemsUnitializedValue<T>(list);", span="94-94"];
m1_27 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmptyOrDefault<T>(System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="return true;", span="92-92"];
m1_20 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="73-73"];
m1_29 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmptyOrDefault<T>(System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmptyOrDefault<T>(System.Collections.Generic.IList<T>)", span="89-89"];
m1_30 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", span="294-294"];
m1_149 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.TryGetSingleItem<T>(System.Collections.Generic.IList<T>, bool, out T)", file="CollectionUtils.cs", label="return MiscellaneousUtils.TryAction<T>(delegate { return GetSingleItem(list, returnDefaultIfEmpty); }, out value);", span="303-303"];
m1_153 [cluster="lambda expression", file="CollectionUtils.cs", label="return GetSingleItem(list, returnDefaultIfEmpty);", span="303-303"];
m1_150 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.TryGetSingleItem<T>(System.Collections.Generic.IList<T>, bool, out T)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.TryGetSingleItem<T>(System.Collections.Generic.IList<T>, bool, out T)", span="301-301"];
m1_151 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.TryAction<T>(Newtonsoft.Json.Utilities.Creator<T>, out T)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.TryAction<T>(Newtonsoft.Json.Utilities.Creator<T>, out T)", span="21-21"];
m1_152 [cluster="lambda expression", file="CollectionUtils.cs", label="Entry lambda expression", span="303-303"];
m1_78 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>)", span="194-194"];
m1_79 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>)", file="CollectionUtils.cs", label="initial == null", span="196-196"];
m1_81 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>)", file="CollectionUtils.cs", label="collection == null", span="199-199"];
m1_83 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>)", file="CollectionUtils.cs", label=collection, span="202-202"];
m1_84 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>)", file="CollectionUtils.cs", label="initial.Add(value)", span="204-204"];
m1_80 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>)", file="CollectionUtils.cs", label="throw new ArgumentNullException(''initial'');", span="197-197"];
m1_85 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>)", span="194-194"];
m1_82 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>)", file="CollectionUtils.cs", label="return;", span="200-200"];
m1_102 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Flatten<T>(params System.Collections.Generic.IList<T>[])", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.Flatten<T>(params System.Collections.Generic.IList<T>[])", span="229-229"];
m1_103 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Flatten<T>(params System.Collections.Generic.IList<T>[])", file="CollectionUtils.cs", label="List<List<T>> flattened = new List<List<T>>()", span="231-231"];
m1_105 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Flatten<T>(params System.Collections.Generic.IList<T>[])", file="CollectionUtils.cs", label="Recurse<T>(new List<IList<T>>(lists), 0, currentList, flattened)", span="234-234"];
m1_104 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Flatten<T>(params System.Collections.Generic.IList<T>[])", file="CollectionUtils.cs", label="Dictionary<int, T> currentList = new Dictionary<int, T>()", span="232-232"];
m1_106 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Flatten<T>(params System.Collections.Generic.IList<T>[])", file="CollectionUtils.cs", label="return flattened;", span="236-236"];
m1_74 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="CollectionUtils.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_107 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Flatten<T>(params System.Collections.Generic.IList<T>[])", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.Flatten<T>(params System.Collections.Generic.IList<T>[])", span="229-229"];
m1_0 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CastValid<T>(System.Collections.IEnumerable)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CastValid<T>(System.Collections.IEnumerable)", span="38-38"];
m1_1 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CastValid<T>(System.Collections.IEnumerable)", file="CollectionUtils.cs", label="ValidationUtils.ArgumentNotNull(enumerable, ''enumerable'')", span="40-40"];
m1_2 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CastValid<T>(System.Collections.IEnumerable)", file="CollectionUtils.cs", label="return enumerable.Cast<object>().Where(o => o is T).Cast<T>();", span="42-42"];
m1_5 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="CollectionUtils.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m1_3 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CastValid<T>(System.Collections.IEnumerable)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CastValid<T>(System.Collections.IEnumerable)", span="38-38"];
m1_8 [cluster="lambda expression", file="CollectionUtils.cs", label="Entry lambda expression", span="42-42"];
m1_207 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsCollectionType(System.Type)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsCollectionType(System.Type)", span="376-376"];
m1_208 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsCollectionType(System.Type)", file="CollectionUtils.cs", label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="378-378"];
m1_209 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsCollectionType(System.Type)", file="CollectionUtils.cs", label="type.IsArray", span="380-380"];
m1_211 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsCollectionType(System.Type)", file="CollectionUtils.cs", label="typeof(ICollection).IsAssignableFrom(type)", span="382-382"];
m1_213 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsCollectionType(System.Type)", file="CollectionUtils.cs", label="ReflectionUtils.ImplementsGenericDefinition(type, typeof(ICollection<>))", span="384-384"];
m1_210 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsCollectionType(System.Type)", file="CollectionUtils.cs", label="return true;", span="381-381"];
m1_216 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsCollectionType(System.Type)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IsCollectionType(System.Type)", span="376-376"];
m1_212 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsCollectionType(System.Type)", file="CollectionUtils.cs", label="return true;", span="383-383"];
m1_214 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsCollectionType(System.Type)", file="CollectionUtils.cs", label="return true;", span="385-385"];
m1_215 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsCollectionType(System.Type)", file="CollectionUtils.cs", label="return false;", span="387-387"];
m1_167 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Minus<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.Minus<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", span="322-322"];
m1_168 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Minus<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="ValidationUtils.ArgumentNotNull(list, ''list'')", span="324-324"];
m1_169 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Minus<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="List<T> result = new List<T>(list.Count)", span="326-326"];
m1_170 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Minus<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label=list, span="327-327"];
m1_171 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Minus<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="minus == null || !minus.Contains(t)", span="329-329"];
m1_172 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Minus<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="result.Add(t)", span="330-330"];
m1_173 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Minus<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="return result;", span="333-333"];
m1_175 [cluster="System.Collections.Generic.List<T>.List(int)", file="CollectionUtils.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m1_176 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="CollectionUtils.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m1_174 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Minus<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.Minus<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", span="322-322"];
m1_177 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateArray<T>(System.Collections.Generic.IEnumerable<T>)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CreateArray<T>(System.Collections.Generic.IEnumerable<T>)", span="336-336"];
m1_178 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateArray<T>(System.Collections.Generic.IEnumerable<T>)", file="CollectionUtils.cs", label="ValidationUtils.ArgumentNotNull(enumerable, ''enumerable'')", span="338-338"];
m1_179 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateArray<T>(System.Collections.Generic.IEnumerable<T>)", file="CollectionUtils.cs", label="enumerable is T[]", span="340-340"];
m1_180 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateArray<T>(System.Collections.Generic.IEnumerable<T>)", file="CollectionUtils.cs", label="return (T[])enumerable;", span="341-341"];
m1_181 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateArray<T>(System.Collections.Generic.IEnumerable<T>)", file="CollectionUtils.cs", label="List<T> tempList = new List<T>(enumerable)", span="343-343"];
m1_183 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateArray<T>(System.Collections.Generic.IEnumerable<T>)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CreateArray<T>(System.Collections.Generic.IEnumerable<T>)", span="336-336"];
m1_182 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateArray<T>(System.Collections.Generic.IEnumerable<T>)", file="CollectionUtils.cs", label="return tempList.ToArray();", span="344-344"];
m1_184 [cluster="System.Collections.Generic.List<T>.ToArray()", file="CollectionUtils.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m1_353 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>)", color=green, community=0, file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>)", prediction=1, span="589-589"];
m1_354 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>)", file="CollectionUtils.cs", label="return list.AddRangeDistinct(values, EqualityComparer<T>.Default);", span="591-591"];
m1_356 [cluster="System.Collections.Generic.IList<T>.AddRangeDistinct<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<\\nT>)", color=green, community=0, file="CollectionUtils.cs", label="Entry System.Collections.Generic.IList<T>.AddRangeDistinct<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<\\nT>)", prediction=2, span="594-594"];
m1_355 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<\\nT>)", span="589-589"];
m1_190 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericDictionary(System.Type, System.Type)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericDictionary(System.Type, System.Type)", span="354-354"];
m1_191 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericDictionary(System.Type, System.Type)", file="CollectionUtils.cs", label="ValidationUtils.ArgumentNotNull(keyType, ''keyType'')", span="356-356"];
m1_192 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericDictionary(System.Type, System.Type)", file="CollectionUtils.cs", label="ValidationUtils.ArgumentNotNull(valueType, ''valueType'')", span="357-357"];
m1_193 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericDictionary(System.Type, System.Type)", file="CollectionUtils.cs", label="return (IDictionary)ReflectionUtils.CreateGeneric(typeof(Dictionary<,>), keyType, valueType);", span="359-359"];
m1_194 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericDictionary(System.Type, System.Type)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericDictionary(System.Type, System.Type)", span="354-354"];
m1_87 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange(System.Collections.IList, System.Collections.IEnumerable)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddRange(System.Collections.IList, System.Collections.IEnumerable)", span="208-208"];
m1_88 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange(System.Collections.IList, System.Collections.IEnumerable)", file="CollectionUtils.cs", label="ValidationUtils.ArgumentNotNull(initial, ''initial'')", span="210-210"];
m1_89 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange(System.Collections.IList, System.Collections.IEnumerable)", file="CollectionUtils.cs", label="ListWrapper<object> wrapper = new ListWrapper<object>(initial)", span="212-212"];
m1_90 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange(System.Collections.IList, System.Collections.IEnumerable)", file="CollectionUtils.cs", label="wrapper.AddRange(collection.Cast<object>())", span="213-213"];
m1_91 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange(System.Collections.IList, System.Collections.IEnumerable)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddRange(System.Collections.IList, System.Collections.IEnumerable)", span="208-208"];
m1_93 [cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", file="CollectionUtils.cs", label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="194-194"];
m1_21 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="CollectionUtils.cs", label="collection != null", span="75-75"];
m1_22 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="CollectionUtils.cs", label="return (collection.Count == 0);", span="77-77"];
m1_23 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="CollectionUtils.cs", label="return true;", span="79-79"];
m1_24 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="73-73"];
m1_94 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Distinct<T>(System.Collections.Generic.List<T>)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.Distinct<T>(System.Collections.Generic.List<T>)", span="216-216"];
m1_95 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Distinct<T>(System.Collections.Generic.List<T>)", file="CollectionUtils.cs", label="List<T> distinctList = new List<T>()", span="218-218"];
m1_96 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Distinct<T>(System.Collections.Generic.List<T>)", file="CollectionUtils.cs", label=collection, span="220-220"];
m1_97 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Distinct<T>(System.Collections.Generic.List<T>)", file="CollectionUtils.cs", label="!distinctList.Contains(value)", span="222-222"];
m1_98 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Distinct<T>(System.Collections.Generic.List<T>)", file="CollectionUtils.cs", label="distinctList.Add(value)", span="223-223"];
m1_99 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Distinct<T>(System.Collections.Generic.List<T>)", file="CollectionUtils.cs", label="return distinctList;", span="226-226"];
m1_101 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="CollectionUtils.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m1_100 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Distinct<T>(System.Collections.Generic.List<T>)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.Distinct<T>(System.Collections.Generic.List<T>)", span="216-216"];
m1_61 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, System.Func<V, K>)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, System.Func<V, K>)", span="163-163"];
m1_62 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, System.Func<V, K>)", file="CollectionUtils.cs", label="keySelector == null", span="165-165"];
m1_65 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, System.Func<V, K>)", file="CollectionUtils.cs", label=source, span="170-170"];
m1_66 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, System.Func<V, K>)", file="CollectionUtils.cs", label="K key = keySelector(value)", span="173-173"];
m1_63 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, System.Func<V, K>)", file="CollectionUtils.cs", label="throw new ArgumentNullException(''keySelector'');", span="166-166"];
m1_64 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, System.Func<V, K>)", file="CollectionUtils.cs", label="Dictionary<K, List<V>> groupedValues = new Dictionary<K, List<V>>()", span="168-168"];
m1_73 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, System.Func<V, K>)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, System.Func<V, K>)", span="163-163"];
m1_68 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, System.Func<V, K>)", file="CollectionUtils.cs", label="!groupedValues.TryGetValue(key, out groupedValueList)", span="177-177"];
m1_70 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, System.Func<V, K>)", file="CollectionUtils.cs", label="groupedValues.Add(key, groupedValueList)", span="180-180"];
m1_72 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, System.Func<V, K>)", file="CollectionUtils.cs", label="return groupedValues;", span="186-186"];
m1_71 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, System.Func<V, K>)", file="CollectionUtils.cs", label="groupedValueList.Add(value)", span="183-183"];
m1_67 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, System.Func<V, K>)", file="CollectionUtils.cs", label="List<V> groupedValueList", span="174-174"];
m1_75 [cluster="System.Func<T, TResult>.Invoke(T)", file="CollectionUtils.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m1_76 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="CollectionUtils.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m1_69 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, System.Func<V, K>)", file="CollectionUtils.cs", label="groupedValueList = new List<V>()", span="179-179"];
m1_77 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="CollectionUtils.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m1_195 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", span="362-362"];
m1_196 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", file="CollectionUtils.cs", label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="364-364"];
m1_197 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", file="CollectionUtils.cs", label="type.IsArray", span="366-366"];
m1_199 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", file="CollectionUtils.cs", label="typeof(IList).IsAssignableFrom(type)", span="368-368"];
m1_201 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", file="CollectionUtils.cs", label="ReflectionUtils.ImplementsGenericDefinition(type, typeof(IList<>))", span="370-370"];
m1_198 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", file="CollectionUtils.cs", label="return true;", span="367-367"];
m1_204 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", span="362-362"];
m1_200 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", file="CollectionUtils.cs", label="return true;", span="369-369"];
m1_202 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", file="CollectionUtils.cs", label="return true;", span="371-371"];
m1_203 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", file="CollectionUtils.cs", label="return false;", span="373-373"];
m1_31 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?)", span="104-104"];
m1_32 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?)", file="CollectionUtils.cs", label="return Slice<T>(list, start, end, null);", span="106-106"];
m1_33 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?)", span="104-104"];
m1_11 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(params T[])", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(params T[])", span="45-45"];
m1_12 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(params T[])", file="CollectionUtils.cs", label="return new List<T>(values);", span="47-47"];
m1_13 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(params T[])", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(params T[])", span="45-45"];
m1_331 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToArray(System.Array, System.Type)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ToArray(System.Array, System.Type)", span="565-565"];
m1_334 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToArray(System.Array, System.Type)", file="CollectionUtils.cs", label="type == null", span="567-567"];
m1_336 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToArray(System.Array, System.Type)", file="CollectionUtils.cs", label="Array destinationArray = Array.CreateInstance(type, initial.Length)", span="570-570"];
m1_337 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToArray(System.Array, System.Type)", file="CollectionUtils.cs", label="Array.Copy(initial, 0, destinationArray, 0, initial.Length)", span="571-571"];
m1_335 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToArray(System.Array, System.Type)", file="CollectionUtils.cs", label="throw new ArgumentNullException(''type'');", span="568-568"];
m1_339 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToArray(System.Array, System.Type)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ToArray(System.Array, System.Type)", span="565-565"];
m1_340 [cluster="System.Array.CreateInstance(System.Type, int)", file="CollectionUtils.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m1_338 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToArray(System.Array, System.Type)", file="CollectionUtils.cs", label="return destinationArray;", span="572-572"];
m1_341 [cluster="System.Array.Copy(System.Array, int, System.Array, int, int)", file="CollectionUtils.cs", label="Entry System.Array.Copy(System.Array, int, System.Array, int, int)", span="0-0"];
m1_159 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", file="CollectionUtils.cs", label="list.Count == 1", span="313-313"];
m1_160 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", file="CollectionUtils.cs", label="return list[0];", span="314-314"];
m1_161 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", file="CollectionUtils.cs", label="returnDefaultIfEmpty && list.Count == 0", span="315-315"];
m1_163 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", file="CollectionUtils.cs", label="throw new Exception(''Expected single {0} in list but got {1}.''.FormatWith(CultureInfo.InvariantCulture, typeof(T), list.Count));", span="318-318"];
m1_164 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", span="311-311"];
m1_162 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", file="CollectionUtils.cs", label="return default(T);", span="316-316"];
m1_15 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty(System.Collections.ICollection)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty(System.Collections.ICollection)", span="57-57"];
m1_16 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty(System.Collections.ICollection)", file="CollectionUtils.cs", label="collection != null", span="59-59"];
m1_17 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty(System.Collections.ICollection)", file="CollectionUtils.cs", label="return (collection.Count == 0);", span="61-61"];
m1_18 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty(System.Collections.ICollection)", file="CollectionUtils.cs", label="return true;", span="63-63"];
m1_19 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty(System.Collections.ICollection)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty(System.Collections.ICollection)", span="57-57"];
m1_281 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", span="486-486"];
m1_282 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="ValidationUtils.ArgumentNotNull(listType, ''listType'')", span="488-488"];
m1_283 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="ValidationUtils.ArgumentNotNull(populateList, ''populateList'')", span="489-489"];
m1_287 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="listType.IsArray", span="495-495"];
m1_290 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="ReflectionUtils.InheritsGenericDefinition(listType, typeof(ReadOnlyCollection<>), out collectionType)", span="502-502"];
m1_294 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="listType.GetConstructors()", span="508-508"];
m1_300 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="throw new Exception(''Read-only type {0} does not have a public constructor that takes a type that implements {1}.''.FormatWith(\\nCultureInfo.InvariantCulture, listType, genericEnumerable));", span="523-523"];
m1_303 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="typeof(IList).IsAssignableFrom(listType)", span="530-530"];
m1_304 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="ReflectionUtils.IsInstantiatableType(listType)", span="532-532"];
m1_305 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="list = (IList)Activator.CreateInstance(listType)", span="533-533"];
m1_306 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="listType == typeof(IList)", span="534-534"];
m1_309 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="listType.IsGenericType && listType.GetGenericTypeDefinition() == typeof(IList<>)", span="539-539"];
m1_310 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="list = CollectionUtils.CreateGenericList(ReflectionUtils.GetCollectionItemType(listType))", span="541-541"];
m1_313 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="throw new Exception(''Cannot create and populate list type {0}.''.FormatWith(CultureInfo.InvariantCulture, listType));", span="549-549"];
m1_314 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="populateList(list, isReadOnlyOrFixedSize)", span="551-551"];
m1_316 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="listType.IsArray", span="556-556"];
m1_317 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="list = ToArray(((List<object>)list).ToArray(), ReflectionUtils.GetCollectionItemType(listType))", span="557-557"];
m1_318 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="ReflectionUtils.InheritsGenericDefinition(listType, typeof(ReadOnlyCollection<>))", span="558-558"];
m1_319 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="list = (IList)ReflectionUtils.CreateInstance(listType, list)", span="559-559"];
m1_284 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="IList list", span="491-491"];
m1_285 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="Type collectionType", span="492-492"];
m1_286 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="bool isReadOnlyOrFixedSize = false", span="493-493"];
m1_315 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label=isReadOnlyOrFixedSize, span="554-554"];
m1_288 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="list = new List<object>()", span="499-499"];
m1_289 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="isReadOnlyOrFixedSize = true", span="500-500"];
m1_312 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="list == null", span="548-548"];
m1_320 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="return list;", span="562-562"];
m1_322 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", span="179-179"];
m1_291 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="Type readOnlyCollectionContentsType = collectionType.GetGenericArguments()[0]", span="504-504"];
m1_323 [cluster="System.Type.GetGenericArguments()", file="CollectionUtils.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m1_292 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="Type genericEnumerable = ReflectionUtils.MakeGenericType(typeof(IEnumerable<>), readOnlyCollectionContentsType)", span="505-505"];
m1_301 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="list = (IList)CreateGenericList(readOnlyCollectionContentsType)", span="527-527"];
m1_324 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", span="552-552"];
m1_293 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="bool suitableConstructor = false", span="506-506"];
m1_297 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="genericEnumerable.IsAssignableFrom(parameters[0].ParameterType)", span="514-514"];
m1_299 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="!suitableConstructor", span="522-522"];
m1_325 [cluster="System.Type.GetConstructors()", file="CollectionUtils.cs", label="Entry System.Type.GetConstructors()", span="0-0"];
m1_295 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="IList<ParameterInfo> parameters = constructor.GetParameters()", span="510-510"];
m1_326 [cluster="System.Reflection.MethodBase.GetParameters()", file="CollectionUtils.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m1_296 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="parameters.Count == 1", span="512-512"];
m1_298 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="suitableConstructor = true", span="516-516"];
m1_321 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", span="486-486"];
m1_302 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="isReadOnlyOrFixedSize = true", span="528-528"];
m1_327 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", span="43-43"];
m1_328 [cluster="System.Activator.CreateInstance(System.Type)", file="CollectionUtils.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m1_307 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="list = new List<object>()", span="535-535"];
m1_308 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="list = null", span="537-537"];
m1_329 [cluster="System.Type.GetGenericTypeDefinition()", file="CollectionUtils.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m1_311 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="CollectionUtils.cs", label="list = null", span="545-545"];
m1_330 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="CollectionUtils.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m1_332 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", span="173-173"];
m1_333 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateInstance(System.Type, params object[])", color=green, community=0, file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CreateInstance(System.Type, params object[])", prediction=3, span="602-602"];
m1_9 [cluster="lambda expression", file="CollectionUtils.cs", label="o is T", span="42-42"];
m1_10 [cluster="lambda expression", file="CollectionUtils.cs", label="Exit lambda expression", span="42-42"];
m1_154 [cluster="lambda expression", file="CollectionUtils.cs", label="Exit lambda expression", span="303-303"];
m1_241 [cluster="lambda expression", file="CollectionUtils.cs", label="Entry lambda expression", span="412-416"];
m1_245 [cluster="System.Type.GetConstructor(System.Type[])", file="CollectionUtils.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m1_246 [cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="CollectionUtils.cs", label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0"];
m1_244 [cluster="lambda expression", file="CollectionUtils.cs", label="Exit lambda expression", span="412-416"];
m1_258 [cluster="lambda expression", file="CollectionUtils.cs", label="Entry lambda expression", span="439-443"];
m1_261 [cluster="lambda expression", file="CollectionUtils.cs", label="Exit lambda expression", span="439-443"];
m1_277 [cluster="lambda expression", file="CollectionUtils.cs", label="Entry lambda expression", span="468-472"];
m1_280 [cluster="lambda expression", file="CollectionUtils.cs", label="Exit lambda expression", span="468-472"];
m2_7 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="23-23"];
m2_8 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label=kind, span="25-25"];
m2_15 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''kind'', kind, ''Unexpected DateTimeKind value.'');", span="34-34"];
m2_9 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="DateTimeKind.Local", span="27-27"];
m2_11 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="DateTimeKind.Unspecified", span="29-29"];
m2_13 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="DateTimeKind.Utc", span="31-31"];
m2_10 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="return XmlDateTimeSerializationMode.Local;", span="28-28"];
m2_16 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="23-23"];
m2_12 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="return XmlDateTimeSerializationMode.Unspecified;", span="30-30"];
m2_14 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="return XmlDateTimeSerializationMode.Utc;", span="32-32"];
m2_17 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", color=green, community=0, file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", prediction=4, span="14-14"];
m2_0 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.GetLocalOffset(System.DateTime)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.GetLocalOffset(System.DateTime)", span="11-11"];
m2_1 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.GetLocalOffset(System.DateTime)", file="DateTimeUtils.cs", label="TimeSpan utcOffset", span="13-13"];
m2_2 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.GetLocalOffset(System.DateTime)", file="DateTimeUtils.cs", label="utcOffset = TimeZoneInfo.Local.GetUtcOffset(d)", span="17-17"];
m2_3 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.GetLocalOffset(System.DateTime)", file="DateTimeUtils.cs", label="return utcOffset.Hours.ToString(''+00;-00'', CultureInfo.InvariantCulture) + '':'' + utcOffset.Minutes.ToString(''00;00'', CultureInfo.InvariantCulture);", span="20-20"];
m2_5 [cluster="System.TimeZoneInfo.GetUtcOffset(System.DateTime)", file="DateTimeUtils.cs", label="Entry System.TimeZoneInfo.GetUtcOffset(System.DateTime)", span="0-0"];
m2_4 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.GetLocalOffset(System.DateTime)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.GetLocalOffset(System.DateTime)", span="11-11"];
m2_6 [cluster="int.ToString(string, System.IFormatProvider)", file="DateTimeUtils.cs", label="Entry int.ToString(string, System.IFormatProvider)", span="0-0"];
m3_0 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeEntity()", file="EntitiesSerializationTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeEntity()", span="39-39"];
m3_1 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeEntity()", file="EntitiesSerializationTests.cs", label="Folder rootFolder = CreateEntitiesTestData()", span="41-41"];
m3_2 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeEntity()", file="EntitiesSerializationTests.cs", label="string json = JsonConvert.SerializeObject(rootFolder, Formatting.Indented, new IsoDateTimeConverter())", span="43-43"];
m3_6 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", span="283-283"];
m3_3 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeEntity()", file="EntitiesSerializationTests.cs", label="string expected = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''FolderId'''': ''''a4e8ba80-eb24-4591-bb1c-62d3ad83701e'''',\r\n  ''''\\nName'''': ''''Root folder'''',\r\n  ''''Description'''': ''''Description!'''',\r\n  ''''CreatedDate'''': ''''2000-12-10T10:50:00Z'''',\r\n  ''''\\nFiles'''': [],\r\n  ''''ChildFolders'''': [\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''FolderId'''': ''''484936e2-7cbb-4592-93ff-b2103e5705e4'''',\r\n      ''''\\nName'''': ''''Child folder'''',\r\n      ''''Description'''': ''''Description!'''',\r\n      ''''CreatedDate'''': ''''2001-11-20T10:\\n50:00Z'''',\r\n      ''''Files'''': [\r\n        {\r\n          ''''$id'''': ''''3'''',\r\n          ''''FileId'''': ''''cc76d734-49f1-4616-bb38-41514228ac6c'''',\r\n          ''''\\nName'''': ''''File 1'''',\r\n          ''''Description'''': ''''Description!'''',\r\n          ''''CreatedDate'''': ''''2002-10-30T10:\\n50:00Z'''',\r\n          ''''Folder'''': {\r\n            ''''$ref'''': ''''2''''\r\n          },\r\n          ''''EntityKey'''': {\r\n            ''''$\\nid'''': ''''4'''',\r\n            ''''EntitySetName'''': ''''File'''',\r\n            ''''EntityContainerName'''': ''''DataServicesTestDatabaseEntities'''',\r\n            ''''\\nEntityKeyValues'''': [\r\n              {\r\n                ''''Key'''': ''''FileId'''',\r\n                ''''Type'''': ''''System.Guid'''',\r\n                ''''\\nValue'''': ''''cc76d734-49f1-4616-bb38-41514228ac6c''''\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      ],\r\n      ''''\\nChildFolders'''': [],\r\n      ''''ParentFolder'''': {\r\n        ''''$ref'''': ''''1''''\r\n      },\r\n      ''''EntityKey'''': {\r\n        ''''$\\nid'''': ''''5'''',\r\n        ''''EntitySetName'''': ''''Folder'''',\r\n        ''''EntityContainerName'''': ''''DataServicesTestDatabaseEntities'''',\r\n        ''''\\nEntityKeyValues'''': [\r\n          {\r\n            ''''Key'''': ''''FolderId'''',\r\n            ''''Type'''': ''''System.Guid'''',\r\n            ''''\\nValue'''': ''''484936e2-7cbb-4592-93ff-b2103e5705e4''''\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  ],\r\n  ''''ParentFolder'''': \\nnull,\r\n  ''''EntityKey'''': {\r\n    ''''$id'''': ''''6'''',\r\n    ''''EntitySetName'''': ''''Folder'''',\r\n    ''''EntityContainerName'''': ''''\\nDataServicesTestDatabaseEntities'''',\r\n    ''''EntityKeyValues'''': [\r\n      {\r\n        ''''Key'''': ''''FolderId'''',\r\n        ''''\\nType'''': ''''System.Guid'''',\r\n        ''''Value'''': ''''a4e8ba80-eb24-4591-bb1c-62d3ad83701e''''\r\n      }\r\n    ]\r\n  }\r\n}''", span="45-114"];
m3_4 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeEntity()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(expected, json)", span="116-116"];
m3_8 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="EntitiesSerializationTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="488-488"];
m3_7 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="EntitiesSerializationTests.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="12-12"];
m3_5 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeEntity()", file="EntitiesSerializationTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeEntity()", span="39-39"];
m3_10 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", span="120-120"];
m3_11 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''FolderId'''': ''''a4e8ba80-eb24-4591-bb1c-62d3ad83701e'''',\r\n  ''''Name'''': ''''\\nRoot folder'''',\r\n  ''''Description'''': ''''Description!'''',\r\n  ''''CreatedDate'''': ''''2000-12-10T10:50:00Z'''',\r\n  ''''\\nFiles'''': [],\r\n  ''''ChildFolders'''': [\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''FolderId'''': ''''484936e2-7cbb-4592-93ff-b2103e5705e4'''',\r\n      ''''\\nName'''': ''''Child folder'''',\r\n      ''''Description'''': ''''Description!'''',\r\n      ''''CreatedDate'''': ''''2001-11-20T10:\\n50:00Z'''',\r\n      ''''Files'''': [\r\n        {\r\n          ''''$id'''': ''''3'''',\r\n          ''''FileId'''': ''''cc76d734-49f1-4616-bb38-41514228ac6c'''',\r\n          ''''\\nName'''': ''''File 1'''',\r\n          ''''Description'''': ''''Description!'''',\r\n          ''''CreatedDate'''': ''''2002-10-30T10:\\n50:00Z'''',\r\n          ''''Folder'''': {\r\n            ''''$ref'''': ''''2''''\r\n          },\r\n          ''''EntityKey'''': {\r\n            ''''$\\nid'''': ''''4'''',\r\n            ''''EntitySetName'''': ''''File'''',\r\n            ''''EntityContainerName'''': ''''DataServicesTestDatabaseEntities'''',\r\n            ''''\\nEntityKeyValues'''': [\r\n              {\r\n                ''''Key'''': ''''FileId'''',\r\n                ''''Type'''': ''''System.Guid'''',\r\n                ''''\\nValue'''': ''''cc76d734-49f1-4616-bb38-41514228ac6c''''\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      ],\r\n      ''''\\nChildFolders'''': [],\r\n      ''''ParentFolder'''': {\r\n        ''''$ref'''': ''''1''''\r\n      },\r\n      ''''EntityKey'''': {\r\n        ''''$\\nid'''': ''''5'''',\r\n        ''''EntitySetName'''': ''''Folder'''',\r\n        ''''EntityContainerName'''': ''''DataServicesTestDatabaseEntities'''',\r\n        ''''\\nEntityKeyValues'''': [\r\n          {\r\n            ''''Key'''': ''''FolderId'''',\r\n            ''''Type'''': ''''System.Guid'''',\r\n            ''''\\nValue'''': ''''484936e2-7cbb-4592-93ff-b2103e5705e4''''\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  ],\r\n  ''''ParentFolder'''': \\nnull,\r\n  ''''EntityKey'''': {\r\n    ''''$id'''': ''''6'''',\r\n    ''''EntitySetName'''': ''''Folder'''',\r\n    ''''EntityContainerName'''': ''''\\nDataServicesTestDatabaseEntities'''',\r\n    ''''EntityKeyValues'''': [\r\n      {\r\n        ''''Key'''': ''''FolderId'''',\r\n        ''''\\nType'''': ''''System.Guid'''',\r\n        ''''Value'''': ''''a4e8ba80-eb24-4591-bb1c-62d3ad83701e''''\r\n      }\r\n    ]\r\n  }\r\n}''", span="122-191"];
m3_12 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Folder f = JsonConvert.DeserializeObject<Folder>(json, new IsoDateTimeConverter())", span="193-193"];
m3_33 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="EntitiesSerializationTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="577-577"];
m3_13 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Assert.IsNotNull(f)", span="195-195"];
m3_14 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(new Guid(''A4E8BA80-EB24-4591-BB1C-62D3AD83701E''), f.FolderId)", span="196-196"];
m3_15 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(''Folder'', f.EntityKey.EntitySetName)", span="197-197"];
m3_16 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(''DataServicesTestDatabaseEntities'', f.EntityKey.EntityContainerName)", span="198-198"];
m3_17 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(''Folder'', f.EntityKey.EntitySetName)", span="199-199"];
m3_18 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(false, f.EntityKey.IsTemporary)", span="200-200"];
m3_19 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(1, f.EntityKey.EntityKeyValues.Length)", span="201-201"];
m3_20 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(''FolderId'', f.EntityKey.EntityKeyValues[0].Key)", span="202-202"];
m3_21 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(new Guid(''A4E8BA80-EB24-4591-BB1C-62D3AD83701E''), f.EntityKey.EntityKeyValues[0].Value)", span="203-203"];
m3_22 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(''Root folder'', f.Name)", span="204-204"];
m3_23 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(new DateTime(2000, 12, 10, 10, 50, 0, DateTimeKind.Utc), f.CreatedDate)", span="205-205"];
m3_24 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(null, f.ParentFolder)", span="206-206"];
m3_25 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(1, f.ChildFolders.Count)", span="207-207"];
m3_26 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Folder childFolder = f.ChildFolders.ElementAt(0)", span="209-209"];
m3_29 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(f, childFolder.ParentFolder)", span="213-213"];
m3_30 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(f, childFolder.ParentFolderReference.Value)", span="214-214"];
m3_35 [cluster="System.Guid.Guid(string)", file="EntitiesSerializationTests.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m3_36 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="EntitiesSerializationTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m3_27 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(''Child folder'', childFolder.Name)", span="211-211"];
m3_28 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(''Description!'', childFolder.Description)", span="212-212"];
m3_31 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(null, childFolder.ParentFolderReference.EntityKey)", span="216-216"];
m3_32 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", file="EntitiesSerializationTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.DeserializeEntity()", span="120-120"];
m3_38 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeMultiValueEntityKey()", file="EntitiesSerializationTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeMultiValueEntityKey()", span="220-220"];
m3_39 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeMultiValueEntityKey()", file="EntitiesSerializationTests.cs", label="EntityKey e = new EntityKey(''DataServicesTestDatabaseEntities.Folder'',\r\n                                  new List<EntityKeyMember>\r\n                                    {\r\n                                      \\nnew EntityKeyMember(''GuidId'', new Guid(''A4E8BA80-EB24-4591-BB1C-62D3AD83701E'')),\r\n                                      new \\nEntityKeyMember(''IntId'', int.MaxValue),\r\n                                      new EntityKeyMember(''LongId'', long.MaxValue),\r\n                                      \\nnew EntityKeyMember(''StringId'', ''String!''),\r\n                                      new EntityKeyMember(''DateTimeId'', new \\nDateTime(2000, 12, 10, 10, 50, 0, DateTimeKind.Utc))\r\n                                    })", span="222-230"];
m3_57 [cluster="System.Collections.Generic.List<T>.List()", file="EntitiesSerializationTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m3_40 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeMultiValueEntityKey()", file="EntitiesSerializationTests.cs", label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="232-232"];
m3_43 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeMultiValueEntityKey()", file="EntitiesSerializationTests.cs", label="Assert.IsFalse(ReferenceEquals(e, newKey))", span="268-268"];
m3_41 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeMultiValueEntityKey()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''EntitySetName'''': ''''Folder'''',\r\n  ''''EntityContainerName'''': ''''\\nDataServicesTestDatabaseEntities'''',\r\n  ''''EntityKeyValues'''': [\r\n    {\r\n      ''''Key'''': ''''GuidId'''',\r\n      ''''\\nType'''': ''''System.Guid'''',\r\n      ''''Value'''': ''''a4e8ba80-eb24-4591-bb1c-62d3ad83701e''''\r\n    },\r\n    {\r\n      ''''\\nKey'''': ''''IntId'''',\r\n      ''''Type'''': ''''System.Int32'''',\r\n      ''''Value'''': ''''2147483647''''\r\n    },\r\n    {\r\n      ''''\\nKey'''': ''''LongId'''',\r\n      ''''Type'''': ''''System.Int64'''',\r\n      ''''Value'''': ''''9223372036854775807''''\r\n    },\r\n    {\r\n      ''''\\nKey'''': ''''StringId'''',\r\n      ''''Type'''': ''''System.String'''',\r\n      ''''Value'''': ''''String!''''\r\n    },\r\n    {\r\n      ''''\\nKey'''': ''''DateTimeId'''',\r\n      ''''Type'''': ''''System.DateTime'''',\r\n      ''''Value'''': ''''12/10/2000 10:50:00''''\r\n    }\r\n  ]\r\n}'', \\njson)", span="234-265"];
m3_42 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeMultiValueEntityKey()", file="EntitiesSerializationTests.cs", label="EntityKey newKey = JsonConvert.DeserializeObject<EntityKey>(json)", span="267-267"];
m3_44 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeMultiValueEntityKey()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(5, newKey.EntityKeyValues.Length)", span="270-270"];
m3_45 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeMultiValueEntityKey()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(''GuidId'', newKey.EntityKeyValues[0].Key)", span="271-271"];
m3_46 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeMultiValueEntityKey()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(new Guid(''A4E8BA80-EB24-4591-BB1C-62D3AD83701E''), newKey.EntityKeyValues[0].Value)", span="272-272"];
m3_47 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeMultiValueEntityKey()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(''IntId'', newKey.EntityKeyValues[1].Key)", span="273-273"];
m3_48 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeMultiValueEntityKey()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(int.MaxValue, newKey.EntityKeyValues[1].Value)", span="274-274"];
m3_49 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeMultiValueEntityKey()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(''LongId'', newKey.EntityKeyValues[2].Key)", span="275-275"];
m3_50 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeMultiValueEntityKey()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(long.MaxValue, newKey.EntityKeyValues[2].Value)", span="276-276"];
m3_51 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeMultiValueEntityKey()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(''StringId'', newKey.EntityKeyValues[3].Key)", span="277-277"];
m3_52 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeMultiValueEntityKey()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(''String!'', newKey.EntityKeyValues[3].Value)", span="278-278"];
m3_53 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeMultiValueEntityKey()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(''DateTimeId'', newKey.EntityKeyValues[4].Key)", span="279-279"];
m3_54 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeMultiValueEntityKey()", file="EntitiesSerializationTests.cs", label="Assert.AreEqual(new DateTime(2000, 12, 10, 10, 50, 0, DateTimeKind.Utc), newKey.EntityKeyValues[4].Value)", span="280-280"];
m3_60 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="EntitiesSerializationTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="549-549"];
m3_55 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeMultiValueEntityKey()", file="EntitiesSerializationTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.SerializeMultiValueEntityKey()", span="220-220"];
m3_63 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="Folder folder = new Folder()", span="285-285"];
m3_85 [cluster="Newtonsoft.Json.Tests.Folder.Folder()", file="EntitiesSerializationTests.cs", label="Entry Newtonsoft.Json.Tests.Folder.Folder()", span="260-260"];
m3_64 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="folder.FolderId = new Guid(''A4E8BA80-EB24-4591-BB1C-62D3AD83701E'')", span="286-286"];
m3_65 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="folder.EntityKey = new EntityKey(''DataServicesTestDatabaseEntities.Folder'', ''FolderId'', folder.FolderId)", span="287-287"];
m3_66 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="folder.Name = ''Root folder''", span="288-288"];
m3_67 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="folder.Description = ''Description!''", span="289-289"];
m3_68 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="folder.CreatedDate = new DateTime(2000, 12, 10, 10, 50, 0, DateTimeKind.Utc)", span="290-290"];
m3_75 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="folder.ChildFolders.Add(childFolder)", span="299-299"];
m3_83 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="return folder;", span="309-309"];
m3_69 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="Folder childFolder = new Folder()", span="292-292"];
m3_70 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="childFolder.FolderId = new Guid(''484936E2-7CBB-4592-93FF-B2103E5705E4'')", span="293-293"];
m3_71 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="childFolder.EntityKey = new EntityKey(''DataServicesTestDatabaseEntities.Folder'', ''FolderId'', childFolder.FolderId)", span="294-294"];
m3_72 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="childFolder.Name = ''Child folder''", span="295-295"];
m3_73 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="childFolder.Description = ''Description!''", span="296-296"];
m3_74 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="childFolder.CreatedDate = new DateTime(2001, 11, 20, 10, 50, 0, DateTimeKind.Utc)", span="297-297"];
m3_82 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="childFolder.Files.Add(file1)", span="308-308"];
m3_76 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="File file1 = new File()", span="301-301"];
m3_87 [cluster="Newtonsoft.Json.Tests.File.File()", file="EntitiesSerializationTests.cs", label="Entry Newtonsoft.Json.Tests.File.File()", span="103-103"];
m3_77 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="file1.FileId = new Guid(''CC76D734-49F1-4616-BB38-41514228AC6C'')", span="302-302"];
m3_78 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="file1.EntityKey = new EntityKey(''DataServicesTestDatabaseEntities.File'', ''FileId'', file1.FileId)", span="303-303"];
m3_79 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="file1.Name = ''File 1''", span="304-304"];
m3_80 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="file1.Description = ''Description!''", span="305-305"];
m3_81 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="file1.CreatedDate = new DateTime(2002, 10, 30, 10, 50, 0, DateTimeKind.Utc)", span="306-306"];
m3_84 [cluster="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", file="EntitiesSerializationTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests.CreateEntitiesTestData()", span="283-283"];
m4_23 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="94-94"];
m4_25 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="reader.TokenType == JsonToken.Null", span="100-100"];
m4_26 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="!ReflectionUtils.IsNullableType(objectType)", span="102-102"];
m4_27 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="throw new Exception(''Cannot convert null value to {0}.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="103-103"];
m4_29 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="reader.TokenType != JsonToken.String", span="108-108"];
m4_30 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="throw new Exception(''Unexpected token parsing date. Expected String, got {0}.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="109-109"];
m4_31 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="string dateText = reader.Value.ToString()", span="111-111"];
m4_41 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="IsoDateTimeConverter.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m4_32 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="t == typeof(DateTimeOffset)", span="113-113"];
m4_33 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="!string.IsNullOrEmpty(_dateTimeFormat)", span="115-115"];
m4_40 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="76-76"];
m4_28 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="return null;", span="105-105"];
m4_39 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="Exit Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="94-94"];
m4_19 [cluster="System.Exception.Exception(string)", file="IsoDateTimeConverter.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m4_21 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="IsoDateTimeConverter.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48"];
m4_34 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="return DateTimeOffset.ParseExact(dateText, _dateTimeFormat, Culture, _dateTimeStyles);", span="116-116"];
m4_35 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="return DateTimeOffset.Parse(dateText, Culture, _dateTimeStyles);", span="118-118"];
m4_37 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="return DateTime.ParseExact(dateText, _dateTimeFormat, Culture, _dateTimeStyles);", span="122-122"];
m4_38 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="return DateTime.Parse(dateText, Culture, _dateTimeStyles);", span="124-124"];
m4_42 [cluster="object.ToString()", file="IsoDateTimeConverter.cs", label="Entry object.ToString()", span="0-0"];
m4_36 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="!string.IsNullOrEmpty(_dateTimeFormat)", span="121-121"];
m4_43 [cluster="string.IsNullOrEmpty(string)", file="IsoDateTimeConverter.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m4_44 [cluster="System.DateTimeOffset.ParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles)", file="IsoDateTimeConverter.cs", label="Entry System.DateTimeOffset.ParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles)", span="0-0"];
m4_45 [cluster="System.DateTimeOffset.Parse(string, System.IFormatProvider, System.Globalization.DateTimeStyles)", file="IsoDateTimeConverter.cs", label="Entry System.DateTimeOffset.Parse(string, System.IFormatProvider, System.Globalization.DateTimeStyles)", span="0-0"];
m4_46 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles)", file="IsoDateTimeConverter.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles)", span="0-0"];
m4_47 [cluster="System.DateTime.Parse(string, System.IFormatProvider, System.Globalization.DateTimeStyles)", file="IsoDateTimeConverter.cs", label="Entry System.DateTime.Parse(string, System.IFormatProvider, System.Globalization.DateTimeStyles)", span="0-0"];
m4_48 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.CanConvert(System.Type)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.CanConvert(System.Type)", span="134-134"];
m4_49 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.CanConvert(System.Type)", file="IsoDateTimeConverter.cs", label="Type t = (ReflectionUtils.IsNullableType(objectType))\r\n        ? Nullable.GetUnderlyingType(objectType)\r\n        : objectType", span="136-138"];
m4_50 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.CanConvert(System.Type)", file="IsoDateTimeConverter.cs", label="typeof(DateTime).IsAssignableFrom(t)", span="140-140"];
m4_52 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.CanConvert(System.Type)", file="IsoDateTimeConverter.cs", label="typeof(DateTimeOffset).IsAssignableFrom(t)", span="142-142"];
m4_51 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.CanConvert(System.Type)", file="IsoDateTimeConverter.cs", label="return true;", span="141-141"];
m4_56 [cluster="System.Type.IsAssignableFrom(System.Type)", file="IsoDateTimeConverter.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m4_55 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.CanConvert(System.Type)", file="IsoDateTimeConverter.cs", label="Exit Newtonsoft.Json.Converters.IsoDateTimeConverter.CanConvert(System.Type)", span="134-134"];
m4_53 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.CanConvert(System.Type)", file="IsoDateTimeConverter.cs", label="return true;", span="143-143"];
m4_54 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.CanConvert(System.Type)", file="IsoDateTimeConverter.cs", label="return false;", span="145-145"];
m4_0 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="56-56"];
m4_1 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="string text", span="58-58"];
m4_2 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="value is DateTime", span="60-60"];
m4_3 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="DateTime dateTime = (DateTime)value", span="62-62"];
m4_7 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="value is DateTimeOffset", span="70-70"];
m4_8 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="DateTimeOffset dateTimeOffset = (DateTimeOffset)value", span="72-72"];
m4_12 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="throw new Exception(''Unexpected value when converting date. Expected DateTime or DateTimeOffset, got {0}.''.FormatWith(CultureInfo.InvariantCulture, \\nReflectionUtils.GetObjectType(value)));", span="81-81"];
m4_13 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="writer.WriteValue(text)", span="84-84"];
m4_4 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="(_dateTimeStyles & DateTimeStyles.AdjustToUniversal) == DateTimeStyles.AdjustToUniversal\r\n          || (_dateTimeStyles & DateTimeStyles.AssumeUniversal) == \\nDateTimeStyles.AssumeUniversal", span="64-65"];
m4_5 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="dateTime = dateTime.ToUniversalTime()", span="66-66"];
m4_6 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="text = dateTime.ToString(_dateTimeFormat ?? DefaultDateTimeFormat, Culture)", span="68-68"];
m4_15 [cluster="System.DateTime.ToUniversalTime()", file="IsoDateTimeConverter.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m4_16 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="IsoDateTimeConverter.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m4_9 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="(_dateTimeStyles & DateTimeStyles.AdjustToUniversal) == DateTimeStyles.AdjustToUniversal\r\n          || (_dateTimeStyles & DateTimeStyles.AssumeUniversal) == \\nDateTimeStyles.AssumeUniversal", span="73-74"];
m4_10 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="dateTimeOffset = dateTimeOffset.ToUniversalTime()", span="75-75"];
m4_11 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="text = dateTimeOffset.ToString(_dateTimeFormat ?? DefaultDateTimeFormat, Culture)", span="77-77"];
m4_17 [cluster="System.DateTimeOffset.ToUniversalTime()", file="IsoDateTimeConverter.cs", label="Entry System.DateTimeOffset.ToUniversalTime()", span="0-0"];
m4_18 [cluster="System.DateTimeOffset.ToString(string, System.IFormatProvider)", file="IsoDateTimeConverter.cs", label="Entry System.DateTimeOffset.ToString(string, System.IFormatProvider)", span="0-0"];
m4_20 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="38-38"];
m4_14 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverter.cs", label="Exit Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="56-56"];
m4_22 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="651-651"];
m5_109 [cluster="Newtonsoft.Json.JsonConvert.ToString(decimal)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(decimal)", span="311-311"];
m5_110 [cluster="Newtonsoft.Json.JsonConvert.ToString(decimal)", file="JsonConvert.cs", label="return EnsureDecimalPlace(value.ToString(null, CultureInfo.InvariantCulture));", span="313-313"];
m5_111 [cluster="Newtonsoft.Json.JsonConvert.ToString(decimal)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(decimal)", span="311-311"];
m5_96 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", span="278-278"];
m5_112 [cluster="decimal.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry decimal.ToString(string, System.IFormatProvider)", span="0-0"];
m5_113 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Guid)", span="321-321"];
m5_114 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid)", file="JsonConvert.cs", label="return '''' + value.ToString(''D'', CultureInfo.InvariantCulture) + '''';", span="323-323"];
m5_115 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.Guid)", span="321-321"];
m5_116 [cluster="System.Guid.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry System.Guid.ToString(string, System.IFormatProvider)", span="0-0"];
m5_48 [cluster="Newtonsoft.Json.JsonConvert.ToString(char)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(char)", span="175-175"];
m5_49 [cluster="Newtonsoft.Json.JsonConvert.ToString(char)", file="JsonConvert.cs", label="return ToString(char.ToString(value));", span="177-177"];
m5_51 [cluster="char.ToString(char)", file="JsonConvert.cs", label="Entry char.ToString(char)", span="0-0"];
m5_50 [cluster="Newtonsoft.Json.JsonConvert.ToString(char)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(char)", span="175-175"];
m5_52 [cluster="Newtonsoft.Json.JsonConvert.ToString(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(string)", span="331-331"];
m5_222 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="488-488"];
m5_223 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="JsonSerializerSettings settings = (converters != null && converters.Length > 0)\r\n        ? new JsonSerializerSettings { Converters = \\nconverters }\r\n        : null", span="490-492"];
m5_224 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="return SerializeObject(value, formatting, settings);", span="494-494"];
m5_226 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="84-84"];
m5_225 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="488-488"];
m5_215 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="507-507"];
m5_0 [cluster="Newtonsoft.Json.JsonConvert.JsonConvert()", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.JsonConvert()", span="82-82"];
m5_1 [cluster="Newtonsoft.Json.JsonConvert.JsonConvert()", file="JsonConvert.cs", label="True = ''true''", span="84-84"];
m5_2 [cluster="Newtonsoft.Json.JsonConvert.JsonConvert()", file="JsonConvert.cs", label="False = ''false''", span="85-85"];
m5_3 [cluster="Newtonsoft.Json.JsonConvert.JsonConvert()", file="JsonConvert.cs", label="Null = ''null''", span="86-86"];
m5_4 [cluster="Newtonsoft.Json.JsonConvert.JsonConvert()", file="JsonConvert.cs", label="Undefined = ''undefined''", span="87-87"];
m5_5 [cluster="Newtonsoft.Json.JsonConvert.JsonConvert()", file="JsonConvert.cs", label="PositiveInfinity = ''Infinity''", span="88-88"];
m5_6 [cluster="Newtonsoft.Json.JsonConvert.JsonConvert()", file="JsonConvert.cs", label="NegativeInfinity = ''-Infinity''", span="89-89"];
m5_7 [cluster="Newtonsoft.Json.JsonConvert.JsonConvert()", file="JsonConvert.cs", label="NaN = ''NaN''", span="90-90"];
m5_8 [cluster="Newtonsoft.Json.JsonConvert.JsonConvert()", file="JsonConvert.cs", label="InitialJavaScriptDateTicks = (new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc)).Ticks", span="92-92"];
m5_9 [cluster="Newtonsoft.Json.JsonConvert.JsonConvert()", file="JsonConvert.cs", label="MinimumJavaScriptDate = new DateTime(100, 1, 1)", span="93-93"];
m5_11 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonConvert.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m5_10 [cluster="Newtonsoft.Json.JsonConvert.JsonConvert()", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.JsonConvert()", span="82-82"];
m5_12 [cluster="System.DateTime.DateTime(int, int, int)", file="JsonConvert.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m5_243 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="538-538"];
m5_244 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonConvert.cs", label="return DeserializeObject(value, type, (JsonSerializerSettings)null);", span="540-540"];
m5_245 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="538-538"];
m5_242 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="623-623"];
m5_97 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="JsonConvert.cs", label="text.IndexOf('.') != -1", span="280-280"];
m5_98 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="JsonConvert.cs", label="return text;", span="281-281"];
m5_99 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="JsonConvert.cs", label="return text + ''.0'';", span="283-283"];
m5_95 [cluster="string.IndexOf(char)", file="JsonConvert.cs", label="Entry string.IndexOf(char)", span="0-0"];
m5_100 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", span="278-278"];
m5_105 [cluster="Newtonsoft.Json.JsonConvert.ToString(sbyte)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(sbyte)", span="301-301"];
m5_106 [cluster="Newtonsoft.Json.JsonConvert.ToString(sbyte)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="303-303"];
m5_107 [cluster="Newtonsoft.Json.JsonConvert.ToString(sbyte)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(sbyte)", span="301-301"];
m5_108 [cluster="sbyte.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry sbyte.ToString(string, System.IFormatProvider)", span="0-0"];
m5_227 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="JsonSerializer jsonSerializer = JsonSerializer.Create(settings)", span="509-509"];
m5_230 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="jsonWriter.Formatting = formatting", span="514-514"];
m5_231 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="jsonSerializer.Serialize(jsonWriter, value)", span="516-516"];
m5_234 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="258-258"];
m5_228 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="511-511"];
m5_229 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="512-512"];
m5_232 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return sw.ToString();", span="519-519"];
m5_235 [cluster="System.IO.StringWriter.StringWriter(System.IFormatProvider)", file="JsonConvert.cs", label="Entry System.IO.StringWriter.StringWriter(System.IFormatProvider)", span="0-0"];
m5_237 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="374-374"];
m5_238 [cluster="System.IO.StringWriter.ToString()", file="JsonConvert.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m5_233 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="507-507"];
m5_256 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", span="604-604"];
m5_259 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="JsonSerializerSettings settings = (converters != null && converters.Length > 0)\r\n        ? new JsonSerializerSettings { Converters = \\nconverters }\r\n        : null", span="606-608"];
m5_260 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="return DeserializeObject(value, type, settings);", span="610-610"];
m5_261 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", span="604-604"];
m5_20 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)", span="118-118"];
m5_21 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)", file="JsonConvert.cs", label="return ToStringInternal(value.UtcDateTime, value.Offset, DateTimeKind.Local);", span="120-120"];
m5_22 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)", span="118-118"];
m5_19 [cluster="Newtonsoft.Json.JsonConvert.ToStringInternal(System.DateTime, System.TimeSpan, System.DateTimeKind)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToStringInternal(System.DateTime, System.TimeSpan, System.DateTimeKind)", span="123-123"];
m5_117 [cluster="Newtonsoft.Json.JsonConvert.ToString(string)", file="JsonConvert.cs", label="return ToString(value, '''');", span="333-333"];
m5_118 [cluster="Newtonsoft.Json.JsonConvert.ToString(string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(string)", span="331-331"];
m5_119 [cluster="Newtonsoft.Json.JsonConvert.ToString(string, char)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(string, char)", span="342-342"];
m5_250 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="565-565"];
m5_251 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonConvert.cs", label="return DeserializeObject<T>(value);", span="567-567"];
m5_252 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="565-565"];
m5_246 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="549-549"];
m5_85 [cluster="Newtonsoft.Json.JsonConvert.ToString(double)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(double)", span="265-265"];
m5_86 [cluster="Newtonsoft.Json.JsonConvert.ToString(double)", file="JsonConvert.cs", label="return EnsureDecimalPlace(value, value.ToString(''R'', CultureInfo.InvariantCulture));", span="267-267"];
m5_87 [cluster="Newtonsoft.Json.JsonConvert.ToString(double)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(double)", span="265-265"];
m5_84 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", span="270-270"];
m5_88 [cluster="double.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry double.ToString(string, System.IFormatProvider)", span="0-0"];
m5_53 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Enum)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Enum)", span="185-185"];
m5_54 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Enum)", file="JsonConvert.cs", label="return value.ToString(''D'');", span="187-187"];
m5_55 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Enum)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.Enum)", span="185-185"];
m5_56 [cluster="System.Enum.ToString(string)", file="JsonConvert.cs", label="Entry System.Enum.ToString(string)", span="0-0"];
m5_60 [cluster="Newtonsoft.Json.JsonConvert.ToString(short)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(short)", span="205-205"];
m5_61 [cluster="Newtonsoft.Json.JsonConvert.ToString(short)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="207-207"];
m5_62 [cluster="Newtonsoft.Json.JsonConvert.ToString(short)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(short)", span="205-205"];
m5_63 [cluster="short.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry short.ToString(string, System.IFormatProvider)", span="0-0"];
m5_57 [cluster="Newtonsoft.Json.JsonConvert.ToString(int)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(int)", span="195-195"];
m5_58 [cluster="Newtonsoft.Json.JsonConvert.ToString(int)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="197-197"];
m5_33 [cluster="int.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry int.ToString(string, System.IFormatProvider)", span="0-0"];
m5_59 [cluster="Newtonsoft.Json.JsonConvert.ToString(int)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(int)", span="195-195"];
m5_285 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", span="670-670"];
m5_286 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="JsonConvert.cs", label="XmlNodeConverter converter = new XmlNodeConverter()", span="672-672"];
m5_287 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="JsonConvert.cs", label="converter.DeserializeRootElementName = deserializeRootElementName", span="673-673"];
m5_288 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="JsonConvert.cs", label="return (XmlDocument)DeserializeObject(value, typeof(XmlDocument), converter);", span="675-675"];
m5_280 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", span="38-38"];
m5_289 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", span="670-670"];
m5_68 [cluster="Newtonsoft.Json.JsonConvert.ToString(uint)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(uint)", span="225-225"];
m5_69 [cluster="Newtonsoft.Json.JsonConvert.ToString(uint)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="227-227"];
m5_70 [cluster="Newtonsoft.Json.JsonConvert.ToString(uint)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(uint)", span="225-225"];
m5_71 [cluster="uint.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry uint.ToString(string, System.IFormatProvider)", span="0-0"];
m5_72 [cluster="Newtonsoft.Json.JsonConvert.ToString(long)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(long)", span="235-235"];
m5_73 [cluster="Newtonsoft.Json.JsonConvert.ToString(long)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="237-237"];
m5_74 [cluster="Newtonsoft.Json.JsonConvert.ToString(long)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(long)", span="235-235"];
m5_75 [cluster="long.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry long.ToString(string, System.IFormatProvider)", span="0-0"];
m5_76 [cluster="Newtonsoft.Json.JsonConvert.ToString(ulong)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(ulong)", span="245-245"];
m5_77 [cluster="Newtonsoft.Json.JsonConvert.ToString(ulong)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="247-247"];
m5_79 [cluster="ulong.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry ulong.ToString(string, System.IFormatProvider)", span="0-0"];
m5_78 [cluster="Newtonsoft.Json.JsonConvert.ToString(ulong)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(ulong)", span="245-245"];
m5_216 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="465-465"];
m5_217 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="return SerializeObject(value, formatting, (JsonSerializerSettings)null);", span="467-467"];
m5_218 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="465-465"];
m5_80 [cluster="Newtonsoft.Json.JsonConvert.ToString(float)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(float)", span="255-255"];
m5_81 [cluster="Newtonsoft.Json.JsonConvert.ToString(float)", file="JsonConvert.cs", label="return EnsureDecimalPlace(value, value.ToString(''R'', CultureInfo.InvariantCulture));", span="257-257"];
m5_82 [cluster="Newtonsoft.Json.JsonConvert.ToString(float)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(float)", span="255-255"];
m5_83 [cluster="float.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry float.ToString(string, System.IFormatProvider)", span="0-0"];
m5_32 [cluster="Newtonsoft.Json.JsonConvert.ConvertDateTimeToJavaScriptTicks(System.DateTime)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ConvertDateTimeToJavaScriptTicks(System.DateTime)", span="141-141"];
m5_35 [cluster="Newtonsoft.Json.JsonConvert.ConvertDateTimeToJavaScriptTicks(System.DateTime)", file="JsonConvert.cs", label="DateTime utcDateTime = dateTime.ToUniversalTime()", span="143-143"];
m5_39 [cluster="System.DateTime.ToUniversalTime()", file="JsonConvert.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m5_37 [cluster="Newtonsoft.Json.JsonConvert.ConvertDateTimeToJavaScriptTicks(System.DateTime)", file="JsonConvert.cs", label="return javaScriptTicks;", span="150-150"];
m5_38 [cluster="Newtonsoft.Json.JsonConvert.ConvertDateTimeToJavaScriptTicks(System.DateTime)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ConvertDateTimeToJavaScriptTicks(System.DateTime)", span="141-141"];
m5_120 [cluster="Newtonsoft.Json.JsonConvert.ToString(string, char)", file="JsonConvert.cs", label="return JavaScriptUtils.ToEscapedJavaScriptString(value, delimter, true);", span="344-344"];
m5_121 [cluster="Newtonsoft.Json.JsonConvert.ToString(string, char)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(string, char)", span="342-342"];
m5_249 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="592-592"];
m5_257 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return (T)DeserializeObject(value, typeof(T), settings);", span="594-594"];
m5_258 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="592-592"];
m5_262 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="StringReader sr = new StringReader(value)", span="625-625"];
m5_263 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="JsonSerializer jsonSerializer = JsonSerializer.Create(settings)", span="626-626"];
m5_266 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="deserializedValue = jsonSerializer.Deserialize(jsonReader, type)", span="632-632"];
m5_265 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="630-630"];
m5_271 [cluster="System.IO.StringReader.StringReader(string)", file="JsonConvert.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m5_264 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="object deserializedValue", span="628-628"];
m5_272 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="51-51"];
m5_267 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="jsonReader.Read() && jsonReader.TokenType != JsonToken.Comment", span="634-634"];
m5_269 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return deserializedValue;", span="638-638"];
m5_273 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="344-344"];
m5_268 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="throw new JsonSerializationException(''Additional text found in JSON string after finishing deserializing object.'');", span="635-635"];
m5_275 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="48-48"];
m5_270 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="623-623"];
m5_239 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="527-527"];
m5_240 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonConvert.cs", label="return DeserializeObject(value, null, (JsonSerializerSettings)null);", span="529-529"];
m5_241 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="527-527"];
m5_64 [cluster="Newtonsoft.Json.JsonConvert.ToString(ushort)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(ushort)", span="215-215"];
m5_65 [cluster="Newtonsoft.Json.JsonConvert.ToString(ushort)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="217-217"];
m5_66 [cluster="Newtonsoft.Json.JsonConvert.ToString(ushort)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(ushort)", span="215-215"];
m5_67 [cluster="ushort.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry ushort.ToString(string, System.IFormatProvider)", span="0-0"];
m5_23 [cluster="Newtonsoft.Json.JsonConvert.ToStringInternal(System.DateTime, System.TimeSpan, System.DateTimeKind)", file="JsonConvert.cs", label="long javaScriptTicks = ConvertDateTimeToJavaScriptTicks(value)", span="125-125"];
m5_25 [cluster="Newtonsoft.Json.JsonConvert.ToStringInternal(System.DateTime, System.TimeSpan, System.DateTimeKind)", file="JsonConvert.cs", label=kind, span="128-128"];
m5_28 [cluster="Newtonsoft.Json.JsonConvert.ToStringInternal(System.DateTime, System.TimeSpan, System.DateTimeKind)", file="JsonConvert.cs", label="timezoneOffset = offset.Hours.ToString(''+00;-00'', CultureInfo.InvariantCulture) + offset.Minutes.ToString(''00;00'', CultureInfo.InvariantCulture)", span="132-132"];
m5_24 [cluster="Newtonsoft.Json.JsonConvert.ToStringInternal(System.DateTime, System.TimeSpan, System.DateTimeKind)", file="JsonConvert.cs", label="string timezoneOffset", span="127-127"];
m5_30 [cluster="Newtonsoft.Json.JsonConvert.ToStringInternal(System.DateTime, System.TimeSpan, System.DateTimeKind)", file="JsonConvert.cs", label="return @''''''\/Date('' + javaScriptTicks.ToString(CultureInfo.InvariantCulture) + timezoneOffset + @'')\/'''''';", span="138-138"];
m5_26 [cluster="Newtonsoft.Json.JsonConvert.ToStringInternal(System.DateTime, System.TimeSpan, System.DateTimeKind)", file="JsonConvert.cs", label="DateTimeKind.Local", span="130-130"];
m5_29 [cluster="Newtonsoft.Json.JsonConvert.ToStringInternal(System.DateTime, System.TimeSpan, System.DateTimeKind)", file="JsonConvert.cs", label="timezoneOffset = string.Empty", span="135-135"];
m5_27 [cluster="Newtonsoft.Json.JsonConvert.ToStringInternal(System.DateTime, System.TimeSpan, System.DateTimeKind)", file="JsonConvert.cs", label="DateTimeKind.Unspecified", span="131-131"];
m5_34 [cluster="long.ToString(System.IFormatProvider)", file="JsonConvert.cs", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
m5_31 [cluster="Newtonsoft.Json.JsonConvert.ToStringInternal(System.DateTime, System.TimeSpan, System.DateTimeKind)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToStringInternal(System.DateTime, System.TimeSpan, System.DateTimeKind)", span="123-123"];
m5_282 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", span="659-659"];
m5_283 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="JsonConvert.cs", label="return DeserializeXmlNode(value, null);", span="661-661"];
m5_284 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", span="659-659"];
m5_101 [cluster="Newtonsoft.Json.JsonConvert.ToString(byte)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(byte)", span="291-291"];
m5_102 [cluster="Newtonsoft.Json.JsonConvert.ToString(byte)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="293-293"];
m5_104 [cluster="byte.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry byte.ToString(string, System.IFormatProvider)", span="0-0"];
m5_103 [cluster="Newtonsoft.Json.JsonConvert.ToString(byte)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(byte)", span="291-291"];
m5_253 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="577-577"];
m5_254 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="return (T)DeserializeObject(value, typeof(T), converters);", span="579-579"];
m5_255 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="577-577"];
m5_184 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", span="406-406"];
m5_185 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="value == null", span="408-408"];
m5_186 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="return true;", span="410-410"];
m5_211 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", span="406-406"];
m5_189 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="convertible.GetTypeCode()", span="416-416"];
m5_190 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="TypeCode.String", span="418-418"];
m5_207 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="return false;", span="436-436"];
m5_165 [cluster="System.IConvertible.GetTypeCode()", file="JsonConvert.cs", label="Entry System.IConvertible.GetTypeCode()", span="0-0"];
m5_191 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="TypeCode.Char", span="419-419"];
m5_192 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="TypeCode.Boolean", span="420-420"];
m5_193 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="TypeCode.SByte", span="421-421"];
m5_194 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="TypeCode.Int16", span="422-422"];
m5_195 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="TypeCode.UInt16", span="423-423"];
m5_196 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="TypeCode.Int32", span="424-424"];
m5_197 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="TypeCode.Byte", span="425-425"];
m5_198 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="TypeCode.UInt32", span="426-426"];
m5_199 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="TypeCode.Int64", span="427-427"];
m5_200 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="TypeCode.UInt64", span="428-428"];
m5_201 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="TypeCode.Single", span="429-429"];
m5_202 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="TypeCode.Double", span="430-430"];
m5_203 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="TypeCode.DateTime", span="431-431"];
m5_204 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="TypeCode.Decimal", span="432-432"];
m5_205 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="TypeCode.DBNull", span="433-433"];
m5_206 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="return true;", span="434-434"];
m5_209 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="return true;", span="441-441"];
m5_210 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitive(object)", file="JsonConvert.cs", label="return false;", span="444-444"];
m5_123 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(object)", span="352-352"];
m5_124 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="value == null", span="354-354"];
m5_161 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="value is DateTimeOffset", span="398-398"];
m5_162 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((DateTimeOffset)value);", span="400-400"];
m5_163 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="throw new ArgumentException(''Unsupported type: {0}. Use the JsonSerializer class to get the object's JSON representation.''.FormatWith(\\nCultureInfo.InvariantCulture, value.GetType()));", span="403-403"];
m5_125 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return Null;", span="356-356"];
m5_164 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(object)", span="352-352"];
m5_128 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="convertible.GetTypeCode()", span="362-362"];
m5_130 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString(convertible.ToString(CultureInfo.InvariantCulture));", span="365-365"];
m5_132 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString(convertible.ToChar(CultureInfo.InvariantCulture));", span="367-367"];
m5_134 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString(convertible.ToBoolean(CultureInfo.InvariantCulture));", span="369-369"];
m5_136 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString(convertible.ToSByte(CultureInfo.InvariantCulture));", span="371-371"];
m5_138 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString(convertible.ToInt16(CultureInfo.InvariantCulture));", span="373-373"];
m5_140 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString(convertible.ToUInt16(CultureInfo.InvariantCulture));", span="375-375"];
m5_142 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString(convertible.ToInt32(CultureInfo.InvariantCulture));", span="377-377"];
m5_144 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString(convertible.ToByte(CultureInfo.InvariantCulture));", span="379-379"];
m5_146 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString(convertible.ToUInt32(CultureInfo.InvariantCulture));", span="381-381"];
m5_148 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString(convertible.ToInt64(CultureInfo.InvariantCulture));", span="383-383"];
m5_150 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString(convertible.ToUInt64(CultureInfo.InvariantCulture));", span="385-385"];
m5_152 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString(convertible.ToSingle(CultureInfo.InvariantCulture));", span="387-387"];
m5_154 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString(convertible.ToDouble(CultureInfo.InvariantCulture));", span="389-389"];
m5_156 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString(convertible.ToDateTime(CultureInfo.InvariantCulture));", span="391-391"];
m5_158 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString(convertible.ToDecimal(CultureInfo.InvariantCulture));", span="393-393"];
m5_129 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="TypeCode.String", span="364-364"];
m5_131 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="TypeCode.Char", span="366-366"];
m5_133 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="TypeCode.Boolean", span="368-368"];
m5_135 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="TypeCode.SByte", span="370-370"];
m5_137 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="TypeCode.Int16", span="372-372"];
m5_139 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="TypeCode.UInt16", span="374-374"];
m5_141 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="TypeCode.Int32", span="376-376"];
m5_143 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="TypeCode.Byte", span="378-378"];
m5_145 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="TypeCode.UInt32", span="380-380"];
m5_147 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="TypeCode.Int64", span="382-382"];
m5_149 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="TypeCode.UInt64", span="384-384"];
m5_151 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="TypeCode.Single", span="386-386"];
m5_153 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="TypeCode.Double", span="388-388"];
m5_155 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="TypeCode.DateTime", span="390-390"];
m5_157 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="TypeCode.Decimal", span="392-392"];
m5_159 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="TypeCode.DBNull", span="394-394"];
m5_166 [cluster="System.IConvertible.ToString(System.IFormatProvider)", file="JsonConvert.cs", label="Entry System.IConvertible.ToString(System.IFormatProvider)", span="0-0"];
m5_167 [cluster="System.IConvertible.ToChar(System.IFormatProvider)", file="JsonConvert.cs", label="Entry System.IConvertible.ToChar(System.IFormatProvider)", span="0-0"];
m5_168 [cluster="System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonConvert.cs", label="Entry System.IConvertible.ToBoolean(System.IFormatProvider)", span="0-0"];
m5_45 [cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(bool)", span="165-165"];
m5_169 [cluster="System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonConvert.cs", label="Entry System.IConvertible.ToSByte(System.IFormatProvider)", span="0-0"];
m5_170 [cluster="System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonConvert.cs", label="Entry System.IConvertible.ToInt16(System.IFormatProvider)", span="0-0"];
m5_171 [cluster="System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonConvert.cs", label="Entry System.IConvertible.ToUInt16(System.IFormatProvider)", span="0-0"];
m5_172 [cluster="System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonConvert.cs", label="Entry System.IConvertible.ToInt32(System.IFormatProvider)", span="0-0"];
m5_173 [cluster="System.IConvertible.ToByte(System.IFormatProvider)", file="JsonConvert.cs", label="Entry System.IConvertible.ToByte(System.IFormatProvider)", span="0-0"];
m5_174 [cluster="System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonConvert.cs", label="Entry System.IConvertible.ToUInt32(System.IFormatProvider)", span="0-0"];
m5_175 [cluster="System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonConvert.cs", label="Entry System.IConvertible.ToInt64(System.IFormatProvider)", span="0-0"];
m5_176 [cluster="System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonConvert.cs", label="Entry System.IConvertible.ToUInt64(System.IFormatProvider)", span="0-0"];
m5_177 [cluster="System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonConvert.cs", label="Entry System.IConvertible.ToSingle(System.IFormatProvider)", span="0-0"];
m5_178 [cluster="System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonConvert.cs", label="Entry System.IConvertible.ToDouble(System.IFormatProvider)", span="0-0"];
m5_179 [cluster="System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonConvert.cs", label="Entry System.IConvertible.ToDateTime(System.IFormatProvider)", span="0-0"];
m5_13 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", color=green, community=0, file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", prediction=5, span="101-101"];
m5_180 [cluster="System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonConvert.cs", label="Entry System.IConvertible.ToDecimal(System.IFormatProvider)", span="0-0"];
m5_160 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return Null;", span="395-395"];
m5_182 [cluster="object.GetType()", file="JsonConvert.cs", label="Entry object.GetType()", span="0-0"];
m5_183 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="JsonConvert.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48"];
m5_181 [cluster="System.ArgumentException.ArgumentException(string)", file="JsonConvert.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m5_14 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", file="JsonConvert.cs", label="TimeSpan utcOffset", span="103-103"];
m5_15 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", file="JsonConvert.cs", label="utcOffset = TimeZoneInfo.Local.GetUtcOffset(value)", span="107-107"];
m5_16 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", file="JsonConvert.cs", label="return ToStringInternal(value, utcOffset, value.Kind);", span="110-110"];
m5_18 [cluster="System.TimeZoneInfo.GetUtcOffset(System.DateTime)", file="JsonConvert.cs", label="Entry System.TimeZoneInfo.GetUtcOffset(System.DateTime)", span="0-0"];
m5_17 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", span="101-101"];
m5_219 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="476-476"];
m5_220 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="return SerializeObject(value, Formatting.None, converters);", span="478-478"];
m5_221 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="476-476"];
m5_89 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="JsonConvert.cs", label="double.IsNaN(value) || double.IsInfinity(value) || text.IndexOf('.') != -1 || text.IndexOf('E') != -1", span="272-272"];
m5_90 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="JsonConvert.cs", label="return text;", span="273-273"];
m5_91 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="JsonConvert.cs", label="return text + ''.0'';", span="275-275"];
m5_94 [cluster="double.IsInfinity(double)", file="JsonConvert.cs", label="Entry double.IsInfinity(double)", span="0-0"];
m5_93 [cluster="double.IsNaN(double)", file="JsonConvert.cs", label="Entry double.IsNaN(double)", span="0-0"];
m5_92 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", span="270-270"];
m5_46 [cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="JsonConvert.cs", label="return (value) ? True : False;", span="167-167"];
m5_47 [cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(bool)", span="165-165"];
m5_276 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", span="647-647"];
m5_277 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", file="JsonConvert.cs", label="XmlNodeConverter converter = new XmlNodeConverter()", span="649-649"];
m5_278 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", file="JsonConvert.cs", label="return SerializeObject(node, converter);", span="651-651"];
m5_279 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", span="647-647"];
m5_247 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonConvert.cs", label="return DeserializeObject<T>(value, (JsonSerializerSettings)null);", span="551-551"];
m5_248 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="549-549"];
m5_40 [cluster="Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", color=green, community=0, file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", prediction=6, span="153-153"];
m5_41 [cluster="Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", file="JsonConvert.cs", label="DateTime dateTime = new DateTime((javaScriptTicks * 10000) + InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="155-155"];
m5_44 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonConvert.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m5_42 [cluster="Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", file="JsonConvert.cs", label="return dateTime;", span="157-157"];
m5_43 [cluster="Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", span="153-153"];
m5_212 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="452-452"];
m5_213 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonConvert.cs", label="return SerializeObject(value, Formatting.None, (JsonSerializerSettings)null);", span="454-454"];
m5_214 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="452-452"];
m6_48 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="320-320"];
m6_49 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializer.cs", label="return Deserialize(reader, null);", span="322-322"];
m6_50 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="320-320"];
m6_51 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="344-344"];
m6_85 [cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Type, out Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Type, out Newtonsoft.Json.JsonConverter)", span="396-396"];
m6_86 [cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Type, out Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="HasMatchingConverter(_converters, type, out matchingConverter)", span="398-398"];
m6_88 [cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Type, out Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="HasMatchingConverter(BuiltInConverters, type, out matchingConverter)", span="400-400"];
m6_87 [cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Type, out Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="return true;", span="399-399"];
m6_92 [cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, \\nout Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, \\nout Newtonsoft.Json.JsonConverter)", span="406-406"];
m6_91 [cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Type, out Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Type, out Newtonsoft.Json.JsonConverter)", span="396-396"];
m6_89 [cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Type, out Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="return true;", span="401-401"];
m6_90 [cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Type, out Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="return false;", span="403-403"];
m6_52 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="332-332"];
m6_53 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonSerializer.cs", label="return Deserialize(new JsonTextReader(reader), objectType);", span="334-334"];
m6_54 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="332-332"];
m6_35 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="51-51"];
m6_39 [cluster="Newtonsoft.Json.JsonSerializer.PopulateInternal(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.PopulateInternal(Newtonsoft.Json.JsonReader, object)", span="306-306"];
m6_40 [cluster="Newtonsoft.Json.JsonSerializer.PopulateInternal(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="308-308"];
m6_41 [cluster="Newtonsoft.Json.JsonSerializer.PopulateInternal(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs", label="ValidationUtils.ArgumentNotNull(target, ''target'')", span="309-309"];
m6_43 [cluster="Newtonsoft.Json.JsonSerializer.PopulateInternal(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs", label="serializerReader.Populate(reader, target)", span="312-312"];
m6_45 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="94-94"];
m6_42 [cluster="Newtonsoft.Json.JsonSerializer.PopulateInternal(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs", label="JsonSerializerReader serializerReader = new JsonSerializerReader(this)", span="311-311"];
m6_46 [cluster="Newtonsoft.Json.Serialization.JsonSerializerReader.JsonSerializerReader(Newtonsoft.Json.JsonSerializer)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerReader.JsonSerializerReader(Newtonsoft.Json.JsonSerializer)", span="42-42"];
m6_44 [cluster="Newtonsoft.Json.JsonSerializer.PopulateInternal(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.PopulateInternal(Newtonsoft.Json.JsonReader, object)", span="306-306"];
m6_47 [cluster="Newtonsoft.Json.Serialization.JsonSerializerReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerReader.Populate(Newtonsoft.Json.JsonReader, object)", span="49-49"];
m6_63 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="363-363"];
m6_64 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializer.cs", label="Serialize(new JsonTextWriter(textWriter), value)", span="365-365"];
m6_65 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="363-363"];
m6_66 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="97-97"];
m6_67 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="374-374"];
m6_32 [cluster="Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", span="291-291"];
m6_33 [cluster="Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", file="JsonSerializer.cs", label="Populate(new JsonTextReader(reader), target)", span="293-293"];
m6_34 [cluster="Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", span="291-291"];
m6_36 [cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="301-301"];
m6_77 [cluster="Newtonsoft.Json.JsonSerializer.HasClassConverter(System.Type, out Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.HasClassConverter(System.Type, out Newtonsoft.Json.JsonConverter)", span="387-387"];
m6_78 [cluster="Newtonsoft.Json.JsonSerializer.HasClassConverter(System.Type, out Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="objectType == null", span="389-389"];
m6_80 [cluster="Newtonsoft.Json.JsonSerializer.HasClassConverter(System.Type, out Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="converter = JsonTypeReflector.GetConverter(objectType, objectType)", span="392-392"];
m6_79 [cluster="Newtonsoft.Json.JsonSerializer.HasClassConverter(System.Type, out Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="throw new ArgumentNullException(''objectType'');", span="390-390"];
m6_82 [cluster="Newtonsoft.Json.JsonSerializer.HasClassConverter(System.Type, out Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.HasClassConverter(System.Type, out Newtonsoft.Json.JsonConverter)", span="387-387"];
m6_83 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonSerializer.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_81 [cluster="Newtonsoft.Json.JsonSerializer.HasClassConverter(System.Type, out Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="return (converter != null);", span="393-393"];
m6_84 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverter(System.Reflection.ICustomAttributeProvider, System.Type)", span="98-98"];
m6_37 [cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs", label="PopulateInternal(reader, target)", span="303-303"];
m6_38 [cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="301-301"];
m6_10 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="258-258"];
m6_11 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="JsonSerializer jsonSerializer = new JsonSerializer()", span="260-260"];
m6_12 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings != null", span="262-262"];
m6_13 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="!CollectionUtils.IsNullOrEmpty(settings.Converters)", span="264-264"];
m6_14 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="jsonSerializer.Converters.AddRange(settings.Converters)", span="265-265"];
m6_15 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="jsonSerializer.TypeNameHandling = settings.TypeNameHandling", span="267-267"];
m6_16 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="jsonSerializer.PreserveReferencesHandling = settings.PreserveReferencesHandling", span="268-268"];
m6_17 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="jsonSerializer.ReferenceLoopHandling = settings.ReferenceLoopHandling", span="269-269"];
m6_18 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="jsonSerializer.MissingMemberHandling = settings.MissingMemberHandling", span="270-270"];
m6_19 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="jsonSerializer.ObjectCreationHandling = settings.ObjectCreationHandling", span="271-271"];
m6_20 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="jsonSerializer.NullValueHandling = settings.NullValueHandling", span="272-272"];
m6_21 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="jsonSerializer.DefaultValueHandling = settings.DefaultValueHandling", span="273-273"];
m6_22 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings.ContractResolver != null", span="275-275"];
m6_23 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="jsonSerializer.ContractResolver = settings.ContractResolver", span="276-276"];
m6_24 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings.ReferenceResolver != null", span="277-277"];
m6_25 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="jsonSerializer.ReferenceResolver = settings.ReferenceResolver", span="278-278"];
m6_26 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="settings.Binder != null", span="279-279"];
m6_27 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="jsonSerializer.Binder = settings.Binder", span="280-280"];
m6_28 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="return jsonSerializer;", span="283-283"];
m6_0 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="241-241"];
m6_30 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="73-73"];
m6_31 [cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializer.cs", label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="194-194"];
m6_29 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="258-258"];
m6_1 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="_referenceLoopHandling = JsonSerializerSettings.DefaultReferenceLoopHandling", span="243-243"];
m6_2 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="_missingMemberHandling = JsonSerializerSettings.DefaultMissingMemberHandling", span="244-244"];
m6_3 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="_nullValueHandling = JsonSerializerSettings.DefaultNullValueHandling", span="245-245"];
m6_4 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="_defaultValueHandling = JsonSerializerSettings.DefaultDefaultValueHandling", span="246-246"];
m6_5 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="_objectCreationHandling = JsonSerializerSettings.DefaultObjectCreationHandling", span="247-247"];
m6_6 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="_preserveReferencesHandling = JsonSerializerSettings.DefaultPreserveReferencesHandling", span="248-248"];
m6_7 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="_typeNameHandling = JsonSerializerSettings.DefaultTypeNameHandling", span="249-249"];
m6_8 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="_binder = DefaultSerializationBinder.Instance", span="250-250"];
m6_9 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="241-241"];
m6_57 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", span="349-349"];
m6_58 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="351-351"];
m6_60 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="return serializerReader.Deserialize(reader, objectType);", span="354-354"];
m6_59 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="JsonSerializerReader serializerReader = new JsonSerializerReader(this)", span="353-353"];
m6_61 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", span="349-349"];
m6_62 [cluster="Newtonsoft.Json.Serialization.JsonSerializerReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="85-85"];
m6_55 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="return DeserializeInternal(reader, objectType);", span="346-346"];
m6_56 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="344-344"];
m6_70 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object)", span="379-379"];
m6_71 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializer.cs", label="ValidationUtils.ArgumentNotNull(jsonWriter, ''jsonWriter'')", span="381-381"];
m6_73 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializer.cs", label="serializerWriter.Serialize(jsonWriter, value)", span="384-384"];
m6_72 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializer.cs", label="JsonSerializerWriter serializerWriter = new JsonSerializerWriter(this)", span="383-383"];
m6_75 [cluster="Newtonsoft.Json.Serialization.JsonSerializerWriter.JsonSerializerWriter(Newtonsoft.Json.JsonSerializer)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerWriter.JsonSerializerWriter(Newtonsoft.Json.JsonSerializer)", span="55-55"];
m6_76 [cluster="Newtonsoft.Json.Serialization.JsonSerializerWriter.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerWriter.Serialize(Newtonsoft.Json.JsonWriter, object)", span="62-62"];
m6_74 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object)", span="379-379"];
m6_93 [cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, \\nout Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="objectType == null", span="408-408"];
m6_95 [cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, \\nout Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="converters != null", span="411-411"];
m6_97 [cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, \\nout Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="i < converters.Count", span="413-413"];
m6_98 [cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, \\nout Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="JsonConverter converter = converters[i]", span="415-415"];
m6_99 [cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, \\nout Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="converter.CanConvert(objectType)", span="417-417"];
m6_94 [cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, \\nout Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="throw new ArgumentNullException(''objectType'');", span="409-409"];
m6_105 [cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, \\nout Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, \\nout Newtonsoft.Json.JsonConverter)", span="406-406"];
m6_96 [cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, \\nout Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="int i = 0", span="413-413"];
m6_103 [cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, \\nout Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="matchingConverter = null", span="425-425"];
m6_102 [cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, \\nout Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="i++", span="413-413"];
m6_100 [cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, \\nout Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="matchingConverter = converter", span="419-419"];
m6_106 [cluster="Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", span="61-61"];
m6_101 [cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, \\nout Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="return true;", span="420-420"];
m6_104 [cluster="Newtonsoft.Json.JsonSerializer.HasMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type, \\nout Newtonsoft.Json.JsonConverter)", file="JsonSerializer.cs", label="return false;", span="426-426"];
m6_68 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializer.cs", label="SerializeInternal(jsonWriter, value)", span="376-376"];
m6_69 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="374-374"];
m8_665 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SuperKlass.SuperKlass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SuperKlass.SuperKlass()", span="1441-1441"];
m8_666 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SuperKlass.SuperKlass()", file="JsonSerializerTest.cs", label="SuperProp = ''default superprop''", span="1441-1441"];
m8_667 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SuperKlass.SuperKlass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SuperKlass.SuperKlass()", span="1441-1441"];
m8_730 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="1624-1624"];
m8_731 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="1626-1626"];
m8_732 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="c.NotIncluded = ''Hi''", span="1627-1627"];
m8_733 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1628-1628"];
m8_721 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="1597-1597"];
m8_734 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''\\nDr''''\r\n}'', json)", span="1630-1635"];
m8_735 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="1637-1637"];
m8_403 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="465-465"];
m8_736 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="1638-1638"];
m8_87 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="549-549"];
m8_737 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="1624-1624"];
m8_727 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="1617-1617"];
m8_52 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", span="149-149"];
m8_53 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="151-151"];
m8_54 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.serverClassName = ''BanSubs''", span="152-152"];
m8_55 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="153-153"];
m8_56 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="154-154"];
m8_57 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(executorObject)", span="156-156"];
m8_59 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreNotSame(executorObject, executorObject2)", span="160-160"];
m8_65 [cluster="Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", color=green, community=0, file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", prediction=7, span="27-27"];
m8_58 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="158-158"];
m8_8 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="452-452"];
m8_60 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="161-161"];
m8_61 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="162-162"];
m8_62 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.Contains(''101'', executorObject2.serverMethodParams)", span="163-163"];
m8_63 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="164-164"];
m8_9 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="538-538"];
m8_64 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", span="149-149"];
m8_311 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", span="666-666"];
m8_312 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="668-668"];
m8_313 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="JsonSerializer s = new JsonSerializer()", span="670-670"];
m8_315 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="673-673"];
m8_314 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="671-671"];
m8_186 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="241-241"];
m8_316 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="675-675"];
m8_317 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar.Count)", span="677-677"];
m8_319 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="332-332"];
m8_188 [cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m8_318 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", span="666-666"];
m8_37 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", span="129-129"];
m8_38 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DateTime dateValue = new DateTime(2000, 3, 30)", span="131-131"];
m8_39 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="132-132"];
m8_40 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="testDictionary[''date''] = dateValue", span="133-133"];
m8_44 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dateValue, deserializedDate)", span="140-140"];
m8_28 [cluster="System.DateTime.DateTime(int, int, int)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m8_41 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="135-135"];
m8_50 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m8_42 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<\\nstring, object>))", span="137-137"];
m8_46 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Console.WriteLine(jsonText)", span="143-143"];
m8_48 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Console.WriteLine(jsonText)", span="145-145"];
m8_43 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="138-138"];
m8_45 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Console.WriteLine(''DeserializeJavaScriptDate'')", span="142-142"];
m8_11 [cluster="System.Console.WriteLine(string)", file="JsonSerializerTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m8_47 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Console.WriteLine()", span="144-144"];
m8_51 [cluster="System.Console.WriteLine()", file="JsonSerializerTest.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m8_49 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", span="129-129"];
m8_135 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", span="379-379"];
m8_136 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Article a1 = new Article(''a1'')", span="381-381"];
m8_137 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Article a2 = new Article(''a2'')", span="382-382"];
m8_139 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="articles1.Add(a1)", span="385-385"];
m8_146 [cluster="Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", span="35-35"];
m8_138 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="ArticleCollection articles1 = new ArticleCollection()", span="384-384"];
m8_140 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="articles1.Add(a2)", span="386-386"];
m8_141 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(articles1)", span="388-388"];
m8_143 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(articles1.Count, articles2.Count)", span="392-392"];
m8_144 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(articles1[0].Name, articles2[0].Name)", span="393-393"];
m8_147 [cluster="Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", span="29-29"];
m8_148 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m8_142 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="ArticleCollection articles2 = JsonConvert.DeserializeObject<ArticleCollection>(jsonText)", span="390-390"];
m8_145 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", span="379-379"];
m8_68 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.HashtableDeserialization()", span="169-169"];
m8_69 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="171-171"];
m8_70 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="173-173"];
m8_71 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="175-175"];
m8_72 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.HashtableDeserialization()", span="169-169"];
m8_73 [cluster="object.ToString()", file="JsonSerializerTest.cs", label="Entry object.ToString()", span="0-0"];
m8_546 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="1058-1058"];
m8_547 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="string json = @''{''''Height'''':1}''", span="1060-1060"];
m8_548 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="1062-1062"];
m8_549 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Height)", span="1063-1063"];
m8_550 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="1058-1058"];
m8_476 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.GenericAbstractProperty()", span="924-924"];
m8_477 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="926-926"];
m8_478 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="927-927"];
m8_480 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", color=green, community=0, file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", prediction=8, span="27-27"];
m8_479 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.GenericAbstractProperty()", span="924-924"];
m8_840 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ComplexValuesInObjectArray()", color=green, community=0, file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.ComplexValuesInObjectArray()", prediction=9, span="1924-1924"];
m8_841 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ComplexValuesInObjectArray()", color=green, community=0, file="JsonSerializerTest.cs", label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',[''''id'''', 1, ''''\\nteststring'''', ''''test''''],{''''one'''':1}],''''type'''':''''rpc'''',''''tid'''':2}''", prediction=10, span="1926-1926"];
m8_842 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ComplexValuesInObjectArray()", color=green, community=0, file="JsonSerializerTest.cs", label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", prediction=9, span="1928-1928"];
m8_843 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ComplexValuesInObjectArray()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(''Router'', o.Action)", prediction=9, span="1930-1930"];
m8_844 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ComplexValuesInObjectArray()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(''Navigate'', o.Method)", prediction=9, span="1931-1931"];
m8_845 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ComplexValuesInObjectArray()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(3, o.Data.Length)", prediction=9, span="1932-1932"];
m8_846 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ComplexValuesInObjectArray()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(''dashboard'', o.Data[0])", prediction=9, span="1933-1933"];
m8_847 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ComplexValuesInObjectArray()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.IsInstanceOfType(typeof(JArray), o.Data[1])", prediction=9, span="1934-1934"];
m8_848 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ComplexValuesInObjectArray()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(4, ((JArray)o.Data[1]).Count)", prediction=9, span="1935-1935"];
m8_849 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ComplexValuesInObjectArray()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.IsInstanceOfType(typeof(JObject), o.Data[2])", prediction=9, span="1936-1936"];
m8_850 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ComplexValuesInObjectArray()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(1, ((JObject)o.Data[2]).Count)", prediction=9, span="1937-1937"];
m8_851 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ComplexValuesInObjectArray()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(1, (int)((JObject)o.Data[2])[''one''])", prediction=9, span="1938-1938"];
m8_838 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEnumerableAsObject()", span="1883-1883"];
m8_852 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ComplexValuesInObjectArray()", color=green, community=0, file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.ComplexValuesInObjectArray()", prediction=21, span="1924-1924"];
m8_229 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", span="532-532"];
m8_230 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Dictionary<int, int> values = new Dictionary<int, int>()", span="534-534"];
m8_231 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="values.Add(-5, 6)", span="535-535"];
m8_232 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="values.Add(int.MinValue, int.MaxValue)", span="536-536"];
m8_233 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(values)", span="538-538"];
m8_236 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(values, newValues)", span="544-544"];
m8_238 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m8_234 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="540-540"];
m8_235 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="542-542"];
m8_237 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", span="532-532"];
m8_109 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", span="313-313"];
m8_110 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''\\n192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',\\n3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="315-324"];
m8_111 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="326-326"];
m8_112 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, o.Children().Count())", span="327-327"];
m8_113 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JToken torrentsArray = (JToken)o[''torrents'']", span="329-329"];
m8_108 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="527-527"];
m8_118 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m8_117 [cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="140-140"];
m8_114 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JToken nestedTorrentsArray = (JToken)torrentsArray[0]", span="330-330"];
m8_115 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(nestedTorrentsArray.Children().Count(), 19)", span="331-331"];
m8_116 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", span="313-313"];
m8_119 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="272-272"];
m8_537 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", span="1044-1044"];
m8_538 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer { MissingMemberHandling = MissingMemberHandling.Ignore }", span="1046-1046"];
m8_539 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs", label="serializer.Converters.Add(new JavaScriptDateTimeConverter())", span="1047-1047"];
m8_541 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs", label="MyClass myClass = (MyClass)serializer.Deserialize(new StringReader(response), typeof(MyClass))", span="1051-1051"];
m8_540 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs", label="string response = @''{''''PreProperty'''':1,''''DateProperty'''':new Date(1225962698973),''''PostProperty'''':2}''", span="1049-1049"];
m8_451 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="9-9"];
m8_545 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m8_542 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, myClass.PreProperty)", span="1053-1053"];
m8_543 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, myClass.PostProperty)", span="1054-1054"];
m8_544 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", span="1044-1044"];
m8_719 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="1593-1593"];
m8_720 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="1593-1593"];
m8_630 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="LogEntry entry = new LogEntry\r\n                         {\r\n                           LogDate = new DateTime(2009, 2, 15, 0, \\n0, 0, DateTimeKind.Utc),\r\n                           Details = ''Application started.''\r\n                         }", span="1345-1349"];
m8_215 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m8_631 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string defaultJson = JsonConvert.SerializeObject(entry)", span="1351-1351"];
m8_632 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="1354-1354"];
m8_633 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="1357-1357"];
m8_638 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.LogEntry.LogEntry()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.LogEntry.LogEntry()", span="1336-1336"];
m8_629 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", span="1343-1343"];
m8_634 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Console.WriteLine(defaultJson)", span="1360-1360"];
m8_635 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Console.WriteLine(isoJson)", span="1361-1361"];
m8_639 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="12-12"];
m8_429 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="476-476"];
m8_636 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Console.WriteLine(javascriptJson)", span="1362-1362"];
m8_637 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", span="1343-1343"];
m8_809 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.UriSerialization()", span="1809-1809"];
m8_810 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Uri uri = new Uri(''http://codeplex.com'')", span="1811-1811"];
m8_811 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(uri)", span="1812-1812"];
m8_812 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="1814-1814"];
m8_814 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(uri, newUri)", span="1817-1817"];
m8_816 [cluster="System.Uri.Uri(string)", file="JsonSerializerTest.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m8_813 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="1816-1816"];
m8_817 [cluster="System.Uri.ToString()", file="JsonSerializerTest.cs", label="Entry System.Uri.ToString()", span="0-0"];
m8_815 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.UriSerialization()", span="1809-1809"];
m8_668 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SubKlass.SubKlass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SubKlass.SubKlass(string)", span="1447-1447"];
m8_669 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SubKlass.SubKlass(string)", file="JsonSerializerTest.cs", label="SubProp = subprop", span="1447-1447"];
m8_670 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SubKlass.SubKlass(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SubKlass.SubKlass(string)", span="1447-1447"];
m8_74 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", span="179-179"];
m8_75 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Hash'''':{''''ExpiryDate'''':''''01/24/2010 12:00:00'''',''''UntypedArray'''':[''''\\n01/24/2010 12:00:00'''']}}''", span="181-181"];
m8_76 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="TypedSubHashtable p = JsonConvert.DeserializeObject(value, typeof(TypedSubHashtable)) as TypedSubHashtable", span="183-183"];
m8_77 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''01/24/2010 12:00:00'', p.Hash[''ExpiryDate''].ToString())", span="185-185"];
m8_78 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  ''''01/24/2010 12:00:00''''\r\n]'', p.Hash[''UntypedArray''].ToString())", span="186-188"];
m8_79 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", span="179-179"];
m8_864 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericList()", color=green, community=1, file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericList()", prediction=22, span="1960-1960"];
m8_865 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericList()", color=green, community=1, file="JsonSerializerTest.cs", label="Product p1 = new Product\r\n        {\r\n          Name = ''Product 1'',\r\n          Price = 99.95m,\r\n          ExpiryDate = \\nnew DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc),\r\n        }", prediction=23, span="1962-1967"];
m8_866 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericList()", color=green, community=1, file="JsonSerializerTest.cs", label="Product p2 = new Product\r\n      {\r\n        Name = ''Product 2'',\r\n        Price = 12.50m,\r\n        ExpiryDate = new DateTime(\\n2009, 7, 31, 0, 0, 0, DateTimeKind.Utc),\r\n      }", prediction=24, span="1968-1973"];
m8_868 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericList()", color=green, community=1, file="JsonSerializerTest.cs", label="products.Add(p1)", prediction=23, span="1976-1976"];
m8_27 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29"];
m8_867 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericList()", color=green, community=1, file="JsonSerializerTest.cs", label="List<Product> products = new List<Product>()", prediction=24, span="1975-1975"];
m8_869 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericList()", color=green, community=1, file="JsonSerializerTest.cs", label="products.Add(p2)", prediction=24, span="1977-1977"];
m8_870 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericList()", color=green, community=1, file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(products, Formatting.Indented)", prediction=28, span="1979-1979"];
m8_214 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m8_871 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericList()", color=green, community=1, file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Name'''': ''''Product 1'''',\r\n    ''''ExpiryDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''\\nPrice'''': 99.95,\r\n    ''''Sizes'''': null\r\n  },\r\n  {\r\n    ''''Name'''': ''''Product 2'''',\r\n    ''''ExpiryDate'''': ''''\/\\nDate(1248998400000)\/'''',\r\n    ''''Price'''': 12.50,\r\n    ''''Sizes'''': null\r\n  }\r\n]'', json)", prediction=29, span="1995-2008"];
m8_872 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericList()", color=green, community=1, file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericList()", prediction=30, span="1960-1960"];
m8_421 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="837-837"];
m8_422 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="839-839"];
m8_423 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="841-841"];
m8_420 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32"];
m8_424 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="842-842"];
m8_425 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="844-844"];
m8_428 [cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", color=green, community=0, file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", prediction=31, span="27-27"];
m8_426 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="846-846"];
m8_430 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="577-577"];
m8_427 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="837-837"];
m8_366 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", span="739-739"];
m8_367 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="741-741"];
m8_368 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''1'', json)", span="742-742"];
m8_369 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="744-744"];
m8_370 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="745-745"];
m8_371 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", span="739-739"];
m8_94 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", span="214-214"];
m8_95 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="216-216"];
m8_96 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="218-218"];
m8_101 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", color=green, community=0, file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", prediction=32, span="27-27"];
m8_97 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':\\n-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="220-220"];
m8_98 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="222-222"];
m8_99 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(99, c.Field)", span="223-223"];
m8_100 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", span="214-214"];
m8_501 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", span="974-974"];
m8_502 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="string json", span="976-976"];
m8_503 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject((int?)null)", span="978-978"];
m8_504 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''null'', json)", span="979-979"];
m8_505 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject((int?)1)", span="981-981"];
m8_506 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', json)", span="982-982"];
m8_507 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", span="974-974"];
m8_837 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Content.Content()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.Content.Content()", span="1834-1834"];
m8_357 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", span="727-727"];
m8_358 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="729-729"];
m8_364 [cluster="System.Guid.Guid(string)", file="JsonSerializerTest.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m8_359 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="731-731"];
m8_362 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(guid, c.GuidField)", span="735-735"];
m8_360 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="732-732"];
m8_361 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="734-734"];
m8_365 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29"];
m8_363 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", span="727-727"];
m8_202 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", span="491-491"];
m8_203 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="List<DateTime> testDates = new List<DateTime> {\r\n        new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n        new \\nDateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n        new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n        \\nnew DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n        new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n        \\nnew DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n      }", span="493-500"];
m8_204 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="string result", span="501-501"];
m8_207 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="s.WriteObject(ms, testDates)", span="506-506"];
m8_211 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="result = JsonConvert.SerializeObject(testDates)", span="512-512"];
m8_205 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="504-504"];
m8_206 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="505-505"];
m8_208 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="507-507"];
m8_209 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="StreamReader sr = new StreamReader(ms)", span="508-508"];
m8_216 [cluster="System.IO.MemoryStream.MemoryStream()", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m8_218 [cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m8_210 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="string expected = sr.ReadToEnd()", span="510-510"];
m8_219 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m8_212 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, result)", span="513-513"];
m8_220 [cluster="System.IO.StreamReader.ReadToEnd()", file="JsonSerializerTest.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m8_213 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", span="491-491"];
m8_744 [cluster="Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", span="291-291"];
m8_523 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", span="1015-1015"];
m8_524 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="UserNullable userNullablle = new UserNullable\r\n                                    {\r\n                                      \\nId = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n                                      FName = ''FirstValue'',\r\n                                      \\nLName = ''LastValue'',\r\n                                      RoleId = 5,\r\n                                      NullableRoleId = \\n6,\r\n                                      NullRoleId = null,\r\n                                      Active = true\r\n                                    }", span="1017-1026"];
m8_525 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(userNullablle)", span="1028-1028"];
m8_536 [cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29"];
m8_526 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''\\nRoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="1030-1030"];
m8_527 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="1032-1032"];
m8_528 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="1034-1034"];
m8_529 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="1035-1035"];
m8_530 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="1036-1036"];
m8_531 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="1037-1037"];
m8_532 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="1038-1038"];
m8_533 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="1039-1039"];
m8_534 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="1040-1040"];
m8_535 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", span="1015-1015"];
m8_598 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGoogleGeoCode()", span="1223-1223"];
m8_599 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''\\ncode'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''\\n1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''\\nCountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''\\nSubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''\\nLocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''\\n1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''\\n94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''\\nPoint'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="1225-1260"];
m8_600 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="1265-1265"];
m8_601 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGoogleGeoCode()", span="1223-1223"];
m8_149 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="397-397"];
m8_150 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="ReadOnlyCollection<int> r1 = new ReadOnlyCollection<int>(new int[] { 0, 1, 2, 3, 4 })", span="399-399"];
m8_151 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(r1)", span="401-401"];
m8_153 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(r1, r2)", span="405-405"];
m8_155 [cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerTest.cs", label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0"];
m8_152 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="ReadOnlyCollection<int> r2 = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(jsonText)", span="403-403"];
m8_154 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="397-397"];
m8_722 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="_name = name", span="1599-1599"];
m8_723 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Age = age", span="1600-1600"];
m8_724 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Rank = rank", span="1601-1601"];
m8_725 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Title = title", span="1602-1602"];
m8_726 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="1597-1597"];
m8_586 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", span="1138-1138"];
m8_587 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="1140-1140"];
m8_588 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="1142-1142"];
m8_596 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(json, after)", span="1153-1153"];
m8_589 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1144-1144"];
m8_590 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1145-1145"];
m8_591 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, aa.Coordinates.Length)", span="1146-1146"];
m8_592 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="1147-1147"];
m8_593 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="1148-1148"];
m8_594 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="1149-1149"];
m8_595 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1151-1151"];
m8_597 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", span="1138-1138"];
m8_873 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericList()", color=green, community=1, file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericList()", prediction=33, span="2012-2012"];
m8_874 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericList()", color=green, community=1, file="JsonSerializerTest.cs", label="string json = @''[\r\n        {\r\n          ''''Name'''': ''''Product 1'''',\r\n          ''''ExpiryDate'''': ''''\/Date(978048000000)\/'''',\r\n          ''''\\nPrice'''': 99.95,\r\n          ''''Sizes'''': null\r\n        },\r\n        {\r\n          ''''Name'''': ''''Product 2'''',\r\n          ''''\\nExpiryDate'''': ''''\/Date(1248998400000)\/'''',\r\n          ''''Price'''': 12.50,\r\n          ''''Sizes'''': null\r\n        }\r\n      ]''", prediction=34, span="2014-2027"];
m8_875 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericList()", color=green, community=1, file="JsonSerializerTest.cs", label="List<Product> products = JsonConvert.DeserializeObject<List<Product>>(json)", prediction=35, span="2029-2029"];
m8_876 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericList()", color=green, community=1, file="JsonSerializerTest.cs", label="Console.WriteLine(products.Count)", prediction=36, span="2031-2031"];
m8_877 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericList()", color=green, community=1, file="JsonSerializerTest.cs", label="Product p1 = products[0]", prediction=37, span="2034-2034"];
m8_879 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericList()", color=green, community=1, file="JsonSerializerTest.cs", label="Assert.AreEqual(2, products.Count)", prediction=35, span="2039-2039"];
m8_880 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericList()", color=green, community=1, file="JsonSerializerTest.cs", label="Assert.AreEqual(''Product 1'', products[0].Name)", prediction=35, span="2040-2040"];
m8_863 [cluster="System.Console.WriteLine(int)", file="JsonSerializerTest.cs", label="Entry System.Console.WriteLine(int)", span="0-0"];
m8_878 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericList()", color=green, community=1, file="JsonSerializerTest.cs", label="Console.WriteLine(p1.Name)", prediction=40, span="2036-2036"];
m8_881 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericList()", color=green, community=1, file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericList()", prediction=41, span="2012-2012"];
m8_268 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", span="599-599"];
m8_269 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="Store s1 = new Store()", span="601-601"];
m8_7 [cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="44-44"];
m8_270 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="JsonSerializer jsonSerializer = new JsonSerializer()", span="603-603"];
m8_273 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="jsonSerializer.Serialize(sw, s1)", span="607-607"];
m8_280 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s1.Establised, s3.Establised)", span="620-620"];
m8_271 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="jsonSerializer.NullValueHandling = NullValueHandling.Ignore", span="604-604"];
m8_275 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="Store s2 = (Store)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(''{}'')), typeof(Store))", span="613-613"];
m8_277 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="Store s3 = (Store)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(@''{''''Escape'''':null}'')), typeof(Store))", span="616-616"];
m8_279 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="Store s4 = (Store)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(@''{''''Color'''':2,''''Establised'''':''''\/Date(\\n1264071600000+1300)\/'''',''''Width'''':1.1,''''Employees'''':999,''''RoomsPerFloor'''':[1,2,3,4,5,6,7,8,9],''''Open'''':false,''''\\nSymbol'''':''''@'''',''''Mottos'''':[''''Hello World'''',''''������\\'{new Date(12345);}[222]_�@��~'''',null,'''' ''''],''''\\nCost'''':100980.1,''''Escape'''':''''\r\n\t\f\b?{\\r\\n\''''''''',''''product'''':[{''''Name'''':''''Rocket'''',''''ExpiryDate'''':''''\/\\nDate(949485690000+1300)\/'''',''''Price'''':0},{''''Name'''':''''Alien'''',''''ExpiryDate'''':''''\/Date(946638000000)\/'''',''''\\nPrice'''':0.0}]}'')), typeof(Store))", span="619-619"];
m8_272 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="606-606"];
m8_274 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Color'''':4,''''Establised'''':''''\/Date(1264122061000+0000)\/'''',''''Width'''':1.1,''''Employees'''':\\n999,''''RoomsPerFloor'''':[1,2,3,4,5,6,7,8,9],''''Open'''':false,''''Symbol'''':''''@'''',''''Mottos'''':[''''Hello World'''',''''\\n������\\'{new Date(12345);}[222]_�@��~'''',null,'''' ''''],''''Cost'''':100980.1,''''Escape'''':''''\r\n\t\f\b?{\\r\\n\''''''''',''''\\nproduct'''':[{''''Name'''':''''Rocket'''',''''ExpiryDate'''':''''\/Date(949532490000)\/'''',''''Price'''':0.0},{''''Name'''':''''\\nAlien'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0.0}]}'', sw.GetStringBuilder().ToString())", span="611-611"];
m8_264 [cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m8_265 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="363-363"];
m8_267 [cluster="System.Text.StringBuilder.ToString()", file="JsonSerializerTest.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m8_266 [cluster="System.IO.StringWriter.GetStringBuilder()", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.GetStringBuilder()", span="0-0"];
m8_276 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''\r\n\t\f\b?{\\r\\n\''\''', s2.Escape)", span="614-614"];
m8_187 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="51-51"];
m8_189 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="344-344"];
m8_278 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''\r\n\t\f\b?{\\r\\n\''\''', s3.Escape)", span="617-617"];
m8_281 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", span="599-599"];
m8_577 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", span="1125-1125"];
m8_578 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="JaggedArray aa = new JaggedArray()", span="1127-1127"];
m8_579 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.Before = ''Before!''", span="1128-1128"];
m8_580 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.After = ''After!''", span="1129-1129"];
m8_581 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="1130-1130"];
m8_582 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(aa)", span="1132-1132"];
m8_585 [cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="7-7"];
m8_583 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', \\njson)", span="1134-1134"];
m8_584 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", span="1125-1125"];
m8_818 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousPlusLinqToSql()", span="1821-1821"];
m8_819 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="var value = new\r\n        {\r\n          bar = new JObject(new JProperty(''baz'', 13))\r\n        }", span="1823-1826"];
m8_823 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="69-69"];
m8_820 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(value)", span="1828-1828"];
m8_824 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="120-120"];
m8_821 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="1830-1830"];
m8_822 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousPlusLinqToSql()", span="1821-1821"];
m8_493 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", span="951-951"];
m8_494 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", file="JsonSerializerTest.cs", label="Invoice invoice = new Invoice\r\n                        {\r\n                          Company = ''Acme Ltd.'',\r\n                          \\nAmount = 50.0m,\r\n                          Paid = false\r\n                        }", span="953-958"];
m8_500 [cluster="Newtonsoft.Json.Tests.TestObjects.Invoice.Invoice()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Invoice.Invoice()", span="30-30"];
m8_495 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(invoice)", span="960-960"];
m8_497 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(invoice,\r\n        Formatting.None,\r\n        new JsonSerializerSettings { DefaultValueHandling = \\nDefaultValueHandling.Ignore })", span="965-967"];
m8_496 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", file="JsonSerializerTest.cs", label="Console.WriteLine(json)", span="962-962"];
m8_492 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="507-507"];
m8_165 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="84-84"];
m8_498 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", file="JsonSerializerTest.cs", label="Console.WriteLine(json)", span="969-969"];
m8_499 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", span="951-951"];
m8_556 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", span="1076-1076"];
m8_557 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="TypeClass typeClass = new TypeClass {TypeProperty = typeof (bool)}", span="1078-1078"];
m8_558 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(typeClass)", span="1080-1080"];
m8_563 [cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29"];
m8_559 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TypeProperty'''':''''System.Boolean''''}'', json)", span="1081-1081"];
m8_560 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="1083-1083"];
m8_561 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="1084-1084"];
m8_562 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", span="1076-1076"];
m8_602 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Test.Test()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.Test.Test()", span="1287-1287"];
m8_603 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Test.Test()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.Test.Test()", span="1287-1287"];
m8_471 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="917-917"];
m8_472 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="919-919"];
m8_475 [cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30"];
m8_473 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(c)", span="920-920"];
m8_474 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="917-917"];
m8_239 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", span="548-548"];
m8_240 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="var anonymous =\r\n        new\r\n        {\r\n          StringValue = ''I am a string'',\r\n          IntValue = int.MaxValue,\r\n          \\nNestedAnonymous = new { NestedValue = byte.MaxValue },\r\n          NestedArray = new[] { 1, 2 },\r\n          Product = new Product() { \\nName = ''TestProduct'' }\r\n        }", span="550-558"];
m8_241 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(anonymous)", span="560-560"];
m8_243 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="563-563"];
m8_242 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':\\n255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''\\nPrice'''':0.0,''''Sizes'''':null}}'', json)", span="561-561"];
m8_252 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="565-565"];
m8_244 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="564-564"];
m8_245 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="565-565"];
m8_246 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="566-566"];
m8_247 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="567-567"];
m8_248 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="568-568"];
m8_249 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="569-569"];
m8_250 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="570-570"];
m8_251 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", span="548-548"];
m8_88 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="204-204"];
m8_89 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="string value = JsonConvert.SerializeObject(new SetOnlyPropertyClass())", span="206-206"];
m8_90 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="SetOnlyPropertyClass c = JsonConvert.DeserializeObject<SetOnlyPropertyClass>(value)", span="208-208"];
m8_93 [cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", color=green, community=0, file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", prediction=42, span="27-27"];
m8_91 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="210-210"];
m8_92 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="204-204"];
m8_611 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.GetPerson()", span="1302-1302"];
m8_612 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Person person = new Person\r\n                        {\r\n                          Name = ''Mike Manager'',\r\n                          \\nBirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n                          Department = ''IT'',\r\n                          \\nLastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n                        }", span="1304-1310"];
m8_613 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="return person;", span="1311-1311"];
m8_615 [cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="34-34"];
m8_614 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.GetPerson()", span="1302-1302"];
m8_282 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeObject()", span="624-624"];
m8_283 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new object())", span="626-626"];
m8_284 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{}'', json)", span="627-627"];
m8_286 [cluster="object.Object()", file="JsonSerializerTest.cs", label="Entry object.Object()", span="0-0"];
m8_285 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeObject()", span="624-624"];
m8_564 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", span="1088-1088"];
m8_565 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="RequiredMembersClass c = new RequiredMembersClass()\r\n                                 {\r\n                                   \\nBirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n                                   FirstName = ''Bob'',\r\n                                   \\nLastName = ''Smith'',\r\n                                   MiddleName = ''Cosmo''\r\n                                 }", span="1090-1096"];
m8_572 [cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="32-32"];
m8_566 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1098-1098"];
m8_567 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''\\nBirthDate'''': ''''\/Date(977309755000)\/''''\r\n}'', json)", span="1100-1105"];
m8_568 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1107-1107"];
m8_569 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Bob'', c2.FirstName)", span="1109-1109"];
m8_570 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="1110-1110"];
m8_571 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", span="1088-1088"];
m8_29 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", span="117-117"];
m8_30 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="119-119"];
m8_31 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Product p = JsonConvert.DeserializeObject(value, typeof(Product)) as Product", span="121-121"];
m8_32 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Orange'', p.Name)", span="123-123"];
m8_33 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="124-124"];
m8_34 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99, p.Price)", span="125-125"];
m8_36 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m8_35 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", span="117-117"];
m8_12 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", span="67-67"];
m8_13 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Product product = new Product()", span="69-69"];
m8_14 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Name = ''Apple''", span="71-71"];
m8_15 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="72-72"];
m8_16 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Price = 3.99M", span="73-73"];
m8_17 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="74-74"];
m8_18 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(product)", span="76-76"];
m8_19 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(output, typeof(Product))", span="88-88"];
m8_20 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="90-90"];
m8_21 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="91-91"];
m8_22 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99, deserializedProduct.Price)", span="92-92"];
m8_23 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="93-93"];
m8_24 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="94-94"];
m8_25 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="95-95"];
m8_26 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", span="67-67"];
m8_882 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", color=green, community=1, file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", prediction=43, span="2044-2044"];
m8_883 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", color=green, community=1, file="JsonSerializerTest.cs", label="string json = @''{''''DateTimeField'''':''''''''}''", prediction=44, span="2046-2046"];
m8_884 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", color=green, community=1, file="JsonSerializerTest.cs", label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", prediction=45, span="2048-2048"];
m8_885 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", color=green, community=1, file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.DateTimeField)", prediction=46, span="2049-2049"];
m8_886 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", color=green, community=1, file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", prediction=47, span="2044-2044"];
m8_167 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", span="435-435"];
m8_168 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="Product product = new Product()", span="437-437"];
m8_169 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="product.Name = ''Apple''", span="439-439"];
m8_170 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="440-440"];
m8_171 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="product.Price = 3.99M", span="441-441"];
m8_172 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="442-442"];
m8_173 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(product)", span="444-444"];
m8_174 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="JsonSerializer jsonSerializer = new JsonSerializer()", span="456-456"];
m8_177 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(output))", span="461-461"];
m8_175 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="jsonSerializer.MissingMemberHandling = MissingMemberHandling.Ignore", span="457-457"];
m8_178 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="deserializedValue = jsonSerializer.Deserialize(jsonReader, typeof(ProductShort))", span="463-463"];
m8_176 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="object deserializedValue", span="459-459"];
m8_179 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="ProductShort deserializedProductShort = (ProductShort)deserializedValue", span="466-466"];
m8_180 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Apple'', deserializedProductShort.Name)", span="468-468"];
m8_181 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProductShort.ExpiryDate)", span="469-469"];
m8_182 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Small'', deserializedProductShort.Sizes[0])", span="470-470"];
m8_183 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Medium'', deserializedProductShort.Sizes[1])", span="471-471"];
m8_184 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Large'', deserializedProductShort.Sizes[2])", span="472-472"];
m8_185 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", span="435-435"];
m8_291 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="638-638"];
m8_292 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="640-640"];
m8_293 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="641-641"];
m8_294 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="642-642"];
m8_295 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="644-644"];
m8_296 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="645-645"];
m8_297 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="646-646"];
m8_298 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="647-647"];
m8_299 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="648-648"];
m8_300 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="638-638"];
m8_773 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="1723-1723"];
m8_774 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''\\nItem'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''\\nManager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="1725-1742"];
m8_775 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n        new JsonSerializerSettings { \\nObjectCreationHandling = ObjectCreationHandling.Reuse })", span="1744-1745"];
m8_776 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="1747-1747"];
m8_777 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, c.Dictionary.Count)", span="1748-1748"];
m8_778 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="1749-1749"];
m8_779 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="1750-1750"];
m8_780 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, c.Collection.Count)", span="1751-1751"];
m8_781 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="1752-1752"];
m8_782 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="1753-1753"];
m8_783 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="1754-1754"];
m8_784 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="1755-1755"];
m8_785 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(c.Random)", span="1756-1756"];
m8_555 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="592-592"];
m8_787 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m8_786 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="1723-1723"];
m8_452 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.ConverterAttributeExample()", span="880-880"];
m8_453 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="DateTime date = Convert.ToDateTime(''1970-01-01T00:00:00Z'').ToUniversalTime()", span="882-882"];
m8_458 [cluster="System.Convert.ToDateTime(string)", file="JsonSerializerTest.cs", label="Entry System.Convert.ToDateTime(string)", span="0-0"];
m8_454 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="MemberConverterClass c = new MemberConverterClass\r\n        {\r\n          DefaultConverter = date,\r\n          MemberConverter = \\ndate\r\n        }", span="884-888"];
m8_459 [cluster="System.DateTime.ToUniversalTime()", file="JsonSerializerTest.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m8_455 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="890-890"];
m8_441 [cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30"];
m8_456 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="Console.WriteLine(json)", span="892-892"];
m8_457 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.ConverterAttributeExample()", span="880-880"];
m8_766 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", span="1706-1706"];
m8_767 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="1708-1713"];
m8_768 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n        new JsonSerializerSettings { \\nObjectCreationHandling = ObjectCreationHandling.Replace })", span="1715-1716"];
m8_790 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="1773-1773"];
m8_769 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="1717-1717"];
m8_770 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Dictionary.Count)", span="1718-1718"];
m8_771 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="1719-1719"];
m8_793 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99, deserializedProduct.Price)", span="1777-1777"];
m8_772 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", span="1706-1706"];
m8_706 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", span="1564-1564"];
m8_707 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="OptInClass optInClass = new OptInClass()", span="1566-1566"];
m8_708 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.Age = 26", span="1567-1567"];
m8_709 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.Name = ''James NK''", span="1568-1568"];
m8_710 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.NotIncluded = ''Poor me :(''", span="1569-1569"];
m8_711 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="1571-1571"];
m8_718 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClass.OptInClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.OptInClass.OptInClass()", span="1546-1546"];
m8_712 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="1573-1576"];
m8_713 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''\\nIgnore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="1578-1582"];
m8_714 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(26, newOptInClass.Age)", span="1583-1583"];
m8_715 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="1584-1584"];
m8_716 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="1585-1585"];
m8_717 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", span="1564-1564"];
m8_413 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", span="824-824"];
m8_414 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="826-826"];
m8_415 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1)", span="828-828"];
m8_416 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="829-829"];
m8_417 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="831-831"];
m8_418 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="833-833"];
m8_419 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", span="824-824"];
m8_617 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="Person person = GetPerson()", span="1323-1323"];
m8_338 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", span="702-702"];
m8_339 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ConverableMembers())", span="704-704"];
m8_346 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30"];
m8_340 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''String'''':''''string'''',''''Int32'''':2147483647,''''UInt32'''':4294967295,''''Byte'''':255,''''SByte'''':\\n127,''''Short'''':32767,''''UShort'''':65535,''''Long'''':9223372036854775807,''''ULong'''':9223372036854775807,''''Double'''':1.7976931348623157E+\\n308,''''Float'''':3.40282347E+38,''''DBNull'''':null,''''Bool'''':true,''''Char'''':''''\u0000''''}'', json)", span="706-706"];
m8_341 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="708-708"];
m8_342 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''string'', c.String)", span="709-709"];
m8_343 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(double.MaxValue, c.Double)", span="710-710"];
m8_344 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="711-711"];
m8_345 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", span="702-702"];
m8_760 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass.DictionaryInterfaceClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass.DictionaryInterfaceClass()", span="1686-1686"];
m8_761 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass.DictionaryInterfaceClass()", file="JsonSerializerTest.cs", label="Dictionary = new Dictionary<string, int>\r\n          {\r\n            { ''existing'', 1 }\r\n          }", span="1688-1691"];
m8_762 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass.DictionaryInterfaceClass()", file="JsonSerializerTest.cs", label="Collection = new List<int>\r\n          {\r\n            1,\r\n            2,\r\n            3\r\n          }", span="1692-1697"];
m8_763 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass.DictionaryInterfaceClass()", file="JsonSerializerTest.cs", label="Employee = new EmployeeReference\r\n          {\r\n            Name = ''EmployeeName!''\r\n          }", span="1698-1701"];
m8_764 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass.DictionaryInterfaceClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass.DictionaryInterfaceClass()", span="1686-1686"];
m8_765 [cluster="Newtonsoft.Json.Tests.TestObjects.EmployeeReference.EmployeeReference()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.EmployeeReference.EmployeeReference()", span="33-33"];
m8_287 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeNull()", span="631-631"];
m8_288 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(null)", span="633-633"];
m8_289 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''null'', json)", span="634-634"];
m8_290 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeNull()", span="631-631"];
m8_640 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="1365-1365"];
m8_641 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="1367-1367"];
m8_642 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IDictionaryProperty = new Dictionary<string, int>\r\n                                {\r\n                                  {''\\none'', 1},\r\n                                  {''two'', 2},\r\n                                  {''three'', 3}\r\n                                }", span="1368-1373"];
m8_643 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IListProperty = new List<int>\r\n                          {\r\n                            1, 2, 3\r\n                          }", span="1374-1377"];
m8_644 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IEnumerableProperty = new List<int>\r\n                                {\r\n                                  4, 5, 6\r\n                                }", span="1378-1381"];
m8_645 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="1383-1383"];
m8_649 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="1406-1406"];
m8_650 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="1407-1407"];
m8_651 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="1408-1408"];
m8_653 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="7-7"];
m8_646 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    \\n1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': \\n3\r\n  }\r\n}'', json)", span="1385-1401"];
m8_647 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(\\njson)", span="1403-1403"];
m8_648 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(deserializedObject)", span="1404-1404"];
m8_655 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m8_652 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="1365-1365"];
m8_825 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Content.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.Content.GetEnumerator()", span="1841-1841"];
m8_826 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Content.GetEnumerator()", file="JsonSerializerTest.cs", label="return Children.GetEnumerator();", span="1843-1843"];
m8_828 [cluster="System.Collections.Generic.List<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0"];
m8_827 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Content.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.Content.GetEnumerator()", span="1841-1841"];
m8_387 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", span="775-775"];
m8_388 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Name name = new Name(''The Idiot in Next To Me'')", span="777-777"];
m8_401 [cluster="Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", span="35-35"];
m8_389 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="PhoneNumber p1 = new PhoneNumber(''555-1212'')", span="779-779"];
m8_391 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="name.pNumbers.Add(p1)", span="782-782"];
m8_392 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="name.pNumbers.Add(p2)", span="783-783"];
m8_393 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(name, Formatting.Indented)", span="785-785"];
m8_402 [cluster="Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", span="31-31"];
m8_390 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="PhoneNumber p2 = new PhoneNumber(''444-1212'')", span="780-780"];
m8_394 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''personsName'''': ''''The Idiot in Next To Me'''',\r\n  ''''pNumbers'''': [\r\n    {\r\n      ''''phoneNumber'''': ''''\\n555-1212''''\r\n    },\r\n    {\r\n      ''''phoneNumber'''': ''''444-1212''''\r\n    }\r\n  ]\r\n}'', json)", span="787-797"];
m8_395 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Name newName = JsonConvert.DeserializeObject<Name>(json)", span="799-799"];
m8_396 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''The Idiot in Next To Me'', newName.personsName)", span="801-801"];
m8_397 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, newName.pNumbers.Count)", span="804-804"];
m8_398 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''555-1212'', newName.pNumbers[0].phoneNumber)", span="805-805"];
m8_399 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''444-1212'', newName.pNumbers[1].phoneNumber)", span="806-806"];
m8_400 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", span="775-775"];
m8_320 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", span="681-681"];
m8_321 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = new ClassWithArray()", span="683-683"];
m8_322 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Foo = ''hello''", span="684-684"];
m8_323 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(1)", span="685-685"];
m8_324 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(2)", span="686-686"];
m8_325 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(3)", span="687-687"];
m8_326 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(wibble)", span="688-688"];
m8_336 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35"];
m8_337 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m8_327 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="690-690"];
m8_328 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="691-691"];
m8_329 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="693-693"];
m8_330 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="694-694"];
m8_331 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="695-695"];
m8_332 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="696-696"];
m8_333 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="697-697"];
m8_334 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="698-698"];
m8_335 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", span="681-681"];
m8_839 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''\\nChildren'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="1885-1897"];
m8_831 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Content.System.Collections.Generic.IEnumerable<Newtonsoft.Json.Tests.JsonSerializerTest.Content>\\n.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.Content.System.Collections.Generic.IEnumerable<Newtonsoft.Json.Tests.JsonSerializerTest.Content>\\n.GetEnumerator()", span="1846-1846"];
m8_156 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", span="410-410"];
m8_157 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs", label="Product product = new Product()", span="412-412"];
m8_158 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs", label="product.Name = ''Apple''", span="414-414"];
m8_159 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs", label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="415-415"];
m8_160 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs", label="product.Price = 3.99M", span="416-416"];
m8_161 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs", label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="417-417"];
m8_162 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(product)", span="419-419"];
m8_163 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs", label="ProductShort deserializedProductShort = (ProductShort)JsonConvert.DeserializeObject(output, typeof(ProductShort), new JsonSerializerSettings { \\nMissingMemberHandling = MissingMemberHandling.Error })", span="431-431"];
m8_166 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="623-623"];
m8_164 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", span="410-410"];
m8_102 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", span="227-227"];
m8_103 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                \\nunescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''\\nwww.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                \\ntitle : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to \\nsearch the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find \\nsimilar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                \\nunescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''\\nnews.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                \\ntitle : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated \\nheadlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                \\nGsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''\\nhttp://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''\\nhttp://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                \\ntitleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives \\nwhich consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                \\nGsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''\\nhttp://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://\\nwww.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                \\ntitleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/\\naerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    \\nadResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''\\nGartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''\\n20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____\\nAWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                \\nimpressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____\\nAWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____\\nAWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                \\nvisibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="229-306"];
m8_104 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="object o = JsonConvert.DeserializeObject(json)", span="307-307"];
m8_105 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="string s = string.Empty", span="308-308"];
m8_106 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="s += s", span="309-309"];
m8_107 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", span="227-227"];
m8_788 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="1760-1760"];
m8_791 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="1775-1775"];
m8_794 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="1778-1778"];
m8_795 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="1779-1779"];
m8_796 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="1780-1780"];
m8_797 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="1760-1760"];
m8_671 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="1451-1451"];
m8_672 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="SubKlass i = new SubKlass(''my subprop'')", span="1453-1453"];
m8_673 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="i.SuperProp = ''overrided superprop''", span="1454-1454"];
m8_674 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(i)", span="1456-1456"];
m8_675 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="1457-1457"];
m8_676 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="1459-1459"];
m8_677 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="string newJson = JsonConvert.SerializeObject(ii)", span="1461-1461"];
m8_678 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="1462-1462"];
m8_679 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="1451-1451"];
m8_253 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", span="574-574"];
m8_254 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="ProductCollection collection = new ProductCollection()\r\n      {\r\n        new Product() { Name = ''Test1'' },\r\n        new \\nProduct() { Name = ''Test2'' },\r\n        new Product() { Name = ''Test3'' }\r\n      }", span="576-581"];
m8_255 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="JsonSerializer jsonSerializer = new JsonSerializer()", span="583-583"];
m8_258 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="jsonSerializer.Serialize(sw, collection)", span="588-588"];
m8_261 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(collection, collectionNew)", span="595-595"];
m8_263 [cluster="Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", span="29-29"];
m8_256 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="jsonSerializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="584-584"];
m8_260 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="ProductCollection collectionNew = (ProductCollection)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(sw.GetStringBuilder()\\n.ToString())), typeof(ProductCollection))", span="593-593"];
m8_257 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="586-586"];
m8_259 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[{''''Name'''':''''Test1'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0.0,''''Sizes'''':\\nnull},{''''Name'''':''''Test2'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''\\nTest3'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0.0,''''Sizes'''':null}]'',\r\n        sw.GetStringBuilder()\\n.ToString())", span="590-591"];
m8_262 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", span="574-574"];
m8_551 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemeber()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemeber()", span="1068-1068"];
m8_552 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemeber()", file="JsonSerializerTest.cs", label="string json = @''{''''Missing'''':1}''", span="1070-1070"];
m8_553 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemeber()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<DoubleClass>(json, new JsonSerializerSettings { MissingMemberHandling = MissingMemberHandling.Error })", span="1072-1072"];
m8_554 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemeber()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemeber()", span="1068-1068"];
m8_372 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="749-749"];
m8_373 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="751-751"];
m8_379 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28"];
m8_374 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="753-753"];
m8_375 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':\\n99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="755-755"];
m8_376 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="757-757"];
m8_377 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(99, c.Field)", span="758-758"];
m8_378 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="749-749"];
m8_516 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", span="1002-1002"];
m8_517 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="1004-1004"];
m8_518 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="1006-1006"];
m8_519 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="1008-1008"];
m8_520 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.Content)", span="1009-1009"];
m8_521 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="1010-1010"];
m8_522 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", span="1002-1002"];
m8_431 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", span="850-850"];
m8_432 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(JsonConvert.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="852-852"];
m8_440 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m8_433 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="853-853"];
m8_437 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="860-860"];
m8_438 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="861-861"];
m8_434 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1)", span="855-855"];
m8_435 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="856-856"];
m8_436 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="858-858"];
m8_439 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", span="850-850"];
m8_798 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.NestedInsideOuterObject()", span="1784-1784"];
m8_799 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''\\nshort'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': \\n0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="1786-1796"];
m8_800 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="JObject o = JObject.Parse(json)", span="1798-1798"];
m8_807 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="214-214"];
m8_801 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="1800-1800"];
m8_808 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="346-346"];
m8_802 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(s)", span="1801-1801"];
m8_803 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="1803-1803"];
m8_804 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="1804-1804"];
m8_805 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="1805-1805"];
m8_806 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.NestedInsideOuterObject()", span="1784-1784"];
m8_680 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", span="1466-1466"];
m8_681 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="1468-1468"];
m8_689 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29"];
m8_682 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="1469-1469"];
m8_683 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="1470-1470"];
m8_684 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="1472-1472"];
m8_686 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings {NullValueHandling = NullValueHandling.Ignore})", span="1482-1482"];
m8_685 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': \\nnull,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': \\nnull\r\n}'', json)", span="1474-1480"];
m8_687 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': \\nnull\r\n}'', json)", span="1484-1487"];
m8_688 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", span="1466-1466"];
m8_656 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="1420-1420"];
m8_657 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''\\nLastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="1422-1427"];
m8_658 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="1429-1429"];
m8_659 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="1430-1430"];
m8_660 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''firstName'', o.firstName)", span="1432-1432"];
m8_661 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstName'', o.FirstName)", span="1433-1433"];
m8_662 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastName'', o.LastName)", span="1434-1434"];
m8_663 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''lastName'', o.lastName)", span="1435-1435"];
m8_664 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="1420-1420"];
m8_854 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericDictionary()", color=green, community=1, file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericDictionary()", prediction=48, span="1942-1942"];
m8_855 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericDictionary()", color=green, community=1, file="JsonSerializerTest.cs", label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", prediction=49, span="1944-1944"];
m8_856 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericDictionary()", color=green, community=1, file="JsonSerializerTest.cs", label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", prediction=50, span="1946-1946"];
m8_857 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericDictionary()", color=green, community=1, file="JsonSerializerTest.cs", label="Console.WriteLine(values.Count)", prediction=51, span="1948-1948"];
m8_858 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericDictionary()", color=green, community=1, file="JsonSerializerTest.cs", label="Console.WriteLine(values[''key1''])", prediction=50, span="1951-1951"];
m8_859 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericDictionary()", color=green, community=1, file="JsonSerializerTest.cs", label="Assert.AreEqual(2, values.Count)", prediction=50, span="1954-1954"];
m8_860 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericDictionary()", color=green, community=1, file="JsonSerializerTest.cs", label="Assert.AreEqual(''value1'', values[''key1''])", prediction=50, span="1955-1955"];
m8_861 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericDictionary()", color=green, community=1, file="JsonSerializerTest.cs", label="Assert.AreEqual(''value2'', values[''key2''])", prediction=50, span="1956-1956"];
m8_728 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="1619-1619"];
m8_830 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Content.System.Collections.Generic.IEnumerable<Newtonsoft.Json.Tests.JsonSerializerTest.Content>\\n.GetEnumerator()", file="JsonSerializerTest.cs", label="return Children.GetEnumerator();", span="1848-1848"];
m8_862 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericDictionary()", color=green, community=1, file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericDictionary()", prediction=56, span="1942-1942"];
m8_301 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="652-652"];
m8_302 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="654-654"];
m8_303 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="655-655"];
m8_304 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="656-656"];
m8_305 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="658-658"];
m8_306 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="659-659"];
m8_307 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="660-660"];
m8_308 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="661-661"];
m8_309 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="662-662"];
m8_310 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="652-652"];
m8_604 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", span="1294-1294"];
m8_605 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="Test testClass = new Test()", span="1296-1296"];
m8_606 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="testClass.co = new Co()", span="1297-1297"];
m8_607 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="1298-1298"];
m8_610 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Co.Co()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.Co.Co()", span="1268-1268"];
m8_608 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="Test testFromDe = (Test)JsonConvert.DeserializeObject(strFromTest, typeof(Test))", span="1299-1299"];
m8_609 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", span="1294-1294"];
m8_190 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", span="477-477"];
m8_191 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="string json = @''[''''PRE\u003cPOST'''']''", span="479-479"];
m8_192 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="481-481"];
m8_193 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="482-482"];
m8_194 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="484-484"];
m8_200 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m8_196 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="487-487"];
m8_199 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m8_195 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonNetResult.Count)", span="486-486"];
m8_197 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", span="477-477"];
m8_829 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Content.System.Collections.Generic.IEnumerable<Newtonsoft.Json.Tests.JsonSerializerTest.Content>\\n.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.Content.System.Collections.Generic.IEnumerable<Newtonsoft.Json.Tests.JsonSerializerTest.Content>\\n.GetEnumerator()", span="1846-1846"];
m8_832 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PrimitiveValuesInObjectArray()", color=green, community=0, file="JsonSerializerTest.cs", label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',null],''''type'''':''''\\nrpc'''',''''tid'''':2}''", prediction=57, span="1912-1912"];
m8_833 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PrimitiveValuesInObjectArray()", color=green, community=0, file="JsonSerializerTest.cs", label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", prediction=58, span="1914-1914"];
m8_834 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PrimitiveValuesInObjectArray()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(''Router'', o.Action)", prediction=59, span="1916-1916"];
m8_835 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PrimitiveValuesInObjectArray()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(''Navigate'', o.Method)", prediction=58, span="1917-1917"];
m8_836 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PrimitiveValuesInObjectArray()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(2, o.Data.Length)", prediction=58, span="1918-1918"];
m8_347 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", span="715-715"];
m8_348 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Stack<object> s = new Stack<object>()", span="717-717"];
m8_355 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m8_349 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(1)", span="718-718"];
m8_350 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(2)", span="719-719"];
m8_351 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(3)", span="720-720"];
m8_352 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(s)", span="722-722"];
m8_356 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m8_353 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[3,2,1]'', json)", span="723-723"];
m8_354 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", span="715-715"];
m8_442 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="865-865"];
m8_443 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(JsonConvert.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="867-867"];
m8_444 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="868-868"];
m8_448 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="875-875"];
m8_449 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="876-876"];
m8_445 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="870-870"];
m8_446 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="871-871"];
m8_447 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="873-873"];
m8_450 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="865-865"];
m8_0 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", span="53-53"];
m8_1 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Store store = new Store()", span="55-55"];
m8_2 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(store)", span="57-57"];
m8_4 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="61-61"];
m8_3 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="59-59"];
m8_5 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Console.WriteLine(jsonText)", span="63-63"];
m8_6 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", span="53-53"];
m8_221 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", span="518-518"];
m8_222 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", file="JsonSerializerTest.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset> {\r\n        new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n        \\nnew DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n        \\nnew DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n      }", span="520-525"];
m8_227 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m8_228 [cluster="System.TimeSpan.FromHours(double)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m8_223 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(testDates)", span="527-527"];
m8_226 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m8_224 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/\\nDate(946701061000-0330)\/'''']'', result)", span="528-528"];
m8_225 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", span="518-518"];
m8_508 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", span="986-986"];
m8_509 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="PersonRaw personRaw = new PersonRaw\r\n      {\r\n        FirstName = ''FirstNameValue'',\r\n        RawContent = new JsonRaw(''[\\n1,2,3,4,5]''),\r\n        LastName = ''LastNameValue''\r\n      }", span="988-993"];
m8_510 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="string json", span="995-995"];
m8_511 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(personRaw)", span="997-997"];
m8_514 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="29-29"];
m8_515 [cluster="Newtonsoft.Json.JsonRaw.JsonRaw(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonRaw.JsonRaw(string)", span="58-58"];
m8_512 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', \\njson)", span="998-998"];
m8_513 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", span="986-986"];
m8_729 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="1617-1617"];
m8_131 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="373-373"];
m8_132 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="375-375"];
m8_134 [cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", color=green, community=0, file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", prediction=62, span="27-27"];
m8_133 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="373-373"];
m8_690 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="1492-1492"];
m8_691 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="1494-1494"];
m8_692 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="o.ReferenceLoopHandlingErrorProperty = o", span="1495-1495"];
m8_693 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="1497-1497"];
m8_694 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="1492-1492"];
m8_404 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", span="810-810"];
m8_405 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="812-812"];
m8_412 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33"];
m8_406 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c)", span="814-814"];
m8_407 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="816-816"];
m8_408 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''param1'', deserialized.param1)", span="818-818"];
m8_409 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="819-819"];
m8_410 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="820-820"];
m8_411 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", span="810-810"];
m8_695 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", span="1513-1513"];
m8_696 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''\\nuid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_\\nname'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''\\ndate'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''\\nsetting'''': ''''entity.field.order''''\r\n}''", span="1515-1531"];
m8_697 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="1533-1533"];
m8_699 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="1536-1536"];
m8_698 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="1534-1534"];
m8_700 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="1537-1537"];
m8_701 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="1538-1538"];
m8_702 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(8, n.FidOrder.Count)", span="1539-1539"];
m8_703 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''id'', n.FidOrder[0])", span="1540-1540"];
m8_704 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="1541-1541"];
m8_705 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", span="1513-1513"];
m8_481 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", span="931-931"];
m8_482 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass(),\r\n        Formatting.None, new JsonSerializerSettings { \\nDefaultValueHandling = DefaultValueHandling.Ignore })", span="933-934"];
m8_491 [cluster="Newtonsoft.Json.Tests.TestObjects.DefaultValueAttributeTestClass.DefaultValueAttributeTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.DefaultValueAttributeTestClass.DefaultValueAttributeTestClass()", span="32-32"];
m8_483 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TestField1'''':0,''''TestProperty1'''':null}'', json)", span="935-935"];
m8_484 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = int.MinValue, TestProperty1 = ''NotDefault'' },\r\n        \\nFormatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="937-938"];
m8_485 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TestField1'''':-2147483648,''''TestProperty1'''':''''NotDefault''''}'', json)", span="939-939"];
m8_486 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = 21, TestProperty1 = ''NotDefault'' },\r\n        \\nFormatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="941-942"];
m8_487 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TestProperty1'''':''''NotDefault''''}'', json)", span="943-943"];
m8_488 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = 21, TestProperty1 = ''TestProperty1Value'' },\r\n        \\nFormatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="945-946"];
m8_489 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{}'', json)", span="947-947"];
m8_490 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", span="931-931"];
m8_573 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="1115-1115"];
m8_574 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="1117-1119"];
m8_575 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1121-1121"];
m8_576 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="1115-1115"];
m8_616 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", span="1315-1315"];
m8_618 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="FileStream fs = System.IO.File.Open(@''c:\person.json'', FileMode.CreateNew)", span="1325-1325"];
m8_623 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="serializer.Serialize(jw, person)", span="1332-1332"];
m8_625 [cluster="System.IO.File.Open(string, System.IO.FileMode)", file="JsonSerializerTest.cs", label="Entry System.IO.File.Open(string, System.IO.FileMode)", span="0-0"];
m8_619 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="StreamWriter sw = new StreamWriter(fs)", span="1326-1326"];
m8_626 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m8_620 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="JsonWriter jw = new JsonTextWriter(sw)", span="1327-1327"];
m8_627 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="97-97"];
m8_621 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="jw.Formatting = Formatting.Indented", span="1329-1329"];
m8_622 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1331-1331"];
m8_624 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", span="1315-1315"];
m8_628 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="374-374"];
m8_460 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="900-900"];
m8_461 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="902-902"];
m8_470 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", color=green, community=0, file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", prediction=63, span="27-27"];
m8_462 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="903-903"];
m8_463 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="904-904"];
m8_464 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="906-906"];
m8_465 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''\\nMemberConverterValue'''']}'', json)", span="907-907"];
m8_466 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="909-909"];
m8_467 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="911-911"];
m8_468 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="912-912"];
m8_469 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="900-900"];
m8_380 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", span="763-763"];
m8_381 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="string jsonText = @''[3, ''''somestring'''',[1,2,3],{}]''", span="765-765"];
m8_382 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="ArrayList o = JsonConvert.DeserializeObject<ArrayList>(jsonText)", span="766-766"];
m8_383 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, o.Count)", span="768-768"];
m8_384 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ((JArray)o[2]).Count)", span="769-769"];
m8_385 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ((JObject)o[3]).Count)", span="770-770"];
m8_386 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", span="763-763"];
m8_120 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", span="355-355"];
m8_121 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="JsonPropertyClass test = new JsonPropertyClass()", span="357-357"];
m8_130 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClass.JsonPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClass.JsonPropertyClass()", span="334-334"];
m8_122 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="test.Pie = ''Delicious''", span="358-358"];
m8_123 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="test.SweetCakesCount = int.MaxValue", span="359-359"];
m8_124 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(test)", span="361-361"];
m8_127 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(test.Pie, test2.Pie)", span="367-367"];
m8_128 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="368-368"];
m8_125 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="363-363"];
m8_126 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="365-365"];
m8_129 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", span="355-355"];
m8_80 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="193-193"];
m8_81 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="195-195"];
m8_86 [cluster="Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", color=green, community=0, file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", prediction=64, span="27-27"];
m8_82 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="197-197"];
m8_83 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="199-199"];
m8_84 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="200-200"];
m8_85 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="193-193"];
m9_42 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", span="116-116"];
m9_43 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", file="JsonTypeReflector.cs", label="return AssociatedMetadataTypesCache.Get(type);", span="118-118"];
m9_44 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", span="116-116"];
m9_22 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="19-19"];
m9_45 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", span="121-121"];
m9_46 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="MetadataTypeAttribute metadataTypeAttribute = ReflectionUtils.GetAttribute<MetadataTypeAttribute>(type, true)", span="123-123"];
m9_47 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="return (metadataTypeAttribute != null) ? metadataTypeAttribute.MetadataClassType : null;", span="125-125"];
m9_49 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", span="531-531"];
m9_48 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", span="121-121"];
m9_0 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", span="49-49"];
m9_1 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", file="JsonTypeReflector.cs", label="return CachedAttributeGetter<JsonContainerAttribute>.GetAttribute(type);", span="51-51"];
m9_2 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", span="49-49"];
m9_3 [cluster="Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(System.Reflection.ICustomAttributeProvider)", span="38-38"];
m9_27 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", span="153-153"];
m9_66 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="Type type = attributeProvider as Type", span="155-155"];
m9_69 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="MemberInfo memberInfo = attributeProvider as MemberInfo", span="159-159"];
m9_72 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="return ReflectionUtils.GetAttribute<T>(attributeProvider, true);", span="163-163"];
m9_67 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="type != null", span="156-156"];
m9_68 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="return GetAttribute<T>(type);", span="157-157"];
m9_73 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", span="153-153"];
m9_50 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", span="128-128"];
m9_70 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="memberInfo != null", span="160-160"];
m9_71 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="return GetAttribute<T>(memberInfo);", span="161-161"];
m9_56 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", span="137-137"];
m9_23 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverterTypeFromAttribute(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverterTypeFromAttribute(System.Reflection.ICustomAttributeProvider)", span="90-90"];
m9_24 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverterTypeFromAttribute(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="JsonConverterAttribute converterAttribute = GetAttribute<JsonConverterAttribute>(attributeProvider)", span="92-92"];
m9_25 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverterTypeFromAttribute(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="return (converterAttribute != null)\r\n        ? converterAttribute.ConverterType\r\n        : null;", span="93-95"];
m9_26 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverterTypeFromAttribute(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverterTypeFromAttribute(System.Reflection.ICustomAttributeProvider)", span="90-90"];
m9_51 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="Type metadataType = GetAssociatedMetadataType(type)", span="130-130"];
m9_54 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="return ReflectionUtils.GetAttribute<T>(type, true);", span="134-134"];
m9_52 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="metadataType != null", span="131-131"];
m9_53 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="return ReflectionUtils.GetAttribute<T>(metadataType, true);", span="132-132"];
m9_55 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", span="128-128"];
m9_57 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="Type metadataType = GetAssociatedMetadataType(memberInfo.DeclaringType)", span="139-139"];
m9_59 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="MemberInfo metadataTypeMemberInfo = metadataType.GetMember(memberInfo.Name,\r\n          memberInfo.MemberType,\r\n          BindingFlags.Public | \\nBindingFlags.Static | BindingFlags.Instance).SingleOrDefault()", span="142-144"];
m9_62 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="return ReflectionUtils.GetAttribute<T>(memberInfo, true);", span="150-150"];
m9_58 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="metadataType != null", span="140-140"];
m9_65 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="JsonTypeReflector.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m9_60 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="metadataTypeMemberInfo != null", span="146-146"];
m9_61 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="return ReflectionUtils.GetAttribute<T>(metadataTypeMemberInfo, true);", span="147-147"];
m9_64 [cluster="System.Type.GetMember(string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", file="JsonTypeReflector.cs", label="Entry System.Type.GetMember(string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", span="0-0"];
m9_63 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", span="137-137"];
m9_7 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", span="60-60"];
m9_8 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="JsonTypeReflector.cs", label="return CachedAttributeGetter<DataContractAttribute>.GetAttribute(type);", span="62-62"];
m9_9 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", span="60-60"];
m9_28 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverter(System.Reflection.ICustomAttributeProvider, System.Type)", span="98-98"];
m9_29 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="JsonTypeReflector.cs", label="Type converterType = GetConverterType(attributeProvider)", span="100-100"];
m9_32 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="JsonTypeReflector.cs", label="!memberConverter.CanConvert(targetConvertedType)", span="106-106"];
m9_33 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="JsonTypeReflector.cs", label="throw new JsonSerializationException(''JsonConverter {0} on {1} is not compatible with member type {2}.''.FormatWith(CultureInfo.InvariantCulture, \\nmemberConverter.GetType().Name, attributeProvider, targetConvertedType.Name));", span="107-107"];
m9_30 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="JsonTypeReflector.cs", label="converterType != null", span="102-102"];
m9_31 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="JsonTypeReflector.cs", label="JsonConverter memberConverter = JsonConverterAttribute.CreateJsonConverterInstance(converterType)", span="104-104"];
m9_19 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverterType(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverterType(System.Reflection.ICustomAttributeProvider)", span="85-85"];
m9_35 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="JsonTypeReflector.cs", label="return null;", span="112-112"];
m9_37 [cluster="Newtonsoft.Json.JsonConverterAttribute.CreateJsonConverterInstance(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.JsonConverterAttribute.CreateJsonConverterInstance(System.Type)", span="38-38"];
m9_34 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="JsonTypeReflector.cs", label="return memberConverter;", span="109-109"];
m9_38 [cluster="Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", span="61-61"];
m9_39 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="48-48"];
m9_40 [cluster="object.GetType()", file="JsonTypeReflector.cs", label="Entry object.GetType()", span="0-0"];
m9_41 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="JsonTypeReflector.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48"];
m9_36 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverter(System.Reflection.ICustomAttributeProvider, System.Type)", span="98-98"];
m9_4 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonObjectAttribute(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonObjectAttribute(System.Type)", span="54-54"];
m9_5 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonObjectAttribute(System.Type)", file="JsonTypeReflector.cs", label="return GetJsonContainerAttribute(type) as JsonObjectAttribute;", span="56-56"];
m9_6 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonObjectAttribute(System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonObjectAttribute(System.Type)", span="54-54"];
m9_20 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverterType(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="return ConverterTypeCache.Get(attributeProvider);", span="87-87"];
m9_21 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverterType(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetConverterType(System.Reflection.ICustomAttributeProvider)", span="85-85"];
m9_10 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", span="66-66"];
m9_11 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", file="JsonTypeReflector.cs", label="JsonObjectAttribute objectAttribute = GetJsonObjectAttribute(objectType)", span="68-68"];
m9_13 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", file="JsonTypeReflector.cs", label="DataContractAttribute dataContractAttribute = GetDataContractAttribute(objectType)", span="73-73"];
m9_12 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", file="JsonTypeReflector.cs", label="objectAttribute == null", span="70-70"];
m9_17 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", file="JsonTypeReflector.cs", label="return objectAttribute.MemberSerialization;", span="82-82"];
m9_14 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", file="JsonTypeReflector.cs", label="dataContractAttribute != null", span="75-75"];
m9_15 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", file="JsonTypeReflector.cs", label="return MemberSerialization.OptIn;", span="76-76"];
m9_16 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", file="JsonTypeReflector.cs", label="return MemberSerialization.OptOut;", span="79-79"];
m9_18 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", span="66-66"];
m10_0 [cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, Newtonsoft.Json.Schema.JsonSchemaModel)", span="66-66"];
m10_1 [cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="_tokenType = tokenType", span="68-68"];
m10_2 [cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="_schema = schema", span="69-69"];
m10_3 [cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="_schema != null && _schema.Properties != null", span="71-71"];
m10_4 [cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="_requiredProperties = GetRequiredProperties(_schema).Distinct().ToDictionary(p => p, p => false)", span="73-73"];
m10_5 [cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, Newtonsoft.Json.Schema.JsonSchemaModel)", span="66-66"];
m10_7 [cluster="System.Collections.Generic.IEnumerable<TSource>.Distinct<TSource>()", file="JsonValidatingReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Distinct<TSource>()", span="0-0"];
m10_6 [cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.GetRequiredProperties(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.SchemaScope.GetRequiredProperties(Newtonsoft.Json.Schema.JsonSchemaModel)", span="77-77"];
m10_9 [cluster="lambda expression", file="JsonValidatingReader.cs", label="Entry lambda expression", span="73-73"];
m10_12 [cluster="lambda expression", file="JsonValidatingReader.cs", label="Entry lambda expression", span="73-73"];
m10_278 [cluster="Newtonsoft.Json.JsonValidatingReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="576-576"];
m10_279 [cluster="Newtonsoft.Json.JsonValidatingReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonValidatingReader.cs", label="IJsonLineInfo lineInfo = _reader as IJsonLineInfo", span="578-578"];
m10_280 [cluster="Newtonsoft.Json.JsonValidatingReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonValidatingReader.cs", label="return (lineInfo != null) ? lineInfo.HasLineInfo() : false;", span="579-579"];
m10_281 [cluster="Newtonsoft.Json.JsonValidatingReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="576-576"];
m10_42 [cluster="Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="18-18"];
m10_60 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInEnumAndNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateInEnumAndNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", span="261-261"];
m10_61 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInEnumAndNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema == null", span="263-263"];
m10_64 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInEnumAndNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema.Enum != null", span="268-268"];
m10_66 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInEnumAndNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="RaiseError(''Value {0} is not defined in enum.''.FormatWith(CultureInfo.InvariantCulture, value),\r\n                     schema)", span="271-272"];
m10_69 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInEnumAndNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="JsonSchemaGenerator.HasFlag(schema.Disallow, currentNodeType.Value)", span="278-278"];
m10_70 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInEnumAndNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="RaiseError(''Type {0} is disallowed.''.FormatWith(CultureInfo.InvariantCulture, currentNodeType), schema)", span="279-279"];
m10_62 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInEnumAndNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="return;", span="264-264"];
m10_63 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInEnumAndNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="JToken value = new JValue(_reader.Value)", span="266-266"];
m10_71 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInEnumAndNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateInEnumAndNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", span="261-261"];
m10_72 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="115-115"];
m10_67 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInEnumAndNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="JsonSchemaType? currentNodeType = GetCurrentNodeSchemaType()", span="275-275"];
m10_74 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JsonValidatingReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="0-0"];
m10_73 [cluster="Newtonsoft.Json.Linq.JTokenEqualityComparer.JTokenEqualityComparer()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenEqualityComparer.JTokenEqualityComparer()", span="10-10"];
m10_37 [cluster="Newtonsoft.Json.JsonValidatingReader.RaiseError(string, Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.RaiseError(string, Newtonsoft.Json.Schema.JsonSchemaModel)", span="203-203"];
m10_43 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="JsonValidatingReader.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48"];
m10_68 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInEnumAndNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="currentNodeType != null", span="276-276"];
m10_75 [cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", span="283-283"];
m10_76 [cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.HasFlag(Newtonsoft.Json.Schema.JsonSchemaType?, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.HasFlag(Newtonsoft.Json.Schema.JsonSchemaType?, Newtonsoft.Json.Schema.JsonSchemaType)", span="327-327"];
m10_149 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateArray(Newtonsoft.Json.Schema.JsonSchemaModel)", span="549-549"];
m10_265 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema == null", span="551-551"];
m10_267 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="return (TestType(schema, JsonSchemaType.Array));", span="554-554"];
m10_266 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="return true;", span="552-552"];
m10_268 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateArray(Newtonsoft.Json.Schema.JsonSchemaModel)", span="549-549"];
m10_190 [cluster="Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", span="565-565"];
m10_155 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", span="424-424"];
m10_184 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema == null", span="426-426"];
m10_186 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="!TestType(schema, JsonSchemaType.Null)", span="429-429"];
m10_188 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="ValidateInEnumAndNotDisallowed(schema)", span="432-432"];
m10_185 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="return;", span="427-427"];
m10_189 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", span="424-424"];
m10_187 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="return;", span="430-430"];
m10_147 [cluster="Newtonsoft.Json.JsonValidatingReader.ProcessValue()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.ProcessValue()", span="493-493"];
m10_226 [cluster="Newtonsoft.Json.JsonValidatingReader.ProcessValue()", file="JsonValidatingReader.cs", label="_currentScope != null && _currentScope.TokenType == JTokenType.Array", span="495-495"];
m10_227 [cluster="Newtonsoft.Json.JsonValidatingReader.ProcessValue()", file="JsonValidatingReader.cs", label="_currentScope.ArrayItemCount++", span="497-497"];
m10_230 [cluster="Newtonsoft.Json.JsonValidatingReader.ProcessValue()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.ProcessValue()", span="493-493"];
m10_228 [cluster="Newtonsoft.Json.JsonValidatingReader.ProcessValue()", file="JsonValidatingReader.cs", label="CurrentSchema != null && CurrentSchema.Items != null && CurrentSchema.Items.Count > 1 && _currentScope.ArrayItemCount >= CurrentSchema.Items.Count", span="499-499"];
m10_229 [cluster="Newtonsoft.Json.JsonValidatingReader.ProcessValue()", file="JsonValidatingReader.cs", label="RaiseError(''Index {0} has not been defined and the schema does not allow additional items.''.FormatWith(CultureInfo.InvariantCulture, _\\ncurrentScope.ArrayItemCount), CurrentSchema)", span="500-500"];
m10_153 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", span="446-446"];
m10_197 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema == null", span="448-448"];
m10_199 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="!TestType(schema, JsonSchemaType.String)", span="451-451"];
m10_201 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="ValidateInEnumAndNotDisallowed(schema)", span="454-454"];
m10_203 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema.MaximumLength != null && value.Length > schema.MaximumLength", span="458-458"];
m10_204 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="RaiseError(''String '{0}' exceeds maximum length of {1}.''.FormatWith(CultureInfo.InvariantCulture, value, schema.MaximumLength), \\nschema)", span="459-459"];
m10_205 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema.MinimumLength != null && value.Length < schema.MinimumLength", span="461-461"];
m10_206 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="RaiseError(''String '{0}' is less than minimum length of {1}.''.FormatWith(CultureInfo.InvariantCulture, value, schema.MinimumLength), \\nschema)", span="462-462"];
m10_207 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema.Patterns != null", span="464-464"];
m10_208 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema.Patterns", span="466-466"];
m10_210 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="RaiseError(''String '{0}' does not match regex pattern '{1}'.''.FormatWith(CultureInfo.InvariantCulture, value, pattern), schema)", span="469-469"];
m10_198 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="return;", span="449-449"];
m10_211 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", span="446-446"];
m10_200 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="return;", span="452-452"];
m10_202 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="string value = _reader.Value.ToString()", span="456-456"];
m10_209 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="!Regex.IsMatch(value, pattern)", span="468-468"];
m10_212 [cluster="object.ToString()", file="JsonValidatingReader.cs", label="Entry object.ToString()", span="0-0"];
m10_213 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="JsonValidatingReader.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0"];
m10_45 [cluster="Newtonsoft.Json.JsonValidatingReader.OnValidationEvent(Newtonsoft.Json.Schema.JsonSchemaException)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.OnValidationEvent(Newtonsoft.Json.Schema.JsonSchemaException)", span="214-214"];
m10_46 [cluster="Newtonsoft.Json.JsonValidatingReader.OnValidationEvent(Newtonsoft.Json.Schema.JsonSchemaException)", file="JsonValidatingReader.cs", label="ValidationEventHandler handler = ValidationEventHandler", span="216-216"];
m10_48 [cluster="Newtonsoft.Json.JsonValidatingReader.OnValidationEvent(Newtonsoft.Json.Schema.JsonSchemaException)", file="JsonValidatingReader.cs", label="handler(this, new ValidationEventArgs(exception))", span="218-218"];
m10_49 [cluster="Newtonsoft.Json.JsonValidatingReader.OnValidationEvent(Newtonsoft.Json.Schema.JsonSchemaException)", file="JsonValidatingReader.cs", label="throw exception;", span="220-220"];
m10_47 [cluster="Newtonsoft.Json.JsonValidatingReader.OnValidationEvent(Newtonsoft.Json.Schema.JsonSchemaException)", file="JsonValidatingReader.cs", label="handler != null", span="217-217"];
m10_50 [cluster="Newtonsoft.Json.JsonValidatingReader.OnValidationEvent(Newtonsoft.Json.Schema.JsonSchemaException)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.OnValidationEvent(Newtonsoft.Json.Schema.JsonSchemaException)", span="214-214"];
m10_51 [cluster="Newtonsoft.Json.Schema.ValidationEventArgs.ValidationEventArgs(Newtonsoft.Json.Schema.JsonSchemaException)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Schema.ValidationEventArgs.ValidationEventArgs(Newtonsoft.Json.Schema.JsonSchemaException)", span="37-37"];
m10_52 [cluster="Newtonsoft.Json.Schema.ValidationEventHandler.Invoke(object, Newtonsoft.Json.Schema.ValidationEventArgs)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Schema.ValidationEventHandler.Invoke(object, Newtonsoft.Json.Schema.ValidationEventArgs)", span="30-30"];
m10_38 [cluster="Newtonsoft.Json.JsonValidatingReader.RaiseError(string, Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="IJsonLineInfo lineInfo = this", span="205-205"];
m10_39 [cluster="Newtonsoft.Json.JsonValidatingReader.RaiseError(string, Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="string exceptionMessage = (lineInfo.HasLineInfo())\r\n                                  ? message + '' Line {0}, position {1}.''\\n.FormatWith(CultureInfo.InvariantCulture, lineInfo.LineNumber, lineInfo.LinePosition)\r\n                                  : message", span="207-209"];
m10_40 [cluster="Newtonsoft.Json.JsonValidatingReader.RaiseError(string, Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="OnValidationEvent(new JsonSchemaException(exceptionMessage, null, lineInfo.LineNumber, lineInfo.LinePosition))", span="211-211"];
m10_41 [cluster="Newtonsoft.Json.JsonValidatingReader.RaiseError(string, Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.RaiseError(string, Newtonsoft.Json.Schema.JsonSchemaModel)", span="203-203"];
m10_44 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, int, int)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, int, int)", span="75-75"];
m10_148 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateObject(Newtonsoft.Json.Schema.JsonSchemaModel)", span="557-557"];
m10_269 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema == null", span="559-559"];
m10_271 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="return (TestType(schema, JsonSchemaType.Object));", span="562-562"];
m10_270 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="return true;", span="560-560"];
m10_272 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateObject(Newtonsoft.Json.Schema.JsonSchemaModel)", span="557-557"];
m10_151 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", span="474-474"];
m10_214 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema == null", span="476-476"];
m10_216 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="!TestType(schema, JsonSchemaType.Integer)", span="479-479"];
m10_218 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="ValidateInEnumAndNotDisallowed(schema)", span="482-482"];
m10_220 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema.Maximum != null && value > schema.Maximum", span="486-486"];
m10_221 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="RaiseError(''Integer {0} exceeds maximum value of {1}.''.FormatWith(CultureInfo.InvariantCulture, value, schema.Maximum), schema)", span="487-487"];
m10_222 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema.Minimum != null && value < schema.Minimum", span="489-489"];
m10_223 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="RaiseError(''Integer {0} is less than minimum value of {1}.''.FormatWith(CultureInfo.InvariantCulture, value, schema.Minimum), schema)", span="490-490"];
m10_215 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="return;", span="477-477"];
m10_224 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", span="474-474"];
m10_217 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="return;", span="480-480"];
m10_219 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="long value = Convert.ToInt64(_reader.Value, CultureInfo.InvariantCulture)", span="484-484"];
m10_225 [cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="JsonValidatingReader.cs", label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0"];
m10_94 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.Read()", span="312-312"];
m10_95 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="!_reader.Read()", span="314-314"];
m10_96 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="return false;", span="315-315"];
m10_97 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="_reader.TokenType == JsonToken.Comment", span="317-317"];
m10_144 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="204-204"];
m10_143 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.Read()", span="312-312"];
m10_98 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="return true;", span="318-318"];
m10_99 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="_model == null", span="321-321"];
m10_100 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="JsonSchemaModelBuilder builder = new JsonSchemaModelBuilder()", span="323-323"];
m10_102 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="_reader.TokenType", span="327-327"];
m10_145 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.JsonSchemaModelBuilder()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.JsonSchemaModelBuilder()", span="32-32"];
m10_101 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="_model = builder.Build(_schema)", span="324-324"];
m10_146 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", span="38-38"];
m10_103 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="JsonToken.StartObject", span="329-329"];
m10_107 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="JsonToken.StartArray", span="336-336"];
m10_111 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="JsonToken.StartConstructor", span="343-343"];
m10_113 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="JsonToken.PropertyName", span="346-346"];
m10_115 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="JsonToken.Raw", span="349-349"];
m10_116 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="JsonToken.Integer", span="351-351"];
m10_119 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="JsonToken.Float", span="355-355"];
m10_122 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="JsonToken.String", span="359-359"];
m10_125 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="JsonToken.Boolean", span="363-363"];
m10_128 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="JsonToken.Null", span="367-367"];
m10_131 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="JsonToken.Undefined", span="371-371"];
m10_132 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="JsonToken.EndObject", span="373-373"];
m10_135 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="JsonToken.EndArray", span="377-377"];
m10_138 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="JsonToken.EndConstructor", span="381-381"];
m10_140 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="JsonToken.Date", span="384-384"];
m10_141 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="throw new ArgumentOutOfRangeException();", span="387-387"];
m10_104 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="ProcessValue()", span="330-330"];
m10_105 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="JsonSchemaModel objectSchema = (ValidateObject(CurrentMemberSchema))\r\n            ? CurrentMemberSchema \r\n            : null", span="331-333"];
m10_106 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="Push(new SchemaScope(JTokenType.Object, objectSchema))", span="334-334"];
m10_142 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="return true;", span="390-390"];
m10_25 [cluster="Newtonsoft.Json.JsonValidatingReader.Push(Newtonsoft.Json.JsonValidatingReader.SchemaScope)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.Push(Newtonsoft.Json.JsonValidatingReader.SchemaScope)", span="140-140"];
m10_108 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="ProcessValue()", span="337-337"];
m10_109 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="JsonSchemaModel arraySchema = (ValidateArray(CurrentMemberSchema))\r\n            ? CurrentMemberSchema\r\n            : null", span="338-340"];
m10_110 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="Push(new SchemaScope(JTokenType.Array, arraySchema))", span="341-341"];
m10_112 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="Push(new SchemaScope(JTokenType.Constructor, null))", span="344-344"];
m10_114 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="ValidatePropertyName(CurrentSchema)", span="347-347"];
m10_150 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", span="526-526"];
m10_117 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="ProcessValue()", span="352-352"];
m10_118 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="ValidateInteger(CurrentMemberSchema)", span="353-353"];
m10_120 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="ProcessValue()", span="356-356"];
m10_121 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="ValidateFloat(CurrentMemberSchema)", span="357-357"];
m10_152 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", span="504-504"];
m10_123 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="ProcessValue()", span="360-360"];
m10_124 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="ValidateString(CurrentMemberSchema)", span="361-361"];
m10_126 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="ProcessValue()", span="364-364"];
m10_127 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="ValidateBoolean(CurrentMemberSchema)", span="365-365"];
m10_154 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", span="435-435"];
m10_129 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="ProcessValue()", span="368-368"];
m10_130 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="ValidateNull(CurrentMemberSchema)", span="369-369"];
m10_133 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="ValidateEndObject(CurrentSchema)", span="374-374"];
m10_134 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="Pop()", span="375-375"];
m10_156 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", span="393-393"];
m10_30 [cluster="Newtonsoft.Json.JsonValidatingReader.Pop()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.Pop()", span="146-146"];
m10_136 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="ValidateEndArray(CurrentSchema)", span="378-378"];
m10_137 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="Pop()", span="379-379"];
m10_157 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", span="410-410"];
m10_139 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs", label="Pop()", span="382-382"];
m10_158 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="JsonValidatingReader.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m10_273 [cluster="Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonValidatingReader.cs", label="!JsonSchemaGenerator.HasFlag(currentSchema.Type, currentType)", span="567-567"];
m10_274 [cluster="Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonValidatingReader.cs", label="RaiseError(''Invalid type. Expected {0} but got {1}.''.FormatWith(CultureInfo.InvariantCulture, currentSchema.Type, currentType), \\ncurrentSchema)", span="569-569"];
m10_276 [cluster="Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonValidatingReader.cs", label="return true;", span="573-573"];
m10_275 [cluster="Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonValidatingReader.cs", label="return false;", span="570-570"];
m10_277 [cluster="Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", span="565-565"];
m10_31 [cluster="Newtonsoft.Json.JsonValidatingReader.Pop()", file="JsonValidatingReader.cs", label="SchemaScope poppedScope = _stack.Pop()", span="148-148"];
m10_35 [cluster="System.Collections.Generic.Stack<T>.Pop()", file="JsonValidatingReader.cs", label="Entry System.Collections.Generic.Stack<T>.Pop()", span="0-0"];
m10_32 [cluster="Newtonsoft.Json.JsonValidatingReader.Pop()", file="JsonValidatingReader.cs", label="_currentScope = (_stack.Count != 0)\r\n        ? _stack.Peek()\r\n        : null", span="149-151"];
m10_33 [cluster="Newtonsoft.Json.JsonValidatingReader.Pop()", file="JsonValidatingReader.cs", label="return poppedScope;", span="153-153"];
m10_36 [cluster="System.Collections.Generic.Stack<T>.Peek()", file="JsonValidatingReader.cs", label="Entry System.Collections.Generic.Stack<T>.Peek()", span="0-0"];
m10_34 [cluster="Newtonsoft.Json.JsonValidatingReader.Pop()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.Pop()", span="146-146"];
m10_231 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema == null", span="506-506"];
m10_233 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="!TestType(schema, JsonSchemaType.Float)", span="509-509"];
m10_235 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="ValidateInEnumAndNotDisallowed(schema)", span="512-512"];
m10_237 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema.Maximum != null && value > schema.Maximum", span="516-516"];
m10_238 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="RaiseError(''Float {0} exceeds maximum value of {1}.''.FormatWith(CultureInfo.InvariantCulture, JsonConvert.ToString(value), schema.Maximum), \\nschema)", span="517-517"];
m10_239 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema.Minimum != null && value < schema.Minimum", span="519-519"];
m10_240 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="RaiseError(''Float {0} is less than minimum value of {1}.''.FormatWith(CultureInfo.InvariantCulture, JsonConvert.ToString(value), \\nschema.Minimum), schema)", span="520-520"];
m10_241 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema.MaximumDecimals != null && MathUtils.GetDecimalPlaces(value) > schema.MaximumDecimals", span="522-522"];
m10_242 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="RaiseError(''Float {0} exceeds the maximum allowed number decimal places of {1}.''.FormatWith(CultureInfo.InvariantCulture, JsonConvert.ToString(\\nvalue), schema.MaximumDecimals), schema)", span="523-523"];
m10_232 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="return;", span="507-507"];
m10_243 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", span="504-504"];
m10_234 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="return;", span="510-510"];
m10_236 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="double value = Convert.ToDouble(_reader.Value, CultureInfo.InvariantCulture)", span="514-514"];
m10_244 [cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="JsonValidatingReader.cs", label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0"];
m10_245 [cluster="Newtonsoft.Json.JsonConvert.ToString(double)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(double)", span="265-265"];
m10_246 [cluster="Newtonsoft.Json.Utilities.MathUtils.GetDecimalPlaces(double)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.GetDecimalPlaces(double)", span="59-59"];
m10_247 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema == null", span="528-528"];
m10_252 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="!schema.Properties.ContainsKey(propertyName)", span="536-536"];
m10_253 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="IList<string> definedProperties = schema.Properties.Select(p => p.Key).ToList()", span="538-538"];
m10_254 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="!schema.AllowAdditionalProperties && !definedProperties.Contains(propertyName)", span="540-540"];
m10_255 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="RaiseError(''Property '{0}' has not been defined and the schema does not allow additional properties.''.FormatWith(CultureInfo.InvariantCulture, \\npropertyName), schema)", span="542-542"];
m10_248 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="return;", span="529-529"];
m10_249 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="string propertyName = Convert.ToString(_reader.Value, CultureInfo.InvariantCulture)", span="531-531"];
m10_257 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", span="526-526"];
m10_258 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="JsonValidatingReader.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m10_250 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="_currentScope.RequiredProperties.ContainsKey(propertyName)", span="533-533"];
m10_251 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="_currentScope.RequiredProperties[propertyName] = true", span="534-534"];
m10_256 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="_currentScope.CurrentPropertyName = propertyName", span="546-546"];
m10_259 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonValidatingReader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m10_260 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonValidatingReader.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m10_262 [cluster="lambda expression", file="JsonValidatingReader.cs", label="Entry lambda expression", span="538-538"];
m10_261 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JsonValidatingReader.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m10_176 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema == null", span="412-412"];
m10_179 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema.MaximumItems != null && arrayItemCount > schema.MaximumItems", span="417-417"];
m10_180 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="RaiseError(''Array item count {0} exceeds maximum count of {1}.''.FormatWith(CultureInfo.InvariantCulture, arrayItemCount, schema.MaximumItems), \\nschema)", span="418-418"];
m10_181 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema.MinimumItems != null && arrayItemCount < schema.MinimumItems", span="420-420"];
m10_182 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="RaiseError(''Array item count {0} is less than minimum count of {1}.''.FormatWith(CultureInfo.InvariantCulture, arrayItemCount, \\nschema.MinimumItems), schema)", span="421-421"];
m10_177 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="return;", span="413-413"];
m10_178 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="int arrayItemCount = _currentScope.ArrayItemCount", span="415-415"];
m10_183 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", span="410-410"];
m10_77 [cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs", label="_reader.TokenType", span="285-285"];
m10_78 [cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs", label="JsonToken.StartObject", span="287-287"];
m10_80 [cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs", label="JsonToken.StartArray", span="289-289"];
m10_82 [cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs", label="JsonToken.Integer", span="291-291"];
m10_84 [cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs", label="JsonToken.Float", span="293-293"];
m10_86 [cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs", label="JsonToken.String", span="295-295"];
m10_88 [cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs", label="JsonToken.Boolean", span="297-297"];
m10_90 [cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs", label="JsonToken.Null", span="299-299"];
m10_92 [cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs", label="return null;", span="302-302"];
m10_79 [cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs", label="return JsonSchemaType.Object;", span="288-288"];
m10_93 [cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", span="283-283"];
m10_81 [cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs", label="return JsonSchemaType.Array;", span="290-290"];
m10_83 [cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs", label="return JsonSchemaType.Integer;", span="292-292"];
m10_85 [cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs", label="return JsonSchemaType.Float;", span="294-294"];
m10_87 [cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs", label="return JsonSchemaType.String;", span="296-296"];
m10_89 [cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs", label="return JsonSchemaType.Boolean;", span="298-298"];
m10_91 [cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs", label="return JsonSchemaType.Null;", span="300-300"];
m10_53 [cluster="Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", span="228-228"];
m10_54 [cluster="Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", file="JsonValidatingReader.cs", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="230-230"];
m10_55 [cluster="Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", file="JsonValidatingReader.cs", label="_reader = reader", span="231-231"];
m10_58 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="94-94"];
m10_56 [cluster="Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", file="JsonValidatingReader.cs", label="_stack = new Stack<SchemaScope>()", span="232-232"];
m10_57 [cluster="Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", span="228-228"];
m10_59 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonValidatingReader.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m10_15 [cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.GetRequiredProperties(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="return schema.Properties.Where(p => !p.Value.Optional).Select(p => p.Key);", span="79-79"];
m10_16 [cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.GetRequiredProperties(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.SchemaScope.GetRequiredProperties(Newtonsoft.Json.Schema.JsonSchemaModel)", span="77-77"];
m10_19 [cluster="lambda expression", file="JsonValidatingReader.cs", label="Entry lambda expression", span="79-79"];
m10_22 [cluster="lambda expression", file="JsonValidatingReader.cs", label="Entry lambda expression", span="79-79"];
m10_26 [cluster="Newtonsoft.Json.JsonValidatingReader.Push(Newtonsoft.Json.JsonValidatingReader.SchemaScope)", file="JsonValidatingReader.cs", label="_stack.Push(scope)", span="142-142"];
m10_27 [cluster="Newtonsoft.Json.JsonValidatingReader.Push(Newtonsoft.Json.JsonValidatingReader.SchemaScope)", file="JsonValidatingReader.cs", label="_currentScope = scope", span="143-143"];
m10_29 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonValidatingReader.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m10_28 [cluster="Newtonsoft.Json.JsonValidatingReader.Push(Newtonsoft.Json.JsonValidatingReader.SchemaScope)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.Push(Newtonsoft.Json.JsonValidatingReader.SchemaScope)", span="140-140"];
m10_159 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema == null", span="395-395"];
m10_165 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="RaiseError(''Non-optional properties are missing from object: {0}.''.FormatWith(CultureInfo.InvariantCulture, string.Join('', '', \\nunmatchedRequiredProperties.ToArray())), schema)", span="406-406"];
m10_160 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="return;", span="396-396"];
m10_161 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Dictionary<string, bool> requiredProperties = _currentScope.RequiredProperties", span="398-398"];
m10_166 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", span="393-393"];
m10_162 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="requiredProperties != null", span="400-400"];
m10_163 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="List<string> unmatchedRequiredProperties =\r\n          requiredProperties.Where(kv => !kv.Value).Select(kv => kv.Key).ToList()", span="402-403"];
m10_164 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="unmatchedRequiredProperties.Count > 0", span="405-405"];
m10_170 [cluster="lambda expression", file="JsonValidatingReader.cs", label="Entry lambda expression", span="403-403"];
m10_173 [cluster="lambda expression", file="JsonValidatingReader.cs", label="Entry lambda expression", span="403-403"];
m10_168 [cluster="System.Collections.Generic.List<T>.ToArray()", file="JsonValidatingReader.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m10_169 [cluster="string.Join(string, params string[])", file="JsonValidatingReader.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m10_191 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="schema == null", span="437-437"];
m10_193 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="!TestType(schema, JsonSchemaType.Boolean)", span="440-440"];
m10_195 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="ValidateInEnumAndNotDisallowed(schema)", span="443-443"];
m10_192 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="return;", span="438-438"];
m10_196 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", span="435-435"];
m10_194 [cluster="Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs", label="return;", span="441-441"];
m10_10 [cluster="lambda expression", file="JsonValidatingReader.cs", label=p, span="73-73"];
m10_11 [cluster="lambda expression", file="JsonValidatingReader.cs", label="Exit lambda expression", span="73-73"];
m10_13 [cluster="lambda expression", file="JsonValidatingReader.cs", label=false, span="73-73"];
m10_14 [cluster="lambda expression", file="JsonValidatingReader.cs", label="Exit lambda expression", span="73-73"];
m10_20 [cluster="lambda expression", file="JsonValidatingReader.cs", label="!p.Value.Optional", span="79-79"];
m10_21 [cluster="lambda expression", file="JsonValidatingReader.cs", label="Exit lambda expression", span="79-79"];
m10_23 [cluster="lambda expression", file="JsonValidatingReader.cs", label="p.Key", span="79-79"];
m10_24 [cluster="lambda expression", file="JsonValidatingReader.cs", label="Exit lambda expression", span="79-79"];
m10_171 [cluster="lambda expression", file="JsonValidatingReader.cs", label="!kv.Value", span="403-403"];
m10_172 [cluster="lambda expression", file="JsonValidatingReader.cs", label="Exit lambda expression", span="403-403"];
m10_174 [cluster="lambda expression", file="JsonValidatingReader.cs", label="kv.Key", span="403-403"];
m10_175 [cluster="lambda expression", file="JsonValidatingReader.cs", label="Exit lambda expression", span="403-403"];
m10_263 [cluster="lambda expression", file="JsonValidatingReader.cs", label="p.Key", span="538-538"];
m10_264 [cluster="lambda expression", file="JsonValidatingReader.cs", label="Exit lambda expression", span="538-538"];
m12_37 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateDictionary()", color=green, community=0, file="PopulateTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateDictionary()", prediction=65, span="98-98"];
m12_38 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateDictionary()", color=green, community=0, file="PopulateTests.cs", label="Dictionary<string, string> p = new Dictionary<string, string>()", prediction=66, span="100-100"];
m12_40 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateDictionary()", color=green, community=0, file="PopulateTests.cs", label="serializer.Populate(new StringReader(@''{''''Name'''':''''James''''}''), p)", prediction=66, span="103-103"];
m12_41 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateDictionary()", color=green, community=0, file="PopulateTests.cs", label="Assert.AreEqual(1, p.Count)", prediction=66, span="105-105"];
m12_9 [cluster="Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", file="PopulateTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", span="291-291"];
m12_8 [cluster="System.IO.StringReader.StringReader(string)", color=green, community=0, file="PopulateTests.cs", label="Entry System.IO.StringReader.StringReader(string)", prediction=69, span="0-0"];
m12_44 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", color=green, community=0, file="PopulateTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", prediction=70, span="0-0"];
m12_39 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateDictionary()", color=green, community=0, file="PopulateTests.cs", label="JsonSerializer serializer = new JsonSerializer()", prediction=71, span="102-102"];
m12_42 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateDictionary()", color=green, community=0, file="PopulateTests.cs", label="Assert.AreEqual(''James'', p[''Name''])", prediction=66, span="106-106"];
m12_7 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="PopulateTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="241-241"];
m12_43 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateDictionary()", color=green, community=0, file="PopulateTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateDictionary()", prediction=73, span="98-98"];
m12_29 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateListOfPeople()", color=green, community=0, file="PopulateTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateListOfPeople()", prediction=74, span="85-85"];
m12_30 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateListOfPeople()", color=green, community=0, file="PopulateTests.cs", label="List<Person> p = new List<Person>()", prediction=75, span="87-87"];
m12_26 [cluster="System.Collections.Generic.List<T>.List()", color=green, community=0, file="PopulateTests.cs", label="Entry System.Collections.Generic.List<T>.List()", prediction=76, span="0-0"];
m12_31 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateListOfPeople()", color=green, community=0, file="PopulateTests.cs", label="JsonSerializer serializer = new JsonSerializer()", prediction=77, span="89-89"];
m12_32 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateListOfPeople()", color=green, community=0, file="PopulateTests.cs", label="serializer.Populate(new StringReader(@''[{''''Name'''':''''James''''},{''''Name'''':''''Jim''''}]''), p)", prediction=75, span="90-90"];
m12_33 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateListOfPeople()", color=green, community=0, file="PopulateTests.cs", label="Assert.AreEqual(2, p.Count)", prediction=75, span="92-92"];
m12_34 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateListOfPeople()", color=green, community=0, file="PopulateTests.cs", label="Assert.AreEqual(''James'', p[0].Name)", prediction=75, span="93-93"];
m12_35 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateListOfPeople()", color=green, community=0, file="PopulateTests.cs", label="Assert.AreEqual(''Jim'', p[1].Name)", prediction=75, span="94-94"];
m12_36 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateListOfPeople()", color=green, community=0, file="PopulateTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateListOfPeople()", prediction=82, span="85-85"];
m12_11 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", color=green, community=0, file="PopulateTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", prediction=83, span="24-24"];
m12_12 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", color=green, community=0, file="PopulateTests.cs", label="Store s = new Store()", prediction=84, span="26-26"];
m12_20 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", color=green, community=0, file="PopulateTests.cs", label="serializer.Populate(new StringReader(json), s)", prediction=84, span="75-75"];
m12_21 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", color=green, community=0, file="PopulateTests.cs", label="Assert.AreEqual(1, s.Mottos.Count)", prediction=84, span="77-77"];
m12_14 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", color=green, community=0, file="PopulateTests.cs", label="s.product = new List<Product>\r\n        {\r\n          new Product\r\n            {\r\n              ExpiryDate = new DateTime(\\n2000, 12, 3, 0, 0, 0, DateTimeKind.Utc),\r\n              Name = ''ProductName!'',\r\n              Price = 9.9m\r\n            }\r\n        }", prediction=87, span="28-36"];
m12_16 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", color=green, community=0, file="PopulateTests.cs", label="s.Mottos = new List<string> { ''Can do!'', ''We deliver!'' }", prediction=88, span="38-38"];
m12_13 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", color=green, community=0, file="PopulateTests.cs", label="s.Color = StoreColor.Red", prediction=89, span="27-27"];
m12_15 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", color=green, community=0, file="PopulateTests.cs", label="s.Width = 99.99d", prediction=90, span="37-37"];
m12_22 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", color=green, community=0, file="PopulateTests.cs", label="Assert.AreEqual(''Fail whale'', s.Mottos[0])", prediction=84, span="78-78"];
m12_23 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", color=green, community=0, file="PopulateTests.cs", label="Assert.AreEqual(1, s.product.Count)", prediction=84, span="79-79"];
m12_25 [cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", color=green, community=0, file="PopulateTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", prediction=93, span="44-44"];
m12_27 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", color=green, community=0, file="PopulateTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", prediction=94, span="29-29"];
m12_28 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", color=green, community=0, file="PopulateTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", prediction=95, span="0-0"];
m12_17 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", color=green, community=0, file="PopulateTests.cs", label="string json = @''{\r\n  ''''Color'''': 2,\r\n  ''''Establised'''': ''''\/Date(1264122061000+0000)\/'''',\r\n  ''''Width'''': 99.99,\r\n  ''''\\nEmployees'''': 999,\r\n  ''''RoomsPerFloor'''': [\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5,\r\n    6,\r\n    7,\r\n    8,\r\n    \\n9\r\n  ],\r\n  ''''Open'''': false,\r\n  ''''Symbol'''': ''''@'''',\r\n  ''''Mottos'''': [\r\n    ''''Fail whale''''\r\n  ],\r\n  ''''\\nCost'''': 100980.1,\r\n  ''''Escape'''': ''''\r\n\t\f\b?{\\r\\n\''''''''',\r\n  ''''product'''': [\r\n    {\r\n      ''''Name'''': ''''\\nProductName!'''',\r\n      ''''ExpiryDate'''': ''''\/Date(975801600000)\/'''',\r\n      ''''Price'''': 9.9,\r\n      ''''Sizes'''': \\nnull\r\n    }\r\n  ]\r\n}''", prediction=84, span="40-71"];
m12_24 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", color=green, community=0, file="PopulateTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", prediction=97, span="24-24"];
m12_18 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", color=green, community=0, file="PopulateTests.cs", label="JsonSerializer serializer = new JsonSerializer()", prediction=84, span="73-73"];
m12_19 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulateStore()", color=green, community=0, file="PopulateTests.cs", label="serializer.ObjectCreationHandling = ObjectCreationHandling.Replace", prediction=99, span="74-74"];
m12_0 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulatePerson()", color=green, community=0, file="PopulateTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulatePerson()", prediction=100, span="13-13"];
m12_1 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulatePerson()", color=green, community=0, file="PopulateTests.cs", label="Person p = new Person()", prediction=101, span="15-15"];
m12_3 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulatePerson()", color=green, community=0, file="PopulateTests.cs", label="serializer.Populate(new StringReader(@''{''''Name'''':''''James''''}''), p)", prediction=101, span="18-18"];
m12_4 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulatePerson()", color=green, community=0, file="PopulateTests.cs", label="Assert.AreEqual(''James'', p.Name)", prediction=101, span="20-20"];
m12_2 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulatePerson()", color=green, community=0, file="PopulateTests.cs", label="JsonSerializer serializer = new JsonSerializer()", prediction=104, span="17-17"];
m12_6 [cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", color=green, community=0, file="PopulateTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", prediction=105, span="34-34"];
m12_5 [cluster="Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulatePerson()", color=green, community=0, file="PopulateTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PopulateTests.PopulatePerson()", prediction=106, span="13-13"];
m13_80 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEventsDocumentationExample()", file="SerializationEventAttributeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEventsDocumentationExample()", span="177-177"];
m13_81 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEventsDocumentationExample()", file="SerializationEventAttributeTests.cs", label="SerializationEventTestObject obj = new SerializationEventTestObject()", span="179-179"];
m13_82 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEventsDocumentationExample()", file="SerializationEventAttributeTests.cs", label="Console.WriteLine(obj.Member1)", span="181-181"];
m13_83 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEventsDocumentationExample()", file="SerializationEventAttributeTests.cs", label="Console.WriteLine(obj.Member2)", span="183-183"];
m13_84 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEventsDocumentationExample()", file="SerializationEventAttributeTests.cs", label="Console.WriteLine(obj.Member3)", span="185-185"];
m13_85 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEventsDocumentationExample()", file="SerializationEventAttributeTests.cs", label="Console.WriteLine(obj.Member4)", span="187-187"];
m13_86 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEventsDocumentationExample()", file="SerializationEventAttributeTests.cs", label="string json = JsonConvert.SerializeObject(obj, Formatting.Indented)", span="190-190"];
m13_87 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEventsDocumentationExample()", file="SerializationEventAttributeTests.cs", label="Console.WriteLine(obj.Member1)", span="197-197"];
m13_88 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEventsDocumentationExample()", file="SerializationEventAttributeTests.cs", label="Console.WriteLine(obj.Member2)", span="199-199"];
m13_89 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEventsDocumentationExample()", file="SerializationEventAttributeTests.cs", label="Console.WriteLine(obj.Member3)", span="201-201"];
m13_90 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEventsDocumentationExample()", file="SerializationEventAttributeTests.cs", label="Console.WriteLine(obj.Member4)", span="203-203"];
m13_18 [cluster="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.SerializationEventTestObject()", file="SerializationEventAttributeTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject.SerializationEventTestObject()", span="50-50"];
m13_97 [cluster="System.Console.WriteLine(int)", file="SerializationEventAttributeTests.cs", label="Entry System.Console.WriteLine(int)", span="0-0"];
m13_98 [cluster="System.Console.WriteLine(string)", file="SerializationEventAttributeTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m13_91 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEventsDocumentationExample()", file="SerializationEventAttributeTests.cs", label="obj = JsonConvert.DeserializeObject<SerializationEventTestObject>(json)", span="206-206"];
m13_20 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="SerializationEventAttributeTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="465-465"];
m13_92 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEventsDocumentationExample()", file="SerializationEventAttributeTests.cs", label="Console.WriteLine(obj.Member1)", span="208-208"];
m13_93 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEventsDocumentationExample()", file="SerializationEventAttributeTests.cs", label="Console.WriteLine(obj.Member2)", span="210-210"];
m13_94 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEventsDocumentationExample()", file="SerializationEventAttributeTests.cs", label="Console.WriteLine(obj.Member3)", span="212-212"];
m13_95 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEventsDocumentationExample()", file="SerializationEventAttributeTests.cs", label="Console.WriteLine(obj.Member4)", span="214-214"];
m13_21 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="SerializationEventAttributeTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="549-549"];
m13_96 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEventsDocumentationExample()", file="SerializationEventAttributeTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEventsDocumentationExample()", span="177-177"];
m13_61 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.DictionaryEvents()", file="SerializationEventAttributeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.DictionaryEvents()", span="139-139"];
m13_62 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.DictionaryEvents()", file="SerializationEventAttributeTests.cs", label="SerializationEventTestDictionary obj = new SerializationEventTestDictionary\r\n        {\r\n          { 1.1m, ''first'' },\r\n          { \\n2.222222222m, ''second'' },\r\n          { int.MaxValue, ''third'' },\r\n          { Convert.ToDecimal(Math.PI), ''fourth'' }\r\n        }", span="141-147"];
m13_60 [cluster="System.Convert.ToDecimal(double)", file="SerializationEventAttributeTests.cs", label="Entry System.Convert.ToDecimal(double)", span="0-0"];
m13_79 [cluster="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestDictionary.SerializationEventTestDictionary()", file="SerializationEventAttributeTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SerializationEventTestDictionary.SerializationEventTestDictionary()", span="47-47"];
m13_63 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.DictionaryEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(11, obj.Member1)", span="149-149"];
m13_64 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.DictionaryEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''Hello World!'', obj.Member2)", span="150-150"];
m13_65 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.DictionaryEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This is a nonserialized value'', obj.Member3)", span="151-151"];
m13_66 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.DictionaryEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(null, obj.Member4)", span="152-152"];
m13_67 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.DictionaryEvents()", file="SerializationEventAttributeTests.cs", label="string json = JsonConvert.SerializeObject(obj, Formatting.Indented)", span="154-154"];
m13_69 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.DictionaryEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(11, obj.Member1)", span="163-163"];
m13_70 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.DictionaryEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This value was reset after serialization.'', obj.Member2)", span="164-164"];
m13_71 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.DictionaryEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This is a nonserialized value'', obj.Member3)", span="165-165"];
m13_72 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.DictionaryEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(null, obj.Member4)", span="166-166"];
m13_68 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.DictionaryEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(@''{\r\n  ''''1.1'''': ''''first'''',\r\n  ''''2.222222222'''': ''''second'''',\r\n  ''''2147483647'''': ''''third'''',\r\n  ''''\\n3.14159265358979'''': ''''fourth'''',\r\n  ''''79228162514264337593543950335'''': ''''Inserted on serializing''''\r\n}'', json)", span="155-161"];
m13_73 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.DictionaryEvents()", file="SerializationEventAttributeTests.cs", label="obj = JsonConvert.DeserializeObject<SerializationEventTestDictionary>(json)", span="168-168"];
m13_74 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.DictionaryEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(11, obj.Member1)", span="170-170"];
m13_75 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.DictionaryEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''Hello World!'', obj.Member2)", span="171-171"];
m13_76 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.DictionaryEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This value was set during deserialization'', obj.Member3)", span="172-172"];
m13_77 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.DictionaryEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This value was set after deserialization.'', obj.Member4)", span="173-173"];
m13_78 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.DictionaryEvents()", file="SerializationEventAttributeTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.DictionaryEvents()", span="139-139"];
m13_0 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEvents()", file="SerializationEventAttributeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEvents()", span="41-41"];
m13_1 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEvents()", file="SerializationEventAttributeTests.cs", label="SerializationEventTestObject obj = new SerializationEventTestObject()", span="43-43"];
m13_2 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(11, obj.Member1)", span="45-45"];
m13_3 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''Hello World!'', obj.Member2)", span="46-46"];
m13_4 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This is a nonserialized value'', obj.Member3)", span="47-47"];
m13_5 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(null, obj.Member4)", span="48-48"];
m13_6 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEvents()", file="SerializationEventAttributeTests.cs", label="string json = JsonConvert.SerializeObject(obj, Formatting.Indented)", span="50-50"];
m13_8 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(11, obj.Member1)", span="57-57"];
m13_9 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This value was reset after serialization.'', obj.Member2)", span="58-58"];
m13_10 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This is a nonserialized value'', obj.Member3)", span="59-59"];
m13_11 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(null, obj.Member4)", span="60-60"];
m13_7 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Member1'''': 11,\r\n  ''''Member2'''': ''''This value went into the data file during serialization.'''',\r\n  ''''\\nMember4'''': null\r\n}'', json)", span="51-55"];
m13_12 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEvents()", file="SerializationEventAttributeTests.cs", label="obj = JsonConvert.DeserializeObject<SerializationEventTestObject>(json)", span="62-62"];
m13_13 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(11, obj.Member1)", span="64-64"];
m13_14 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This value went into the data file during serialization.'', obj.Member2)", span="65-65"];
m13_15 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This value was set during deserialization'', obj.Member3)", span="66-66"];
m13_16 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This value was set after deserialization.'', obj.Member4)", span="67-67"];
m13_17 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEvents()", file="SerializationEventAttributeTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectEvents()", span="41-41"];
m13_41 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ListEvents()", file="SerializationEventAttributeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ListEvents()", span="101-101"];
m13_42 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ListEvents()", file="SerializationEventAttributeTests.cs", label="SerializationEventTestList obj = new SerializationEventTestList\r\n        {\r\n          1.1m,\r\n          2.222222222m,\r\n          \\nint.MaxValue,\r\n          Convert.ToDecimal(Math.PI)\r\n        }", span="103-109"];
m13_59 [cluster="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestList.SerializationEventTestList()", file="SerializationEventAttributeTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SerializationEventTestList.SerializationEventTestList()", span="47-47"];
m13_43 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ListEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(11, obj.Member1)", span="111-111"];
m13_44 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ListEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''Hello World!'', obj.Member2)", span="112-112"];
m13_45 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ListEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This is a nonserialized value'', obj.Member3)", span="113-113"];
m13_46 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ListEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(null, obj.Member4)", span="114-114"];
m13_47 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ListEvents()", file="SerializationEventAttributeTests.cs", label="string json = JsonConvert.SerializeObject(obj, Formatting.Indented)", span="116-116"];
m13_49 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ListEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(11, obj.Member1)", span="125-125"];
m13_50 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ListEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This value was reset after serialization.'', obj.Member2)", span="126-126"];
m13_51 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ListEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This is a nonserialized value'', obj.Member3)", span="127-127"];
m13_52 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ListEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(null, obj.Member4)", span="128-128"];
m13_48 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ListEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(@''[\r\n  -1.0,\r\n  1.1,\r\n  2.222222222,\r\n  2147483647.0,\r\n  3.14159265358979\r\n]'', json)", span="117-123"];
m13_53 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ListEvents()", file="SerializationEventAttributeTests.cs", label="obj = JsonConvert.DeserializeObject<SerializationEventTestList>(json)", span="130-130"];
m13_54 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ListEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(11, obj.Member1)", span="132-132"];
m13_55 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ListEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''Hello World!'', obj.Member2)", span="133-133"];
m13_56 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ListEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This value was set during deserialization'', obj.Member3)", span="134-134"];
m13_57 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ListEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This value was set after deserialization.'', obj.Member4)", span="135-135"];
m13_58 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ListEvents()", file="SerializationEventAttributeTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ListEvents()", span="101-101"];
m13_22 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectWithConstructorEvents()", file="SerializationEventAttributeTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectWithConstructorEvents()", span="71-71"];
m13_23 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectWithConstructorEvents()", file="SerializationEventAttributeTests.cs", label="SerializationEventTestObjectWithConstructor obj = new SerializationEventTestObjectWithConstructor(11, ''Hello World!'', null)", span="73-73"];
m13_40 [cluster="Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObjectWithConstructor.SerializationEventTestObjectWithConstructor(int, string, \\nstring)", file="SerializationEventAttributeTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObjectWithConstructor.SerializationEventTestObjectWithConstructor(\\nint, string, string)", span="47-47"];
m13_24 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectWithConstructorEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(11, obj.Member1)", span="75-75"];
m13_25 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectWithConstructorEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''Hello World!'', obj.Member2)", span="76-76"];
m13_26 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectWithConstructorEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This is a nonserialized value'', obj.Member3)", span="77-77"];
m13_27 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectWithConstructorEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(null, obj.Member4)", span="78-78"];
m13_28 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectWithConstructorEvents()", file="SerializationEventAttributeTests.cs", label="string json = JsonConvert.SerializeObject(obj, Formatting.Indented)", span="80-80"];
m13_30 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectWithConstructorEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(11, obj.Member1)", span="87-87"];
m13_31 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectWithConstructorEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This value was reset after serialization.'', obj.Member2)", span="88-88"];
m13_32 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectWithConstructorEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This is a nonserialized value'', obj.Member3)", span="89-89"];
m13_33 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectWithConstructorEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(null, obj.Member4)", span="90-90"];
m13_29 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectWithConstructorEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Member1'''': 11,\r\n  ''''Member2'''': ''''This value went into the data file during serialization.'''',\r\n  ''''\\nMember4'''': null\r\n}'', json)", span="81-85"];
m13_34 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectWithConstructorEvents()", file="SerializationEventAttributeTests.cs", label="obj = JsonConvert.DeserializeObject<SerializationEventTestObjectWithConstructor>(json)", span="92-92"];
m13_35 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectWithConstructorEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(11, obj.Member1)", span="94-94"];
m13_36 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectWithConstructorEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This value went into the data file during serialization.'', obj.Member2)", span="95-95"];
m13_37 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectWithConstructorEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This value was set during deserialization'', obj.Member3)", span="96-96"];
m13_38 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectWithConstructorEvents()", file="SerializationEventAttributeTests.cs", label="Assert.AreEqual(''This value was set after deserialization.'', obj.Member4)", span="97-97"];
m13_39 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectWithConstructorEvents()", file="SerializationEventAttributeTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests.ObjectWithConstructorEvents()", span="71-71"];
m0_47;
m0_48;
m0_19;
m0_59;
m1_6;
m1_7;
m1_364;
m1_365;
m1_366;
m1_367;
m1_368;
m1_369;
m1_370;
m1_371;
m3_9;
m3_34;
m3_37;
m3_56;
m3_58;
m3_59;
m3_62;
m3_61;
m3_86;
m3_88;
m4_57;
m5_281;
m6_107;
m8_10;
m8_66;
m8_67;
m8_853;
m8_217;
m8_198;
m8_654;
m8_201;
m10_8;
m10_167;
m10_18;
m10_17;
m10_282;
m10_283;
m12_10;
m13_19;
m0_0 -> m0_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_0 -> m0_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_4 -> m0_7  [color=darkseagreen4, key=1, label=data, style=dashed];
m0_10 -> m0_14  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_10 -> m0_15  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_10 -> m0_16  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_10 -> m0_17  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_50 -> m0_53  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_50 -> m0_55  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_23 -> m0_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_23 -> m0_26  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_23 -> m0_27  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_23 -> m0_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_23 -> m0_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_23 -> m0_39  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_24 -> m0_33  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_24 -> m0_35  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_24 -> m0_37  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_32 -> m0_34  [color=darkseagreen4, key=1, label=data, style=dashed];
m0_32 -> m0_36  [color=darkseagreen4, key=1, label=data, style=dashed];
m0_32 -> m0_38  [color=darkseagreen4, key=1, label=data, style=dashed];
m1_108 -> m1_113  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_108 -> m1_116  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<int, T>", style=dashed];
m1_108 -> m1_117  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<int, T>", style=dashed];
m1_108 -> m1_119  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<System.Collections.Generic.List<T>>", style=dashed];
m1_108 -> m1_120  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<System.Collections.Generic.List<T>>", style=dashed];
m1_109 -> m1_111  [color=darkseagreen4, key=1, label=currentArray, style=dashed];
m1_110 -> m1_121  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_121 -> m1_121  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_114 -> m1_117  [color=darkseagreen4, key=1, label=items, style=dashed];
m1_114 -> m1_119  [color=darkseagreen4, key=1, label=items, style=dashed];
m1_115 -> m1_117  [color=darkseagreen4, key=1, label=k, style=dashed];
m1_115 -> m1_118  [color=darkseagreen4, key=1, label=k, style=dashed];
m1_118 -> m1_118  [color=darkseagreen4, key=1, label=k, style=dashed];
m1_131 -> m1_133  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m1_131 -> m1_134  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m1_131 -> m1_138  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m1_131 -> m1_139  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m1_136 -> m1_139  [color=darkseagreen4, key=1, label=comparer, style=dashed];
m1_137 -> m1_139  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_137 -> m1_141  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_141 -> m1_141  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_34 -> m1_37  [color=darkseagreen4, key=1, label="int?", style=dashed];
m1_34 -> m1_40  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m1_34 -> m1_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m1_48 -> m1_50  [color=darkseagreen4, key=1, label=endIndex, style=dashed];
m1_39 -> m1_41  [color=darkseagreen4, key=1, label=slicedList, style=dashed];
m1_39 -> m1_51  [color=darkseagreen4, key=1, label=slicedList, style=dashed];
m1_39 -> m1_53  [color=darkseagreen4, key=1, label=slicedList, style=dashed];
m1_49 -> m1_51  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_148 -> m1_153  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_185 -> m1_187  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_155 -> m1_160  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m1_155 -> m1_161  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_155 -> m1_163  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m1_357 -> m1_359  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m1_357 -> m1_360  [color=green, key=1, label="System.Collections.Generic.IEqualityComparer<T>", style=dashed];
m1_358 -> m1_362  [color=green, key=1, label=allAdded, style=dashed];
m1_361 -> m1_362  [color=green, key=1, label=allAdded, style=dashed];
m1_247 -> m1_250  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_247 -> m1_253  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_247 -> m1_254  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_247 -> m1_255  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_247 -> m1_256  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_247 -> m1_260  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_251 -> m1_253  [color=darkseagreen4, key=1, label=collectionItemType, style=dashed];
m1_123 -> m1_127  [color=darkseagreen4, key=1, label="System.Collections.ICollection", style=dashed];
m1_126 -> m1_128  [color=darkseagreen4, key=1, label=array, style=dashed];
m1_225 -> m1_228  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_225 -> m1_231  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_225 -> m1_232  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_225 -> m1_233  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_225 -> m1_234  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_225 -> m1_243  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_229 -> m1_231  [color=darkseagreen4, key=1, label=collectionItemType, style=dashed];
m1_217 -> m1_219  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_217 -> m1_221  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_346 -> m1_349  [color=darkseagreen4, key=1, label=T, style=dashed];
m1_262 -> m1_265  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_262 -> m1_269  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_262 -> m1_270  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_262 -> m1_271  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_262 -> m1_272  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_262 -> m1_279  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_266 -> m1_269  [color=darkseagreen4, key=1, label=dictionaryKeyType, style=dashed];
m1_267 -> m1_269  [color=darkseagreen4, key=1, label=dictionaryValueType, style=dashed];
m1_25 -> m1_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m1_20 -> m1_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<T>", style=dashed];
m1_149 -> m1_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_78 -> m1_81  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m1_78 -> m1_83  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m1_78 -> m1_84  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m1_102 -> m1_105  [color=darkseagreen4, key=1, label="params System.Collections.Generic.IList<T>[]", style=dashed];
m1_103 -> m1_105  [color=darkseagreen4, key=1, label=flattened, style=dashed];
m1_103 -> m1_106  [color=darkseagreen4, key=1, label=flattened, style=dashed];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label="System.Collections.IEnumerable", style=dashed];
m1_2 -> m1_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_207 -> m1_209  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_207 -> m1_211  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_207 -> m1_213  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_167 -> m1_170  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m1_167 -> m1_171  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m1_169 -> m1_172  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_169 -> m1_173  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_170 -> m1_172  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_177 -> m1_179  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m1_177 -> m1_180  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m1_190 -> m1_192  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_190 -> m1_193  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_87 -> m1_90  [color=darkseagreen4, key=1, label="System.Collections.IEnumerable", style=dashed];
m1_94 -> m1_96  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<T>", style=dashed];
m1_95 -> m1_97  [color=darkseagreen4, key=1, label=distinctList, style=dashed];
m1_95 -> m1_98  [color=darkseagreen4, key=1, label=distinctList, style=dashed];
m1_95 -> m1_99  [color=darkseagreen4, key=1, label=distinctList, style=dashed];
m1_96 -> m1_98  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_61 -> m1_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<V>", style=dashed];
m1_65 -> m1_71  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_66 -> m1_68  [color=darkseagreen4, key=1, label=key, style=dashed];
m1_66 -> m1_70  [color=darkseagreen4, key=1, label=key, style=dashed];
m1_64 -> m1_68  [color=darkseagreen4, key=1, label=groupedValues, style=dashed];
m1_64 -> m1_70  [color=darkseagreen4, key=1, label=groupedValues, style=dashed];
m1_64 -> m1_72  [color=darkseagreen4, key=1, label=groupedValues, style=dashed];
m1_69 -> m1_71  [color=darkseagreen4, key=1, label=groupedValueList, style=dashed];
m1_195 -> m1_197  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_195 -> m1_199  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_195 -> m1_201  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_331 -> m1_337  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m1_336 -> m1_338  [color=darkseagreen4, key=1, label=destinationArray, style=dashed];
m1_15 -> m1_17  [color=darkseagreen4, key=1, label="System.Collections.ICollection", style=dashed];
m1_281 -> m1_283  [color=darkseagreen4, key=1, label="System.Action<System.Collections.IList, bool>", style=dashed];
m1_281 -> m1_287  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_281 -> m1_290  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_281 -> m1_294  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_281 -> m1_300  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_281 -> m1_303  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_281 -> m1_304  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_281 -> m1_306  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_281 -> m1_309  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_281 -> m1_313  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_281 -> m1_314  [color=darkseagreen4, key=1, label="System.Action<System.Collections.IList, bool>", style=dashed];
m1_281 -> m1_316  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_281 -> m1_318  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_305 -> m1_314  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_305 -> m1_320  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_310 -> m1_314  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_310 -> m1_320  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_286 -> m1_314  [color=darkseagreen4, key=1, label=isReadOnlyOrFixedSize, style=dashed];
m1_286 -> m1_315  [color=darkseagreen4, key=1, label=isReadOnlyOrFixedSize, style=dashed];
m1_288 -> m1_312  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_288 -> m1_314  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_288 -> m1_320  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_289 -> m1_314  [color=darkseagreen4, key=1, label=isReadOnlyOrFixedSize, style=dashed];
m1_289 -> m1_315  [color=darkseagreen4, key=1, label=isReadOnlyOrFixedSize, style=dashed];
m1_292 -> m1_297  [color=darkseagreen4, key=1, label=genericEnumerable, style=dashed];
m1_292 -> m1_300  [color=darkseagreen4, key=1, label=genericEnumerable, style=dashed];
m1_301 -> m1_312  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_301 -> m1_314  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_301 -> m1_320  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_293 -> m1_299  [color=darkseagreen4, key=1, label=suitableConstructor, style=dashed];
m1_295 -> m1_297  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m1_302 -> m1_314  [color=darkseagreen4, key=1, label=isReadOnlyOrFixedSize, style=dashed];
m1_302 -> m1_315  [color=darkseagreen4, key=1, label=isReadOnlyOrFixedSize, style=dashed];
m1_307 -> m1_314  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_307 -> m1_320  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_308 -> m1_314  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_308 -> m1_320  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_311 -> m1_314  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_311 -> m1_320  [color=darkseagreen4, key=1, label=list, style=dashed];
m2_7 -> m2_15  [color=darkseagreen4, key=1, label="System.DateTimeKind", style=dashed];
m2_3 -> m2_3  [color=darkseagreen4, key=1, label=utcOffset, style=dashed];
m3_2 -> m3_4  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_12 -> m3_14  [color=darkseagreen4, key=1, label=f, style=dashed];
m3_12 -> m3_15  [color=darkseagreen4, key=1, label=f, style=dashed];
m3_12 -> m3_16  [color=darkseagreen4, key=1, label=f, style=dashed];
m3_12 -> m3_17  [color=darkseagreen4, key=1, label=f, style=dashed];
m3_12 -> m3_18  [color=darkseagreen4, key=1, label=f, style=dashed];
m3_12 -> m3_19  [color=darkseagreen4, key=1, label=f, style=dashed];
m3_12 -> m3_20  [color=darkseagreen4, key=1, label=f, style=dashed];
m3_12 -> m3_21  [color=darkseagreen4, key=1, label=f, style=dashed];
m3_12 -> m3_22  [color=darkseagreen4, key=1, label=f, style=dashed];
m3_12 -> m3_23  [color=darkseagreen4, key=1, label=f, style=dashed];
m3_12 -> m3_24  [color=darkseagreen4, key=1, label=f, style=dashed];
m3_12 -> m3_25  [color=darkseagreen4, key=1, label=f, style=dashed];
m3_12 -> m3_29  [color=darkseagreen4, key=1, label=f, style=dashed];
m3_12 -> m3_30  [color=darkseagreen4, key=1, label=f, style=dashed];
m3_26 -> m3_28  [color=darkseagreen4, key=1, label=childFolder, style=dashed];
m3_26 -> m3_29  [color=darkseagreen4, key=1, label=childFolder, style=dashed];
m3_26 -> m3_30  [color=darkseagreen4, key=1, label=childFolder, style=dashed];
m3_26 -> m3_31  [color=darkseagreen4, key=1, label=childFolder, style=dashed];
m3_39 -> m3_43  [color=darkseagreen4, key=1, label=e, style=dashed];
m3_42 -> m3_44  [color=darkseagreen4, key=1, label=newKey, style=dashed];
m3_42 -> m3_45  [color=darkseagreen4, key=1, label=newKey, style=dashed];
m3_42 -> m3_46  [color=darkseagreen4, key=1, label=newKey, style=dashed];
m3_42 -> m3_47  [color=darkseagreen4, key=1, label=newKey, style=dashed];
m3_42 -> m3_48  [color=darkseagreen4, key=1, label=newKey, style=dashed];
m3_42 -> m3_49  [color=darkseagreen4, key=1, label=newKey, style=dashed];
m3_42 -> m3_50  [color=darkseagreen4, key=1, label=newKey, style=dashed];
m3_42 -> m3_51  [color=darkseagreen4, key=1, label=newKey, style=dashed];
m3_42 -> m3_52  [color=darkseagreen4, key=1, label=newKey, style=dashed];
m3_42 -> m3_53  [color=darkseagreen4, key=1, label=newKey, style=dashed];
m3_42 -> m3_54  [color=darkseagreen4, key=1, label=newKey, style=dashed];
m3_65 -> m3_75  [color=darkseagreen4, key=1, label=folder, style=dashed];
m3_65 -> m3_83  [color=darkseagreen4, key=1, label=folder, style=dashed];
m3_71 -> m3_75  [color=darkseagreen4, key=1, label=childFolder, style=dashed];
m3_71 -> m3_82  [color=darkseagreen4, key=1, label=childFolder, style=dashed];
m3_78 -> m3_82  [color=darkseagreen4, key=1, label=file1, style=dashed];
m4_23 -> m4_25  [color=green, key=1, label="System.Type", style=dashed];
m4_23 -> m4_26  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_23 -> m4_27  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_23 -> m4_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_23 -> m4_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_25 -> m4_32  [color=green, key=1, label=t, style=dashed];
m4_31 -> m4_34  [color=darkseagreen4, key=1, label=dateText, style=dashed];
m4_31 -> m4_35  [color=darkseagreen4, key=1, label=dateText, style=dashed];
m4_31 -> m4_37  [color=darkseagreen4, key=1, label=dateText, style=dashed];
m4_31 -> m4_38  [color=darkseagreen4, key=1, label=dateText, style=dashed];
m4_49 -> m4_52  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_0 -> m4_2  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_0 -> m4_7  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_0 -> m4_12  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_0 -> m4_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m4_1 -> m4_13  [color=darkseagreen4, key=1, label=text, style=dashed];
m5_96 -> m5_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_96 -> m5_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_114 -> m5_114  [color=darkseagreen4, key=1, label="System.Guid", style=dashed];
m5_222 -> m5_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Formatting", style=dashed];
m5_215 -> m5_231  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_227 -> m5_231  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m5_228 -> m5_232  [color=darkseagreen4, key=1, label=sw, style=dashed];
m5_229 -> m5_231  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_256 -> m5_260  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_21 -> m5_21  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m5_19 -> m5_25  [color=darkseagreen4, key=1, label="System.DateTimeKind", style=dashed];
m5_84 -> m5_90  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_84 -> m5_91  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_285 -> m5_288  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_286 -> m5_288  [color=darkseagreen4, key=1, label=converter, style=dashed];
m5_266 -> m5_269  [color=darkseagreen4, key=1, label=deserializedValue, style=dashed];
m5_265 -> m5_267  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_23 -> m5_30  [color=darkseagreen4, key=1, label=javaScriptTicks, style=dashed];
m5_123 -> m5_161  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_123 -> m5_162  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_123 -> m5_163  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_13 -> m5_16  [color=green, key=1, label="System.DateTime", style=dashed];
m5_276 -> m5_278  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m6_85 -> m6_88  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_88 -> m6_91  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.JsonConverter", style=dashed];
m6_92 -> m6_95  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>", style=dashed];
m6_92 -> m6_97  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>", style=dashed];
m6_92 -> m6_99  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_39 -> m6_41  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_39 -> m6_43  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_80 -> m6_82  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.JsonConverter", style=dashed];
m6_10 -> m6_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m6_10 -> m6_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m6_10 -> m6_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m6_10 -> m6_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m6_10 -> m6_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m6_10 -> m6_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m6_11 -> m6_14  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m6_11 -> m6_28  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m6_57 -> m6_60  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_70 -> m6_73  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_96 -> m6_102  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_103 -> m6_105  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.JsonConverter", style=dashed];
m6_102 -> m6_102  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_53 -> m8_59  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m8_58 -> m8_60  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m8_58 -> m8_61  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m8_58 -> m8_62  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m8_58 -> m8_63  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m8_315 -> m8_317  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_38 -> m8_44  [color=darkseagreen4, key=1, label=dateValue, style=dashed];
m8_41 -> m8_46  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_41 -> m8_48  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_136 -> m8_139  [color=darkseagreen4, key=1, label=a1, style=dashed];
m8_137 -> m8_140  [color=darkseagreen4, key=1, label=a2, style=dashed];
m8_138 -> m8_140  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m8_138 -> m8_143  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m8_138 -> m8_144  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m8_142 -> m8_144  [color=darkseagreen4, key=1, label=articles2, style=dashed];
m8_840 -> m8_843  [color=darkseagreen4, key=1, label=content, style=dashed];
m8_840 -> m8_844  [color=darkseagreen4, key=1, label=content, style=dashed];
m8_842 -> m8_844  [color=green, key=1, label=o, style=dashed];
m8_842 -> m8_845  [color=green, key=1, label=o, style=dashed];
m8_842 -> m8_846  [color=green, key=1, label=o, style=dashed];
m8_842 -> m8_847  [color=green, key=1, label=o, style=dashed];
m8_842 -> m8_848  [color=green, key=1, label=o, style=dashed];
m8_842 -> m8_849  [color=green, key=1, label=o, style=dashed];
m8_842 -> m8_850  [color=green, key=1, label=o, style=dashed];
m8_842 -> m8_851  [color=green, key=1, label=o, style=dashed];
m8_848 -> m8_850  [color=darkseagreen4, key=1, label=r, style=dashed];
m8_848 -> m8_851  [color=darkseagreen4, key=1, label=r, style=dashed];
m8_230 -> m8_232  [color=darkseagreen4, key=1, label=values, style=dashed];
m8_230 -> m8_236  [color=darkseagreen4, key=1, label=values, style=dashed];
m8_541 -> m8_543  [color=darkseagreen4, key=1, label=myClass, style=dashed];
m8_631 -> m8_634  [color=darkseagreen4, key=1, label=defaultJson, style=dashed];
m8_632 -> m8_635  [color=darkseagreen4, key=1, label=isoJson, style=dashed];
m8_633 -> m8_636  [color=darkseagreen4, key=1, label=javascriptJson, style=dashed];
m8_810 -> m8_812  [color=darkseagreen4, key=1, label=uri, style=dashed];
m8_810 -> m8_814  [color=darkseagreen4, key=1, label=uri, style=dashed];
m8_76 -> m8_78  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_865 -> m8_868  [color=green, key=1, label=p1, style=dashed];
m8_866 -> m8_869  [color=green, key=1, label=p2, style=dashed];
m8_867 -> m8_869  [color=green, key=1, label=products, style=dashed];
m8_97 -> m8_99  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_358 -> m8_362  [color=darkseagreen4, key=1, label=guid, style=dashed];
m8_203 -> m8_207  [color=darkseagreen4, key=1, label=testDates, style=dashed];
m8_205 -> m8_207  [color=darkseagreen4, key=1, label=ms, style=dashed];
m8_205 -> m8_208  [color=darkseagreen4, key=1, label=ms, style=dashed];
m8_210 -> m8_212  [color=darkseagreen4, key=1, label=expected, style=dashed];
m8_527 -> m8_529  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m8_527 -> m8_530  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m8_527 -> m8_531  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m8_527 -> m8_532  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m8_527 -> m8_533  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m8_527 -> m8_534  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m8_150 -> m8_153  [color=darkseagreen4, key=1, label=r1, style=dashed];
m8_587 -> m8_596  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_588 -> m8_590  [color=darkseagreen4, key=1, label=aa, style=dashed];
m8_588 -> m8_591  [color=darkseagreen4, key=1, label=aa, style=dashed];
m8_588 -> m8_592  [color=darkseagreen4, key=1, label=aa, style=dashed];
m8_588 -> m8_593  [color=darkseagreen4, key=1, label=aa, style=dashed];
m8_588 -> m8_594  [color=darkseagreen4, key=1, label=aa, style=dashed];
m8_875 -> m8_879  [color=green, key=1, label=products, style=dashed];
m8_875 -> m8_880  [color=green, key=1, label=products, style=dashed];
m8_269 -> m8_273  [color=darkseagreen4, key=1, label=s1, style=dashed];
m8_269 -> m8_280  [color=darkseagreen4, key=1, label=s1, style=dashed];
m8_270 -> m8_273  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m8_277 -> m8_280  [color=darkseagreen4, key=1, label=s3, style=dashed];
m8_272 -> m8_274  [color=darkseagreen4, key=1, label=sw, style=dashed];
m8_243 -> m8_245  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m8_243 -> m8_246  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m8_243 -> m8_247  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m8_243 -> m8_248  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m8_243 -> m8_249  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m8_243 -> m8_250  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m8_568 -> m8_570  [color=darkseagreen4, key=1, label=c2, style=dashed];
m8_31 -> m8_33  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_31 -> m8_34  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_19 -> m8_21  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m8_19 -> m8_22  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m8_19 -> m8_23  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m8_19 -> m8_24  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m8_19 -> m8_25  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m8_179 -> m8_181  [color=darkseagreen4, key=1, label=deserializedProductShort, style=dashed];
m8_179 -> m8_182  [color=darkseagreen4, key=1, label=deserializedProductShort, style=dashed];
m8_179 -> m8_183  [color=darkseagreen4, key=1, label=deserializedProductShort, style=dashed];
m8_179 -> m8_184  [color=darkseagreen4, key=1, label=deserializedProductShort, style=dashed];
m8_293 -> m8_295  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_293 -> m8_296  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_293 -> m8_297  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_293 -> m8_298  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_293 -> m8_299  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_775 -> m8_777  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_775 -> m8_778  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_775 -> m8_779  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_775 -> m8_780  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_775 -> m8_781  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_775 -> m8_782  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_775 -> m8_783  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_775 -> m8_784  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_775 -> m8_785  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_768 -> m8_770  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_768 -> m8_771  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_790 -> m8_770  [color=green, key=1, label=deserializedProduct, style=dashed];
m8_790 -> m8_793  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m8_790 -> m8_794  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m8_790 -> m8_795  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m8_790 -> m8_796  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m8_713 -> m8_715  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m8_713 -> m8_716  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m8_617 -> m8_623  [color=darkseagreen4, key=1, label=person, style=dashed];
m8_341 -> m8_343  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_341 -> m8_344  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_641 -> m8_649  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_641 -> m8_650  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_641 -> m8_651  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_647 -> m8_649  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m8_647 -> m8_650  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m8_647 -> m8_651  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m8_388 -> m8_391  [color=darkseagreen4, key=1, label=name, style=dashed];
m8_388 -> m8_392  [color=darkseagreen4, key=1, label=name, style=dashed];
m8_389 -> m8_391  [color=darkseagreen4, key=1, label=p1, style=dashed];
m8_390 -> m8_392  [color=darkseagreen4, key=1, label=p2, style=dashed];
m8_395 -> m8_397  [color=darkseagreen4, key=1, label=newName, style=dashed];
m8_395 -> m8_398  [color=darkseagreen4, key=1, label=newName, style=dashed];
m8_395 -> m8_399  [color=darkseagreen4, key=1, label=newName, style=dashed];
m8_321 -> m8_323  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_321 -> m8_324  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_321 -> m8_325  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_327 -> m8_329  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m8_327 -> m8_330  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m8_327 -> m8_331  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m8_327 -> m8_332  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m8_327 -> m8_333  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m8_327 -> m8_334  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m8_254 -> m8_258  [color=darkseagreen4, key=1, label=collection, style=dashed];
m8_254 -> m8_261  [color=darkseagreen4, key=1, label=collection, style=dashed];
m8_255 -> m8_258  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m8_257 -> m8_259  [color=darkseagreen4, key=1, label=sw, style=dashed];
m8_375 -> m8_377  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_518 -> m8_520  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m8_518 -> m8_521  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m8_432 -> m8_437  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m8_432 -> m8_438  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m8_436 -> m8_438  [color=darkseagreen4, key=1, label=m2, style=dashed];
m8_801 -> m8_803  [color=darkseagreen4, key=1, label=s, style=dashed];
m8_801 -> m8_804  [color=darkseagreen4, key=1, label=s, style=dashed];
m8_801 -> m8_805  [color=darkseagreen4, key=1, label=s, style=dashed];
m8_658 -> m8_660  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_658 -> m8_661  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_658 -> m8_662  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_658 -> m8_663  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_856 -> m8_858  [color=green, key=1, label=values, style=dashed];
m8_856 -> m8_859  [color=green, key=1, label=values, style=dashed];
m8_856 -> m8_860  [color=green, key=1, label=values, style=dashed];
m8_856 -> m8_861  [color=green, key=1, label=values, style=dashed];
m8_856 -> m8_728  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m8_858 -> m8_826  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonSerializerTest.Content", style=dashed];
m8_858 -> m8_830  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonSerializerTest.Content", style=dashed];
m8_303 -> m8_305  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_303 -> m8_306  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_303 -> m8_307  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_303 -> m8_308  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_303 -> m8_309  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_193 -> m8_196  [color=darkseagreen4, key=1, label=dataContractResult, style=dashed];
m8_194 -> m8_196  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m8_833 -> m8_838  [color=green, key=1, label=o, style=dashed];
m8_833 -> m8_835  [color=green, key=1, label=o, style=dashed];
m8_833 -> m8_836  [color=green, key=1, label=o, style=dashed];
m8_348 -> m8_350  [color=darkseagreen4, key=1, label=s, style=dashed];
m8_348 -> m8_351  [color=darkseagreen4, key=1, label=s, style=dashed];
m8_443 -> m8_448  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m8_443 -> m8_449  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m8_447 -> m8_449  [color=darkseagreen4, key=1, label=m2, style=dashed];
m8_1 -> m8_4  [color=darkseagreen4, key=1, label=store, style=dashed];
m8_2 -> m8_5  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_407 -> m8_409  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m8_407 -> m8_410  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m8_699 -> m8_701  [color=darkseagreen4, key=1, label=n, style=dashed];
m8_699 -> m8_702  [color=darkseagreen4, key=1, label=n, style=dashed];
m8_699 -> m8_703  [color=darkseagreen4, key=1, label=n, style=dashed];
m8_699 -> m8_704  [color=darkseagreen4, key=1, label=n, style=dashed];
m8_620 -> m8_623  [color=darkseagreen4, key=1, label=jw, style=dashed];
m8_466 -> m8_468  [color=darkseagreen4, key=1, label=c2, style=dashed];
m8_382 -> m8_384  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_382 -> m8_385  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_121 -> m8_127  [color=darkseagreen4, key=1, label=test, style=dashed];
m8_121 -> m8_128  [color=darkseagreen4, key=1, label=test, style=dashed];
m8_126 -> m8_128  [color=darkseagreen4, key=1, label=test2, style=dashed];
m8_82 -> m8_84  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_27 -> m9_72  [color=darkseagreen4, key=1, label="System.Reflection.ICustomAttributeProvider", style=dashed];
m9_66 -> m9_68  [color=darkseagreen4, key=1, label=type, style=dashed];
m9_69 -> m9_71  [color=darkseagreen4, key=1, label=memberInfo, style=dashed];
m9_50 -> m9_54  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m9_56 -> m9_62  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m9_51 -> m9_53  [color=darkseagreen4, key=1, label=metadataType, style=dashed];
m9_59 -> m9_61  [color=darkseagreen4, key=1, label=metadataTypeMemberInfo, style=dashed];
m9_28 -> m9_32  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m9_28 -> m9_33  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m9_31 -> m9_33  [color=darkseagreen4, key=1, label=memberConverter, style=dashed];
m9_31 -> m9_34  [color=darkseagreen4, key=1, label=memberConverter, style=dashed];
m9_11 -> m9_17  [color=darkseagreen4, key=1, label=objectAttribute, style=dashed];
m10_4 -> m10_9  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_4 -> m10_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_60 -> m10_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_60 -> m10_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_60 -> m10_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_60 -> m10_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_63 -> m10_66  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_67 -> m10_69  [color=darkseagreen4, key=1, label=currentNodeType, style=dashed];
m10_67 -> m10_70  [color=darkseagreen4, key=1, label=currentNodeType, style=dashed];
m10_149 -> m10_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_190 -> m10_274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaType", style=dashed];
m10_155 -> m10_186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_155 -> m10_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_153 -> m10_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_153 -> m10_201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_153 -> m10_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_153 -> m10_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_153 -> m10_205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_153 -> m10_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_153 -> m10_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_153 -> m10_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_153 -> m10_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_208 -> m10_210  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m10_202 -> m10_204  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_202 -> m10_205  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_202 -> m10_206  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_202 -> m10_209  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_202 -> m10_210  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_45 -> m10_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaException", style=dashed];
m10_45 -> m10_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaException", style=dashed];
m10_46 -> m10_48  [color=darkseagreen4, key=1, label=handler, style=dashed];
m10_38 -> m10_40  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m10_148 -> m10_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_151 -> m10_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_151 -> m10_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_151 -> m10_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_151 -> m10_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_151 -> m10_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_151 -> m10_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_219 -> m10_221  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_219 -> m10_222  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_219 -> m10_223  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_150 -> m10_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_150 -> m10_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_150 -> m10_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_152 -> m10_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_152 -> m10_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_152 -> m10_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_152 -> m10_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_152 -> m10_239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_152 -> m10_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_152 -> m10_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_152 -> m10_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_154 -> m10_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_154 -> m10_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_156 -> m10_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_157 -> m10_179  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_157 -> m10_180  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_157 -> m10_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_157 -> m10_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModel", style=dashed];
m10_31 -> m10_33  [color=darkseagreen4, key=1, label=poppedScope, style=dashed];
m10_236 -> m10_238  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_236 -> m10_239  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_236 -> m10_240  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_236 -> m10_241  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_236 -> m10_242  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_253 -> m10_262  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_249 -> m10_252  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m10_249 -> m10_254  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m10_249 -> m10_255  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m10_178 -> m10_180  [color=darkseagreen4, key=1, label=arrayItemCount, style=dashed];
m10_178 -> m10_181  [color=darkseagreen4, key=1, label=arrayItemCount, style=dashed];
m10_178 -> m10_182  [color=darkseagreen4, key=1, label=arrayItemCount, style=dashed];
m10_15 -> m10_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_15 -> m10_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_161 -> m10_163  [color=darkseagreen4, key=1, label=requiredProperties, style=dashed];
m10_163 -> m10_165  [color=darkseagreen4, key=1, label=unmatchedRequiredProperties, style=dashed];
m10_163 -> m10_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_163 -> m10_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_20 -> m10_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Schema.JsonSchemaModel>", style=dashed];
m10_171 -> m10_171  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, bool>", style=dashed];
m10_263 -> m10_263  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Schema.JsonSchemaModel>", style=dashed];
m12_38 -> m12_40  [color=green, key=1, label=p, style=dashed];
m12_38 -> m12_41  [color=green, key=1, label=p, style=dashed];
m12_38 -> m12_42  [color=green, key=1, label=p, style=dashed];
m12_30 -> m12_32  [color=green, key=1, label=p, style=dashed];
m12_30 -> m12_33  [color=green, key=1, label=p, style=dashed];
m12_30 -> m12_34  [color=green, key=1, label=p, style=dashed];
m12_30 -> m12_35  [color=green, key=1, label=p, style=dashed];
m12_12 -> m12_20  [color=green, key=1, label=s, style=dashed];
m12_12 -> m12_21  [color=green, key=1, label=s, style=dashed];
m12_12 -> m12_22  [color=green, key=1, label=s, style=dashed];
m12_12 -> m12_23  [color=green, key=1, label=s, style=dashed];
m12_17 -> m12_20  [color=green, key=1, label=json, style=dashed];
m12_18 -> m12_20  [color=green, key=1, label=serializer, style=dashed];
m12_1 -> m12_3  [color=green, key=1, label=p, style=dashed];
m12_1 -> m12_4  [color=green, key=1, label=p, style=dashed];
m13_81 -> m13_83  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_81 -> m13_84  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_81 -> m13_85  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_81 -> m13_87  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_81 -> m13_88  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_81 -> m13_89  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_81 -> m13_90  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_91 -> m13_93  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_91 -> m13_94  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_91 -> m13_95  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_62 -> m13_64  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_62 -> m13_65  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_62 -> m13_66  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_62 -> m13_69  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_62 -> m13_70  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_62 -> m13_71  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_62 -> m13_72  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_73 -> m13_75  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_73 -> m13_76  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_73 -> m13_77  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_1 -> m13_3  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_1 -> m13_4  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_1 -> m13_5  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_1 -> m13_8  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_1 -> m13_9  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_1 -> m13_10  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_1 -> m13_11  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_12 -> m13_14  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_12 -> m13_15  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_12 -> m13_16  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_42 -> m13_44  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_42 -> m13_45  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_42 -> m13_46  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_42 -> m13_49  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_42 -> m13_50  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_42 -> m13_51  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_42 -> m13_52  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_53 -> m13_55  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_53 -> m13_56  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_53 -> m13_57  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_23 -> m13_25  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_23 -> m13_26  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_23 -> m13_27  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_23 -> m13_30  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_23 -> m13_31  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_23 -> m13_32  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_23 -> m13_33  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_34 -> m13_36  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_34 -> m13_37  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_34 -> m13_38  [color=darkseagreen4, key=1, label=obj, style=dashed];
m1_364 -> m1_153  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m1_365 -> m1_153  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_367 -> m1_243  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_369 -> m1_260  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_371 -> m1_279  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_88 -> m3_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.EntitiesSerializationTests", style=dashed];
m4_57 -> m4_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IsoDateTimeConverter", style=dashed];
m4_57 -> m4_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IsoDateTimeConverter", style=dashed];
m4_57 -> m4_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IsoDateTimeConverter", style=dashed];
m4_57 -> m4_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IsoDateTimeConverter", style=dashed];
m4_57 -> m4_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IsoDateTimeConverter", style=dashed];
m4_57 -> m4_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IsoDateTimeConverter", style=dashed];
m4_57 -> m4_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IsoDateTimeConverter", style=dashed];
m4_57 -> m4_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IsoDateTimeConverter", style=dashed];
m6_107 -> m6_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m6_107 -> m6_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m6_107 -> m6_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m6_107 -> m6_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m6_107 -> m6_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m6_107 -> m6_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m6_107 -> m6_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m6_107 -> m6_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m10_282 -> m10_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader.SchemaScope", style=dashed];
m10_283 -> m10_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_129  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_133  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_180  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
m10_283 -> m10_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonValidatingReader", style=dashed];
}
