digraph  {
n0 [cluster="Newtonsoft.Json.Tests.Serialization.LogManager.LogManager(System.DateTime)", file="DependencyInjectionTests.cs.dot", label="Entry Newtonsoft.Json.Tests.Serialization.LogManager.LogManager(System.DateTime)", span="80-80"];
n1 [cluster="Newtonsoft.Json.Tests.Serialization.LogManager.LogManager(System.DateTime)", file="DependencyInjectionTests.cs.dot", label="_dt = dt", span="82-82"];
n2 [cluster="Newtonsoft.Json.Tests.Serialization.LogManager.LogManager(System.DateTime)", file="DependencyInjectionTests.cs.dot", label="Exit Newtonsoft.Json.Tests.Serialization.LogManager.LogManager(System.DateTime)", span="80-80"];
n3 [cluster="Newtonsoft.Json.Tests.Serialization.TaskController.TaskController(Newtonsoft.Json.Tests.Serialization.ITaskRepository, Newtonsoft.Json.Tests.Serialization.ILogger)", file="DependencyInjectionTests.cs.dot", label="Entry Newtonsoft.Json.Tests.Serialization.TaskController.TaskController(Newtonsoft.Json.Tests.Serialization.ITaskRepository, Newtonsoft.Json.Tests.Serialization.ILogger)", span="98-98"];
n4 [cluster="Newtonsoft.Json.Tests.Serialization.TaskController.TaskController(Newtonsoft.Json.Tests.Serialization.ITaskRepository, Newtonsoft.Json.Tests.Serialization.ILogger)", file="DependencyInjectionTests.cs.dot", label="_repository = repository", span="100-100"];
n5 [cluster="Newtonsoft.Json.Tests.Serialization.TaskController.TaskController(Newtonsoft.Json.Tests.Serialization.ITaskRepository, Newtonsoft.Json.Tests.Serialization.ILogger)", file="DependencyInjectionTests.cs.dot", label="_logger = logger", span="101-101"];
n6 [cluster="Newtonsoft.Json.Tests.Serialization.TaskController.TaskController(Newtonsoft.Json.Tests.Serialization.ITaskRepository, Newtonsoft.Json.Tests.Serialization.ILogger)", file="DependencyInjectionTests.cs.dot", label="Exit Newtonsoft.Json.Tests.Serialization.TaskController.TaskController(Newtonsoft.Json.Tests.Serialization.ITaskRepository, Newtonsoft.Json.Tests.Serialization.ILogger)", span="98-98"];
n7 [cluster="Newtonsoft.Json.Tests.Serialization.HasSettableProperty.HasSettableProperty(Newtonsoft.Json.Tests.Serialization.ILogger)", file="DependencyInjectionTests.cs.dot", label="Entry Newtonsoft.Json.Tests.Serialization.HasSettableProperty.HasSettableProperty(Newtonsoft.Json.Tests.Serialization.ILogger)", span="122-122"];
n8 [cluster="Newtonsoft.Json.Tests.Serialization.HasSettableProperty.HasSettableProperty(Newtonsoft.Json.Tests.Serialization.ILogger)", file="DependencyInjectionTests.cs.dot", label="Logger = logger", span="124-124"];
n9 [cluster="Newtonsoft.Json.Tests.Serialization.HasSettableProperty.HasSettableProperty(Newtonsoft.Json.Tests.Serialization.ILogger)", file="DependencyInjectionTests.cs.dot", label="Exit Newtonsoft.Json.Tests.Serialization.HasSettableProperty.HasSettableProperty(Newtonsoft.Json.Tests.Serialization.ILogger)", span="122-122"];
n10 [cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.AutofacContractResolver(IContainer)", file="DependencyInjectionTests.cs.dot", label="Entry Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.AutofacContractResolver(IContainer)", span="132-132"];
n11 [cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.AutofacContractResolver(IContainer)", file="DependencyInjectionTests.cs.dot", label="_container = container", span="134-134"];
n12 [cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.AutofacContractResolver(IContainer)", file="DependencyInjectionTests.cs.dot", label="Exit Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.AutofacContractResolver(IContainer)", span="132-132"];
d10 [cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.AutofacContractResolver(IContainer)", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="Entry Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.AutofacContractResolver(IContainer)", prediction=0, span="132-132"];
d11 [cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.AutofacContractResolver(IContainer)", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="_container = container", prediction=1, span="134-134"];
d12 [cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.AutofacContractResolver(IContainer)", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="Exit Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.AutofacContractResolver(IContainer)", prediction=2, span="132-132"];
n13 [cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", file="DependencyInjectionTests.cs.dot", label="Entry Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", span="137-137"];
n15 [cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", file="DependencyInjectionTests.cs.dot", label="_container.IsRegistered(objectType)", span="142-142"];
n16 [cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", file="DependencyInjectionTests.cs.dot", label="contract.DefaultCreator = () => _container.Resolve(objectType)", span="144-144"];
n22 [cluster="lambda expression", file="DependencyInjectionTests.cs.dot", label="_container.Resolve(objectType)", span="144-144"];
n19 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DependencyInjectionTests.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="385-385"];
n18 [cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", file="DependencyInjectionTests.cs.dot", label="Exit Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", span="137-137"];
d13 [cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="Entry Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", prediction=3, span="137-137"];
d14 [cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="JsonObjectContract contract = base.CreateObjectContract(objectType)", prediction=4, span="139-139"];
d15 [cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="_container.IsRegistered(objectType)", prediction=3, span="142-142"];
d16 [cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="contract.DefaultCreator = () => _container.Resolve(objectType)", prediction=6, span="144-144"];
d22 [cluster="lambda expression", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="_container.Resolve(objectType)", prediction=3, span="144-144"];
d18 [cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="Exit Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", prediction=8, span="137-137"];
d17 [cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="return contract;", prediction=4, span="147-147"];
n21 [cluster="lambda expression", file="DependencyInjectionTests.cs.dot", label="Entry lambda expression", span="144-144"];
n23 [cluster="lambda expression", file="DependencyInjectionTests.cs.dot", label="Exit lambda expression", span="144-144"];
d23 [cluster="lambda expression", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="Exit lambda expression", prediction=10, span="144-144"];
d21 [cluster="lambda expression", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="Entry lambda expression", prediction=11, span="144-144"];
d76 [cluster="lambda expression", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="Entry lambda expression", prediction=12, span="196-200"];
n77 [cluster="lambda expression", file="DependencyInjectionTests.cs.dot", label="count++", span="198-198"];
d81 [cluster="lambda expression", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="Entry lambda expression", prediction=12, span="202-206"];
d82 [cluster="lambda expression", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="count++", prediction=12, span="204-204"];
d84 [cluster="lambda expression", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="Exit lambda expression", prediction=12, span="202-206"];
d83 [cluster="lambda expression", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="return new LogManager(new DateTime(2000, 12, 12));", prediction=16, span="205-205"];
d79 [cluster="lambda expression", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="Exit lambda expression", prediction=17, span="196-200"];
d78 [cluster="lambda expression", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="return new TaskRepository();", prediction=18, span="199-199"];
n80 [cluster="Newtonsoft.Json.Tests.Serialization.TaskRepository.TaskRepository()", file="DependencyInjectionTests.cs.dot", label="Entry Newtonsoft.Json.Tests.Serialization.TaskRepository.TaskRepository()", span="71-71"];
n48 [cluster="System.DateTime.DateTime(int, int, int)", file="DependencyInjectionTests.cs.dot", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
n25 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs.dot", label="Entry Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", span="155-155"];
n26 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs.dot", label="int count = 0", span="157-157"];
n27 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs.dot", label="ContainerBuilder builder = new ContainerBuilder()", span="159-159"];
n30 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs.dot", label="builder.Register(c =>\r\n            {\r\n                count++;\r\n                return new LogManager(new DateTime(2000, 12, \\n12));\r\n            }).As<ILogger>()", span="162-166"];
n28 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs.dot", label="builder.RegisterType<TaskRepository>().As<ITaskRepository>()", span="160-160"];
n29 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs.dot", label="builder.RegisterType<TaskController>()", span="161-161"];
n31 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs.dot", label="IContainer container = builder.Build()", span="168-168"];
n36 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs.dot", label="Assert.AreEqual(1, count)", span="184-184"];
d36 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="Assert.AreEqual(1, count)", prediction=19, span="184-184"];
n49 [cluster="lambda expression", file="DependencyInjectionTests.cs.dot", label="Entry lambda expression", span="162-166"];
n50 [cluster="lambda expression", file="DependencyInjectionTests.cs.dot", label="count++", span="164-164"];
n32 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs.dot", label="AutofacContractResolver contractResolver = new AutofacContractResolver(container)", span="170-170"];
n33 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs.dot", label="TaskController controller = JsonConvert.DeserializeObject<TaskController>(@''{\r\n                'Logger': {\r\n                    '\\nLevel':'Debug'\r\n                }\r\n            }'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = \\ncontractResolver\r\n            })", span="172-179"];
d33 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="TaskController controller = JsonConvert.DeserializeObject<TaskController>(@''{\r\n                'Logger': {\r\n                    '\\nLevel':'Debug'\r\n                }\r\n            }'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = \\ncontractResolver\r\n            })", prediction=20, span="172-179"];
n34 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs.dot", label="Assert.IsNotNull(controller)", span="181-181"];
n35 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs.dot", label="Assert.IsNotNull(controller.Logger)", span="182-182"];
n37 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs.dot", label="Assert.AreEqual(new DateTime(2000, 12, 12), controller.Logger.DateTime)", span="186-186"];
n38 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs.dot", label="Assert.AreEqual(''Debug'', controller.Logger.Level)", span="187-187"];
n44 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="DependencyInjectionTests.cs.dot", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="397-397"];
n45 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="DependencyInjectionTests.cs.dot", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="817-817"];
n39 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs.dot", label="Exit Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", span="155-155"];
d34 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="Assert.IsNotNull(controller)", prediction=21, span="181-181"];
d35 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="Assert.IsNotNull(controller.Logger)", prediction=20, span="182-182"];
d37 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="Assert.AreEqual(new DateTime(2000, 12, 12), controller.Logger.DateTime)", prediction=20, span="186-186"];
d38 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="Assert.AreEqual(''Debug'', controller.Logger.Level)", prediction=20, span="187-187"];
n51 [cluster="lambda expression", file="DependencyInjectionTests.cs.dot", label="return new LogManager(new DateTime(2000, 12, 12));", span="165-165"];
n52 [cluster="lambda expression", file="DependencyInjectionTests.cs.dot", label="Exit lambda expression", span="162-166"];
n53 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="Entry Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", span="191-191"];
n54 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="int count = 0", span="193-193"];
n55 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="ContainerBuilder builder = new ContainerBuilder()", span="195-195"];
n56 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="builder.Register(c =>\r\n            {\r\n                count++;\r\n                return new TaskRepository();\r\n            })\\n.As<ITaskRepository>()", span="196-200"];
d56 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="builder.Register(c =>\r\n            {\r\n                count++;\r\n                return new TaskRepository();\r\n            })\\n.As<ITaskRepository>()", prediction=12, span="196-200"];
n57 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="builder.RegisterType<HasSettableProperty>()", span="201-201"];
n58 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="builder.Register(c =>\r\n            {\r\n                count++;\r\n                return new LogManager(new DateTime(2000, 12, \\n12));\r\n            }).As<ILogger>()", span="202-206"];
n59 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="IContainer container = builder.Build()", span="208-208"];
d57 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="builder.RegisterType<HasSettableProperty>()", prediction=12, span="201-201"];
d58 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="builder.Register(c =>\r\n            {\r\n                count++;\r\n                return new LogManager(new DateTime(2000, 12, \\n12));\r\n            }).As<ILogger>()", prediction=12, span="202-206"];
d59 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="IContainer container = builder.Build()", prediction=28, span="208-208"];
n76 [cluster="lambda expression", file="DependencyInjectionTests.cs.dot", label="Entry lambda expression", span="196-200"];
n66 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="Assert.AreEqual(2, count)", span="241-241"];
n81 [cluster="lambda expression", file="DependencyInjectionTests.cs.dot", label="Entry lambda expression", span="202-206"];
n82 [cluster="lambda expression", file="DependencyInjectionTests.cs.dot", label="count++", span="204-204"];
n60 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="AutofacContractResolver contractResolver = new AutofacContractResolver(container)", span="210-210"];
n61 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="HasSettableProperty o = JsonConvert.DeserializeObject<HasSettableProperty>(@''{\r\n                'Logger': {\r\n                    '\\nLevel': 'Debug'\r\n                },\r\n                'Repository': {\r\n                    'ConnectionString': 'server=.',\r\n                    '\\nCreatedOn': '2015-04-01 20:00'\r\n                },\r\n                'People': [\r\n                    {\r\n                        '\\nName': 'Name1!'\r\n                    },\r\n                    {\r\n                        'Name': 'Name2!'\r\n                    }\r\n                ],\r\n                '\\nPerson': {\r\n                    'Name': 'Name3!'\r\n                }\r\n            }'', new JsonSerializerSettings\r\n            {\r\n                \\nContractResolver = contractResolver\r\n            })", span="212-234"];
n62 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="Assert.IsNotNull(o)", span="236-236"];
n63 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="Assert.IsNotNull(o.Logger)", span="237-237"];
n64 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="Assert.IsNotNull(o.Repository)", span="238-238"];
n65 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="Assert.AreEqual(o.Repository.CreatedOn, DateTime.Parse(''2015-04-01 20:00''))", span="239-239"];
n67 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="Assert.AreEqual(new DateTime(2000, 12, 12), o.Logger.DateTime)", span="243-243"];
n68 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="Assert.AreEqual(''Debug'', o.Logger.Level)", span="244-244"];
n69 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="Assert.AreEqual(''server=.'', o.Repository.ConnectionString)", span="245-245"];
n70 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="Assert.AreEqual(2, o.People.Count)", span="246-246"];
n71 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="Assert.AreEqual(''Name1!'', o.People[0].Name)", span="247-247"];
n72 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="Assert.AreEqual(''Name2!'', o.People[1].Name)", span="248-248"];
n73 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="Assert.AreEqual(''Name3!'', o.Person.Name)", span="249-249"];
n75 [cluster="System.DateTime.Parse(string)", file="DependencyInjectionTests.cs.dot", label="Entry System.DateTime.Parse(string)", span="0-0"];
n74 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs.dot", label="Exit Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", span="191-191"];
d74 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="Exit Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", prediction=29, span="191-191"];
d60 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="AutofacContractResolver contractResolver = new AutofacContractResolver(container)", prediction=30, span="210-210"];
d61 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="HasSettableProperty o = JsonConvert.DeserializeObject<HasSettableProperty>(@''{\r\n                'Logger': {\r\n                    '\\nLevel': 'Debug'\r\n                },\r\n                'Repository': {\r\n                    'ConnectionString': 'server=.',\r\n                    '\\nCreatedOn': '2015-04-01 20:00'\r\n                },\r\n                'People': [\r\n                    {\r\n                        '\\nName': 'Name1!'\r\n                    },\r\n                    {\r\n                        'Name': 'Name2!'\r\n                    }\r\n                ],\r\n                '\\nPerson': {\r\n                    'Name': 'Name3!'\r\n                }\r\n            }'', new JsonSerializerSettings\r\n            {\r\n                \\nContractResolver = contractResolver\r\n            })", prediction=31, span="212-234"];
d53 [cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", color=green, community=0, file="DependencyInjectionTests.cs.dot", label="Entry Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", prediction=32, span="191-191"];
n78 [cluster="lambda expression", file="DependencyInjectionTests.cs.dot", label="return new TaskRepository();", span="199-199"];
n79 [cluster="lambda expression", file="DependencyInjectionTests.cs.dot", label="Exit lambda expression", span="196-200"];
n83 [cluster="lambda expression", file="DependencyInjectionTests.cs.dot", label="return new LogManager(new DateTime(2000, 12, 12));", span="205-205"];
n84 [cluster="lambda expression", file="DependencyInjectionTests.cs.dot", label="Exit lambda expression", span="202-206"];
m0_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.CreateObjectContract(\\nSystem.Type)", file="DeserializeWithDependencyInjection.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.CreateObjectContract(\\nSystem.Type)", span="59-59"];
m0_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.CreateObjectContract(\\nSystem.Type)", file="DeserializeWithDependencyInjection.cs", label="_container.IsRegistered(objectType)", span="64-64"];
m0_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.CreateObjectContract(\\nSystem.Type)", file="DeserializeWithDependencyInjection.cs", label="contract.DefaultCreator = () => _container.Resolve(objectType)", span="66-66"];
m0_12 [cluster="lambda expression", file="DeserializeWithDependencyInjection.cs", label="_container.Resolve(objectType)", span="66-66"];
m0_9 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DeserializeWithDependencyInjection.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="385-385"];
m0_8 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.CreateObjectContract(\\nSystem.Type)", file="DeserializeWithDependencyInjection.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.CreateObjectContract(\\nSystem.Type)", span="59-59"];
m0_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.AutofacContractResolver(\\nIContainer)", file="DeserializeWithDependencyInjection.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.AutofacContractResolver(\\nIContainer)", span="54-54"];
m0_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.AutofacContractResolver(\\nIContainer)", file="DeserializeWithDependencyInjection.cs", label="_container = container", span="56-56"];
m0_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.AutofacContractResolver(\\nIContainer)", file="DeserializeWithDependencyInjection.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.AutofacContractResolver(\\nIContainer)", span="54-54"];
m0_15 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.TaskController.TaskController(Newtonsoft.Json.Tests.Serialization.ITaskRepository, \\nNewtonsoft.Json.Tests.Serialization.ILogger)", color=green, community=0, file="DeserializeWithDependencyInjection.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.TaskController.TaskController(Newtonsoft.Json.Tests.Serialization.ITaskRepository, \\nNewtonsoft.Json.Tests.Serialization.ILogger)", prediction=33, span="78-78"];
m0_16 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.TaskController.TaskController(Newtonsoft.Json.Tests.Serialization.ITaskRepository, \\nNewtonsoft.Json.Tests.Serialization.ILogger)", file="DeserializeWithDependencyInjection.cs", label="_repository = repository", span="80-80"];
m0_17 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.TaskController.TaskController(Newtonsoft.Json.Tests.Serialization.ITaskRepository, \\nNewtonsoft.Json.Tests.Serialization.ILogger)", file="DeserializeWithDependencyInjection.cs", label="_logger = logger", span="81-81"];
m0_18 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.TaskController.TaskController(Newtonsoft.Json.Tests.Serialization.ITaskRepository, \\nNewtonsoft.Json.Tests.Serialization.ILogger)", file="DeserializeWithDependencyInjection.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.TaskController.TaskController(Newtonsoft.Json.Tests.Serialization.ITaskRepository, \\nNewtonsoft.Json.Tests.Serialization.ILogger)", span="78-78"];
m0_19 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.Example()", file="DeserializeWithDependencyInjection.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.Example()", span="97-97"];
m0_20 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.Example()", file="DeserializeWithDependencyInjection.cs", label="ContainerBuilder builder = new ContainerBuilder()", span="100-100"];
m0_21 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.Example()", file="DeserializeWithDependencyInjection.cs", label="builder.RegisterType<TaskRepository>().As<ITaskRepository>()", span="101-101"];
m0_22 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.Example()", file="DeserializeWithDependencyInjection.cs", label="builder.RegisterType<TaskController>()", span="102-102"];
m0_23 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.Example()", file="DeserializeWithDependencyInjection.cs", label="builder.Register(c => new LogService(new DateTime(2000, 12, 12))).As<ILogger>()", span="103-103"];
m0_24 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.Example()", file="DeserializeWithDependencyInjection.cs", label="IContainer container = builder.Build()", span="105-105"];
m0_45 [cluster="lambda expression", file="DeserializeWithDependencyInjection.cs", label="Entry lambda expression", span="103-103"];
m0_25 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.Example()", file="DeserializeWithDependencyInjection.cs", label="AutofacContractResolver contractResolver = new AutofacContractResolver(container)", span="107-107"];
m0_26 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.Example()", file="DeserializeWithDependencyInjection.cs", label="string json = @''{\r\n              'Logger': {\r\n                'Level':'Debug'\r\n              }\r\n            }''", span="109-113"];
m0_27 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.Example()", file="DeserializeWithDependencyInjection.cs", label="TaskController controller = JsonConvert.DeserializeObject<TaskController>(json, new JsonSerializerSettings\r\n            {\r\n                \\nContractResolver = contractResolver\r\n            })", span="116-119"];
m0_39 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="DeserializeWithDependencyInjection.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="817-817"];
m0_38 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="DeserializeWithDependencyInjection.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="397-397"];
m0_28 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.Example()", file="DeserializeWithDependencyInjection.cs", label="Console.WriteLine(controller.Repository.GetType().Name)", span="121-121"];
m0_29 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.Example()", file="DeserializeWithDependencyInjection.cs", label="Assert.IsNotNull(controller)", span="125-125"];
m0_30 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.Example()", file="DeserializeWithDependencyInjection.cs", label="Assert.IsNotNull(controller.Logger)", span="126-126"];
m0_31 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.Example()", file="DeserializeWithDependencyInjection.cs", label="Assert.AreEqual(new DateTime(2000, 12, 12), controller.Logger.DateTime)", span="128-128"];
m0_32 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.Example()", file="DeserializeWithDependencyInjection.cs", label="Assert.AreEqual(''Debug'', controller.Logger.Level)", span="129-129"];
m0_41 [cluster="System.Console.WriteLine(string)", file="DeserializeWithDependencyInjection.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m0_40 [cluster="object.GetType()", file="DeserializeWithDependencyInjection.cs", label="Entry object.GetType()", span="0-0"];
m0_33 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.Example()", file="DeserializeWithDependencyInjection.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.Example()", span="97-97"];
m0_11 [cluster="lambda expression", color=green, community=0, file="DeserializeWithDependencyInjection.cs", label="Entry lambda expression", prediction=34, span="66-66"];
m0_13 [cluster="lambda expression", file="DeserializeWithDependencyInjection.cs", label="Exit lambda expression", span="66-66"];
m0_46 [cluster="lambda expression", file="DeserializeWithDependencyInjection.cs", label="new LogService(new DateTime(2000, 12, 12))", span="103-103"];
m0_48 [cluster="Newtonsoft.Json.Tests.Serialization.LogManager.LogManager(System.DateTime)", color=green, community=0, file="DeserializeWithDependencyInjection.cs", label="Entry Newtonsoft.Json.Tests.Serialization.LogManager.LogManager(System.DateTime)", prediction=35, span="80-80"];
m0_47 [cluster="lambda expression", file="DeserializeWithDependencyInjection.cs", label="Exit lambda expression", span="103-103"];
n20;
n24;
n40;
n41;
n42;
n43;
n47;
n46;
n85;
n86;
n87;
n88;
n89;
n90;
n91;
m0_10;
m0_14;
m0_34;
m0_35;
m0_36;
m0_37;
m0_42;
m0_44;
m0_49;
m0_50;
m0_51;
n13 -> n15  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n13 -> n22  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d13 -> d15  [color=green, key=1, label="System.Type", style=dashed];
d13 -> d22  [color=green, key=1, label="System.Type", style=dashed];
d14 -> d17  [color=green, key=1, label=contract, style=dashed];
n77 -> d79  [color=green, key=1, label=count, style=dashed];
n77 -> n77  [color=darkseagreen4, key=1, label=count, style=dashed];
n77 -> n79  [color=darkseagreen4, key=1, label=count, style=dashed];
d82 -> d82  [color=green, key=1, label=count, style=dashed];
d82 -> d84  [color=green, key=1, label=count, style=dashed];
n26 -> n30  [color=darkseagreen4, key=1, label=count, style=dashed];
n27 -> n29  [color=darkseagreen4, key=1, label=builder, style=dashed];
n27 -> n30  [color=darkseagreen4, key=1, label=builder, style=dashed];
n30 -> n30  [color=darkseagreen4, key=1, label=count, style=dashed];
n30 -> n36  [color=darkseagreen4, key=1, label=count, style=dashed];
n30 -> d36  [color=green, key=1, label=count, style=dashed];
n30 -> n49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n30 -> n50  [color=darkseagreen4, key=1, label=count, style=dashed];
n50 -> n50  [color=darkseagreen4, key=1, label=count, style=dashed];
n50 -> n52  [color=darkseagreen4, key=1, label=count, style=dashed];
n33 -> n35  [color=darkseagreen4, key=1, label=controller, style=dashed];
n33 -> n37  [color=darkseagreen4, key=1, label=controller, style=dashed];
n33 -> n38  [color=darkseagreen4, key=1, label=controller, style=dashed];
d33 -> d35  [color=green, key=1, label=controller, style=dashed];
d33 -> d37  [color=green, key=1, label=controller, style=dashed];
d33 -> d38  [color=green, key=1, label=controller, style=dashed];
n54 -> n56  [color=darkseagreen4, key=1, label=count, style=dashed];
n54 -> d56  [color=green, key=1, label=count, style=dashed];
n55 -> n57  [color=darkseagreen4, key=1, label=builder, style=dashed];
n55 -> n58  [color=darkseagreen4, key=1, label=builder, style=dashed];
n55 -> d57  [color=green, key=1, label=builder, style=dashed];
n55 -> d58  [color=green, key=1, label=builder, style=dashed];
n56 -> n56  [color=darkseagreen4, key=1, label=count, style=dashed];
n56 -> n58  [color=darkseagreen4, key=1, label=count, style=dashed];
n56 -> n76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n56 -> n77  [color=darkseagreen4, key=1, label=count, style=dashed];
d56 -> d76  [color=green, key=1, label="lambda expression", style=dashed];
d56 -> d56  [color=green, key=1, label=count, style=dashed];
d56 -> d58  [color=green, key=1, label=count, style=dashed];
d56 -> n77  [color=green, key=1, label=count, style=dashed];
n58 -> n58  [color=darkseagreen4, key=1, label=count, style=dashed];
n58 -> n66  [color=darkseagreen4, key=1, label=count, style=dashed];
n58 -> n81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n58 -> n82  [color=darkseagreen4, key=1, label=count, style=dashed];
d58 -> d81  [color=green, key=1, label="lambda expression", style=dashed];
d58 -> d82  [color=green, key=1, label=count, style=dashed];
d58 -> n66  [color=green, key=1, label=count, style=dashed];
d58 -> d58  [color=green, key=1, label=count, style=dashed];
n82 -> n82  [color=darkseagreen4, key=1, label=count, style=dashed];
n82 -> n84  [color=darkseagreen4, key=1, label=count, style=dashed];
n61 -> n63  [color=darkseagreen4, key=1, label=o, style=dashed];
n61 -> n64  [color=darkseagreen4, key=1, label=o, style=dashed];
n61 -> n65  [color=darkseagreen4, key=1, label=o, style=dashed];
n61 -> n67  [color=darkseagreen4, key=1, label=o, style=dashed];
n61 -> n68  [color=darkseagreen4, key=1, label=o, style=dashed];
n61 -> n69  [color=darkseagreen4, key=1, label=o, style=dashed];
n61 -> n70  [color=darkseagreen4, key=1, label=o, style=dashed];
n61 -> n71  [color=darkseagreen4, key=1, label=o, style=dashed];
n61 -> n72  [color=darkseagreen4, key=1, label=o, style=dashed];
n61 -> n73  [color=darkseagreen4, key=1, label=o, style=dashed];
d61 -> n63  [color=green, key=1, label=o, style=dashed];
d61 -> n64  [color=green, key=1, label=o, style=dashed];
d61 -> n65  [color=green, key=1, label=o, style=dashed];
d61 -> n67  [color=green, key=1, label=o, style=dashed];
d61 -> n68  [color=green, key=1, label=o, style=dashed];
d61 -> n69  [color=green, key=1, label=o, style=dashed];
d61 -> n70  [color=green, key=1, label=o, style=dashed];
d61 -> n71  [color=green, key=1, label=o, style=dashed];
d61 -> n72  [color=green, key=1, label=o, style=dashed];
d61 -> n73  [color=green, key=1, label=o, style=dashed];
m0_3 -> m0_5  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_3 -> m0_12  [color=green, key=1, label="System.Type", style=dashed];
m0_20 -> m0_22  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_20 -> m0_23  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_23 -> m0_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_27 -> m0_29  [color=darkseagreen4, key=1, label=controller, style=dashed];
m0_27 -> m0_30  [color=darkseagreen4, key=1, label=controller, style=dashed];
m0_27 -> m0_31  [color=darkseagreen4, key=1, label=controller, style=dashed];
m0_27 -> m0_32  [color=darkseagreen4, key=1, label=controller, style=dashed];
n88 -> n15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver", style=dashed];
n88 -> d15  [color=green, key=1, label="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver", style=dashed];
n88 -> n22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver", style=dashed];
n88 -> d22  [color=green, key=1, label="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver", style=dashed];
n89 -> n22  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n89 -> d22  [color=green, key=1, label="System.Type", style=dashed];
n90 -> n50  [color=darkseagreen4, key=1, label=count, style=dashed];
n91 -> d82  [color=green, key=1, label=count, style=dashed];
n91 -> n77  [color=darkseagreen4, key=1, label=count, style=dashed];
n91 -> n82  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_49 -> m0_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver", style=dashed];
m0_49 -> m0_12  [color=green, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver", style=dashed];
m0_50 -> m0_12  [color=green, key=1, label="System.Type", style=dashed];
}
