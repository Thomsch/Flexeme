digraph  {
n241 [label="System.Collections.Generic.IList<T>", span=""];
n242 [label=bool, span=""];
n0 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CastValid<T>(System.Collections.IEnumerable)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CastValid<T>(System.Collections.IEnumerable)", span="37-37"];
n1 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CastValid<T>(System.Collections.IEnumerable)", label="ValidationUtils.ArgumentNotNull(enumerable, ''enumerable'')", span="39-39"];
n2 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CastValid<T>(System.Collections.IEnumerable)", label="return enumerable.Cast<object>().Where(o => o is T).Cast<T>();", span="41-41"];
n4 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="93-93"];
n3 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CastValid<T>(System.Collections.IEnumerable)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CastValid<T>(System.Collections.IEnumerable)", span="37-37"];
n5 [cluster="System.Collections.IEnumerable.Cast<TResult>()", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
n6 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
n7 [cluster="Unk.>", label="Entry Unk.>", span=""];
n8 [cluster="lambda expression", label="Entry lambda expression", span="41-41"];
n9 [cluster="lambda expression", label="o is T", span="41-41"];
n10 [cluster="lambda expression", label="Exit lambda expression", span="41-41"];
n11 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(params T[])", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(params T[])", span="44-44"];
n12 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(params T[])", label="return new List<T>(values);", span="46-46"];
n13 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(params T[])", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(params T[])", span="44-44"];
n14 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
n15 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty(System.Collections.ICollection)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty(System.Collections.ICollection)", span="56-56"];
n16 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty(System.Collections.ICollection)", label="collection != null", span="58-58"];
n17 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty(System.Collections.ICollection)", label="return (collection.Count == 0);", span="60-60"];
n18 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty(System.Collections.ICollection)", label="return true;", span="62-62"];
n19 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty(System.Collections.ICollection)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty(System.Collections.ICollection)", span="56-56"];
n20 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="72-72"];
n21 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", label="collection != null", span="74-74"];
n22 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", label="return (collection.Count == 0);", span="76-76"];
n23 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", label="return true;", span="78-78"];
n24 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="72-72"];
n25 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmptyOrDefault<T>(System.Collections.Generic.IList<T>)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmptyOrDefault<T>(System.Collections.Generic.IList<T>)", span="88-88"];
n26 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmptyOrDefault<T>(System.Collections.Generic.IList<T>)", label="IsNullOrEmpty<T>(list)", span="90-90"];
n28 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmptyOrDefault<T>(System.Collections.Generic.IList<T>)", label="return ReflectionUtils.ItemsUnitializedValue<T>(list);", span="93-93"];
n27 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmptyOrDefault<T>(System.Collections.Generic.IList<T>)", label="return true;", span="91-91"];
n29 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmptyOrDefault<T>(System.Collections.Generic.IList<T>)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmptyOrDefault<T>(System.Collections.Generic.IList<T>)", span="88-88"];
n30 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", span="262-262"];
n31 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?)", span="103-103"];
n32 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?)", label="return Slice<T>(list, start, end, null);", span="105-105"];
n33 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?)", span="103-103"];
n34 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", span="117-117"];
n35 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", label="list == null", span="119-119"];
n37 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", label="step == 0", span="122-122"];
n40 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", label="list.Count == 0", span="128-128"];
n42 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", label="int s = step ?? 1", span="132-132"];
n43 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", label="int startIndex = start ?? 0", span="133-133"];
n44 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", label="int endIndex = end ?? list.Count", span="134-134"];
n45 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", label="startIndex = (startIndex < 0) ? list.Count + startIndex : startIndex", span="137-137"];
n46 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", label="endIndex = (endIndex < 0) ? list.Count + endIndex : endIndex", span="140-140"];
n48 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", label="endIndex = Math.Min(endIndex, list.Count - 1)", span="144-144"];
n51 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", label="slicedList.Add(list[i])", span="149-149"];
n36 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", label="throw new ArgumentNullException(''list'');", span="120-120"];
n38 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", label="throw new ArgumentException(''Step cannot be zero.'', ''step'');", span="123-123"];
n39 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", label="List<T> slicedList = new List<T>()", span="125-125"];
n57 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n41 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", label="return slicedList;", span="129-129"];
n53 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", label="return slicedList;", span="152-152"];
n52 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", label="i += s", span="147-147"];
n47 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", label="startIndex = Math.Max(startIndex, 0)", span="143-143"];
n58 [cluster="System.Math.Max(int, int)", label="Entry System.Math.Max(int, int)", span="0-0"];
n49 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", label="int i = startIndex", span="147-147"];
n59 [cluster="System.Math.Min(int, int)", label="Entry System.Math.Min(int, int)", span="0-0"];
n50 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", label="i < endIndex", span="147-147"];
n60 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n54 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.Slice<T>(System.Collections.Generic.IList<T>, int?, int?, int?)", span="117-117"];
n56 [cluster="System.ArgumentException.ArgumentException(string, string)", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
n55 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n61 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, Newtonsoft.Json.Utilities.Func<V, K>)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, Newtonsoft.Json.Utilities.Func<V, K>)", span="162-162"];
n62 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, Newtonsoft.Json.Utilities.Func<V, K>)", label="keySelector == null", span="164-164"];
n65 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, Newtonsoft.Json.Utilities.Func<V, K>)", label=source, span="169-169"];
n66 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, Newtonsoft.Json.Utilities.Func<V, K>)", label="K key = keySelector(value)", span="172-172"];
n63 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, Newtonsoft.Json.Utilities.Func<V, K>)", label="throw new ArgumentNullException(''keySelector'');", span="165-165"];
n64 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, Newtonsoft.Json.Utilities.Func<V, K>)", label="Dictionary<K, List<V>> groupedValues = new Dictionary<K, List<V>>()", span="167-167"];
n74 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n68 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, Newtonsoft.Json.Utilities.Func<V, K>)", label="!groupedValues.TryGetValue(key, out groupedValueList)", span="176-176"];
n70 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, Newtonsoft.Json.Utilities.Func<V, K>)", label="groupedValues.Add(key, groupedValueList)", span="179-179"];
n72 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, Newtonsoft.Json.Utilities.Func<V, K>)", label="return groupedValues;", span="185-185"];
n71 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, Newtonsoft.Json.Utilities.Func<V, K>)", label="groupedValueList.Add(value)", span="182-182"];
n67 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, Newtonsoft.Json.Utilities.Func<V, K>)", label="List<V> groupedValueList", span="173-173"];
n75 [cluster="Newtonsoft.Json.Utilities.Func<A0, T>.Invoke(A0)", label="Entry Newtonsoft.Json.Utilities.Func<A0, T>.Invoke(A0)", span="11-11"];
n69 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, Newtonsoft.Json.Utilities.Func<V, K>)", label="groupedValueList = new List<V>()", span="178-178"];
n76 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
n77 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
n73 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, Newtonsoft.Json.Utilities.Func<V, K>)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.GroupBy<K, V>(System.Collections.Generic.ICollection<V>, Newtonsoft.Json.Utilities.Func<V, K>)", span="162-162"];
n78 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", span="193-193"];
n79 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", label="initial == null", span="195-195"];
n81 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", label="collection == null", span="198-198"];
n83 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", label=collection, span="201-201"];
n84 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", label="initial.Add(value)", span="203-203"];
n80 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", label="throw new ArgumentNullException(''initial'');", span="196-196"];
n82 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", label="return;", span="199-199"];
n85 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", span="193-193"];
n86 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
n87 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Distinct<T>(System.Collections.Generic.List<T>)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.Distinct<T>(System.Collections.Generic.List<T>)", span="207-207"];
n88 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Distinct<T>(System.Collections.Generic.List<T>)", label="List<T> distinctList = new List<T>()", span="209-209"];
n89 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Distinct<T>(System.Collections.Generic.List<T>)", label=collection, span="211-211"];
n90 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Distinct<T>(System.Collections.Generic.List<T>)", label="!distinctList.Contains(value)", span="213-213"];
n91 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Distinct<T>(System.Collections.Generic.List<T>)", label="distinctList.Add(value)", span="214-214"];
n92 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Distinct<T>(System.Collections.Generic.List<T>)", label="return distinctList;", span="217-217"];
n94 [cluster="System.Collections.Generic.List<T>.Contains(T)", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
n93 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Distinct<T>(System.Collections.Generic.List<T>)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.Distinct<T>(System.Collections.Generic.List<T>)", span="207-207"];
n95 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Flatten<T>(params System.Collections.Generic.IList<T>[])", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.Flatten<T>(params System.Collections.Generic.IList<T>[])", span="220-220"];
n96 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Flatten<T>(params System.Collections.Generic.IList<T>[])", label="List<List<T>> flattened = new List<List<T>>()", span="222-222"];
n98 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Flatten<T>(params System.Collections.Generic.IList<T>[])", label="Recurse<T>(new List<IList<T>>(lists), 0, currentList, flattened)", span="225-225"];
n97 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Flatten<T>(params System.Collections.Generic.IList<T>[])", label="Dictionary<int, T> currentList = new Dictionary<int, T>()", span="223-223"];
n99 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Flatten<T>(params System.Collections.Generic.IList<T>[])", label="return flattened;", span="227-227"];
n101 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, System.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, System.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", span="230-230"];
n100 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Flatten<T>(params System.Collections.Generic.IList<T>[])", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.Flatten<T>(params System.Collections.Generic.IList<T>[])", span="220-220"];
n102 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, System.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", label="IList<T> currentArray = global[current]", span="232-232"];
n105 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, System.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", label="currentSet[current] = currentArray[i]", span="236-236"];
n106 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, System.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", label="current == global.Count - 1", span="238-238"];
n109 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, System.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", label="k < currentSet.Count", span="242-242"];
n110 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, System.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", label="items.Add(currentSet[k])", span="244-244"];
n112 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, System.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", label="flattenedResult.Add(items)", span="247-247"];
n113 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, System.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", label="Recurse(global, current + 1, currentSet, flattenedResult)", span="251-251"];
n103 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, System.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", label="int i = 0", span="234-234"];
n104 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, System.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", label="i < currentArray.Count", span="234-234"];
n114 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, System.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", label="i++", span="234-234"];
n115 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, System.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, System.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", span="230-230"];
n107 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, System.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", label="List<T> items = new List<T>()", span="240-240"];
n108 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, System.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", label="int k = 0", span="242-242"];
n111 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Recurse<T>(System.Collections.Generic.IList<System.Collections.Generic.IList<T>>, int, System.Collections.Generic.Dictionary<int, T>, System.Collections.Generic.List<System.Collections.Generic.List<T>>)", label="k++", span="242-242"];
n116 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(System.Collections.ICollection)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(System.Collections.ICollection)", span="256-256"];
n117 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(System.Collections.ICollection)", label="collection == null", span="258-258"];
n119 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(System.Collections.ICollection)", label="T[] array = new T[collection.Count]", span="261-261"];
n120 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(System.Collections.ICollection)", label="collection.CopyTo(array, 0)", span="262-262"];
n118 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(System.Collections.ICollection)", label="throw new ArgumentNullException(''collection'');", span="259-259"];
n121 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(System.Collections.ICollection)", label="return new List<T>(array);", span="264-264"];
n123 [cluster="System.Collections.ICollection.CopyTo(System.Array, int)", label="Entry System.Collections.ICollection.CopyTo(System.Array, int)", span="0-0"];
n122 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(System.Collections.ICollection)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CreateList<T>(System.Collections.ICollection)", span="256-256"];
n124 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", span="267-267"];
n125 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", label="a == null || b == null", span="269-269"];
n126 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", label="return (a == null && b == null);", span="270-270"];
n127 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", label="a.Count != b.Count", span="272-272"];
n131 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", label="i < a.Count", span="277-277"];
n132 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", label="!comparer.Equals(a[i], b[i])", span="279-279"];
n128 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", label="return false;", span="273-273"];
n129 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", label="EqualityComparer<T> comparer = EqualityComparer<T>.Default", span="275-275"];
n130 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", label="int i = 0", span="277-277"];
n134 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", label="i++", span="277-277"];
n135 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", label="return true;", span="283-283"];
n133 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", label="return false;", span="280-280"];
n137 [cluster="System.Collections.Generic.EqualityComparer<T>.Equals(T, T)", label="Entry System.Collections.Generic.EqualityComparer<T>.Equals(T, T)", span="0-0"];
n136 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ListEquals<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", span="267-267"];
n138 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.TryGetSingleItem<T>(System.Collections.Generic.IList<T>, out T)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.TryGetSingleItem<T>(System.Collections.Generic.IList<T>, out T)", span="287-287"];
n139 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.TryGetSingleItem<T>(System.Collections.Generic.IList<T>, out T)", label="return TryGetSingleItem<T>(list, false, out value);", span="289-289"];
n140 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.TryGetSingleItem<T>(System.Collections.Generic.IList<T>, out T)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.TryGetSingleItem<T>(System.Collections.Generic.IList<T>, out T)", span="287-287"];
n141 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.TryGetSingleItem<T>(System.Collections.Generic.IList<T>, bool, out T)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.TryGetSingleItem<T>(System.Collections.Generic.IList<T>, bool, out T)", span="292-292"];
n142 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.TryGetSingleItem<T>(System.Collections.Generic.IList<T>, bool, out T)", label="return MiscellaneousUtils.TryAction<T>(delegate { return GetSingleItem(list, returnDefaultIfEmpty); }, out value);", span="294-294"];
n146 [cluster="lambda expression", label="return GetSingleItem(list, returnDefaultIfEmpty);", span="294-294"];
n143 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.TryGetSingleItem<T>(System.Collections.Generic.IList<T>, bool, out T)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.TryGetSingleItem<T>(System.Collections.Generic.IList<T>, bool, out T)", span="292-292"];
n144 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.TryAction<T>(Newtonsoft.Json.Utilities.Creator<T>, out T)", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.TryAction<T>(Newtonsoft.Json.Utilities.Creator<T>, out T)", span="17-17"];
n145 [cluster="lambda expression", label="Entry lambda expression", span="294-294"];
n147 [cluster="lambda expression", label="Exit lambda expression", span="294-294"];
n148 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", span="302-302"];
n149 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>)", span="297-297"];
n150 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>)", label="return GetSingleItem<T>(list, false);", span="299-299"];
n151 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>)", span="297-297"];
n152 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", label="list.Count == 1", span="304-304"];
n153 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", label="return list[0];", span="305-305"];
n154 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", label="returnDefaultIfEmpty && list.Count == 0", span="306-306"];
n155 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", label="return default(T);", span="307-307"];
n157 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", span="302-302"];
n158 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
n159 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
n160 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Minus<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.Minus<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", span="313-313"];
n161 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Minus<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", label="ValidationUtils.ArgumentNotNull(list, ''list'')", span="315-315"];
n162 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Minus<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", label="List<T> result = new List<T>(list.Count)", span="317-317"];
n163 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Minus<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", label=list, span="318-318"];
n164 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Minus<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", label="minus == null || !minus.Contains(t)", span="320-320"];
n168 [cluster="System.Collections.Generic.List<T>.List(int)", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
n165 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Minus<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", label="result.Add(t)", span="321-321"];
n166 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Minus<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", label="return result;", span="324-324"];
n169 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
n167 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Minus<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.Minus<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IList<T>)", span="313-313"];
n170 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateArray<T>(System.Collections.Generic.IEnumerable<T>)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CreateArray<T>(System.Collections.Generic.IEnumerable<T>)", span="327-327"];
n171 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateArray<T>(System.Collections.Generic.IEnumerable<T>)", label="ValidationUtils.ArgumentNotNull(enumerable, ''enumerable'')", span="329-329"];
n172 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateArray<T>(System.Collections.Generic.IEnumerable<T>)", label="enumerable is T[]", span="331-331"];
n173 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateArray<T>(System.Collections.Generic.IEnumerable<T>)", label="return (T[])enumerable;", span="332-332"];
n174 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateArray<T>(System.Collections.Generic.IEnumerable<T>)", label="List<T> tempList = new List<T>(enumerable)", span="334-334"];
n175 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateArray<T>(System.Collections.Generic.IEnumerable<T>)", label="return tempList.ToArray();", span="335-335"];
n176 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateArray<T>(System.Collections.Generic.IEnumerable<T>)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CreateArray<T>(System.Collections.Generic.IEnumerable<T>)", span="327-327"];
n177 [cluster="System.Collections.Generic.List<T>.ToArray()", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
n178 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericList(System.Type)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericList(System.Type)", span="338-338"];
n179 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericList(System.Type)", label="ValidationUtils.ArgumentNotNull(listType, ''listType'')", span="340-340"];
n181 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericList(System.Type)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericList(System.Type)", span="338-338"];
n182 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Type, params object[])", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Type, params object[])", span="532-532"];
n183 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", span="345-345"];
n184 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", label="ValidationUtils.ArgumentNotNull(type, ''listType'')", span="347-347"];
n185 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", label="type.IsArray", span="349-349"];
n187 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", label="typeof(IList).IsAssignableFrom(type)", span="351-351"];
n189 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", label="ReflectionUtils.IsSubClass(type, typeof(IList<>))", span="353-353"];
n186 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", label="return true;", span="350-350"];
n188 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", label="return true;", span="352-352"];
n193 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
n190 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", label="return true;", span="354-354"];
n191 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", label="return false;", span="356-356"];
n194 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClass(System.Type, System.Type)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClass(System.Type, System.Type)", span="124-124"];
n192 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IsListType(System.Type)", span="345-345"];
n195 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", span="359-359"];
n196 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="ValidationUtils.ArgumentNotNull(listType, ''listType'')", span="361-361"];
n197 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="ValidationUtils.ArgumentNotNull(populateList, ''populateList'')", span="362-362"];
n201 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="listType.IsArray", span="368-368"];
n208 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="listType.GetConstructors()", span="381-381"];
n220 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="populateList(list)", span="412-412"];
n222 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="listType.IsArray", span="417-417"];
n223 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="list = ((ArrayList)list).ToArray(ReflectionUtils.GetListItemType(listType))", span="418-418"];
n224 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="ReflectionUtils.IsSubClass(listType, typeof(ReadOnlyCollection<>))", span="419-419"];
n225 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="list = (IList)Activator.CreateInstance(listType, list)", span="420-420"];
n198 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="IList list", span="364-364"];
n226 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="return list;", span="423-423"];
n200 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="bool isReadOnlyOrFixedSize = false", span="366-366"];
n221 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label=isReadOnlyOrFixedSize, span="415-415"];
n202 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="list = new ArrayList()", span="372-372"];
n203 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="isReadOnlyOrFixedSize = true", span="373-373"];
n228 [cluster="System.Collections.ArrayList.ArrayList()", label="Entry System.Collections.ArrayList.ArrayList()", span="0-0"];
n229 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClass(System.Type, System.Type, out System.Type)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClass(System.Type, System.Type, out System.Type)", span="130-130"];
n206 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="Type genericEnumerable = ReflectionUtils.MakeGenericType(typeof(IEnumerable<>), readOnlyCollectionContentsType)", span="378-378"];
n230 [cluster="System.Type.GetGenericArguments()", label="Entry System.Type.GetGenericArguments()", span="0-0"];
n215 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="list = (IList)CreateGenericList(readOnlyCollectionContentsType)", span="400-400"];
n207 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="bool suitableConstructor = false", span="379-379"];
n231 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", span="523-523"];
n211 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="genericEnumerable.IsAssignableFrom(parameters[0].ParameterType)", span="387-387"];
n213 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="!suitableConstructor", span="395-395"];
n209 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="IList<ParameterInfo> parameters = constructor.GetParameters()", span="383-383"];
n232 [cluster="System.Type.GetConstructors()", label="Entry System.Type.GetConstructors()", span="0-0"];
n210 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="parameters.Count == 1", span="385-385"];
n233 [cluster="System.Reflection.MethodBase.GetParameters()", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
n212 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="suitableConstructor = true", span="389-389"];
n216 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="isReadOnlyOrFixedSize = true", span="401-401"];
n234 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", span="41-41"];
n235 [cluster="System.Activator.CreateInstance(System.Type)", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
n237 [cluster="System.Action<T>.Invoke(T)", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
n238 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetListItemType(System.Type)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetListItemType(System.Type)", span="185-185"];
n239 [cluster="System.Collections.ArrayList.ToArray(System.Type)", label="Entry System.Collections.ArrayList.ToArray(System.Type)", span="0-0"];
n240 [cluster="System.Activator.CreateInstance(System.Type, params object[])", label="Entry System.Activator.CreateInstance(System.Type, params object[])", span="0-0"];
n227 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList>)", span="359-359"];
n236 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
m0_16 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", file="DateTimeUtils.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", span="0-0"];
m0_4 [cluster="System.TimeZoneInfo.GetUtcOffset(System.DateTime)", file="DateTimeUtils.cs", label="Entry System.TimeZoneInfo.GetUtcOffset(System.DateTime)", span="0-0"];
m0_6 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="17-17"];
m0_7 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label=kind, span="19-19"];
m0_14 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="throw new ArgumentOutOfRangeException(''kind'', kind, ''Unexpected DateTimeKind value.'');", span="28-28"];
m0_8 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="DateTimeKind.Local", span="21-21"];
m0_10 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="DateTimeKind.Unspecified", span="23-23"];
m0_12 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="DateTimeKind.Utc", span="25-25"];
m0_9 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="return XmlDateTimeSerializationMode.Local;", span="22-22"];
m0_11 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="return XmlDateTimeSerializationMode.Unspecified;", span="24-24"];
m0_13 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="return XmlDateTimeSerializationMode.Utc;", span="26-26"];
m0_15 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="17-17"];
m0_0 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.GetLocalOffset(System.DateTime)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.GetLocalOffset(System.DateTime)", span="10-10"];
m0_1 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.GetLocalOffset(System.DateTime)", file="DateTimeUtils.cs", label="TimeSpan utcOffset = TimeZoneInfo.Local.GetUtcOffset(d)", span="12-12"];
m0_3 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.GetLocalOffset(System.DateTime)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.GetLocalOffset(System.DateTime)", span="10-10"];
m0_5 [cluster="int.ToString(string)", file="DateTimeUtils.cs", label="Entry int.ToString(string)", span="0-0"];
m2_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeProperty.User.User()", file="Extensions.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeProperty.User.User()", span="45-45"];
m2_9 [cluster="Unk.AreEqual", file="Extensions.cs", label="Entry Unk.AreEqual", span=""];
m2_0 [cluster="Newtonsoft.Json.Serialization.JsonProperty.ToString()", file="Extensions.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.ToString()", span="133-133"];
m2_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeProperty.Example()", color=green, community=0, file="Extensions.cs", label="Assert.AreEqual(@''{\r\n  ''''UserName'''': ''''domain\\username'''',\r\n  ''''Status'''': ''''Deleted''''\r\n}'', json)", prediction=0, span="73-76"];
m2_2 [cluster="Newtonsoft.Json.Serialization.JsonProperty.ToString()", file="Extensions.cs", label="Exit Newtonsoft.Json.Serialization.JsonProperty.ToString()", span="133-133"];
m2_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeProperty.Example()", file="Extensions.cs", label="Newtonsoft.Json.Serialization.JsonProperty", span=""];
m2_1 [cluster="Newtonsoft.Json.Serialization.JsonProperty.ToString()", file="Extensions.cs", label="return PropertyName;", span="135-135"];
m2_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeProperty.Example()", file="Extensions.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeProperty.Example()", span="55-55"];
m2_7 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="Extensions.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525"];
m2_8 [cluster="System.Console.WriteLine(string)", file="Extensions.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m3_4 [cluster="Unk.WriteValue", file="HtmlColorConverter.cs", label="Entry Unk.WriteValue", span=""];
m3_0 [cluster="Newtonsoft.Json.Converters.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="HtmlColorConverter.cs", label="Entry Newtonsoft.Json.Converters.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", span="34-34"];
m3_1 [cluster="Newtonsoft.Json.Converters.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="HtmlColorConverter.cs", label="writer.WriteValue(ColorTranslator.ToHtml((Color)value))", span="36-36"];
m3_2 [cluster="Newtonsoft.Json.Converters.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="HtmlColorConverter.cs", label="Exit Newtonsoft.Json.Converters.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", span="34-34"];
m3_5 [cluster="Newtonsoft.Json.Converters.HtmlColorConverter.CanConvert(System.Type)", file="HtmlColorConverter.cs", label="Entry Newtonsoft.Json.Converters.HtmlColorConverter.CanConvert(System.Type)", span="39-39"];
m3_6 [cluster="Newtonsoft.Json.Converters.HtmlColorConverter.CanConvert(System.Type)", file="HtmlColorConverter.cs", label="return typeof(Color).IsAssignableFrom(valueType);", span="41-41"];
m3_7 [cluster="Newtonsoft.Json.Converters.HtmlColorConverter.CanConvert(System.Type)", file="HtmlColorConverter.cs", label="Exit Newtonsoft.Json.Converters.HtmlColorConverter.CanConvert(System.Type)", span="39-39"];
m3_3 [cluster="Unk.ToHtml", file="HtmlColorConverter.cs", label="Entry Unk.ToHtml", span=""];
m4_102 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", span="609-609"];
m4_341 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", file="IsoDateTimeConverter.cs", label="List<string> fields = null", span="614-614"];
m4_346 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", file="IsoDateTimeConverter.cs", label="_expression[_currentIndex] == indexerCloseChar", span="625-625"];
m4_342 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", file="IsoDateTimeConverter.cs", label="_currentIndex < _expression.Length", span="616-616"];
m4_348 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", file="IsoDateTimeConverter.cs", label="fields != null", span="629-629"];
m4_349 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", file="IsoDateTimeConverter.cs", label="fields.Add(field)", span="631-631"];
m4_350 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", file="IsoDateTimeConverter.cs", label="return new FieldMultipleFilter { Names = fields };", span="632-632"];
m4_355 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", file="IsoDateTimeConverter.cs", label="fields == null", span="644-644"];
m4_357 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", file="IsoDateTimeConverter.cs", label="fields.Add(field)", span="647-647"];
m4_343 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", file="IsoDateTimeConverter.cs", label="string field = ReadQuotedString()", span="618-618"];
m4_359 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Path ended with open indexer.'');", span="655-655"];
m4_344 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", file="IsoDateTimeConverter.cs", label="EatWhitespace()", span="622-622"];
m4_351 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", file="IsoDateTimeConverter.cs", label="return new FieldFilter { Name = field };", span="636-636"];
m4_345 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", file="IsoDateTimeConverter.cs", label="EnsureLength(''Path ended with open indexer.'')", span="623-623"];
m4_347 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="627-627"];
m4_352 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", file="IsoDateTimeConverter.cs", label="_expression[_currentIndex] == ','", span="639-639"];
m4_353 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="641-641"];
m4_358 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Unexpected character while parsing path indexer: '' + _expression[_currentIndex]);", span="651-651"];
m4_354 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", file="IsoDateTimeConverter.cs", label="EatWhitespace()", span="642-642"];
m4_356 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", file="IsoDateTimeConverter.cs", label="fields = new List<string>()", span="645-645"];
m4_360 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", file="IsoDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char)", span="609-609"];
m4_296 [cluster="double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", file="IsoDateTimeConverter.cs", label="Entry double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", span="0-0"];
m4_295 [cluster="string.IndexOfAny(char[])", file="IsoDateTimeConverter.cs", label="Entry string.IndexOfAny(char[])", span="0-0"];
m4_30 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="bool followingIndexer = false", span="87-87"];
m4_181 [cluster="Newtonsoft.Json.Linq.JsonPath.ArrayMultipleIndexFilter.ArrayMultipleIndexFilter()", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.ArrayMultipleIndexFilter.ArrayMultipleIndexFilter()", span="4-4"];
m4_13 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()", file="IsoDateTimeConverter.cs", label="_expression[_currentIndex] == '$'", span="58-58"];
m4_180 [cluster="System.Convert.ToInt32(string, System.IFormatProvider)", file="IsoDateTimeConverter.cs", label="Entry System.Convert.ToInt32(string, System.IFormatProvider)", span="0-0"];
m4_292 [cluster="System.Text.StringBuilder.StringBuilder()", file="IsoDateTimeConverter.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m4_29 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="bool scan = false", span="86-86"];
m4_8 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="IsoDateTimeConverter.cs", label="(_dateTimeStyles & DateTimeStyles.AdjustToUniversal) == DateTimeStyles.AdjustToUniversal\r\n          || (_dateTimeStyles & DateTimeStyles.AssumeUniversal) == DateTimeStyles.AssumeUniversal", span="44-45"];
m4_9 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="IsoDateTimeConverter.cs", label="dateTimeOffset = dateTimeOffset.ToUniversalTime()", span="46-46"];
m4_10 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="IsoDateTimeConverter.cs", label="text = dateTimeOffset.ToString(DateTimeFormat, CultureInfo.InvariantCulture)", span="48-48"];
m4_11 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", color=green, community=0, file="IsoDateTimeConverter.cs", label="writer.WriteValue(text)", prediction=1, span="51-51"];
m4_12 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="IsoDateTimeConverter.cs", label="Exit Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", span="27-27"];
m4_14 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="IsoDateTimeConverter.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m4_15 [cluster="System.DateTimeOffset.ToUniversalTime()", file="IsoDateTimeConverter.cs", label="Entry System.DateTimeOffset.ToUniversalTime()", span="0-0"];
m4_16 [cluster="System.DateTimeOffset.ToString(string, System.IFormatProvider)", file="IsoDateTimeConverter.cs", label="Entry System.DateTimeOffset.ToString(string, System.IFormatProvider)", span="0-0"];
m4_17 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="596-596"];
m4_18 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", span="54-54"];
m4_19 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="IsoDateTimeConverter.cs", label="reader.TokenType != JsonToken.String", span="56-56"];
m4_21 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="IsoDateTimeConverter.cs", label="string dateText = reader.Value.ToString()", span="59-59"];
m4_22 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="IsoDateTimeConverter.cs", label="objectType == typeof(DateTimeOffset)", span="61-61"];
m4_24 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="IsoDateTimeConverter.cs", label="return DateTime.Parse(dateText, CultureInfo.InvariantCulture, _dateTimeStyles);", span="64-64"];
m4_23 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="IsoDateTimeConverter.cs", label="return DateTimeOffset.Parse(dateText, CultureInfo.InvariantCulture, _dateTimeStyles);", span="62-62"];
m4_25 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="IsoDateTimeConverter.cs", label="Exit Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", span="54-54"];
m4_255 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190"];
m4_103 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", span="348-348"];
m4_189 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="350-350"];
m4_198 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="IsoDateTimeConverter.cs", label="_expression[_currentIndex] != indexerCloseChar", span="364-364"];
m4_190 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="IsoDateTimeConverter.cs", label="EnsureLength(''Path ended with open indexer.'')", span="351-351"];
m4_191 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="IsoDateTimeConverter.cs", label="_expression[_currentIndex] != '('", span="353-353"];
m4_192 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Unexpected character while parsing path indexer: '' + _expression[_currentIndex]);", span="354-354"];
m4_193 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="356-356"];
m4_194 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="IsoDateTimeConverter.cs", label="QueryExpression expression = ParseExpression()", span="358-358"];
m4_195 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="360-360"];
m4_200 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="IsoDateTimeConverter.cs", label="return new QueryFilter\r\n            {\r\n                Expression = expression\r\n            };", span="367-370"];
m4_196 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="IsoDateTimeConverter.cs", label="EnsureLength(''Path ended with open indexer.'')", span="361-361"];
m4_197 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="IsoDateTimeConverter.cs", label="EatWhitespace()", span="362-362"];
m4_199 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Unexpected character while parsing path indexer: '' + _expression[_currentIndex]);", span="365-365"];
m4_201 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="IsoDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", span="348-348"];
m4_202 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", span="373-373"];
m4_204 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="QueryExpression rootExpression = null", span="375-375"];
m4_205 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="CompositeExpression parentExpression = null", span="376-376"];
m4_230 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="return rootExpression;", span="428-428"];
m4_238 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="rootExpression == null", span="444-444"];
m4_247 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="rootExpression == null", span="461-461"];
m4_206 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="_currentIndex < _expression.Length", span="378-378"];
m4_228 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="parentExpression != null", span="425-425"];
m4_229 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="parentExpression.Expressions.Add(booleanExpression)", span="427-427"];
m4_233 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="parentExpression == null || parentExpression.Operator != QueryOperator.And", span="435-435"];
m4_235 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="parentExpression != null", span="439-439"];
m4_236 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="parentExpression.Expressions.Add(andExpression)", span="440-440"];
m4_240 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="parentExpression.Expressions.Add(booleanExpression)", span="448-448"];
m4_242 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="parentExpression == null || parentExpression.Operator != QueryOperator.Or", span="452-452"];
m4_244 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="parentExpression != null", span="456-456"];
m4_245 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="parentExpression.Expressions.Add(orExpression)", span="457-457"];
m4_249 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="parentExpression.Expressions.Add(booleanExpression)", span="465-465"];
m4_207 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="EatWhitespace()", span="380-380"];
m4_250 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Path ended with open query.'');", span="469-469"];
m4_208 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="_expression[_currentIndex] != '@'", span="382-382"];
m4_209 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Unexpected character while parsing path query: '' + _expression[_currentIndex]);", span="383-383"];
m4_210 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="385-385"];
m4_211 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="List<PathFilter> expressionPath = new List<PathFilter>()", span="387-387"];
m4_212 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="ParsePath(expressionPath, _currentIndex, true)", span="389-389"];
m4_226 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="BooleanQueryExpression booleanExpression = new BooleanQueryExpression\r\n                {\r\n                    Path = expressionPath,\r\n                    Operator = op,\r\n                    Value = (op != QueryOperator.Exists) ? new JValue(value) : null\r\n                }", span="416-421"];
m4_213 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Path ended with open query.'');", span="390-390"];
m4_214 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="EatWhitespace()", span="392-392"];
m4_215 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="EnsureLength(''Path ended with open query.'')", span="393-393"];
m4_216 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="QueryOperator op", span="395-395"];
m4_217 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="object value = null", span="396-396"];
m4_218 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="_expression[_currentIndex] == ')'\r\n                    || _expression[_currentIndex] == '|'\r\n                    || _expression[_currentIndex] == '&'", span="397-399"];
m4_219 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="op = QueryOperator.Exists", span="401-401"];
m4_220 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="op = ParseOperator()", span="405-405"];
m4_221 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="EatWhitespace()", span="407-407"];
m4_222 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="EnsureLength(''Path ended with open query.'')", span="408-408"];
m4_223 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="value = ParseValue()", span="410-410"];
m4_224 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="EatWhitespace()", span="412-412"];
m4_225 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="EnsureLength(''Path ended with open query.'')", span="413-413"];
m4_227 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="_expression[_currentIndex] == ')'", span="423-423"];
m4_231 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="return booleanExpression;", span="431-431"];
m4_232 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="_expression[_currentIndex] == '&' && Match(''&&'')", span="433-433"];
m4_241 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="_expression[_currentIndex] == '|' && Match(''||'')", span="450-450"];
m4_234 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="CompositeExpression andExpression = new CompositeExpression { Operator = QueryOperator.And }", span="437-437"];
m4_237 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="parentExpression = andExpression", span="442-442"];
m4_239 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="rootExpression = parentExpression", span="445-445"];
m4_243 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="CompositeExpression orExpression = new CompositeExpression { Operator = QueryOperator.Or }", span="454-454"];
m4_246 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="parentExpression = orExpression", span="459-459"];
m4_248 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="rootExpression = parentExpression", span="462-462"];
m4_251 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="IsoDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", span="373-373"];
m4_28 [cluster="object.ToString()", file="IsoDateTimeConverter.cs", label="Entry object.ToString()", span="0-0"];
m4_7 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="IsoDateTimeConverter.cs", label="DateTimeOffset dateTimeOffset = (DateTimeOffset)value", span="43-43"];
m4_0 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.JPath(string)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.JPath(string)", span="40-40"];
m4_6 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52"];
m4_1 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.JPath(string)", file="IsoDateTimeConverter.cs", label="ValidationUtils.ArgumentNotNull(expression, ''expression'')", span="42-42"];
m4_2 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.JPath(string)", file="IsoDateTimeConverter.cs", label="_expression = expression", span="43-43"];
m4_3 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.JPath(string)", file="IsoDateTimeConverter.cs", label="Filters = new List<PathFilter>()", span="44-44"];
m4_4 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.JPath(string)", file="IsoDateTimeConverter.cs", label="ParseMain()", span="46-46"];
m4_5 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.JPath(string)", file="IsoDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.JPath(string)", span="40-40"];
m4_365 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", span="664-664"];
m4_366 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", file="IsoDateTimeConverter.cs", label="return Evaluate(Filters, t, errorWhenNoMatch);", span="666-666"];
m4_367 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", file="IsoDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", span="664-664"];
m4_184 [cluster="char.IsDigit(char)", file="IsoDateTimeConverter.cs", label="Entry char.IsDigit(char)", span="0-0"];
m4_254 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.BooleanQueryExpression()", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.BooleanQueryExpression()", span="59-59"];
m4_256 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", span="573-573"];
m4_317 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", file="IsoDateTimeConverter.cs", label="int currentPosition = _currentIndex", span="575-575"];
m4_318 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", file="IsoDateTimeConverter.cs", label=s, span="576-576"];
m4_319 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", file="IsoDateTimeConverter.cs", label="currentPosition < _expression.Length && _expression[currentPosition] == c", span="578-578"];
m4_320 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", file="IsoDateTimeConverter.cs", label="currentPosition++", span="579-579"];
m4_322 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", file="IsoDateTimeConverter.cs", label="_currentIndex = currentPosition", span="584-584"];
m4_321 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", file="IsoDateTimeConverter.cs", label="return false;", span="581-581"];
m4_323 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", file="IsoDateTimeConverter.cs", label="return true;", span="585-585"];
m4_324 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", file="IsoDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", span="573-573"];
m4_90 [cluster="string.TrimEnd(params char[])", file="IsoDateTimeConverter.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m4_293 [cluster="System.Text.StringBuilder.Append(char)", file="IsoDateTimeConverter.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m4_86 [cluster="Newtonsoft.Json.Linq.JsonPath.ScanFilter.ScanFilter()", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.ScanFilter.ScanFilter()", span="4-4"];
m4_88 [cluster="System.Collections.Generic.List<T>.Add(T)", file="IsoDateTimeConverter.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_297 [cluster="long.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out long)", file="IsoDateTimeConverter.cs", label="Entry long.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out long)", span="0-0"];
m4_257 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.CompositeExpression()", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.CompositeExpression.CompositeExpression()", span="30-30"];
m4_85 [cluster="string.Substring(int, int)", file="IsoDateTimeConverter.cs", label="Entry string.Substring(int, int)", span="0-0"];
m4_368 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, bool)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, bool)", span="669-669"];
m4_369 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, bool)", file="IsoDateTimeConverter.cs", label="IEnumerable<JToken> current = new[] { t }", span="671-671"];
m4_370 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, bool)", file="IsoDateTimeConverter.cs", label=filters, span="672-672"];
m4_371 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, bool)", file="IsoDateTimeConverter.cs", label="current = filter.ExecuteFilter(current, errorWhenNoMatch)", span="674-674"];
m4_372 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, bool)", file="IsoDateTimeConverter.cs", label="return current;", span="677-677"];
m4_373 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, bool)", file="IsoDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, bool)", span="669-669"];
m4_87 [cluster="Newtonsoft.Json.Linq.JsonPath.FieldFilter.FieldFilter()", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.FieldFilter.FieldFilter()", span="6-6"];
m4_182 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ArraySliceFilter()", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ArraySliceFilter()", span="7-7"];
m4_361 [cluster="Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter.FieldMultipleFilter()", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter.FieldMultipleFilter()", span="11-11"];
m4_89 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char)", span="178-178"];
m4_91 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char)", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="180-180"];
m4_92 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char)", file="IsoDateTimeConverter.cs", label="char indexerCloseChar = (indexerOpenChar == '[') ? ']' : ')'", span="182-182"];
m4_93 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char)", file="IsoDateTimeConverter.cs", label="EnsureLength(''Path ended with open indexer.'')", span="184-184"];
m4_96 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char)", file="IsoDateTimeConverter.cs", label="return ParseQuotedField(indexerCloseChar);", span="190-190"];
m4_98 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char)", file="IsoDateTimeConverter.cs", label="return ParseQuery(indexerCloseChar);", span="194-194"];
m4_99 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char)", file="IsoDateTimeConverter.cs", label="return ParseArrayIndexer(indexerCloseChar);", span="198-198"];
m4_94 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char)", file="IsoDateTimeConverter.cs", label="EatWhitespace()", span="186-186"];
m4_95 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char)", file="IsoDateTimeConverter.cs", label="_expression[_currentIndex] == '\''", span="188-188"];
m4_97 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char)", file="IsoDateTimeConverter.cs", label="_expression[_currentIndex] == '?'", span="192-192"];
m4_100 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char)", file="IsoDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char)", span="178-178"];
m4_374 [cluster="Newtonsoft.Json.Linq.JsonPath.PathFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.PathFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", span="8-8"];
m4_253 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", span="472-472"];
m4_258 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="char currentChar = _expression[_currentIndex]", span="474-474"];
m4_259 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="currentChar == '\''", span="475-475"];
m4_261 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="char.IsDigit(currentChar) || currentChar == '-'", span="479-479"];
m4_263 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="sb.Append(currentChar)", span="482-482"];
m4_280 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="currentChar == 't'", span="516-516"];
m4_283 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="currentChar == 'f'", span="521-521"];
m4_286 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="currentChar == 'n'", span="526-526"];
m4_260 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="return ReadQuotedString();", span="477-477"];
m4_262 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="StringBuilder sb = new StringBuilder()", span="481-481"];
m4_268 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="string numberText = sb.ToString()", span="490-490"];
m4_278 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="sb.Append(currentChar)", span="511-511"];
m4_264 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="484-484"];
m4_265 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="_currentIndex < _expression.Length", span="485-485"];
m4_266 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="currentChar = _expression[_currentIndex]", span="487-487"];
m4_289 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Could not read query value.'');", span="532-532"];
m4_267 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="currentChar == ' ' || currentChar == ')'", span="488-488"];
m4_269 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="numberText.IndexOfAny(new char[] { '.', 'E', 'e' }) != -1", span="492-492"];
m4_271 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="double.TryParse(numberText, NumberStyles.Float | NumberStyles.AllowThousands, CultureInfo.InvariantCulture, out d)", span="495-495"];
m4_275 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="long.TryParse(numberText, NumberStyles.Integer, CultureInfo.InvariantCulture, out l)", span="503-503"];
m4_270 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="double d", span="494-494"];
m4_274 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="long l", span="502-502"];
m4_272 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="return d;", span="496-496"];
m4_273 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Could not read query value.'');", span="498-498"];
m4_276 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="return l;", span="504-504"];
m4_277 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Could not read query value.'');", span="506-506"];
m4_279 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="512-512"];
m4_281 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="Match(''true'')", span="518-518"];
m4_282 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="return true;", span="519-519"];
m4_284 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="Match(''false'')", span="523-523"];
m4_285 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="return false;", span="524-524"];
m4_287 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="Match(''null'')", span="528-528"];
m4_288 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="return null;", span="529-529"];
m4_290 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", file="IsoDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.ParseValue()", span="472-472"];
m4_183 [cluster="Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter.ArrayIndexFilter()", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter.ArrayIndexFilter()", span="6-6"];
m4_101 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.EnsureLength(string)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.EnsureLength(string)", span="658-658"];
m4_362 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.EnsureLength(string)", file="IsoDateTimeConverter.cs", label="_currentIndex >= _expression.Length", span="660-660"];
m4_363 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.EnsureLength(string)", file="IsoDateTimeConverter.cs", label="throw new JsonException(message);", span="661-661"];
m4_364 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.EnsureLength(string)", file="IsoDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.EnsureLength(string)", span="658-658"];
m4_27 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", span="84-84"];
m4_38 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="_currentIndex > currentPartStartIndex", span="99-99"];
m4_39 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="string member = _expression.Substring(currentPartStartIndex, _currentIndex - currentPartStartIndex)", span="101-101"];
m4_41 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="filters.Add(filter)", span="103-103"];
m4_43 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="filters.Add(ParseIndexer(currentChar))", span="107-107"];
m4_60 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="filters.Add(filter)", span="129-129"];
m4_69 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="query && (currentChar == '=' || currentChar == '<' || currentChar == '!' || currentChar == '>' || currentChar == '|' || currentChar == '&')", span="143-143"];
m4_75 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="_currentIndex > currentPartStartIndex", span="160-160"];
m4_76 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="string member = _expression.Substring(currentPartStartIndex, _currentIndex - currentPartStartIndex).TrimEnd()", span="162-162"];
m4_80 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="filters.Add(filter)", span="166-166"];
m4_81 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="followingDot && (atPathEnd || query)", span="171-171"];
m4_40 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="PathFilter filter = (scan) ? (PathFilter)new ScanFilter() { Name = member } : new FieldFilter() { Name = member }", span="102-102"];
m4_59 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="PathFilter filter = (scan) ? (PathFilter)new ScanFilter() { Name = member } : new FieldFilter() { Name = member }", span="128-128"];
m4_79 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="PathFilter filter = (scan) ? (PathFilter)new ScanFilter() { Name = member } : new FieldFilter() { Name = member }", span="165-165"];
m4_31 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="bool followingDot = false", span="88-88"];
m4_32 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="bool ended = false", span="90-90"];
m4_33 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="_currentIndex < _expression.Length && !ended", span="91-91"];
m4_34 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="char currentChar = _expression[_currentIndex]", span="93-93"];
m4_74 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="bool atPathEnd = (_currentIndex == _expression.Length)", span="158-158"];
m4_35 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="Newtonsoft.Json.Converters.IsoDateTimeConverter", span=""];
m4_72 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Unexpected character following indexer: '' + currentChar);", span="150-150"];
m4_36 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="'['", span="97-97"];
m4_48 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="']'", span="113-113"];
m4_51 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="' '", span="117-117"];
m4_54 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="'.'", span="122-122"];
m4_37 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="'('", span="98-98"];
m4_42 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="scan = false", span="104-104"];
m4_44 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="108-108"];
m4_45 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="currentPartStartIndex = _currentIndex", span="109-109"];
m4_46 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="followingIndexer = true", span="110-110"];
m4_55 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="_currentIndex > currentPartStartIndex", span="123-123"];
m4_56 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="string member = _expression.Substring(currentPartStartIndex, _currentIndex - currentPartStartIndex)", span="125-125"];
m4_47 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="followingDot = false", span="111-111"];
m4_49 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="')'", span="114-114"];
m4_50 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="ended = true", span="115-115"];
m4_52 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="_currentIndex < _expression.Length", span="119-119"];
m4_53 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="ended = true", span="120-120"];
m4_62 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="_currentIndex + 1 < _expression.Length && _expression[_currentIndex + 1] == '.'", span="132-132"];
m4_57 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="member == ''*''", span="126-126"];
m4_58 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="member = null", span="127-127"];
m4_61 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="scan = false", span="130-130"];
m4_63 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="scan = true", span="134-134"];
m4_65 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="137-137"];
m4_64 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="135-135"];
m4_66 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="currentPartStartIndex = _currentIndex", span="138-138"];
m4_67 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="followingIndexer = false", span="139-139"];
m4_68 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="followingDot = true", span="140-140"];
m4_71 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label=followingIndexer, span="149-149"];
m4_70 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="ended = true", span="145-145"];
m4_73 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="152-152"];
m4_83 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="return atPathEnd;", span="175-175"];
m4_77 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="member == ''*''", span="163-163"];
m4_78 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="member = null", span="164-164"];
m4_82 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Unexpected end while parsing path.'');", span="172-172"];
m4_84 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="IsoDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", span="84-84"];
m4_252 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", span="588-588"];
m4_325 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="IsoDateTimeConverter.cs", label="_currentIndex + 1 >= _expression.Length", span="590-590"];
m4_326 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Path ended with open query.'');", span="591-591"];
m4_327 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="IsoDateTimeConverter.cs", label="Match(''=='')", span="593-593"];
m4_328 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="IsoDateTimeConverter.cs", label="return QueryOperator.Equals;", span="594-594"];
m4_329 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="IsoDateTimeConverter.cs", label="Match(''!='') || Match(''<>'')", span="595-595"];
m4_330 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="IsoDateTimeConverter.cs", label="return QueryOperator.NotEquals;", span="596-596"];
m4_331 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="IsoDateTimeConverter.cs", label="Match(''<='')", span="597-597"];
m4_332 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="IsoDateTimeConverter.cs", label="return QueryOperator.LessThanOrEquals;", span="598-598"];
m4_333 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="IsoDateTimeConverter.cs", label="Match(''<'')", span="599-599"];
m4_334 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="IsoDateTimeConverter.cs", label="return QueryOperator.LessThan;", span="600-600"];
m4_335 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="IsoDateTimeConverter.cs", label="Match(''>='')", span="601-601"];
m4_336 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="IsoDateTimeConverter.cs", label="return QueryOperator.GreaterThanOrEquals;", span="602-602"];
m4_337 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="IsoDateTimeConverter.cs", label="Match(''>'')", span="603-603"];
m4_338 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="IsoDateTimeConverter.cs", label="return QueryOperator.GreaterThan;", span="604-604"];
m4_339 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Could not read query operator.'');", span="606-606"];
m4_340 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="IsoDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", span="588-588"];
m4_203 [cluster="Newtonsoft.Json.Linq.JsonPath.QueryFilter.QueryFilter()", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.QueryFilter.QueryFilter()", span="5-5"];
m4_294 [cluster="System.Text.StringBuilder.ToString()", file="IsoDateTimeConverter.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m4_291 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", span="535-535"];
m4_298 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="IsoDateTimeConverter.cs", label="StringBuilder sb = new StringBuilder()", span="537-537"];
m4_299 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="539-539"];
m4_305 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="IsoDateTimeConverter.cs", label="sb.Append('\'')", span="548-548"];
m4_307 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="IsoDateTimeConverter.cs", label="sb.Append('\\')", span="550-550"];
m4_312 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="IsoDateTimeConverter.cs", label="return sb.ToString();", span="560-560"];
m4_314 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="IsoDateTimeConverter.cs", label="sb.Append(currentChar)", span="566-566"];
m4_300 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="IsoDateTimeConverter.cs", label="_currentIndex < _expression.Length", span="540-540"];
m4_301 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="IsoDateTimeConverter.cs", label="char currentChar = _expression[_currentIndex]", span="542-542"];
m4_315 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Path ended with an open string.'');", span="570-570"];
m4_302 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="IsoDateTimeConverter.cs", label="currentChar == '\\' && _currentIndex + 1 < _expression.Length", span="543-543"];
m4_310 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="IsoDateTimeConverter.cs", label="currentChar == '\''", span="556-556"];
m4_303 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="545-545"];
m4_304 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="IsoDateTimeConverter.cs", label="_expression[_currentIndex] == '\''", span="547-547"];
m4_306 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="IsoDateTimeConverter.cs", label="_expression[_currentIndex] == '\\'", span="549-549"];
m4_308 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="IsoDateTimeConverter.cs", label="throw new JsonException(@''Unknown escape chracter: \'' + _expression[_currentIndex]);", span="552-552"];
m4_309 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="554-554"];
m4_311 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="558-558"];
m4_313 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="565-565"];
m4_316 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="IsoDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", span="535-535"];
m4_26 [cluster="System.Exception.Exception(string)", file="IsoDateTimeConverter.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m4_185 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.EatWhitespace()", file="IsoDateTimeConverter.cs", label="_currentIndex < _expression.Length", span="339-339"];
m4_186 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.EatWhitespace()", file="IsoDateTimeConverter.cs", label="_expression[_currentIndex] != ' '", span="341-341"];
m4_187 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.EatWhitespace()", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="344-344"];
m4_188 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.EatWhitespace()", file="IsoDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.EatWhitespace()", span="337-337"];
m4_104 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", span="202-202"];
m4_105 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="int start = _currentIndex", span="204-204"];
m4_117 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="currentCharacter == indexerCloseChar", span="223-223"];
m4_155 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="_expression[_currentIndex] != indexerCloseChar", span="289-289"];
m4_106 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="int? end = null", span="205-205"];
m4_118 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="int length = (end ?? _currentIndex) - start", span="225-225"];
m4_122 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="string indexer = _expression.Substring(start, length)", span="232-232"];
m4_128 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="string indexer = _expression.Substring(start, length)", span="242-242"];
m4_136 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="string indexer = _expression.Substring(start, length)", span="258-258"];
m4_140 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="int length = (end ?? _currentIndex) - start", span="265-265"];
m4_145 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="string indexer = _expression.Substring(start, length)", span="273-273"];
m4_159 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="int length = (end ?? _currentIndex) - start", span="296-296"];
m4_161 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="string indexer = _expression.Substring(start, length)", span="300-300"];
m4_107 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="List<int> indexes = null", span="206-206"];
m4_175 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="end != null", span="326-326"];
m4_108 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="int colonCount = 0", span="207-207"];
m4_119 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="indexes != null", span="227-227"];
m4_124 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="indexes.Add(index)", span="235-235"];
m4_125 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="return new ArrayMultipleIndexFilter { Indexes = indexes };", span="236-236"];
m4_143 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="indexes == null", span="270-270"];
m4_146 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="indexes.Add(Convert.ToInt32(indexer, CultureInfo.InvariantCulture))", span="274-274"];
m4_109 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="int? startIndex = null", span="208-208"];
m4_126 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="colonCount > 0", span="238-238"];
m4_130 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="colonCount == 1", span="245-245"];
m4_163 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="colonCount == 0", span="303-303"];
m4_165 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="colonCount == 1", span="305-305"];
m4_168 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="colonCount++", span="311-311"];
m4_110 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="int? endIndex = null", span="209-209"];
m4_133 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="return new ArraySliceFilter { Start = startIndex, End = endIndex, Step = step };", span="251-251"];
m4_111 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="int? step = null", span="210-210"];
m4_112 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="_currentIndex < _expression.Length", span="212-212"];
m4_113 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="char currentCharacter = _expression[_currentIndex]", span="214-214"];
m4_178 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Path ended with open indexer.'');", span="334-334"];
m4_114 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="currentCharacter == ' '", span="216-216"];
m4_139 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="currentCharacter == ','", span="263-263"];
m4_151 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="currentCharacter == '*'", span="283-283"];
m4_156 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Unexpected character while parsing path indexer: '' + currentCharacter);", span="290-290"];
m4_158 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="currentCharacter == ':'", span="294-294"];
m4_173 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="!char.IsDigit(currentCharacter) && currentCharacter != '-'", span="320-320"];
m4_174 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Unexpected character while parsing path indexer: '' + currentCharacter);", span="322-322"];
m4_176 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Unexpected character while parsing path indexer: '' + currentCharacter);", span="327-327"];
m4_115 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="end = _currentIndex", span="218-218"];
m4_116 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="EatWhitespace()", span="219-219"];
m4_120 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="length == 0", span="229-229"];
m4_127 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="length > 0", span="240-240"];
m4_134 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="length == 0", span="255-255"];
m4_121 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Array index expected.'');", span="230-230"];
m4_123 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="int index = Convert.ToInt32(indexer, CultureInfo.InvariantCulture)", span="233-233"];
m4_129 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="int index = Convert.ToInt32(indexer, CultureInfo.InvariantCulture)", span="243-243"];
m4_131 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="endIndex = index", span="246-246"];
m4_132 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="step = index", span="248-248"];
m4_135 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Array index expected.'');", span="256-256"];
m4_137 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="int index = Convert.ToInt32(indexer, CultureInfo.InvariantCulture)", span="259-259"];
m4_138 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="return new ArrayIndexFilter { Index = index };", span="261-261"];
m4_141 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="length == 0", span="267-267"];
m4_142 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="throw new JsonException(''Array index expected.'');", span="268-268"];
m4_144 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="indexes = new List<int>()", span="271-271"];
m4_147 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="276-276"];
m4_148 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="EatWhitespace()", span="278-278"];
m4_149 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="start = _currentIndex", span="280-280"];
m4_150 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="end = null", span="281-281"];
m4_152 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="285-285"];
m4_153 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="EnsureLength(''Path ended with open indexer.'')", span="286-286"];
m4_154 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="EatWhitespace()", span="287-287"];
m4_157 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="return new ArrayIndexFilter();", span="292-292"];
m4_160 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="length > 0", span="298-298"];
m4_162 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="int index = Convert.ToInt32(indexer, CultureInfo.InvariantCulture)", span="301-301"];
m4_164 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="startIndex = index", span="304-304"];
m4_166 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="endIndex = index", span="306-306"];
m4_167 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="step = index", span="308-308"];
m4_169 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="313-313"];
m4_170 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="EatWhitespace()", span="315-315"];
m4_171 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="start = _currentIndex", span="317-317"];
m4_172 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="end = null", span="318-318"];
m4_177 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="_currentIndex++", span="329-329"];
m4_179 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="IsoDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", span="202-202"];
m4_375 [file="IsoDateTimeConverter.cs", label="Newtonsoft.Json.Linq.JsonPath.JPath", span=""];
m5_25 [cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader)", span="207-207"];
m5_31 [cluster="System.IO.StringReader.StringReader(string)", file="JArray.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m5_47 [cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter)", span="131-131"];
m5_10 [cluster="Newtonsoft.Json.Schema.JsonSchema.Parse(string)", file="JArray.cs", label="Entry Newtonsoft.Json.Schema.JsonSchema.Parse(string)", span="294-294"];
m5_40 [cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter)", span="93-93"];
m5_42 [cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter)", file="JArray.cs", label="Children()", span="97-97"];
m5_41 [cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter)", file="JArray.cs", label="writer.WriteStartArray()", span="95-95"];
m5_43 [cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter)", file="JArray.cs", label="token.WriteTo(writer)", span="99-99"];
m5_44 [cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter)", file="JArray.cs", label="writer.WriteEndArray()", span="102-102"];
m5_45 [cluster="Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter)", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.WriteTo(Newtonsoft.Json.JsonWriter)", span="93-93"];
m5_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JTokenIsValidWithMessages.Example()", file="JArray.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Schema.JTokenIsValidWithMessages.Example()", span="37-37"];
m5_12 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JArray.cs", label="reader.TokenType == JsonToken.None", span="57-57"];
m5_23 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JArray.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="314-314"];
m5_46 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JArray.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="320-320"];
m5_2 [cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="45-45"];
m5_3 [cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", color=green, community=0, file="JArray.cs", label="Add(content)", prediction=2, span="47-47"];
m5_5 [cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Add(object)", span="94-94"];
m5_4 [cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.JArray(object)", span="45-45"];
m5_6 [cluster="Newtonsoft.Json.Linq.JArray.Count()", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.Count()", span="50-50"];
m5_7 [cluster="Newtonsoft.Json.Linq.JArray.Count()", file="JArray.cs", label="return Children().Count();", span="52-52"];
m5_8 [cluster="Newtonsoft.Json.Linq.JArray.Count()", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.Count()", span="50-50"];
m5_9 [cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="60-60"];
m5_30 [cluster="Newtonsoft.Json.JsonReader.JsonReader(System.IO.TextReader)", file="JArray.cs", label="Entry Newtonsoft.Json.JsonReader.JsonReader(System.IO.TextReader)", span="107-107"];
m5_11 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", span="55-55"];
m5_14 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JArray.cs", label="throw new Exception(''Error reading JArray from JsonReader.'');", prediction=3, span="60-60"];
m5_48 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JArray.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="330-330"];
m5_26 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JArray.cs", label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="78-78"];
m5_28 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JArray.cs", label="return Load(jsonReader);", span="82-82"];
m5_27 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JArray.cs", label="JsonReader jsonReader = new JsonReader(new StringReader(json))", span="80-80"];
m5_29 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.Parse(string)", span="78-78"];
m5_15 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JArray.cs", label="reader.TokenType != JsonToken.StartArray", prediction=4, span="62-62"];
m5_13 [cluster="System.Console.WriteLine(bool)", file="JArray.cs", label="Entry System.Console.WriteLine(bool)", span="0-0"];
m5_16 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JArray.cs", label="throw new Exception(''Current JsonReader item is not an object.'');", prediction=5, span="64-64"];
m5_17 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JArray.cs", label="!reader.Read()", prediction=4, span="68-68"];
m5_18 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JArray.cs", label="throw new Exception(''Error reading JArray from JsonReader.'');", prediction=7, span="69-69"];
m5_19 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JArray.cs", label="JArray a = new JArray()", span="72-72"];
m5_20 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JArray.cs", label="a.ReadContentFrom(reader)", span="73-73"];
m5_21 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JArray.cs", label="return a;", span="75-75"];
m5_22 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JArray.cs", label="Exit Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", span="55-55"];
m5_49 [file="JArray.cs", label="Newtonsoft.Json.Linq.JArray", span=""];
m6_2 [cluster="Newtonsoft.Json.JavaScriptArray.JavaScriptArray(System.Collections.Generic.IEnumerable<object>)", file="JavaScriptArray.cs", label="Entry Newtonsoft.Json.JavaScriptArray.JavaScriptArray(System.Collections.Generic.IEnumerable<object>)", span="48-48"];
m6_3 [cluster="Newtonsoft.Json.JavaScriptArray.JavaScriptArray(System.Collections.Generic.IEnumerable<object>)", file="JavaScriptArray.cs", label="Exit Newtonsoft.Json.JavaScriptArray.JavaScriptArray(System.Collections.Generic.IEnumerable<object>)", span="48-48"];
m6_0 [cluster="Newtonsoft.Json.JavaScriptArray.JavaScriptArray()", file="JavaScriptArray.cs", label="Entry Newtonsoft.Json.JavaScriptArray.JavaScriptArray()", span="39-39"];
m6_1 [cluster="Newtonsoft.Json.JavaScriptArray.JavaScriptArray()", file="JavaScriptArray.cs", label="Exit Newtonsoft.Json.JavaScriptArray.JavaScriptArray()", span="39-39"];
m6_4 [cluster="Newtonsoft.Json.JavaScriptArray.JavaScriptArray(int)", file="JavaScriptArray.cs", label="Entry Newtonsoft.Json.JavaScriptArray.JavaScriptArray(int)", span="58-58"];
m6_5 [cluster="Newtonsoft.Json.JavaScriptArray.JavaScriptArray(int)", file="JavaScriptArray.cs", label="Exit Newtonsoft.Json.JavaScriptArray.JavaScriptArray(int)", span="58-58"];
m7_24 [cluster="System.Text.StringBuilder.Append(string)", file="JavaScriptConstructor.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m7_0 [cluster="Newtonsoft.Json.JavaScriptConstructor.JavaScriptConstructor(string, Newtonsoft.Json.JavaScriptParameters)", file="JavaScriptConstructor.cs", label="Entry Newtonsoft.Json.JavaScriptConstructor.JavaScriptConstructor(string, Newtonsoft.Json.JavaScriptParameters)", span="49-49"];
m7_7 [cluster="Newtonsoft.Json.JavaScriptConstructor.JavaScriptConstructor(string, Newtonsoft.Json.JavaScriptParameters)", file="JavaScriptConstructor.cs", label="Exit Newtonsoft.Json.JavaScriptConstructor.JavaScriptConstructor(string, Newtonsoft.Json.JavaScriptParameters)", span="49-49"];
m7_26 [cluster="System.Text.StringBuilder.ToString()", file="JavaScriptConstructor.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m7_23 [cluster="System.Text.StringBuilder.StringBuilder()", file="JavaScriptConstructor.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m7_10 [cluster="Newtonsoft.Json.JavaScriptConstructor.ToString()", file="JavaScriptConstructor.cs", label="Entry Newtonsoft.Json.JavaScriptConstructor.ToString()", span="61-61"];
m7_22 [cluster="Newtonsoft.Json.JavaScriptConstructor.ToString()", file="JavaScriptConstructor.cs", label="Exit Newtonsoft.Json.JavaScriptConstructor.ToString()", span="61-61"];
m7_25 [cluster="System.Text.StringBuilder.Append(object)", file="JavaScriptConstructor.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m7_9 [cluster="System.ArgumentException.ArgumentException(string, string)", file="JavaScriptConstructor.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m7_27 [file="JavaScriptConstructor.cs", label="Newtonsoft.Json.JavaScriptConstructor", span=""];
m8_12 [cluster="Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema, out System.Collections.Generic.IList<string>)", file="JavaScriptConvert.cs", label="Entry Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema, out System.Collections.Generic.IList<string>)", span="79-79"];
m8_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JTokenIsValidWithMessages.Example()", file="JavaScriptConvert.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Schema.JTokenIsValidWithMessages.Example()", span="37-37"];
m8_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JTokenIsValidWithMessages.Example()", file="JavaScriptConvert.cs", label="string schemaJson = @''{\r\n              'description': 'A person',\r\n              'type': 'object',\r\n              'properties': {\r\n                'name': {'type':'string'},\r\n                'hobbies': {\r\n                  'type': 'array',\r\n                  'items': {'type':'string'}\r\n                }\r\n              }\r\n            }''", span="40-50"];
m8_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JTokenIsValidWithMessages.Example()", file="JavaScriptConvert.cs", label="JsonSchema schema = JsonSchema.Parse(schemaJson)", span="52-52"];
m8_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JTokenIsValidWithMessages.Example()", file="JavaScriptConvert.cs", label="bool valid = person.IsValid(schema, out messages)", span="60-60"];
m8_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JTokenIsValidWithMessages.Example()", file="JavaScriptConvert.cs", label="JObject person = JObject.Parse(@''{\r\n              'name': null,\r\n              'hobbies': ['Invalid content', 0.123456789]\r\n            }'')", span="54-57"];
m8_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JTokenIsValidWithMessages.Example()", file="JavaScriptConvert.cs", label="IList<string> messages", span="59-59"];
m8_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JTokenIsValidWithMessages.Example()", file="JavaScriptConvert.cs", label="Console.WriteLine(valid)", span="62-62"];
m8_11 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JavaScriptConvert.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359"];
m8_8 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JTokenIsValidWithMessages.Example()", color=green, community=0, file="JavaScriptConvert.cs", label="Console.WriteLine(message)", prediction=8, span="67-67"];
m8_10 [cluster="Newtonsoft.Json.Tests.Documentation.File.CreateText(string)", file="JavaScriptConvert.cs", label="Entry Newtonsoft.Json.Tests.Documentation.File.CreateText(string)", span="63-63"];
m8_13 [cluster="System.Console.WriteLine(bool)", file="JavaScriptConvert.cs", label="Entry System.Console.WriteLine(bool)", span="0-0"];
m8_9 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JTokenIsValidWithMessages.Example()", file="JavaScriptConvert.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Schema.JTokenIsValidWithMessages.Example()", span="37-37"];
m8_7 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.JTokenIsValidWithMessages.Example()", file="JavaScriptConvert.cs", label=messages, span="65-65"];
m8_14 [cluster="System.Console.WriteLine(string)", file="JavaScriptConvert.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m9_118 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JavaScriptConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="126-126"];
m9_52 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JavaScriptConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="676-676"];
m9_36 [cluster="Unk.AcceptChanges", file="JavaScriptConvertTest.cs", label="Entry Unk.AcceptChanges", span=""];
m9_41 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", span="71-71"];
m9_42 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", color=green, community=0, file="JavaScriptConvertTest.cs", label="DataSet ds = new DataSet()", prediction=9, span="73-73"];
m9_43 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", color=green, community=0, file="JavaScriptConvertTest.cs", label="ds.Tables.Add(CreateDataTable(''FirstTable'', 2))", prediction=9, span="74-74"];
m9_44 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", color=green, community=0, file="JavaScriptConvertTest.cs", label="ds.Tables.Add(CreateDataTable(''SecondTable'', 1))", prediction=9, span="75-75"];
m9_45 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", color=green, community=0, file="JavaScriptConvertTest.cs", label="string json = JsonConvert.SerializeObject(ds, Formatting.Indented, new IsoDateTimeConverter())", prediction=12, span="77-77"];
m9_46 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="DataSet deserializedDs = JsonConvert.DeserializeObject<DataSet>(json, new IsoDateTimeConverter())", span="109-109"];
m9_47 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(@''{\r\n  ''''FirstTable'''': [\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 1,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    },\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 2,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ],\r\n  ''''SecondTable'''': [\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 1,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ]\r\n}'', json)", span="111-140"];
m9_48 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Assert.IsNotNull(deserializedDs)", span="142-142"];
m9_49 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", span="71-71"];
m9_51 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JavaScriptConvertTest.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="9-9"];
m9_120 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JavaScriptConvertTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", span="298-298"];
m9_121 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JavaScriptConvertTest.cs", label="DataSet ds = new DataSet()", span="300-300"];
m9_122 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JavaScriptConvertTest.cs", label="ds.Tables.Add(CreateDataTable(''FirstTable'', 2))", span="301-301"];
m9_123 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JavaScriptConvertTest.cs", label="ds.Tables.Add(CreateDataTable(''SecondTable'', 1))", span="302-302"];
m9_124 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JavaScriptConvertTest.cs", label="DataSetAndTableTestClass c = new DataSetAndTableTestClass\r\n        {\r\n          Before = ''Before'',\r\n          Set = ds,\r\n          Middle = ''Middle'',\r\n          Table = CreateDataTable(''LoneTable'', 2),\r\n          After = ''After''\r\n        }", span="304-311"];
m9_125 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JavaScriptConvertTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new IsoDateTimeConverter())", span="313-313"];
m9_127 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JavaScriptConvertTest.cs", label="DataSetAndTableTestClass c2 = JsonConvert.DeserializeObject<DataSetAndTableTestClass>(json, new IsoDateTimeConverter())", span="369-369"];
m9_128 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(c.Before, c2.Before)", span="371-371"];
m9_129 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(c.Set.Tables.Count, c2.Set.Tables.Count)", span="372-372"];
m9_130 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(c.Middle, c2.Middle)", span="373-373"];
m9_131 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(c.Table.Rows.Count, c2.Table.Rows.Count)", span="374-374"];
m9_132 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(c.After, c2.After)", span="375-375"];
m9_126 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Before'''': ''''Before'''',\r\n  ''''Set'''': {\r\n    ''''FirstTable'''': [\r\n      {\r\n        ''''StringCol'''': ''''Item Name'''',\r\n        ''''Int32Col'''': 1,\r\n        ''''BooleanCol'''': true,\r\n        ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n        ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n        ''''DecimalCol'''': 64.0021\r\n      },\r\n      {\r\n        ''''StringCol'''': ''''Item Name'''',\r\n        ''''Int32Col'''': 2,\r\n        ''''BooleanCol'''': true,\r\n        ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n        ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n        ''''DecimalCol'''': 64.0021\r\n      }\r\n    ],\r\n    ''''SecondTable'''': [\r\n      {\r\n        ''''StringCol'''': ''''Item Name'''',\r\n        ''''Int32Col'''': 1,\r\n        ''''BooleanCol'''': true,\r\n        ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n        ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n        ''''DecimalCol'''': 64.0021\r\n      }\r\n    ]\r\n  },\r\n  ''''Middle'''': ''''Middle'''',\r\n  ''''Table'''': [\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 1,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    },\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 2,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ],\r\n  ''''After'''': ''''After''''\r\n}'', json)", span="315-367"];
m9_133 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="JavaScriptConvertTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", span="298-298"];
m9_53 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", span="147-147"];
m9_55 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="DataSet ds = JsonConvert.DeserializeObject<DataSet>(json, new IsoDateTimeConverter())", span="172-172"];
m9_54 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="string json = @''{\r\n  ''''FirstTable'''': [\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 2147483647,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ],\r\n  ''''SecondTable'''': [\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 2147483647,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ]\r\n}''", span="149-170"];
m9_56 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Assert.IsNotNull(ds)", span="173-173"];
m9_57 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(2, ds.Tables.Count)", span="175-175"];
m9_58 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(''FirstTable'', ds.Tables[0].TableName)", span="176-176"];
m9_59 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(''SecondTable'', ds.Tables[1].TableName)", span="177-177"];
m9_60 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="DataTable dt = ds.Tables[0]", span="179-179"];
m9_73 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(1, ds.Tables[0].Rows.Count)", span="193-193"];
m9_74 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(1, ds.Tables[1].Rows.Count)", span="194-194"];
m9_61 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(''StringCol'', dt.Columns[0].ColumnName)", span="180-180"];
m9_62 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(typeof(string), dt.Columns[0].DataType)", span="181-181"];
m9_63 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(''Int32Col'', dt.Columns[1].ColumnName)", span="182-182"];
m9_64 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(typeof(long), dt.Columns[1].DataType)", span="183-183"];
m9_65 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(''BooleanCol'', dt.Columns[2].ColumnName)", span="184-184"];
m9_66 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(typeof(bool), dt.Columns[2].DataType)", span="185-185"];
m9_67 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(''TimeSpanCol'', dt.Columns[3].ColumnName)", span="186-186"];
m9_68 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(typeof(string), dt.Columns[3].DataType)", span="187-187"];
m9_69 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(''DateTimeCol'', dt.Columns[4].ColumnName)", span="188-188"];
m9_70 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(typeof(string), dt.Columns[4].DataType)", span="189-189"];
m9_71 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(''DecimalCol'', dt.Columns[5].ColumnName)", span="190-190"];
m9_72 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(typeof(double), dt.Columns[5].DataType)", span="191-191"];
m9_75 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="JavaScriptConvertTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", span="147-147"];
m9_33 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", file="JavaScriptConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", span="127-127"];
m9_35 [cluster="Unk.NewRow", file="JavaScriptConvertTest.cs", label="Entry Unk.NewRow", span=""];
m9_37 [cluster="Unk.SerializeObject", file="JavaScriptConvertTest.cs", label="Entry Unk.SerializeObject", span=""];
m9_134 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DataSetAndTableTestClass.DataSetAndTableTestClass()", file="JavaScriptConvertTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DataSetAndTableTestClass.DataSetAndTableTestClass()", span="244-244"];
m9_135 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JavaScriptConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="572-572"];
m9_111 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", file="JavaScriptConvertTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", span="254-254"];
m9_112 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", file="JavaScriptConvertTest.cs", label="DataSet ds = new DataSet()", span="256-256"];
m9_113 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", file="JavaScriptConvertTest.cs", label="ds.Tables.Add(CreateDataTable(''FirstTable'', 2))", span="257-257"];
m9_114 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", file="JavaScriptConvertTest.cs", label="ds.Tables.Add(CreateDataTable(''SecondTable'', 1))", span="258-258"];
m9_115 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", file="JavaScriptConvertTest.cs", label="string json = JsonConvert.SerializeObject(ds, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n        })", span="260-263"];
m9_116 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(@''{\r\n  ''''firstTable'''': [\r\n    {\r\n      ''''stringCol'''': ''''Item Name'''',\r\n      ''''int32Col'''': 1,\r\n      ''''booleanCol'''': true,\r\n      ''''timeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''dateTimeCol'''': ''''\/Date(978048000000)\/'''',\r\n      ''''decimalCol'''': 64.0021\r\n    },\r\n    {\r\n      ''''stringCol'''': ''''Item Name'''',\r\n      ''''int32Col'''': 2,\r\n      ''''booleanCol'''': true,\r\n      ''''timeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''dateTimeCol'''': ''''\/Date(978048000000)\/'''',\r\n      ''''decimalCol'''': 64.0021\r\n    }\r\n  ],\r\n  ''''secondTable'''': [\r\n    {\r\n      ''''stringCol'''': ''''Item Name'''',\r\n      ''''int32Col'''': 1,\r\n      ''''booleanCol'''': true,\r\n      ''''timeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''dateTimeCol'''': ''''\/Date(978048000000)\/'''',\r\n      ''''decimalCol'''': 64.0021\r\n    }\r\n  ]\r\n}'', json)", span="265-294"];
m9_117 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", file="JavaScriptConvertTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeWithCamelCaseResolver()", span="254-254"];
m9_119 [cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JavaScriptConvertTest.cs", label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38"];
m9_31 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(result, @'''Fred\'s ''''cat''''.''')", span="66-66"];
m9_0 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", span="11-11"];
m9_1 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="string result", span="13-13"];
m9_9 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(@''''''How \r\nnow brown cow?'''''', result)", span="26-26"];
m9_7 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(@''''''How now <brown> cow?'''''', result)", span="22-22"];
m9_8 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(@''How \r\nnow brown cow?'', '''', true)", span="24-25"];
m9_14 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="result =\r\n        JavaScriptUtils.ToEscapedJavaScriptString(\r\n          ''\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f '', '''', true)", span="35-37"];
m9_17 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(@''''''!\''''#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]'''''', result)", span="43-43"];
m9_2 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''How now brown cow?'', '''', true)", span="15-15"];
m9_3 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(@''''''How now brown cow?'''''', result)", span="16-16"];
m9_10 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007'', '''', true)", span="28-28"];
m9_5 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(@''''''How now 'brown' cow?'''''', result)", span="19-19"];
m9_6 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''How now <brown> cow?'', '''', true)", span="21-21"];
m9_12 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="result =\r\n        JavaScriptUtils.ToEscapedJavaScriptString(''\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013'', '''', true)", span="31-32"];
m9_13 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(@''''''\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013'''''', result)", span="33-33"];
m9_15 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(@''''''\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f '''''', result)", span="38-38"];
m9_16 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="result =\r\n        JavaScriptUtils.ToEscapedJavaScriptString(\r\n          ''!\''#$%&\u0027()*+,-./0123456789:;\u003c=\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]'', '''', true)", span="40-42"];
m9_18 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''^_`abcdefghijklmnopqrstuvwxyz{|}~'', '''', true)", span="45-45"];
m9_19 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(@''''''^_`abcdefghijklmnopqrstuvwxyz{|}~'''''', result)", span="46-46"];
m9_21 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="string expected =\r\n        @''''''\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\''''#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~''''''", span="50-51"];
m9_23 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(expected, result)", span="54-54"];
m9_24 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''Fred's cat.'', '\'', true)", span="56-56"];
m9_25 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(result, @'''Fred\'s cat.''')", span="57-57"];
m9_26 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(@''''''How are you gentlemen?'''' said Cats.'', '''', true)", span="59-59"];
m9_27 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(result, @''''''\''''How are you gentlemen?\'''' said Cats.'''''')", span="60-60"];
m9_28 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(@''''''How are' you gentlemen?'''' said Cats.'', '''', true)", span="62-62"];
m9_29 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(result, @''''''\''''How are' you gentlemen?\'''' said Cats.'''''')", span="63-63"];
m9_4 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''How now 'brown' cow?'', '''', true)", span="18-18"];
m9_11 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="Assert.AreEqual(@''''''\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007'''''', result)", span="29-29"];
m9_20 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="string data =\r\n        ''\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\''#$%&\u0027()*+,-./0123456789:;\u003c=\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~''", span="48-49"];
m9_22 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(data, '''', true)", span="53-53"];
m9_30 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(@''Fred's ''''cat''''.'', '\'', true)", span="65-65"];
m9_38 [cluster="Unk.AreEqual", file="JavaScriptConvertTest.cs", label="Entry Unk.AreEqual", span=""];
m9_34 [cluster="Unk.Add", file="JavaScriptConvertTest.cs", label="Entry Unk.Add", span=""];
m9_40 [cluster="Unk.IsNotNull", file="JavaScriptConvertTest.cs", label="Entry Unk.IsNotNull", span=""];
m9_39 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JavaScriptConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="648-648"];
m9_32 [cluster="Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", file="JavaScriptConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JavaScriptConvertTest.EscapeJavaScriptString()", span="11-11"];
m9_109 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JavaScriptConvertTest.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m9_110 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JavaScriptConvertTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m9_50 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", span="197-197"];
m9_76 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="DataTable myTable = new DataTable(dataTableName)", span="200-200"];
m9_97 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="i <= rows", span="228-228"];
m9_79 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="myTable.Columns.Add(colString)", span="205-205"];
m9_82 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="myTable.Columns.Add(colInt32)", span="209-209"];
m9_85 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="myTable.Columns.Add(colBoolean)", span="213-213"];
m9_88 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="myTable.Columns.Add(colTimeSpan)", span="217-217"];
m9_92 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="myTable.Columns.Add(colDateTime)", span="222-222"];
m9_95 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="myTable.Columns.Add(colDecimal)", span="226-226"];
m9_105 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="myTable.Rows.Add(myNewRow)", span="238-238"];
m9_107 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="return myTable;", span="241-241"];
m9_77 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="DataColumn colString = new DataColumn(''StringCol'')", span="203-203"];
m9_98 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="DataRow myNewRow = myTable.NewRow()", span="230-230"];
m9_96 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="int i = 1", span="228-228"];
m9_106 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="i++", span="228-228"];
m9_78 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="colString.DataType = typeof(string)", span="204-204"];
m9_80 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="DataColumn colInt32 = new DataColumn(''Int32Col'')", span="207-207"];
m9_81 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="colInt32.DataType = typeof(int)", span="208-208"];
m9_83 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="DataColumn colBoolean = new DataColumn(''BooleanCol'')", span="211-211"];
m9_84 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="colBoolean.DataType = typeof(bool)", span="212-212"];
m9_86 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="DataColumn colTimeSpan = new DataColumn(''TimeSpanCol'')", span="215-215"];
m9_87 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="colTimeSpan.DataType = typeof(TimeSpan)", span="216-216"];
m9_89 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="DataColumn colDateTime = new DataColumn(''DateTimeCol'')", span="219-219"];
m9_91 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="colDateTime.DateTimeMode = DataSetDateTime.Utc", span="221-221"];
m9_93 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="DataColumn colDecimal = new DataColumn(''DecimalCol'')", span="224-224"];
m9_94 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="colDecimal.DataType = typeof(decimal)", span="225-225"];
m9_104 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="myNewRow[''DecimalCol''] = 64.0021", span="237-237"];
m9_99 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="myNewRow[''StringCol''] = ''Item Name''", span="232-232"];
m9_100 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="myNewRow[''Int32Col''] = i", span="233-233"];
m9_101 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="myNewRow[''BooleanCol''] = true", span="234-234"];
m9_102 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="myNewRow[''TimeSpanCol''] = new TimeSpan(10, 22, 10, 15, 100)", span="235-235"];
m9_103 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="myNewRow[''DateTimeCol''] = new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc)", span="236-236"];
m9_90 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="colDateTime.DataType = typeof(DateTime)", span="220-220"];
m9_108 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="JavaScriptConvertTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", span="197-197"];
m9_136 [file="JavaScriptConvertTest.cs", label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", span=""];
m10_38 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="314-314"];
m10_41 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JavaScriptDateTimeConverter.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m10_45 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JavaScriptDateTimeConverter.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m10_15 [cluster="System.DateTimeOffset.ToUniversalTime()", file="JavaScriptDateTimeConverter.cs", label="Entry System.DateTimeOffset.ToUniversalTime()", span="0-0"];
m10_13 [cluster="System.DateTime.ToUniversalTime()", file="JavaScriptDateTimeConverter.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m10_34 [cluster="object.ToString()", file="JavaScriptDateTimeConverter.cs", label="Entry object.ToString()", span="0-0"];
m10_35 [cluster="string.Compare(string, string, System.StringComparison)", file="JavaScriptDateTimeConverter.cs", label="Entry string.Compare(string, string, System.StringComparison)", span="0-0"];
m10_37 [cluster="string.Format(string, object, object)", file="JavaScriptDateTimeConverter.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m10_39 [cluster="string.Format(string, object)", file="JavaScriptDateTimeConverter.cs", label="Entry string.Format(string, object)", span="0-0"];
m10_18 [cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="344-344"];
m10_17 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="623-623"];
m10_14 [cluster="Newtonsoft.Json.JavaScriptConvert.ConvertDateTimeToJavaScriptTicks(System.DateTimeOffset)", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.JavaScriptConvert.ConvertDateTimeToJavaScriptTicks(System.DateTimeOffset)", span="120-120"];
m10_16 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="335-335"];
m10_0 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", span="10-10"];
m10_1 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="JavaScriptDateTimeConverter.cs", label="long ticks", span="12-12"];
m10_2 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="JavaScriptDateTimeConverter.cs", label="value is DateTime", span="14-14"];
m10_3 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="JavaScriptDateTimeConverter.cs", label="DateTime dateTime = (DateTime)value", span="16-16"];
m10_6 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="JavaScriptDateTimeConverter.cs", label="DateTimeOffset dateTimeOffset = (DateTimeOffset)value", span="22-22"];
m10_9 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="JavaScriptDateTimeConverter.cs", label="writer.WriteStartConstructor(''Date'')", span="27-27"];
m10_10 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="JavaScriptDateTimeConverter.cs", label="writer.WriteValue(ticks)", span="28-28"];
m10_11 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="JavaScriptDateTimeConverter.cs", label="writer.WriteEndConstructor()", span="29-29"];
m10_4 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="JavaScriptDateTimeConverter.cs", label="DateTime utcDateTime = dateTime.ToUniversalTime()", span="17-17"];
m10_5 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="JavaScriptDateTimeConverter.cs", label="ticks = JavaScriptConvert.ConvertDateTimeToJavaScriptTicks(utcDateTime)", span="18-18"];
m10_7 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="JavaScriptDateTimeConverter.cs", label="DateTimeOffset utcDateTimeOffset = dateTimeOffset.ToUniversalTime()", span="23-23"];
m10_8 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="JavaScriptDateTimeConverter.cs", label="ticks = JavaScriptConvert.ConvertDateTimeToJavaScriptTicks(utcDateTimeOffset.UtcDateTime)", span="24-24"];
m10_12 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="JavaScriptDateTimeConverter.cs", label="Exit Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", span="10-10"];
m10_42 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.CanConvert(System.Type)", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.CanConvert(System.Type)", span="57-57"];
m10_43 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.CanConvert(System.Type)", file="JavaScriptDateTimeConverter.cs", label="return (typeof(DateTime).IsAssignableFrom(objectType)\r\n        || typeof(DateTimeOffset).IsAssignableFrom(objectType));", span="59-60"];
m10_44 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.CanConvert(System.Type)", file="JavaScriptDateTimeConverter.cs", label="Exit Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.CanConvert(System.Type)", span="57-57"];
m10_19 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", span="32-32"];
m10_20 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="JavaScriptDateTimeConverter.cs", label="reader.TokenType != JsonToken.StartConstructor || string.Compare(reader.Value.ToString(), ''Date'', StringComparison.Ordinal) != 0", span="34-34"];
m10_22 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="JavaScriptDateTimeConverter.cs", label="reader.Read()", span="37-37"];
m10_23 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="JavaScriptDateTimeConverter.cs", label="reader.TokenType != JsonToken.Integer", span="39-39"];
m10_25 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="JavaScriptDateTimeConverter.cs", label="long ticks = (long)reader.Value", span="42-42"];
m10_27 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="JavaScriptDateTimeConverter.cs", label="reader.Read()", span="46-46"];
m10_28 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="JavaScriptDateTimeConverter.cs", label="reader.TokenType != JsonToken.EndConstructor", span="48-48"];
m10_30 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="JavaScriptDateTimeConverter.cs", label="objectType == typeof(DateTimeOffset)", span="51-51"];
m10_26 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="JavaScriptDateTimeConverter.cs", label="DateTime d = JavaScriptConvert.ConvertJavaScriptTicksToDateTime(ticks)", span="44-44"];
m10_31 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="JavaScriptDateTimeConverter.cs", label="return new DateTimeOffset(d);", span="52-52"];
m10_32 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="JavaScriptDateTimeConverter.cs", label="return d;", span="54-54"];
m10_33 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="JavaScriptDateTimeConverter.cs", label="Exit Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", span="32-32"];
m10_40 [cluster="Newtonsoft.Json.JavaScriptConvert.ConvertJavaScriptTicksToDateTime(long)", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.JavaScriptConvert.ConvertJavaScriptTicksToDateTime(long)", span="132-132"];
m11_0 [cluster="Newtonsoft.Json.JavaScriptObject.JavaScriptObject()", file="JavaScriptObject.cs", label="Entry Newtonsoft.Json.JavaScriptObject.JavaScriptObject()", span="39-39"];
m11_1 [cluster="Newtonsoft.Json.JavaScriptObject.JavaScriptObject()", file="JavaScriptObject.cs", label="Exit Newtonsoft.Json.JavaScriptObject.JavaScriptObject()", span="39-39"];
m11_2 [cluster="Newtonsoft.Json.JavaScriptObject.JavaScriptObject(Newtonsoft.Json.JavaScriptObject)", file="JavaScriptObject.cs", label="Entry Newtonsoft.Json.JavaScriptObject.JavaScriptObject(Newtonsoft.Json.JavaScriptObject)", span="49-49"];
m11_3 [cluster="Newtonsoft.Json.JavaScriptObject.JavaScriptObject(Newtonsoft.Json.JavaScriptObject)", file="JavaScriptObject.cs", label="Exit Newtonsoft.Json.JavaScriptObject.JavaScriptObject(Newtonsoft.Json.JavaScriptObject)", span="49-49"];
m12_0 [cluster="Newtonsoft.Json.JavaScriptParameters.JavaScriptParameters(System.Collections.Generic.IList<object>)", file="JavaScriptParameters.cs", label="Entry Newtonsoft.Json.JavaScriptParameters.JavaScriptParameters(System.Collections.Generic.IList<object>)", span="36-36"];
m12_1 [cluster="Newtonsoft.Json.JavaScriptParameters.JavaScriptParameters(System.Collections.Generic.IList<object>)", file="JavaScriptParameters.cs", label="Exit Newtonsoft.Json.JavaScriptParameters.JavaScriptParameters(System.Collections.Generic.IList<object>)", span="36-36"];
m13_2 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string, params object[])", file="JConstructor.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string, params object[])", span="52-52"];
m13_3 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string, params object[])", file="JConstructor.cs", label="Exit Newtonsoft.Json.Linq.JConstructor.JConstructor(string, params object[])", span="52-52"];
m13_4 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string, object)", file="JConstructor.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string, object)", span="57-57"];
m13_11 [cluster="Newtonsoft.Json.Linq.JConstructor.ValidateObject(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JConstructor.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.ValidateObject(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="68-68"];
m13_12 [cluster="Newtonsoft.Json.Linq.JConstructor.ValidateObject(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JConstructor.cs", label="ValidationUtils.ArgumentNotNull(o, ''o'')", span="70-70"];
m13_13 [cluster="Newtonsoft.Json.Linq.JConstructor.ValidateObject(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JConstructor.cs", label="o.Type", span="72-72"];
m13_14 [cluster="Newtonsoft.Json.Linq.JConstructor.ValidateObject(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JConstructor.cs", label="JsonTokenType.Property", span="74-74"];
m13_16 [cluster="Newtonsoft.Json.Linq.JConstructor.ValidateObject(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JConstructor.cs", label="Exit Newtonsoft.Json.Linq.JConstructor.ValidateObject(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="68-68"];
m13_8 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="JConstructor.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", span="51-51"];
m13_9 [cluster="string.Replace(string, string)", file="JConstructor.cs", label="Entry string.Replace(string, string)", span="0-0"];
m13_10 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", file="JConstructor.cs", label="Newtonsoft.Json.Tests.TestFixtureBase", span=""];
m13_20 [cluster="Newtonsoft.Json.Linq.JConstructor.WriteTo(Newtonsoft.Json.JsonWriter)", file="JConstructor.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.WriteTo(Newtonsoft.Json.JsonWriter)", span="79-79"];
m13_21 [cluster="Newtonsoft.Json.Linq.JConstructor.WriteTo(Newtonsoft.Json.JsonWriter)", file="JConstructor.cs", label="writer.WriteStartConstructor(_name)", span="81-81"];
m13_24 [cluster="Newtonsoft.Json.Linq.JConstructor.WriteTo(Newtonsoft.Json.JsonWriter)", file="JConstructor.cs", label="writer.WriteEndConstructor()", span="88-88"];
m13_22 [cluster="Newtonsoft.Json.Linq.JConstructor.WriteTo(Newtonsoft.Json.JsonWriter)", file="JConstructor.cs", label="Children()", span="83-83"];
m13_25 [cluster="Newtonsoft.Json.Linq.JConstructor.WriteTo(Newtonsoft.Json.JsonWriter)", file="JConstructor.cs", label="Exit Newtonsoft.Json.Linq.JConstructor.WriteTo(Newtonsoft.Json.JsonWriter)", span="79-79"];
m13_18 [cluster="System.ArgumentException.ArgumentException(string)", file="JConstructor.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m13_28 [cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter)", file="JConstructor.cs", label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter)", span="131-131"];
m13_27 [cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JConstructor.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="60-60"];
m13_5 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="JConstructor.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", span="51-51"];
m13_6 [cluster="System.Console.WriteLine(string)", file="JConstructor.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m13_29 [cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="JConstructor.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="344-344"];
m13_7 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", color=green, community=0, file="JConstructor.cs", label="return @''@'''''' + json.Replace(@'''''''', @'''''''''''') + @'''''''';", prediction=13, span="53-53"];
m13_0 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor()", file="JConstructor.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor()", span="48-48"];
m13_1 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor()", file="JConstructor.cs", label="Exit Newtonsoft.Json.Linq.JConstructor.JConstructor()", span="48-48"];
m13_26 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="JConstructor.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="335-335"];
m13_19 [cluster="string.Format(string, object)", file="JConstructor.cs", label="Entry string.Format(string, object)", span="0-0"];
m13_30 [file="JConstructor.cs", label="Newtonsoft.Json.Linq.JConstructor", span=""];
m16_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeObject.Example()", file="JObject.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeObject.Example()", span="47-47"];
m16_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeObject.Example()", color=green, community=0, file="JObject.cs", label="Account account = new Account\r\n            {\r\n                Email = ''james@example.com'',\r\n                Active = true,\r\n                CreatedDate = new DateTime(2013, 1, 20, 0, 0, 0, DateTimeKind.Utc),\r\n                Roles = new List<string>\r\n                {\r\n                    ''User'',\r\n                    ''Admin''\r\n                }\r\n            }", prediction=14, span="55-65"];
m16_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeObject.Example()", file="JObject.cs", label="string json = JsonConvert.SerializeObject(account, Formatting.Indented)", span="67-67"];
m16_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeObject.Example()", color=green, community=0, file="JObject.cs", label="Assert.AreEqual(@''{\r\n  ''''Email'''': ''''james@example.com'''',\r\n  ''''Active'''': true,\r\n  ''''CreatedDate'''': ''''2013-01-20T00:00:00Z'''',\r\n  ''''Roles'''': [\r\n    ''''User'''',\r\n    ''''Admin''''\r\n  ]\r\n}'', json)", prediction=15, span="81-89"];
m16_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeObject.Example()", file="JObject.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeObject.Example()", span="47-47"];
m16_7 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JObject.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m16_11 [cluster="Unk.AreEqual", file="JObject.cs", label="Entry Unk.AreEqual", span=""];
m16_9 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JObject.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525"];
m16_10 [cluster="System.Console.WriteLine(string)", file="JObject.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m16_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeObject.Account.Account()", file="JObject.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeObject.Account.Account()", span="37-37"];
m17_11 [cluster="Newtonsoft.Json.Linq.JProperty.ValidateObject(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JProperty.ValidateObject(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="71-71"];
m17_9 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="63-63"];
m17_10 [cluster="Newtonsoft.Json.Linq.JContainer.CreateFromContent(object)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JContainer.CreateFromContent(object)", span="132-132"];
m17_8 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JProperty.cs", label="Value = CreateFromContent(value)", span="68-68"];
m17_7 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JProperty.cs", label="_name = name", span="67-67"];
m17_12 [cluster="Newtonsoft.Json.Linq.JProperty.ValidateObject(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="ValidationUtils.ArgumentNotNull(o, ''o'')", span="73-73"];
m17_26 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.HexToBytes(string)", color=green, community=0, file="JProperty.cs", label=fixedHex, prediction=16, span="56-56"];
m17_22 [cluster="Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter)", span="79-79"];
m17_25 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.HexToBytes(string)", color=green, community=0, file="JProperty.cs", label="Newtonsoft.Json.Linq.JProperty", prediction=17, span=""];
m17_33 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.HexToBytes(string)", color=green, community=0, file="JProperty.cs", label="offset++", prediction=17, span="68-68"];
m17_32 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.HexToBytes(string)", color=green, community=0, file="JProperty.cs", label="shift != 0", prediction=19, span="68-68"];
m17_27 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.HexToBytes(string)", color=green, community=0, file="JProperty.cs", label="int b = (c - '0') % 32", prediction=20, span="60-60"];
m17_34 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.HexToBytes(string)", color=green, community=0, file="JProperty.cs", label="return bytes;", prediction=21, span="70-70"];
m17_30 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.HexToBytes(string)", color=green, community=0, file="JProperty.cs", label="bytes[offset] |= (byte)(b << shift)", prediction=22, span="64-64"];
m17_23 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JProperty.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="353-353"];
m17_24 [cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter)", span="131-131"];
m17_28 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.HexToBytes(string)", color=green, community=0, file="JProperty.cs", label="b > 9", prediction=23, span="62-62"];
m17_29 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.HexToBytes(string)", color=green, community=0, file="JProperty.cs", label="b -= 7", prediction=24, span="62-62"];
m17_31 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.HexToBytes(string)", color=green, community=0, file="JProperty.cs", label="shift ^= 4", prediction=25, span="66-66"];
m17_35 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.HexToBytes(string)", file="JProperty.cs", label="Exit Newtonsoft.Json.Utilities.MiscellaneousUtils.HexToBytes(string)", span="45-45"];
m17_4 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNullOrEmpty(string, string)", file="JProperty.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNullOrEmpty(string, string)", span="40-40"];
m17_40 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.BytesToHex(byte[], bool)", file="JProperty.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.BytesToHex(byte[], bool)", span="78-78"];
m17_43 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.BytesToHex(byte[], bool)", file="JProperty.cs", label="hex = hex.Replace(''-'', '''')", span="82-82"];
m17_41 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.BytesToHex(byte[], bool)", file="JProperty.cs", label="string hex = BitConverter.ToString(bytes)", span="80-80"];
m17_42 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.BytesToHex(byte[], bool)", file="JProperty.cs", label=removeDashes, span="81-81"];
m17_44 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.BytesToHex(byte[], bool)", file="JProperty.cs", label="return hex;", span="84-84"];
m17_45 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.BytesToHex(byte[], bool)", file="JProperty.cs", label="Exit Newtonsoft.Json.Utilities.MiscellaneousUtils.BytesToHex(byte[], bool)", span="78-78"];
m17_17 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ToString(object)", color=green, community=0, file="JProperty.cs", label="return ''{null}'';", prediction=26, span="40-40"];
m17_15 [cluster="Newtonsoft.Json.Linq.JProperty.ValidateObject(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.ValidateObject(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="71-71"];
m17_18 [cluster="string.Format(string, object)", color=green, community=0, file="JProperty.cs", label="Entry string.Format(string, object)", prediction=27, span="0-0"];
m17_16 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JProperty.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="93-93"];
m17_19 [cluster="Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter)", span="79-79"];
m17_47 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", file="JProperty.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", span="87-87"];
m17_51 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", file="JProperty.cs", label="i < a1.Length", span="92-92"];
m17_50 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", file="JProperty.cs", label="int i = 0", span="92-92"];
m17_54 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", file="JProperty.cs", label="i++", span="92-92"];
m17_52 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", file="JProperty.cs", label="a1[i] != a2[i]", span="94-94"];
m17_55 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", file="JProperty.cs", label="return true;", span="98-98"];
m17_48 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", file="JProperty.cs", label="a1.Length != a2.Length", span="89-89"];
m17_53 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", file="JProperty.cs", label="return false;", span="95-95"];
m17_49 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", file="JProperty.cs", label="return false;", span="90-90"];
m17_56 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", file="JProperty.cs", label="Exit Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", span="87-87"];
m17_20 [cluster="object.ToString()", file="JProperty.cs", label="Entry object.ToString()", span="0-0"];
m17_5 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="63-63"];
m17_6 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JProperty.cs", label="ValidationUtils.ArgumentNotNullOrEmpty(name, ''name'')", span="65-65"];
m17_0 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string)", span="56-56"];
m17_2 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)", file="JProperty.cs", label="_name = name", span="60-60"];
m17_3 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.JProperty(string)", span="56-56"];
m17_37 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.BytesToHex(byte[])", file="JProperty.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.BytesToHex(byte[])", span="73-73"];
m17_38 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.BytesToHex(byte[])", file="JProperty.cs", label="return BytesToHex(bytes, false);", span="75-75"];
m17_39 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.BytesToHex(byte[])", file="JProperty.cs", label="Exit Newtonsoft.Json.Utilities.MiscellaneousUtils.BytesToHex(byte[])", span="73-73"];
m17_36 [cluster="string.Replace(string, string)", file="JProperty.cs", label="Entry string.Replace(string, string)", span="0-0"];
m17_13 [cluster="Newtonsoft.Json.Linq.JProperty.ValidateObject(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="o.Type == JsonTokenType.Property", span="75-75"];
m17_46 [cluster="System.BitConverter.ToString(byte[])", file="JProperty.cs", label="Entry System.BitConverter.ToString(byte[])", span="0-0"];
m18_0 [cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="JsonConverter.cs", label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", span="33-33"];
m18_3 [cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", file="JsonConverter.cs", label="Exit Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object)", span="33-33"];
m18_5 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="528-528"];
m18_4 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="110-110"];
m18_9 [cluster="System.NotImplementedException.NotImplementedException(string)", file="JsonConverter.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m18_10 [cluster="object.GetType()", file="JsonConverter.cs", label="Entry object.GetType()", span="0-0"];
m18_6 [cluster="Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="JsonConverter.cs", label="Entry Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", span="40-40"];
m18_8 [cluster="Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", file="JsonConverter.cs", label="Exit Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type)", span="40-40"];
m18_12 [cluster="Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", file="JsonConverter.cs", label="Entry Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", span="45-45"];
m18_13 [cluster="Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", file="JsonConverter.cs", label="Exit Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", span="45-45"];
m18_14 [file="JsonConverter.cs", label="Newtonsoft.Json.JsonConverter", span=""];
m19_0 [cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", file="JsonPropertyAttribute.cs", label="Entry Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", span="15-15"];
m19_1 [cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", color=green, community=0, file="JsonPropertyAttribute.cs", label="_propertyName = propertyName", prediction=28, span="17-17"];
m19_2 [cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", file="JsonPropertyAttribute.cs", label="Exit Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", span="15-15"];
m19_3 [file="JsonPropertyAttribute.cs", label="Newtonsoft.Json.JsonPropertyAttribute", span=""];
m21_284 [cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", span="748-748"];
m21_285 [cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", file="JsonSerializer.cs", label="InternalWriteWhitespace(ws)", span="750-750"];
m21_286 [cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", file="JsonSerializer.cs", label="_writer.Write(ws)", span="752-752"];
m21_287 [cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", span="748-748"];
m21_55 [cluster="Newtonsoft.Json.Linq.JPath.ParseIndexer(char)", file="JsonSerializer.cs", label="!indexerClosed", span="103-103"];
m21_227 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="JsonSerializer.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m21_28 [cluster="Newtonsoft.Json.Linq.JPath.ParseMain()", file="JsonSerializer.cs", label="Parts.Add(member)", span="53-53"];
m21_29 [cluster="Newtonsoft.Json.Linq.JPath.ParseMain()", color=green, community=0, file="JsonSerializer.cs", label="currentPartStartIndex = _currentIndex + 1", prediction=29, span="55-55"];
m21_30 [cluster="Newtonsoft.Json.Linq.JPath.ParseMain()", color=green, community=0, file="JsonSerializer.cs", label="followingIndexer = false", prediction=30, span="56-56"];
m21_31 [cluster="Newtonsoft.Json.Linq.JPath.ParseMain()", file="JsonSerializer.cs", label=followingIndexer, span="59-59"];
m21_127 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteRaw()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteRaw()", span="1680-1680"];
m21_179 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", span="527-527"];
m21_180 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", color=green, community=0, file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.Boolean)", prediction=29, span="529-529"];
m21_181 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", color=green, community=0, file="JsonSerializer.cs", label="WriteValueInternal(JsonConvert.ToString(value), JsonToken.Boolean)", prediction=29, span="530-530"];
m21_182 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", span="527-527"];
m21_196 [cluster="Newtonsoft.Json.JsonConvert.ToString(char)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(char)", span="173-173"];
m21_40 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", color=green, community=0, file="JsonSerializer.cs", label="_writer.Write(''new '')", prediction=29, span="223-223"];
m21_42 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", color=green, community=0, file="JsonSerializer.cs", label="_writer.Write('(')", prediction=29, span="225-225"];
m21_43 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", span="219-219"];
m21_44 [cluster="System.IO.TextWriter.Write(string)", file="JsonSerializer.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m21_51 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializer.cs", label="JsonToken.EndConstructor", span="242-242"];
m21_56 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", span="254-254"];
m21_45 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="232-232"];
m21_59 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JsonSerializer.cs", label="_writer.Write(':')", span="260-260"];
m21_46 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializer.cs", label=token, span="234-234"];
m21_50 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializer.cs", label="_writer.Write(']')", span="240-240"];
m21_57 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JsonSerializer.cs", label="InternalWritePropertyName(name)", span="256-256"];
m21_47 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializer.cs", label="JsonToken.EndObject", span="236-236"];
m21_48 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializer.cs", label="_writer.Write('}')", span="237-237"];
m21_49 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializer.cs", label="JsonToken.EndArray", span="239-239"];
m21_53 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializer.cs", label="throw JsonWriterException.Create(this, ''Invalid JsonToken: '' + token, null);", span="246-246"];
m21_52 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializer.cs", label="_writer.Write(')')", span="243-243"];
m21_54 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="232-232"];
m21_58 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JsonSerializer.cs", label="WriteEscapedString(name, _quoteName)", span="258-258"];
m21_60 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", span="254-254"];
m21_61 [cluster="Newtonsoft.Json.JsonWriter.InternalWritePropertyName(string)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWritePropertyName(string)", span="1674-1674"];
m21_161 [cluster="Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="268-268"];
m21_192 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(char)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(char)", span="558-558"];
m21_193 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(char)", color=green, community=0, file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.String)", prediction=29, span="560-560"];
m21_194 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(char)", file="JsonSerializer.cs", label="WriteValueInternal(JsonConvert.ToString(value), JsonToken.String)", span="561-561"];
m21_195 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(char)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(char)", span="558-558"];
m21_25 [cluster="Newtonsoft.Json.Linq.JPath.ParseMain()", file="JsonSerializer.cs", label="'.'", span="49-49"];
m21_172 [cluster="Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="298-298"];
m21_63 [cluster="System.Convert.ToInt32(string, System.IFormatProvider)", file="JsonSerializer.cs", label="Entry System.Convert.ToInt32(string, System.IFormatProvider)", span="0-0"];
m21_64 [cluster="Newtonsoft.Json.Linq.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Linq.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", span="113-113"];
m21_66 [cluster="Newtonsoft.Json.Linq.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", file="JsonSerializer.cs", label=Parts, span="117-117"];
m21_67 [cluster="Newtonsoft.Json.Linq.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", file="JsonSerializer.cs", label="string propertyName = part as string", span="119-119"];
m21_68 [cluster="Newtonsoft.Json.Linq.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", file="JsonSerializer.cs", label="propertyName != null", span="120-120"];
m21_69 [cluster="Newtonsoft.Json.Linq.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", file="JsonSerializer.cs", label="JObject o = current as JObject", span="122-122"];
m21_70 [cluster="Newtonsoft.Json.Linq.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", file="JsonSerializer.cs", label="o != null", span="123-123"];
m21_71 [cluster="Newtonsoft.Json.Linq.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", file="JsonSerializer.cs", label="current = o[propertyName]", span="125-125"];
m21_72 [cluster="Newtonsoft.Json.Linq.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", file="JsonSerializer.cs", label="current == null && errorWhenNoMatch", span="127-127"];
m21_65 [cluster="Newtonsoft.Json.Linq.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", file="JsonSerializer.cs", label="JToken current = root", span="115-115"];
m21_73 [cluster="Newtonsoft.Json.Linq.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", file="JsonSerializer.cs", label="throw new Exception(''Property '{0}' does not exist on JObject.''.FormatWith(CultureInfo.InvariantCulture, propertyName));", span="128-128"];
m21_144 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", span="442-442"];
m21_145 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", color=green, community=0, file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.Integer)", prediction=29, span="444-444"];
m21_146 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", color=green, community=0, file="JsonSerializer.cs", label="WriteIntegerValue(value)", prediction=29, span="445-445"];
m21_147 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", span="442-442"];
m21_162 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", span="483-483"];
m21_166 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", color=green, community=0, file="JsonSerializer.cs", label="WriteValueInternal(JsonConvert.ToString(value.Value, FloatFormatHandling, QuoteChar, true), JsonToken.Float)", prediction=29, span="492-492"];
m21_165 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.Float)", span="491-491"];
m21_164 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JsonSerializer.cs", label="WriteNull()", span="487-487"];
m21_163 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JsonSerializer.cs", label="value == null", span="485-485"];
m21_167 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", span="483-483"];
m21_237 [cluster="Newtonsoft.Json.Utilities.Base64Encoder.Encode(byte[], int, int)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.Base64Encoder.Encode(byte[], int, int)", span="47-47"];
m21_184 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(short)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(short)", span="537-537"];
m21_185 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(short)", file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.Integer)", span="539-539"];
m21_186 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(short)", file="JsonSerializer.cs", label="WriteIntegerValue(value)", span="540-540"];
m21_187 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(short)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(short)", span="537-537"];
m21_128 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(string)", span="407-407"];
m21_129 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", color=green, community=0, file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.String)", prediction=29, span="409-409"];
m21_130 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonSerializer.cs", label="value == null", span="411-411"];
m21_132 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", color=green, community=0, file="JsonSerializer.cs", label="WriteEscapedString(value, true)", prediction=29, span="417-417"];
m21_131 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonSerializer.cs", label="WriteValueInternal(JsonConvert.Null, JsonToken.Null)", span="413-413"];
m21_133 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(string)", span="407-407"];
m21_239 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", span="648-648"];
m21_241 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", color=green, community=0, file="JsonSerializer.cs", label="string.IsNullOrEmpty(DateFormatString)", prediction=29, span="652-652"];
m21_240 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.Date)", span="650-650"];
m21_242 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", color=green, community=0, file="JsonSerializer.cs", label="EnsureWriteBuffer()", prediction=29, span="654-654"];
m21_248 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonSerializer.cs", label="_writer.Write(_quoteChar)", span="665-665"];
m21_243 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonSerializer.cs", label="int pos = 0", span="656-656"];
m21_250 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", color=green, community=0, file="JsonSerializer.cs", label="_writer.Write(_quoteChar)", prediction=29, span="667-667"];
m21_249 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonSerializer.cs", label="_writer.Write(value.ToString(DateFormatString, Culture))", span="666-666"];
m21_244 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonSerializer.cs", label="_writeBuffer[pos++] = _quoteChar", span="657-657"];
m21_245 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonSerializer.cs", label="pos = DateTimeUtils.WriteDateTimeString(_writeBuffer, pos, (DateFormatHandling == DateFormatHandling.IsoDateFormat) ? value.DateTime : value.UtcDateTime, value.Offset, DateTimeKind.Local, DateFormatHandling)", span="658-658"];
m21_246 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonSerializer.cs", label="_writeBuffer[pos++] = _quoteChar", span="659-659"];
m21_247 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonSerializer.cs", label="_writer.Write(_writeBuffer, 0, pos)", span="661-661"];
m21_251 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", span="648-648"];
m21_209 [cluster="Newtonsoft.Json.JsonConvert.ToString(decimal)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(decimal)", span="349-349"];
m21_26 [cluster="Newtonsoft.Json.Linq.JPath.ParseMain()", file="JsonSerializer.cs", label="_currentIndex > currentPartStartIndex", span="50-50"];
m21_74 [cluster="Newtonsoft.Json.Linq.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", file="JsonSerializer.cs", label=errorWhenNoMatch, span="132-132"];
m21_75 [cluster="Newtonsoft.Json.Linq.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", file="JsonSerializer.cs", label="throw new Exception(''Property '{0}' not valid on {1}.''.FormatWith(CultureInfo.InvariantCulture, propertyName, current.GetType().Name));", span="133-133"];
m21_76 [cluster="Newtonsoft.Json.Linq.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", file="JsonSerializer.cs", label="return null;", span="135-135"];
m21_270 [cluster="System.TimeSpan.ToString(string, System.IFormatProvider)", file="JsonSerializer.cs", label="Entry System.TimeSpan.ToString(string, System.IFormatProvider)", span="0-0"];
m21_277 [cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteComment(string)", span="735-735"];
m21_278 [cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JsonSerializer.cs", label="InternalWriteComment()", span="737-737"];
m21_279 [cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JsonSerializer.cs", label="_writer.Write(''/*'')", span="739-739"];
m21_280 [cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JsonSerializer.cs", label="_writer.Write(text)", span="740-740"];
m21_281 [cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JsonSerializer.cs", label="_writer.Write(''*/'')", span="741-741"];
m21_282 [cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteComment(string)", span="735-735"];
m21_152 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", span="463-463"];
m21_154 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", color=green, community=0, file="JsonSerializer.cs", label="WriteIntegerValue(value)", prediction=29, span="466-466"];
m21_153 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.Integer)", span="465-465"];
m21_155 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", span="463-463"];
m21_41 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", color=green, community=0, file="JsonSerializer.cs", label="_writer.Write(name)", prediction=29, span="224-224"];
m21_288 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", span="1697-1697"];
m21_97 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", file="JsonSerializer.cs", label="_writer.Write(',')", span="337-337"];
m21_238 [cluster="Newtonsoft.Json.Utilities.Base64Encoder.Flush()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.Base64Encoder.Flush()", span="112-112"];
m21_16 [cluster="Newtonsoft.Json.Linq.JPath.ParseMain()", file="JsonSerializer.cs", label="_currentIndex > currentPartStartIndex", span="36-36"];
m21_210 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", span="599-599"];
m21_211 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.Date)", span="601-601"];
m21_212 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonSerializer.cs", label="value = DateTimeUtils.EnsureDateTime(value, DateTimeZoneHandling)", span="602-602"];
m21_213 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonSerializer.cs", label="string.IsNullOrEmpty(DateFormatString)", span="604-604"];
m21_214 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonSerializer.cs", label="EnsureWriteBuffer()", span="606-606"];
m21_216 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonSerializer.cs", label="_writeBuffer[pos++] = _quoteChar", span="609-609"];
m21_217 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonSerializer.cs", label="pos = DateTimeUtils.WriteDateTimeString(_writeBuffer, pos, value, null, value.Kind, DateFormatHandling)", span="610-610"];
m21_218 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonSerializer.cs", label="_writeBuffer[pos++] = _quoteChar", span="611-611"];
m21_219 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonSerializer.cs", label="_writer.Write(_writeBuffer, 0, pos)", span="613-613"];
m21_220 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonSerializer.cs", label="_writer.Write(_quoteChar)", span="617-617"];
m21_221 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonSerializer.cs", label="_writer.Write(value.ToString(DateFormatString, Culture))", span="618-618"];
m21_222 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonSerializer.cs", label="_writer.Write(_quoteChar)", span="619-619"];
m21_215 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonSerializer.cs", label="int pos = 0", span="608-608"];
m21_223 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", span="599-599"];
m21_10 [cluster="Newtonsoft.Json.Linq.JPath.ParseMain()", file="JsonSerializer.cs", label="bool followingIndexer = false", span="26-26"];
m21_173 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", span="510-510"];
m21_174 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", color=green, community=0, file="JsonSerializer.cs", label="value == null", prediction=46, span="512-512"];
m21_175 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", color=green, community=0, file="JsonSerializer.cs", label="WriteNull()", prediction=29, span="514-514"];
m21_176 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", color=green, community=0, file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.Float)", prediction=29, span="518-518"];
m21_177 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", color=green, community=0, file="JsonSerializer.cs", label="WriteValueInternal(JsonConvert.ToString(value.Value, FloatFormatHandling, QuoteChar, true), JsonToken.Float)", prediction=29, span="519-519"];
m21_178 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", span="510-510"];
m21_168 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double)", span="500-500"];
m21_169 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.Float)", span="502-502"];
m21_170 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="JsonSerializer.cs", label="WriteValueInternal(JsonConvert.ToString(value, FloatFormatHandling, QuoteChar, false), JsonToken.Float)", span="503-503"];
m21_171 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(double)", span="500-500"];
m21_111 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", span="1691-1691"];
m21_38 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", span="219-219"];
m21_157 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float)", span="473-473"];
m21_158 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.Float)", span="475-475"];
m21_159 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="JsonSerializer.cs", label="WriteValueInternal(JsonConvert.ToString(value, FloatFormatHandling, QuoteChar, false), JsonToken.Float)", span="476-476"];
m21_160 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(float)", span="473-473"];
m21_11 [cluster="Newtonsoft.Json.Linq.JPath.ParseMain()", file="JsonSerializer.cs", label="_currentIndex < _expression.Length", span="28-28"];
m21_271 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", span="717-717"];
m21_273 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonSerializer.cs", label="WriteNull()", span="721-721"];
m21_274 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.String)", span="725-725"];
m21_275 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonSerializer.cs", label="WriteEscapedString(value.OriginalString, true)", span="726-726"];
m21_272 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonSerializer.cs", label="value == null", span="719-719"];
m21_276 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", span="717-717"];
m21_262 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", span="697-697"];
m21_263 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.String)", span="699-699"];
m21_266 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonSerializer.cs", label="_writer.Write(_quoteChar)", span="708-708"];
m21_267 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonSerializer.cs", label="_writer.Write(text)", span="709-709"];
m21_268 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonSerializer.cs", label="_writer.Write(_quoteChar)", span="710-710"];
m21_264 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonSerializer.cs", label="string text", span="701-701"];
m21_265 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonSerializer.cs", label="text = value.ToString(null, CultureInfo.InvariantCulture)", span="705-705"];
m21_269 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", span="697-697"];
m21_27 [cluster="Newtonsoft.Json.Linq.JPath.ParseMain()", file="JsonSerializer.cs", label="string member = _expression.Substring(currentPartStartIndex, _currentIndex - currentPartStartIndex)", span="52-52"];
m21_8 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", color=green, community=0, file="JsonSerializer.cs", label="UpdateCharEscapeFlags()", prediction=29, span="161-161"];
m21_9 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="148-148"];
m21_17 [cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Close()", span="175-175"];
m21_34 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="208-208"];
m21_35 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", color=green, community=0, file="JsonSerializer.cs", label="InternalWriteStart(JsonToken.StartArray, JsonContainerType.Array)", prediction=29, span="210-210"];
m21_12 [cluster="Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", span="299-299"];
m21_13 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="167-167"];
m21_19 [cluster="Newtonsoft.Json.JsonTextWriter.Close()", color=green, community=0, file="JsonSerializer.cs", label="_writeBuffer != null", prediction=29, span="179-179"];
m21_24 [cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.Close()", span="175-175"];
m21_32 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", span="1684-1684"];
m21_14 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonSerializer.cs", label="_writer.Flush()", span="169-169"];
m21_22 [cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JsonSerializer.cs", label="CloseOutput && _writer != null", span="185-185"];
m21_15 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.Flush()", span="167-167"];
m21_18 [cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JsonSerializer.cs", label="base.Close()", span="177-177"];
m21_20 [cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JsonSerializer.cs", label="BufferUtils.ReturnBuffer(_arrayPool, _writeBuffer)", span="181-181"];
m21_21 [cluster="Newtonsoft.Json.JsonTextWriter.Close()", color=green, community=0, file="JsonSerializer.cs", label="_writeBuffer = null", prediction=53, span="182-182"];
m21_23 [cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JsonSerializer.cs", label="_writer.Close()", span="188-188"];
m21_33 [cluster="System.IO.TextWriter.Write(char)", file="JsonSerializer.cs", label="Entry System.IO.TextWriter.Write(char)", span="0-0"];
m21_36 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", color=green, community=0, file="JsonSerializer.cs", label="_writer.Write('[')", prediction=29, span="212-212"];
m21_37 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="208-208"];
m21_99 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", span="343-343"];
m21_261 [cluster="System.Guid.ToString(string, System.IFormatProvider)", file="JsonSerializer.cs", label="Entry System.Guid.ToString(string, System.IFormatProvider)", span="0-0"];
m21_105 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(object)", span="359-359"];
m21_106 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JsonSerializer.cs", label="value is BigInteger", span="362-362"];
m21_109 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", color=green, community=0, file="JsonSerializer.cs", label="base.WriteValue(value)", prediction=29, span="370-370"];
m21_107 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", color=green, community=0, file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.Integer)", prediction=29, span="364-364"];
m21_108 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JsonSerializer.cs", label="WriteValueInternal(((BigInteger)value).ToString(CultureInfo.InvariantCulture), JsonToken.String)", span="365-365"];
m21_110 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(object)", span="359-359"];
m21_91 [cluster="Newtonsoft.Json.Linq.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", file="JsonSerializer.cs", label="current = c[index]", span="167-167"];
m21_115 [cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteNull()", span="377-377"];
m21_116 [cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", color=green, community=0, file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.Null)", prediction=29, span="379-379"];
m21_117 [cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="JsonSerializer.cs", label="WriteValueInternal(JsonConvert.Null, JsonToken.Null)", span="380-380"];
m21_118 [cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteNull()", span="377-377"];
m21_39 [cluster="System.Collections.Generic.List<T>.Add(T)", color=green, community=0, file="JsonSerializer.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", prediction=29, span="0-0"];
m21_253 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", span="676-676"];
m21_254 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.String)", span="678-678"];
m21_257 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonSerializer.cs", label="_writer.Write(_quoteChar)", span="688-688"];
m21_258 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonSerializer.cs", label="_writer.Write(text)", span="689-689"];
m21_259 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonSerializer.cs", label="_writer.Write(_quoteChar)", span="690-690"];
m21_255 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonSerializer.cs", label="string text = null", span="680-680"];
m21_256 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonSerializer.cs", label="text = value.ToString(''D'', CultureInfo.InvariantCulture)", span="683-683"];
m21_260 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", span="676-676"];
m21_139 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="431-431"];
m21_141 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", color=green, community=0, file="JsonSerializer.cs", label="WriteIntegerValue(value)", prediction=29, span="434-434"];
m21_140 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", color=green, community=0, file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.Integer)", prediction=29, span="433-433"];
m21_142 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="431-431"];
m21_310 [cluster="Newtonsoft.Json.Utilities.MathUtils.IntLength(ulong)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.IntLength(ulong)", span="33-33"];
m21_79 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", span="115-115"];
m21_77 [cluster="Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", file="JsonSerializer.cs", label="_charEscapeFlags = JavaScriptUtils.GetCharEscapeFlags(StringEscapeHandling, _quoteChar)", span="301-301"];
m21_96 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", span="335-335"];
m21_201 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", span="579-579"];
m21_202 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.Integer)", span="581-581"];
m21_203 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", file="JsonSerializer.cs", label="WriteIntegerValue(value)", span="582-582"];
m21_204 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", span="579-579"];
m21_62 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", span="421-421"];
m21_205 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="589-589"];
m21_206 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.Float)", span="591-591"];
m21_207 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonSerializer.cs", label="WriteValueInternal(JsonConvert.ToString(value), JsonToken.Float)", span="592-592"];
m21_208 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="589-589"];
m21_148 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(long)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(long)", span="452-452"];
m21_150 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(long)", color=green, community=0, file="JsonSerializer.cs", label="WriteIntegerValue(value)", prediction=29, span="455-455"];
m21_149 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(long)", file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.Integer)", span="454-454"];
m21_151 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(long)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(long)", span="452-452"];
m21_156 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", span="783-783"];
m21_301 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonSerializer.cs", label="_writer.Write((char)('0' + uvalue))", span="787-787"];
m21_302 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonSerializer.cs", label="EnsureWriteBuffer()", span="791-791"];
m21_305 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonSerializer.cs", label="_writeBuffer[totalLength - ++length] = (char)('0' + (uvalue % 10))", span="798-798"];
m21_308 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonSerializer.cs", label="_writer.Write(_writeBuffer, 0, length)", span="802-802"];
m21_300 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonSerializer.cs", label="uvalue <= 9", span="785-785"];
m21_303 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonSerializer.cs", label="int totalLength = MathUtils.IntLength(uvalue)", span="793-793"];
m21_306 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonSerializer.cs", label="uvalue /= 10", span="799-799"];
m21_304 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonSerializer.cs", label="int length = 0", span="794-794"];
m21_307 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonSerializer.cs", label="uvalue != 0", span="800-800"];
m21_309 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", span="783-783"];
m21_112 [cluster="Unk.ToString", file="JsonSerializer.cs", label="Entry Unk.ToString", span=""];
m21_0 [cluster="Newtonsoft.Json.Linq.JPath.JPath(string)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Linq.JPath.JPath(string)", span="14-14"];
m21_7 [cluster="System.Collections.Generic.List<T>.List()", color=green, community=0, file="JsonSerializer.cs", label="Entry System.Collections.Generic.List<T>.List()", prediction=29, span="0-0"];
m21_6 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializer.cs", label="_indentChar = ' '", span="158-158"];
m21_3 [cluster="Newtonsoft.Json.Linq.JPath.JPath(string)", file="JsonSerializer.cs", label="Parts = new List<object>()", span="18-18"];
m21_4 [cluster="Newtonsoft.Json.Linq.JPath.JPath(string)", file="JsonSerializer.cs", label="ParseMain()", span="20-20"];
m21_5 [cluster="Newtonsoft.Json.Linq.JPath.JPath(string)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.Linq.JPath.JPath(string)", span="14-14"];
m21_2 [cluster="Newtonsoft.Json.Linq.JPath.JPath(string)", file="JsonSerializer.cs", label="_expression = expression", span="17-17"];
m21_1 [cluster="Newtonsoft.Json.Linq.JPath.JPath(string)", file="JsonSerializer.cs", label="ValidationUtils.ArgumentNotNull(expression, ''expression'')", span="16-16"];
m21_98 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", span="335-335"];
m21_225 [cluster="string.IsNullOrEmpty(string)", file="JsonSerializer.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m21_224 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="77-77"];
m21_143 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", span="764-764"];
m21_294 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonSerializer.cs", label="_writer.Write((char)('0' + value))", span="768-768"];
m21_297 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonSerializer.cs", label="_writer.Write('-')", span="776-776"];
m21_298 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonSerializer.cs", label="WriteIntegerValue(uvalue)", span="779-779"];
m21_293 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonSerializer.cs", label="value >= 0 && value <= 9", span="766-766"];
m21_295 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonSerializer.cs", label="ulong uvalue = (value < 0) ? (ulong)-value : (ulong)value", span="772-772"];
m21_296 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonSerializer.cs", label="value < 0", span="774-774"];
m21_299 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", span="764-764"];
m21_123 [cluster="Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", span="396-396"];
m21_124 [cluster="Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", color=green, community=0, file="JsonSerializer.cs", label="InternalWriteRaw()", prediction=29, span="398-398"];
m21_125 [cluster="Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", color=green, community=0, file="JsonSerializer.cs", label="_writer.Write(json)", prediction=29, span="400-400"];
m21_126 [cluster="Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", span="396-396"];
m21_197 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", span="568-568"];
m21_198 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.Integer)", span="570-570"];
m21_199 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", file="JsonSerializer.cs", label="WriteIntegerValue(value)", span="571-571"];
m21_200 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", span="568-568"];
m21_283 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteComment()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteComment()", span="1708-1708"];
m21_183 [cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(bool)", span="163-163"];
m21_134 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", color=green, community=0, file="JsonSerializer.cs", label="EnsureWriteBuffer()", prediction=29, span="423-423"];
m21_135 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", color=green, community=0, file="JsonSerializer.cs", label="JavaScriptUtils.WriteEscapedJavaScriptString(_writer, value, _quoteChar, quote, _charEscapeFlags, StringEscapeHandling, _arrayPool, ref _writeBuffer)", prediction=29, span="424-424"];
m21_136 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", span="421-421"];
m21_113 [cluster="Unk.WriteValueInternal", file="JsonSerializer.cs", label="Entry Unk.WriteValueInternal", span=""];
m21_292 [cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="43-43"];
m21_114 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1396-1396"];
m21_252 [cluster="System.DateTimeOffset.ToString(string, System.IFormatProvider)", file="JsonSerializer.cs", label="Entry System.DateTimeOffset.ToString(string, System.IFormatProvider)", span="0-0"];
m21_226 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", span="630-630"];
m21_100 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", file="JsonSerializer.cs", label="Newtonsoft.Json.Linq.JPath", span=""];
m21_101 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", span="343-343"];
m21_119 [cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefined()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteUndefined()", span="386-386"];
m21_120 [cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefined()", color=green, community=0, file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.Undefined)", prediction=29, span="388-388"];
m21_121 [cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefined()", color=green, community=0, file="JsonSerializer.cs", label="WriteValueInternal(JsonConvert.Undefined, JsonToken.Undefined)", prediction=29, span="389-389"];
m21_122 [cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefined()", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteUndefined()", span="386-386"];
m21_228 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", span="627-627"];
m21_230 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonSerializer.cs", label="WriteNull()", span="631-631"];
m21_229 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", color=green, community=0, file="JsonSerializer.cs", label="value == null", prediction=69, span="629-629"];
m21_231 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.Bytes)", span="635-635"];
m21_232 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonSerializer.cs", label="_writer.Write(_quoteChar)", span="636-636"];
m21_233 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonSerializer.cs", label="Base64Encoder.Encode(value, 0, value.Length)", span="637-637"];
m21_234 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonSerializer.cs", label="Base64Encoder.Flush()", span="638-638"];
m21_235 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonSerializer.cs", label="_writer.Write(_quoteChar)", span="639-639"];
m21_236 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", span="627-627"];
m21_138 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", span="148-148"];
m21_188 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", span="548-548"];
m21_189 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", file="JsonSerializer.cs", label="InternalWriteValue(JsonToken.Integer)", span="550-550"];
m21_190 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", file="JsonSerializer.cs", label="WriteIntegerValue(value)", span="551-551"];
m21_191 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", span="548-548"];
m21_102 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", span="348-348"];
m21_103 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", color=green, community=0, file="JsonSerializer.cs", label="_writer.Write(value)", prediction=29, span="350-350"];
m21_104 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", span="348-348"];
m21_137 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", span="755-755"];
m21_289 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", color=green, community=0, file="JsonSerializer.cs", label="_writeBuffer == null", prediction=29, span="757-757"];
m21_290 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", color=green, community=0, file="JsonSerializer.cs", label="_writeBuffer = BufferUtils.RentBuffer(_arrayPool, 35)", prediction=72, span="760-760"];
m21_291 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", span="755-755"];
m21_311 [file="JsonSerializer.cs", label="Newtonsoft.Json.JsonTextWriter", span=""];
m22_835 [cluster="char.ToString()", file="JsonSerializerTest.cs", label="Entry char.ToString()", span="0-0"];
m22_54 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JTokenWriter()", span="104-104"];
m22_1018 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToString(System.IFormatProvider)", span="1691-1691"];
m22_1019 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="1693-1693"];
m22_1020 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToString(System.IFormatProvider)", span="1691-1691"];
m22_67 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", prediction=73, span="124-124"];
m22_1009 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToInt64(System.IFormatProvider)", span="1676-1676"];
m22_1010 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="1678-1678"];
m22_1011 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToInt64(System.IFormatProvider)", span="1676-1676"];
m22_41 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonSerializerTest.cs", label="var jsonWriter = new JsonTextWriter(streamWriter)\r\n            {\r\n                CloseOutput = true,\r\n                Indentation = 2,\r\n                Formatting = Formatting.Indented\r\n            }", span="108-113"];
m22_43 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''prop'')", span="116-116"];
m22_30 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, (string)root[8])", span="94-94"];
m22_53 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", span="102-102"];
m22_181 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", span="1135-1135"];
m22_189 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", span="262-262"];
m22_190 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="264-264"];
m22_191 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonSerializerTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="265-265"];
m22_196 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonSerializerTest.cs", label="string json = sw.ToString()", span="274-274"];
m22_192 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonSerializerTest.cs", label="char? value = 'c'", span="267-267"];
m22_193 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", span="269-269"];
m22_194 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((object)value)", span="270-270"];
m22_195 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndArray()", span="271-271"];
m22_197 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonSerializerTest.cs", label="string expected = @''[''''c'''']''", span="275-275"];
m22_198 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, json)", span="277-277"];
m22_199 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", span="262-262"];
m22_472 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="357-357"];
m22_901 [cluster="System.IO.TextWriter.Write(char[], int, int)", file="JsonSerializerTest.cs", label="Entry System.IO.TextWriter.Write(char[], int, int)", span="0-0"];
m22_154 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((ulong?)1)", span="233-233"];
m22_273 [cluster="Newtonsoft.Json.JsonWriter.Close()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.Close()", span="398-398"];
m22_121 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JsonSerializerTest.cs", label="Assert.AreEqual(o, jsonWriter.CurrentToken)", span="194-194"];
m22_52 [cluster="Unk.AreEqual", file="JsonSerializerTest.cs", label="Entry Unk.AreEqual", span=""];
m22_163 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((DateTimeOffset?)null)", span="243-243"];
m22_488 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="905-905"];
m22_820 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonSerializerTest.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m22_936 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="522-522"];
m22_42 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartObject()", span="115-115"];
m22_84 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="425-425"];
m22_187 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", span="1314-1314"];
m22_126 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", span="199-199"];
m22_274 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", span="397-397"];
m22_275 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="399-399"];
m22_276 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="400-400"];
m22_294 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="string result = sb.ToString()", span="443-443"];
m22_277 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="402-402"];
m22_278 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="404-404"];
m22_279 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartObject()", span="406-406"];
m22_280 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''CPU'')", span="407-407"];
m22_281 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''Intel'')", span="408-408"];
m22_282 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''PSU'')", span="409-409"];
m22_283 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''500W'')", span="410-410"];
m22_284 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''Drives'')", span="411-411"];
m22_285 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", span="412-412"];
m22_286 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''DVD read/writer'')", span="413-413"];
m22_287 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteComment(''(broken)'')", span="414-414"];
m22_288 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''500 gigabyte hard drive'')", span="415-415"];
m22_289 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''200 gigabype hard drive'')", span="416-416"];
m22_290 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEnd()", span="417-417"];
m22_291 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndObject()", span="418-418"];
m22_292 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="419-419"];
m22_293 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="string expected = @''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabype hard drive''''\r\n  ]\r\n}''", span="433-442"];
m22_295 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, result)", span="445-445"];
m22_296 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", span="397-397"];
m22_741 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", span="1157-1157"];
m22_742 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="1159-1159"];
m22_743 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonSerializerTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeHtml\r\n            }", span="1160-1163"];
m22_746 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonSerializerTest.cs", label="string json = sw.ToString()", span="1169-1169"];
m22_744 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonSerializerTest.cs", label="string script = @''<script type=''''text/javascript''''>alert('hi');</script>''", span="1165-1165"];
m22_745 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonSerializerTest.cs", label="writer.WriteValue(script)", span="1167-1167"];
m22_749 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(script, reader.ReadAsString())", span="1175-1175"];
m22_747 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''\u003cscript type=\u0022text/javascript\u0022\u003ealert(\u0027hi\u0027);\u003c/script\u003e'''''', json)", span="1171-1171"];
m22_748 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1173-1173"];
m22_750 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", span="1157-1157"];
m22_94 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''CPU'')", prediction=74, span="156-156"];
m22_979 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonSerializerTest.cs", label="_value = value", span="1628-1628"];
m22_980 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1626-1626"];
m22_55 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="106-106"];
m22_346 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float)", span="964-964"];
m22_733 [cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.BuildStateArray()", span="78-78"];
m22_530 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", span="823-823"];
m22_531 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="825-825"];
m22_532 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="826-826"];
m22_546 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonSerializerTest.cs", label="Console.WriteLine(sb.ToString())", span="846-846"];
m22_547 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  2147483647,\r\n  -2147483648,\r\n  0,\r\n  0,\r\n  9,\r\n  9,\r\n  9223372036854775807,\r\n  -9223372036854775808,\r\n  18446744073709551615,\r\n  0\r\n]'', sb.ToString())", span="848-859"];
m22_533 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw) { Formatting = Formatting.Indented }", span="828-828"];
m22_534 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", span="830-830"];
m22_535 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(int.MaxValue)", span="832-832"];
m22_536 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(int.MinValue)", span="833-833"];
m22_537 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(0)", span="834-834"];
m22_538 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(-0)", span="835-835"];
m22_539 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(9L)", span="836-836"];
m22_540 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(9UL)", span="837-837"];
m22_541 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(long.MaxValue)", span="838-838"];
m22_542 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(long.MinValue)", span="839-839"];
m22_543 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(ulong.MaxValue)", span="840-840"];
m22_544 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(ulong.MinValue)", span="841-841"];
m22_545 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndArray()", span="843-843"];
m22_548 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", span="823-823"];
m22_176 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(short?)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(short?)", span="1199-1199"];
m22_923 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", span="1603-1603"];
m22_971 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", file="JsonSerializerTest.cs", label="SetWriteState(JsonToken.EndObject, null)", span="1605-1605"];
m22_972 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", span="1603-1603"];
m22_38 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray()", span="135-135"];
m22_39 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(char)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(char)", span="363-363"];
m22_40 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", span="260-260"];
m22_46 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteUndefined()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteUndefined()", span="230-230"];
m22_44 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(decimal)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(decimal)", span="400-400"];
m22_45 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteNull()", span="221-221"];
m22_47 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte[])", span="433-433"];
m22_48 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381"];
m22_49 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="301-301"];
m22_87 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JsonSerializerTest.cs", label="JTokenWriter jsonWriter = new JTokenWriter()", prediction=74, span="145-145"];
m22_88 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", prediction=74, span="147-147"];
m22_89 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(null, jsonWriter.CurrentToken)", prediction=74, span="148-148"];
m22_91 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", prediction=74, span="151-151"];
m22_90 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JsonSerializerTest.cs", label="jsonWriter.WriteStartObject()", prediction=74, span="150-150"];
m22_92 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonWriter.Token, jsonWriter.CurrentToken)", prediction=74, span="152-152"];
m22_920 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", span="1596-1596"];
m22_968 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="JsonSerializerTest.cs", label="SetWriteState(JsonToken.StartObject, null)", span="1598-1598"];
m22_969 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="JsonSerializerTest.cs", label="_writer.Write(''{{{'')", span="1600-1600"];
m22_970 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", span="1596-1596"];
m22_183 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", span="483-483"];
m22_432 [cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", span="1431-1431"];
m22_751 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="402-402"];
m22_804 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", span="1272-1272"];
m22_805 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonSerializerTest.cs", label="CultureInfo culture = new CultureInfo(''en-NZ'')", span="1274-1274"];
m22_806 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonSerializerTest.cs", label="culture.DateTimeFormat.AMDesignator = ''a.m.''", span="1275-1275"];
m22_807 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonSerializerTest.cs", label="culture.DateTimeFormat.PMDesignator = ''p.m.''", span="1276-1276"];
m22_812 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonSerializerTest.cs", label="writer.Culture = culture", span="1282-1282"];
m22_808 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="1278-1278"];
m22_809 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonSerializerTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1279-1279"];
m22_818 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  '2000 a.m.',\r\n  '2000 a.m.'\r\n]'', sw.ToString())", span="1292-1295"];
m22_810 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonSerializerTest.cs", label="writer.Formatting = Formatting.Indented", span="1280-1280"];
m22_811 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonSerializerTest.cs", label="writer.DateFormatString = ''yyyy tt''", span="1281-1281"];
m22_813 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonSerializerTest.cs", label="writer.QuoteChar = '\''", span="1283-1283"];
m22_814 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonSerializerTest.cs", label="writer.WriteStartArray()", span="1285-1285"];
m22_815 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonSerializerTest.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1287-1287"];
m22_816 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonSerializerTest.cs", label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1288-1288"];
m22_817 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonSerializerTest.cs", label="writer.WriteEnd()", span="1290-1290"];
m22_819 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", span="1272-1272"];
m22_186 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m22_1029 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToUInt32(System.IFormatProvider)", span="1711-1711"];
m22_1030 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="1713-1713"];
m22_1031 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToUInt32(System.IFormatProvider)", span="1711-1711"];
m22_164 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((DateTimeOffset?)new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero))", span="244-244"];
m22_169 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, json)", span="258-258"];
m22_165 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndArray()", span="246-246"];
m22_168 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonSerializerTest.cs", label="expected = @''[null,''''c'''',null,true,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1.1,null,1.1,null,1.1,null,''''1970-01-01T00:00:00Z'''',null,''''1970-01-01T00:00:00+00:00'''']''", span="253-253"];
m22_166 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonSerializerTest.cs", label="string json = sw.ToString()", span="249-249"];
m22_167 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonSerializerTest.cs", label="string expected", span="250-250"];
m22_170 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", span="208-208"];
m22_347 [cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="393-393"];
m22_375 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", span="576-576"];
m22_376 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="578-578"];
m22_377 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="579-579"];
m22_391 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonSerializerTest.cs", label="string result = sb.ToString()", span="606-606"];
m22_378 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="581-581"];
m22_379 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonSerializerTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="583-583"];
m22_380 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonSerializerTest.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.String", span="584-584"];
m22_381 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", span="586-586"];
m22_382 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(double.NaN)", span="587-587"];
m22_383 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(double.PositiveInfinity)", span="588-588"];
m22_384 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(double.NegativeInfinity)", span="589-589"];
m22_385 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(float.NaN)", span="590-590"];
m22_386 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(float.PositiveInfinity)", span="591-591"];
m22_387 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(float.NegativeInfinity)", span="592-592"];
m22_388 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndArray()", span="593-593"];
m22_389 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonSerializerTest.cs", label="jsonWriter.Flush()", span="595-595"];
m22_390 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonSerializerTest.cs", label="string expected = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity'''',\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="598-605"];
m22_392 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, result)", span="608-608"];
m22_393 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", span="576-576"];
m22_96 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(o.Property(''CPU''), jsonWriter.CurrentToken)", prediction=74, span="158-158"];
m22_31 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''This is a string.'', (string)root[9])", span="95-95"];
m22_1015 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToSingle(System.IFormatProvider)", span="1686-1686"];
m22_1016 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="1688-1688"];
m22_1017 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToSingle(System.IFormatProvider)", span="1686-1686"];
m22_1012 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToSByte(System.IFormatProvider)", span="1681-1681"];
m22_1013 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="1683-1683"];
m22_1014 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToSByte(System.IFormatProvider)", span="1681-1681"];
m22_34 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(data, (byte[])root[12])", span="98-98"];
m22_802 [cluster="System.Uri.Uri(string)", file="JsonSerializerTest.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m22_997 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToDecimal(System.IFormatProvider)", span="1656-1656"];
m22_998 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="1658-1658"];
m22_999 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToDecimal(System.IFormatProvider)", span="1656-1656"];
m22_50 [cluster="System.IO.MemoryStream.MemoryStream()", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m22_212 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", span="296-296"];
m22_213 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="298-298"];
m22_214 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="299-299"];
m22_223 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonSerializerTest.cs", label="string result = sb.ToString()", span="312-312"];
m22_215 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="301-301"];
m22_216 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", span="303-303"];
m22_217 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(@''''''These pretzels are making me thirsty!'''''')", span="304-304"];
m22_218 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''Jeff's house was burninated.'')", span="305-305"];
m22_219 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''1. You don't talk about fight club.\r\n2. You don't talk about fight club.'')", span="306-306"];
m22_220 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''35% of\t statistics\n are made\r up.'')", span="307-307"];
m22_221 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndArray()", span="308-308"];
m22_222 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonSerializerTest.cs", label="string expected = @''[''''\''''These pretzels are making me thirsty!\'''''''',''''Jeff's house was burninated.'''',''''1. You don't talk about fight club.\r\n2. You don't talk about fight club.'''',''''35% of\t statistics\n are made\r up.'''']''", span="311-311"];
m22_224 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, result)", span="314-314"];
m22_225 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", span="296-296"];
m22_449 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", span="703-703"];
m22_450 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="705-705"];
m22_451 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="706-706"];
m22_458 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonSerializerTest.cs", label="string result = sb.ToString()", span="718-718"];
m22_452 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="708-708"];
m22_453 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonSerializerTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="710-710"];
m22_454 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartObject()", span="712-712"];
m22_455 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonSerializerTest.cs", label="jsonWriter.WriteRaw(@''''''PropertyName'''':[1,2,3,4,5]'')", span="713-713"];
m22_456 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEnd()", span="714-714"];
m22_457 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonSerializerTest.cs", label="string expected = @''{''''PropertyName'''':[1,2,3,4,5]}''", span="717-717"];
m22_459 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, result)", span="720-720"];
m22_460 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", span="703-703"];
m22_800 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", span="648-648"];
m22_565 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken, object)", span="508-508"];
m22_549 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="945-945"];
m22_550 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong)", span="955-955"];
m22_904 [cluster="System.IO.TextWriter.Write(char[])", file="JsonSerializerTest.cs", label="Entry System.IO.TextWriter.Write(char[])", span="0-0"];
m22_935 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="397-397"];
m22_963 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m22_33 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, ((JValue)root[11]).Value)", span="97-97"];
m22_473 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="483-483"];
m22_51 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream, System.Text.Encoding)", file="JsonSerializerTest.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream, System.Text.Encoding)", span="0-0"];
m22_28 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0.000000000000000001d, (double)root[6])", span="92-92"];
m22_650 [cluster="System.Convert.FromBase64String(string)", file="JsonSerializerTest.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m22_68 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", color=green, community=0, file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(new BigInteger(123))", prediction=73, span="127-127"];
m22_649 [cluster="string.Trim(params char[])", file="JsonSerializerTest.cs", label="Entry string.Trim(params char[])", span="0-0"];
m22_174 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte?)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte?)", span="1248-1248"];
m22_821 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", span="1300-1300"];
m22_822 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerTest.cs", label="char c = (char)0", span="1302-1302"];
m22_823 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerTest.cs", label="StringWriter swNew = new StringWriter()", span="1306-1306"];
m22_825 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerTest.cs", label="JavaScriptUtils.WriteEscapedJavaScriptString(swNew, c.ToString(), '''', true, JavaScriptUtils.DoubleQuoteCharEscapeFlags, StringEscapeHandling.Default, null, ref buffer)", span="1308-1308"];
m22_827 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerTest.cs", label="WriteEscapedJavaScriptStringOld(swOld, c.ToString(), '''', true)", span="1311-1311"];
m22_831 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerTest.cs", label="throw new Exception(''Difference for char '{0}' (value {1}). Old text: {2}, New text: {3}''.FormatWith(CultureInfo.InvariantCulture, c, (int)c, oldText, newText));", span="1318-1318"];
m22_832 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerTest.cs", label="c++", span="1321-1321"];
m22_824 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerTest.cs", label="char[] buffer = null", span="1307-1307"];
m22_828 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerTest.cs", label="string newText = swNew.ToString()", span="1313-1313"];
m22_826 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerTest.cs", label="StringWriter swOld = new StringWriter()", span="1310-1310"];
m22_829 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerTest.cs", label="string oldText = swOld.ToString()", span="1314-1314"];
m22_830 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerTest.cs", label="newText != oldText", span="1316-1316"];
m22_833 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerTest.cs", label="c != char.MaxValue", span="1322-1322"];
m22_834 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", span="1300-1300"];
m22_184 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", span="1281-1281"];
m22_964 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m22_136 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((char?)'c')", span="215-215"];
m22_142 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((sbyte?)1)", span="221-221"];
m22_143 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((short?)null)", span="222-222"];
m22_139 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((byte?)null)", span="218-218"];
m22_137 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((bool?)null)", span="216-216"];
m22_141 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((sbyte?)null)", span="220-220"];
m22_144 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((short?)1)", span="223-223"];
m22_138 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((bool?)true)", span="217-217"];
m22_140 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((byte?)1)", span="219-219"];
m22_145 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((ushort?)null)", span="224-224"];
m22_182 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", span="510-510"];
m22_131 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  /*fail*/]'', writer.Token.ToString())", span="207-208"];
m22_132 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", span="199-199"];
m22_133 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteComment(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteComment(string)", span="250-250"];
m22_134 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410"];
m22_135 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="331-331"];
m22_146 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", span="233-233"];
m22_147 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JsonSerializerTest.cs", label="JTokenWriter writer = new JTokenWriter()", span="235-235"];
m22_148 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JsonSerializerTest.cs", label="writer.WriteStartArray()", span="237-237"];
m22_149 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JsonSerializerTest.cs", label="writer.WriteRaw(''fail'')", span="238-238"];
m22_150 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JsonSerializerTest.cs", label="writer.WriteRaw(''fail'')", span="239-239"];
m22_151 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JsonSerializerTest.cs", label="writer.WriteEndArray()", span="240-240"];
m22_152 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  fail,\r\n  fail\r\n]'', writer.Token.ToString())", span="245-248"];
m22_153 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", span="233-233"];
m22_155 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", span="252-252"];
m22_156 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="JTokenWriter writer = new JTokenWriter()", span="254-254"];
m22_157 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="writer.WriteStartArray()", span="256-256"];
m22_158 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="writer.WriteRawValue(''fail'')", span="257-257"];
m22_159 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="writer.WriteRawValue(''fail'')", span="258-258"];
m22_160 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="writer.WriteEndArray()", span="259-259"];
m22_161 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  fail,\r\n  fail\r\n]'', writer.Token.ToString())", span="261-264"];
m22_162 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", span="252-252"];
m22_414 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double)", span="500-500"];
m22_86 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", span="143-143"];
m22_415 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float)", span="473-473"];
m22_651 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", span="1010-1010"];
m22_652 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="1012-1012"];
m22_653 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="1013-1013"];
m22_667 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonSerializerTest.cs", label="string result = sb.ToString()", span="1039-1039"];
m22_654 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonSerializerTest.cs", label="string text = ''Hello world.''", span="1015-1015"];
m22_656 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonSerializerTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="1018-1018"];
m22_655 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonSerializerTest.cs", label="byte[] data = Encoding.UTF8.GetBytes(text)", span="1016-1016"];
m22_660 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(data)", span="1024-1024"];
m22_661 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(data)", span="1025-1025"];
m22_662 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((object)data)", span="1026-1026"];
m22_657 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonSerializerTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="1020-1020"];
m22_658 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="1021-1021"];
m22_659 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", span="1023-1023"];
m22_663 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((byte[])null)", span="1027-1027"];
m22_664 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((Uri)null)", span="1028-1028"];
m22_665 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndArray()", span="1029-1029"];
m22_666 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonSerializerTest.cs", label="string expected = @''[\r\n  ''''SGVsbG8gd29ybGQu'''',\r\n  ''''SGVsbG8gd29ybGQu'''',\r\n  ''''SGVsbG8gd29ybGQu'''',\r\n  null,\r\n  null\r\n]''", span="1032-1038"];
m22_668 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, result)", span="1041-1041"];
m22_669 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", span="1010-1010"];
m22_670 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", span="717-717"];
m22_801 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", span="697-697"];
m22_978 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="232-232"];
m22_564 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken)", span="517-517"];
m22_128 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="JsonSerializerTest.cs", label="writer.WriteStartArray()", span="203-203"];
m22_173 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool?)", span="1183-1183"];
m22_602 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", span="936-936"];
m22_603 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="938-938"];
m22_604 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="939-939"];
m22_628 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="string result = sb.ToString()", span="977-977"];
m22_605 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="941-941"];
m22_606 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="943-943"];
m22_607 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="944-944"];
m22_608 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="946-946"];
m22_609 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="jsonWriter.Indentation = 5", span="948-948"];
m22_610 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, jsonWriter.Indentation)", span="949-949"];
m22_611 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="jsonWriter.IndentChar = '_'", span="950-950"];
m22_612 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="Assert.AreEqual('_', jsonWriter.IndentChar)", span="951-951"];
m22_613 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="jsonWriter.QuoteName = true", span="952-952"];
m22_614 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, jsonWriter.QuoteName)", span="953-953"];
m22_615 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="jsonWriter.QuoteChar = '\''", span="954-954"];
m22_616 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="Assert.AreEqual('\'', jsonWriter.QuoteChar)", span="955-955"];
m22_617 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartObject()", span="957-957"];
m22_618 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''propertyName'')", span="959-959"];
m22_619 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(double.NaN)", span="960-960"];
m22_620 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="jsonWriter.IndentChar = '?'", span="962-962"];
m22_621 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="Assert.AreEqual('?', jsonWriter.IndentChar)", span="963-963"];
m22_622 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="jsonWriter.Indentation = 6", span="964-964"];
m22_623 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(6, jsonWriter.Indentation)", span="965-965"];
m22_624 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''prop2'')", span="967-967"];
m22_625 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(123)", span="968-968"];
m22_626 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndObject()", span="970-970"];
m22_627 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="string expected = @''{\r\n_____'propertyName': NaN,\r\n??????'prop2': 123\r\n}''", span="973-976"];
m22_629 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, result)", span="979-979"];
m22_630 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", span="936-936"];
m22_82 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", span="147-147"];
m22_180 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long?)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long?)", span="1118-1118"];
m22_394 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", span="612-612"];
m22_395 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="614-614"];
m22_396 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="615-615"];
m22_411 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonSerializerTest.cs", label="string result = sb.ToString()", span="643-643"];
m22_397 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonSerializerTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="617-617"];
m22_398 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonSerializerTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="619-619"];
m22_399 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonSerializerTest.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.String", span="620-620"];
m22_400 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonSerializerTest.cs", label="jsonWriter.QuoteChar = '\''", span="621-621"];
m22_401 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", span="623-623"];
m22_402 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(double.NaN)", span="624-624"];
m22_403 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(double.PositiveInfinity)", span="625-625"];
m22_404 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(double.NegativeInfinity)", span="626-626"];
m22_405 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(float.NaN)", span="627-627"];
m22_406 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(float.PositiveInfinity)", span="628-628"];
m22_407 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(float.NegativeInfinity)", span="629-629"];
m22_408 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndArray()", span="630-630"];
m22_409 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonSerializerTest.cs", label="jsonWriter.Flush()", span="632-632"];
m22_410 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonSerializerTest.cs", label="string expected = @''[\r\n  'NaN',\r\n  'Infinity',\r\n  '-Infinity',\r\n  'NaN',\r\n  'Infinity',\r\n  '-Infinity'\r\n]''", span="635-642"];
m22_412 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, result)", span="645-645"];
m22_413 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", span="612-612"];
m22_470 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m22_962 [cluster="string.String(char[])", file="JsonSerializerTest.cs", label="Entry string.String(char[])", span="0-0"];
m22_947 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", span="493-493"];
m22_837 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", span="1327-1327"];
m22_840 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label=appendDelimiters, span="1330-1330"];
m22_841 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="writer.Write(delimiter)", span="1332-1332"];
m22_842 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="s != null", span="1335-1335"];
m22_847 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="i < s.Length", span="1341-1341"];
m22_848 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="var c = s[i]", span="1343-1343"];
m22_849 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="c >= ' ' && c < 128 && c != '\\' && c != delimiter", span="1346-1346"];
m22_883 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="chars = s.ToCharArray()", span="1419-1419"];
m22_884 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="writer.Write(chars, lastWritePosition, i - lastWritePosition)", span="1423-1423"];
m22_887 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="writer.Write(escapedValue)", span="1429-1429"];
m22_888 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="writer.Write(unicodeBuffer)", span="1433-1433"];
m22_891 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="writer.Write(s)", span="1440-1440"];
m22_893 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="chars = s.ToCharArray()", span="1446-1446"];
m22_894 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="writer.Write(chars, lastWritePosition, s.Length - lastWritePosition)", span="1450-1450"];
m22_895 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label=appendDelimiters, span="1455-1455"];
m22_896 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="writer.Write(delimiter)", span="1457-1457"];
m22_843 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="char[] chars = null", span="1337-1337"];
m22_844 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="char[] unicodeBuffer = null", span="1338-1338"];
m22_882 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="chars == null", span="1417-1417"];
m22_892 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="chars == null", span="1444-1444"];
m22_845 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="int lastWritePosition = 0", span="1339-1339"];
m22_875 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="unicodeBuffer == null", span="1393-1393"];
m22_877 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="StringUtils.ToCharAsUnicode(c, unicodeBuffer)", span="1398-1398"];
m22_846 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="int i = 0", span="1341-1341"];
m22_881 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="i > lastWritePosition", span="1415-1415"];
m22_890 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="lastWritePosition == 0", span="1437-1437"];
m22_885 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="lastWritePosition = i + 1", span="1426-1426"];
m22_889 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="i++", span="1341-1341"];
m22_851 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label=c, span="1353-1353"];
m22_874 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="c <= '\u001f'", span="1391-1391"];
m22_850 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="string escapedValue", span="1351-1351"];
m22_852 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="'\t'", span="1355-1355"];
m22_854 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="'\n'", span="1358-1358"];
m22_856 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="'\r'", span="1361-1361"];
m22_858 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="'\f'", span="1364-1364"];
m22_860 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="'\b'", span="1367-1367"];
m22_862 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="'\\'", span="1370-1370"];
m22_864 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="'\u0085'", span="1373-1373"];
m22_866 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="'\u2028'", span="1376-1376"];
m22_868 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="'\u2029'", span="1379-1379"];
m22_870 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="'\''", span="1382-1382"];
m22_872 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="''''", span="1386-1386"];
m22_853 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="escapedValue = @''\t''", span="1356-1356"];
m22_855 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="escapedValue = @''\n''", span="1359-1359"];
m22_857 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="escapedValue = @''\r''", span="1362-1362"];
m22_859 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="escapedValue = @''\f''", span="1365-1365"];
m22_861 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="escapedValue = @''\b''", span="1368-1368"];
m22_863 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="escapedValue = @''\\''", span="1371-1371"];
m22_865 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="escapedValue = @''\u0085''", span="1374-1374"];
m22_867 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="escapedValue = @''\u2028''", span="1377-1377"];
m22_869 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="escapedValue = @''\u2029''", span="1380-1380"];
m22_871 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="escapedValue = @''\'''", span="1384-1384"];
m22_873 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="escapedValue = ''\\\''''", span="1388-1388"];
m22_879 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="escapedValue = null", span="1405-1405"];
m22_876 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="unicodeBuffer = new char[6]", span="1395-1395"];
m22_878 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="escapedValue = EscapedUnicodeText", span="1401-1401"];
m22_880 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="escapedValue == null", span="1410-1410"];
m22_886 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="!string.Equals(escapedValue, EscapedUnicodeText)", span="1427-1427"];
m22_897 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", span="1327-1327"];
m22_505 [cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="447-447"];
m22_898 [cluster="System.IO.TextWriter.Write(char)", file="JsonSerializerTest.cs", label="Entry System.IO.TextWriter.Write(char)", span="0-0"];
m22_327 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", span="492-492"];
m22_328 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="494-494"];
m22_329 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="495-495"];
m22_343 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonSerializerTest.cs", label="string result = sb.ToString()", span="522-522"];
m22_330 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="497-497"];
m22_331 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonSerializerTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="499-499"];
m22_332 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonSerializerTest.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="500-500"];
m22_333 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", span="502-502"];
m22_334 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(double.NaN)", span="503-503"];
m22_335 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(double.PositiveInfinity)", span="504-504"];
m22_336 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(double.NegativeInfinity)", span="505-505"];
m22_337 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(float.NaN)", span="506-506"];
m22_338 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(float.PositiveInfinity)", span="507-507"];
m22_339 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(float.NegativeInfinity)", span="508-508"];
m22_340 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndArray()", span="509-509"];
m22_341 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonSerializerTest.cs", label="jsonWriter.Flush()", span="511-511"];
m22_342 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonSerializerTest.cs", label="string expected = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity,\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="514-521"];
m22_344 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, result)", span="524-524"];
m22_345 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", span="492-492"];
m22_374 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float?)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float?)", span="1151-1151"];
m22_95 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", prediction=74, span="157-157"];
m22_123 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", span="105-105"];
m22_717 [cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteNull()", span="377-377"];
m22_900 [cluster="string.ToCharArray()", file="JsonSerializerTest.cs", label="Entry string.ToCharArray()", span="0-0"];
m22_172 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTime)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTime)", span="410-410"];
m22_297 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="474-474"];
m22_1003 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToInt16(System.IFormatProvider)", span="1666-1666"];
m22_1004 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="1668-1668"];
m22_1005 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToInt16(System.IFormatProvider)", span="1666-1666"];
m22_85 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
m22_961 [cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", span="1618-1618"];
m22_716 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", span="219-219"];
m22_803 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", span="676-676"];
m22_631 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="431-431"];
m22_769 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", span="1215-1215"];
m22_770 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="1217-1217"];
m22_771 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonSerializerTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1218-1218"];
m22_776 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{'Blah':null}'', sw.ToString())", span="1225-1225"];
m22_772 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonSerializerTest.cs", label="writer.QuoteChar = '\''", span="1219-1219"];
m22_773 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonSerializerTest.cs", label="writer.WriteStartObject()", span="1221-1221"];
m22_774 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonSerializerTest.cs", label="writer.WritePropertyName(''Blah'')", span="1222-1222"];
m22_775 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonSerializerTest.cs", label="writer.WriteEnd()", span="1223-1223"];
m22_777 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", span="1215-1215"];
m22_937 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="991-991"];
m22_178 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int?)", span="1085-1085"];
m22_177 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", span="1216-1216"];
m22_981 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.GetTypeCode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.GetTypeCode()", span="1631-1631"];
m22_982 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.GetTypeCode()", file="JsonSerializerTest.cs", label="return TypeCode.Int32;", span="1633-1633"];
m22_983 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.GetTypeCode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.GetTypeCode()", span="1631-1631"];
m22_1000 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToDouble(System.IFormatProvider)", span="1661-1661"];
m22_1001 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="1663-1663"];
m22_1002 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToDouble(System.IFormatProvider)", span="1661-1661"];
m22_129 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="JsonSerializerTest.cs", label="writer.WriteComment(''fail'')", span="204-204"];
m22_26 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(10.99, (double)root[4])", span="90-90"];
m22_250 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1422-1422"];
m22_36 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m22_79 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ms.CanRead)", span="159-159"];
m22_122 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", span="143-143"];
m22_952 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", span="1570-1570"];
m22_953 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonSerializerTest.cs", label="SetWriteState(JsonToken.PropertyName, name)", span="1572-1572"];
m22_956 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonSerializerTest.cs", label="_writer.Write(new string(name.ToCharArray().Reverse().ToArray()))", span="1579-1579"];
m22_954 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonSerializerTest.cs", label=QuoteName, span="1574-1574"];
m22_955 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonSerializerTest.cs", label="_writer.Write(QuoteChar)", span="1576-1576"];
m22_957 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonSerializerTest.cs", label=QuoteName, span="1581-1581"];
m22_958 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonSerializerTest.cs", label="_writer.Write(QuoteChar)", span="1583-1583"];
m22_959 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonSerializerTest.cs", label="_writer.Write(':')", span="1586-1586"];
m22_960 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", span="1570-1570"];
m22_934 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m22_919 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", span="1560-1560"];
m22_948 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs", label="_writer = textWriter", span="1562-1562"];
m22_949 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", span="1560-1560"];
m22_994 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToDateTime(System.IFormatProvider)", span="1651-1651"];
m22_995 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="1653-1653"];
m22_996 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToDateTime(System.IFormatProvider)", span="1651-1651"];
m22_37 [cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="83-83"];
m22_83 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m22_56 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartObject()", span="108-108"];
m22_57 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="109-109"];
m22_58 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''CPU'')", span="111-111"];
m22_65 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", prediction=73, span="121-121"];
m22_59 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="112-112"];
m22_60 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''Intel'')", span="114-114"];
m22_61 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="115-115"];
m22_62 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''Drives'')", span="117-117"];
m22_63 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="118-118"];
m22_64 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", color=green, community=0, file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", prediction=73, span="120-120"];
m22_66 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", color=green, community=0, file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''DVD read/writer'')", prediction=73, span="123-123"];
m22_78 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonSerializerTest.cs", label="writer = new JsonTextWriter(new StreamWriter(ms)) { CloseOutput = false }", span="157-157"];
m22_249 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="456-456"];
m22_506 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", span="789-789"];
m22_507 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="791-791"];
m22_508 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="792-792"];
m22_528 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN]'', sb.ToString())", span="819-819"];
m22_509 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="794-794"];
m22_510 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="796-796"];
m22_511 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", span="798-798"];
m22_512 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(0.0)", span="800-800"];
m22_513 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(0f)", span="801-801"];
m22_514 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(0.1)", span="802-802"];
m22_515 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(1.0)", span="803-803"];
m22_516 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(1.000001)", span="804-804"];
m22_517 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(0.000001)", span="805-805"];
m22_518 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(double.Epsilon)", span="806-806"];
m22_519 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(double.PositiveInfinity)", span="807-807"];
m22_520 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(double.NegativeInfinity)", span="808-808"];
m22_521 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(double.NaN)", span="809-809"];
m22_522 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(double.MaxValue)", span="810-810"];
m22_523 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(double.MinValue)", span="811-811"];
m22_524 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(float.PositiveInfinity)", span="812-812"];
m22_525 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(float.NegativeInfinity)", span="813-813"];
m22_526 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(float.NaN)", span="814-814"];
m22_527 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndArray()", span="816-816"];
m22_529 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", span="789-789"];
m22_69 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", prediction=73, span="128-128"];
m22_130 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="JsonSerializerTest.cs", label="writer.WriteEndArray()", span="205-205"];
m22_973 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="1608-1608"];
m22_974 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializerTest.cs", label="token == JsonToken.EndObject", span="1610-1610"];
m22_976 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializerTest.cs", label="base.WriteEnd(token)", span="1616-1616"];
m22_975 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializerTest.cs", label="_writer.Write(''}}}'')", span="1612-1612"];
m22_977 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="1608-1608"];
m22_987 [cluster="System.NotImplementedException.NotImplementedException()", file="JsonSerializerTest.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m22_924 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", span="1482-1482"];
m22_925 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonSerializerTest.cs", label="var d = new Dictionary<string, int>\r\n            {\r\n                { ''a'', 1 },\r\n            }", span="1484-1487"];
m22_926 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonSerializerTest.cs", label="var jsonSerializerSettings = new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n            }", span="1488-1491"];
m22_930 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonSerializerTest.cs", label="serializer.Serialize(writer, d)", span="1497-1497"];
m22_927 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonSerializerTest.cs", label="var serializer = JsonSerializer.Create(jsonSerializerSettings)", span="1492-1492"];
m22_928 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonSerializerTest.cs", label="var stringWriter = new StringWriter()", span="1493-1493"];
m22_929 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonSerializerTest.cs", label="var writer = new JsonTextWriter(stringWriter) { QuoteName = false }", span="1495-1495"];
m22_932 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  a: 1\r\n}'', stringWriter.ToString())", span="1501-1503"];
m22_931 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonSerializerTest.cs", label="writer.Close()", span="1498-1498"];
m22_933 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", span="1482-1482"];
m22_592 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", span="920-920"];
m22_593 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                StringBuilder sb = new StringBuilder();\r\n                StringWriter sw = new StringWriter(sb);\r\n\r\n                using (JsonTextWriter jsonWriter = new JsonTextWriter(sw))\r\n                {\r\n                    jsonWriter.Formatting = Formatting.Indented;\r\n                    jsonWriter.QuoteChar = '*';\r\n                }\r\n            }, @''Invalid JavaScript string quote character. Valid quote characters are ' and ''''.'')", span="922-932"];
m22_594 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", span="920-920"];
m22_922 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", span="1589-1589"];
m22_965 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="JsonSerializerTest.cs", label="SetWriteState(JsonToken.Null, null)", span="1591-1591"];
m22_966 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="JsonSerializerTest.cs", label="_writer.Write(''NULL!!!'')", span="1593-1593"];
m22_967 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", span="1589-1589"];
m22_799 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m22_185 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", span="1297-1297"];
m22_29 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0.000000000000000001m, (decimal)root[7])", span="93-93"];
m22_431 [cluster="Newtonsoft.Json.JsonWriter.WriteRaw(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRaw(string)", span="896-896"];
m22_1032 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToUInt64(System.IFormatProvider)", span="1716-1716"];
m22_1033 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="1718-1718"];
m22_1034 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToUInt64(System.IFormatProvider)", span="1716-1716"];
m22_251 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="340-340"];
m22_188 [cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0"];
m22_595 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="922-932"];
m22_204 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="283-292"];
m22_205 [cluster="lambda expression", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="285-285"];
m22_206 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="286-286"];
m22_207 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", span="288-288"];
m22_208 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(new Version(1, 1, 1, 1))", span="289-289"];
m22_209 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndArray()", span="290-290"];
m22_210 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="283-292"];
m22_575 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonWriter.WriteToken(JsonToken.Integer, ''three'')", span="892-892"];
m22_578 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonWriter.WriteToken(JsonToken.Integer)", span="894-894"];
m22_574 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="892-892"];
m22_577 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="894-894"];
m22_576 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="892-892"];
m22_579 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="894-894"];
m22_583 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="902-916"];
m22_584 [cluster="lambda expression", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="904-904"];
m22_585 [cluster="lambda expression", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="905-905"];
m22_586 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="907-907"];
m22_587 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", span="909-909"];
m22_588 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(0.0)", span="911-911"];
m22_589 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndArray()", span="913-913"];
m22_590 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndArray()", span="914-914"];
m22_591 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="902-916"];
m22_596 [cluster="lambda expression", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="924-924"];
m22_597 [cluster="lambda expression", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="925-925"];
m22_598 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="927-927"];
m22_599 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="929-929"];
m22_600 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonWriter.QuoteChar = '*'", span="930-930"];
m22_601 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="922-932"];
m22_921 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", span="1565-1565"];
m22_950 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", file="JsonSerializerTest.cs", label="WritePropertyName(name, true)", span="1567-1567"];
m22_951 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", span="1565-1565"];
m22_991 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToChar(System.IFormatProvider)", span="1646-1646"];
m22_992 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="1648-1648"];
m22_993 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToChar(System.IFormatProvider)", span="1646-1646"];
m22_127 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1396-1396"];
m22_348 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", span="528-528"];
m22_349 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="530-530"];
m22_350 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="531-531"];
m22_370 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="string result = sb.ToString()", span="570-570"];
m22_351 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="533-533"];
m22_352 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="535-535"];
m22_353 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.DefaultValue", span="536-536"];
m22_354 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", span="538-538"];
m22_355 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(double.NaN)", span="539-539"];
m22_356 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(double.PositiveInfinity)", span="540-540"];
m22_357 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(double.NegativeInfinity)", span="541-541"];
m22_358 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(float.NaN)", span="542-542"];
m22_359 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(float.PositiveInfinity)", span="543-543"];
m22_360 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(float.NegativeInfinity)", span="544-544"];
m22_361 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((double?)double.NaN)", span="545-545"];
m22_362 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((double?)double.PositiveInfinity)", span="546-546"];
m22_363 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((double?)double.NegativeInfinity)", span="547-547"];
m22_364 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((float?)float.NaN)", span="548-548"];
m22_365 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((float?)float.PositiveInfinity)", span="549-549"];
m22_366 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((float?)float.NegativeInfinity)", span="550-550"];
m22_367 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndArray()", span="551-551"];
m22_368 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="jsonWriter.Flush()", span="553-553"];
m22_369 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="string expected = @''[\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  null,\r\n  null,\r\n  null,\r\n  null,\r\n  null,\r\n  null\r\n]''", span="556-569"];
m22_371 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, result)", span="572-572"];
m22_372 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", span="528-528"];
m22_433 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", span="675-675"];
m22_434 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="677-677"];
m22_435 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="678-678"];
m22_446 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerTest.cs", label="string result = sb.ToString()", span="697-697"];
m22_436 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="680-680"];
m22_437 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="682-682"];
m22_438 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerTest.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="683-683"];
m22_439 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", span="685-685"];
m22_440 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(double.NaN)", span="686-686"];
m22_441 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerTest.cs", label="jsonWriter.WriteRaw('',[1,2,3,4,5]'')", span="687-687"];
m22_442 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerTest.cs", label="jsonWriter.WriteRaw('',[1,2,3,4,5]'')", span="688-688"];
m22_443 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(float.NaN)", span="689-689"];
m22_444 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndArray()", span="690-690"];
m22_445 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerTest.cs", label="string expected = @''[\r\n  NaN,[1,2,3,4,5],[1,2,3,4,5],\r\n  NaN\r\n]''", span="693-696"];
m22_447 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, result)", span="699-699"];
m22_448 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", span="675-675"];
m22_734 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", span="150-150"];
m22_252 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", span="358-358"];
m22_253 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="360-360"];
m22_254 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="361-361"];
m22_270 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerTest.cs", label="string result = sb.ToString()", span="391-391"];
m22_255 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="363-363"];
m22_256 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="365-365"];
m22_257 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartObject()", span="367-367"];
m22_258 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''CPU'')", span="368-368"];
m22_259 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''Intel'')", span="369-369"];
m22_260 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''PSU'')", span="370-370"];
m22_261 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''500W'')", span="371-371"];
m22_262 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''Drives'')", span="372-372"];
m22_263 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", span="373-373"];
m22_264 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''DVD read/writer'')", span="374-374"];
m22_265 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerTest.cs", label="jsonWriter.WriteComment(''(broken)'')", span="375-375"];
m22_266 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''500 gigabyte hard drive'')", span="376-376"];
m22_267 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''200 gigabype hard drive'')", span="377-377"];
m22_268 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerTest.cs", label="jsonWriter.Close()", span="378-378"];
m22_269 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerTest.cs", label="string expected = @''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabype hard drive''''\r\n  ]\r\n}''", span="381-390"];
m22_271 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, result)", span="393-393"];
m22_272 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", span="358-358"];
m22_77 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonSerializerTest.cs", label="ms = new MemoryStream()", span="156-156"];
m22_248 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="406-406"];
m22_471 [cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m22_778 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", span="1230-1230"];
m22_779 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="1232-1232"];
m22_780 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1233-1233"];
m22_797 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  '2000-01-01T01:01:01Z',\r\n  '2000-01-01T01:01:01+00:00',\r\n  '\/Date(946688461000)\/',\r\n  '\/Date(946688461000+0000)\/',\r\n  '2000 A.D.',\r\n  '2000 A.D.',\r\n  'AQID',\r\n  '00:00:00',\r\n  'http://www.google.com/',\r\n  '00000000-0000-0000-0000-000000000000'\r\n]'', sw.ToString())", span="1257-1268"];
m22_781 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerTest.cs", label="writer.Formatting = Formatting.Indented", span="1234-1234"];
m22_782 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerTest.cs", label="writer.QuoteChar = '\''", span="1235-1235"];
m22_783 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerTest.cs", label="writer.WriteStartArray()", span="1237-1237"];
m22_784 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerTest.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1239-1239"];
m22_785 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerTest.cs", label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1240-1240"];
m22_786 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerTest.cs", label="writer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1242-1242"];
m22_787 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerTest.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1243-1243"];
m22_788 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerTest.cs", label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1244-1244"];
m22_789 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerTest.cs", label="writer.DateFormatString = ''yyyy gg''", span="1246-1246"];
m22_790 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerTest.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1247-1247"];
m22_791 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerTest.cs", label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1248-1248"];
m22_792 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerTest.cs", label="writer.WriteValue(new byte[] { 1, 2, 3 })", span="1250-1250"];
m22_793 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerTest.cs", label="writer.WriteValue(TimeSpan.Zero)", span="1251-1251"];
m22_794 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerTest.cs", label="writer.WriteValue(new Uri(''http://www.google.com/''))", span="1252-1252"];
m22_795 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerTest.cs", label="writer.WriteValue(Guid.Empty)", span="1253-1253"];
m22_796 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerTest.cs", label="writer.WriteEnd()", span="1255-1255"];
m22_798 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", span="1230-1230"];
m22_211 [cluster="System.Version.Version(int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.Version.Version(int, int, int, int)", span="0-0"];
m22_416 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", span="649-649"];
m22_417 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="651-651"];
m22_418 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="652-652"];
m22_428 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerTest.cs", label="string result = sb.ToString()", span="669-669"];
m22_419 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="654-654"];
m22_420 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="656-656"];
m22_421 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerTest.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="657-657"];
m22_422 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerTest.cs", label="jsonWriter.WriteRaw(''[1,2,3,4,5]'')", span="659-659"];
m22_423 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerTest.cs", label="jsonWriter.WriteWhitespace(''  '')", span="660-660"];
m22_424 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", span="661-661"];
m22_425 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(double.NaN)", span="662-662"];
m22_426 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndArray()", span="663-663"];
m22_427 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerTest.cs", label="string expected = @''[1,2,3,4,5]  [\r\n  NaN\r\n]''", span="666-668"];
m22_429 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, result)", span="671-671"];
m22_430 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", span="649-649"];
m22_97 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''Intel'')", prediction=74, span="160-160"];
m22_98 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", prediction=74, span="161-161"];
m22_99 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(o[''CPU''], jsonWriter.CurrentToken)", prediction=74, span="162-162"];
m22_117 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="189-189"];
m22_100 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''Drives'')", prediction=74, span="164-164"];
m22_101 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", prediction=74, span="165-165"];
m22_102 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(o.Property(''Drives''), jsonWriter.CurrentToken)", prediction=74, span="166-166"];
m22_103 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", span="168-168"];
m22_104 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="169-169"];
m22_105 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JsonSerializerTest.cs", label="Assert.AreEqual(o[''Drives''], jsonWriter.CurrentToken)", span="170-170"];
m22_106 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JsonSerializerTest.cs", label="JArray a = (JArray)jsonWriter.CurrentToken", span="172-172"];
m22_107 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''DVD read/writer'')", span="174-174"];
m22_108 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="175-175"];
m22_109 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JsonSerializerTest.cs", label="Assert.AreEqual(a[a.Count - 1], jsonWriter.CurrentToken)", span="176-176"];
m22_110 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(new BigInteger(123))", span="179-179"];
m22_111 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="180-180"];
m22_112 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JsonSerializerTest.cs", label="Assert.AreEqual(a[a.Count - 1], jsonWriter.CurrentToken)", span="181-181"];
m22_113 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(new byte[0])", span="184-184"];
m22_114 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="185-185"];
m22_115 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JsonSerializerTest.cs", label="Assert.AreEqual(a[a.Count - 1], jsonWriter.CurrentToken)", span="186-186"];
m22_116 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEnd()", span="188-188"];
m22_118 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JsonSerializerTest.cs", label="Assert.AreEqual(a, jsonWriter.CurrentToken)", span="190-190"];
m22_119 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndObject()", span="192-192"];
m22_298 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.State()", span="449-449"];
m22_299 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="451-451"];
m22_300 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="452-452"];
m22_301 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="454-454"];
m22_302 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="456-456"];
m22_303 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartObject()", span="458-458"];
m22_304 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="459-459"];
m22_305 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', jsonWriter.Path)", span="460-460"];
m22_306 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''CPU'')", span="462-462"];
m22_307 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="463-463"];
m22_308 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''CPU'', jsonWriter.Path)", span="464-464"];
m22_309 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''Intel'')", span="466-466"];
m22_310 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="467-467"];
m22_311 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''CPU'', jsonWriter.Path)", span="468-468"];
m22_312 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''Drives'')", span="470-470"];
m22_313 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="471-471"];
m22_314 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Drives'', jsonWriter.Path)", span="472-472"];
m22_315 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", span="474-474"];
m22_316 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="475-475"];
m22_317 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''DVD read/writer'')", span="477-477"];
m22_318 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="478-478"];
m22_319 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Drives[0]'', jsonWriter.Path)", span="479-479"];
m22_320 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEnd()", span="481-481"];
m22_321 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="482-482"];
m22_322 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Drives'', jsonWriter.Path)", span="483-483"];
m22_323 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndObject()", span="485-485"];
m22_324 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="486-486"];
m22_325 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', jsonWriter.Path)", span="487-487"];
m22_326 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.State()", span="449-449"];
m22_566 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", span="883-883"];
m22_567 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="885-885"];
m22_568 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="886-886"];
m22_569 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="888-888"];
m22_570 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonSerializerTest.cs", label="jsonWriter.WriteToken(JsonToken.StartArray)", span="890-890"];
m22_571 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<FormatException>(() => { jsonWriter.WriteToken(JsonToken.Integer, ''three''); }, ''Input string was not in a correct format.'')", span="892-892"];
m22_572 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<ArgumentNullException>(() => { jsonWriter.WriteToken(JsonToken.Integer); }, @''Value cannot be null.\r\nParameter name: value'')", span="894-895"];
m22_573 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", span="883-883"];
m22_125 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="973-973"];
m22_984 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToBoolean(System.IFormatProvider)", span="1636-1636"];
m22_985 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="1638-1638"];
m22_986 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToBoolean(System.IFormatProvider)", span="1636-1636"];
m22_120 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="193-193"];
m22_373 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double?)", span="1167-1167"];
m22_0 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", span="58-58"];
m22_1 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="byte[] data = Encoding.UTF8.GetBytes(''Hello world.'')", span="60-60"];
m22_2 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="JToken root", span="62-62"];
m22_9 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(10.99)", span="70-70"];
m22_21 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(13, root.Children().Count())", span="85-85"];
m22_23 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''\r\n\t\f\b?{\\r\\n\''\''', (string)root[1])", span="87-87"];
m22_24 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, (bool)root[2])", span="88-88"];
m22_3 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="JTokenWriter jsonWriter = new JTokenWriter()", span="63-63"];
m22_14 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''This is a string.'')", span="75-75"];
m22_4 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", span="65-65"];
m22_16 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteUndefined()", span="77-77"];
m22_5 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue('@')", span="66-66"];
m22_18 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndArray()", span="79-79"];
m22_6 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''\r\n\t\f\b?{\\r\\n\''\''')", span="67-67"];
m22_20 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(JArray), root)", span="84-84"];
m22_22 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''@'', (string)root[0])", span="86-86"];
m22_7 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(true)", span="68-68"];
m22_8 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(10)", span="69-69"];
m22_10 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(0.99)", span="71-71"];
m22_11 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(0.000000000000000001d)", span="72-72"];
m22_12 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(0.000000000000000001m)", span="73-73"];
m22_13 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue((string)null)", span="74-74"];
m22_15 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteNull()", span="76-76"];
m22_17 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(data)", span="78-78"];
m22_19 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="root = jsonWriter.Token", span="81-81"];
m22_25 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(10, (int)root[3])", span="89-89"];
m22_735 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", span="1143-1143"];
m22_736 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="1145-1145"];
m22_737 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonSerializerTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)\r\n            {\r\n                DateTimeZoneHandling = Json.DateTimeZoneHandling.Utc\r\n            }", span="1146-1149"];
m22_739 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''2000-01-01T01:01:01Z'''''', sw.ToString())", span="1153-1153"];
m22_738 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonSerializerTest.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified))", span="1151-1151"];
m22_740 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", span="1143-1143"];
m22_632 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", span="983-983"];
m22_633 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="985-985"];
m22_634 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="986-986"];
m22_642 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerTest.cs", label="string result = sb.ToString()", span="1000-1000"];
m22_635 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerTest.cs", label="string text = ''Hello world.''", span="988-988"];
m22_637 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="991-991"];
m22_636 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerTest.cs", label="byte[] data = Encoding.UTF8.GetBytes(text)", span="989-989"];
m22_645 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(text, Encoding.UTF8.GetString(d2, 0, d2.Length))", span="1006-1006"];
m22_640 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(data)", span="996-996"];
m22_638 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="993-993"];
m22_639 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="994-994"];
m22_641 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerTest.cs", label="string expected = @''''''SGVsbG8gd29ybGQu''''''", span="999-999"];
m22_643 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, result)", span="1002-1002"];
m22_644 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerTest.cs", label="byte[] d2 = Convert.FromBase64String(result.Trim(''''))", span="1004-1004"];
m22_646 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", span="983-983"];
m22_93 [cluster="System.IO.StringWriter.StringWriter()", color=green, community=0, file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.StringWriter()", prediction=74, span="0-0"];
m22_718 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", span="1118-1118"];
m22_719 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerTest.cs", label="JsonWriter.State[][] stateArray = JsonWriter.BuildStateArray()", span="1120-1120"];
m22_720 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerTest.cs", label="var valueStates = JsonWriter.StateArrayTempate[7]", span="1122-1122"];
m22_731 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(valueStates, stateArray[(int)valueToken], ''Error for '' + valueToken + '' states.'')", span="1136-1136"];
m22_721 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerTest.cs", label="EnumUtils.GetValues(typeof(JsonToken))", span="1124-1124"];
m22_722 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerTest.cs", label=valueToken, span="1126-1126"];
m22_723 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerTest.cs", label="JsonToken.Integer", span="1128-1128"];
m22_724 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerTest.cs", label="JsonToken.Float", span="1129-1129"];
m22_725 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerTest.cs", label="JsonToken.String", span="1130-1130"];
m22_726 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerTest.cs", label="JsonToken.Boolean", span="1131-1131"];
m22_727 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerTest.cs", label="JsonToken.Null", span="1132-1132"];
m22_728 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerTest.cs", label="JsonToken.Undefined", span="1133-1133"];
m22_729 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerTest.cs", label="JsonToken.Date", span="1134-1134"];
m22_730 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerTest.cs", label="JsonToken.Bytes", span="1135-1135"];
m22_732 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", span="1118-1118"];
m22_905 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", span="1462-1462"];
m22_906 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="1464-1464"];
m22_907 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerTest.cs", label="CustomJsonTextWriter writer = new CustomJsonTextWriter(sw) { Formatting = Formatting.Indented }", span="1465-1465"];
m22_917 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{{{\r\n  ''''1ytreporP'''': NULL!!!\r\n}}}'', sw.ToString())", span="1476-1478"];
m22_908 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerTest.cs", label="writer.WriteStartObject()", span="1466-1466"];
m22_909 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Object, writer.WriteState)", span="1467-1467"];
m22_910 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerTest.cs", label="writer.WritePropertyName(''Property1'')", span="1468-1468"];
m22_911 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Property, writer.WriteState)", span="1469-1469"];
m22_912 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Property1'', writer.Path)", span="1470-1470"];
m22_913 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerTest.cs", label="writer.WriteNull()", span="1471-1471"];
m22_914 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Object, writer.WriteState)", span="1472-1472"];
m22_915 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerTest.cs", label="writer.WriteEndObject()", span="1473-1473"];
m22_916 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Start, writer.WriteState)", span="1474-1474"];
m22_918 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", span="1462-1462"];
m22_124 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="926-926"];
m22_70 [cluster="System.Text.StringBuilder.ToString()", color=green, community=0, file="JsonSerializerTest.cs", label="Entry System.Text.StringBuilder.ToString()", prediction=73, span="0-0"];
m22_71 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", color=green, community=0, file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", prediction=73, span="147-147"];
m22_72 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", color=green, community=0, file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", prediction=73, span="149-149"];
m22_73 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", color=green, community=0, file="JsonSerializerTest.cs", label="JsonTextWriter writer = new JsonTextWriter(new StreamWriter(ms))", prediction=73, span="150-150"];
m22_74 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.IsTrue(ms.CanRead)", prediction=73, span="152-152"];
m22_75 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", color=green, community=0, file="JsonSerializerTest.cs", label="writer.Close()", prediction=73, span="153-153"];
m22_76 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonSerializerTest.cs", label="Assert.IsFalse(ms.CanRead)", span="154-154"];
m22_81 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ms.CanRead)", span="161-161"];
m22_839 [cluster="string.FormatWith(System.IFormatProvider, object, object, object, object)", file="JsonSerializerTest.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object, object, object)", span="62-62"];
m22_504 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="439-439"];
m22_938 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", span="1508-1508"];
m22_939 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonSerializerTest.cs", label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn + @''\r\n,//comment after comma'' + StringUtils.CarriageReturnLineFeed + @''\r\n''''ExpiryDate''''://comment'' + StringUtils.LineFeed + @''\r\nnew\r\n'' + StringUtils.LineFeed +\r\n                          @''Constructor\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="1510-1529"];
m22_940 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonSerializerTest.cs", label="JsonTextReader r = new JsonTextReader(new StringReader(json))", span="1531-1531"];
m22_941 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="1533-1533"];
m22_944 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonSerializerTest.cs", label="w.WriteToken(r, true)", span="1537-1537"];
m22_942 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonSerializerTest.cs", label="JsonTextWriter w = new JsonTextWriter(sw)", span="1534-1534"];
m22_945 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''/*comment*//*hi*/*/{/*comment*/\r\n  ''''Name'''': /*comment*/ true/*comment after true*//*comment after comma*/,\r\n  ''''ExpiryDate'''': /*comment*/ new Constructor(\r\n    /*comment*/,\r\n    null\r\n    /*comment*/\r\n  ),\r\n  ''''Price'''': 3.99,\r\n  ''''Sizes'''': /*comment*/ [\r\n    /*comment*/\r\n    ''''Small''''\r\n    /*comment*/\r\n  ]/*comment*/\r\n}/*comment *//*comment 1 */'', sw.ToString())", span="1539-1552"];
m22_943 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonSerializerTest.cs", label="w.Formatting = Formatting.Indented", span="1535-1535"];
m22_946 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", span="1508-1508"];
m22_35 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", span="58-58"];
m22_179 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(uint?)", span="1102-1102"];
m22_474 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", span="738-738"];
m22_475 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="740-740"];
m22_476 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="741-741"];
m22_486 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''d0'''':[1,2],''''d1'''':[1,2],''''d2'''':[1,2]}'', sb.ToString())", span="761-761"];
m22_477 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="743-743"];
m22_478 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="int i = 0", span="745-745"];
m22_480 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartObject()", span="748-748"];
m22_482 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''d'' + i)", span="752-752"];
m22_483 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="jsonWriter.WriteRawValue(rawJson)", span="753-753"];
m22_485 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndObject()", span="758-758"];
m22_479 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="string rawJson = ''[1,2]''", span="746-746"];
m22_481 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="i < 3", span="750-750"];
m22_484 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="i++", span="755-755"];
m22_487 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", span="738-738"];
m22_1026 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToUInt16(System.IFormatProvider)", span="1706-1706"];
m22_1027 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="1708-1708"];
m22_1028 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToUInt16(System.IFormatProvider)", span="1706-1706"];
m22_1021 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", span="1696-1696"];
m22_1022 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="conversionType == typeof(int)", span="1698-1698"];
m22_1024 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new Exception(''Type not supported: '' + conversionType.FullName);", span="1703-1703"];
m22_1023 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="return _value;", span="1700-1700"];
m22_1025 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", span="1696-1696"];
m22_27 [cluster="string.String(char, int)", file="JsonSerializerTest.cs", label="Entry string.String(char, int)", span="0-0"];
m22_32 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m22_902 [cluster="string.Equals(string, string)", file="JsonSerializerTest.cs", label="Entry string.Equals(string, string)", span="0-0"];
m22_752 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", span="1179-1179"];
m22_753 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="1181-1181"];
m22_754 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeNonAscii\r\n            }", span="1182-1185"];
m22_757 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerTest.cs", label="string json = sw.ToString()", span="1191-1191"];
m22_755 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerTest.cs", label="string unicode = ''\u5f20''", span="1187-1187"];
m22_756 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerTest.cs", label="writer.WriteValue(unicode)", span="1189-1189"];
m22_761 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(unicode, reader.ReadAsString())", span="1198-1198"];
m22_764 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerTest.cs", label="writer.WriteValue(unicode)", span="1206-1206"];
m22_758 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(8, json.Length)", span="1193-1193"];
m22_759 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''\u5f20'''''', json)", span="1194-1194"];
m22_760 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1196-1196"];
m22_762 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerTest.cs", label="sw = new StringWriter()", span="1200-1200"];
m22_763 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerTest.cs", label="writer = new JsonTextWriter(sw)\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.Default\r\n            }", span="1201-1204"];
m22_765 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerTest.cs", label="json = sw.ToString()", span="1208-1208"];
m22_766 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, json.Length)", span="1210-1210"];
m22_767 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''\''\u5f20\'''', json)", span="1211-1211"];
m22_768 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", span="1179-1179"];
m22_1006 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToInt32(System.IFormatProvider)", span="1671-1671"];
m22_1007 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="1673-1673"];
m22_1008 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToInt32(System.IFormatProvider)", span="1671-1671"];
m22_461 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", span="724-724"];
m22_462 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''[1,2,3,4,5]''))", span="726-726"];
m22_463 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonSerializerTest.cs", label="reader.Read()", span="727-727"];
m22_464 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonSerializerTest.cs", label="reader.Read()", span="728-728"];
m22_467 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonSerializerTest.cs", label="writer.WriteToken(reader)", span="732-732"];
m22_465 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="730-730"];
m22_466 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonSerializerTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="731-731"];
m22_468 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', sw.ToString())", span="734-734"];
m22_469 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", span="724-724"];
m22_200 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", span="281-281"];
m22_201 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonWriterException>(() =>\r\n            {\r\n                StringWriter sw = new StringWriter();\r\n                using (JsonTextWriter jsonWriter = new JsonTextWriter(sw))\r\n                {\r\n                    jsonWriter.WriteStartArray();\r\n                    jsonWriter.WriteValue(new Version(1, 1, 1, 1));\r\n                    jsonWriter.WriteEndArray();\r\n                }\r\n            }, @''Unsupported type: System.Version. Use the JsonSerializer class to get the object's JSON representation. Path ''.'')", span="283-292"];
m22_202 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", span="281-281"];
m22_175 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", span="1265-1265"];
m22_171 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m22_988 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToByte(System.IFormatProvider)", span="1641-1641"];
m22_989 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="1643-1643"];
m22_990 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToByte(System.IFormatProvider)", span="1641-1641"];
m22_80 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonSerializerTest.cs", label="writer.Close()", span="160-160"];
m22_551 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", span="863-863"];
m22_552 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="865-865"];
m22_553 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="866-866"];
m22_562 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[1,{''''string'''':2147483647}]'', sb.ToString())", span="879-879"];
m22_554 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="868-868"];
m22_555 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerTest.cs", label="jsonWriter.WriteToken(JsonToken.StartArray)", span="870-870"];
m22_556 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerTest.cs", label="jsonWriter.WriteToken(JsonToken.Integer, 1)", span="871-871"];
m22_557 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerTest.cs", label="jsonWriter.WriteToken(JsonToken.StartObject)", span="872-872"];
m22_558 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerTest.cs", label="jsonWriter.WriteToken(JsonToken.PropertyName, ''string'')", span="873-873"];
m22_559 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerTest.cs", label="jsonWriter.WriteToken(JsonToken.Integer, int.MaxValue)", span="874-874"];
m22_560 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerTest.cs", label="jsonWriter.WriteToken(JsonToken.EndObject)", span="875-875"];
m22_561 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerTest.cs", label="jsonWriter.WriteToken(JsonToken.EndArray)", span="876-876"];
m22_563 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", span="863-863"];
m22_580 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", span="900-900"];
m22_581 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonWriterException>(() =>\r\n            {\r\n                StringBuilder sb = new StringBuilder();\r\n                StringWriter sw = new StringWriter(sb);\r\n\r\n                using (JsonWriter jsonWriter = new JsonTextWriter(sw))\r\n                {\r\n                    jsonWriter.WriteStartArray();\r\n\r\n                    jsonWriter.WriteValue(0.0);\r\n\r\n                    jsonWriter.WriteEndArray();\r\n                    jsonWriter.WriteEndArray();\r\n                }\r\n            }, ''No token to close. Path ''.'')", span="902-916"];
m22_582 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", span="900-900"];
m22_648 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", span="627-627"];
m22_647 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m22_836 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", span="148-148"];
m22_671 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", span="1045-1045"];
m22_672 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="1047-1047"];
m22_673 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="1048-1048"];
m22_714 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Property1'''': [\r\n      1,\r\n      [\r\n        [\r\n          []\r\n        ]\r\n      ]\r\n    ]\r\n  },\r\n  {\r\n    ''''Property2'''': new Constructor1(\r\n      null,\r\n      [\r\n        1\r\n      ]\r\n    )\r\n  }\r\n]'', sb.ToString())", span="1095-1114"];
m22_674 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="string text = ''Hello world.''", span="1050-1050"];
m22_676 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1053-1053"];
m22_675 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="byte[] data = Encoding.UTF8.GetBytes(text)", span="1051-1051"];
m22_677 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="writer.Formatting = Formatting.Indented", span="1055-1055"];
m22_678 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="writer.WriteStartArray()", span="1057-1057"];
m22_679 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', writer.Path)", span="1058-1058"];
m22_680 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="writer.WriteStartObject()", span="1059-1059"];
m22_681 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[0]'', writer.Path)", span="1060-1060"];
m22_682 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="writer.WritePropertyName(''Property1'')", span="1061-1061"];
m22_683 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[0].Property1'', writer.Path)", span="1062-1062"];
m22_684 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="writer.WriteStartArray()", span="1063-1063"];
m22_685 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[0].Property1'', writer.Path)", span="1064-1064"];
m22_686 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="writer.WriteValue(1)", span="1065-1065"];
m22_687 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[0].Property1[0]'', writer.Path)", span="1066-1066"];
m22_688 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="writer.WriteStartArray()", span="1067-1067"];
m22_689 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[0].Property1[1]'', writer.Path)", span="1068-1068"];
m22_690 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="writer.WriteStartArray()", span="1069-1069"];
m22_691 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[0].Property1[1][0]'', writer.Path)", span="1070-1070"];
m22_692 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="writer.WriteStartArray()", span="1071-1071"];
m22_693 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[0].Property1[1][0][0]'', writer.Path)", span="1072-1072"];
m22_694 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="writer.WriteEndObject()", span="1073-1073"];
m22_695 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[0]'', writer.Path)", span="1074-1074"];
m22_696 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="writer.WriteStartObject()", span="1075-1075"];
m22_697 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1]'', writer.Path)", span="1076-1076"];
m22_698 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="writer.WritePropertyName(''Property2'')", span="1077-1077"];
m22_699 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1].Property2'', writer.Path)", span="1078-1078"];
m22_700 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="writer.WriteStartConstructor(''Constructor1'')", span="1079-1079"];
m22_701 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1].Property2'', writer.Path)", span="1080-1080"];
m22_702 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="writer.WriteNull()", span="1081-1081"];
m22_703 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1].Property2[0]'', writer.Path)", span="1082-1082"];
m22_704 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="writer.WriteStartArray()", span="1083-1083"];
m22_705 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1].Property2[1]'', writer.Path)", span="1084-1084"];
m22_706 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="writer.WriteValue(1)", span="1085-1085"];
m22_707 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1].Property2[1][0]'', writer.Path)", span="1086-1086"];
m22_708 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="writer.WriteEnd()", span="1087-1087"];
m22_709 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1].Property2[1]'', writer.Path)", span="1088-1088"];
m22_710 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="writer.WriteEndObject()", span="1089-1089"];
m22_711 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1]'', writer.Path)", span="1090-1090"];
m22_712 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="writer.WriteEndArray()", span="1091-1091"];
m22_713 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', writer.Path)", span="1092-1092"];
m22_715 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", span="1045-1045"];
m22_899 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", span="136-136"];
m22_203 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369"];
m22_226 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", span="318-318"];
m22_227 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="320-320"];
m22_228 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="321-321"];
m22_245 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="string result = sb.ToString()", span="352-352"];
m22_229 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="323-323"];
m22_230 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="325-325"];
m22_231 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartObject()", span="327-327"];
m22_232 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''CPU'')", span="328-328"];
m22_233 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''Intel'')", span="329-329"];
m22_234 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''PSU'')", span="330-330"];
m22_235 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''500W'')", span="331-331"];
m22_236 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''Drives'')", span="332-332"];
m22_237 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", span="333-333"];
m22_238 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''DVD read/writer'')", span="334-334"];
m22_239 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="jsonWriter.WriteComment(''(broken)'')", span="335-335"];
m22_240 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''500 gigabyte hard drive'')", span="336-336"];
m22_241 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''200 gigabype hard drive'')", span="337-337"];
m22_242 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndObject()", span="338-338"];
m22_243 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="339-339"];
m22_244 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="string expected = @''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabype hard drive''''\r\n  ]\r\n}''", span="342-351"];
m22_246 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, result)", span="354-354"];
m22_247 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", span="318-318"];
m22_903 [cluster="System.IO.TextWriter.Write(string)", file="JsonSerializerTest.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m22_489 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", span="765-765"];
m22_490 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="767-767"];
m22_491 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="768-768"];
m22_502 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''con'''':new Ext.data.JsonStore({''''aa'''':''''aa''''})}'', sb.ToString())", span="785-785"];
m22_492 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="770-770"];
m22_493 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartObject()", span="772-772"];
m22_494 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''con'')", span="773-773"];
m22_495 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartConstructor(''Ext.data.JsonStore'')", span="775-775"];
m22_496 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartObject()", span="776-776"];
m22_497 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''aa'')", span="777-777"];
m22_498 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''aa'')", span="778-778"];
m22_499 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndObject()", span="779-779"];
m22_500 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndConstructor()", span="780-780"];
m22_501 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndObject()", span="782-782"];
m22_503 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", span="765-765"];
m22_1035 [file="JsonSerializerTest.cs", label=jsonWriter, span=""];
m22_1036 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.CustomJsonTextWriter", span=""];
m22_1037 [file="JsonSerializerTest.cs", label="out Newtonsoft.Json.Tests.ConvertibleInt", span=""];
m22_1038 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.ConvertibleInt", span=""];
m24_9 [cluster="Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.Linq.JTokenType)", span="201-201"];
m24_10 [cluster="Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.Linq.JTokenType)", color=green, community=0, file="JsonTextReaderTest.cs", label="_top++", prediction=101, span="203-203"];
m24_11 [cluster="Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.Linq.JTokenType)", color=green, community=0, file="JsonTextReaderTest.cs", label="_stack.Count <= _top", prediction=101, span="204-204"];
m24_12 [cluster="Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.Linq.JTokenType)", color=green, community=0, file="JsonTextReaderTest.cs", label="_stack.Add(value)", prediction=101, span="205-205"];
m24_13 [cluster="Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.Linq.JTokenType)", color=green, community=0, file="JsonTextReaderTest.cs", label="_stack[_top] = value", prediction=104, span="207-207"];
m24_14 [cluster="Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.Linq.JTokenType)", span="201-201"];
m24_498 [cluster="System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry System.IConvertible.ToDecimal(System.IFormatProvider)", span="0-0"];
m24_15 [cluster="Newtonsoft.Json.JsonWriter.Pop()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.Pop()", span="210-210"];
m24_16 [cluster="Newtonsoft.Json.JsonWriter.Pop()", color=green, community=0, file="JsonTextReaderTest.cs", label="JTokenType value = Peek()", prediction=105, span="212-212"];
m24_17 [cluster="Newtonsoft.Json.JsonWriter.Pop()", color=green, community=0, file="JsonTextReaderTest.cs", label="_top--", prediction=101, span="213-213"];
m24_18 [cluster="Newtonsoft.Json.JsonWriter.Pop()", color=green, community=0, file="JsonTextReaderTest.cs", label="return value;", prediction=105, span="215-215"];
m24_19 [cluster="Newtonsoft.Json.JsonWriter.Pop()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.Pop()", span="210-210"];
m24_332 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", span="882-882"];
m24_334 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", file="JsonTextReaderTest.cs", label="WriteNull()", span="885-885"];
m24_335 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", file="JsonTextReaderTest.cs", label="WriteValue(value.Value)", span="887-887"];
m24_333 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", file="JsonTextReaderTest.cs", label="value == null", span="884-884"];
m24_336 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", span="882-882"];
m24_509 [cluster="Newtonsoft.Json.JsonWriter.System.IDisposable.Dispose()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.System.IDisposable.Dispose()", span="1197-1197"];
m24_510 [cluster="Newtonsoft.Json.JsonWriter.System.IDisposable.Dispose()", file="JsonTextReaderTest.cs", label="Dispose(true)", span="1199-1199"];
m24_511 [cluster="Newtonsoft.Json.JsonWriter.System.IDisposable.Dispose()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.System.IDisposable.Dispose()", span="1197-1197"];
m24_25 [cluster="Newtonsoft.Json.JsonWriter.Close()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.Close()", span="231-231"];
m24_26 [cluster="Newtonsoft.Json.JsonWriter.Close()", color=green, community=0, file="JsonTextReaderTest.cs", label="AutoCompleteAll()", prediction=101, span="233-233"];
m24_27 [cluster="Newtonsoft.Json.JsonWriter.Close()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.Close()", span="231-231"];
m24_406 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", span="1066-1066"];
m24_408 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", file="JsonTextReaderTest.cs", label="WriteNull()", span="1069-1069"];
m24_409 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.String)", span="1071-1071"];
m24_407 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", file="JsonTextReaderTest.cs", label="value == null", span="1068-1068"];
m24_410 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", span="1066-1066"];
m24_294 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char)", span="769-769"];
m24_295 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char)", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.String)", span="771-771"];
m24_296 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(char)", span="769-769"];
m24_128 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="665-665"];
m24_265 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.Undefined)", span="668-668"];
m24_266 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonTextReaderTest.cs", label="WriteRaw(json)", span="669-669"];
m24_267 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="665-665"];
m24_387 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", span="1017-1017"];
m24_389 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", file="JsonTextReaderTest.cs", label="WriteNull()", span="1020-1020"];
m24_390 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", file="JsonTextReaderTest.cs", label="WriteValue(value.Value)", span="1022-1022"];
m24_388 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", file="JsonTextReaderTest.cs", label="value == null", span="1019-1019"];
m24_391 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", span="1017-1017"];
m24_303 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="797-797"];
m24_304 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.Float)", span="799-799"];
m24_305 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="797-797"];
m24_281 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float)", span="723-723"];
m24_282 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.Float)", span="725-725"];
m24_283 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(float)", span="723-723"];
m24_494 [cluster="System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry System.IConvertible.ToUInt64(System.IFormatProvider)", span="0-0"];
m24_114 [cluster="object.ToString()", file="JsonTextReaderTest.cs", label="Entry object.ToString()", span="0-0"];
m24_352 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(short?)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(short?)", span="930-930"];
m24_354 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(short?)", file="JsonTextReaderTest.cs", label="WriteNull()", span="933-933"];
m24_355 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(short?)", file="JsonTextReaderTest.cs", label="WriteValue(value.Value)", span="935-935"];
m24_353 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(short?)", file="JsonTextReaderTest.cs", label="value == null", span="932-932"];
m24_356 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(short?)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(short?)", span="930-930"];
m24_224 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="558-558"];
m24_225 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="558-558"];
m24_484 [cluster="System.IConvertible.ToString(System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry System.IConvertible.ToString(System.IFormatProvider)", span="0-0"];
m24_488 [cluster="System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry System.IConvertible.ToInt16(System.IFormatProvider)", span="0-0"];
m24_503 [cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", span="1187-1187"];
m24_506 [cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="JsonTextReaderTest.cs", label="throw new JsonWriterException(''Only white space characters should be used.'');", span="1192-1192"];
m24_505 [cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="JsonTextReaderTest.cs", label="!StringUtils.IsWhiteSpace(ws)", span="1191-1191"];
m24_504 [cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="JsonTextReaderTest.cs", label="ws != null", span="1189-1189"];
m24_507 [cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", span="1187-1187"];
m24_184 [cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.Linq.JTokenType)", span="485-485"];
m24_185 [cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label=type, span="487-487"];
m24_192 [cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label="throw new JsonWriterException(''No close token for type: '' + type);", span="496-496"];
m24_187 [cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label="return JsonToken.EndObject;", span="490-490"];
m24_189 [cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label="return JsonToken.EndArray;", span="492-492"];
m24_191 [cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label="return JsonToken.EndConstructor;", span="494-494"];
m24_186 [cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label="JTokenType.Object", span="489-489"];
m24_188 [cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label="JTokenType.Array", span="491-491"];
m24_190 [cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label="JTokenType.Constructor", span="493-493"];
m24_193 [cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.Linq.JTokenType)", span="485-485"];
m24_497 [cluster="System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry System.IConvertible.ToDateTime(System.IFormatProvider)", span="0-0"];
m24_174 [cluster="Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", span="470-470"];
m24_175 [cluster="Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label=token, span="472-472"];
m24_182 [cluster="Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="throw new JsonWriterException(''No type for token: '' + token);", span="481-481"];
m24_177 [cluster="Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="return JTokenType.Object;", span="475-475"];
m24_179 [cluster="Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="return JTokenType.Array;", span="477-477"];
m24_181 [cluster="Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="return JTokenType.Constructor;", span="479-479"];
m24_176 [cluster="Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JsonToken.EndObject", span="474-474"];
m24_178 [cluster="Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JsonToken.EndArray", span="476-476"];
m24_180 [cluster="Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JsonToken.EndConstructor", span="478-478"];
m24_183 [cluster="Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", span="470-470"];
m24_37 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", span="500-500"];
m24_196 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="i < _top", span="506-506"];
m24_197 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="int currentLevel = _top - i", span="508-508"];
m24_198 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="_stack[currentLevel] == GetTypeForCloseToken(tokenBeingClosed)", span="510-510"];
m24_205 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JsonToken token = GetCloseTokenForType(Pop())", span="522-522"];
m24_206 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="_formatting == Formatting.Indented", span="524-524"];
m24_207 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="_currentState != State.ObjectStart && _currentState != State.ArrayStart", span="526-526"];
m24_208 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="WriteIndent()", span="527-527"];
m24_209 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="WriteEnd(token)", span="530-530"];
m24_211 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JTokenType currentLevelType = Peek()", span="533-533"];
m24_214 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="_currentState = State.Object", span="538-538"];
m24_216 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="_currentState = State.Array", span="541-541"];
m24_218 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="_currentState = State.Array", span="544-544"];
m24_220 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="_currentState = State.Start", span="547-547"];
m24_194 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="int levelsToComplete = 0", span="504-504"];
m24_195 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="int i = 0", span="506-506"];
m24_200 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="i++", span="506-506"];
m24_201 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="levelsToComplete == 0", span="517-517"];
m24_199 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="levelsToComplete = i + 1", span="512-512"];
m24_204 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="i < levelsToComplete", span="520-520"];
m24_210 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="i++", span="520-520"];
m24_212 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label=currentLevelType, span="535-535"];
m24_221 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="throw new JsonWriterException(''Unknown JsonType: '' + currentLevelType);", span="550-550"];
m24_213 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JTokenType.Object", span="537-537"];
m24_215 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JTokenType.Array", span="540-540"];
m24_217 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JTokenType.Constructor", span="543-543"];
m24_219 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JTokenType.None", span="546-546"];
m24_202 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="throw new JsonWriterException(''No token to close.'');", span="518-518"];
m24_203 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="int i = 0", span="520-520"];
m24_222 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", span="500-500"];
m24_71 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", span="325-325"];
m24_75 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="WriteStartObject()", span="335-335"];
m24_77 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="WriteStartArray()", span="338-338"];
m24_81 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="WriteConstructorDate(reader)", span="344-344"];
m24_82 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="WriteStartConstructor(reader.Value.ToString())", span="346-346"];
m24_84 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="WritePropertyName(reader.Value.ToString())", span="349-349"];
m24_86 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="WriteComment(reader.Value.ToString())", span="352-352"];
m24_88 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="WriteValue(Convert.ToInt64(reader.Value, CultureInfo.InvariantCulture))", span="355-355"];
m24_90 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="WriteValue(Convert.ToDouble(reader.Value, CultureInfo.InvariantCulture))", span="358-358"];
m24_92 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="WriteValue(reader.Value.ToString())", span="361-361"];
m24_94 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="WriteValue(Convert.ToBoolean(reader.Value, CultureInfo.InvariantCulture))", span="364-364"];
m24_96 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="WriteNull()", span="367-367"];
m24_98 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="WriteUndefined()", span="370-370"];
m24_100 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="WriteEndObject()", span="373-373"];
m24_102 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="WriteEndArray()", span="376-376"];
m24_104 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="WriteEndConstructor()", span="379-379"];
m24_106 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="WriteValue((DateTime)reader.Value)", span="382-382"];
m24_108 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="WriteRawValue((string)reader.Value)", span="385-385"];
m24_110 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="WriteValue((byte[])reader.Value)", span="388-388"];
m24_112 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="initialDepth - 1 < reader.Depth - (IsEndToken(reader.TokenType) ? 1 : 0)\r\n        && reader.Read()", span="396-397"];
m24_74 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="JsonToken.StartObject", span="334-334"];
m24_76 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="JsonToken.StartArray", span="337-337"];
m24_80 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="string.Compare(constructorName, ''Date'', StringComparison.Ordinal) == 0", span="343-343"];
m24_83 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="JsonToken.PropertyName", span="348-348"];
m24_85 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="JsonToken.Comment", span="351-351"];
m24_87 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="JsonToken.Integer", span="354-354"];
m24_89 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="JsonToken.Float", span="357-357"];
m24_91 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="JsonToken.String", span="360-360"];
m24_93 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="JsonToken.Boolean", span="363-363"];
m24_95 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="JsonToken.Null", span="366-366"];
m24_97 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="JsonToken.Undefined", span="369-369"];
m24_99 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="JsonToken.EndObject", span="372-372"];
m24_101 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="JsonToken.EndArray", span="375-375"];
m24_103 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="JsonToken.EndConstructor", span="378-378"];
m24_105 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="JsonToken.Date", span="381-381"];
m24_107 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="JsonToken.Raw", span="384-384"];
m24_109 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="JsonToken.Bytes", span="387-387"];
m24_73 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="JsonToken.None", span="331-331"];
m24_72 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="reader.TokenType", span="329-329"];
m24_79 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="string constructorName = reader.Value.ToString()", span="341-341"];
m24_111 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''TokenType'', reader.TokenType, ''Unexpected token type.'');", span="391-391"];
m24_78 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="JsonToken.StartConstructor", span="340-340"];
m24_113 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", span="325-325"];
m24_297 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte)", span="778-778"];
m24_298 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte)", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.Integer)", span="780-780"];
m24_299 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(byte)", span="778-778"];
m24_119 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="704-704"];
m24_276 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.Integer)", span="706-706"];
m24_277 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(long)", span="704-704"];
m24_278 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong)", span="714-714"];
m24_279 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.Integer)", span="716-716"];
m24_280 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(ulong)", span="714-714"];
m24_273 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(uint)", span="695-695"];
m24_274 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint)", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.Integer)", span="697-697"];
m24_275 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(uint)", span="695-695"];
m24_145 [cluster="System.Exception.Exception(string)", file="JsonTextReaderTest.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m24_118 [cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0"];
m24_258 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="JsonTextReaderTest.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48"];
m24_59 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="309-309"];
m24_64 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="!IsStartToken(reader.TokenType)", span="317-317"];
m24_67 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="WriteToken(reader, initialDepth)", span="322-322"];
m24_62 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="reader.TokenType == JsonToken.None", span="315-315"];
m24_65 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="initialDepth = reader.Depth + 1", span="318-318"];
m24_66 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="initialDepth = reader.Depth", span="320-320"];
m24_63 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="initialDepth = -1", span="316-316"];
m24_60 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="311-311"];
m24_61 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="int initialDepth", span="313-313"];
m24_68 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="309-309"];
m24_485 [cluster="System.IConvertible.ToChar(System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry System.IConvertible.ToChar(System.IFormatProvider)", span="0-0"];
m24_7 [cluster="System.Collections.Generic.List<T>.List(int)", file="JsonTextReaderTest.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m24_367 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte?)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte?)", span="967-967"];
m24_369 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte?)", file="JsonTextReaderTest.cs", label="WriteNull()", span="970-970"];
m24_370 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte?)", file="JsonTextReaderTest.cs", label="WriteValue(value.Value)", span="972-972"];
m24_368 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte?)", file="JsonTextReaderTest.cs", label="value == null", span="969-969"];
m24_371 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte?)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(byte?)", span="967-967"];
m24_508 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", span="82-82"];
m24_377 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", span="992-992"];
m24_379 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", file="JsonTextReaderTest.cs", label="WriteNull()", span="995-995"];
m24_380 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", file="JsonTextReaderTest.cs", label="WriteValue(value.Value)", span="997-997"];
m24_378 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", file="JsonTextReaderTest.cs", label="value == null", span="994-994"];
m24_381 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", span="992-992"];
m24_487 [cluster="System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry System.IConvertible.ToSByte(System.IFormatProvider)", span="0-0"];
m24_308 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", span="816-816"];
m24_309 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.Date)", span="818-818"];
m24_310 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", span="816-816"];
m24_120 [cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0"];
m24_123 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
m24_146 [cluster="Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", span="191-191"];
m24_125 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="640-640"];
m24_259 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.Null)", span="642-642"];
m24_260 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteNull()", span="640-640"];
m24_347 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool?)", span="918-918"];
m24_349 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="JsonTextReaderTest.cs", label="WriteNull()", span="921-921"];
m24_350 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="JsonTextReaderTest.cs", label="WriteValue(value.Value)", span="923-923"];
m24_348 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="JsonTextReaderTest.cs", label="value == null", span="920-920"];
m24_351 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(bool?)", span="918-918"];
m24_327 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long?)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long?)", span="869-869"];
m24_329 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long?)", file="JsonTextReaderTest.cs", label="WriteNull()", span="872-872"];
m24_330 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long?)", file="JsonTextReaderTest.cs", label="WriteValue(value.Value)", span="874-874"];
m24_328 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long?)", file="JsonTextReaderTest.cs", label="value == null", span="871-871"];
m24_331 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long?)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(long?)", span="869-869"];
m24_512 [cluster="Newtonsoft.Json.JsonWriter.Dispose(bool)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.Dispose(bool)", span="1202-1202"];
m24_513 [cluster="Newtonsoft.Json.JsonWriter.Dispose(bool)", file="JsonTextReaderTest.cs", label="_currentState != State.Closed", span="1204-1204"];
m24_514 [cluster="Newtonsoft.Json.JsonWriter.Dispose(bool)", file="JsonTextReaderTest.cs", label="Close()", span="1205-1205"];
m24_515 [cluster="Newtonsoft.Json.JsonWriter.Dispose(bool)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.Dispose(bool)", span="1202-1202"];
m24_49 [cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="283-283"];
m24_50 [cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", color=green, community=0, file="JsonTextReaderTest.cs", label="AutoCompleteClose(JsonToken.EndConstructor)", prediction=101, span="285-285"];
m24_51 [cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="283-283"];
m24_337 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float?)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float?)", span="894-894"];
m24_339 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float?)", file="JsonTextReaderTest.cs", label="WriteNull()", span="897-897"];
m24_340 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float?)", file="JsonTextReaderTest.cs", label="WriteValue(value.Value)", span="899-899"];
m24_338 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float?)", file="JsonTextReaderTest.cs", label="value == null", span="896-896"];
m24_341 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float?)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(float?)", span="894-894"];
m24_124 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="741-741"];
m24_286 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.Boolean)", span="743-743"];
m24_287 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="741-741"];
m24_489 [cluster="System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry System.IConvertible.ToUInt16(System.IFormatProvider)", span="0-0"];
m24_362 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char?)", span="955-955"];
m24_364 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="JsonTextReaderTest.cs", label="WriteNull()", span="958-958"];
m24_365 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="JsonTextReaderTest.cs", label="WriteValue(value.Value)", span="960-960"];
m24_363 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="JsonTextReaderTest.cs", label="value == null", span="957-957"];
m24_366 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(char?)", span="955-955"];
m24_55 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="300-300"];
m24_56 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", color=green, community=0, file="JsonTextReaderTest.cs", label="WriteEnd(Peek())", prediction=101, span="302-302"];
m24_57 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteEnd()", span="300-300"];
m24_132 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="222-222"];
m24_499 [cluster="System.ArgumentException.ArgumentException(string)", file="JsonTextReaderTest.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m24_317 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int?)", span="844-844"];
m24_319 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="JsonTextReaderTest.cs", label="WriteNull()", span="847-847"];
m24_320 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="JsonTextReaderTest.cs", label="WriteValue(value.Value)", span="849-849"];
m24_318 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="JsonTextReaderTest.cs", label="value == null", span="846-846"];
m24_321 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(int?)", span="844-844"];
m24_311 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Guid)", span="826-826"];
m24_312 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid)", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.String)", span="828-828"];
m24_313 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.Guid)", span="826-826"];
m24_70 [cluster="Newtonsoft.Json.JsonWriter.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.IsStartToken(Newtonsoft.Json.JsonToken)", span="431-431"];
m24_154 [cluster="Newtonsoft.Json.JsonWriter.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label=token, span="433-433"];
m24_159 [cluster="Newtonsoft.Json.JsonWriter.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="return false;", span="440-440"];
m24_158 [cluster="Newtonsoft.Json.JsonWriter.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="return true;", span="438-438"];
m24_155 [cluster="Newtonsoft.Json.JsonWriter.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JsonToken.StartObject", span="435-435"];
m24_157 [cluster="Newtonsoft.Json.JsonWriter.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JsonToken.StartConstructor", span="437-437"];
m24_156 [cluster="Newtonsoft.Json.JsonWriter.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JsonToken.StartArray", span="436-436"];
m24_160 [cluster="Newtonsoft.Json.JsonWriter.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.IsStartToken(Newtonsoft.Json.JsonToken)", span="431-431"];
m24_130 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", span="38-38"];
m24_357 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", span="943-943"];
m24_359 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="JsonTextReaderTest.cs", label="WriteNull()", span="946-946"];
m24_360 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="JsonTextReaderTest.cs", label="WriteValue(value.Value)", span="948-948"];
m24_358 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="JsonTextReaderTest.cs", label="value == null", span="945-945"];
m24_361 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", span="943-943"];
m24_8 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonTextReaderTest.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m24_126 [cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="648-648"];
m24_261 [cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.Undefined)", span="650-650"];
m24_262 [cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteUndefined()", span="648-648"];
m24_117 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1178-1178"];
m24_501 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.Comment)", span="1180-1180"];
m24_502 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1178-1178"];
m24_122 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="676-676"];
m24_268 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.String)", span="678-678"];
m24_269 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(string)", span="676-676"];
m24_129 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="1054-1054"];
m24_403 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="JsonTextReaderTest.cs", label="WriteNull()", span="1057-1057"];
m24_404 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.Bytes)", span="1059-1059"];
m24_402 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="JsonTextReaderTest.cs", label="value == null", span="1056-1056"];
m24_405 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="1054-1054"];
m24_127 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="806-806"];
m24_306 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.Date)", span="808-808"];
m24_307 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="806-806"];
m24_52 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="292-292"];
m24_53 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", color=green, community=0, file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.PropertyName)", prediction=101, span="294-294"];
m24_54 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="292-292"];
m24_42 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="265-265"];
m24_43 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", color=green, community=0, file="JsonTextReaderTest.cs", label="AutoCompleteClose(JsonToken.EndArray)", prediction=101, span="267-267"];
m24_44 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteEndArray()", span="265-265"];
m24_291 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ushort)", span="760-760"];
m24_292 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort)", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.Integer)", span="762-762"];
m24_293 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(ushort)", span="760-760"];
m24_314 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan)", span="835-835"];
m24_315 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan)", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.String)", span="837-837"];
m24_316 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan)", span="835-835"];
m24_170 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", span="52-52"];
m24_492 [cluster="System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry System.IConvertible.ToUInt32(System.IFormatProvider)", span="0-0"];
m24_483 [cluster="System.IConvertible.GetTypeCode()", file="JsonTextReaderTest.cs", label="Entry System.IConvertible.GetTypeCode()", span="0-0"];
m24_382 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", span="1004-1004"];
m24_384 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", file="JsonTextReaderTest.cs", label="WriteNull()", span="1007-1007"];
m24_385 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", file="JsonTextReaderTest.cs", label="WriteValue(value.Value)", span="1009-1009"];
m24_383 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", file="JsonTextReaderTest.cs", label="value == null", span="1006-1006"];
m24_386 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", span="1004-1004"];
m24_263 [cluster="Newtonsoft.Json.JsonWriter.WriteRaw(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRaw(string)", span="657-657"];
m24_264 [cluster="Newtonsoft.Json.JsonWriter.WriteRaw(string)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteRaw(string)", span="657-657"];
m24_486 [cluster="System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry System.IConvertible.ToBoolean(System.IFormatProvider)", span="0-0"];
m24_493 [cluster="System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry System.IConvertible.ToInt64(System.IFormatProvider)", span="0-0"];
m24_491 [cluster="System.IConvertible.ToByte(System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry System.IConvertible.ToByte(System.IFormatProvider)", span="0-0"];
m24_500 [cluster="object.GetType()", file="JsonTextReaderTest.cs", label="Entry object.GetType()", span="0-0"];
m24_28 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteAll()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.AutoCompleteAll()", span="462-462"];
m24_171 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteAll()", file="JsonTextReaderTest.cs", label="_top > 0", span="464-464"];
m24_172 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteAll()", file="JsonTextReaderTest.cs", label="WriteEnd()", span="466-466"];
m24_173 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteAll()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.AutoCompleteAll()", span="462-462"];
m24_29 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="239-239"];
m24_30 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", color=green, community=0, file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.StartObject)", prediction=101, span="241-241"];
m24_31 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", color=green, community=0, file="JsonTextReaderTest.cs", label="Push(JTokenType.Object)", prediction=101, span="242-242"];
m24_32 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteStartObject()", span="239-239"];
m24_397 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", span="1042-1042"];
m24_399 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="JsonTextReaderTest.cs", label="WriteNull()", span="1045-1045"];
m24_400 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="JsonTextReaderTest.cs", label="WriteValue(value.Value)", span="1047-1047"];
m24_398 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="JsonTextReaderTest.cs", label="value == null", span="1044-1044"];
m24_401 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", span="1042-1042"];
m24_131 [cluster="Newtonsoft.Json.JsonWriter.IsEndToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.IsEndToken(Newtonsoft.Json.JsonToken)", span="418-418"];
m24_151 [cluster="Newtonsoft.Json.JsonWriter.IsEndToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="return true;", span="425-425"];
m24_152 [cluster="Newtonsoft.Json.JsonWriter.IsEndToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="return false;", span="427-427"];
m24_147 [cluster="Newtonsoft.Json.JsonWriter.IsEndToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label=token, span="420-420"];
m24_150 [cluster="Newtonsoft.Json.JsonWriter.IsEndToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JsonToken.EndConstructor", span="424-424"];
m24_148 [cluster="Newtonsoft.Json.JsonWriter.IsEndToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JsonToken.EndObject", span="422-422"];
m24_149 [cluster="Newtonsoft.Json.JsonWriter.IsEndToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JsonToken.EndArray", span="423-423"];
m24_153 [cluster="Newtonsoft.Json.JsonWriter.IsEndToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.IsEndToken(Newtonsoft.Json.JsonToken)", span="418-418"];
m24_495 [cluster="System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry System.IConvertible.ToSingle(System.IFormatProvider)", span="0-0"];
m24_223 [cluster="Newtonsoft.Json.JsonWriter.WriteIndent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteIndent()", span="565-565"];
m24_226 [cluster="Newtonsoft.Json.JsonWriter.WriteIndent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteIndent()", span="565-565"];
m24_392 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", span="1030-1030"];
m24_394 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="JsonTextReaderTest.cs", label="WriteNull()", span="1033-1033"];
m24_395 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="JsonTextReaderTest.cs", label="WriteValue(value.Value)", span="1035-1035"];
m24_393 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="JsonTextReaderTest.cs", label="value == null", span="1032-1032"];
m24_396 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", span="1030-1030"];
m24_38 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="256-256"];
m24_39 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", color=green, community=0, file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.StartArray)", prediction=101, span="258-258"];
m24_40 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", color=green, community=0, file="JsonTextReaderTest.cs", label="Push(JTokenType.Array)", prediction=101, span="259-259"];
m24_41 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteStartArray()", span="256-256"];
m24_342 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double?)", span="906-906"];
m24_344 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="JsonTextReaderTest.cs", label="WriteNull()", span="909-909"];
m24_345 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="JsonTextReaderTest.cs", label="WriteValue(value.Value)", span="911-911"];
m24_343 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="JsonTextReaderTest.cs", label="value == null", span="908-908"];
m24_346 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(double?)", span="906-906"];
m24_257 [cluster="System.Enum.ToString()", file="JsonTextReaderTest.cs", label="Entry System.Enum.ToString()", span="0-0"];
m24_229 [cluster="Newtonsoft.Json.JsonWriter.WriteIndentSpace()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteIndentSpace()", span="579-579"];
m24_230 [cluster="Newtonsoft.Json.JsonWriter.WriteIndentSpace()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteIndentSpace()", span="579-579"];
m24_116 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", span="400-400"];
m24_143 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="WriteValue(date)", span="415-415"];
m24_141 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="reader.TokenType != JsonToken.EndConstructor", span="412-412"];
m24_138 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="DateTime date = JsonConvert.ConvertJavaScriptTicksToDateTime(ticks)", span="408-408"];
m24_133 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="!reader.Read()", span="402-402"];
m24_135 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="reader.TokenType != JsonToken.Integer", span="404-404"];
m24_136 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="throw new Exception(''Unexpected token while reading date constructor. Expected Integer, got '' + reader.TokenType);", span="405-405"];
m24_137 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="long ticks = (long)reader.Value", span="407-407"];
m24_139 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="!reader.Read()", span="410-410"];
m24_142 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="throw new Exception(''Unexpected token while reading date constructor. Expected EndConstructor, got '' + reader.TokenType);", span="413-413"];
m24_134 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="throw new Exception(''Unexpected end while reading date constructor.'');", span="403-403"];
m24_140 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="throw new Exception(''Unexpected end while reading date constructor.'');", span="411-411"];
m24_144 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", span="400-400"];
m24_227 [cluster="Newtonsoft.Json.JsonWriter.WriteValueDelimiter()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueDelimiter()", span="572-572"];
m24_228 [cluster="Newtonsoft.Json.JsonWriter.WriteValueDelimiter()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValueDelimiter()", span="572-572"];
m24_300 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", span="788-788"];
m24_301 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.Integer)", span="790-790"];
m24_302 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", span="788-788"];
m24_45 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="274-274"];
m24_46 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", color=green, community=0, file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.StartConstructor)", prediction=101, span="276-276"];
m24_47 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", color=green, community=0, file="JsonTextReaderTest.cs", label="Push(JTokenType.Constructor)", prediction=101, span="277-277"];
m24_48 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="274-274"];
m24_34 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="248-248"];
m24_35 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", color=green, community=0, file="JsonTextReaderTest.cs", label="AutoCompleteClose(JsonToken.EndObject)", prediction=101, span="250-250"];
m24_36 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteEndObject()", span="248-248"];
m24_322 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(uint?)", span="857-857"];
m24_324 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="JsonTextReaderTest.cs", label="WriteNull()", span="860-860"];
m24_325 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="JsonTextReaderTest.cs", label="WriteValue(value.Value)", span="862-862"];
m24_323 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="JsonTextReaderTest.cs", label="value == null", span="859-859"];
m24_326 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(uint?)", span="857-857"];
m24_0 [cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.JsonWriter()", span="191-191"];
m24_1 [cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", color=green, community=0, file="JsonTextReaderTest.cs", label="_stack = new List<JTokenType>(8)", prediction=120, span="193-193"];
m24_2 [cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", color=green, community=0, file="JsonTextReaderTest.cs", label="_stack.Add(JTokenType.None)", prediction=101, span="194-194"];
m24_3 [cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", color=green, community=0, file="JsonTextReaderTest.cs", label="_currentState = State.Start", prediction=122, span="195-195"];
m24_4 [cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", color=green, community=0, file="JsonTextReaderTest.cs", label="_formatting = Formatting.None", prediction=123, span="196-196"];
m24_5 [cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", color=green, community=0, file="JsonTextReaderTest.cs", label="CloseOutput = true", prediction=124, span="198-198"];
m24_6 [cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.JsonWriter()", span="191-191"];
m24_490 [cluster="System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry System.IConvertible.ToInt32(System.IFormatProvider)", span="0-0"];
m24_115 [cluster="string.Compare(string, string, System.StringComparison)", file="JsonTextReaderTest.cs", label="Entry string.Compare(string, string, System.StringComparison)", span="0-0"];
m24_33 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", span="583-583"];
m24_243 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="State newState = stateArray[token][(int)_currentState]", span="606-606"];
m24_245 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="throw new JsonWriterException(''Token {0} in state {1} would result in an invalid JavaScript object.''.FormatWith(CultureInfo.InvariantCulture, tokenBeingWritten.ToString(), _currentState.ToString()));", span="609-609"];
m24_246 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="(_currentState == State.Object || _currentState == State.Array || _currentState == State.Constructor) && tokenBeingWritten != JsonToken.Comment", span="611-611"];
m24_247 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="WriteValueDelimiter()", span="613-613"];
m24_248 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="_currentState == State.Property", span="615-615"];
m24_249 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="_formatting == Formatting.Indented", span="617-617"];
m24_250 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="WriteIndentSpace()", span="618-618"];
m24_251 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="_formatting == Formatting.Indented", span="621-621"];
m24_252 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="WriteState writeState = WriteState", span="623-623"];
m24_254 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="WriteIndent()", span="629-629"];
m24_255 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="_currentState = newState", span="633-633"];
m24_231 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="int token", span="585-585"];
m24_232 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label=tokenBeingWritten, span="587-587"];
m24_233 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="token = (int)tokenBeingWritten", span="590-590"];
m24_253 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="(tokenBeingWritten == JsonToken.PropertyName && writeState != WriteState.Start) ||\r\n            writeState == WriteState.Array || writeState == WriteState.Constructor", span="626-627"];
m24_242 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="token = 7", span="601-601"];
m24_244 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="newState == State.Error", span="608-608"];
m24_234 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JsonToken.Integer", span="592-592"];
m24_241 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JsonToken.Bytes", span="599-599"];
m24_235 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JsonToken.Float", span="593-593"];
m24_240 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JsonToken.Date", span="598-598"];
m24_236 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JsonToken.String", span="594-594"];
m24_239 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JsonToken.Undefined", span="597-597"];
m24_237 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JsonToken.Boolean", span="595-595"];
m24_238 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="JsonToken.Null", span="596-596"];
m24_256 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", span="583-583"];
m24_288 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(short)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(short)", span="750-750"];
m24_289 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(short)", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.Integer)", span="752-752"];
m24_290 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(short)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(short)", span="750-750"];
m24_58 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.Linq.JTokenType)", span="444-444"];
m24_163 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label="WriteEndObject()", span="449-449"];
m24_165 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label="WriteEndArray()", span="452-452"];
m24_167 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label="WriteEndConstructor()", span="455-455"];
m24_161 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label=type, span="446-446"];
m24_168 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label="throw new JsonWriterException(''Unexpected type when writing end: '' + type);", span="458-458"];
m24_162 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label="JTokenType.Object", span="448-448"];
m24_164 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label="JTokenType.Array", span="451-451"];
m24_166 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label="JTokenType.Constructor", span="454-454"];
m24_169 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.Linq.JTokenType)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.Linq.JTokenType)", span="444-444"];
m24_20 [cluster="Newtonsoft.Json.JsonWriter.Peek()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.Peek()", span="218-218"];
m24_21 [cluster="Newtonsoft.Json.JsonWriter.Peek()", color=green, community=0, file="JsonTextReaderTest.cs", label="return _stack[_top];", prediction=101, span="220-220"];
m24_22 [cluster="Newtonsoft.Json.JsonWriter.Peek()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.Peek()", span="218-218"];
m24_121 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="732-732"];
m24_284 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.Float)", span="734-734"];
m24_285 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(double)", span="732-732"];
m24_411 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1079-1079"];
m24_413 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteNull()", span="1083-1083"];
m24_419 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteValue(convertible.ToString(CultureInfo.InvariantCulture))", span="1093-1093"];
m24_422 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteValue(convertible.ToChar(CultureInfo.InvariantCulture))", span="1096-1096"];
m24_425 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteValue(convertible.ToBoolean(CultureInfo.InvariantCulture))", span="1099-1099"];
m24_428 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteValue(convertible.ToSByte(CultureInfo.InvariantCulture))", span="1102-1102"];
m24_431 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteValue(convertible.ToInt16(CultureInfo.InvariantCulture))", span="1105-1105"];
m24_434 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteValue(convertible.ToUInt16(CultureInfo.InvariantCulture))", span="1108-1108"];
m24_437 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteValue(convertible.ToInt32(CultureInfo.InvariantCulture))", span="1111-1111"];
m24_440 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteValue(convertible.ToByte(CultureInfo.InvariantCulture))", span="1114-1114"];
m24_443 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteValue(convertible.ToUInt32(CultureInfo.InvariantCulture))", span="1117-1117"];
m24_446 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteValue(convertible.ToInt64(CultureInfo.InvariantCulture))", span="1120-1120"];
m24_449 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteValue(convertible.ToUInt64(CultureInfo.InvariantCulture))", span="1123-1123"];
m24_452 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteValue(convertible.ToSingle(CultureInfo.InvariantCulture))", span="1126-1126"];
m24_455 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteValue(convertible.ToDouble(CultureInfo.InvariantCulture))", span="1129-1129"];
m24_458 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteValue(convertible.ToDateTime(CultureInfo.InvariantCulture))", span="1132-1132"];
m24_461 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteValue(convertible.ToDecimal(CultureInfo.InvariantCulture))", span="1135-1135"];
m24_464 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteNull()", span="1138-1138"];
m24_467 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteValue((DateTimeOffset)value)", span="1145-1145"];
m24_470 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteValue((byte[])value)", span="1151-1151"];
m24_473 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteValue((Guid)value)", span="1156-1156"];
m24_476 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteValue((Uri)value)", span="1161-1161"];
m24_479 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="WriteValue((TimeSpan)value)", span="1166-1166"];
m24_412 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="value == null", span="1081-1081"];
m24_414 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1084-1084"];
m24_416 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="IConvertible convertible = value as IConvertible", span="1088-1088"];
m24_418 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="TypeCode.String", span="1092-1092"];
m24_420 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1094-1094"];
m24_421 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="TypeCode.Char", span="1095-1095"];
m24_423 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1097-1097"];
m24_424 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="TypeCode.Boolean", span="1098-1098"];
m24_426 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1100-1100"];
m24_427 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="TypeCode.SByte", span="1101-1101"];
m24_429 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1103-1103"];
m24_430 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="TypeCode.Int16", span="1104-1104"];
m24_432 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1106-1106"];
m24_433 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="TypeCode.UInt16", span="1107-1107"];
m24_435 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1109-1109"];
m24_436 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="TypeCode.Int32", span="1110-1110"];
m24_438 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1112-1112"];
m24_439 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="TypeCode.Byte", span="1113-1113"];
m24_441 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1115-1115"];
m24_442 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="TypeCode.UInt32", span="1116-1116"];
m24_444 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1118-1118"];
m24_445 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="TypeCode.Int64", span="1119-1119"];
m24_447 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1121-1121"];
m24_448 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="TypeCode.UInt64", span="1122-1122"];
m24_450 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1124-1124"];
m24_451 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="TypeCode.Single", span="1125-1125"];
m24_453 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1127-1127"];
m24_454 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="TypeCode.Double", span="1128-1128"];
m24_456 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1130-1130"];
m24_457 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="TypeCode.DateTime", span="1131-1131"];
m24_459 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1133-1133"];
m24_460 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="TypeCode.Decimal", span="1134-1134"];
m24_462 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1136-1136"];
m24_463 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="TypeCode.DBNull", span="1137-1137"];
m24_465 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1139-1139"];
m24_466 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="value is DateTimeOffset", span="1143-1143"];
m24_468 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1146-1146"];
m24_469 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="value is byte[]", span="1149-1149"];
m24_471 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1152-1152"];
m24_472 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="value is Guid", span="1154-1154"];
m24_474 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1157-1157"];
m24_475 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="value is Uri", span="1159-1159"];
m24_477 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1162-1162"];
m24_478 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="value is TimeSpan", span="1164-1164"];
m24_480 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="return;", span="1167-1167"];
m24_481 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="throw new ArgumentException(''Unsupported type: {0}. Use the JsonSerializer class to get the object's JSON representation.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="1170-1170"];
m24_415 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="value is IConvertible", span="1086-1086"];
m24_417 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="convertible.GetTypeCode()", span="1090-1090"];
m24_482 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1079-1079"];
m24_496 [cluster="System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry System.IConvertible.ToDouble(System.IFormatProvider)", span="0-0"];
m24_372 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", span="980-980"];
m24_374 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="JsonTextReaderTest.cs", label="WriteNull()", span="983-983"];
m24_375 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="JsonTextReaderTest.cs", label="WriteValue(value.Value)", span="985-985"];
m24_373 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="JsonTextReaderTest.cs", label="value == null", span="982-982"];
m24_376 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", span="980-980"];
m24_270 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="685-685"];
m24_271 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonTextReaderTest.cs", label="AutoComplete(JsonToken.Integer)", span="687-687"];
m24_272 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(int)", span="685-685"];
m24_516 [file="JsonTextReaderTest.cs", label="Newtonsoft.Json.JsonWriter", span=""];
m26_349 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", span="612-612"];
m26_350 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JsonTextWriterTest.cs", label="return GetAttribute<T>(attributeProvider, true);", span="614-614"];
m26_351 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", span="612-612"];
m26_458 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", span="810-810"];
m26_463 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="BindingFlags nonPublicBindingAttr = bindingAttr.RemoveFlag(BindingFlags.Public)", span="817-817"];
m26_462 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="(bindingAttr & BindingFlags.NonPublic) != 0", span="814-814"];
m26_464 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="(targetType = targetType.BaseType) != null", span="819-819"];
m26_465 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="targetType.GetProperties(nonPublicBindingAttr)", span="821-821"];
m26_467 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="int index = initialProperties.IndexOf(p => p.Name == nonPublicProperty.Name)", span="827-827"];
m26_469 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="initialProperties.Add(nonPublicProperty)", span="830-830"];
m26_470 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="initialProperties[index] = nonPublicProperty", span="837-837"];
m26_466 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="PropertyInfo nonPublicProperty = propertyInfo", span="823-823"];
m26_468 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="index == -1", span="828-828"];
m26_471 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", span="810-810"];
m26_154 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", span="294-294"];
m26_155 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(dictionaryType, ''type'')", span="296-296"];
m26_157 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="ImplementsGenericDefinition(dictionaryType, typeof(IDictionary<,>), out genericDictionaryType)", span="299-299"];
m26_156 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="Type genericDictionaryType", span="298-298"];
m26_159 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="throw new Exception(''Type {0} is not a dictionary.''.FormatWith(CultureInfo.InvariantCulture, dictionaryType));", span="302-302"];
m26_168 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="throw new Exception(''Type {0} is not a dictionary.''.FormatWith(CultureInfo.InvariantCulture, dictionaryType));", span="318-318"];
m26_158 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="genericDictionaryType.IsGenericTypeDefinition", span="301-301"];
m26_164 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="typeof(IDictionary).IsAssignableFrom(dictionaryType)", span="310-310"];
m26_160 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="Type[] dictionaryGenericArguments = genericDictionaryType.GetGenericArguments()", span="304-304"];
m26_165 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="keyType = null", span="312-312"];
m26_161 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="keyType = dictionaryGenericArguments[0]", span="306-306"];
m26_162 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="valueType = dictionaryGenericArguments[1]", span="307-307"];
m26_163 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="return;", span="308-308"];
m26_166 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="valueType = null", span="313-313"];
m26_167 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="return;", span="314-314"];
m26_169 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", span="294-294"];
m26_329 [cluster="Unk.IsOverridenGenericMember", file="JsonTextWriterTest.cs", label="Entry Unk.IsOverridenGenericMember", span=""];
m26_152 [cluster="System.Type.GetGenericArguments()", file="JsonTextWriterTest.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m26_438 [cluster="System.Type.GetFields(System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="Entry System.Type.GetFields(System.Reflection.BindingFlags)", span="0-0"];
m26_109 [cluster="string.Equals(string, string, System.StringComparison)", file="JsonTextWriterTest.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m26_251 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="495-495"];
m26_252 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="member.MemberType", span="497-497"];
m26_254 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="FieldInfo fieldInfo = (FieldInfo)member", span="500-500"];
m26_255 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label=nonPublic, span="502-502"];
m26_261 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="PropertyInfo propertyInfo = (PropertyInfo) member", span="508-508"];
m26_264 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label=nonPublic, span="512-512"];
m26_266 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="return (propertyInfo.GetGetMethod(nonPublic) != null);", span="514-514"];
m26_267 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="return false;", span="516-516"];
m26_256 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="return true;", span="503-503"];
m26_258 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="return true;", span="505-505"];
m26_259 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="return false;", span="506-506"];
m26_263 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="return false;", span="511-511"];
m26_265 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="return true;", span="513-513"];
m26_253 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="MemberTypes.Field", span="499-499"];
m26_260 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="MemberTypes.Property", span="507-507"];
m26_257 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="fieldInfo.IsPublic", span="504-504"];
m26_262 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="!propertyInfo.CanRead", span="510-510"];
m26_268 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="495-495"];
m26_379 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, params object[])", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, params object[])", span="652-652"];
m26_380 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, params object[])", file="JsonTextWriterTest.cs", label="return CreateGeneric(genericTypeDefinition, innerTypes, (t, a) => CreateInstance(t, a.ToArray()), args);", span="654-654"];
m26_381 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, params object[])", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, params object[])", span="652-652"];
m26_448 [cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", file="JsonTextWriterTest.cs", label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="194-194"];
m26_374 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentConditionTrue(bool, string, string)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentConditionTrue(bool, string, string)", span="142-142"];
m26_312 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="JsonTextWriterTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m26_69 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", span="144-144"];
m26_70 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="Type implementingType", prediction=126, span="146-146"];
m26_71 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="return ImplementsGenericDefinition(type, genericInterfaceDefinition, out implementingType);", prediction=127, span="147-147"];
m26_72 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", span="144-144"];
m26_395 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsCompatibleValue(object, System.Type)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsCompatibleValue(object, System.Type)", span="668-668"];
m26_398 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsCompatibleValue(object, System.Type)", file="JsonTextWriterTest.cs", label="type.IsAssignableFrom(value.GetType())", span="673-673"];
m26_396 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsCompatibleValue(object, System.Type)", file="JsonTextWriterTest.cs", label="value == null", span="670-670"];
m26_397 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsCompatibleValue(object, System.Type)", file="JsonTextWriterTest.cs", label="return IsNullable(type);", span="671-671"];
m26_399 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsCompatibleValue(object, System.Type)", file="JsonTextWriterTest.cs", label="return true;", span="674-674"];
m26_400 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsCompatibleValue(object, System.Type)", file="JsonTextWriterTest.cs", label="return false;", span="676-676"];
m26_401 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsCompatibleValue(object, System.Type)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsCompatibleValue(object, System.Type)", span="668-668"];
m26_314 [cluster="Unk.First", file="JsonTextWriterTest.cs", label="Entry Unk.First", span=""];
m26_437 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="JsonTextWriterTest.cs", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m26_357 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", span="311-311"];
m26_12 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="94-94"];
m26_316 [cluster="Unk.Where", file="JsonTextWriterTest.cs", label="Entry Unk.Where", span=""];
m26_315 [cluster="Unk.Add", file="JsonTextWriterTest.cs", label="Entry Unk.Add", span=""];
m26_68 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="73-73"];
m26_137 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="268-268"];
m26_138 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="270-270"];
m26_142 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JsonTextWriterTest.cs", label="ImplementsGenericDefinition(type, typeof(IEnumerable<>), out genericListType)", span="277-277"];
m26_139 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JsonTextWriterTest.cs", label="Type genericListType", span="271-271"];
m26_144 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JsonTextWriterTest.cs", label="throw new Exception(''Type {0} is not a collection.''.FormatWith(CultureInfo.InvariantCulture, type));", span="280-280"];
m26_148 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JsonTextWriterTest.cs", label="throw new Exception(''Type {0} is not a collection.''.FormatWith(CultureInfo.InvariantCulture, type));", span="290-290"];
m26_140 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JsonTextWriterTest.cs", label="type.IsArray", span="273-273"];
m26_141 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JsonTextWriterTest.cs", label="return type.GetElementType();", span="275-275"];
m26_146 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JsonTextWriterTest.cs", label="typeof(IEnumerable).IsAssignableFrom(type)", span="284-284"];
m26_143 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JsonTextWriterTest.cs", label="genericListType.IsGenericTypeDefinition", span="279-279"];
m26_145 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JsonTextWriterTest.cs", label="return genericListType.GetGenericArguments()[0];", span="282-282"];
m26_147 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JsonTextWriterTest.cs", label="return null;", span="286-286"];
m26_149 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="268-268"];
m26_16 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="59-59"];
m26_17 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", color=green, community=0, file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(t, ''t'')", prediction=128, span="61-61"];
m26_18 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", color=green, community=0, file="JsonTextWriterTest.cs", label="t.IsValueType", prediction=129, span="63-63"];
m26_19 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", color=green, community=0, file="JsonTextWriterTest.cs", label="return true;", prediction=130, span="64-64"];
m26_20 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", color=green, community=0, file="JsonTextWriterTest.cs", label="return (GetDefaultConstructor(t, nonPublic) != null);", prediction=129, span="66-66"];
m26_21 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="59-59"];
m26_294 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="560-560"];
m26_296 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="targetMembers.AddRange(GetFields(type, bindingAttr))", span="564-564"];
m26_297 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="targetMembers.AddRange(GetProperties(type, bindingAttr))", span="565-565"];
m26_295 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="List<MemberInfo> targetMembers = new List<MemberInfo>()", span="562-562"];
m26_303 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="var members = groupedMember.Members.Where(m => !IsOverridenGenericMember(m, bindingAttr) || m.Name == ''Item'')", span="582-582"];
m26_298 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="List<MemberInfo> distinctMembers = new List<MemberInfo>(targetMembers.Count)", span="571-571"];
m26_299 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="var groupedMembers = targetMembers.GroupBy(m => m.Name).Select(g => new { Count = g.Count(), Members = g.Cast<MemberInfo>() })", span="573-573"];
m26_305 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="return distinctMembers;", span="588-588"];
m26_300 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label=groupedMembers, span="574-574"];
m26_301 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="groupedMember.Count == 1", span="576-576"];
m26_304 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="distinctMembers.AddRange(members)", span="584-584"];
m26_302 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="distinctMembers.Add(groupedMember.Members.First())", span="578-578"];
m26_306 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="560-560"];
m26_151 [cluster="System.Exception.Exception(string)", file="JsonTextWriterTest.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m26_0 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="36-36"];
m26_1 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", color=green, community=0, file="JsonTextWriterTest.cs", label="return (v != null) ? v.GetType() : null;", prediction=132, span="38-38"];
m26_2 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="36-36"];
m26_61 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="JsonTextWriterTest.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48"];
m26_38 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="94-94"];
m26_39 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(t, ''t'')", prediction=133, span="96-96"];
m26_40 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="return (t.IsGenericType && t.GetGenericTypeDefinition() == typeof(Nullable<>));", prediction=134, span="98-98"];
m26_41 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="94-94"];
m26_324 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonTextWriterTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m26_375 [cluster="System.Type.MakeGenericType(params System.Type[])", file="JsonTextWriterTest.cs", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
m26_311 [cluster="System.Collections.Generic.List<T>.List(int)", file="JsonTextWriterTest.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m26_93 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonTextWriterTest.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m26_238 [cluster="System.ArgumentException.ArgumentException(string, System.Exception)", file="JsonTextWriterTest.cs", label="Entry System.ArgumentException.ArgumentException(string, System.Exception)", span="0-0"];
m26_110 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string)", span="218-218"];
m26_111 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string)", file="JsonTextWriterTest.cs", label="Type match", span="220-220"];
m26_112 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string)", file="JsonTextWriterTest.cs", label="return type.AssignableToTypeName(fullTypeName, out match);", span="221-221"];
m26_113 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string)", span="218-218"];
m26_361 [cluster="System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type, bool)", file="JsonTextWriterTest.cs", label="Entry System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type, bool)", span="0-0"];
m26_386 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonTextWriterTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m26_182 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", span="345-345"];
m26_184 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JsonTextWriterTest.cs", label="Type elementType = GetCollectionItemType(list.GetType())", span="349-349"];
m26_183 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(list, ''list'')", span="347-347"];
m26_188 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JsonTextWriterTest.cs", label="i < list.Count", span="355-355"];
m26_189 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JsonTextWriterTest.cs", label="!list[i].Equals(unitializedValue)", span="357-357"];
m26_194 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JsonTextWriterTest.cs", label="i < list.Count", span="363-363"];
m26_195 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JsonTextWriterTest.cs", label="object value = list[i]", span="365-365"];
m26_186 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JsonTextWriterTest.cs", label="object unitializedValue = CreateUnitializedValue(elementType)", span="353-353"];
m26_199 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JsonTextWriterTest.cs", label="throw new Exception(''Type {0} is neither a ValueType or a Class.''.FormatWith(CultureInfo.InvariantCulture, elementType));", span="373-373"];
m26_185 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JsonTextWriterTest.cs", label="elementType.IsValueType", span="351-351"];
m26_192 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JsonTextWriterTest.cs", label="elementType.IsClass", span="361-361"];
m26_200 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JsonTextWriterTest.cs", label="return true;", span="376-376"];
m26_190 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JsonTextWriterTest.cs", label="return false;", span="358-358"];
m26_197 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JsonTextWriterTest.cs", label="return false;", span="368-368"];
m26_187 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JsonTextWriterTest.cs", label="int i = 0", span="355-355"];
m26_191 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JsonTextWriterTest.cs", label="i++", span="355-355"];
m26_193 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JsonTextWriterTest.cs", label="int i = 0", span="363-363"];
m26_198 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JsonTextWriterTest.cs", label="i++", span="363-363"];
m26_196 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JsonTextWriterTest.cs", label="value != null", span="367-367"];
m26_201 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", span="345-345"];
m26_330 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", span="591-591"];
m26_331 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="memberInfo.MemberType != MemberTypes.Field && memberInfo.MemberType != MemberTypes.Property", span="593-593"];
m26_333 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="Type declaringType = memberInfo.DeclaringType", span="596-596"];
m26_339 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="MemberInfo[] members = genericTypeDefinition.GetMember(memberInfo.Name, bindingAttr)", span="602-602"];
m26_336 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="Type genericTypeDefinition = declaringType.GetGenericTypeDefinition()", span="599-599"];
m26_332 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="throw new ArgumentException(''Member must be a field or property.'');", span="594-594"];
m26_335 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="return false;", span="598-598"];
m26_338 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="return false;", span="601-601"];
m26_341 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="return false;", span="604-604"];
m26_344 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="return false;", span="607-607"];
m26_345 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="return true;", span="609-609"];
m26_334 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="!declaringType.IsGenericType", span="597-597"];
m26_337 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="genericTypeDefinition == null", span="600-600"];
m26_340 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="members.Length == 0", span="603-603"];
m26_342 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="Type memberUnderlyingType = GetMemberUnderlyingType(members[0])", span="605-605"];
m26_343 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="!memberUnderlyingType.IsGenericParameter", span="606-606"];
m26_346 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", span="591-591"];
m26_270 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", span="528-528"];
m26_271 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="member.MemberType", span="530-530"];
m26_273 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="FieldInfo fieldInfo = (FieldInfo)member", span="533-533"];
m26_276 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label=nonPublic, span="537-537"];
m26_282 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="PropertyInfo propertyInfo = (PropertyInfo)member", span="543-543"];
m26_285 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label=nonPublic, span="547-547"];
m26_287 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="return (propertyInfo.GetSetMethod(nonPublic) != null);", span="549-549"];
m26_288 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="return false;", span="551-551"];
m26_275 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="return false;", span="536-536"];
m26_277 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="return true;", span="538-538"];
m26_279 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="return true;", span="540-540"];
m26_280 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="return false;", span="541-541"];
m26_284 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="return false;", span="546-546"];
m26_286 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="return true;", span="548-548"];
m26_272 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="MemberTypes.Field", span="532-532"];
m26_281 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="MemberTypes.Property", span="542-542"];
m26_274 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="fieldInfo.IsInitOnly", span="535-535"];
m26_278 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="fieldInfo.IsPublic", span="539-539"];
m26_283 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="!propertyInfo.CanWrite", span="545-545"];
m26_289 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", span="528-528"];
m26_416 [cluster="string.Trim()", file="JsonTextWriterTest.cs", label="Entry string.Trim()", span="0-0"];
m26_406 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", span="718-718"];
m26_407 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JsonTextWriterTest.cs", label="int? assemblyDelimiterIndex = GetAssemblyDelimiterIndex(fullyQualifiedTypeName)", span="720-720"];
m26_408 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JsonTextWriterTest.cs", label="assemblyDelimiterIndex != null", span="722-722"];
m26_409 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JsonTextWriterTest.cs", label="typeName = fullyQualifiedTypeName.Substring(0, assemblyDelimiterIndex.Value).Trim()", span="724-724"];
m26_410 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JsonTextWriterTest.cs", label="assemblyName = fullyQualifiedTypeName.Substring(assemblyDelimiterIndex.Value + 1, fullyQualifiedTypeName.Length - assemblyDelimiterIndex.Value - 1).Trim()", span="725-725"];
m26_411 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JsonTextWriterTest.cs", label="typeName = fullyQualifiedTypeName", span="729-729"];
m26_412 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JsonTextWriterTest.cs", label="assemblyName = null", span="730-730"];
m26_413 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", span="718-718"];
m26_415 [cluster="string.Substring(int, int)", file="JsonTextWriterTest.cs", label="Entry string.Substring(int, int)", span="0-0"];
m26_249 [cluster="System.Reflection.FieldInfo.SetValue(object, object)", file="JsonTextWriterTest.cs", label="Entry System.Reflection.FieldInfo.SetValue(object, object)", span="0-0"];
m26_220 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", span="427-427"];
m26_221 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(property, ''property'')", span="429-429"];
m26_222 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="JsonTextWriterTest.cs", label="return (property.GetIndexParameters().Length > 0);", span="431-431"];
m26_223 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", span="427-427"];
m26_382 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<System.Type, System.Collections.Generic.IList<object>, object>, params object[])", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<System.Type, System.Collections.Generic.IList<object>, object>, params object[])", span="657-657"];
m26_388 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<System.Type, System.Collections.Generic.IList<object>, object>, params object[])", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(genericTypeDefinition, ''genericTypeDefinition'')", span="659-659"];
m26_390 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<System.Type, System.Collections.Generic.IList<object>, object>, params object[])", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(instanceCreator, ''createInstance'')", span="661-661"];
m26_389 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<System.Type, System.Collections.Generic.IList<object>, object>, params object[])", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNullOrEmpty(innerTypes, ''innerTypes'')", span="660-660"];
m26_391 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<System.Type, System.Collections.Generic.IList<object>, object>, params object[])", file="JsonTextWriterTest.cs", label="Type specificType = MakeGenericType(genericTypeDefinition, innerTypes.ToArray())", span="663-663"];
m26_392 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<System.Type, System.Collections.Generic.IList<object>, object>, params object[])", file="JsonTextWriterTest.cs", label="return instanceCreator(specificType, args);", span="665-665"];
m26_393 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<System.Type, System.Collections.Generic.IList<object>, object>, params object[])", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<System.Type, System.Collections.Generic.IList<object>, object>, params object[])", span="657-657"];
m26_352 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", span="617-617"];
m26_353 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", file="JsonTextWriterTest.cs", label="T[] attributes = GetAttributes<T>(attributeProvider, inherit)", span="619-619"];
m26_354 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", file="JsonTextWriterTest.cs", label="return CollectionUtils.GetSingleItem(attributes, true);", span="621-621"];
m26_355 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", span="617-617"];
m26_414 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", span="735-735"];
m26_417 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JsonTextWriterTest.cs", label="int scope = 0", span="739-739"];
m26_419 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JsonTextWriterTest.cs", label="i < fullyQualifiedTypeName.Length", span="740-740"];
m26_420 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JsonTextWriterTest.cs", label="char current = fullyQualifiedTypeName[i]", span="742-742"];
m26_428 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JsonTextWriterTest.cs", label="return i;", span="753-753"];
m26_430 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JsonTextWriterTest.cs", label="return null;", span="758-758"];
m26_418 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JsonTextWriterTest.cs", label="int i = 0", span="740-740"];
m26_423 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JsonTextWriterTest.cs", label="scope++", span="746-746"];
m26_429 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JsonTextWriterTest.cs", label="i++", span="740-740"];
m26_421 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JsonTextWriterTest.cs", label=current, span="743-743"];
m26_427 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JsonTextWriterTest.cs", label="scope == 0", span="752-752"];
m26_422 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JsonTextWriterTest.cs", label="'['", span="745-745"];
m26_425 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JsonTextWriterTest.cs", label="scope--", span="749-749"];
m26_424 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JsonTextWriterTest.cs", label="']'", span="748-748"];
m26_426 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JsonTextWriterTest.cs", label="','", span="751-751"];
m26_431 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", span="735-735"];
m26_60 [cluster="System.ArgumentException.ArgumentException(string, string)", file="JsonTextWriterTest.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m26_22 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", span="74-74"];
m26_26 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", color=green, community=0, file="JsonTextWriterTest.cs", label="BindingFlags accessModifier = BindingFlags.Public", prediction=135, span="76-76"];
m26_27 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", color=green, community=0, file="JsonTextWriterTest.cs", label=nonPublic, prediction=135, span="78-78"];
m26_28 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", color=green, community=0, file="JsonTextWriterTest.cs", label="accessModifier = accessModifier | BindingFlags.NonPublic", prediction=137, span="79-79"];
m26_29 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", color=green, community=0, file="JsonTextWriterTest.cs", label="return t.GetConstructor(accessModifier | BindingFlags.Instance, null, new Type[0], null);", prediction=135, span="81-81"];
m26_30 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", span="74-74"];
m26_213 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="408-408"];
m26_214 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(member, ''member'')", span="410-410"];
m26_215 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="JsonTextWriterTest.cs", label="PropertyInfo propertyInfo = member as PropertyInfo", span="412-412"];
m26_217 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="JsonTextWriterTest.cs", label="return IsIndexedProperty(propertyInfo);", span="415-415"];
m26_218 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="JsonTextWriterTest.cs", label="return false;", span="417-417"];
m26_216 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="JsonTextWriterTest.cs", label="propertyInfo != null", span="414-414"];
m26_219 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="408-408"];
m26_43 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", span="109-109"];
m26_44 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", color=green, community=0, file="JsonTextWriterTest.cs", label="value == null", prediction=139, span="111-111"];
m26_45 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", color=green, community=0, file="JsonTextWriterTest.cs", label="return true;", prediction=140, span="113-113"];
m26_46 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", color=green, community=0, file="JsonTextWriterTest.cs", label="object unitializedValue = CreateUnitializedValue(value.GetType())", prediction=141, span="117-117"];
m26_47 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", color=green, community=0, file="JsonTextWriterTest.cs", label="return value.Equals(unitializedValue);", prediction=142, span="118-118"];
m26_48 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", span="109-109"];
m26_150 [cluster="System.Type.GetElementType()", file="JsonTextWriterTest.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m26_291 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties<T>(System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties<T>(System.Reflection.BindingFlags)", span="555-555"];
m26_292 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties<T>(System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="return GetFieldsAndProperties(typeof(T), bindingAttr);", span="557-557"];
m26_293 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties<T>(System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties<T>(System.Reflection.BindingFlags)", span="555-555"];
m26_405 [cluster="System.Activator.CreateInstance(System.Type, params object[])", file="JsonTextWriterTest.cs", label="Entry System.Activator.CreateInstance(System.Type, params object[])", span="0-0"];
m26_290 [cluster="System.Reflection.PropertyInfo.GetSetMethod(bool)", file="JsonTextWriterTest.cs", label="Entry System.Reflection.PropertyInfo.GetSetMethod(bool)", span="0-0"];
m26_472 [cluster="System.Collections.Generic.IEnumerable<T>.IndexOf<T>(System.Func<T, bool>)", file="JsonTextWriterTest.cs", label="Entry System.Collections.Generic.IEnumerable<T>.IndexOf<T>(System.Func<T, bool>)", span="613-613"];
m26_447 [cluster="Unk.>", file="JsonTextWriterTest.cs", label="Entry Unk.>", span=""];
m26_308 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", span="761-761"];
m26_432 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(targetType, ''targetType'')", span="763-763"];
m26_433 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="List<MemberInfo> fieldInfos = new List<MemberInfo>(targetType.GetFields(bindingAttr))", span="765-765"];
m26_434 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="GetChildPrivateFields(fieldInfos, targetType, bindingAttr)", span="768-768"];
m26_435 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="return fieldInfos.Cast<FieldInfo>();", span="770-770"];
m26_436 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", span="761-761"];
m26_313 [cluster="Unk.Select", file="JsonTextWriterTest.cs", label="Entry Unk.Select", span=""];
m26_23 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="69-69"];
m26_24 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="return GetDefaultConstructor(t, false);", prediction=143, span="71-71"];
m26_25 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="69-69"];
m26_50 [cluster="object.Equals(object)", file="JsonTextWriterTest.cs", label="Entry object.Equals(object)", span="0-0"];
m26_356 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(System.Reflection.ICustomAttributeProvider, bool)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(System.Reflection.ICustomAttributeProvider, bool)", span="624-624"];
m26_358 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(System.Reflection.ICustomAttributeProvider, bool)", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(attributeProvider, ''attributeProvider'')", span="626-626"];
m26_359 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(System.Reflection.ICustomAttributeProvider, bool)", file="JsonTextWriterTest.cs", label="return (T[])attributeProvider.GetCustomAttributes(typeof(T), inherit);", span="628-628"];
m26_360 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(System.Reflection.ICustomAttributeProvider, bool)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(System.Reflection.ICustomAttributeProvider, bool)", span="624-624"];
m26_446 [cluster="System.Reflection.BindingFlags.RemoveFlag(System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="Entry System.Reflection.BindingFlags.RemoveFlag(System.Reflection.BindingFlags)", span="803-803"];
m26_373 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNullOrEmpty<T>(System.Collections.Generic.ICollection<T>, string)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNullOrEmpty<T>(System.Collections.Generic.ICollection<T>, string)", span="66-66"];
m26_347 [cluster="System.ArgumentException.ArgumentException(string)", file="JsonTextWriterTest.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m26_13 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type)", span="54-54"];
m26_14 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="return HasDefaultConstructor(t, false);", prediction=144, span="56-56"];
m26_15 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type)", span="54-54"];
m26_376 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Type, params object[])", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Type, params object[])", span="647-647"];
m26_377 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Type, params object[])", file="JsonTextWriterTest.cs", label="return CreateGeneric(genericTypeDefinition, new [] { innerType }, args);", span="649-649"];
m26_378 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Type, params object[])", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Type, params object[])", span="647-647"];
m26_63 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPropertyIndexed(System.Reflection.PropertyInfo)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsPropertyIndexed(System.Reflection.PropertyInfo)", span="137-137"];
m26_64 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPropertyIndexed(System.Reflection.PropertyInfo)", color=green, community=0, file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(property, ''property'')", prediction=145, span="139-139"];
m26_65 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPropertyIndexed(System.Reflection.PropertyInfo)", color=green, community=0, file="JsonTextWriterTest.cs", label="return !CollectionUtils.IsNullOrEmpty<ParameterInfo>(property.GetIndexParameters());", prediction=146, span="141-141"];
m26_66 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPropertyIndexed(System.Reflection.PropertyInfo)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsPropertyIndexed(System.Reflection.PropertyInfo)", span="137-137"];
m26_126 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", span="241-241"];
m26_135 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="return InheritsGenericDefinitionInternal(currentType.BaseType, genericClassDefinition, out implementingType);", span="260-260"];
m26_127 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="currentType.IsGenericType", span="243-243"];
m26_128 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="Type currentGenericClassDefinition = currentType.GetGenericTypeDefinition()", span="245-245"];
m26_129 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="genericClassDefinition == currentGenericClassDefinition", span="247-247"];
m26_130 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="implementingType = currentType", span="249-249"];
m26_132 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="currentType.BaseType == null", span="254-254"];
m26_131 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="return true;", span="250-250"];
m26_134 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="return false;", span="257-257"];
m26_133 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="implementingType = null", span="256-256"];
m26_136 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", span="241-241"];
m26_119 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", span="230-230"];
m26_120 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="232-232"];
m26_121 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(genericClassDefinition, ''genericClassDefinition'')", span="233-233"];
m26_124 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="return InheritsGenericDefinitionInternal(type, genericClassDefinition, out implementingType);", span="238-238"];
m26_123 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="throw new ArgumentNullException('''{0}' is not a generic class definition.''.FormatWith(CultureInfo.InvariantCulture, genericClassDefinition));", span="236-236"];
m26_122 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="!genericClassDefinition.IsClass || !genericClassDefinition.IsGenericTypeDefinition", span="235-235"];
m26_125 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", span="230-230"];
m26_67 [cluster="System.Reflection.PropertyInfo.GetIndexParameters()", file="JsonTextWriterTest.cs", label="Entry System.Reflection.PropertyInfo.GetIndexParameters()", span="0-0"];
m26_32 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="84-84"];
m26_33 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(t, ''t'')", prediction=147, span="86-86"];
m26_34 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="t.IsValueType", prediction=148, span="88-88"];
m26_35 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="return IsNullableType(t);", prediction=148, span="89-89"];
m26_36 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="return true;", prediction=150, span="91-91"];
m26_37 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="84-84"];
m26_473 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonTextWriterTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m26_387 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateInstance(System.Type, params object[])", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CreateInstance(System.Type, params object[])", span="679-679"];
m26_402 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateInstance(System.Type, params object[])", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="681-681"];
m26_403 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateInstance(System.Type, params object[])", file="JsonTextWriterTest.cs", label="return Activator.CreateInstance(type, args);", span="684-684"];
m26_404 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateInstance(System.Type, params object[])", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CreateInstance(System.Type, params object[])", span="679-679"];
m26_457 [cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0"];
m26_237 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="JsonTextWriterTest.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m26_62 [cluster="System.Activator.CreateInstance(System.Type)", file="JsonTextWriterTest.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m26_153 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonTextWriterTest.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m26_73 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="150-150"];
m26_74 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(type, ''type'')", prediction=151, span="152-152"];
m26_75 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(genericInterfaceDefinition, ''genericInterfaceDefinition'')", prediction=152, span="153-153"];
m26_76 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="!genericInterfaceDefinition.IsInterface || !genericInterfaceDefinition.IsGenericTypeDefinition", prediction=152, span="155-155"];
m26_77 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="throw new ArgumentNullException('''{0}' is not a generic interface definition.''.FormatWith(CultureInfo.InvariantCulture, genericInterfaceDefinition));", prediction=152, span="156-156"];
m26_78 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="type.IsInterface", prediction=152, span="158-158"];
m26_79 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="type.IsGenericType", prediction=152, span="160-160"];
m26_84 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="type.GetInterfaces()", prediction=152, span="172-172"];
m26_80 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="Type interfaceDefinition = type.GetGenericTypeDefinition()", prediction=158, span="162-162"];
m26_81 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="genericInterfaceDefinition == interfaceDefinition", prediction=152, span="164-164"];
m26_82 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="implementingType = type", prediction=160, span="166-166"];
m26_83 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="return true;", prediction=161, span="167-167"];
m26_87 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="genericInterfaceDefinition == interfaceDefinition", prediction=152, span="178-178"];
m26_85 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="i.IsGenericType", prediction=163, span="174-174"];
m26_90 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="implementingType = null", prediction=164, span="186-186"];
m26_86 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="Type interfaceDefinition = i.GetGenericTypeDefinition()", prediction=165, span="176-176"];
m26_88 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="implementingType = i", prediction=166, span="180-180"];
m26_91 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="return false;", prediction=167, span="187-187"];
m26_89 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="return true;", prediction=168, span="181-181"];
m26_92 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="150-150"];
m26_31 [cluster="System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", file="JsonTextWriterTest.cs", label="Entry System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", span="0-0"];
m26_224 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="440-440"];
m26_225 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(member, ''member'')", span="442-442"];
m26_226 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(target, ''target'')", span="443-443"];
m26_234 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonTextWriterTest.cs", label="throw new ArgumentException(''MemberInfo '{0}' is not of type FieldInfo or PropertyInfo''.FormatWith(CultureInfo.InvariantCulture, CultureInfo.InvariantCulture, member.Name), ''member'');", span="459-459"];
m26_233 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonTextWriterTest.cs", label="throw new ArgumentException(''MemberInfo '{0}' has index parameters''.FormatWith(CultureInfo.InvariantCulture, member.Name), e);", span="456-456"];
m26_227 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonTextWriterTest.cs", label="member.MemberType", span="445-445"];
m26_232 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonTextWriterTest.cs", label=TargetParameterCountException, span="454-454"];
m26_229 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonTextWriterTest.cs", label="return ((FieldInfo)member).GetValue(target);", span="448-448"];
m26_231 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonTextWriterTest.cs", label="return ((PropertyInfo)member).GetValue(target, null);", span="452-452"];
m26_228 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonTextWriterTest.cs", label="MemberTypes.Field", span="447-447"];
m26_230 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonTextWriterTest.cs", label="MemberTypes.Property", span="449-449"];
m26_235 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="440-440"];
m26_3 [cluster="object.GetType()", file="JsonTextWriterTest.cs", label="Entry object.GetType()", span="0-0"];
m26_115 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", span="224-224"];
m26_117 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="JsonTextWriterTest.cs", label="return InheritsGenericDefinition(type, genericClassDefinition, out implementingType);", span="227-227"];
m26_116 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="JsonTextWriterTest.cs", label="Type implementingType", span="226-226"];
m26_118 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", span="224-224"];
m26_321 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Entry lambda expression", span="573-573"];
m26_384 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="CreateInstance(t, a.ToArray())", span="654-654"];
m26_449 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Entry lambda expression", span="786-786"];
m26_383 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Entry lambda expression", span="654-654"];
m26_385 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Exit lambda expression", span="654-654"];
m26_327 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="!IsOverridenGenericMember(m, bindingAttr) || m.Name == ''Item''", span="582-582"];
m26_451 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Exit lambda expression", span="786-786"];
m26_450 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="f.IsPrivate", span="786-786"];
m26_474 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Entry lambda expression", span="827-827"];
m26_475 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="p.Name == nonPublicProperty.Name", span="827-827"];
m26_326 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Entry lambda expression", span="582-582"];
m26_328 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Exit lambda expression", span="582-582"];
m26_322 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="new { Count = g.Count(), Members = g.Cast<MemberInfo>() }", span="573-573"];
m26_476 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Exit lambda expression", span="827-827"];
m26_318 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Entry lambda expression", span="573-573"];
m26_323 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Exit lambda expression", span="573-573"];
m26_319 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="m.Name", span="573-573"];
m26_320 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Exit lambda expression", span="573-573"];
m26_114 [cluster="System.Type.AssignableToTypeName(string, out System.Type)", file="JsonTextWriterTest.cs", label="Entry System.Type.AssignableToTypeName(string, out System.Type)", span="190-190"];
m26_250 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="JsonTextWriterTest.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m26_439 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", span="773-773"];
m26_441 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="BindingFlags nonPublicBindingAttr = bindingAttr.RemoveFlag(BindingFlags.Public)", span="780-780"];
m26_440 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="(bindingAttr & BindingFlags.NonPublic) != 0", span="777-777"];
m26_442 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="(targetType = targetType.BaseType) != null", span="782-782"];
m26_443 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="IEnumerable<MemberInfo> childPrivateFields =\r\n            targetType.GetFields(nonPublicBindingAttr).Where(f => f.IsPrivate).Cast<MemberInfo>()", span="785-786"];
m26_444 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="initialFields.AddRange(childPrivateFields)", span="788-788"];
m26_445 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", span="773-773"];
m26_42 [cluster="System.Type.GetGenericTypeDefinition()", file="JsonTextWriterTest.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m26_309 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="JsonTextWriterTest.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m26_176 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", span="331-331"];
m26_179 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", file="JsonTextWriterTest.cs", label="GetDictionaryKeyValueTypes(dictionaryType, out keyType, out valueType)", span="335-335"];
m26_177 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", file="JsonTextWriterTest.cs", label="Type keyType", span="333-333"];
m26_178 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", file="JsonTextWriterTest.cs", label="Type valueType", span="334-334"];
m26_180 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", file="JsonTextWriterTest.cs", label="return keyType;", span="337-337"];
m26_181 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", span="331-331"];
m26_95 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", span="190-190"];
m26_96 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="Type current = type", prediction=169, span="192-192"];
m26_97 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="current != null", prediction=170, span="194-194"];
m26_98 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="string.Equals(current.FullName, fullTypeName, StringComparison.Ordinal)", prediction=169, span="196-196"];
m26_99 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="match = current", prediction=172, span="198-198"];
m26_101 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="current = current.BaseType", prediction=173, span="202-202"];
m26_102 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="type.GetInterfaces()", prediction=169, span="205-205"];
m26_103 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="string.Equals(i.Name, fullTypeName, StringComparison.Ordinal)", prediction=169, span="207-207"];
m26_106 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonTextWriterTest.cs", label="match = null", span="214-214"];
m26_104 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonTextWriterTest.cs", label="match = type", span="209-209"];
m26_100 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="return true;", prediction=176, span="199-199"];
m26_107 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonTextWriterTest.cs", label="return false;", span="215-215"];
m26_105 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonTextWriterTest.cs", label="return true;", span="210-210"];
m26_108 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", span="190-190"];
m26_394 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="JsonTextWriterTest.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m26_239 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", span="469-469"];
m26_240 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(member, ''member'')", span="471-471"];
m26_241 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(target, ''target'')", span="472-472"];
m26_247 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="JsonTextWriterTest.cs", label="throw new ArgumentException(''MemberInfo '{0}' must be of type FieldInfo or PropertyInfo''.FormatWith(CultureInfo.InvariantCulture, member.Name), ''member'');", span="483-483"];
m26_242 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="JsonTextWriterTest.cs", label="member.MemberType", span="474-474"];
m26_244 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="JsonTextWriterTest.cs", label="((FieldInfo)member).SetValue(target, value)", span="477-477"];
m26_246 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="JsonTextWriterTest.cs", label="((PropertyInfo)member).SetValue(target, value, null)", span="480-480"];
m26_243 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="JsonTextWriterTest.cs", label="MemberTypes.Field", span="476-476"];
m26_245 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="JsonTextWriterTest.cs", label="MemberTypes.Property", span="479-479"];
m26_248 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", span="469-469"];
m26_307 [cluster="System.Collections.Generic.List<T>.List()", file="JsonTextWriterTest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m26_317 [cluster="Unk.AddRange", file="JsonTextWriterTest.cs", label="Entry Unk.AddRange", span=""];
m26_269 [cluster="System.Reflection.PropertyInfo.GetGetMethod(bool)", file="JsonTextWriterTest.cs", label="Entry System.Reflection.PropertyInfo.GetGetMethod(bool)", span="0-0"];
m26_170 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", span="322-322"];
m26_173 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", file="JsonTextWriterTest.cs", label="GetDictionaryKeyValueTypes(dictionaryType, out keyType, out valueType)", span="326-326"];
m26_171 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", file="JsonTextWriterTest.cs", label="Type keyType", span="324-324"];
m26_172 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", file="JsonTextWriterTest.cs", label="Type valueType", span="325-325"];
m26_174 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", file="JsonTextWriterTest.cs", label="return valueType;", span="328-328"];
m26_175 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", span="322-322"];
m26_348 [cluster="System.Type.GetMember(string, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="Entry System.Type.GetMember(string, System.Reflection.BindingFlags)", span="0-0"];
m26_236 [cluster="System.Reflection.FieldInfo.GetValue(object)", file="JsonTextWriterTest.cs", label="Entry System.Reflection.FieldInfo.GetValue(object)", span="0-0"];
m26_94 [cluster="System.Type.GetInterfaces()", file="JsonTextWriterTest.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m26_367 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", span="638-638"];
m26_368 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(genericTypeDefinition, ''genericTypeDefinition'')", span="640-640"];
m26_370 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentConditionTrue(genericTypeDefinition.IsGenericTypeDefinition, ''genericTypeDefinition'', ''Type {0} is not a generic type definition.''.FormatWith(CultureInfo.InvariantCulture, genericTypeDefinition))", span="642-642"];
m26_369 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNullOrEmpty<Type>(innerTypes, ''innerTypes'')", span="641-641"];
m26_371 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", file="JsonTextWriterTest.cs", label="return genericTypeDefinition.MakeGenericType(innerTypes);", span="644-644"];
m26_372 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", span="638-638"];
m26_310 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", span="793-793"];
m26_452 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(targetType, ''targetType'')", span="795-795"];
m26_453 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="List<MemberInfo> propertyInfos = new List<MemberInfo>(targetType.GetProperties(bindingAttr))", span="797-797"];
m26_454 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="GetChildPrivateProperties(propertyInfos, targetType, bindingAttr)", span="798-798"];
m26_455 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="return propertyInfos.Cast<PropertyInfo>();", span="800-800"];
m26_456 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", span="793-793"];
m26_366 [cluster="System.Reflection.Assembly.GetName()", file="JsonTextWriterTest.cs", label="Entry System.Reflection.Assembly.GetName()", span="0-0"];
m26_202 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="384-384"];
m26_203 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(member, ''member'')", span="386-386"];
m26_211 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JsonTextWriterTest.cs", label="throw new ArgumentException(''MemberInfo must be of type FieldInfo, PropertyInfo or EventInfo'', ''member'');", span="397-397"];
m26_204 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JsonTextWriterTest.cs", label="member.MemberType", span="388-388"];
m26_206 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JsonTextWriterTest.cs", label="return ((FieldInfo)member).FieldType;", span="391-391"];
m26_208 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JsonTextWriterTest.cs", label="return ((PropertyInfo)member).PropertyType;", span="393-393"];
m26_210 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JsonTextWriterTest.cs", label="return ((EventInfo)member).EventHandlerType;", span="395-395"];
m26_205 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JsonTextWriterTest.cs", label="MemberTypes.Field", span="390-390"];
m26_207 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JsonTextWriterTest.cs", label="MemberTypes.Property", span="392-392"];
m26_209 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JsonTextWriterTest.cs", label="MemberTypes.Event", span="394-394"];
m26_212 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="384-384"];
m26_362 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetNameAndAssessmblyName(System.Type)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetNameAndAssessmblyName(System.Type)", span="631-631"];
m26_363 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetNameAndAssessmblyName(System.Type)", file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(t, ''t'')", span="633-633"];
m26_364 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetNameAndAssessmblyName(System.Type)", file="JsonTextWriterTest.cs", label="return t.FullName + '', '' + t.Assembly.GetName().Name;", span="635-635"];
m26_365 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetNameAndAssessmblyName(System.Type)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetNameAndAssessmblyName(System.Type)", span="631-631"];
m26_49 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", span="122-122"];
m26_51 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(type, ''type'')", prediction=177, span="124-124"];
m26_52 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="type.IsGenericTypeDefinition", prediction=178, span="126-126"];
m26_53 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="throw new ArgumentException(''Type {0} is a generic type definition and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, type), ''type'');", prediction=178, span="127-127"];
m26_54 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="type.IsClass || type.IsInterface || type == typeof(void)", prediction=178, span="129-129"];
m26_55 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="return null;", prediction=181, span="130-130"];
m26_56 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="type.IsValueType", prediction=178, span="131-131"];
m26_57 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="return Activator.CreateInstance(type);", prediction=178, span="132-132"];
m26_58 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="throw new ArgumentException(''Type {0} cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, type), ''type'');", prediction=178, span="134-134"];
m26_59 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", span="122-122"];
m26_4 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", span="41-41"];
m26_5 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="ValidationUtils.ArgumentNotNull(t, ''t'')", prediction=185, span="43-43"];
m26_6 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="t.IsAbstract || t.IsInterface || t.IsArray || t.IsGenericTypeDefinition || t == typeof(void)", prediction=186, span="45-45"];
m26_7 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="return false;", prediction=187, span="46-46"];
m26_8 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="!HasDefaultConstructor(t)", prediction=186, span="48-48"];
m26_9 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="return false;", prediction=189, span="49-49"];
m26_10 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", color=green, community=0, file="JsonTextWriterTest.cs", label="return true;", prediction=190, span="51-51"];
m26_11 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", span="41-41"];
m26_477 [file="JsonTextWriterTest.cs", label="System.Reflection.BindingFlags", span=""];
m26_478 [file="JsonTextWriterTest.cs", label=nonPublicProperty, span=""];
m28_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Example()", file="JsonTokenReaderTest.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Example()", span="48-48"];
m28_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Example()", color=green, community=0, file="JsonTokenReaderTest.cs", label="List<Post> posts = new List<Post>\r\n            {\r\n                new Post\r\n                {\r\n                    Title = ''Episode VII'',\r\n                    Description = ''Episode VII production'',\r\n                    Categories = new List<string>\r\n                    {\r\n                        ''episode-vii'',\r\n                        ''movie''\r\n                    },\r\n                    Link = ''episode-vii-production.aspx''\r\n                }\r\n            }", prediction=191, span="51-64"];
m28_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Example()", color=green, community=0, file="JsonTokenReaderTest.cs", label="JObject o = JObject.FromObject(new\r\n            {\r\n                channel = new\r\n                {\r\n                    title = ''Star Wars'',\r\n                    link = ''http://www.starwars.com'',\r\n                    description = ''Star Wars blog.'',\r\n                    item =\r\n                        from p in posts\r\n                        orderby p.Title\r\n                        select new\r\n                        {\r\n                            title = p.Title,\r\n                            description = p.Description,\r\n                            link = p.Link,\r\n                            category = p.Categories\r\n                        }\r\n                }\r\n            })", prediction=192, span="66-84"];
m28_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Example()", color=green, community=0, file="JsonTokenReaderTest.cs", label="Console.WriteLine(o.ToString())", prediction=193, span="86-86"];
m28_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Example()", color=green, community=0, file="JsonTokenReaderTest.cs", label="Assert.AreEqual(@''{\r\n  ''''channel'''': {\r\n    ''''title'''': ''''Star Wars'''',\r\n    ''''link'''': ''''http://www.starwars.com'''',\r\n    ''''description'''': ''''Star Wars blog.'''',\r\n    ''''item'''': [\r\n      {\r\n        ''''title'''': ''''Episode VII'''',\r\n        ''''description'''': ''''Episode VII production'''',\r\n        ''''link'''': ''''episode-vii-production.aspx'''',\r\n        ''''category'''': [\r\n          ''''episode-vii'''',\r\n          ''''movie''''\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}'', o.ToString())", prediction=192, span="107-124"];
m28_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Example()", file="JsonTokenReaderTest.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Example()", span="48-48"];
m28_11 [cluster="Unk.AreEqual", file="JsonTokenReaderTest.cs", label="Entry Unk.AreEqual", span=""];
m28_8 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonTokenReaderTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="377-377"];
m28_10 [cluster="System.Console.WriteLine(string)", file="JsonTokenReaderTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m28_7 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Post.Post()", file="JsonTokenReaderTest.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Post.Post()", span="38-38"];
m28_9 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonTokenReaderTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410"];
m32_26 [cluster="Newtonsoft.Json.JsonWriter.Pop()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.Pop()", span="266-266"];
m32_27 [cluster="Newtonsoft.Json.JsonWriter.Peek()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.Peek()", span="274-274"];
m32_28 [cluster="Newtonsoft.Json.JsonWriter.Peek()", file="JsonWriter.cs", label="return _stack[_top];", span="276-276"];
m32_50 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", span="433-433"];
m32_22 [cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.PrintTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.PrintTest()", span="90-90"];
m32_23 [cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ToString()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ToString()", span="95-95"];
m32_25 [cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ToString()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ToString()", span="95-95"];
m32_275 [cluster="Newtonsoft.Json.JsonWriter.System.IDisposable.Dispose()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.System.IDisposable.Dispose()", span="765-765"];
m32_276 [cluster="Newtonsoft.Json.JsonWriter.System.IDisposable.Dispose()", file="JsonWriter.cs", label="Dispose(true)", span="767-767"];
m32_277 [cluster="Newtonsoft.Json.JsonWriter.System.IDisposable.Dispose()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.System.IDisposable.Dispose()", span="765-765"];
m32_57 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", color=green, community=0, file="JsonWriter.cs", label="AutoCompleteClose(JsonToken.EndArray)", prediction=195, span="332-332"];
m32_58 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteEndArray()", span="330-330"];
m32_59 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="335-335"];
m32_35 [cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.GetConverter(System.Type)", color=green, community=0, file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.GetConverter(System.Type)", prediction=195, span="121-121"];
m32_36 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", color=green, community=0, file="JsonWriter.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", prediction=195, span="0-0"];
m32_37 [cluster="System.Type.GetInterfaces()", file="JsonWriter.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m32_238 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char)", span="686-686"];
m32_239 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char)", file="JsonWriter.cs", label="WriteValueInternal(JavaScriptConvert.ToString(value), JsonToken.Integer)", span="688-688"];
m32_240 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(char)", span="686-686"];
m32_233 [cluster="Newtonsoft.Json.JavaScriptConvert.ToString(short)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JavaScriptConvert.ToString(short)", span="202-202"];
m32_250 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="713-713"];
m32_251 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonWriter.cs", label="WriteValueInternal(JavaScriptConvert.ToString(value), JsonToken.Float)", span="715-715"];
m32_252 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="713-713"];
m32_29 [cluster="Newtonsoft.Json.JsonWriter.Peek()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.Peek()", span="274-274"];
m32_30 [cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="282-282"];
m32_31 [cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonWriter.cs", label="_writer.Flush()", span="284-284"];
m32_201 [cluster="Newtonsoft.Json.JavaScriptConvert.ToString(string, char)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JavaScriptConvert.ToString(string, char)", span="323-323"];
m32_249 [cluster="Newtonsoft.Json.JavaScriptConvert.ToString(sbyte)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JavaScriptConvert.ToString(sbyte)", span="282-282"];
m32_44 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteStartObject()", span="300-300"];
m32_45 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", span="511-511"];
m32_46 [cluster="System.IO.TextWriter.Write(string)", file="JsonWriter.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m32_47 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="312-312"];
m32_48 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", color=green, community=0, file="JsonWriter.cs", label="AutoCompleteClose(JsonToken.EndObject)", prediction=195, span="314-314"];
m32_218 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float)", span="641-641"];
m32_219 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="JsonWriter.cs", label="WriteValueInternal(JavaScriptConvert.ToString(value), JsonToken.Float)", span="643-643"];
m32_220 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(float)", span="641-641"];
m32_217 [cluster="Newtonsoft.Json.JavaScriptConvert.ToString(ulong)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JavaScriptConvert.ToString(ulong)", span="242-242"];
m32_213 [cluster="Newtonsoft.Json.JavaScriptConvert.ToString(long)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JavaScriptConvert.ToString(long)", span="232-232"];
m32_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonWriter.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m32_15 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonWriter.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m32_16 [cluster="Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.JsonType)", span="257-257"];
m32_18 [cluster="Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="_stack.Count <= _top", span="260-260"];
m32_17 [cluster="Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="_top++", span="259-259"];
m32_19 [cluster="Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="_stack.Add(value)", span="261-261"];
m32_38 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteAll()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.AutoCompleteAll()", span="395-395"];
m32_268 [cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", span="754-754"];
m32_272 [cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="JsonWriter.cs", label="_writer.Write(ws)", span="761-761"];
m32_270 [cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="JsonWriter.cs", label="!StringUtils.IsWhiteSpace(ws)", span="758-758"];
m32_271 [cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="JsonWriter.cs", label="throw new JsonWriterException(''Only white space characters should be used.'');", span="759-759"];
m32_269 [cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="JsonWriter.cs", label="ws != null", span="756-756"];
m32_273 [cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", span="754-754"];
m32_261 [cluster="Newtonsoft.Json.JavaScriptConvert.ToString(System.DateTimeOffset)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JavaScriptConvert.ToString(System.DateTimeOffset)", span="114-114"];
m32_96 [cluster="Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", span="403-403"];
m32_97 [cluster="Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", color=green, community=0, file="JsonWriter.cs", label=token, prediction=199, span="405-405"];
m32_98 [cluster="Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="JsonToken.EndObject", span="407-407"];
m32_100 [cluster="Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="JsonToken.EndArray", span="409-409"];
m32_102 [cluster="Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", color=green, community=0, file="JsonWriter.cs", label="JsonToken.EndConstructor", prediction=200, span="411-411"];
m32_104 [cluster="Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="throw new JsonWriterException(''No type for token: '' + token);", span="414-414"];
m32_103 [cluster="Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="return JsonType.Constructor;", span="412-412"];
m32_99 [cluster="Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="return JsonType.Object;", span="408-408"];
m32_101 [cluster="Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="return JsonType.Array;", span="410-410"];
m32_105 [cluster="Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", span="403-403"];
m32_245 [cluster="Newtonsoft.Json.JavaScriptConvert.ToString(byte)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JavaScriptConvert.ToString(byte)", span="272-272"];
m32_0 [cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="44-44"];
m32_7 [cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", color=green, community=0, file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", prediction=195, span="60-60"];
m32_6 [cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonWriter.cs", label="return sourceType == typeof(string);", span="62-62"];
m32_8 [cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="65-65"];
m32_10 [cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", color=green, community=0, file="JsonWriter.cs", label="return null;", prediction=195, span="68-68"];
m32_9 [cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="value == null", span="67-67"];
m32_11 [cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="return (from w in _writers where w.Name == value.ToString() select w).FirstOrDefault();", span="70-70"];
m32_3 [cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonWriter.cs", label="return destinationType == typeof(string);", span="57-57"];
m32_4 [cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="55-55"];
m32_5 [cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="60-60"];
m32_1 [cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="44-44"];
m32_2 [cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="55-55"];
m32_12 [cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="65-65"];
m32_126 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", color=green, community=0, file="JsonWriter.cs", label="i < levelsToComplete", prediction=203, span="453-453"];
m32_116 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="int levelsToComplete = 0", span="437-437"];
m32_121 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="levelsToComplete = i + 1", span="445-445"];
m32_125 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", color=green, community=0, file="JsonWriter.cs", label="int i = 0", prediction=204, span="453-453"];
m32_138 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", color=green, community=0, file="JsonWriter.cs", label="i++", prediction=204, span="453-453"];
m32_127 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="JsonToken token = GetCloseTokenForType(Pop())", span="455-455"];
m32_139 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", color=green, community=0, file="JsonWriter.cs", label="JsonType currentLevelType = Peek()", prediction=206, span="476-476"];
m32_123 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="levelsToComplete == 0", span="450-450"];
m32_132 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", color=green, community=0, file="JsonWriter.cs", label="_writer.Write(''}'')", prediction=195, span="463-463"];
m32_134 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", color=green, community=0, file="JsonWriter.cs", label="_writer.Write('']'')", prediction=195, span="466-466"];
m32_136 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="_writer.Write('')'')", span="469-469"];
m32_140 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", color=green, community=0, file="JsonWriter.cs", label=currentLevelType, prediction=209, span="478-478"];
m32_147 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="throw new JsonWriterException(''Unknown JsonType: '' + currentLevelType);", span="490-490"];
m32_130 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", color=green, community=0, file="JsonWriter.cs", label=token, prediction=210, span="460-460"];
m32_128 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="_currentState != State.ObjectStart && _currentState != State.ArrayStart", span="457-457"];
m32_129 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="WriteIndent()", span="458-458"];
m32_131 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="JsonToken.EndObject", span="462-462"];
m32_133 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="JsonToken.EndArray", span="465-465"];
m32_135 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="JsonToken.EndConstructor", span="468-468"];
m32_137 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="throw new JsonWriterException(''Invalid JsonToken: '' + token);", span="472-472"];
m32_141 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", color=green, community=0, file="JsonWriter.cs", label="JsonType.Object", prediction=211, span="480-480"];
m32_143 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", color=green, community=0, file="JsonWriter.cs", label="JsonType.Array", prediction=212, span="483-483"];
m32_145 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", color=green, community=0, file="JsonWriter.cs", label="JsonType.None", prediction=213, span="486-486"];
m32_142 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", color=green, community=0, file="JsonWriter.cs", label="_currentState = State.Object", prediction=214, span="481-481"];
m32_144 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", color=green, community=0, file="JsonWriter.cs", label="_currentState = State.Array", prediction=215, span="484-484"];
m32_146 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="_currentState = State.Start", span="487-487"];
m32_118 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="i < _top", span="439-439"];
m32_119 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="int currentLevel = _top - i", span="441-441"];
m32_120 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="_stack[currentLevel] == GetTypeForCloseToken(tokenBeingClosed)", span="443-443"];
m32_117 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="int i = 0", span="439-439"];
m32_124 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="throw new JsonWriterException(''No token to close.'');", span="451-451"];
m32_122 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="i++", span="439-439"];
m32_148 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonToken)", span="433-433"];
m32_32 [cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.GetConverter(System.Type)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.GetConverter(System.Type)", span="121-121"];
m32_242 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte)", span="695-695"];
m32_243 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte)", file="JsonWriter.cs", label="WriteValueInternal(JavaScriptConvert.ToString(value), JsonToken.Integer)", span="697-697"];
m32_244 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(byte)", span="695-695"];
m32_210 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="623-623"];
m32_211 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="JsonWriter.cs", label="WriteValueInternal(JavaScriptConvert.ToString(value), JsonToken.Integer)", span="625-625"];
m32_212 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(long)", span="623-623"];
m32_214 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong)", span="632-632"];
m32_215 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="JsonWriter.cs", label="WriteValueInternal(JavaScriptConvert.ToString(value), JsonToken.Integer)", span="634-634"];
m32_216 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(ulong)", span="632-632"];
m32_206 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(uint)", span="614-614"];
m32_207 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint)", file="JsonWriter.cs", label="WriteValueInternal(JavaScriptConvert.ToString(value), JsonToken.Integer)", span="616-616"];
m32_208 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(uint)", span="614-614"];
m32_33 [cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.GetConverter(System.Type)", file="JsonWriter.cs", label="var converters = type.GetCustomAttributes(typeof(TypeConverterAttribute), true).Union(\r\n                from t in type.GetInterfaces()\r\n                from c in t.GetCustomAttributes(typeof(TypeConverterAttribute), true)\r\n                select c).Distinct()", span="123-126"];
m32_209 [cluster="Newtonsoft.Json.JavaScriptConvert.ToString(uint)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JavaScriptConvert.ToString(uint)", span="222-222"];
m32_274 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", span="69-69"];
m32_258 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", span="731-731"];
m32_259 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", file="JsonWriter.cs", label="WriteValueInternal(JavaScriptConvert.ToString(value), JsonToken.Date)", span="733-733"];
m32_260 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", span="731-731"];
m32_40 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="300-300"];
m32_185 [cluster="Newtonsoft.Json.JsonWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", span="558-558"];
m32_186 [cluster="Newtonsoft.Json.JsonWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="AutoComplete(token)", span="560-560"];
m32_187 [cluster="Newtonsoft.Json.JsonWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="_writer.Write(value)", span="562-562"];
m32_188 [cluster="Newtonsoft.Json.JsonWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", span="558-558"];
m32_257 [cluster="Newtonsoft.Json.JavaScriptConvert.ToString(System.DateTime)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JavaScriptConvert.ToString(System.DateTime)", span="104-104"];
m32_39 [cluster="Unk.Distinct", file="JsonWriter.cs", label="Entry Unk.Distinct", span=""];
m32_56 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="330-330"];
m32_189 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="569-569"];
m32_190 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonWriter.cs", label="WriteValueInternal(JavaScriptConvert.Null, JsonToken.Null)", span="571-571"];
m32_191 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteNull()", span="569-569"];
m32_225 [cluster="Newtonsoft.Json.JavaScriptConvert.ToString(double)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JavaScriptConvert.ToString(double)", span="262-262"];
m32_229 [cluster="Newtonsoft.Json.JavaScriptConvert.ToString(bool)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JavaScriptConvert.ToString(bool)", span="162-162"];
m32_278 [cluster="Newtonsoft.Json.JsonWriter.Dispose(bool)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.Dispose(bool)", span="770-770"];
m32_279 [cluster="Newtonsoft.Json.JsonWriter.Dispose(bool)", file="JsonWriter.cs", label="WriteState != WriteState.Closed", span="772-772"];
m32_280 [cluster="Newtonsoft.Json.JsonWriter.Dispose(bool)", file="JsonWriter.cs", label="Close()", span="773-773"];
m32_281 [cluster="Newtonsoft.Json.JsonWriter.Dispose(bool)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.Dispose(bool)", span="770-770"];
m32_66 [cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="344-344"];
m32_67 [cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", color=green, community=0, file="JsonWriter.cs", label="AutoCompleteClose(JsonToken.EndConstructor)", prediction=195, span="346-346"];
m32_68 [cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="344-344"];
m32_78 [cluster="System.IO.TextWriter.Write(char)", file="JsonWriter.cs", label="Entry System.IO.TextWriter.Write(char)", span="0-0"];
m32_52 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", color=green, community=0, file="JsonWriter.cs", label="AutoComplete(JsonToken.StartArray)", prediction=195, span="322-322"];
m32_53 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", color=green, community=0, file="JsonWriter.cs", label="Push(JsonType.Array)", prediction=195, span="323-323"];
m32_54 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", color=green, community=0, file="JsonWriter.cs", label="_writer.Write(''['')", prediction=195, span="324-324"];
m32_55 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteStartArray()", span="320-320"];
m32_226 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="659-659"];
m32_227 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonWriter.cs", label="WriteValueInternal(JavaScriptConvert.ToString(value), JsonToken.Boolean)", span="661-661"];
m32_228 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="659-659"];
m32_42 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", color=green, community=0, file="JsonWriter.cs", label="Push(JsonType.Object)", prediction=195, span="304-304"];
m32_79 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="372-372"];
m32_80 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", color=green, community=0, file="JsonWriter.cs", label="WriteEnd(Peek())", prediction=195, span="374-374"];
m32_81 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteEnd()", span="372-372"];
m32_43 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", color=green, community=0, file="JsonWriter.cs", label="_writer.Write(''{'')", prediction=195, span="306-306"];
m32_205 [cluster="Newtonsoft.Json.JavaScriptConvert.ToString(int)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JavaScriptConvert.ToString(int)", span="192-192"];
m32_184 [cluster="string.Format(string, object, object)", file="JsonWriter.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m32_192 [cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="577-577"];
m32_193 [cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", color=green, community=0, file="JsonWriter.cs", label="WriteValueInternal(JavaScriptConvert.Undefined, JsonToken.Undefined)", prediction=195, span="579-579"];
m32_194 [cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteUndefined()", span="577-577"];
m32_262 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="741-741"];
m32_263 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JsonWriter.cs", label="AutoComplete(JsonToken.Comment)", span="743-743"];
m32_264 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JsonWriter.cs", label="_writer.Write(''/*'')", span="745-745"];
m32_265 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JsonWriter.cs", label="_writer.Write(text)", span="746-746"];
m32_266 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JsonWriter.cs", label="_writer.Write(''*/'')", span="747-747"];
m32_267 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteComment(string)", span="741-741"];
m32_198 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="596-596"];
m32_51 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="320-320"];
m32_199 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonWriter.cs", label="WriteValueInternal(JavaScriptConvert.ToString(value, _quoteChar), JsonToken.String)", span="598-598"];
m32_200 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(string)", span="596-596"];
m32_254 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="722-722"];
m32_255 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="JsonWriter.cs", label="WriteValueInternal(JavaScriptConvert.ToString(value), JsonToken.Date)", span="724-724"];
m32_256 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="722-722"];
m32_69 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="353-353"];
m32_70 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", color=green, community=0, file="JsonWriter.cs", label="AutoComplete(JsonToken.PropertyName)", prediction=195, span="356-356"];
m32_71 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", color=green, community=0, file="JsonWriter.cs", label=_quoteName, prediction=195, span="358-358"];
m32_73 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", color=green, community=0, file="JsonWriter.cs", label="_writer.Write(name)", prediction=195, span="361-361"];
m32_72 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", color=green, community=0, file="JsonWriter.cs", label="_writer.Write(_quoteChar)", prediction=195, span="359-359"];
m32_74 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", color=green, community=0, file="JsonWriter.cs", label=_quoteName, prediction=195, span="363-363"];
m32_75 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", color=green, community=0, file="JsonWriter.cs", label="_writer.Write(_quoteChar)", prediction=195, span="364-364"];
m32_76 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", color=green, community=0, file="JsonWriter.cs", label="_writer.Write(':')", prediction=195, span="366-366"];
m32_77 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="353-353"];
m32_14 [cluster="Unk.FirstOrDefault", file="JsonWriter.cs", label="Entry Unk.FirstOrDefault", span=""];
m32_234 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ushort)", span="677-677"];
m32_235 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort)", file="JsonWriter.cs", label="WriteValueInternal(JavaScriptConvert.ToString(value), JsonToken.Integer)", span="679-679"];
m32_236 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(ushort)", span="677-677"];
m32_92 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", span="48-48"];
m32_41 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", color=green, community=0, file="JsonWriter.cs", label="AutoComplete(JsonToken.StartObject)", prediction=195, span="302-302"];
m32_195 [cluster="Newtonsoft.Json.JsonWriter.WriteRaw(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRaw(string)", span="586-586"];
m32_196 [cluster="Newtonsoft.Json.JsonWriter.WriteRaw(string)", file="JsonWriter.cs", label="WriteValueInternal(javaScript, JsonToken.Undefined)", span="589-589"];
m32_197 [cluster="Newtonsoft.Json.JsonWriter.WriteRaw(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteRaw(string)", span="586-586"];
m32_49 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteEndObject()", span="312-312"];
m32_237 [cluster="Newtonsoft.Json.JavaScriptConvert.ToString(ushort)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JavaScriptConvert.ToString(ushort)", span="212-212"];
m32_93 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteAll()", file="JsonWriter.cs", label="_top > 0", span="397-397"];
m32_94 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteAll()", file="JsonWriter.cs", label="WriteEnd()", span="399-399"];
m32_95 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteAll()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.AutoCompleteAll()", span="395-395"];
m32_20 [cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.PrintTest()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.PrintTest()", span="90-90"];
m32_21 [cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.PrintTest()", file="JsonWriter.cs", label="return ''ConsoleWriter'';", span="92-92"];
m32_82 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonType)", span="377-377"];
m32_85 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="WriteEndObject()", span="382-382"];
m32_87 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="WriteEndArray()", span="385-385"];
m32_89 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="WriteEndConstructor()", span="388-388"];
m32_83 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label=type, span="379-379"];
m32_90 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="throw new JsonWriterException(''Unexpected type when writing end: '' + type);", span="391-391"];
m32_84 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="JsonType.Object", span="381-381"];
m32_86 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="JsonType.Array", span="384-384"];
m32_88 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="JsonType.Constructor", span="387-387"];
m32_91 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonType)", span="377-377"];
m32_221 [cluster="Newtonsoft.Json.JavaScriptConvert.ToString(float)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JavaScriptConvert.ToString(float)", span="252-252"];
m32_149 [cluster="Newtonsoft.Json.JsonWriter.WriteIndent()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteIndent()", span="494-494"];
m32_150 [cluster="Newtonsoft.Json.JsonWriter.WriteIndent()", file="JsonWriter.cs", label="_formatting == Formatting.Indented", span="496-496"];
m32_151 [cluster="Newtonsoft.Json.JsonWriter.WriteIndent()", file="JsonWriter.cs", label="_writer.Write(Environment.NewLine)", span="498-498"];
m32_153 [cluster="Newtonsoft.Json.JsonWriter.WriteIndent()", file="JsonWriter.cs", label="i < _top", span="500-500"];
m32_155 [cluster="Newtonsoft.Json.JsonWriter.WriteIndent()", file="JsonWriter.cs", label="j < _indentation", span="503-503"];
m32_156 [cluster="Newtonsoft.Json.JsonWriter.WriteIndent()", file="JsonWriter.cs", label="_writer.Write(_indentChar)", span="505-505"];
m32_152 [cluster="Newtonsoft.Json.JsonWriter.WriteIndent()", file="JsonWriter.cs", label="int i = 0", span="500-500"];
m32_158 [cluster="Newtonsoft.Json.JsonWriter.WriteIndent()", file="JsonWriter.cs", label="i++", span="500-500"];
m32_154 [cluster="Newtonsoft.Json.JsonWriter.WriteIndent()", file="JsonWriter.cs", label="int j = 0", span="503-503"];
m32_157 [cluster="Newtonsoft.Json.JsonWriter.WriteIndent()", file="JsonWriter.cs", label="j++", span="503-503"];
m32_159 [cluster="Newtonsoft.Json.JsonWriter.WriteIndent()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteIndent()", span="494-494"];
m32_241 [cluster="Newtonsoft.Json.JavaScriptConvert.ToString(char)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JavaScriptConvert.ToString(char)", span="172-172"];
m32_183 [cluster="System.Enum.ToString()", file="JsonWriter.cs", label="Entry System.Enum.ToString()", span="0-0"];
m32_246 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", span="704-704"];
m32_247 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", file="JsonWriter.cs", label="WriteValueInternal(JavaScriptConvert.ToString(value), JsonToken.Integer)", span="706-706"];
m32_248 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", span="704-704"];
m32_60 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", color=green, community=0, file="JsonWriter.cs", label="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter", prediction=195, span=""];
m32_61 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", color=green, community=0, file="JsonWriter.cs", label="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter", prediction=195, span=""];
m32_63 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", color=green, community=0, file="JsonWriter.cs", label="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter", prediction=195, span=""];
m32_62 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", color=green, community=0, file="JsonWriter.cs", label="Newtonsoft.Json.Tests.TestObjects.TraceWriter", prediction=195, span=""];
m32_64 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", color=green, community=0, file="JsonWriter.cs", label="_writer.Write(''('')", prediction=195, span="341-341"];
m32_65 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="335-335"];
m32_161 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", color=green, community=0, file="JsonWriter.cs", label=tokenBeingWritten, prediction=195, span="515-515"];
m32_160 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="int token", span="513-513"];
m32_162 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="token = (int)tokenBeingWritten", span="518-518"];
m32_163 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="JsonToken.Integer", span="520-520"];
m32_179 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", color=green, community=0, file="JsonWriter.cs", label="(tokenBeingWritten == JsonToken.PropertyName && WriteState != WriteState.Start) ||\r\n        WriteState == WriteState.Array || WriteState == WriteState.Constructor", prediction=195, span="549-550"];
m32_175 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="_writer.Write(',')", span="540-540"];
m32_176 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="_currentState == State.Property", span="542-542"];
m32_177 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="_formatting == Formatting.Indented", span="544-544"];
m32_178 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="_writer.Write(' ')", span="545-545"];
m32_180 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="WriteIndent()", span="552-552"];
m32_181 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="_currentState = newState", span="555-555"];
m32_167 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", color=green, community=0, file="JsonWriter.cs", label="JsonToken.Null", prediction=239, span="524-524"];
m32_166 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="JsonToken.Boolean", span="523-523"];
m32_168 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="JsonToken.Undefined", span="525-525"];
m32_171 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="State newState = stateArray[token, (int)_currentState]", span="533-533"];
m32_173 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="throw new JsonWriterException(string.Format(''Token {0} in state {1} would result in an invalid JavaScript object.'', tokenBeingWritten.ToString(), _currentState.ToString()));", span="536-536"];
m32_174 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="(_currentState == State.Object || _currentState == State.Array || _currentState == State.Constructor) && tokenBeingWritten != JsonToken.Comment", span="538-538"];
m32_164 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="JsonToken.Float", span="521-521"];
m32_165 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="JsonToken.String", span="522-522"];
m32_169 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="JsonToken.Date", span="526-526"];
m32_170 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="token = 6", span="528-528"];
m32_172 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="newState == State.Error", span="535-535"];
m32_182 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", span="511-511"];
m32_230 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(short)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(short)", span="668-668"];
m32_231 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(short)", file="JsonWriter.cs", label="WriteValueInternal(JavaScriptConvert.ToString(value), JsonToken.Integer)", span="670-670"];
m32_232 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(short)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(short)", span="668-668"];
m32_222 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="650-650"];
m32_223 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JsonWriter.cs", label="WriteValueInternal(JavaScriptConvert.ToString(value), JsonToken.Float)", span="652-652"];
m32_224 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(double)", span="650-650"];
m32_253 [cluster="Newtonsoft.Json.JavaScriptConvert.ToString(decimal)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JavaScriptConvert.ToString(decimal)", span="292-292"];
m32_106 [cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonType)", span="418-418"];
m32_107 [cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label=type, span="420-420"];
m32_114 [cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="throw new JsonWriterException(''No close token for type: '' + type);", span="429-429"];
m32_109 [cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="return JsonToken.EndObject;", span="423-423"];
m32_111 [cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="return JsonToken.EndArray;", span="425-425"];
m32_113 [cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="return JsonToken.EndConstructor;", span="427-427"];
m32_108 [cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="JsonType.Object", span="422-422"];
m32_110 [cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="JsonType.Array", span="424-424"];
m32_112 [cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="JsonType.Constructor", span="426-426"];
m32_115 [cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonType)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonType)", span="418-418"];
m32_202 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="605-605"];
m32_203 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonWriter.cs", label="WriteValueInternal(JavaScriptConvert.ToString(value), JsonToken.Integer)", span="607-607"];
m32_204 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(int)", span="605-605"];
m32_282 [file="JsonWriter.cs", label="Newtonsoft.Json.JsonWriter", span=""];
m33_4 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.AndExpressionTest()", file="JToken.cs", label="JObject o2 = new JObject\r\n            {\r\n                { ''Title'', ''Title!'' },\r\n                { ''FirstName'', ''FirstName!'' }\r\n            }", span="90-94"];
m33_13 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.NullValueHandlingSerialization()", file="JToken.cs", label="JsonSerializer jsonSerializer = new JsonSerializer()", span="63-63"];
m33_32 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.BooleanExpressionTest()", color=green, community=0, file="JToken.cs", label="BooleanQueryExpression e2 = new BooleanQueryExpression\r\n            {\r\n                Operator = QueryOperator.LessThanOrEquals,\r\n                Value = new JValue(3),\r\n                Path = new List<PathFilter>\r\n                {\r\n                    new ArrayIndexFilter()\r\n                }\r\n            }", prediction=240, span="182-190"];
m33_26 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JToken.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433"];
m33_30 [cluster="System.Text.StringBuilder.ToString()", color=green, community=0, file="JToken.cs", label="Entry System.Text.StringBuilder.ToString()", prediction=241, span="0-0"];
m33_27 [cluster="System.IO.StringWriter.StringWriter()", file="JToken.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m33_29 [cluster="System.IO.StringWriter.GetStringBuilder()", file="JToken.cs", label="Entry System.IO.StringWriter.GetStringBuilder()", span="0-0"];
m33_31 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JToken.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72"];
m33_33 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JToken.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="686-686"];
m33_34 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.NullValueHandlingBlogPost()", file="JToken.cs", label="Entry Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.NullValueHandlingBlogPost()", span="84-84"];
m33_35 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.NullValueHandlingBlogPost()", file="JToken.cs", label="Movie movie = new Movie()", span="86-86"];
m33_36 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.NullValueHandlingBlogPost()", file="JToken.cs", label="movie.Name = ''Bad Boys III''", span="87-87"];
m33_28 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JToken.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="817-817"];
m33_37 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.NullValueHandlingBlogPost()", file="JToken.cs", label="movie.Description = ''It's no Bad Boys''", span="88-88"];
m33_44 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JToken.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606"];
m33_25 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", file="JToken.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", span="107-107"];
m33_15 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.NullValueHandlingSerialization()", file="JToken.cs", label="StringWriter sw = new StringWriter()", span="66-66"];
m33_11 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.NullValueHandlingSerialization()", file="JToken.cs", label="Entry Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.NullValueHandlingSerialization()", span="59-59"];
m33_16 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.NullValueHandlingSerialization()", file="JToken.cs", label="jsonSerializer.Serialize(sw, s1)", span="67-67"];
m33_12 [cluster="Newtonsoft.Json.Linq.JsonPath.FieldFilter.FieldFilter()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.FieldFilter.FieldFilter()", span="6-6"];
m33_23 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", color=green, community=0, file="JToken.cs", label="JObject o3 = new JObject\r\n            {\r\n                { ''Title'', ''Title!'' }\r\n            }", prediction=242, span="156-159"];
m33_14 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", span="38-38"];
m33_18 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", color=green, community=0, file="JToken.cs", label="CompositeExpression compositeExpression = new CompositeExpression\r\n            {\r\n                Operator = QueryOperator.Or,\r\n                Expressions = new List<QueryExpression>\r\n                {\r\n                    new BooleanQueryExpression\r\n                    {\r\n                        Operator = QueryOperator.Exists,\r\n                        Path = new List<PathFilter>\r\n                        {\r\n                            new FieldFilter\r\n                            {\r\n                                Name = ''FirstName''\r\n                            }\r\n                        }\r\n                    },\r\n                    new BooleanQueryExpression\r\n                    {\r\n                        Operator = QueryOperator.Exists,\r\n                        Path = new List<PathFilter>\r\n                        {\r\n                            new FieldFilter\r\n                            {\r\n                                Name = ''LastName''\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }", prediction=243, span="109-137"];
m33_20 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", color=green, community=0, file="JToken.cs", label="Assert.IsTrue(compositeExpression.IsMatch(o1))", prediction=243, span="146-146"];
m33_22 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", color=green, community=0, file="JToken.cs", label="Assert.IsTrue(compositeExpression.IsMatch(o2))", prediction=243, span="154-154"];
m33_17 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", file="JToken.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", span="107-107"];
m33_19 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", color=green, community=0, file="JToken.cs", label="JObject o1 = new JObject\r\n            {\r\n                { ''Title'', ''Title!'' },\r\n                { ''FirstName'', ''FirstName!'' },\r\n                { ''LastName'', ''LastName!'' }\r\n            }", prediction=246, span="139-144"];
m33_21 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", color=green, community=0, file="JToken.cs", label="JObject o2 = new JObject\r\n            {\r\n                { ''Title'', ''Title!'' },\r\n                { ''FirstName'', ''FirstName!'' }\r\n            }", prediction=247, span="148-152"];
m33_24 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.OrExpressionTest()", color=green, community=0, file="JToken.cs", label="Assert.IsFalse(compositeExpression.IsMatch(o3))", prediction=243, span="161-161"];
m33_9 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.DeserializeEmptyStringIntoDateTimeWithEmptyStringDefaultValue()", file="JToken.cs", label="Assert.AreEqual(c.DateTimeField, default(DateTime))", span="54-54"];
m33_38 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70"];
m33_39 [cluster="Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter.ArrayIndexFilter()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter.ArrayIndexFilter()", span="6-6"];
m33_41 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", span="71-71"];
m33_42 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.NullValueHandlingBlogPost()", file="JToken.cs", label="Exit Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.NullValueHandlingBlogPost()", span="84-84"];
m33_6 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.AndExpressionTest()", file="JToken.cs", label="JObject o3 = new JObject\r\n            {\r\n                { ''Title'', ''Title!'' }\r\n            }", span="98-101"];
m33_7 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.AndExpressionTest()", file="JToken.cs", label="Assert.IsFalse(compositeExpression.IsMatch(o3))", span="103-103"];
m33_8 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.AndExpressionTest()", file="JToken.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests.AndExpressionTest()", span="49-49"];
m33_10 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.DeserializeEmptyStringIntoDateTimeWithEmptyStringDefaultValue()", file="JToken.cs", label="Exit Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.DeserializeEmptyStringIntoDateTimeWithEmptyStringDefaultValue()", span="51-51"];
m33_0 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.DeserializeNullIntoDateTime()", file="JToken.cs", label="Entry Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.DeserializeNullIntoDateTime()", span="44-44"];
m33_1 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.DeserializeNullIntoDateTime()", color=green, community=0, file="JToken.cs", label="DateTimeTestClass c = JsonConvert.DeserializeObject<DateTimeTestClass>(@''{DateTimeField:null}'', new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", prediction=249, span="46-46"];
m33_2 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.DeserializeNullIntoDateTime()", color=green, community=0, file="JToken.cs", label="Assert.AreEqual(c.DateTimeField, default(DateTime))", prediction=250, span="47-47"];
m33_3 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.DeserializeNullIntoDateTime()", file="JToken.cs", label="Exit Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.DeserializeNullIntoDateTime()", span="44-44"];
m33_5 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JToken.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802"];
m33_45 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JToken.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="184-184"];
m33_43 [cluster="Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", file="JToken.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", span="30-30"];
m35_154 [cluster="Unk.Contains", file="JValue.cs", label="Entry Unk.Contains", span=""];
m35_10 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.DeserializeEmptyStringIntoDateTimeWithEmptyStringDefaultValue()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.DeserializeEmptyStringIntoDateTimeWithEmptyStringDefaultValue()", span="45-45"];
m35_90 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetSchemaSerializable()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetSchemaSerializable()", span="199-199"];
m35_94 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetSchemaSerializable()", file="JValue.cs", label="return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);", span="204-204"];
m35_91 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetSchemaSerializable()", file="JValue.cs", label="global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream()", span="201-201"];
m35_93 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetSchemaSerializable()", file="JValue.cs", label="stream.Position = 0", span="203-203"];
m35_92 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetSchemaSerializable()", file="JValue.cs", label="WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null))", span="202-202"];
m35_95 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetSchemaSerializable()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetSchemaSerializable()", span="199-199"];
m35_295 [cluster="global::System.Xml.Schema.XmlSchemaAttribute.cstr", file="JValue.cs", label="Entry global::System.Xml.Schema.XmlSchemaAttribute.cstr", span=""];
m35_192 [cluster="Unk.NewRow", file="JValue.cs", label="Entry Unk.NewRow", span=""];
m35_25 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="JValue.cs", label="DataSetName = ds.DataSetName", prediction=251, span="81-81"];
m35_225 [cluster="Unk.OnRowChanged", file="JValue.cs", label="Entry Unk.OnRowChanged", span=""];
m35_209 [cluster="global::System.Data.DataColumn.cstr", file="JValue.cs", label="Entry global::System.Data.DataColumn.cstr", span=""];
m35_11 [cluster="Unk.EndInit", file="JValue.cs", label="Entry Unk.EndInit", span=""];
m35_12 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="61-61"];
m35_13 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JValue.cs", label="(IsBinarySerialized(info, context) == true)", span="64-64"];
m35_16 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JValue.cs", label="Tables.CollectionChanged += schemaChangedHandler1", span="68-68"];
m35_23 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JValue.cs", label="(ds.Tables[''Customers''] != null)", span="77-77"];
m35_14 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JValue.cs", label="InitVars(false)", span="66-66"];
m35_18 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JValue.cs", label="return;", span="70-70"];
m35_20 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JValue.cs", label="(DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)", span="73-73"];
m35_22 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JValue.cs", label="ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)))", span="76-76"];
m35_15 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JValue.cs", label="global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(SchemaChanged)", span="67-67"];
m35_17 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JValue.cs", label="Relations.CollectionChanged += schemaChangedHandler1", span="69-69"];
m35_19 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JValue.cs", label="string strSchema = ((string)(info.GetValue(''XmlSchema'', typeof(string))))", span="72-72"];
m35_21 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JValue.cs", label="global::System.Data.DataSet ds = new global::System.Data.DataSet()", span="75-75"];
m35_24 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="JValue.cs", label="base.Tables.Add(new CustomersDataTable(ds.Tables[''Customers'']))", prediction=252, span="79-79"];
m35_51 [cluster="Unk.GetSerializationData", file="JValue.cs", label="Entry Unk.GetSerializationData", span=""];
m35_47 [cluster="CustomersDataTable.cstr", file="JValue.cs", label="Entry CustomersDataTable.cstr", span=""];
m35_158 [cluster="System.Collections.IEnumerator.MoveNext()", file="JValue.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m35_119 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.SchemaChanged(object, System.ComponentModel.CollectionChangeEventArgs)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.SchemaChanged(object, System.ComponentModel.CollectionChangeEventArgs)", span="249-249"];
m35_121 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.SchemaChanged(object, System.ComponentModel.CollectionChangeEventArgs)", file="JValue.cs", label="InitVars()", span="253-253"];
m35_120 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.SchemaChanged(object, System.ComponentModel.CollectionChangeEventArgs)", file="JValue.cs", label="(e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)", span="251-251"];
m35_122 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.SchemaChanged(object, System.ComponentModel.CollectionChangeEventArgs)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.SchemaChanged(object, System.ComponentModel.CollectionChangeEventArgs)", span="249-249"];
m35_49 [cluster="Unk.Merge", file="JValue.cs", label="Entry Unk.Merge", span=""];
m35_210 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.NewCustomersRow()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.NewCustomersRow()", span="460-460"];
m35_211 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.NewCustomersRow()", file="JValue.cs", label="return ((CustomersRow)(NewRow()));", span="462-462"];
m35_212 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.NewCustomersRow()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.NewCustomersRow()", span="460-460"];
m35_228 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)", span="492-492"];
m35_229 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)", file="JValue.cs", label="base.OnRowChanging(e)", span="494-494"];
m35_230 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)", file="JValue.cs", label="(CustomersRowChanging != null)", span="495-495"];
m35_231 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)", file="JValue.cs", label="CustomersRowChanging(this, new CustomersRowChangeEvent(((CustomersRow)(e.Row)), e.Action))", span="497-497"];
m35_232 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)", span="492-492"];
m35_182 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", span="401-401"];
m35_183 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", file="JValue.cs", label="Rows.Add(row)", span="403-403"];
m35_184 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", span="401-401"];
m35_33 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="JValue.cs", label="ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)))", prediction=253, span="92-92"];
m35_48 [cluster="Unk.Add", file="JValue.cs", label="Entry Unk.Add", span=""];
m35_4 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", file="JValue.cs", label="base.Tables.CollectionChanged += schemaChangedHandler", span="54-54"];
m35_67 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeRelations()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeRelations()", span="163-163"];
m35_68 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeRelations()", color=green, community=0, file="JValue.cs", label="return false;", prediction=254, span="165-165"];
m35_69 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeRelations()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeRelations()", span="163-163"];
m35_88 [cluster="Unk.Reset", file="JValue.cs", label="Entry Unk.Reset", span=""];
m35_43 [cluster="Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", span="7-7"];
m35_63 [cluster="Unk.Clone", file="JValue.cs", label="Entry Unk.Clone", span=""];
m35_99 [cluster="Unk.Read", file="JValue.cs", label="Entry Unk.Read", span=""];
m35_44 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="605-605"];
m35_107 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitVars()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitVars()", span="445-445"];
m35_204 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitVars()", file="JValue.cs", label="columnCustomerID = base.Columns[''CustomerID'']", span="447-447"];
m35_205 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitVars()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitVars()", span="445-445"];
m35_193 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetEnumerator()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetEnumerator()", span="422-422"];
m35_194 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetEnumerator()", file="JValue.cs", label="return Rows.GetEnumerator();", span="424-424"];
m35_195 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetEnumerator()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetEnumerator()", span="422-422"];
m35_123 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", span="259-259"];
m35_124 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="CustomerDataSet ds = new CustomerDataSet()", span="261-261"];
m35_148 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="xs.Add(dsSchema)", span="310-310"];
m35_129 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="sequence.Items.Add(any)", span="266-266"];
m35_125 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType()", span="262-262"];
m35_128 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="any.Namespace = ds.Namespace", span="265-265"];
m35_131 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable()", span="268-268"];
m35_132 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="xs.Contains(dsSchema.TargetNamespace)", span="269-269"];
m35_147 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="return type;", span="293-293"];
m35_138 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="schemas.MoveNext()", span="277-277"];
m35_149 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="return type;", span="311-311"];
m35_126 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence()", span="263-263"];
m35_130 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="type.Particle = sequence", span="267-267"];
m35_137 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator()", span="277-277"];
m35_127 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny()", span="264-264"];
m35_136 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="dsSchema.Write(s1)", span="276-276"];
m35_133 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream()", span="271-271"];
m35_146 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="(s1.Position == s1.Length)", span="291-291"];
m35_142 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="(s1.Length == s2.Length)", span="282-282"];
m35_139 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current))", span="279-279"];
m35_135 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="global::System.Xml.Schema.XmlSchema schema = null", span="275-275"];
m35_134 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream()", span="272-272"];
m35_143 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="s1.Position = 0", span="284-284"];
m35_145 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="((s1.Position != s1.Length)\r\n                                    && (s1.ReadByte() == s2.ReadByte()))", span="286-287"];
m35_141 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="schema.Write(s2)", span="281-281"];
m35_140 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="s2.SetLength(0)", span="280-280"];
m35_144 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="s2.Position = 0", span="285-285"];
m35_150 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", span="259-259"];
m35_34 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.NullValueHandlingBlogPost()", color=green, community=0, file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.NullValueHandlingBlogPost()", prediction=255, span="77-77"];
m35_32 [cluster="System.IO.StringReader.StringReader(string)", color=green, community=0, file="JValue.cs", label="Entry System.IO.StringReader.StringReader(string)", prediction=252, span="0-0"];
m35_35 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.NullValueHandlingBlogPost()", file="JValue.cs", label="Movie movie = new Movie()", span="79-79"];
m35_26 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", color=green, community=0, file="JValue.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", prediction=252, span="322-322"];
m35_27 [cluster="System.IO.StringWriter.StringWriter()", color=green, community=0, file="JValue.cs", label="Entry System.IO.StringWriter.StringWriter()", prediction=252, span="0-0"];
m35_28 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", color=green, community=0, file="JValue.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", prediction=252, span="465-465"];
m35_29 [cluster="System.IO.StringWriter.GetStringBuilder()", color=green, community=0, file="JValue.cs", label="Entry System.IO.StringWriter.GetStringBuilder()", prediction=252, span="0-0"];
m35_30 [cluster="System.Text.StringBuilder.ToString()", color=green, community=0, file="JValue.cs", label="Entry System.Text.StringBuilder.ToString()", prediction=252, span="0-0"];
m35_31 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", color=green, community=0, file="JValue.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", prediction=252, span="69-69"];
m35_36 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.NullValueHandlingBlogPost()", file="JValue.cs", label="movie.Name = ''Bad Boys III''", span="80-80"];
m35_37 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.NullValueHandlingBlogPost()", file="JValue.cs", label="movie.Description = ''It's no Bad Boys''", span="81-81"];
m35_38 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.NullValueHandlingBlogPost()", file="JValue.cs", label="string included = JsonConvert.SerializeObject(movie,\r\n        Formatting.Indented,\r\n        new JsonSerializerSettings { })", span="83-85"];
m35_96 [cluster="System.IO.MemoryStream.MemoryStream()", file="JValue.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m35_42 [cluster="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.NullValueHandlingBlogPost()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests.NullValueHandlingBlogPost()", span="77-77"];
m35_160 [cluster="System.IO.MemoryStream.ReadByte()", file="JValue.cs", label="Entry System.IO.MemoryStream.ReadByte()", span="0-0"];
m35_5 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", file="JValue.cs", label="base.Relations.CollectionChanged += schemaChangedHandler", span="55-55"];
m35_234 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)", span="503-503"];
m35_235 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)", file="JValue.cs", label="base.OnRowDeleted(e)", span="505-505"];
m35_236 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)", file="JValue.cs", label="(CustomersRowDeleted != null)", span="506-506"];
m35_237 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)", file="JValue.cs", label="CustomersRowDeleted(this, new CustomersRowChangeEvent(((CustomersRow)(e.Row)), e.Action))", span="508-508"];
m35_238 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)", span="503-503"];
m35_220 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)", span="481-481"];
m35_221 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)", file="JValue.cs", label="base.OnRowChanged(e)", span="483-483"];
m35_222 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)", file="JValue.cs", label="(CustomersRowChanged != null)", span="484-484"];
m35_223 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)", file="JValue.cs", label="CustomersRowChanged(this, new CustomersRowChangeEvent(((CustomersRow)(e.Row)), e.Action))", span="486-486"];
m35_224 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)", span="481-481"];
m35_46 [cluster="Unk.ReadXmlSchema", file="JValue.cs", label="Entry Unk.ReadXmlSchema", span=""];
m35_89 [cluster="Unk.ReadXml", file="JValue.cs", label="Entry Unk.ReadXml", span=""];
m35_250 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", span="532-532"];
m35_253 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="CustomerDataSet ds = new CustomerDataSet()", span="536-536"];
m35_291 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="xs.Add(dsSchema)", span="599-599"];
m35_268 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="type.Attributes.Add(attribute1)", span="551-551"];
m35_272 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="type.Attributes.Add(attribute2)", span="555-555"];
m35_259 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="sequence.Items.Add(any1)", span="542-542"];
m35_264 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="sequence.Items.Add(any2)", span="547-547"];
m35_252 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence()", span="535-535"];
m35_254 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny()", span="537-537"];
m35_267 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="attribute1.FixedValue = ds.Namespace", span="550-550"];
m35_274 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable()", span="557-557"];
m35_275 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="xs.Contains(dsSchema.TargetNamespace)", span="558-558"];
m35_290 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="return type;", span="582-582"];
m35_281 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="schemas.MoveNext()", span="566-566"];
m35_292 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="return type;", span="600-600"];
m35_251 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType()", span="534-534"];
m35_269 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute()", span="552-552"];
m35_271 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="attribute2.FixedValue = ''CustomersDataTable''", span="554-554"];
m35_273 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="type.Particle = sequence", span="556-556"];
m35_258 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax", span="541-541"];
m35_260 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny()", span="543-543"];
m35_263 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax", span="546-546"];
m35_265 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute()", span="548-548"];
m35_255 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="any1.Namespace = ''http://www.w3.org/2001/XMLSchema''", span="538-538"];
m35_266 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="attribute1.Name = ''namespace''", span="549-549"];
m35_279 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="dsSchema.Write(s1)", span="565-565"];
m35_280 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator()", span="566-566"];
m35_276 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream()", span="560-560"];
m35_289 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="(s1.Position == s1.Length)", span="580-580"];
m35_285 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="(s1.Length == s2.Length)", span="571-571"];
m35_282 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current))", span="568-568"];
m35_270 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="attribute2.Name = ''tableTypeName''", span="553-553"];
m35_257 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="any1.MaxOccurs = decimal.MaxValue", span="540-540"];
m35_261 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="any2.Namespace = ''urn:schemas-microsoft-com:xml-diffgram-v1''", span="544-544"];
m35_262 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="any2.MinOccurs = new decimal(1)", span="545-545"];
m35_256 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="any1.MinOccurs = new decimal(0)", span="539-539"];
m35_278 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="global::System.Xml.Schema.XmlSchema schema = null", span="564-564"];
m35_277 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream()", span="561-561"];
m35_286 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="s1.Position = 0", span="573-573"];
m35_288 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="((s1.Position != s1.Length)\r\n                                        && (s1.ReadByte() == s2.ReadByte()))", span="575-576"];
m35_284 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="schema.Write(s2)", span="570-570"];
m35_283 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="s2.SetLength(0)", span="569-569"];
m35_287 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="s2.Position = 0", span="574-574"];
m35_293 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", span="532-532"];
m35_185 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", span="408-408"];
m35_189 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", file="JValue.cs", label="Rows.Add(rowCustomersRow)", span="416-416"];
m35_188 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", file="JValue.cs", label="rowCustomersRow.ItemArray = columnValuesArray", span="415-415"];
m35_190 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", file="JValue.cs", label="return rowCustomersRow;", span="417-417"];
m35_186 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", file="JValue.cs", label="CustomersRow rowCustomersRow = ((CustomersRow)(NewRow()))", span="410-410"];
m35_187 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", file="JValue.cs", label="object[] columnValuesArray = new object[]\r\n                {\r\n                    CustomerID\r\n                }", span="411-414"];
m35_191 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", span="408-408"];
m35_245 [cluster="Unk.OnRowDeleting", file="JValue.cs", label="Entry Unk.OnRowDeleting", span=""];
m35_294 [cluster="decimal.Decimal(int)", file="JValue.cs", label="Entry decimal.Decimal(int)", span="0-0"];
m35_115 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable()", span="328-328"];
m35_162 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable()", file="JValue.cs", label="BeginInit()", span="331-331"];
m35_164 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable()", file="JValue.cs", label="EndInit()", span="333-333"];
m35_161 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable()", file="JValue.cs", label="TableName = ''Customers''", span="330-330"];
m35_163 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable()", file="JValue.cs", label="InitClass()", span="332-332"];
m35_165 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable()", span="328-328"];
m35_57 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.Clone()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.Clone()", span="146-146"];
m35_58 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.Clone()", color=green, community=0, file="JValue.cs", label="CustomerDataSet cln = ((CustomerDataSet)(base.Clone()))", prediction=263, span="148-148"];
m35_59 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.Clone()", file="JValue.cs", label="cln.InitVars()", span="149-149"];
m35_60 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.Clone()", file="JValue.cs", label="cln.SchemaSerializationMode = SchemaSerializationMode", span="150-150"];
m35_61 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.Clone()", file="JValue.cs", label="return cln;", span="151-151"];
m35_62 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.Clone()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.Clone()", span="146-146"];
m35_240 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)", span="514-514"];
m35_241 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)", file="JValue.cs", label="base.OnRowDeleting(e)", span="516-516"];
m35_242 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)", file="JValue.cs", label="(CustomersRowDeleting != null)", span="517-517"];
m35_243 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)", file="JValue.cs", label="CustomersRowDeleting(this, new CustomersRowChangeEvent(((CustomersRow)(e.Row)), e.Action))", span="519-519"];
m35_244 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)", span="514-514"];
m35_97 [cluster="global::System.Xml.XmlTextWriter.cstr", file="JValue.cs", label="Entry global::System.Xml.XmlTextWriter.cstr", span=""];
m35_40 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", span="216-216"];
m35_6 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", file="JValue.cs", label="EndInit()", span="56-56"];
m35_239 [cluster="Unk.OnRowDeleted", file="JValue.cs", label="Entry Unk.OnRowDeleted", span=""];
m35_7 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", span="49-49"];
m35_8 [cluster="Unk.BeginInit", file="JValue.cs", label="Entry Unk.BeginInit", span=""];
m35_9 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", span="230-230"];
m35_70 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", span="170-170"];
m35_71 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", color=green, community=0, file="JValue.cs", label="(DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)", prediction=264, span="172-172"];
m35_72 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", color=green, community=0, file="JValue.cs", label="Reset()", prediction=265, span="174-174"];
m35_85 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", file="JValue.cs", label="ReadXml(reader)", span="192-192"];
m35_73 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", file="JValue.cs", label="global::System.Data.DataSet ds = new global::System.Data.DataSet()", span="175-175"];
m35_83 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", color=green, community=0, file="JValue.cs", label="Merge(ds, false, global::System.Data.MissingSchemaAction.Add)", prediction=266, span="187-187"];
m35_82 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", file="JValue.cs", label="EnforceConstraints = ds.EnforceConstraints", span="186-186"];
m35_84 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", file="JValue.cs", label="InitVars()", span="188-188"];
m35_76 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", file="JValue.cs", label="base.Tables.Add(new CustomersDataTable(ds.Tables[''Customers'']))", span="179-179"];
m35_86 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", file="JValue.cs", label="InitVars()", span="193-193"];
m35_74 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", file="JValue.cs", label="ds.ReadXml(reader)", span="176-176"];
m35_75 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", file="JValue.cs", label="(ds.Tables[''Customers''] != null)", span="177-177"];
m35_77 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", file="JValue.cs", label="DataSetName = ds.DataSetName", span="181-181"];
m35_78 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", file="JValue.cs", label="Prefix = ds.Prefix", span="182-182"];
m35_79 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", file="JValue.cs", label="Namespace = ds.Namespace", span="183-183"];
m35_80 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", file="JValue.cs", label="Locale = ds.Locale", span="184-184"];
m35_81 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", file="JValue.cs", label="CaseSensitive = ds.CaseSensitive", span="185-185"];
m35_87 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", span="170-170"];
m35_166 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitClass()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitClass()", span="452-452"];
m35_207 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitClass()", file="JValue.cs", label="base.Columns.Add(columnCustomerID)", span="455-455"];
m35_206 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitClass()", file="JValue.cs", label="columnCustomerID = new global::System.Data.DataColumn(''CustomerID'', typeof(string), null, global::System.Data.MappingType.Element)", span="454-454"];
m35_208 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitClass()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitClass()", span="452-452"];
m35_98 [cluster="Unk.WriteXmlSchema", file="JValue.cs", label="Entry Unk.WriteXmlSchema", span=""];
m35_0 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", span="49-49"];
m35_1 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", color=green, community=0, file="JValue.cs", label="BeginInit()", prediction=267, span="51-51"];
m35_2 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", color=green, community=0, file="JValue.cs", label="InitClass()", prediction=252, span="52-52"];
m35_3 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", file="JValue.cs", label="global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(SchemaChanged)", span="53-53"];
m35_157 [cluster="Unk.GetEnumerator", file="JValue.cs", label="Entry Unk.GetEnumerator", span=""];
m35_153 [cluster="global::System.Xml.Schema.XmlSchemaAny.cstr", file="JValue.cs", label="Entry global::System.Xml.Schema.XmlSchemaAny.cstr", span=""];
m35_45 [cluster="System.IO.StringReader.StringReader(string)", file="JValue.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m35_152 [cluster="global::System.Xml.Schema.XmlSchemaSequence.cstr", file="JValue.cs", label="Entry global::System.Xml.Schema.XmlSchemaSequence.cstr", span=""];
m35_52 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitializeDerivedDataSet()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitializeDerivedDataSet()", span="137-137"];
m35_53 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitializeDerivedDataSet()", color=green, community=0, file="JValue.cs", label="BeginInit()", prediction=269, span="139-139"];
m35_54 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitializeDerivedDataSet()", color=green, community=0, file="JValue.cs", label="InitClass()", prediction=252, span="140-140"];
m35_55 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitializeDerivedDataSet()", color=green, community=0, file="JValue.cs", label="EndInit()", prediction=271, span="141-141"];
m35_56 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitializeDerivedDataSet()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitializeDerivedDataSet()", span="137-137"];
m35_50 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars()", span="209-209"];
m35_100 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars()", file="JValue.cs", label="InitVars(true)", span="211-211"];
m35_101 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars()", span="209-209"];
m35_102 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", file="JValue.cs", label="tableCustomers = ((CustomersDataTable)(base.Tables[''Customers'']))", span="218-218"];
m35_104 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", file="JValue.cs", label="(tableCustomers != null)", span="221-221"];
m35_105 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", file="JValue.cs", label="tableCustomers.InitVars()", span="223-223"];
m35_103 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", file="JValue.cs", label="(initTable == true)", span="219-219"];
m35_106 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", span="216-216"];
m35_233 [cluster="Unk.OnRowChanging", file="JValue.cs", label="Entry Unk.OnRowChanging", span=""];
m35_155 [cluster="Unk.Write", file="JValue.cs", label="Entry Unk.Write", span=""];
m35_201 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CreateInstance()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CreateInstance()", span="438-438"];
m35_202 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CreateInstance()", file="JValue.cs", label="return new CustomersDataTable();", span="440-440"];
m35_203 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CreateInstance()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CreateInstance()", span="438-438"];
m35_156 [cluster="Unk.Schemas", file="JValue.cs", label="Entry Unk.Schemas", span=""];
m35_179 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="359-359"];
m35_180 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JValue.cs", label="InitVars()", span="362-362"];
m35_181 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="359-359"];
m35_151 [cluster="global::System.Xml.Schema.XmlSchemaComplexType.cstr", file="JValue.cs", label="Entry global::System.Xml.Schema.XmlSchemaComplexType.cstr", span=""];
m35_196 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.Clone()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.Clone()", span="429-429"];
m35_197 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.Clone()", file="JValue.cs", label="CustomersDataTable cln = ((CustomersDataTable)(base.Clone()))", span="431-431"];
m35_198 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.Clone()", file="JValue.cs", label="cln.InitVars()", span="432-432"];
m35_199 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.Clone()", file="JValue.cs", label="return cln;", span="433-433"];
m35_200 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.Clone()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.Clone()", span="429-429"];
m35_159 [cluster="System.IO.MemoryStream.SetLength(long)", file="JValue.cs", label="Entry System.IO.MemoryStream.SetLength(long)", span="0-0"];
m35_226 [cluster="CustomersRowChangeEvent.cstr", file="JValue.cs", label="Entry CustomersRowChangeEvent.cstr", span=""];
m35_227 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRowChangeEventHandler.Invoke(object, Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRowChangeEvent)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRowChangeEventHandler.Invoke(object, Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRowChangeEvent)", span="315-315"];
m35_111 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", file="JValue.cs", label="SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema", span="235-235"];
m35_112 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", file="JValue.cs", label="tableCustomers = new CustomersDataTable()", span="236-236"];
m35_113 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", file="JValue.cs", label="base.Tables.Add(tableCustomers)", span="237-237"];
m35_108 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", file="JValue.cs", label="DataSetName = ''CustomerDataSet''", span="232-232"];
m35_110 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", file="JValue.cs", label="EnforceConstraints = true", span="234-234"];
m35_109 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", file="JValue.cs", label="Prefix = ''''", span="233-233"];
m35_114 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", span="230-230"];
m35_309 [file="JValue.cs", label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", span=""];
m35_310 [file="JValue.cs", label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", span=""];
m36_91 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.Post.Post()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.Post.Post()", span="313-313"];
m36_45 [cluster="Newtonsoft.Json.Linq.JContainer.Descendants()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Descendants()", span="78-78"];
m36_123 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="36-36"];
m36_16 [cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="54-54"];
m36_20 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m36_177 [cluster="Unk.FromObject", file="LinqToJsonTest.cs", label="Entry Unk.FromObject", span=""];
m36_84 [cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="41-41"];
m36_150 [cluster="JsonTextWriter.cstr", file="LinqToJsonTest.cs", label="Entry JsonTextWriter.cstr", span=""];
m36_145 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="LinqToJsonTest.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m36_58 [cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="59-59"];
m36_32 [cluster="System.Collections.Generic.List<T>.List()", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m36_162 [cluster="System.TimeSpan.FromHours(double)", file="LinqToJsonTest.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m36_57 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="133-133"];
m36_74 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTree()", span="251-251"];
m36_75 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs", label="JObject o =\r\n        new JObject(\r\n          new JProperty(''Test1'', ''Test1Value''),\r\n          new JProperty(''Test2'', ''Test2Value''),\r\n          new JProperty(''Test3'', ''Test3Value''),\r\n          new JProperty(''Test4'', null)\r\n        )", span="253-259"];
m36_76 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs", label="Assert.AreEqual(4, o.Properties().Count())", span="261-261"];
m36_77 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Test1'''': ''''Test1Value'''',\r\n  ''''Test2'''': ''''Test2Value'''',\r\n  ''''Test3'''': ''''Test3Value'''',\r\n  ''''Test4'''': null\r\n}'', o.ToString())", span="263-268"];
m36_78 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs", label="JArray a =\r\n        new JArray(\r\n          o,\r\n          new DateTime(2000, 10, 10, 0, 0, 0, DateTimeKind.Utc),\r\n          55,\r\n          new JArray(\r\n            ''1'',\r\n            2,\r\n            3.0,\r\n            new DateTime(4, 5, 6, 7, 8, 9, DateTimeKind.Utc)\r\n          ),\r\n          new JConstructor(\r\n            ''ConstructorName'',\r\n            ''param1'',\r\n            2,\r\n            3.0\r\n          )\r\n        )", span="270-287"];
m36_79 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs", label="Assert.AreEqual(5, a.Count())", span="289-289"];
m36_80 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Test1'''': ''''Test1Value'''',\r\n    ''''Test2'''': ''''Test2Value'''',\r\n    ''''Test3'''': ''''Test3Value'''',\r\n    ''''Test4'''': null\r\n  },\r\n  ''''\/Date(971136000000)\/'''',\r\n  55,\r\n  [\r\n    ''''1'''',\r\n    2,\r\n    3,\r\n    ''''\/Date(-62030076711000)\/''''\r\n  ],\r\n  new ConstructorName(\r\n    ''''param1'''',\r\n    2,\r\n    3\r\n  )\r\n]'', a.ToString())", span="290-310"];
m36_81 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTree()", span="251-251"];
m36_104 [cluster="JArray.cstr", file="LinqToJsonTest.cs", label="Entry JArray.cstr", span=""];
m36_161 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="LinqToJsonTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m36_151 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="528-528"];
m36_22 [cluster="Unk.ToList", file="LinqToJsonTest.cs", label="Entry Unk.ToList", span=""];
m36_146 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="110-110"];
m36_165 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", span="545-545"];
m36_166 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="List<Post> posts = GetPosts()", span="547-547"];
m36_167 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="JObject o = JObject.FromObject(new\r\n      {\r\n        channel = new\r\n        {\r\n          title = ''James Newton-King'',\r\n          link = ''http://james.newtonking.com'',\r\n          description = ''James Newton-King's blog.'',\r\n          item =\r\n              from p in posts\r\n              orderby p.Title\r\n              select new\r\n              {\r\n                title = p.Title,\r\n                description = p.Description,\r\n                link = p.Link,\r\n                category = p.Categories\r\n              }\r\n        }\r\n      })", span="549-567"];
m36_168 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="Console.WriteLine(o.ToString())", span="569-569"];
m36_169 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="Assert.IsInstanceOfType(typeof(JObject), o)", span="570-570"];
m36_170 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="Assert.IsInstanceOfType(typeof(JObject), o[''channel''])", span="571-571"];
m36_171 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''James Newton-King'', (string)o[''channel''][''title''])", span="572-572"];
m36_172 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="Assert.AreEqual(2, o[''channel''][''item''].Children().Count())", span="573-573"];
m36_173 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="JArray a = JArray.FromObject(new List<int>() { 0, 1, 2, 3, 4 })", span="575-575"];
m36_174 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="Assert.IsInstanceOfType(typeof(JArray), a)", span="576-576"];
m36_175 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="Assert.AreEqual(5, a.Count())", span="577-577"];
m36_176 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", span="545-545"];
m36_15 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="105-105"];
m36_92 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", span="343-343"];
m36_93 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="List<Post> posts = GetPosts()", span="345-345"];
m36_95 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="Console.WriteLine(rss.ToString())", span="367-367"];
m36_96 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="var postTitles =\r\n        from p in rss[''channel''][''item''].Children()\r\n        select p.Value<string>(''title'')", span="397-399"];
m36_99 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="var categories =\r\n        from c in rss[''channel''][''item''].Children()[''category''].Values<string>()\r\n        group c by c into g\r\n        orderby g.Count() descending\r\n        select new { Category = g.Key, Count = g.Count() }", span="409-413"];
m36_97 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label=postTitles, span="401-401"];
m36_98 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="Console.WriteLine(item)", span="403-403"];
m36_100 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label=categories, span="415-415"];
m36_101 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="Console.WriteLine(c.Category + '' - Count: '' + c.Count)", span="417-417"];
m36_102 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", span="343-343"];
m36_105 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="66-66"];
m36_124 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JArrayStringIndex()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.JArrayStringIndex()", span="477-477"];
m36_125 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JArrayStringIndex()", file="LinqToJsonTest.cs", label="JArray a = new JArray()", span="479-479"];
m36_126 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JArrayStringIndex()", file="LinqToJsonTest.cs", label="Assert.AreEqual(null, a[''purple''])", span="480-480"];
m36_127 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JArrayStringIndex()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.JArrayStringIndex()", span="477-477"];
m36_46 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", span="184-184"];
m36_47 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="string json = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="186-192"];
m36_48 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="JObject o = JObject.Parse(json)", span="194-194"];
m36_49 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer'''',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}'', o.ToString())", span="196-202"];
m36_50 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="JArray list = o.Value<JArray>(''Drives'')", span="204-204"];
m36_52 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="JProperty cpuProperty = o.Property(''CPU'')", span="211-211"];
m36_54 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="JProperty drivesProperty = o.Property(''Drives'')", span="214-214"];
m36_51 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''[\r\n  ''''DVD read/writer'''',\r\n  ''''500 gigabyte hard drive''''\r\n]'', list.ToString())", span="206-209"];
m36_53 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''''''CPU'''': ''''Intel'''''', cpuProperty.ToString())", span="212-212"];
m36_55 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''''''Drives'''': [\r\n  ''''DVD read/writer'''',\r\n  ''''500 gigabyte hard drive''''\r\n]'', drivesProperty.ToString())", span="215-218"];
m36_56 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", span="184-184"];
m36_149 [cluster="System.IO.StringWriter.StringWriter()", file="LinqToJsonTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m36_86 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string, params object[])", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string, params object[])", span="52-52"];
m36_87 [cluster="Newtonsoft.Json.Linq.JArray.Count()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JArray.Count()", span="50-50"];
m36_119 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JObjectIntIndex()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.JObjectIntIndex()", span="469-469"];
m36_120 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JObjectIntIndex()", file="LinqToJsonTest.cs", label="JObject o = new JObject()", span="471-471"];
m36_121 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JObjectIntIndex()", file="LinqToJsonTest.cs", label="Assert.AreEqual(null, o[0])", span="472-472"];
m36_122 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JObjectIntIndex()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.JObjectIntIndex()", span="469-469"];
m36_132 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor()", span="48-48"];
m36_23 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.CreateLongArray()", span="72-72"];
m36_24 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs", label="string json = @''[0,1,2,3,4,5,6,7,8,9]''", span="74-74"];
m36_25 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs", label="JArray a = JArray.Parse(json)", span="76-76"];
m36_27 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs", label="List<int> expected = new List<int>() { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }", span="79-79"];
m36_28 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs", label="CollectionAssert.AreEqual(expected, list)", span="81-81"];
m36_29 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.CreateLongArray()", span="72-72"];
m36_83 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="63-63"];
m36_128 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JConstructorStringIndex()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.JConstructorStringIndex()", span="485-485"];
m36_129 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JConstructorStringIndex()", file="LinqToJsonTest.cs", label="JConstructor c = new JConstructor()", span="487-487"];
m36_130 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JConstructorStringIndex()", file="LinqToJsonTest.cs", label="Assert.AreEqual(null, c[''purple''])", span="488-488"];
m36_131 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JConstructorStringIndex()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.JConstructorStringIndex()", span="485-485"];
m36_106 [cluster="System.Console.WriteLine(string)", file="LinqToJsonTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m36_148 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="LinqToJsonTest.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m36_44 [cluster="Unk.Children", file="LinqToJsonTest.cs", label="Entry Unk.Children", span=""];
m36_31 [cluster="Newtonsoft.Json.Linq.JContainer.Children<T>()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Children<T>()", span="73-73"];
m36_18 [cluster="Unk.AreEqual", file="LinqToJsonTest.cs", label="Entry Unk.AreEqual", span=""];
m36_118 [cluster="Unk.IsInstanceOfType", file="LinqToJsonTest.cs", label="Entry Unk.IsInstanceOfType", span=""];
m36_133 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", span="492-492"];
m36_134 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="JObject o =\r\n        new JObject(\r\n          new JProperty(''Test1'', new DateTime(2000, 10, 15, 5, 5, 5, DateTimeKind.Utc)),\r\n          new JProperty(''Test2'', new DateTimeOffset(2000, 10, 15, 5, 5, 5, new TimeSpan(11, 11, 0))),\r\n          new JProperty(''Test3'', ''Test3Value''),\r\n          new JProperty(''Test4'', null)\r\n        )", span="494-500"];
m36_135 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="502-502"];
m36_140 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="serializer.Serialize(writer, o)", span="507-507"];
m36_136 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="serializer.Converters.Add(new JavaScriptDateTimeConverter())", span="503-503"];
m36_137 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="StringWriter sw = new StringWriter()", span="504-504"];
m36_138 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="JsonWriter writer = new JsonTextWriter(sw)", span="505-505"];
m36_141 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="string json = sw.ToString()", span="509-509"];
m36_139 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="writer.Formatting = Formatting.Indented", span="506-506"];
m36_142 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Test1'''': new Date(\r\n    971586305000\r\n  ),\r\n  ''''Test2'''': new Date(\r\n    971546045000\r\n  ),\r\n  ''''Test3'''': ''''Test3Value'''',\r\n  ''''Test4'''': null\r\n}'', json)", span="511-520"];
m36_143 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", span="492-492"];
m36_0 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", span="40-40"];
m36_1 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="string json = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="42-48"];
m36_2 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="JObject o = JObject.Parse(json)", span="50-50"];
m36_3 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="IList<JProperty> properties = o.Properties().ToList()", span="51-51"];
m36_11 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="List<object> parameterValues =\r\n        (from p in o.Properties()\r\n         where p.Value is JValue\r\n         select ((JValue)p.Value).Value).ToList()", span="62-65"];
m36_4 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''CPU'', properties[0].Name)", span="53-53"];
m36_5 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''Intel'', (string)properties[0].Value)", span="54-54"];
m36_6 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''Drives'', properties[1].Name)", span="55-55"];
m36_7 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="JArray list = (JArray)properties[1].Value", span="57-57"];
m36_8 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="Assert.AreEqual(2, list.Children().Count())", span="58-58"];
m36_9 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''DVD read/writer'', (string)list.Children().ElementAt(0))", span="59-59"];
m36_10 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''500 gigabyte hard drive'', (string)list.Children().ElementAt(1))", span="60-60"];
m36_12 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="Assert.AreEqual(1, parameterValues.Count)", span="67-67"];
m36_13 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="Assert.AreEqual(''Intel'', parameterValues[0])", span="68-68"];
m36_14 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", span="40-40"];
m36_147 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="8-8"];
m36_21 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m36_59 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", span="222-222"];
m36_60 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="string json = @''{''''Color'''':2,''''Establised'''':new Date(1264118400000),''''Width'''':1.1,''''Employees'''':999,''''RoomsPerFloor'''':[1,2,3,4,5,6,7,8,9],''''Open'''':false,''''Symbol'''':''''@'''',''''Mottos'''':[''''Hello World'''',''''öäüÖÄÜ\\'{new Date(12345);}[222]_µ@²³~'''',null,'''' ''''],''''Cost'''':100980.1,''''Escape'''':''''\r\n\t\f\b?{\\r\\n\''''''''',''''product'''':[{''''Name'''':''''Rocket'''',''''Expiry'''':new Date(949532490000),''''Price'''':0},{''''Name'''':''''Alien'''',''''Expiry'''':new Date(-62135596800000),''''Price'''':0}]}''", span="224-224"];
m36_61 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="JObject o = JObject.Parse(json)", span="226-226"];
m36_62 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''''''Establised'''': new Date(\r\n  1264118400000\r\n)'', o.Property(''Establised'').ToString())", span="228-230"];
m36_63 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''new Date(\r\n  1264118400000\r\n)'', o.Property(''Establised'').Value.ToString())", span="231-233"];
m36_64 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''''''Width'''': 1.1'', o.Property(''Width'').ToString())", span="234-234"];
m36_65 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''1.1'', o.Property(''Width'').Value.ToString())", span="235-235"];
m36_66 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''''''Open'''': false'', o.Property(''Open'').ToString())", span="236-236"];
m36_67 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''false'', o.Property(''Open'').Value.ToString())", span="237-237"];
m36_68 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="json = @''[null,undefined]''", span="239-239"];
m36_69 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="JArray a = JArray.Parse(json)", span="241-241"];
m36_70 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''[\r\n  null,\r\n  undefined\r\n]'', a.ToString())", span="242-245"];
m36_71 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''null'', a.Children().ElementAt(0).ToString())", span="246-246"];
m36_72 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="Assert.AreEqual(@''undefined'', a.Children().ElementAt(1).ToString())", span="247-247"];
m36_73 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", span="222-222"];
m36_30 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="78-78"];
m36_82 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="40-40"];
m36_107 [cluster="Unk.WriteLine", file="LinqToJsonTest.cs", label="Entry Unk.WriteLine", span=""];
m36_152 [cluster="System.IO.StringWriter.ToString()", file="LinqToJsonTest.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m36_85 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="LinqToJsonTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m36_33 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", span="85-85"];
m36_34 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="88-165"];
m36_35 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="JObject o = JObject.Parse(json)", span="168-168"];
m36_36 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="List<JObject> resultObjects = o[''results''].Children<JObject>().ToList()", span="170-170"];
m36_37 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="List<string> resultUrls = o[''results''].Children().Values<string>(''url'').ToList()", span="173-173"];
m36_40 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="List<JToken> descendants = o.Descendants().ToList()", span="179-179"];
m36_38 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="List<string> expectedUrls = new List<string>() { ''http://www.google.com/'', ''http://news.google.com/'', ''http://groups.google.com/'', ''http://maps.google.com/'' }", span="175-175"];
m36_39 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="CollectionAssert.AreEqual(expectedUrls, resultUrls)", span="177-177"];
m36_41 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="Assert.AreEqual(89, descendants.Count)", span="180-180"];
m36_42 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", span="85-85"];
m36_144 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="LinqToJsonTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m36_153 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.DateTimeOffset()", span="524-524"];
m36_154 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset> {\r\n        new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n      }", span="526-531"];
m36_155 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs", label="JsonSerializer jsonSerializer = new JsonSerializer()", span="533-533"];
m36_158 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs", label="jsonSerializer.Serialize(jsonWriter, testDates)", span="538-538"];
m36_156 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs", label="JsonTokenWriter jsonWriter", span="535-535"];
m36_157 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs", label="jsonWriter = new JsonTokenWriter()", span="536-536"];
m36_159 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs", label="Assert.AreEqual(4, jsonWriter.Token.Children().Count())", span="541-541"];
m36_160 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.DateTimeOffset()", span="524-524"];
m36_103 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="44-44"];
m36_19 [cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="60-60"];
m36_164 [cluster="Unk.Serialize", file="LinqToJsonTest.cs", label="Entry Unk.Serialize", span=""];
m36_108 [cluster="Unk.Count", file="LinqToJsonTest.cs", label="Entry Unk.Count", span=""];
m36_163 [cluster="JsonTokenWriter.cstr", file="LinqToJsonTest.cs", label="Entry JsonTokenWriter.cstr", span=""];
m36_17 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="LinqToJsonTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m36_109 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", span="426-426"];
m36_110 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs", label="string json = @''{\r\n                        ''''channel'''': {\r\n                          ''''title'''': ''''James Newton-King'''',\r\n                          ''''link'''': ''''http://james.newtonking.com'''',\r\n                          ''''description'''': ''''James Newton-King's blog.'''',\r\n                          ''''item'''': [\r\n                            {\r\n                              ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n                              ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and the source being available on CodePlex'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''CodePlex''''\r\n                              ]\r\n                            },\r\n                            {\r\n                              ''''title'''': ''''LINQ to JSON beta'''',\r\n                              ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''LINQ''''\r\n                              ]\r\n                            }\r\n                          ]\r\n                        }\r\n                      }''", span="428-454"];
m36_111 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs", label="JObject o = JObject.Parse(json)", span="456-456"];
m36_112 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs", label="Assert.AreEqual(null, o[''purple''])", span="458-458"];
m36_113 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs", label="Assert.AreEqual(null, o.Value<string>(''purple''))", span="459-459"];
m36_114 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs", label="Assert.IsInstanceOfType(typeof(JArray), o[''channel''][''item''])", span="461-461"];
m36_115 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs", label="Assert.AreEqual(2, o[''channel''][''item''].Children()[''title''].Count())", span="463-463"];
m36_116 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs", label="Assert.AreEqual(0, o[''channel''][''item''].Children()[''monkey''].Count())", span="464-464"];
m36_117 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", span="426-426"];
m36_88 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GetPosts()", file="LinqToJsonTest.cs", label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.GetPosts()", span="321-321"];
m36_89 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GetPosts()", file="LinqToJsonTest.cs", label="return new List<Post>()\r\n      {\r\n        new Post()\r\n        {\r\n          Title = ''LINQ to JSON beta'',\r\n          Description = ''Annoucing LINQ to JSON'',\r\n          Link = ''http://james.newtonking.com/projects/json-net.aspx'',\r\n          Categories = new List<string>() { ''Json.NET'', ''LINQ'' }\r\n        },\r\n        new Post()\r\n        {\r\n          Title = ''Json.NET 1.3 + New license + Now on CodePlex'',\r\n          Description = ''Annoucing the release of Json.NET 1.3, the MIT license and the source being available on CodePlex'',\r\n          Link = ''http://james.newtonking.com/projects/json-net.aspx'',\r\n          Categories = new List<string>() { ''Json.NET'', ''CodePlex'' }\r\n        }\r\n      };", span="323-339"];
m36_90 [cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GetPosts()", file="LinqToJsonTest.cs", label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.GetPosts()", span="321-321"];
m36_178 [file="LinqToJsonTest.cs", label="Newtonsoft.Json.Tests.LinqToJsonTest", span=""];
m38_16 [cluster="System.Collections.ObjectModel.Collection<T>.Remove(T)", file="MemberMappingCollection.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Remove(T)", span="0-0"];
m38_0 [cluster="Newtonsoft.Json.MemberMappingCollection.GetKeyForItem(Newtonsoft.Json.MemberMapping)", file="MemberMappingCollection.cs", label="Entry Newtonsoft.Json.MemberMappingCollection.GetKeyForItem(Newtonsoft.Json.MemberMapping)", span="34-34"];
m38_1 [cluster="Newtonsoft.Json.MemberMappingCollection.GetKeyForItem(Newtonsoft.Json.MemberMapping)", file="MemberMappingCollection.cs", label="return item.MappingName;", span="36-36"];
m38_2 [cluster="Newtonsoft.Json.MemberMappingCollection.GetKeyForItem(Newtonsoft.Json.MemberMapping)", file="MemberMappingCollection.cs", label="Exit Newtonsoft.Json.MemberMappingCollection.GetKeyForItem(Newtonsoft.Json.MemberMapping)", span="34-34"];
m38_13 [cluster="System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", file="MemberMappingCollection.cs", label="Entry System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", span="0-0"];
m38_3 [cluster="Newtonsoft.Json.MemberMappingCollection.AddMapping(Newtonsoft.Json.MemberMapping)", file="MemberMappingCollection.cs", label="Entry Newtonsoft.Json.MemberMappingCollection.AddMapping(Newtonsoft.Json.MemberMapping)", span="39-39"];
m38_4 [cluster="Newtonsoft.Json.MemberMappingCollection.AddMapping(Newtonsoft.Json.MemberMapping)", file="MemberMappingCollection.cs", label="Contains(memberMapping.MappingName)", span="41-41"];
m38_5 [cluster="Newtonsoft.Json.MemberMappingCollection.AddMapping(Newtonsoft.Json.MemberMapping)", file="MemberMappingCollection.cs", label="memberMapping.Ignored", span="44-44"];
m38_11 [cluster="Newtonsoft.Json.MemberMappingCollection.AddMapping(Newtonsoft.Json.MemberMapping)", file="MemberMappingCollection.cs", label="Add(memberMapping)", span="63-63"];
m38_6 [cluster="Newtonsoft.Json.MemberMappingCollection.AddMapping(Newtonsoft.Json.MemberMapping)", file="MemberMappingCollection.cs", label="return;", span="45-45"];
m38_7 [cluster="Newtonsoft.Json.MemberMappingCollection.AddMapping(Newtonsoft.Json.MemberMapping)", file="MemberMappingCollection.cs", label="MemberMapping existingMemberMapping = this[memberMapping.MappingName]", span="47-47"];
m38_8 [cluster="Newtonsoft.Json.MemberMappingCollection.AddMapping(Newtonsoft.Json.MemberMapping)", file="MemberMappingCollection.cs", label="!existingMemberMapping.Ignored", span="49-49"];
m38_9 [cluster="Newtonsoft.Json.MemberMappingCollection.AddMapping(Newtonsoft.Json.MemberMapping)", color=green, community=0, file="MemberMappingCollection.cs", label="throw new JsonSerializationException(\r\n            string.Format(\r\n              ''A member with the name '{0}' already exists on {1}. Use the JsonPropertyAttribute to specify another name.'',\r\n              memberMapping.MappingName, memberMapping.Member.DeclaringType));", prediction=272, span="51-54"];
m38_10 [cluster="Newtonsoft.Json.MemberMappingCollection.AddMapping(Newtonsoft.Json.MemberMapping)", file="MemberMappingCollection.cs", label="Remove(existingMemberMapping)", span="59-59"];
m38_12 [cluster="Newtonsoft.Json.MemberMappingCollection.AddMapping(Newtonsoft.Json.MemberMapping)", file="MemberMappingCollection.cs", label="Exit Newtonsoft.Json.MemberMappingCollection.AddMapping(Newtonsoft.Json.MemberMapping)", span="39-39"];
m38_17 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="MemberMappingCollection.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m38_14 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="MemberMappingCollection.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="48-48"];
m38_18 [file="MemberMappingCollection.cs", label="Newtonsoft.Json.MemberMappingCollection", span=""];
m39_49 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="301-301"];
m39_51 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="MiscellaneousUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m39_41 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(bool)", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(bool)", span="332-332"];
m39_40 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", span="260-260"];
m39_43 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(double)", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(double)", span="322-322"];
m39_84 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="425-425"];
m39_39 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(char)", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(char)", span="363-363"];
m39_125 [cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="239-239"];
m39_154 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteRaw(string)", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteRaw(string)", span="240-240"];
m39_134 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410"];
m39_80 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373"];
m39_136 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", span="213-213"];
m39_137 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", file="MiscellaneousUtils.cs", label="JTokenWriter writer = new JTokenWriter()", span="215-215"];
m39_138 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", file="MiscellaneousUtils.cs", label="writer.WriteStartArray()", span="217-217"];
m39_139 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", file="MiscellaneousUtils.cs", label="writer.WriteValue(new BigInteger(123))", span="218-218"];
m39_140 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", file="MiscellaneousUtils.cs", label="writer.WriteEndArray()", span="219-219"];
m39_141 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", file="MiscellaneousUtils.cs", label="JValue i = (JValue)writer.Token[0]", span="221-221"];
m39_144 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", file="MiscellaneousUtils.cs", label="StringAssert.AreEqual(@''[\r\n  123\r\n]'', writer.Token.ToString())", span="226-228"];
m39_142 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(new BigInteger(123), i.Value)", span="223-223"];
m39_143 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(JTokenType.Integer, i.Type)", span="224-224"];
m39_145 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", file="MiscellaneousUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", span="213-213"];
m39_42 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(int)", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(int)", span="270-270"];
m39_163 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="807-807"];
m39_86 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", span="143-143"];
m39_87 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="JTokenWriter jsonWriter = new JTokenWriter()", span="145-145"];
m39_88 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="147-147"];
m39_89 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(null, jsonWriter.CurrentToken)", span="148-148"];
m39_90 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteStartObject()", span="150-150"];
m39_91 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="151-151"];
m39_92 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(jsonWriter.Token, jsonWriter.CurrentToken)", span="152-152"];
m39_93 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="JObject o = (JObject)jsonWriter.Token", span="154-154"];
m39_94 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="jsonWriter.WritePropertyName(''CPU'')", span="156-156"];
m39_95 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="157-157"];
m39_96 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(o.Property(''CPU''), jsonWriter.CurrentToken)", span="158-158"];
m39_97 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteValue(''Intel'')", span="160-160"];
m39_98 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="161-161"];
m39_99 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(o[''CPU''], jsonWriter.CurrentToken)", span="162-162"];
m39_100 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="jsonWriter.WritePropertyName(''Drives'')", span="164-164"];
m39_101 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="165-165"];
m39_102 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(o.Property(''Drives''), jsonWriter.CurrentToken)", span="166-166"];
m39_103 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteStartArray()", span="168-168"];
m39_104 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="169-169"];
m39_105 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(o[''Drives''], jsonWriter.CurrentToken)", span="170-170"];
m39_106 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="JArray a = (JArray)jsonWriter.CurrentToken", span="172-172"];
m39_107 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteValue(''DVD read/writer'')", span="174-174"];
m39_108 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="175-175"];
m39_109 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(a[a.Count - 1], jsonWriter.CurrentToken)", span="176-176"];
m39_110 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteValue(new BigInteger(123))", span="179-179"];
m39_111 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="180-180"];
m39_112 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(a[a.Count - 1], jsonWriter.CurrentToken)", span="181-181"];
m39_113 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteValue(new byte[0])", span="184-184"];
m39_114 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="185-185"];
m39_115 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(a[a.Count - 1], jsonWriter.CurrentToken)", span="186-186"];
m39_116 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteEnd()", span="188-188"];
m39_117 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="189-189"];
m39_118 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(a, jsonWriter.CurrentToken)", span="190-190"];
m39_119 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteEndObject()", span="192-192"];
m39_120 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="193-193"];
m39_121 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(o, jsonWriter.CurrentToken)", span="194-194"];
m39_122 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="MiscellaneousUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", span="143-143"];
m39_123 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", span="105-105"];
m39_124 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", span="166-166"];
m39_133 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteComment(string)", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteComment(string)", span="250-250"];
m39_53 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", span="102-102"];
m39_54 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="JsonWriter jsonWriter = new JTokenWriter()", span="104-104"];
m39_55 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="106-106"];
m39_56 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteStartObject()", span="108-108"];
m39_57 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="109-109"];
m39_58 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="jsonWriter.WritePropertyName(''CPU'')", span="111-111"];
m39_59 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="112-112"];
m39_60 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteValue(''Intel'')", span="114-114"];
m39_61 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="115-115"];
m39_62 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="jsonWriter.WritePropertyName(''Drives'')", span="117-117"];
m39_63 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="118-118"];
m39_64 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteStartArray()", span="120-120"];
m39_65 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="121-121"];
m39_66 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteValue(''DVD read/writer'')", span="123-123"];
m39_67 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="124-124"];
m39_68 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteValue(new BigInteger(123))", span="127-127"];
m39_69 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="128-128"];
m39_70 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteValue(new byte[0])", span="131-131"];
m39_71 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="132-132"];
m39_72 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteEnd()", span="134-134"];
m39_73 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="135-135"];
m39_74 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteEndObject()", span="137-137"];
m39_75 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="138-138"];
m39_76 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="MiscellaneousUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", span="102-102"];
m39_81 [cluster="BigInteger.cstr", file="MiscellaneousUtils.cs", label="Entry BigInteger.cstr", span=""];
m39_79 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="819-819"];
m39_85 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
m39_52 [cluster="Unk.AreEqual", file="MiscellaneousUtils.cs", label="Entry Unk.AreEqual", span=""];
m39_0 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", span="58-58"];
m39_1 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="byte[] data = Encoding.UTF8.GetBytes(''Hello world.'')", span="60-60"];
m39_2 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="JToken root", span="62-62"];
m39_17 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteValue(data)", span="78-78"];
m39_34 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(data, (byte[])root[12])", span="98-98"];
m39_3 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="JTokenWriter jsonWriter = new JTokenWriter()", span="63-63"];
m39_4 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteStartArray()", span="65-65"];
m39_5 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteValue('@')", span="66-66"];
m39_6 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteValue(''\r\n\t\f\b?{\\r\\n\''\''')", span="67-67"];
m39_7 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteValue(true)", span="68-68"];
m39_8 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteValue(10)", span="69-69"];
m39_9 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteValue(10.99)", span="70-70"];
m39_10 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteValue(0.99)", span="71-71"];
m39_11 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteValue(0.000000000000000001d)", span="72-72"];
m39_12 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteValue(0.000000000000000001m)", span="73-73"];
m39_13 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteValue((string)null)", span="74-74"];
m39_14 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteValue(''This is a string.'')", span="75-75"];
m39_15 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteNull()", span="76-76"];
m39_16 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteUndefined()", span="77-77"];
m39_18 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="jsonWriter.WriteEndArray()", span="79-79"];
m39_19 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="root = jsonWriter.Token", span="81-81"];
m39_20 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="CustomAssert.IsInstanceOfType(typeof(JArray), root)", span="84-84"];
m39_21 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(13, root.Children().Count())", span="85-85"];
m39_22 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(''@'', (string)root[0])", span="86-86"];
m39_23 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(''\r\n\t\f\b?{\\r\\n\''\''', (string)root[1])", span="87-87"];
m39_24 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(true, (bool)root[2])", span="88-88"];
m39_25 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(10, (int)root[3])", span="89-89"];
m39_26 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(10.99, (double)root[4])", span="90-90"];
m39_27 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(0.99, (double)root[5])", span="91-91"];
m39_28 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(0.000000000000000001d, (double)root[6])", span="92-92"];
m39_29 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(0.000000000000000001m, (decimal)root[7])", span="93-93"];
m39_30 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(null, (string)root[8])", span="94-94"];
m39_31 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(''This is a string.'', (string)root[9])", span="95-95"];
m39_32 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(null, ((JValue)root[10]).Value)", span="96-96"];
m39_33 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(null, ((JValue)root[11]).Value)", span="97-97"];
m39_35 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="MiscellaneousUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", span="58-58"];
m39_83 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="1197-1197"];
m39_78 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407"];
m39_155 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", span="252-252"];
m39_156 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="MiscellaneousUtils.cs", label="JTokenWriter writer = new JTokenWriter()", span="254-254"];
m39_157 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="MiscellaneousUtils.cs", label="writer.WriteStartArray()", span="256-256"];
m39_158 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="MiscellaneousUtils.cs", label="writer.WriteRawValue(''fail'')", span="257-257"];
m39_159 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="MiscellaneousUtils.cs", label="writer.WriteRawValue(''fail'')", span="258-258"];
m39_160 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="MiscellaneousUtils.cs", label="writer.WriteEndArray()", span="259-259"];
m39_161 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="MiscellaneousUtils.cs", label="StringAssert.AreEqual(@''[\r\n  fail,\r\n  fail\r\n]'', writer.Token.ToString())", span="261-264"];
m39_162 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="MiscellaneousUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", span="252-252"];
m39_48 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381"];
m39_46 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteUndefined()", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteUndefined()", span="230-230"];
m39_164 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", span="268-268"];
m39_165 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", file="MiscellaneousUtils.cs", label="JTokenWriter writer = new JTokenWriter\r\n            {\r\n                DateTimeZoneHandling = Json.DateTimeZoneHandling.Utc\r\n            }", span="270-273"];
m39_166 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", file="MiscellaneousUtils.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified))", span="275-275"];
m39_167 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", file="MiscellaneousUtils.cs", label="JValue value = (JValue)writer.Token", span="277-277"];
m39_168 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", file="MiscellaneousUtils.cs", label="DateTime dt = (DateTime)value.Value", span="278-278"];
m39_169 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", file="MiscellaneousUtils.cs", label="Assert.AreEqual(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc), dt)", span="280-280"];
m39_170 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", file="MiscellaneousUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", span="268-268"];
m39_45 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteNull()", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteNull()", span="221-221"];
m39_172 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTime)", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTime)", span="410-410"];
m39_44 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(decimal)", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(decimal)", span="400-400"];
m39_82 [cluster="Unk.WriteValue", file="MiscellaneousUtils.cs", label="Entry Unk.WriteValue", span=""];
m39_171 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="MiscellaneousUtils.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m39_37 [cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="83-83"];
m39_47 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte[])", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte[])", span="433-433"];
m39_50 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="349-349"];
m39_135 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="331-331"];
m39_146 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", span="233-233"];
m39_147 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="MiscellaneousUtils.cs", label="JTokenWriter writer = new JTokenWriter()", span="235-235"];
m39_148 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="MiscellaneousUtils.cs", label="writer.WriteStartArray()", span="237-237"];
m39_149 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="MiscellaneousUtils.cs", label="writer.WriteRaw(''fail'')", span="238-238"];
m39_150 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="MiscellaneousUtils.cs", label="writer.WriteRaw(''fail'')", span="239-239"];
m39_151 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="MiscellaneousUtils.cs", label="writer.WriteEndArray()", span="240-240"];
m39_152 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="MiscellaneousUtils.cs", label="StringAssert.AreEqual(@''[\r\n  fail,\r\n  fail\r\n]'', writer.Token.ToString())", span="245-248"];
m39_153 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="MiscellaneousUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", span="233-233"];
m39_126 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", span="199-199"];
m39_127 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="MiscellaneousUtils.cs", label="JTokenWriter writer = new JTokenWriter()", span="201-201"];
m39_128 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="MiscellaneousUtils.cs", label="writer.WriteStartArray()", span="203-203"];
m39_129 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="MiscellaneousUtils.cs", label="writer.WriteComment(''fail'')", span="204-204"];
m39_130 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="MiscellaneousUtils.cs", label="writer.WriteEndArray()", span="205-205"];
m39_131 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="MiscellaneousUtils.cs", label="StringAssert.AreEqual(@''[\r\n  /*fail*/]'', writer.Token.ToString())", span="207-208"];
m39_132 [cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="MiscellaneousUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", span="199-199"];
m39_36 [cluster="System.Text.Encoding.GetBytes(string)", file="MiscellaneousUtils.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m39_38 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray()", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray()", span="135-135"];
m39_77 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="MiscellaneousUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357"];
m40_240 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", span="474-474"];
m40_241 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="ReflectionUtils.cs", label="return GetAttribute<T>(attributeProvider, true);", span="476-476"];
m40_242 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", span="474-474"];
m40_26 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="74-74"];
m40_27 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(t, ''t'')", span="76-76"];
m40_28 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="ReflectionUtils.cs", label="return (t.IsGenericType && t.GetGenericTypeDefinition() == typeof(Nullable<>));", span="78-78"];
m40_29 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="74-74"];
m40_103 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", span="211-211"];
m40_104 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(dictionaryType, ''type'')", span="213-213"];
m40_105 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="Type genericDictionaryType", span="215-215"];
m40_106 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="IsSubClass(dictionaryType, typeof(IDictionary<,>), out genericDictionaryType)", span="216-216"];
m40_108 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="throw new Exception(string.Format(''Type {0} is not a dictionary.'', dictionaryType));", span="219-219"];
m40_113 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="typeof(IDictionary).IsAssignableFrom(dictionaryType)", span="227-227"];
m40_117 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="throw new Exception(string.Format(''Type {0} is not a dictionary.'', dictionaryType));", span="235-235"];
m40_107 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="genericDictionaryType.IsGenericTypeDefinition", span="218-218"];
m40_109 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="Type[] dictionaryGenericArguments = genericDictionaryType.GetGenericArguments()", span="221-221"];
m40_110 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="keyType = dictionaryGenericArguments[0]", span="223-223"];
m40_111 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="valueType = dictionaryGenericArguments[1]", span="224-224"];
m40_112 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="return;", span="225-225"];
m40_114 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="keyType = null", span="229-229"];
m40_115 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="valueType = null", span="230-230"];
m40_116 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="return;", span="231-231"];
m40_118 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", span="211-211"];
m40_15 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type)", file="ReflectionUtils.cs", label="t.IsValueType", span="58-58"];
m40_238 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m40_277 [cluster="System.Type.MakeGenericType(params System.Type[])", file="ReflectionUtils.cs", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
m40_125 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", span="248-248"];
m40_128 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", file="ReflectionUtils.cs", label="GetDictionaryKeyValueTypes(dictionaryType, out keyType, out valueType)", span="252-252"];
m40_126 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", file="ReflectionUtils.cs", label="Type keyType", span="250-250"];
m40_127 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", file="ReflectionUtils.cs", label="Type valueType", span="251-251"];
m40_129 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", file="ReflectionUtils.cs", label="return keyType;", span="254-254"];
m40_130 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", span="248-248"];
m40_176 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMember(System.Type, string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMember(System.Type, string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", span="356-356"];
m40_177 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMember(System.Type, string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="358-358"];
m40_178 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMember(System.Type, string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(name, ''name'')", span="359-359"];
m40_179 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMember(System.Type, string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="MemberInfo[] result = type.GetMember(name, memberTypes, bindingAttr)", span="361-361"];
m40_180 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMember(System.Type, string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="return CollectionUtils.GetSingleItem<MemberInfo>(result);", span="363-363"];
m40_181 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMember(System.Type, string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMember(System.Type, string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", span="356-356"];
m40_101 [cluster="System.Type.GetGenericArguments()", file="ReflectionUtils.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m40_199 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", span="401-401"];
m40_200 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(member, ''member'')", span="403-403"];
m40_201 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(target, ''target'')", span="404-404"];
m40_202 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs", label="member.MemberType", span="406-406"];
m40_204 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs", label="((FieldInfo)member).SetValue(target, value)", span="409-409"];
m40_206 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs", label="((PropertyInfo)member).SetValue(target, value, null)", span="412-412"];
m40_207 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs", label="throw new ArgumentException(string.Format(''MemberInfo '{0}' must be of type FieldInfo or PropertyInfo'', member.Name), ''member'');", span="415-415"];
m40_203 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs", label="MemberTypes.Field", span="408-408"];
m40_205 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs", label="MemberTypes.Property", span="411-411"];
m40_208 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", span="401-401"];
m40_237 [cluster="System.Type.GetFields(System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Entry System.Type.GetFields(System.Reflection.BindingFlags)", span="0-0"];
m40_38 [cluster="object.Equals(object)", file="ReflectionUtils.cs", label="Entry object.Equals(object)", span="0-0"];
m40_236 [cluster="System.Collections.Generic.List<T>.List()", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m40_19 [cluster="System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", file="ReflectionUtils.cs", label="Entry System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", span="0-0"];
m40_57 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClass(System.Type, System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClass(System.Type, System.Type)", span="124-124"];
m40_59 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClass(System.Type, System.Type)", file="ReflectionUtils.cs", label="return IsSubClass(type, check, out implementingType);", span="127-127"];
m40_58 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClass(System.Type, System.Type)", file="ReflectionUtils.cs", label="Type implementingType", span="126-126"];
m40_60 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClass(System.Type, System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClass(System.Type, System.Type)", span="124-124"];
m40_20 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="64-64"];
m40_61 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClass(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClass(System.Type, System.Type, out System.Type)", span="130-130"];
m40_62 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClass(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="132-132"];
m40_63 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClass(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(check, ''check'')", span="133-133"];
m40_64 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClass(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="return IsSubClassInternal(type, type, check, out implementingType);", span="135-135"];
m40_65 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClass(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClass(System.Type, System.Type, out System.Type)", span="130-130"];
m40_275 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNullOrEmpty<T>(System.Collections.Generic.ICollection<T>, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNullOrEmpty<T>(System.Collections.Generic.ICollection<T>, string)", span="65-65"];
m40_247 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(System.Reflection.ICustomAttributeProvider, bool)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(System.Reflection.ICustomAttributeProvider, bool)", span="486-486"];
m40_249 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(System.Reflection.ICustomAttributeProvider, bool)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(attributeProvider, ''attributeProvider'')", span="488-488"];
m40_250 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(System.Reflection.ICustomAttributeProvider, bool)", file="ReflectionUtils.cs", label="return (T[])attributeProvider.GetCustomAttributes(typeof(T), inherit);", span="490-490"];
m40_251 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(System.Reflection.ICustomAttributeProvider, bool)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(System.Reflection.ICustomAttributeProvider, bool)", span="486-486"];
m40_258 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.FindMembers(System.Type, System.Reflection.MemberTypes, System.Reflection.BindingFlags, System.Reflection.MemberFilter, object)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.FindMembers(System.Type, System.Reflection.MemberTypes, System.Reflection.BindingFlags, System.Reflection.MemberFilter, object)", span="500-500"];
m40_259 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.FindMembers(System.Type, System.Reflection.MemberTypes, System.Reflection.BindingFlags, System.Reflection.MemberFilter, object)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(targetType, ''targetType'')", span="502-502"];
m40_260 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.FindMembers(System.Type, System.Reflection.MemberTypes, System.Reflection.BindingFlags, System.Reflection.MemberFilter, object)", file="ReflectionUtils.cs", label="List<MemberInfo> memberInfos = new List<MemberInfo>(targetType.FindMembers(memberType, bindingAttr, filter, filterCriteria))", span="504-504"];
m40_261 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.FindMembers(System.Type, System.Reflection.MemberTypes, System.Reflection.BindingFlags, System.Reflection.MemberFilter, object)", file="ReflectionUtils.cs", label="(memberType & MemberTypes.Field) != 0\r\n        && (bindingAttr & BindingFlags.NonPublic) != 0", span="508-509"];
m40_262 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.FindMembers(System.Type, System.Reflection.MemberTypes, System.Reflection.BindingFlags, System.Reflection.MemberFilter, object)", file="ReflectionUtils.cs", label="BindingFlags nonPublicBindingAttr = bindingAttr ^ BindingFlags.Public", span="512-512"];
m40_263 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.FindMembers(System.Type, System.Reflection.MemberTypes, System.Reflection.BindingFlags, System.Reflection.MemberFilter, object)", file="ReflectionUtils.cs", label="(targetType = targetType.BaseType) != null", span="514-514"];
m40_264 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.FindMembers(System.Type, System.Reflection.MemberTypes, System.Reflection.BindingFlags, System.Reflection.MemberFilter, object)", file="ReflectionUtils.cs", label="memberInfos.AddRange(targetType.FindMembers(MemberTypes.Field, nonPublicBindingAttr, filter, filterCriteria))", span="516-516"];
m40_265 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.FindMembers(System.Type, System.Reflection.MemberTypes, System.Reflection.BindingFlags, System.Reflection.MemberFilter, object)", file="ReflectionUtils.cs", label="return memberInfos;", span="520-520"];
m40_266 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.FindMembers(System.Type, System.Reflection.MemberTypes, System.Reflection.BindingFlags, System.Reflection.MemberFilter, object)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.FindMembers(System.Type, System.Reflection.MemberTypes, System.Reflection.BindingFlags, System.Reflection.MemberFilter, object)", span="500-500"];
m40_281 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, params object[])", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, params object[])", span="537-537"];
m40_282 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, params object[])", color=green, community=0, file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(genericTypeDefinition, ''genericTypeDefinition'')", prediction=273, span="539-539"];
m40_283 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, params object[])", color=green, community=0, file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNullOrEmpty(innerTypes, ''innerTypes'')", prediction=274, span="540-540"];
m40_284 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, params object[])", color=green, community=0, file="ReflectionUtils.cs", label="Type specificType = MakeGenericType(genericTypeDefinition, CollectionUtils.CreateArray(innerTypes))", prediction=275, span="542-542"];
m40_285 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, params object[])", file="ReflectionUtils.cs", label="return Activator.CreateInstance(specificType, args);", span="544-544"];
m40_286 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, params object[])", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, params object[])", span="537-537"];
m40_30 [cluster="System.Type.GetGenericTypeDefinition()", file="ReflectionUtils.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m40_131 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", span="262-262"];
m40_132 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(list, ''list'')", span="264-264"];
m40_133 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs", label="Type elementType = GetListItemType(list.GetType())", span="266-266"];
m40_135 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs", label="object unitializedValue = CreateUnitializedValue(elementType)", span="270-270"];
m40_137 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs", label="i < list.Count", span="272-272"];
m40_138 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs", label="!list[i].Equals(unitializedValue)", span="274-274"];
m40_143 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs", label="i < list.Count", span="280-280"];
m40_144 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs", label="object value = list[i]", span="282-282"];
m40_134 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs", label="elementType.IsValueType", span="268-268"];
m40_141 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs", label="elementType.IsClass", span="278-278"];
m40_148 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs", label="throw new Exception(string.Format(''Type {0} is neither a ValueType or a Class.'', elementType));", span="290-290"];
m40_136 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs", label="int i = 0", span="272-272"];
m40_149 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs", label="return true;", span="293-293"];
m40_139 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs", label="return false;", span="275-275"];
m40_146 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs", label="return false;", span="285-285"];
m40_140 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs", label="i++", span="272-272"];
m40_142 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs", label="int i = 0", span="280-280"];
m40_147 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs", label="i++", span="280-280"];
m40_145 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs", label="value != null", span="284-284"];
m40_150 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", span="262-262"];
m40_252 [cluster="System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type, bool)", file="ReflectionUtils.cs", label="Entry System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type, bool)", span="0-0"];
m40_119 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", span="239-239"];
m40_122 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", file="ReflectionUtils.cs", label="GetDictionaryKeyValueTypes(dictionaryType, out keyType, out valueType)", span="243-243"];
m40_120 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", file="ReflectionUtils.cs", label="Type keyType", span="241-241"];
m40_121 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", file="ReflectionUtils.cs", label="Type valueType", span="242-242"];
m40_123 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", file="ReflectionUtils.cs", label="return valueType;", span="245-245"];
m40_124 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", span="239-239"];
m40_13 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.FromObject.Example()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.FromObject.Example()", span="47-47"];
m40_14 [cluster="Newtonsoft.Json.Linq.JToken.FromObject(object)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Linq.JToken.FromObject(object)", span="1674-1674"];
m40_17 [cluster="System.Console.WriteLine(string)", file="ReflectionUtils.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m40_16 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="798-798"];
m40_18 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.FromObject.Computer.Computer()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.FromObject.Computer.Computer()", span="38-38"];
m40_278 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Type, params object[])", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Type, params object[])", span="532-532"];
m40_279 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Type, params object[])", file="ReflectionUtils.cs", label="return CreateGeneric(genericTypeDefinition, new Type[] { innerType }, args);", span="534-534"];
m40_280 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Type, params object[])", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Type, params object[])", span="532-532"];
m40_276 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentConditionTrue(bool, string, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentConditionTrue(bool, string, string)", span="141-141"];
m40_86 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetListItemType(System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetListItemType(System.Type)", span="185-185"];
m40_87 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetListItemType(System.Type)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="187-187"];
m40_88 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetListItemType(System.Type)", file="ReflectionUtils.cs", label="Type genericListType", span="188-188"];
m40_91 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetListItemType(System.Type)", file="ReflectionUtils.cs", label="IsSubClass(type, typeof(IList<>), out genericListType)", span="194-194"];
m40_89 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetListItemType(System.Type)", file="ReflectionUtils.cs", label="type.IsArray", span="190-190"];
m40_90 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetListItemType(System.Type)", file="ReflectionUtils.cs", label="return type.GetElementType();", span="192-192"];
m40_93 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetListItemType(System.Type)", file="ReflectionUtils.cs", label="throw new Exception(string.Format(''Type {0} is not a list.'', type));", span="197-197"];
m40_95 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetListItemType(System.Type)", file="ReflectionUtils.cs", label="typeof(IList).IsAssignableFrom(type)", span="201-201"];
m40_97 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetListItemType(System.Type)", file="ReflectionUtils.cs", label="throw new Exception(string.Format(''Type {0} is not a list.'', type));", span="207-207"];
m40_92 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetListItemType(System.Type)", file="ReflectionUtils.cs", label="genericListType.IsGenericTypeDefinition", span="196-196"];
m40_94 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetListItemType(System.Type)", file="ReflectionUtils.cs", label="return genericListType.GetGenericArguments()[0];", span="199-199"];
m40_96 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetListItemType(System.Type)", file="ReflectionUtils.cs", label="return null;", span="203-203"];
m40_98 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetListItemType(System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetListItemType(System.Type)", span="185-185"];
m40_219 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo)", span="446-446"];
m40_220 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="member.MemberType", span="448-448"];
m40_224 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="return ((PropertyInfo)member).CanWrite;", span="453-453"];
m40_225 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="return false;", span="455-455"];
m40_222 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="return true;", span="451-451"];
m40_221 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="MemberTypes.Field", span="450-450"];
m40_223 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="MemberTypes.Property", span="452-452"];
m40_226 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo)", span="446-446"];
m40_196 [cluster="System.Reflection.FieldInfo.GetValue(object)", file="ReflectionUtils.cs", label="Entry System.Reflection.FieldInfo.GetValue(object)", span="0-0"];
m40_209 [cluster="System.Reflection.FieldInfo.SetValue(object, object)", file="ReflectionUtils.cs", label="Entry System.Reflection.FieldInfo.SetValue(object, object)", span="0-0"];
m40_51 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPropertyIndexed(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsPropertyIndexed(System.Reflection.PropertyInfo)", span="117-117"];
m40_52 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPropertyIndexed(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(property, ''property'')", span="119-119"];
m40_53 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPropertyIndexed(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="return !CollectionUtils.IsNullOrEmpty<ParameterInfo>(property.GetIndexParameters());", span="121-121"];
m40_54 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPropertyIndexed(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsPropertyIndexed(System.Reflection.PropertyInfo)", span="117-117"];
m40_21 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(t, ''t'')", span="66-66"];
m40_269 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", span="523-523"];
m40_270 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(genericTypeDefinition, ''genericTypeDefinition'')", span="525-525"];
m40_271 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNullOrEmpty<Type>(innerTypes, ''innerTypes'')", span="526-526"];
m40_272 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentConditionTrue(genericTypeDefinition.IsGenericTypeDefinition, ''genericTypeDefinition'', string.Format(''Type {0} is not a generic type definition.'', genericTypeDefinition))", span="527-527"];
m40_273 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", file="ReflectionUtils.cs", label="return genericTypeDefinition.MakeGenericType(innerTypes);", span="529-529"];
m40_274 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", span="523-523"];
m40_169 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", span="344-344"];
m40_170 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(property, ''property'')", span="346-346"];
m40_171 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="return (property.GetIndexParameters().Length > 0);", span="348-348"];
m40_172 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", span="344-344"];
m40_198 [cluster="System.ArgumentException.ArgumentException(string, string, System.Exception)", file="ReflectionUtils.cs", label="Entry System.ArgumentException.ArgumentException(string, string, System.Exception)", span="0-0"];
m40_211 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo)", span="426-426"];
m40_212 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="member.MemberType", span="428-428"];
m40_216 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="return ((PropertyInfo)member).CanRead;", span="433-433"];
m40_217 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="return false;", span="435-435"];
m40_214 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="return true;", span="431-431"];
m40_213 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="MemberTypes.Field", span="430-430"];
m40_215 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="MemberTypes.Property", span="432-432"];
m40_218 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo)", span="426-426"];
m40_0 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="36-36"];
m40_1 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="ReflectionUtils.cs", label="return (v != null) ? v.GetType() : null;", span="38-38"];
m40_2 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="36-36"];
m40_3 [cluster="object.GetType()", file="ReflectionUtils.cs", label="Entry object.GetType()", span="0-0"];
m40_4 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", span="41-41"];
m40_5 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(t, ''t'')", span="43-43"];
m40_6 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", file="ReflectionUtils.cs", label="t.IsAbstract || t.IsInterface || t.IsArray || t.IsGenericTypeDefinition || t == typeof(void)", span="45-45"];
m40_7 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", file="ReflectionUtils.cs", label="return false;", span="46-46"];
m40_8 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", file="ReflectionUtils.cs", label="!HasDefaultConstructor(t)", span="48-48"];
m40_10 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", file="ReflectionUtils.cs", label="return true;", span="51-51"];
m40_9 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", file="ReflectionUtils.cs", label="return false;", span="49-49"];
m40_11 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", span="41-41"];
m40_12 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="93-93"];
m40_85 [cluster="System.Type.GetInterfaces()", file="ReflectionUtils.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m40_55 [cluster="System.Reflection.PropertyInfo.GetIndexParameters()", file="ReflectionUtils.cs", label="Entry System.Reflection.PropertyInfo.GetIndexParameters()", span="0-0"];
m40_182 [cluster="System.Type.GetMember(string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Entry System.Type.GetMember(string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", span="0-0"];
m40_243 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", span="479-479"];
m40_244 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", file="ReflectionUtils.cs", label="T[] attributes = GetAttributes<T>(attributeProvider, inherit)", span="481-481"];
m40_245 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", file="ReflectionUtils.cs", label="return CollectionUtils.GetSingleItem(attributes, true);", span="483-483"];
m40_246 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", span="479-479"];
m40_230 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="464-464"];
m40_232 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="targetMembers.AddRange(type.GetFields(bindingAttr))", span="468-468"];
m40_233 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="targetMembers.AddRange(type.GetProperties(bindingAttr))", span="469-469"];
m40_231 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="List<MemberInfo> targetMembers = new List<MemberInfo>()", span="466-466"];
m40_234 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="return targetMembers;", span="471-471"];
m40_235 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="464-464"];
m40_22 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ReflectionUtils.cs", label="t.IsValueType", span="68-68"];
m40_23 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ReflectionUtils.cs", label="return IsNullableType(t);", span="69-69"];
m40_24 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ReflectionUtils.cs", label="return true;", span="71-71"];
m40_25 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="64-64"];
m40_173 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMember(System.Type, string, System.Reflection.MemberTypes)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMember(System.Type, string, System.Reflection.MemberTypes)", span="351-351"];
m40_174 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMember(System.Type, string, System.Reflection.MemberTypes)", file="ReflectionUtils.cs", label="return GetMember(type, name, memberTypes, BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance);", span="353-353"];
m40_175 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMember(System.Type, string, System.Reflection.MemberTypes)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMember(System.Type, string, System.Reflection.MemberTypes)", span="351-351"];
m40_267 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m40_48 [cluster="System.ArgumentException.ArgumentException(string, string)", file="ReflectionUtils.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m40_248 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", span="302-302"];
m40_257 [cluster="System.Reflection.Assembly.GetName()", file="ReflectionUtils.cs", label="Entry System.Reflection.Assembly.GetName()", span="0-0"];
m40_197 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="ReflectionUtils.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m40_239 [cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0"];
m40_287 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateArray<T>(System.Collections.Generic.IEnumerable<T>)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CreateArray<T>(System.Collections.Generic.IEnumerable<T>)", span="327-327"];
m40_151 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="301-301"];
m40_152 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(member, ''member'')", span="303-303"];
m40_153 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="member.MemberType", span="305-305"];
m40_155 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="return ((FieldInfo)member).FieldType;", span="308-308"];
m40_157 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="return ((PropertyInfo)member).PropertyType;", span="310-310"];
m40_159 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="return ((EventInfo)member).EventHandlerType;", span="312-312"];
m40_154 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="MemberTypes.Field", span="307-307"];
m40_156 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="MemberTypes.Property", span="309-309"];
m40_158 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="MemberTypes.Event", span="311-311"];
m40_160 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="throw new ArgumentException(''MemberInfo must be if type FieldInfo, PropertyInfo or EventInfo'', ''member'');", span="314-314"];
m40_161 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="301-301"];
m40_162 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="325-325"];
m40_163 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(member, ''member'')", span="327-327"];
m40_164 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="PropertyInfo propertyInfo = member as PropertyInfo", span="329-329"];
m40_165 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="propertyInfo != null", span="331-331"];
m40_166 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="return IsIndexedProperty(propertyInfo);", span="332-332"];
m40_167 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="return false;", span="334-334"];
m40_168 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="325-325"];
m40_50 [cluster="System.Activator.CreateInstance(System.Type)", file="ReflectionUtils.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m40_268 [cluster="System.Type.FindMembers(System.Reflection.MemberTypes, System.Reflection.BindingFlags, System.Reflection.MemberFilter, object)", file="ReflectionUtils.cs", label="Entry System.Type.FindMembers(System.Reflection.MemberTypes, System.Reflection.BindingFlags, System.Reflection.MemberFilter, object)", span="0-0"];
m40_102 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ReflectionUtils.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m40_31 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", span="89-89"];
m40_34 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", file="ReflectionUtils.cs", label="object unitializedValue = CreateUnitializedValue(value.GetType())", span="97-97"];
m40_32 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", file="ReflectionUtils.cs", label="value == null", span="91-91"];
m40_35 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", file="ReflectionUtils.cs", label="return value.Equals(unitializedValue);", span="98-98"];
m40_33 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", file="ReflectionUtils.cs", label="return true;", span="93-93"];
m40_36 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", span="89-89"];
m40_253 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetNameAndAssessmblyName(System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetNameAndAssessmblyName(System.Type)", span="493-493"];
m40_254 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetNameAndAssessmblyName(System.Type)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(t, ''t'')", span="495-495"];
m40_255 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetNameAndAssessmblyName(System.Type)", file="ReflectionUtils.cs", label="return t.FullName + '', '' + t.Assembly.GetName().Name;", span="497-497"];
m40_256 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetNameAndAssessmblyName(System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetNameAndAssessmblyName(System.Type)", span="493-493"];
m40_66 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClassInternal(System.Type, System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClassInternal(System.Type, System.Type, System.Type, out System.Type)", span="138-138"];
m40_77 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClassInternal(System.Type, System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="IsSubClassInternal(initialType, currentType.GetGenericTypeDefinition(), check, out implementingType)", span="164-164"];
m40_72 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClassInternal(System.Type, System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="IsSubClassInternal(initialType, t, check, out implementingType)", span="151-151"];
m40_83 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClassInternal(System.Type, System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="return IsSubClassInternal(initialType, currentType.BaseType, check, out implementingType);", span="177-177"];
m40_67 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClassInternal(System.Type, System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="currentType == check", span="140-140"];
m40_68 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClassInternal(System.Type, System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="implementingType = currentType", span="142-142"];
m40_70 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClassInternal(System.Type, System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="check.IsInterface && (initialType.IsInterface || currentType == initialType)", span="147-147"];
m40_71 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClassInternal(System.Type, System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="currentType.GetInterfaces()", span="149-149"];
m40_73 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClassInternal(System.Type, System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="check == implementingType", span="154-154"];
m40_74 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClassInternal(System.Type, System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="implementingType = currentType", span="155-155"];
m40_76 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClassInternal(System.Type, System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="currentType.IsGenericType && !currentType.IsGenericTypeDefinition", span="162-162"];
m40_78 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClassInternal(System.Type, System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="implementingType = currentType", span="166-166"];
m40_80 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClassInternal(System.Type, System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="currentType.BaseType == null", span="171-171"];
m40_69 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClassInternal(System.Type, System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="return true;", span="143-143"];
m40_75 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClassInternal(System.Type, System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="return true;", span="157-157"];
m40_79 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClassInternal(System.Type, System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="return true;", span="167-167"];
m40_82 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClassInternal(System.Type, System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="return false;", span="174-174"];
m40_81 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClassInternal(System.Type, System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="implementingType = null", span="173-173"];
m40_84 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClassInternal(System.Type, System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsSubClassInternal(System.Type, System.Type, System.Type, out System.Type)", span="138-138"];
m40_184 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="372-372"];
m40_185 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(member, ''member'')", span="374-374"];
m40_186 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(target, ''target'')", span="375-375"];
m40_187 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="member.MemberType", span="377-377"];
m40_189 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="return ((FieldInfo)member).GetValue(target);", span="380-380"];
m40_191 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="return ((PropertyInfo)member).GetValue(target, null);", span="384-384"];
m40_193 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="throw new ArgumentException(string.Format(''MemberInfo '{0}' has index parameters'', member.Name), ''member'', e);", span="388-388"];
m40_194 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="throw new ArgumentException(string.Format(''MemberInfo '{0}' is not of type FieldInfo or PropertyInfo'', member.Name), ''member'');", span="391-391"];
m40_188 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="MemberTypes.Field", span="379-379"];
m40_190 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="MemberTypes.Property", span="381-381"];
m40_192 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label=TargetParameterCountException, span="386-386"];
m40_195 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="372-372"];
m40_288 [cluster="System.Activator.CreateInstance(System.Type, params object[])", file="ReflectionUtils.cs", label="Entry System.Activator.CreateInstance(System.Type, params object[])", span="0-0"];
m40_56 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="72-72"];
m40_99 [cluster="System.Type.GetElementType()", file="ReflectionUtils.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m40_227 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties<T>(System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties<T>(System.Reflection.BindingFlags)", span="459-459"];
m40_228 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties<T>(System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="return GetFieldsAndProperties(typeof(T), bindingAttr);", span="461-461"];
m40_229 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties<T>(System.Reflection.BindingFlags)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties<T>(System.Reflection.BindingFlags)", span="459-459"];
m40_210 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ReflectionUtils.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m40_183 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>)", span="297-297"];
m40_49 [cluster="string.Format(string, object)", file="ReflectionUtils.cs", label="Entry string.Format(string, object)", span="0-0"];
m40_37 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", span="102-102"];
m40_39 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="104-104"];
m40_40 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="ReflectionUtils.cs", label="type.IsGenericTypeDefinition", span="106-106"];
m40_41 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="ReflectionUtils.cs", label="throw new ArgumentException(string.Format(''Type {0} is a generic type definition and cannot be instantiated.'', type), ''type'');", span="107-107"];
m40_42 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="ReflectionUtils.cs", label="type.IsClass || type.IsInterface || type == typeof(void)", span="109-109"];
m40_44 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="ReflectionUtils.cs", label="type.IsValueType", span="111-111"];
m40_45 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="ReflectionUtils.cs", label="return Activator.CreateInstance(type);", span="112-112"];
m40_46 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="ReflectionUtils.cs", label="throw new ArgumentException(string.Format(''Type {0} cannot be instantiated.'', type), ''type'');", span="114-114"];
m40_43 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="ReflectionUtils.cs", label="return null;", span="110-110"];
m40_47 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", span="102-102"];
m41_71 [cluster="Newtonsoft.Json.Utilities.StringUtils.Indent(string, int, char)", file="StringUtils.cs", label="throw new ArgumentException(''Must be greater than zero.'', ''indentation'');", span="189-189"];
m41_72 [cluster="Newtonsoft.Json.Utilities.StringUtils.Indent(string, int, char)", file="StringUtils.cs", label="StringReader sr = new StringReader(s)", span="191-191"];
m41_74 [cluster="Newtonsoft.Json.Utilities.StringUtils.Indent(string, int, char)", file="StringUtils.cs", label="ActionTextReaderLine(sr, sw, delegate(TextWriter tw, string line)\r\n      {\r\n        tw.Write(new string(indentChar, indentation));\r\n        tw.Write(line);\r\n      })", span="194-198"];
m41_75 [cluster="Newtonsoft.Json.Utilities.StringUtils.Indent(string, int, char)", file="StringUtils.cs", label="return sw.ToString();", span="200-200"];
m41_76 [cluster="Newtonsoft.Json.Utilities.StringUtils.Indent(string, int, char)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.Indent(string, int, char)", span="183-183"];
m41_193 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="StringUtils.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0"];
m41_194 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", span="361-361"];
m41_196 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="StringUtils.cs", label="return null;", span="364-364"];
m41_195 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="StringUtils.cs", label="value == null", span="363-363"];
m41_197 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="StringUtils.cs", label="return value.Length;", span="366-366"];
m41_131 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndFilterWithWhitespace()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndFilterWithWhitespace()", span="232-232"];
m41_82 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="194-198"];
m41_83 [cluster="lambda expression", file="StringUtils.cs", label="tw.Write(new string(indentChar, indentation))", span="196-196"];
m41_84 [cluster="lambda expression", file="StringUtils.cs", label="tw.Write(line)", span="197-197"];
m41_85 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="194-198"];
m41_86 [cluster="string.String(char, int)", file="StringUtils.cs", label="Entry string.String(char, int)", span="0-0"];
m41_228 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAnd()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAnd()", span="386-386"];
m41_229 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAnd()", file="StringUtils.cs", label="JPath path = new JPath(''[?(@.name&&@.title)]'')", span="388-388"];
m41_231 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAnd()", file="StringUtils.cs", label="Assert.AreEqual(QueryOperator.And, expressions.Operator)", span="390-390"];
m41_232 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAnd()", file="StringUtils.cs", label="Assert.AreEqual(2, expressions.Expressions.Count)", span="391-391"];
m41_233 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAnd()", file="StringUtils.cs", label="Assert.AreEqual(''name'', ((FieldFilter)((BooleanQueryExpression)expressions.Expressions[0]).Path[0]).Name)", span="392-392"];
m41_234 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAnd()", file="StringUtils.cs", label="Assert.AreEqual(QueryOperator.Exists, expressions.Expressions[0].Operator)", span="393-393"];
m41_235 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAnd()", file="StringUtils.cs", label="Assert.AreEqual(''title'', ((FieldFilter)((BooleanQueryExpression)expressions.Expressions[1]).Path[0]).Name)", span="394-394"];
m41_236 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAnd()", file="StringUtils.cs", label="Assert.AreEqual(QueryOperator.Exists, expressions.Expressions[1].Operator)", span="395-395"];
m41_230 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAnd()", file="StringUtils.cs", label="CompositeExpression expressions = (CompositeExpression)((QueryFilter)path.Filters[0]).Expression", span="389-389"];
m41_237 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAnd()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAnd()", span="386-386"];
m41_282 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoPathAfterAt()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoPathAfterAt()", span="452-452"];
m41_283 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoPathAfterAt()", file="StringUtils.cs", label="ExceptionAssert.Throws<JsonException>(@''Path ended with open query.'',\r\n                () => new JPath(''[?(@.name||@''))", span="454-455"];
m41_284 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoPathAfterAt()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoPathAfterAt()", span="452-452"];
m41_50 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsNullOrEmptyOrWhiteSpace(string)", file="StringUtils.cs", label="return false;", span="138-138"];
m41_51 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsNullOrEmptyOrWhiteSpace(string)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.IsNullOrEmptyOrWhiteSpace(string)", span="131-131"];
m41_52 [cluster="string.IsNullOrEmpty(string)", file="StringUtils.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m41_27 [cluster="Newtonsoft.Json.Utilities.StringUtils.EnsureEndsWith(string, string)", file="StringUtils.cs", label="value == null", span="97-97"];
m41_28 [cluster="Newtonsoft.Json.Utilities.StringUtils.EnsureEndsWith(string, string)", file="StringUtils.cs", label="throw new ArgumentNullException(''value'');", span="98-98"];
m41_29 [cluster="Newtonsoft.Json.Utilities.StringUtils.EnsureEndsWith(string, string)", file="StringUtils.cs", label="target.Length >= value.Length", span="100-100"];
m41_30 [cluster="Newtonsoft.Json.Utilities.StringUtils.EnsureEndsWith(string, string)", file="StringUtils.cs", label="string.Compare(target, target.Length - value.Length, value, 0, value.Length, StringComparison.OrdinalIgnoreCase) ==\r\n                        0", span="102-103"];
m41_31 [cluster="Newtonsoft.Json.Utilities.StringUtils.EnsureEndsWith(string, string)", file="StringUtils.cs", label="return target;", span="104-104"];
m41_386 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexEmptyStart()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexEmptyStart()", span="597-597"];
m41_387 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexEmptyStart()", file="StringUtils.cs", label="JPath path = new JPath(''[ : 1 : ]'')", span="599-599"];
m41_388 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexEmptyStart()", file="StringUtils.cs", label="Assert.AreEqual(1, path.Filters.Count)", span="600-600"];
m41_389 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexEmptyStart()", file="StringUtils.cs", label="Assert.AreEqual(null, ((ArraySliceFilter)path.Filters[0]).Start)", span="601-601"];
m41_390 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexEmptyStart()", file="StringUtils.cs", label="Assert.AreEqual(1, ((ArraySliceFilter)path.Filters[0]).End)", span="602-602"];
m41_391 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexEmptyStart()", file="StringUtils.cs", label="Assert.AreEqual(null, ((ArraySliceFilter)path.Filters[0]).Step)", span="603-603"];
m41_392 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexEmptyStart()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexEmptyStart()", span="597-597"];
m41_11 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SingleQuotedProperty()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SingleQuotedProperty()", span="56-56"];
m41_37 [cluster="string.Compare(string, int, string, int, int, System.StringComparison)", file="StringUtils.cs", label="Entry string.Compare(string, int, string, int, int, System.StringComparison)", span="0-0"];
m41_38 [cluster="string.TrimEnd(params char[])", file="StringUtils.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m41_39 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsNullOrEmpty(SqlString)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsNullOrEmpty(SqlString)", span="123-123"];
m41_198 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", span="361-361"];
m41_199 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char)", span="369-369"];
m41_201 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char)", file="StringUtils.cs", label="WriteCharAsUnicode(w, c)", span="373-373"];
m41_202 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char)", file="StringUtils.cs", label="return w.ToString();", span="374-374"];
m41_148 [cluster="Newtonsoft.Json.Utilities.StringUtils.RemoveHtmlInternal(string, System.Collections.Generic.IList<string>)", file="StringUtils.cs", label="removeTagsUpper.Add(tag.ToUpperInvariant())", span="301-301"];
m41_149 [cluster="Newtonsoft.Json.Utilities.StringUtils.RemoveHtmlInternal(string, System.Collections.Generic.IList<string>)", file="StringUtils.cs", label="Regex anyTag = new Regex(@''<[/]{0,1}\s*(?<tag>\w*)\s*(?<attr>.*?=['''''].*?['''''])*?\s*[/]{0,1}>'', RegexOptions.Compiled)", span="305-305"];
m41_150 [cluster="Newtonsoft.Json.Utilities.StringUtils.RemoveHtmlInternal(string, System.Collections.Generic.IList<string>)", file="StringUtils.cs", label="return anyTag.Replace(s, delegate(Match match)\r\n      {\r\n        string tag = match.Groups[''tag''].Value.ToUpperInvariant();\r\n\r\n        if (removeTagsUpper == null)\r\n          return string.Empty;\r\n        else if (removeTagsUpper.Contains(tag))\r\n          return string.Empty;\r\n        else\r\n          return match.Value;\r\n      });", span="307-317"];
m41_288 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoPathAfterDot()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoPathAfterDot()", span="459-459"];
m41_289 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoPathAfterDot()", file="StringUtils.cs", label="ExceptionAssert.Throws<JsonException>(@''Unexpected end while parsing path.'',\r\n                () => new JPath(''[?(@.name||@.''))", span="461-462"];
m41_290 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoPathAfterDot()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoPathAfterDot()", span="459-459"];
m41_114 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndIndexer()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndIndexer()", span="211-211"];
m41_358 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexAll()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexAll()", span="557-557"];
m41_359 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexAll()", file="StringUtils.cs", label="JPath path = new JPath(''[111119990:3:2]'')", span="559-559"];
m41_360 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexAll()", file="StringUtils.cs", label="Assert.AreEqual(1, path.Filters.Count)", span="560-560"];
m41_361 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexAll()", file="StringUtils.cs", label="Assert.AreEqual(111119990, ((ArraySliceFilter)path.Filters[0]).Start)", span="561-561"];
m41_362 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexAll()", file="StringUtils.cs", label="Assert.AreEqual(3, ((ArraySliceFilter)path.Filters[0]).End)", span="562-562"];
m41_363 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexAll()", file="StringUtils.cs", label="Assert.AreEqual(2, ((ArraySliceFilter)path.Filters[0]).Step)", span="563-563"];
m41_364 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexAll()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexAll()", span="557-557"];
m41_321 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.UnclosedIndexer()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.UnclosedIndexer()", span="502-502"];
m41_322 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.UnclosedIndexer()", file="StringUtils.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                @''Path ended with open indexer.'',\r\n                () => { new JPath(''Blah[0''); })", span="504-506"];
m41_323 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.UnclosedIndexer()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.UnclosedIndexer()", span="502-502"];
m41_153 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="269-269"];
m41_81 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.QuotedWildcardPropertyWithRoot()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.QuotedWildcardPropertyWithRoot()", span="161-161"];
m41_208 [cluster="Newtonsoft.Json.Utilities.StringUtils.WriteCharAsUnicode(System.IO.TextWriter, char)", file="StringUtils.cs", label="char h3 = MathUtils.IntToHex((c >> 4) & '\x000f')", span="384-384"];
m41_209 [cluster="Newtonsoft.Json.Utilities.StringUtils.WriteCharAsUnicode(System.IO.TextWriter, char)", file="StringUtils.cs", label="char h4 = MathUtils.IntToHex(c & '\x000f')", span="385-385"];
m41_211 [cluster="Newtonsoft.Json.Utilities.StringUtils.WriteCharAsUnicode(System.IO.TextWriter, char)", file="StringUtils.cs", label="writer.Write('u')", span="388-388"];
m41_210 [cluster="Newtonsoft.Json.Utilities.StringUtils.WriteCharAsUnicode(System.IO.TextWriter, char)", file="StringUtils.cs", label="writer.Write('\\')", span="387-387"];
m41_212 [cluster="Newtonsoft.Json.Utilities.StringUtils.WriteCharAsUnicode(System.IO.TextWriter, char)", file="StringUtils.cs", label="writer.Write(h1)", span="389-389"];
m41_0 [cluster="Newtonsoft.Json.Utilities.StringUtils.ContainsWhiteSpace(string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ContainsWhiteSpace(string)", span="49-49"];
m41_1 [cluster="Newtonsoft.Json.Utilities.StringUtils.ContainsWhiteSpace(string)", color=green, community=0, file="StringUtils.cs", label="s == null", prediction=276, span="51-51"];
m41_2 [cluster="Newtonsoft.Json.Utilities.StringUtils.ContainsWhiteSpace(string)", color=green, community=0, file="StringUtils.cs", label="throw new ArgumentNullException(''s'');", prediction=277, span="52-52"];
m41_3 [cluster="Newtonsoft.Json.Utilities.StringUtils.ContainsWhiteSpace(string)", color=green, community=0, file="StringUtils.cs", label="int i = 0", prediction=278, span="54-54"];
m41_4 [cluster="Newtonsoft.Json.Utilities.StringUtils.ContainsWhiteSpace(string)", file="StringUtils.cs", label="i < s.Length", span="54-54"];
m41_138 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndFilterWithEscapeQuote()", file="StringUtils.cs", label="Assert.AreEqual(''h'i'', (string)expressions.Value)", span="250-250"];
m41_144 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndFilterWithDoubleEscape()", file="StringUtils.cs", label="BooleanQueryExpression expressions = (BooleanQueryExpression)((QueryFilter)path.Filters[1]).Expression", span="259-259"];
m41_145 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndFilterWithDoubleEscape()", file="StringUtils.cs", label="Assert.AreEqual(QueryOperator.Equals, expressions.Operator)", span="260-260"];
m41_146 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndFilterWithDoubleEscape()", file="StringUtils.cs", label="Assert.AreEqual(''h\\i'', (string)expressions.Value)", span="261-261"];
m41_147 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndFilterWithDoubleEscape()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndFilterWithDoubleEscape()", span="254-254"];
m41_151 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="269-269"];
m41_156 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndFilterWithFalse()", file="StringUtils.cs", label="Assert.AreEqual(2, path.Filters.Count)", span="276-276"];
m41_305 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultiplePropertiesAndIndexers()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultiplePropertiesAndIndexers()", span="481-481"];
m41_306 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultiplePropertiesAndIndexers()", file="StringUtils.cs", label="JPath path = new JPath(''Blah[0]..Two.Three[1].Four'')", span="483-483"];
m41_307 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultiplePropertiesAndIndexers()", file="StringUtils.cs", label="Assert.AreEqual(6, path.Filters.Count)", span="484-484"];
m41_308 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultiplePropertiesAndIndexers()", file="StringUtils.cs", label="Assert.AreEqual(''Blah'', ((FieldFilter) path.Filters[0]).Name)", span="485-485"];
m41_309 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultiplePropertiesAndIndexers()", file="StringUtils.cs", label="Assert.AreEqual(0, ((ArrayIndexFilter) path.Filters[1]).Index)", span="486-486"];
m41_310 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultiplePropertiesAndIndexers()", file="StringUtils.cs", label="Assert.AreEqual(''Two'', ((ScanFilter)path.Filters[2]).Name)", span="487-487"];
m41_311 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultiplePropertiesAndIndexers()", file="StringUtils.cs", label="Assert.AreEqual(''Three'', ((FieldFilter)path.Filters[3]).Name)", span="488-488"];
m41_312 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultiplePropertiesAndIndexers()", file="StringUtils.cs", label="Assert.AreEqual(1, ((ArrayIndexFilter)path.Filters[4]).Index)", span="489-489"];
m41_313 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultiplePropertiesAndIndexers()", file="StringUtils.cs", label="Assert.AreEqual(''Four'', ((FieldFilter)path.Filters[5]).Name)", span="490-490"];
m41_314 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultiplePropertiesAndIndexers()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultiplePropertiesAndIndexers()", span="481-481"];
m41_264 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BaddOr3()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BaddOr3()", span="431-431"];
m41_265 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BaddOr3()", file="StringUtils.cs", label="ExceptionAssert.Throws<JsonException>(''Unexpected character while parsing path query: |'',\r\n                () => new JPath(''[?(@.name|''))", span="433-434"];
m41_266 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BaddOr3()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BaddOr3()", span="431-431"];
m41_203 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char)", span="369-369"];
m41_204 [cluster="Newtonsoft.Json.Utilities.StringUtils.WriteCharAsUnicode(System.IO.TextWriter, char)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.WriteCharAsUnicode(System.IO.TextWriter, char)", span="378-378"];
m41_206 [cluster="Newtonsoft.Json.Utilities.StringUtils.WriteCharAsUnicode(System.IO.TextWriter, char)", file="StringUtils.cs", label="char h1 = MathUtils.IntToHex((c >> 12) & '\x000f')", span="382-382"];
m41_205 [cluster="Newtonsoft.Json.Utilities.StringUtils.WriteCharAsUnicode(System.IO.TextWriter, char)", file="StringUtils.cs", label="ValidationUtils.ArgumentNotNull(writer, ''writer'')", span="380-380"];
m41_207 [cluster="Newtonsoft.Json.Utilities.StringUtils.WriteCharAsUnicode(System.IO.TextWriter, char)", file="StringUtils.cs", label="char h2 = MathUtils.IntToHex((c >> 8) & '\x000f')", span="383-383"];
m41_337 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleIndexes()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleIndexes()", span="526-526"];
m41_338 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleIndexes()", file="StringUtils.cs", label="JPath path = new JPath(''[111119990,3]'')", span="528-528"];
m41_339 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleIndexes()", file="StringUtils.cs", label="Assert.AreEqual(1, path.Filters.Count)", span="529-529"];
m41_340 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleIndexes()", file="StringUtils.cs", label="Assert.AreEqual(2, ((ArrayMultipleIndexFilter)path.Filters[0]).Indexes.Count)", span="530-530"];
m41_341 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleIndexes()", file="StringUtils.cs", label="Assert.AreEqual(111119990, ((ArrayMultipleIndexFilter)path.Filters[0]).Indexes[0])", span="531-531"];
m41_342 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleIndexes()", file="StringUtils.cs", label="Assert.AreEqual(3, ((ArrayMultipleIndexFilter)path.Filters[0]).Indexes[1])", span="532-532"];
m41_343 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleIndexes()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleIndexes()", span="526-526"];
m41_135 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndFilterWithEscapeQuote()", file="StringUtils.cs", label="Assert.AreEqual(''Blah'', ((FieldFilter)path.Filters[0]).Name)", span="247-247"];
m41_136 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndFilterWithEscapeQuote()", file="StringUtils.cs", label="BooleanQueryExpression expressions = (BooleanQueryExpression)((QueryFilter)path.Filters[1]).Expression", span="248-248"];
m41_137 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndFilterWithEscapeQuote()", file="StringUtils.cs", label="Assert.AreEqual(QueryOperator.Equals, expressions.Operator)", span="249-249"];
m41_110 [cluster="lambda expression", file="StringUtils.cs", label="tw.Write(''. '')", span="238-238"];
m41_111 [cluster="lambda expression", file="StringUtils.cs", label="tw.Write(line)", span="239-239"];
m41_112 [cluster="lambda expression", file="StringUtils.cs", label="lineNumber++", span="241-241"];
m41_113 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="235-242"];
m41_56 [cluster="Newtonsoft.Json.Utilities.StringUtils.IfNotNullOrEmpty(string, System.Action<string>, System.Action<string>)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IfNotNullOrEmpty(string, System.Action<string>, System.Action<string>)", span="151-151"];
m41_57 [cluster="Newtonsoft.Json.Utilities.StringUtils.IfNotNullOrEmpty(string, System.Action<string>, System.Action<string>)", file="StringUtils.cs", label="!string.IsNullOrEmpty(value)", span="153-153"];
m41_58 [cluster="Newtonsoft.Json.Utilities.StringUtils.IfNotNullOrEmpty(string, System.Action<string>, System.Action<string>)", file="StringUtils.cs", label="trueAction != null", span="155-155"];
m41_59 [cluster="Newtonsoft.Json.Utilities.StringUtils.IfNotNullOrEmpty(string, System.Action<string>, System.Action<string>)", file="StringUtils.cs", label="trueAction(value)", span="156-156"];
m41_60 [cluster="Newtonsoft.Json.Utilities.StringUtils.IfNotNullOrEmpty(string, System.Action<string>, System.Action<string>)", file="StringUtils.cs", label="falseAction != null", span="160-160"];
m41_152 [cluster="lambda expression", file="StringUtils.cs", label="new JPath(@''Blah[ ?( @.name=='h\i' ) ]'')", span="269-269"];
m41_10 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SingleQuotedProperty()", file="StringUtils.cs", label="Assert.AreEqual(''Blah'', ((FieldFilter)path.Filters[0]).Name)", span="60-60"];
m41_12 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SingleQuotedPropertyWithWhitespace()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SingleQuotedPropertyWithWhitespace()", span="64-64"];
m41_13 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SingleQuotedPropertyWithWhitespace()", file="StringUtils.cs", label="JPath path = new JPath(''[  'Blah'  ]'')", span="66-66"];
m41_15 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SingleQuotedPropertyWithWhitespace()", file="StringUtils.cs", label="Assert.AreEqual(''Blah'', ((FieldFilter)path.Filters[0]).Name)", span="68-68"];
m41_18 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SingleQuotedPropertyWithDots()", file="StringUtils.cs", label="JPath path = new JPath(''['Blah.Ha']'')", span="74-74"];
m41_19 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SingleQuotedPropertyWithDots()", file="StringUtils.cs", label="Assert.AreEqual(1, path.Filters.Count)", span="75-75"];
m41_14 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SingleQuotedPropertyWithWhitespace()", file="StringUtils.cs", label="Assert.AreEqual(1, path.Filters.Count)", span="67-67"];
m41_16 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SingleQuotedPropertyWithWhitespace()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SingleQuotedPropertyWithWhitespace()", span="64-64"];
m41_17 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SingleQuotedPropertyWithDots()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SingleQuotedPropertyWithDots()", span="72-72"];
m41_21 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SingleQuotedPropertyWithDots()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SingleQuotedPropertyWithDots()", span="72-72"];
m41_22 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SingleQuotedPropertyWithBrackets()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SingleQuotedPropertyWithBrackets()", span="80-80"];
m41_20 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SingleQuotedPropertyWithDots()", file="StringUtils.cs", label="Assert.AreEqual(''Blah.Ha'', ((FieldFilter)path.Filters[0]).Name)", span="76-76"];
m41_23 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SingleQuotedPropertyWithBrackets()", file="StringUtils.cs", label="JPath path = new JPath(''['[*]']'')", span="82-82"];
m41_276 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoAtAfterOr()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoAtAfterOr()", span="445-445"];
m41_277 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoAtAfterOr()", file="StringUtils.cs", label="ExceptionAssert.Throws<JsonException>(''Unexpected character while parsing path query: s'',\r\n                () => new JPath(''[?(@.name||s''))", span="447-448"];
m41_278 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoAtAfterOr()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoAtAfterOr()", span="445-445"];
m41_67 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.WildcardArray()", file="StringUtils.cs", label="JPath path = new JPath(''[*]'')", span="146-146"];
m41_68 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.WildcardArray()", file="StringUtils.cs", label="Assert.AreEqual(1, path.Filters.Count)", span="147-147"];
m41_70 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.WildcardArray()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.WildcardArray()", span="144-144"];
m41_69 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.WildcardArray()", file="StringUtils.cs", label="Assert.AreEqual(null, ((ArrayIndexFilter)path.Filters[0]).Index)", span="148-148"];
m41_44 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoFieldNameAfterDot()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoFieldNameAfterDot()", span="112-112"];
m41_132 [cluster="System.IO.StringReader.ReadLine()", file="StringUtils.cs", label="Entry System.IO.StringReader.ReadLine()", span="0-0"];
m41_133 [cluster="System.Text.StringBuilder.Append(string)", color=green, community=0, file="StringUtils.cs", label="Entry System.Text.StringBuilder.Append(string)", prediction=279, span="0-0"];
m41_134 [cluster="System.Text.StringBuilder.ToString()", file="StringUtils.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m41_139 [cluster="Newtonsoft.Json.Utilities.StringUtils.RemoveHtml(string, System.Collections.Generic.IList<string>)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.RemoveHtml(string, System.Collections.Generic.IList<string>)", span="283-283"];
m41_166 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndFilterWithTrue()", file="StringUtils.cs", label="BooleanQueryExpression expressions = (BooleanQueryExpression)((QueryFilter)path.Filters[1]).Expression", span="289-289"];
m41_167 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndFilterWithTrue()", file="StringUtils.cs", label="Assert.AreEqual(QueryOperator.Equals, expressions.Operator)", span="290-290"];
m41_168 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndFilterWithTrue()", file="StringUtils.cs", label="Assert.AreEqual(true, (bool)expressions.Value)", span="291-291"];
m41_61 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.WildcardArrayWithRoot()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.WildcardArrayWithRoot()", span="136-136"];
m41_62 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.WildcardArrayWithRoot()", file="StringUtils.cs", label="JPath path = new JPath(''$.[*]'')", span="138-138"];
m41_223 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithFloat()", file="StringUtils.cs", label=removeTagsUpper, span=""];
m41_224 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithFloat()", file="StringUtils.cs", label="JPath path = new JPath(''[?(@.name>=12.1)]'')", span="380-380"];
m41_226 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithFloat()", file="StringUtils.cs", label="Assert.AreEqual(12.1d, (double)expressions.Value)", span="382-382"];
m41_225 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithFloat()", file="StringUtils.cs", label="BooleanQueryExpression expressions = (BooleanQueryExpression)((QueryFilter)path.Filters[0]).Expression", span="381-381"];
m41_227 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithFloat()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithFloat()", span="378-378"];
m41_188 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="StringUtils.cs", label="StringBuilder sb = new StringBuilder(capacity)", span="355-355"];
m41_191 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="353-353"];
m41_190 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="StringUtils.cs", label="return sw;", span="358-358"];
m41_192 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="StringUtils.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m41_186 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithNotEquals()", file="StringUtils.cs", label="Assert.AreEqual(QueryOperator.NotEquals, expressions.Operator)", span="318-318"];
m41_365 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndex()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndex()", span="567-567"];
m41_366 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndex()", file="StringUtils.cs", label="JPath path = new JPath(''[111119990:3]'')", span="569-569"];
m41_367 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndex()", file="StringUtils.cs", label="Assert.AreEqual(1, path.Filters.Count)", span="570-570"];
m41_368 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndex()", file="StringUtils.cs", label="Assert.AreEqual(111119990, ((ArraySliceFilter)path.Filters[0]).Start)", span="571-571"];
m41_369 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndex()", file="StringUtils.cs", label="Assert.AreEqual(3, ((ArraySliceFilter)path.Filters[0]).End)", span="572-572"];
m41_370 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndex()", file="StringUtils.cs", label="Assert.AreEqual(null, ((ArraySliceFilter)path.Filters[0]).Step)", span="573-573"];
m41_371 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndex()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndex()", span="567-567"];
m41_92 [cluster="Newtonsoft.Json.Utilities.StringUtils.ActionTextReaderLine(System.IO.TextReader, System.IO.TextWriter, Newtonsoft.Json.Utilities.StringUtils.ActionLine)", file="StringUtils.cs", label="textWriter.WriteLine()", span="212-212"];
m41_93 [cluster="Newtonsoft.Json.Utilities.StringUtils.ActionTextReaderLine(System.IO.TextReader, System.IO.TextWriter, Newtonsoft.Json.Utilities.StringUtils.ActionLine)", file="StringUtils.cs", label="firstLine = false", span="214-214"];
m41_94 [cluster="Newtonsoft.Json.Utilities.StringUtils.ActionTextReaderLine(System.IO.TextReader, System.IO.TextWriter, Newtonsoft.Json.Utilities.StringUtils.ActionLine)", file="StringUtils.cs", label="lineAction(textWriter, line)", span="216-216"];
m41_95 [cluster="Newtonsoft.Json.Utilities.StringUtils.ActionTextReaderLine(System.IO.TextReader, System.IO.TextWriter, Newtonsoft.Json.Utilities.StringUtils.ActionLine)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.ActionTextReaderLine(System.IO.TextReader, System.IO.TextWriter, Newtonsoft.Json.Utilities.StringUtils.ActionLine)", span="205-205"];
m41_96 [cluster="System.IO.TextReader.ReadLine()", file="StringUtils.cs", label="Entry System.IO.TextReader.ReadLine()", span="0-0"];
m41_185 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithNotEquals()", file="StringUtils.cs", label="BooleanQueryExpression expressions = (BooleanQueryExpression)((QueryFilter)path.Filters[0]).Expression", span="317-317"];
m41_53 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="124-124"];
m41_54 [cluster="lambda expression", file="StringUtils.cs", label="new JPath(''$. Blah'')", span="124-124"];
m41_55 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="124-124"];
m41_170 [cluster="Newtonsoft.Json.Utilities.StringUtils.Truncate(string, int, string)", file="StringUtils.cs", label="suffix == null", span="327-327"];
m41_171 [cluster="Newtonsoft.Json.Utilities.StringUtils.Truncate(string, int, string)", file="StringUtils.cs", label="throw new ArgumentNullException(''suffix'');", span="328-328"];
m41_172 [cluster="Newtonsoft.Json.Utilities.StringUtils.Truncate(string, int, string)", file="StringUtils.cs", label="maximumLength <= 0", span="330-330"];
m41_173 [cluster="Newtonsoft.Json.Utilities.StringUtils.Truncate(string, int, string)", file="StringUtils.cs", label="throw new ArgumentException(''Maximum length must be greater than zero.'', ''maximumLength'');", span="331-331"];
m41_175 [cluster="Newtonsoft.Json.Utilities.StringUtils.Truncate(string, int, string)", file="StringUtils.cs", label="subStringLength <= 0", span="335-335"];
m41_176 [cluster="Newtonsoft.Json.Utilities.StringUtils.Truncate(string, int, string)", file="StringUtils.cs", label="throw new ArgumentException(''Length of suffix string is greater or equal to maximumLength'');", span="336-336"];
m41_174 [cluster="Newtonsoft.Json.Utilities.StringUtils.Truncate(string, int, string)", file="StringUtils.cs", label="int subStringLength = maximumLength - suffix.Length", span="333-333"];
m41_177 [cluster="Newtonsoft.Json.Utilities.StringUtils.Truncate(string, int, string)", file="StringUtils.cs", label="s != null && s.Length > maximumLength", span="338-338"];
m41_315 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BadCharactersInIndexer()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BadCharactersInIndexer()", span="494-494"];
m41_316 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BadCharactersInIndexer()", file="StringUtils.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                @''Unexpected character while parsing path indexer: ['',\r\n                () => { new JPath(''Blah[[0]].Two.Three[1].Four''); })", span="496-498"];
m41_317 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BadCharactersInIndexer()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BadCharactersInIndexer()", span="494-494"];
m41_372 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexNegative()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexNegative()", span="577-577"];
m41_373 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexNegative()", file="StringUtils.cs", label="JPath path = new JPath(''[-111119990:-3:-2]'')", span="579-579"];
m41_374 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexNegative()", file="StringUtils.cs", label="Assert.AreEqual(1, path.Filters.Count)", span="580-580"];
m41_375 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexNegative()", file="StringUtils.cs", label="Assert.AreEqual(-111119990, ((ArraySliceFilter)path.Filters[0]).Start)", span="581-581"];
m41_376 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexNegative()", file="StringUtils.cs", label="Assert.AreEqual(-3, ((ArraySliceFilter)path.Filters[0]).End)", span="582-582"];
m41_377 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexNegative()", file="StringUtils.cs", label="Assert.AreEqual(-2, ((ArraySliceFilter)path.Filters[0]).Step)", span="583-583"];
m41_378 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexNegative()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexNegative()", span="577-577"];
m41_420 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MissingDotAfterIndexer()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MissingDotAfterIndexer()", span="644-644"];
m41_421 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MissingDotAfterIndexer()", file="StringUtils.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                ''Unexpected character following indexer: B'',\r\n                () => { new JPath(''[1]Blah''); })", span="646-648"];
m41_422 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MissingDotAfterIndexer()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MissingDotAfterIndexer()", span="644-644"];
m41_77 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.QuotedWildcardPropertyWithRoot()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.QuotedWildcardPropertyWithRoot()", span="161-161"];
m41_213 [cluster="Newtonsoft.Json.Utilities.StringUtils.WriteCharAsUnicode(System.IO.TextWriter, char)", file="StringUtils.cs", label="writer.Write(h2)", span="390-390"];
m41_214 [cluster="Newtonsoft.Json.Utilities.StringUtils.WriteCharAsUnicode(System.IO.TextWriter, char)", file="StringUtils.cs", label="writer.Write(h3)", span="391-391"];
m41_216 [cluster="Newtonsoft.Json.Utilities.StringUtils.WriteCharAsUnicode(System.IO.TextWriter, char)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.WriteCharAsUnicode(System.IO.TextWriter, char)", span="378-378"];
m41_215 [cluster="Newtonsoft.Json.Utilities.StringUtils.WriteCharAsUnicode(System.IO.TextWriter, char)", file="StringUtils.cs", label="writer.Write(h4)", span="392-392"];
m41_217 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithInteger()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithInteger()", span="362-362"];
m41_178 [cluster="Newtonsoft.Json.Utilities.StringUtils.Truncate(string, int, string)", file="StringUtils.cs", label="string truncatedString = s.Substring(0, subStringLength)", span="340-340"];
m41_179 [cluster="Newtonsoft.Json.Utilities.StringUtils.Truncate(string, int, string)", file="StringUtils.cs", label="truncatedString = truncatedString.Trim()", span="342-342"];
m41_181 [cluster="Newtonsoft.Json.Utilities.StringUtils.Truncate(string, int, string)", file="StringUtils.cs", label="return truncatedString;", span="345-345"];
m41_180 [cluster="Newtonsoft.Json.Utilities.StringUtils.Truncate(string, int, string)", file="StringUtils.cs", label="truncatedString += suffix", span="343-343"];
m41_182 [cluster="Newtonsoft.Json.Utilities.StringUtils.Truncate(string, int, string)", file="StringUtils.cs", label="return s;", span="349-349"];
m41_412 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.AdjacentIndexers()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.AdjacentIndexers()", span="633-633"];
m41_413 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.AdjacentIndexers()", file="StringUtils.cs", label="JPath path = new JPath(''[1][0][0]['' + int.MaxValue + '']'')", span="635-635"];
m41_414 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.AdjacentIndexers()", file="StringUtils.cs", label="Assert.AreEqual(4, path.Filters.Count)", span="636-636"];
m41_415 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.AdjacentIndexers()", file="StringUtils.cs", label="Assert.AreEqual(1, ((ArrayIndexFilter)path.Filters[0]).Index)", span="637-637"];
m41_416 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.AdjacentIndexers()", file="StringUtils.cs", label="Assert.AreEqual(0, ((ArrayIndexFilter)path.Filters[1]).Index)", span="638-638"];
m41_417 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.AdjacentIndexers()", file="StringUtils.cs", label="Assert.AreEqual(0, ((ArrayIndexFilter)path.Filters[2]).Index)", span="639-639"];
m41_418 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.AdjacentIndexers()", file="StringUtils.cs", label="Assert.AreEqual(int.MaxValue, ((ArrayIndexFilter)path.Filters[3]).Index)", span="640-640"];
m41_419 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.AdjacentIndexers()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.AdjacentIndexers()", span="633-633"];
m41_24 [cluster="Newtonsoft.Json.Utilities.StringUtils.EnsureEndsWith(string, string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.EnsureEndsWith(string, string)", span="92-92"];
m41_25 [cluster="Newtonsoft.Json.Utilities.StringUtils.EnsureEndsWith(string, string)", file="StringUtils.cs", label="target == null", span="94-94"];
m41_26 [cluster="Newtonsoft.Json.Utilities.StringUtils.EnsureEndsWith(string, string)", file="StringUtils.cs", label="throw new ArgumentNullException(''target'');", span="95-95"];
m41_5 [cluster="Newtonsoft.Json.Utilities.StringUtils.ContainsWhiteSpace(string)", file="StringUtils.cs", label="char.IsWhiteSpace(s[i])", span="56-56"];
m41_270 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BaddOr4()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BaddOr4()", span="438-438"];
m41_271 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BaddOr4()", file="StringUtils.cs", label="ExceptionAssert.Throws<JsonException>(''Path ended with open query.'',\r\n                () => new JPath(''[?(@.name||''))", span="440-441"];
m41_272 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BaddOr4()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BaddOr4()", span="438-438"];
m41_155 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndFilterWithFalse()", file="StringUtils.cs", label="JPath path = new JPath(''Blah[ ?( @.name==false ) ]'')", span="275-275"];
m41_379 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexEmptyStop()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexEmptyStop()", span="587-587"];
m41_380 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexEmptyStop()", file="StringUtils.cs", label="JPath path = new JPath(''[  -3  :  ]'')", span="589-589"];
m41_381 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexEmptyStop()", file="StringUtils.cs", label="Assert.AreEqual(1, path.Filters.Count)", span="590-590"];
m41_382 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexEmptyStop()", file="StringUtils.cs", label="Assert.AreEqual(-3, ((ArraySliceFilter)path.Filters[0]).Start)", span="591-591"];
m41_383 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexEmptyStop()", file="StringUtils.cs", label="Assert.AreEqual(null, ((ArraySliceFilter)path.Filters[0]).End)", span="592-592"];
m41_384 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexEmptyStop()", file="StringUtils.cs", label="Assert.AreEqual(null, ((ArraySliceFilter)path.Filters[0]).Step)", span="593-593"];
m41_385 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexEmptyStop()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexEmptyStop()", span="587-587"];
m41_219 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithNegativeInteger()", file="StringUtils.cs", label="JPath path = new JPath(''[?(@.name>=-12)]'')", span="372-372"];
m41_124 [cluster="Newtonsoft.Json.Utilities.StringUtils.ReplaceNewLines(string, string)", file="StringUtils.cs", label="(line = sr.ReadLine()) != null", span="265-265"];
m41_125 [cluster="Newtonsoft.Json.Utilities.StringUtils.ReplaceNewLines(string, string)", file="StringUtils.cs", label=first, span="267-267"];
m41_126 [cluster="Newtonsoft.Json.Utilities.StringUtils.ReplaceNewLines(string, string)", file="StringUtils.cs", label="first = false", span="268-268"];
m41_127 [cluster="Newtonsoft.Json.Utilities.StringUtils.ReplaceNewLines(string, string)", file="StringUtils.cs", label="sb.Append(replacement)", span="270-270"];
m41_129 [cluster="Newtonsoft.Json.Utilities.StringUtils.ReplaceNewLines(string, string)", file="StringUtils.cs", label="return sb.ToString();", span="275-275"];
m41_130 [cluster="Newtonsoft.Json.Utilities.StringUtils.ReplaceNewLines(string, string)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.ReplaceNewLines(string, string)", span="257-257"];
m41_128 [cluster="Newtonsoft.Json.Utilities.StringUtils.ReplaceNewLines(string, string)", file="StringUtils.cs", label="sb.Append(line)", span="272-272"];
m41_98 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.TwoProperties()", file="StringUtils.cs", label="JPath path = new JPath(''Blah.Two'')", span="195-195"];
m41_119 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndExistsQuery()", file="StringUtils.cs", label="BooleanQueryExpression expressions = (BooleanQueryExpression)((QueryFilter)path.Filters[1]).Expression", span="225-225"];
m41_120 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndExistsQuery()", file="StringUtils.cs", label="Assert.AreEqual(QueryOperator.Exists, expressions.Operator)", span="226-226"];
m41_121 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndExistsQuery()", file="StringUtils.cs", label="Assert.AreEqual(1, expressions.Path.Count)", span="227-227"];
m41_122 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndExistsQuery()", file="StringUtils.cs", label="Assert.AreEqual(''name'', ((ScanFilter)expressions.Path[0]).Name)", span="228-228"];
m41_123 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndExistsQuery()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndExistsQuery()", span="220-220"];
m41_97 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.TwoProperties()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.TwoProperties()", span="193-193"];
m41_162 [cluster="lambda expression", file="StringUtils.cs", label="return string.Empty;", span="314-314"];
m41_163 [cluster="lambda expression", file="StringUtils.cs", label="return match.Value;", span="316-316"];
m41_164 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="307-317"];
m41_165 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="StringUtils.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m41_169 [cluster="Newtonsoft.Json.Utilities.StringUtils.Truncate(string, int, string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.Truncate(string, int, string)", span="325-325"];
m41_45 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoFieldNameAfterDot()", file="StringUtils.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                @''Unexpected end while parsing path.'',\r\n                () => { new JPath(''$.Blah.''); })", span="114-116"];
m41_46 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoFieldNameAfterDot()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoFieldNameAfterDot()", span="112-112"];
m41_48 [cluster="lambda expression", file="StringUtils.cs", label="new JPath(''$.Blah.'')", span="116-116"];
m41_47 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="116-116"];
m41_49 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="116-116"];
m41_393 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexWhitespace()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexWhitespace()", span="607-607"];
m41_394 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexWhitespace()", file="StringUtils.cs", label="JPath path = new JPath(''[  -111119990  :  -3  :  -2  ]'')", span="609-609"];
m41_395 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexWhitespace()", file="StringUtils.cs", label="Assert.AreEqual(1, path.Filters.Count)", span="610-610"];
m41_396 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexWhitespace()", file="StringUtils.cs", label="Assert.AreEqual(-111119990, ((ArraySliceFilter)path.Filters[0]).Start)", span="611-611"];
m41_397 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexWhitespace()", file="StringUtils.cs", label="Assert.AreEqual(-3, ((ArraySliceFilter)path.Filters[0]).End)", span="612-612"];
m41_398 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexWhitespace()", file="StringUtils.cs", label="Assert.AreEqual(-2, ((ArraySliceFilter)path.Filters[0]).Step)", span="613-613"];
m41_399 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexWhitespace()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SlicingIndexWhitespace()", span="607-607"];
m41_406 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.IndexerCloseInProperty()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.IndexerCloseInProperty()", span="625-625"];
m41_407 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.IndexerCloseInProperty()", file="StringUtils.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                ''Unexpected character while parsing path: ]'',\r\n                () => { new JPath('']''); })", span="627-629"];
m41_408 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.IndexerCloseInProperty()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.IndexerCloseInProperty()", span="625-625"];
m41_258 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BaddOr2()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BaddOr2()", span="424-424"];
m41_259 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BaddOr2()", file="StringUtils.cs", label="ExceptionAssert.Throws<JsonException>(''Unexpected character while parsing path query: |'',\r\n                () => new JPath(''[?(@.name|)]''))", span="426-427"];
m41_260 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BaddOr2()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BaddOr2()", span="424-424"];
m41_99 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.TwoProperties()", file="StringUtils.cs", label="Assert.AreEqual(2, path.Filters.Count)", span="196-196"];
m41_100 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.TwoProperties()", file="StringUtils.cs", label="Assert.AreEqual(''Blah'', ((FieldFilter)path.Filters[0]).Name)", span="197-197"];
m41_102 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.TwoProperties()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.TwoProperties()", span="193-193"];
m41_101 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.TwoProperties()", file="StringUtils.cs", label="Assert.AreEqual(''Two'', ((FieldFilter)path.Filters[1]).Name)", span="198-198"];
m41_104 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.OnePropertyOneScan()", file="StringUtils.cs", label="JPath path = new JPath(''Blah..Two'')", span="204-204"];
m41_106 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.OnePropertyOneScan()", color=green, community=0, file="StringUtils.cs", label="Assert.AreEqual(''Blah'', ((FieldFilter)path.Filters[0]).Name)", prediction=280, span="206-206"];
m41_107 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.OnePropertyOneScan()", file="StringUtils.cs", label="Assert.AreEqual(''Two'', ((ScanFilter)path.Filters[1]).Name)", span="207-207"];
m41_87 [cluster="System.IO.TextWriter.Write(string)", file="StringUtils.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m41_88 [cluster="Newtonsoft.Json.Utilities.StringUtils.ActionTextReaderLine(System.IO.TextReader, System.IO.TextWriter, Newtonsoft.Json.Utilities.StringUtils.ActionLine)", file="StringUtils.cs", label="string line", span="207-207"];
m41_89 [cluster="Newtonsoft.Json.Utilities.StringUtils.ActionTextReaderLine(System.IO.TextReader, System.IO.TextWriter, Newtonsoft.Json.Utilities.StringUtils.ActionLine)", file="StringUtils.cs", label="bool firstLine = true", span="208-208"];
m41_90 [cluster="Newtonsoft.Json.Utilities.StringUtils.ActionTextReaderLine(System.IO.TextReader, System.IO.TextWriter, Newtonsoft.Json.Utilities.StringUtils.ActionLine)", file="StringUtils.cs", label="(line = textReader.ReadLine()) != null", span="209-209"];
m41_91 [cluster="Newtonsoft.Json.Utilities.StringUtils.ActionTextReaderLine(System.IO.TextReader, System.IO.TextWriter, Newtonsoft.Json.Utilities.StringUtils.ActionLine)", file="StringUtils.cs", label="!firstLine", span="211-211"];
m41_184 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithNotEquals()", file="StringUtils.cs", label="JPath path = new JPath(''[?(@.name<>null)]'')", span="316-316"];
m41_238 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAndOr()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAndOr()", span="399-399"];
m41_239 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAndOr()", file="StringUtils.cs", label="JPath path = new JPath(''[?(@.name&&@.title||@.pie)]'')", span="401-401"];
m41_241 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAndOr()", file="StringUtils.cs", label="Assert.AreEqual(QueryOperator.And, andExpression.Operator)", span="403-403"];
m41_242 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAndOr()", file="StringUtils.cs", label="Assert.AreEqual(2, andExpression.Expressions.Count)", span="404-404"];
m41_243 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAndOr()", file="StringUtils.cs", label="Assert.AreEqual(''name'', ((FieldFilter)((BooleanQueryExpression)andExpression.Expressions[0]).Path[0]).Name)", span="405-405"];
m41_244 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAndOr()", file="StringUtils.cs", label="Assert.AreEqual(QueryOperator.Exists, andExpression.Expressions[0].Operator)", span="406-406"];
m41_246 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAndOr()", file="StringUtils.cs", label="Assert.AreEqual(2, orExpression.Expressions.Count)", span="409-409"];
m41_247 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAndOr()", file="StringUtils.cs", label="Assert.AreEqual(''title'', ((FieldFilter)((BooleanQueryExpression)orExpression.Expressions[0]).Path[0]).Name)", span="410-410"];
m41_248 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAndOr()", file="StringUtils.cs", label="Assert.AreEqual(QueryOperator.Exists, orExpression.Expressions[0].Operator)", span="411-411"];
m41_249 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAndOr()", file="StringUtils.cs", label="Assert.AreEqual(''pie'', ((FieldFilter)((BooleanQueryExpression)orExpression.Expressions[1]).Path[0]).Name)", span="412-412"];
m41_250 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAndOr()", file="StringUtils.cs", label="Assert.AreEqual(QueryOperator.Exists, orExpression.Expressions[1].Operator)", span="413-413"];
m41_240 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAndOr()", file="StringUtils.cs", label="CompositeExpression andExpression = (CompositeExpression)((QueryFilter)path.Filters[0]).Expression", span="402-402"];
m41_245 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAndOr()", file="StringUtils.cs", label="CompositeExpression orExpression = (CompositeExpression)andExpression.Expressions[1]", span="408-408"];
m41_251 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAndOr()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterExistWithAndOr()", span="399-399"];
m41_115 [cluster="string.PadLeft(int)", file="StringUtils.cs", label="Entry string.PadLeft(int)", span="0-0"];
m41_116 [cluster="Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", span="252-252"];
m41_117 [cluster="Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", file="StringUtils.cs", label="return (string.IsNullOrEmpty(s)) ? null : s;", span="254-254"];
m41_118 [cluster="Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", span="252-252"];
m41_183 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithNotEquals()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithNotEquals()", span="314-314"];
m41_154 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndFilterWithFalse()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.SinglePropertyAndFilterWithFalse()", span="273-273"];
m41_63 [cluster="System.Action<T>.Invoke(T)", file="StringUtils.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m41_64 [cluster="Newtonsoft.Json.Utilities.StringUtils.Indent(string, int)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.Indent(string, int)", span="171-171"];
m41_65 [cluster="Newtonsoft.Json.Utilities.StringUtils.Indent(string, int)", file="StringUtils.cs", label="return Indent(s, indentation, ' ');", span="173-173"];
m41_6 [cluster="Newtonsoft.Json.Utilities.StringUtils.ContainsWhiteSpace(string)", file="StringUtils.cs", label="return true;", span="57-57"];
m41_344 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleIndexesWithWhitespace()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleIndexesWithWhitespace()", span="536-536"];
m41_345 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleIndexesWithWhitespace()", file="StringUtils.cs", label="JPath path = new JPath(''[   111119990  ,   3   ]'')", span="538-538"];
m41_346 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleIndexesWithWhitespace()", file="StringUtils.cs", label="Assert.AreEqual(1, path.Filters.Count)", span="539-539"];
m41_347 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleIndexesWithWhitespace()", file="StringUtils.cs", label="Assert.AreEqual(2, ((ArrayMultipleIndexFilter)path.Filters[0]).Indexes.Count)", span="540-540"];
m41_348 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleIndexesWithWhitespace()", file="StringUtils.cs", label="Assert.AreEqual(111119990, ((ArrayMultipleIndexFilter)path.Filters[0]).Indexes[0])", span="541-541"];
m41_349 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleIndexesWithWhitespace()", file="StringUtils.cs", label="Assert.AreEqual(3, ((ArrayMultipleIndexFilter)path.Filters[0]).Indexes[1])", span="542-542"];
m41_350 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleIndexesWithWhitespace()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleIndexesWithWhitespace()", span="536-536"];
m41_218 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithNegativeInteger()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithNegativeInteger()", span="370-370"];
m41_157 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="307-317"];
m41_159 [cluster="lambda expression", file="StringUtils.cs", label="removeTagsUpper == null", span="311-311"];
m41_160 [cluster="lambda expression", file="StringUtils.cs", label="return string.Empty;", span="312-312"];
m41_158 [cluster="lambda expression", file="StringUtils.cs", label="string tag = match.Groups[''tag''].Value.ToUpperInvariant()", span="309-309"];
m41_161 [cluster="lambda expression", file="StringUtils.cs", label="removeTagsUpper.Contains(tag)", span="313-313"];
m41_32 [cluster="Newtonsoft.Json.Utilities.StringUtils.EnsureEndsWith(string, string)", file="StringUtils.cs", label="string trimmedString = target.TrimEnd(null)", span="106-106"];
m41_33 [cluster="Newtonsoft.Json.Utilities.StringUtils.EnsureEndsWith(string, string)", file="StringUtils.cs", label="string.Compare(trimmedString, trimmedString.Length - value.Length, value, 0, value.Length,\r\n                        StringComparison.OrdinalIgnoreCase) == 0", span="108-109"];
m41_34 [cluster="Newtonsoft.Json.Utilities.StringUtils.EnsureEndsWith(string, string)", file="StringUtils.cs", label="return target;", span="110-110"];
m41_35 [cluster="Newtonsoft.Json.Utilities.StringUtils.EnsureEndsWith(string, string)", file="StringUtils.cs", label="return target + value;", span="113-113"];
m41_36 [cluster="Newtonsoft.Json.Utilities.StringUtils.EnsureEndsWith(string, string)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.EnsureEndsWith(string, string)", span="92-92"];
m41_7 [cluster="Newtonsoft.Json.Utilities.StringUtils.ContainsWhiteSpace(string)", file="StringUtils.cs", label="i++", span="54-54"];
m41_8 [cluster="Newtonsoft.Json.Utilities.StringUtils.ContainsWhiteSpace(string)", file="StringUtils.cs", label="return false;", span="59-59"];
m41_9 [cluster="Newtonsoft.Json.Utilities.StringUtils.ContainsWhiteSpace(string)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.ContainsWhiteSpace(string)", span="49-49"];
m41_423 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="648-648"];
m41_108 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.OnePropertyOneScan()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.OnePropertyOneScan()", span="202-202"];
m41_42 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsNullOrEmpty(SqlString)", file="StringUtils.cs", label="return string.IsNullOrEmpty(s.Value);", span="128-128"];
m41_256 [cluster="lambda expression", file="StringUtils.cs", label="new JPath(''[?(@.name||)]'')", span="420-420"];
m41_262 [cluster="lambda expression", file="StringUtils.cs", label="new JPath(''[?(@.name|)]'')", span="427-427"];
m41_268 [cluster="lambda expression", file="StringUtils.cs", label="new JPath(''[?(@.name|'')", span="434-434"];
m41_274 [cluster="lambda expression", file="StringUtils.cs", label="new JPath(''[?(@.name||'')", span="441-441"];
m41_280 [cluster="lambda expression", file="StringUtils.cs", label="new JPath(''[?(@.name||s'')", span="448-448"];
m41_286 [cluster="lambda expression", file="StringUtils.cs", label="new JPath(''[?(@.name||@'')", span="455-455"];
m41_292 [cluster="lambda expression", file="StringUtils.cs", label="new JPath(''[?(@.name||@.'')", span="462-462"];
m41_298 [cluster="lambda expression", file="StringUtils.cs", label="new JPath(''[?(@.name||@.)]'')", span="469-469"];
m41_319 [cluster="lambda expression", file="StringUtils.cs", label="new JPath(''Blah[[0]].Two.Three[1].Four'')", span="498-498"];
m41_325 [cluster="lambda expression", file="StringUtils.cs", label="new JPath(''Blah[0'')", span="506-506"];
m41_404 [cluster="lambda expression", file="StringUtils.cs", label="new JPath(''[]'')", span="621-621"];
m41_410 [cluster="lambda expression", file="StringUtils.cs", label="new JPath('']'')", span="629-629"];
m41_424 [cluster="lambda expression", file="StringUtils.cs", label="new JPath(''[1]Blah'')", span="648-648"];
m41_41 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsNullOrEmpty(SqlString)", file="StringUtils.cs", label="return true;", span="126-126"];
m41_43 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsNullOrEmpty(SqlString)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.IsNullOrEmpty(SqlString)", span="123-123"];
m41_255 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="420-420"];
m41_257 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="420-420"];
m41_261 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="427-427"];
m41_263 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="427-427"];
m41_267 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="434-434"];
m41_269 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="434-434"];
m41_273 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="441-441"];
m41_275 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="441-441"];
m41_279 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="448-448"];
m41_281 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="448-448"];
m41_285 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="455-455"];
m41_287 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="455-455"];
m41_291 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="462-462"];
m41_293 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="462-462"];
m41_297 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="469-469"];
m41_299 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="469-469"];
m41_318 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="498-498"];
m41_320 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="498-498"];
m41_324 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="506-506"];
m41_326 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="506-506"];
m41_403 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="621-621"];
m41_405 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="621-621"];
m41_409 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="629-629"];
m41_411 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="629-629"];
m41_425 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="648-648"];
m41_140 [cluster="Newtonsoft.Json.Utilities.StringUtils.RemoveHtml(string, System.Collections.Generic.IList<string>)", file="StringUtils.cs", label="removeTags == null", span="285-285"];
m41_141 [cluster="Newtonsoft.Json.Utilities.StringUtils.RemoveHtml(string, System.Collections.Generic.IList<string>)", file="StringUtils.cs", label="throw new ArgumentNullException(''removeTags'');", span="286-286"];
m41_142 [cluster="Newtonsoft.Json.Utilities.StringUtils.RemoveHtml(string, System.Collections.Generic.IList<string>)", file="StringUtils.cs", label="return RemoveHtmlInternal(s, removeTags);", span="288-288"];
m41_143 [cluster="Newtonsoft.Json.Utilities.StringUtils.RemoveHtml(string, System.Collections.Generic.IList<string>)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.RemoveHtml(string, System.Collections.Generic.IList<string>)", span="283-283"];
m41_221 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithNegativeInteger()", file="StringUtils.cs", label=char, span=""];
m41_220 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithNegativeInteger()", file="StringUtils.cs", label=int, span=""];
m41_222 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithNegativeInteger()", file="StringUtils.cs", label=lineNumber, span=""];
m41_78 [cluster="System.IO.StringReader.StringReader(string)", file="StringUtils.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m41_79 [cluster="System.IO.StringWriter.StringWriter()", file="StringUtils.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m41_80 [cluster="Newtonsoft.Json.Utilities.StringUtils.ActionTextReaderLine(System.IO.TextReader, System.IO.TextWriter, Newtonsoft.Json.Utilities.StringUtils.ActionLine)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ActionTextReaderLine(System.IO.TextReader, System.IO.TextWriter, Newtonsoft.Json.Utilities.StringUtils.ActionLine)", span="205-205"];
m41_332 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.IndexerOnlyWithWhitespace()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.IndexerOnlyWithWhitespace()", span="518-518"];
m41_333 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.IndexerOnlyWithWhitespace()", file="StringUtils.cs", label="JPath path = new JPath(''[  10  ]'')", span="520-520"];
m41_334 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.IndexerOnlyWithWhitespace()", file="StringUtils.cs", label="Assert.AreEqual(1, path.Filters.Count)", span="521-521"];
m41_335 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.IndexerOnlyWithWhitespace()", file="StringUtils.cs", label="Assert.AreEqual(10, ((ArrayIndexFilter)path.Filters[0]).Index)", span="522-522"];
m41_336 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.IndexerOnlyWithWhitespace()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.IndexerOnlyWithWhitespace()", span="518-518"];
m41_40 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsNullOrEmpty(SqlString)", file="StringUtils.cs", label="s.IsNull", span="125-125"];
m41_294 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoPathAfterDot2()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoPathAfterDot2()", span="466-466"];
m41_295 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoPathAfterDot2()", file="StringUtils.cs", label="ExceptionAssert.Throws<JsonException>(@''Unexpected end while parsing path.'',\r\n                () => new JPath(''[?(@.name||@.)]''))", span="468-469"];
m41_296 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoPathAfterDot2()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.NoPathAfterDot2()", span="466-466"];
m41_327 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.IndexerOnly()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.IndexerOnly()", span="510-510"];
m41_328 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.IndexerOnly()", file="StringUtils.cs", label="JPath path = new JPath(''[111119990]'')", span="512-512"];
m41_329 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.IndexerOnly()", file="StringUtils.cs", label="Assert.AreEqual(1, path.Filters.Count)", span="513-513"];
m41_330 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.IndexerOnly()", file="StringUtils.cs", label="Assert.AreEqual(111119990, ((ArrayIndexFilter)path.Filters[0]).Index)", span="514-514"];
m41_331 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.IndexerOnly()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.IndexerOnly()", span="510-510"];
m41_66 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.WildcardArray()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.WildcardArray()", span="144-144"];
m41_187 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithNotEquals()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithNotEquals()", span="314-314"];
m41_400 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.EmptyIndexer()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.EmptyIndexer()", span="617-617"];
m41_401 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.EmptyIndexer()", file="StringUtils.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                ''Array index expected.'',\r\n                () => { new JPath(''[]''); })", span="619-621"];
m41_402 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.EmptyIndexer()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.EmptyIndexer()", span="617-617"];
m41_252 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BadOr1()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BadOr1()", span="417-417"];
m41_253 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BadOr1()", file="StringUtils.cs", label="ExceptionAssert.Throws<JsonException>(''Unexpected character while parsing path query: )'',\r\n                () => new JPath(''[?(@.name||)]''))", span="419-420"];
m41_254 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BadOr1()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.BadOr1()", span="417-417"];
m41_300 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithFloatExp()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithFloatExp()", span="473-473"];
m41_301 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithFloatExp()", file="StringUtils.cs", label="JPath path = new JPath(''[?(@.name>=5.56789e+0)]'')", span="475-475"];
m41_303 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithFloatExp()", file="StringUtils.cs", label="Assert.AreEqual(5.56789e+0, (double)expressions.Value)", span="477-477"];
m41_302 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithFloatExp()", file="StringUtils.cs", label="BooleanQueryExpression expressions = (BooleanQueryExpression)((QueryFilter)path.Filters[0]).Expression", span="476-476"];
m41_304 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithFloatExp()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.FilterWithFloatExp()", span="473-473"];
m41_351 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleQuotedIndexes()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleQuotedIndexes()", span="547-547"];
m41_352 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleQuotedIndexes()", file="StringUtils.cs", label="JPath path = new JPath(''['111119990','3']'')", span="549-549"];
m41_353 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleQuotedIndexes()", file="StringUtils.cs", label="Assert.AreEqual(1, path.Filters.Count)", span="550-550"];
m41_354 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleQuotedIndexes()", file="StringUtils.cs", label="Assert.AreEqual(2, ((ArrayMultipleIndexFilter)path.Filters[0]).Indexes.Count)", span="551-551"];
m41_355 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleQuotedIndexes()", file="StringUtils.cs", label="Assert.AreEqual(111119990, ((ArrayMultipleIndexFilter)path.Filters[0]).Indexes[0])", span="552-552"];
m41_356 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleQuotedIndexes()", file="StringUtils.cs", label="Assert.AreEqual(3, ((ArrayMultipleIndexFilter)path.Filters[0]).Indexes[1])", span="553-553"];
m41_357 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleQuotedIndexes()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests.MultipleQuotedIndexes()", span="547-547"];
m42_18 [cluster="Unk.AreEqual", file="UtcDateTimeConverterTest.cs", label="Entry Unk.AreEqual", span=""];
m42_11 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="UtcDateTimeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113"];
m42_15 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="UtcDateTimeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154"];
m42_17 [cluster="System.Console.WriteLine(string)", file="UtcDateTimeConverterTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m42_12 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="UtcDateTimeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293"];
m42_13 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="UtcDateTimeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104"];
m42_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDeclaratively.GetPosts()", file="UtcDateTimeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDeclaratively.GetPosts()", span="47-47"];
m42_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDeclaratively.GetPosts()", file="UtcDateTimeConverterTest.cs", label="return new List<Post>\r\n            {\r\n                new Post\r\n                {\r\n                    Title = ''Title!'',\r\n                    Categories = new List<string>\r\n                    {\r\n                        ''Category1''\r\n                    },\r\n                    Description = ''Description!'',\r\n                    Link = ''Link!''\r\n                }\r\n            };", span="49-61"];
m42_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDeclaratively.GetPosts()", file="UtcDateTimeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDeclaratively.GetPosts()", span="47-47"];
m42_16 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="UtcDateTimeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410"];
m42_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDeclaratively.Example()", file="UtcDateTimeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDeclaratively.Example()", span="65-65"];
m42_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDeclaratively.Example()", file="UtcDateTimeConverterTest.cs", label="List<Post> posts = GetPosts()", span="68-68"];
m42_7 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDeclaratively.Example()", file="UtcDateTimeConverterTest.cs", label="JObject rss =\r\n                new JObject(\r\n                    new JProperty(''channel'',\r\n                        new JObject(\r\n                            new JProperty(''title'', ''James Newton-King''),\r\n                            new JProperty(''link'', ''http://james.newtonking.com''),\r\n                            new JProperty(''description'', ''James Newton-King's blog.''),\r\n                            new JProperty(''item'',\r\n                                new JArray(\r\n                                    from p in posts\r\n                                    orderby p.Title\r\n                                    select new JObject(\r\n                                        new JProperty(''title'', p.Title),\r\n                                        new JProperty(''description'', p.Description),\r\n                                        new JProperty(''link'', p.Link),\r\n                                        new JProperty(''category'',\r\n                                            new JArray(\r\n                                                from c in p.Categories\r\n                                                select new JValue(c)))))))))", span="70-88"];
m42_8 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDeclaratively.Example()", file="UtcDateTimeConverterTest.cs", label="Console.WriteLine(rss.ToString())", span="90-90"];
m42_9 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDeclaratively.Example()", file="UtcDateTimeConverterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''channel'''': {\r\n    ''''title'''': ''''James Newton-King'''',\r\n    ''''link'''': ''''http://james.newtonking.com'''',\r\n    ''''description'''': ''''James Newton-King's blog.'''',\r\n    ''''item'''': [\r\n      {\r\n        ''''title'''': ''''Title!'''',\r\n        ''''description'''': ''''Description!'''',\r\n        ''''link'''': ''''Link!'''',\r\n        ''''category'''': [\r\n          ''''Category1''''\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}'', rss.ToString())", span="121-137"];
m42_10 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDeclaratively.Example()", file="UtcDateTimeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDeclaratively.Example()", span="65-65"];
m42_14 [cluster="JArray.cstr", file="UtcDateTimeConverterTest.cs", label="Entry JArray.cstr", span=""];
m42_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDeclaratively.Post.Post()", file="UtcDateTimeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDeclaratively.Post.Post()", span="38-38"];
m42_19 [file="UtcDateTimeConverterTest.cs", label="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDeclaratively", span=""];
n241 -> n146  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
n242 -> n146  [color=darkseagreen4, key=1, label=bool, style=dashed];
n0 -> n2  [color=darkseagreen4, key=1, label="System.Collections.IEnumerable", style=dashed];
n2 -> n8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n15 -> n17  [color=darkseagreen4, key=1, label="System.Collections.ICollection", style=dashed];
n20 -> n22  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<T>", style=dashed];
n25 -> n28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
n34 -> n37  [color=darkseagreen4, key=1, label="int?", style=dashed];
n34 -> n40  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
n34 -> n51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
n48 -> n50  [color=darkseagreen4, key=1, label=endIndex, style=dashed];
n39 -> n41  [color=darkseagreen4, key=1, label=slicedList, style=dashed];
n39 -> n51  [color=darkseagreen4, key=1, label=slicedList, style=dashed];
n39 -> n53  [color=darkseagreen4, key=1, label=slicedList, style=dashed];
n49 -> n51  [color=darkseagreen4, key=1, label=i, style=dashed];
n61 -> n65  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<V>", style=dashed];
n65 -> n71  [color=darkseagreen4, key=1, label=value, style=dashed];
n66 -> n68  [color=darkseagreen4, key=1, label=key, style=dashed];
n66 -> n70  [color=darkseagreen4, key=1, label=key, style=dashed];
n64 -> n68  [color=darkseagreen4, key=1, label=groupedValues, style=dashed];
n64 -> n70  [color=darkseagreen4, key=1, label=groupedValues, style=dashed];
n64 -> n72  [color=darkseagreen4, key=1, label=groupedValues, style=dashed];
n69 -> n71  [color=darkseagreen4, key=1, label=groupedValueList, style=dashed];
n78 -> n81  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n78 -> n83  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n78 -> n84  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
n87 -> n89  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<T>", style=dashed];
n88 -> n90  [color=darkseagreen4, key=1, label=distinctList, style=dashed];
n88 -> n91  [color=darkseagreen4, key=1, label=distinctList, style=dashed];
n88 -> n92  [color=darkseagreen4, key=1, label=distinctList, style=dashed];
n89 -> n91  [color=darkseagreen4, key=1, label=value, style=dashed];
n95 -> n98  [color=darkseagreen4, key=1, label="params System.Collections.Generic.IList<T>[]", style=dashed];
n96 -> n98  [color=darkseagreen4, key=1, label=flattened, style=dashed];
n96 -> n99  [color=darkseagreen4, key=1, label=flattened, style=dashed];
n101 -> n106  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Collections.Generic.IList<T>>", style=dashed];
n101 -> n109  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<int, T>", style=dashed];
n101 -> n110  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<int, T>", style=dashed];
n101 -> n112  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<System.Collections.Generic.List<T>>", style=dashed];
n101 -> n113  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Collections.Generic.IList<T>>", style=dashed];
n102 -> n104  [color=darkseagreen4, key=1, label=currentArray, style=dashed];
n103 -> n114  [color=darkseagreen4, key=1, label=i, style=dashed];
n114 -> n114  [color=darkseagreen4, key=1, label=i, style=dashed];
n107 -> n110  [color=darkseagreen4, key=1, label=items, style=dashed];
n107 -> n112  [color=darkseagreen4, key=1, label=items, style=dashed];
n108 -> n110  [color=darkseagreen4, key=1, label=k, style=dashed];
n108 -> n111  [color=darkseagreen4, key=1, label=k, style=dashed];
n111 -> n111  [color=darkseagreen4, key=1, label=k, style=dashed];
n116 -> n120  [color=darkseagreen4, key=1, label="System.Collections.ICollection", style=dashed];
n119 -> n121  [color=darkseagreen4, key=1, label=array, style=dashed];
n124 -> n126  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
n124 -> n127  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
n124 -> n131  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
n124 -> n132  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
n129 -> n132  [color=darkseagreen4, key=1, label=comparer, style=dashed];
n130 -> n132  [color=darkseagreen4, key=1, label=i, style=dashed];
n130 -> n134  [color=darkseagreen4, key=1, label=i, style=dashed];
n134 -> n134  [color=darkseagreen4, key=1, label=i, style=dashed];
n141 -> n146  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
n142 -> n145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n148 -> n153  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
n148 -> n154  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
n160 -> n163  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
n160 -> n164  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
n162 -> n165  [color=darkseagreen4, key=1, label=result, style=dashed];
n162 -> n166  [color=darkseagreen4, key=1, label=result, style=dashed];
n163 -> n165  [color=darkseagreen4, key=1, label=t, style=dashed];
n170 -> n172  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n170 -> n173  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n183 -> n185  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n183 -> n187  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n183 -> n189  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n195 -> n197  [color=darkseagreen4, key=1, label="System.Action<System.Collections.IList>", style=dashed];
n195 -> n201  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n195 -> n208  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n195 -> n220  [color=darkseagreen4, key=1, label="System.Action<System.Collections.IList>", style=dashed];
n195 -> n222  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n195 -> n224  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n198 -> n220  [color=darkseagreen4, key=1, label=list, style=dashed];
n198 -> n226  [color=darkseagreen4, key=1, label=list, style=dashed];
n200 -> n221  [color=darkseagreen4, key=1, label=isReadOnlyOrFixedSize, style=dashed];
n202 -> n220  [color=darkseagreen4, key=1, label=list, style=dashed];
n202 -> n226  [color=darkseagreen4, key=1, label=list, style=dashed];
n203 -> n221  [color=darkseagreen4, key=1, label=isReadOnlyOrFixedSize, style=dashed];
n206 -> n211  [color=darkseagreen4, key=1, label=genericEnumerable, style=dashed];
n215 -> n220  [color=darkseagreen4, key=1, label=list, style=dashed];
n215 -> n226  [color=darkseagreen4, key=1, label=list, style=dashed];
n207 -> n213  [color=darkseagreen4, key=1, label=suitableConstructor, style=dashed];
n209 -> n211  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n216 -> n221  [color=darkseagreen4, key=1, label=isReadOnlyOrFixedSize, style=dashed];
m0_6 -> m0_14  [color=darkseagreen4, key=1, label="System.DateTimeKind", style=dashed];
m2_2 -> m2_4  [color=green, key=1, label=json, style=dashed];
m2_3 -> m2_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m4_102 -> m4_346  [color=darkseagreen4, key=1, label=char, style=dashed];
m4_341 -> m4_348  [color=darkseagreen4, key=1, label=fields, style=dashed];
m4_341 -> m4_349  [color=darkseagreen4, key=1, label=fields, style=dashed];
m4_341 -> m4_355  [color=darkseagreen4, key=1, label=fields, style=dashed];
m4_341 -> m4_357  [color=darkseagreen4, key=1, label=fields, style=dashed];
m4_343 -> m4_349  [color=darkseagreen4, key=1, label=field, style=dashed];
m4_343 -> m4_357  [color=darkseagreen4, key=1, label=field, style=dashed];
m4_18 -> m4_22  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_21 -> m4_24  [color=darkseagreen4, key=1, label=dateText, style=dashed];
m4_21 -> m4_23  [color=darkseagreen4, key=1, label=dateText, style=dashed];
m4_103 -> m4_198  [color=darkseagreen4, key=1, label=char, style=dashed];
m4_204 -> m4_230  [color=darkseagreen4, key=1, label=rootExpression, style=dashed];
m4_204 -> m4_238  [color=darkseagreen4, key=1, label=rootExpression, style=dashed];
m4_204 -> m4_247  [color=darkseagreen4, key=1, label=rootExpression, style=dashed];
m4_205 -> m4_228  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m4_205 -> m4_229  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m4_205 -> m4_233  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m4_205 -> m4_235  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m4_205 -> m4_236  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m4_205 -> m4_240  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m4_205 -> m4_242  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m4_205 -> m4_244  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m4_205 -> m4_245  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m4_205 -> m4_249  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m4_226 -> m4_229  [color=darkseagreen4, key=1, label=booleanExpression, style=dashed];
m4_226 -> m4_231  [color=darkseagreen4, key=1, label=booleanExpression, style=dashed];
m4_226 -> m4_240  [color=darkseagreen4, key=1, label=booleanExpression, style=dashed];
m4_226 -> m4_249  [color=darkseagreen4, key=1, label=booleanExpression, style=dashed];
m4_234 -> m4_236  [color=darkseagreen4, key=1, label=andExpression, style=dashed];
m4_237 -> m4_240  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m4_237 -> m4_242  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m4_237 -> m4_244  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m4_237 -> m4_245  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m4_237 -> m4_249  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m4_239 -> m4_247  [color=darkseagreen4, key=1, label=rootExpression, style=dashed];
m4_243 -> m4_245  [color=darkseagreen4, key=1, label=orExpression, style=dashed];
m4_246 -> m4_249  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m4_0 -> m4_11  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m4_3 -> m4_6  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m4_3 -> m4_5  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m4_5 -> m4_5  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m4_256 -> m4_318  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_317 -> m4_319  [color=darkseagreen4, key=1, label=currentPosition, style=dashed];
m4_317 -> m4_320  [color=darkseagreen4, key=1, label=currentPosition, style=dashed];
m4_320 -> m4_320  [color=darkseagreen4, key=1, label=currentPosition, style=dashed];
m4_368 -> m4_370  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>", style=dashed];
m4_369 -> m4_372  [color=darkseagreen4, key=1, label=current, style=dashed];
m4_371 -> m4_372  [color=darkseagreen4, key=1, label=current, style=dashed];
m4_92 -> m4_96  [color=darkseagreen4, key=1, label=indexerCloseChar, style=dashed];
m4_92 -> m4_98  [color=darkseagreen4, key=1, label=indexerCloseChar, style=dashed];
m4_92 -> m4_99  [color=darkseagreen4, key=1, label=indexerCloseChar, style=dashed];
m4_258 -> m4_261  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_258 -> m4_263  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_258 -> m4_280  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_258 -> m4_283  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_258 -> m4_286  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_262 -> m4_278  [color=darkseagreen4, key=1, label=sb, style=dashed];
m4_268 -> m4_271  [color=darkseagreen4, key=1, label=numberText, style=dashed];
m4_268 -> m4_275  [color=darkseagreen4, key=1, label=numberText, style=dashed];
m4_266 -> m4_278  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_101 -> m4_363  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_27 -> m4_38  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_27 -> m4_41  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>", style=dashed];
m4_27 -> m4_43  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>", style=dashed];
m4_27 -> m4_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>", style=dashed];
m4_27 -> m4_69  [color=darkseagreen4, key=1, label=bool, style=dashed];
m4_27 -> m4_75  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_27 -> m4_80  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>", style=dashed];
m4_27 -> m4_81  [color=darkseagreen4, key=1, label=bool, style=dashed];
m4_31 -> m4_81  [color=darkseagreen4, key=1, label=followingDot, style=dashed];
m4_34 -> m4_43  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_34 -> m4_69  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_34 -> m4_72  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_74 -> m4_81  [color=darkseagreen4, key=1, label=atPathEnd, style=dashed];
m4_74 -> m4_83  [color=darkseagreen4, key=1, label=atPathEnd, style=dashed];
m4_35 -> m4_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IsoDateTimeConverter", style=dashed];
m4_35 -> m4_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IsoDateTimeConverter", style=dashed];
m4_35 -> m4_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IsoDateTimeConverter", style=dashed];
m4_35 -> m4_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IsoDateTimeConverter", style=dashed];
m4_45 -> m4_55  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_66 -> m4_75  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_67 -> m4_71  [color=darkseagreen4, key=1, label=followingIndexer, style=dashed];
m4_68 -> m4_81  [color=darkseagreen4, key=1, label=followingDot, style=dashed];
m4_298 -> m4_305  [color=darkseagreen4, key=1, label=sb, style=dashed];
m4_298 -> m4_307  [color=darkseagreen4, key=1, label=sb, style=dashed];
m4_298 -> m4_312  [color=darkseagreen4, key=1, label=sb, style=dashed];
m4_298 -> m4_314  [color=darkseagreen4, key=1, label=sb, style=dashed];
m4_301 -> m4_310  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_301 -> m4_314  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_104 -> m4_117  [color=darkseagreen4, key=1, label=char, style=dashed];
m4_104 -> m4_155  [color=darkseagreen4, key=1, label=char, style=dashed];
m4_106 -> m4_175  [color=darkseagreen4, key=1, label=end, style=dashed];
m4_118 -> m4_120  [color=darkseagreen4, key=1, label=length, style=dashed];
m4_118 -> m4_127  [color=darkseagreen4, key=1, label=length, style=dashed];
m4_118 -> m4_134  [color=darkseagreen4, key=1, label=length, style=dashed];
m4_107 -> m4_119  [color=darkseagreen4, key=1, label=indexes, style=dashed];
m4_107 -> m4_124  [color=darkseagreen4, key=1, label=indexes, style=dashed];
m4_107 -> m4_143  [color=darkseagreen4, key=1, label=indexes, style=dashed];
m4_107 -> m4_146  [color=darkseagreen4, key=1, label=indexes, style=dashed];
m4_108 -> m4_126  [color=darkseagreen4, key=1, label=colonCount, style=dashed];
m4_108 -> m4_130  [color=darkseagreen4, key=1, label=colonCount, style=dashed];
m4_108 -> m4_163  [color=darkseagreen4, key=1, label=colonCount, style=dashed];
m4_108 -> m4_165  [color=darkseagreen4, key=1, label=colonCount, style=dashed];
m4_108 -> m4_168  [color=darkseagreen4, key=1, label=colonCount, style=dashed];
m4_168 -> m4_168  [color=darkseagreen4, key=1, label=colonCount, style=dashed];
m4_113 -> m4_117  [color=darkseagreen4, key=1, label=currentCharacter, style=dashed];
m4_113 -> m4_139  [color=darkseagreen4, key=1, label=currentCharacter, style=dashed];
m4_113 -> m4_151  [color=darkseagreen4, key=1, label=currentCharacter, style=dashed];
m4_113 -> m4_156  [color=darkseagreen4, key=1, label=currentCharacter, style=dashed];
m4_113 -> m4_158  [color=darkseagreen4, key=1, label=currentCharacter, style=dashed];
m4_113 -> m4_173  [color=darkseagreen4, key=1, label=currentCharacter, style=dashed];
m4_113 -> m4_174  [color=darkseagreen4, key=1, label=currentCharacter, style=dashed];
m4_113 -> m4_176  [color=darkseagreen4, key=1, label=currentCharacter, style=dashed];
m4_115 -> m4_175  [color=darkseagreen4, key=1, label=end, style=dashed];
m4_144 -> m4_146  [color=darkseagreen4, key=1, label=indexes, style=dashed];
m4_375 -> m4_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_147  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_152  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_153  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_185  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_197  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_287  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_302  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_329  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m4_375 -> m4_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m5_40 -> m5_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_40 -> m5_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m5_2 -> m5_5  [color=darkseagreen4, key=1, label=schema, style=dashed];
m5_3 -> m5_5  [color=darkseagreen4, key=1, label=person, style=dashed];
m5_5 -> m5_7  [color=darkseagreen4, key=1, label=messages, style=dashed];
m5_11 -> m5_15  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_11 -> m5_17  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_11 -> m5_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_11 -> m5_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_19 -> m5_21  [color=darkseagreen4, key=1, label=a, style=dashed];
m5_49 -> m5_3  [color=green, key=1, label="Newtonsoft.Json.Linq.JArray", style=dashed];
m5_49 -> m5_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JArray", style=dashed];
m5_49 -> m5_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JArray", style=dashed];
m8_5 -> m8_7  [color=darkseagreen4, key=1, label=messages, style=dashed];
m9_42 -> m9_44  [color=green, key=1, label=ds, style=dashed];
m9_45 -> m9_47  [color=green, key=1, label=json, style=dashed];
m9_46 -> m9_48  [color=darkseagreen4, key=1, label=deserializedDs, style=dashed];
m9_121 -> m9_123  [color=darkseagreen4, key=1, label=ds, style=dashed];
m9_124 -> m9_128  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_124 -> m9_129  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_124 -> m9_130  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_124 -> m9_131  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_124 -> m9_132  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_127 -> m9_129  [color=darkseagreen4, key=1, label=c2, style=dashed];
m9_127 -> m9_130  [color=darkseagreen4, key=1, label=c2, style=dashed];
m9_127 -> m9_131  [color=darkseagreen4, key=1, label=c2, style=dashed];
m9_127 -> m9_132  [color=darkseagreen4, key=1, label=c2, style=dashed];
m9_55 -> m9_57  [color=darkseagreen4, key=1, label=ds, style=dashed];
m9_55 -> m9_58  [color=darkseagreen4, key=1, label=ds, style=dashed];
m9_55 -> m9_59  [color=darkseagreen4, key=1, label=ds, style=dashed];
m9_55 -> m9_73  [color=darkseagreen4, key=1, label=ds, style=dashed];
m9_55 -> m9_74  [color=darkseagreen4, key=1, label=ds, style=dashed];
m9_60 -> m9_62  [color=darkseagreen4, key=1, label=dt, style=dashed];
m9_60 -> m9_63  [color=darkseagreen4, key=1, label=dt, style=dashed];
m9_60 -> m9_64  [color=darkseagreen4, key=1, label=dt, style=dashed];
m9_60 -> m9_65  [color=darkseagreen4, key=1, label=dt, style=dashed];
m9_60 -> m9_66  [color=darkseagreen4, key=1, label=dt, style=dashed];
m9_60 -> m9_67  [color=darkseagreen4, key=1, label=dt, style=dashed];
m9_60 -> m9_68  [color=darkseagreen4, key=1, label=dt, style=dashed];
m9_60 -> m9_69  [color=darkseagreen4, key=1, label=dt, style=dashed];
m9_60 -> m9_70  [color=darkseagreen4, key=1, label=dt, style=dashed];
m9_60 -> m9_71  [color=darkseagreen4, key=1, label=dt, style=dashed];
m9_60 -> m9_72  [color=darkseagreen4, key=1, label=dt, style=dashed];
m9_112 -> m9_114  [color=darkseagreen4, key=1, label=ds, style=dashed];
m9_17 -> m9_19  [color=darkseagreen4, key=1, label=json, style=dashed];
m9_2 -> m9_9  [color=darkseagreen4, key=1, label=dataSet, style=dashed];
m9_2 -> m9_17  [color=darkseagreen4, key=1, label=dataSet, style=dashed];
m9_2 -> m9_16  [color=darkseagreen4, key=1, label=dataSet, style=dashed];
m9_3 -> m9_9  [color=darkseagreen4, key=1, label=table, style=dashed];
m9_3 -> m9_7  [color=darkseagreen4, key=1, label=table, style=dashed];
m9_3 -> m9_14  [color=darkseagreen4, key=1, label=table, style=dashed];
m9_3 -> m9_12  [color=darkseagreen4, key=1, label=table, style=dashed];
m9_10 -> m9_13  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_10 -> m9_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_5 -> m9_7  [color=darkseagreen4, key=1, label=idColumn, style=dashed];
m9_5 -> m9_5  [color=darkseagreen4, key=1, label=idColumn, style=dashed];
m9_12 -> m9_14  [color=darkseagreen4, key=1, label=newRow, style=dashed];
m9_15 -> m9_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_19 -> m9_21  [color=darkseagreen4, key=1, label=deserializedDataSet, style=dashed];
m9_21 -> m9_23  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_22 -> m9_25  [color=darkseagreen4, key=1, label=dt, style=dashed];
m9_22 -> m9_27  [color=darkseagreen4, key=1, label=dt, style=dashed];
m9_22 -> m9_29  [color=darkseagreen4, key=1, label=dt, style=dashed];
m9_50 -> m9_97  [color=darkseagreen4, key=1, label=int, style=dashed];
m9_76 -> m9_79  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m9_76 -> m9_82  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m9_76 -> m9_85  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m9_76 -> m9_88  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m9_76 -> m9_92  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m9_76 -> m9_95  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m9_76 -> m9_105  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m9_76 -> m9_107  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m9_98 -> m9_105  [color=darkseagreen4, key=1, label=myNewRow, style=dashed];
m9_96 -> m9_106  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_106 -> m9_106  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_136 -> m9_43  [color=green, key=1, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", style=dashed];
m9_136 -> m9_44  [color=green, key=1, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", style=dashed];
m9_136 -> m9_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", style=dashed];
m9_136 -> m9_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", style=dashed];
m9_136 -> m9_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", style=dashed];
m9_136 -> m9_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", style=dashed];
m10_0 -> m10_2  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_0 -> m10_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_0 -> m10_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_0 -> m10_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m10_5 -> m10_10  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m10_8 -> m10_10  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m10_19 -> m10_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m10_19 -> m10_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m10_19 -> m10_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m10_19 -> m10_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m10_19 -> m10_30  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_26 -> m10_31  [color=darkseagreen4, key=1, label=d, style=dashed];
m10_26 -> m10_32  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_11 -> m13_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m13_10 -> m13_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestFixtureBase", style=dashed];
m13_20 -> m13_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m13_30 -> m13_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JConstructor", style=dashed];
m13_30 -> m13_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JConstructor", style=dashed];
m13_30 -> m13_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JConstructor", style=dashed];
m13_30 -> m13_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JConstructor", style=dashed];
m16_2 -> m16_4  [color=green, key=1, label=json, style=dashed];
m17_11 -> m17_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m17_10 -> m17_12  [color=darkseagreen4, key=1, label="out T", style=dashed];
m17_22 -> m17_26  [color=green, key=1, label=fixedHex, style=dashed];
m17_25 -> m17_33  [color=green, key=1, label=offset, style=dashed];
m17_25 -> m17_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty", style=dashed];
m17_33 -> m17_33  [color=green, key=1, label=offset, style=dashed];
m17_23 -> m17_34  [color=green, key=1, label=bytes, style=dashed];
m17_40 -> m17_42  [color=darkseagreen4, key=1, label=bool, style=dashed];
m17_41 -> m17_44  [color=darkseagreen4, key=1, label=hex, style=dashed];
m17_15 -> m17_18  [color=green, key=1, label=object, style=dashed];
m17_47 -> m17_51  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m17_47 -> m17_52  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m17_50 -> m17_52  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_50 -> m17_54  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_54 -> m17_54  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_284 -> m21_286  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_29 -> m21_34  [color=darkseagreen4, key=1, label=currentPartStartIndex, style=dashed];
m21_29 -> m21_35  [color=darkseagreen4, key=1, label=currentPartStartIndex, style=dashed];
m21_179 -> m21_181  [color=green, key=1, label=bool, style=dashed];
m21_40 -> m21_43  [color=darkseagreen4, key=1, label=char, style=dashed];
m21_43 -> m21_51  [color=darkseagreen4, key=1, label=indexerCloseChar, style=dashed];
m21_43 -> m21_56  [color=darkseagreen4, key=1, label=indexerCloseChar, style=dashed];
m21_44 -> m21_59  [color=darkseagreen4, key=1, label=indexerStart, style=dashed];
m21_56 -> m21_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_45 -> m21_50  [color=darkseagreen4, key=1, label=indexerLength, style=dashed];
m21_45 -> m21_57  [color=darkseagreen4, key=1, label=indexerLength, style=dashed];
m21_45 -> m21_59  [color=darkseagreen4, key=1, label=indexerLength, style=dashed];
m21_45 -> m21_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m21_46 -> m21_55  [color=darkseagreen4, key=1, label=indexerClosed, style=dashed];
m21_50 -> m21_50  [color=darkseagreen4, key=1, label=indexerLength, style=dashed];
m21_50 -> m21_57  [color=darkseagreen4, key=1, label=indexerLength, style=dashed];
m21_50 -> m21_59  [color=darkseagreen4, key=1, label=indexerLength, style=dashed];
m21_48 -> m21_51  [color=darkseagreen4, key=1, label=currentCharacter, style=dashed];
m21_48 -> m21_53  [color=darkseagreen4, key=1, label=currentCharacter, style=dashed];
m21_192 -> m21_194  [color=darkseagreen4, key=1, label=char, style=dashed];
m21_63 -> m21_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_64 -> m21_72  [color=darkseagreen4, key=1, label=bool, style=dashed];
m21_64 -> m21_74  [color=darkseagreen4, key=1, label=bool, style=dashed];
m21_67 -> m21_73  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m21_67 -> m21_75  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m21_65 -> m21_75  [color=darkseagreen4, key=1, label=current, style=dashed];
m21_65 -> m21_79  [color=darkseagreen4, key=1, label=current, style=dashed];
m21_144 -> m21_146  [color=green, key=1, label=uint, style=dashed];
m21_162 -> m21_166  [color=green, key=1, label="float?", style=dashed];
m21_184 -> m21_186  [color=darkseagreen4, key=1, label=short, style=dashed];
m21_128 -> m21_132  [color=green, key=1, label=string, style=dashed];
m21_128 -> m21_130  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_239 -> m21_249  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m21_249 -> m21_249  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m21_277 -> m21_280  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_152 -> m21_154  [color=green, key=1, label=ulong, style=dashed];
m21_212 -> m21_221  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m21_173 -> m21_177  [color=green, key=1, label="double?", style=dashed];
m21_168 -> m21_170  [color=darkseagreen4, key=1, label=double, style=dashed];
m21_38 -> m21_41  [color=green, key=1, label=string, style=dashed];
m21_157 -> m21_159  [color=darkseagreen4, key=1, label=float, style=dashed];
m21_271 -> m21_275  [color=darkseagreen4, key=1, label="System.Uri", style=dashed];
m21_265 -> m21_267  [color=darkseagreen4, key=1, label=text, style=dashed];
m21_9 -> m21_16  [color=darkseagreen4, key=1, label=currentPartStartIndex, style=dashed];
m21_9 -> m21_17  [color=darkseagreen4, key=1, label=currentPartStartIndex, style=dashed];
m21_9 -> m21_34  [color=darkseagreen4, key=1, label=currentPartStartIndex, style=dashed];
m21_9 -> m21_35  [color=darkseagreen4, key=1, label=currentPartStartIndex, style=dashed];
m21_12 -> m21_19  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m21_12 -> m21_24  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m21_12 -> m21_32  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m21_20 -> m21_26  [color=darkseagreen4, key=1, label=currentPartStartIndex, style=dashed];
m21_105 -> m21_109  [color=green, key=1, label=object, style=dashed];
m21_105 -> m21_108  [color=darkseagreen4, key=1, label=object, style=dashed];
m21_256 -> m21_258  [color=darkseagreen4, key=1, label=text, style=dashed];
m21_139 -> m21_141  [color=green, key=1, label=int, style=dashed];
m21_201 -> m21_203  [color=darkseagreen4, key=1, label=sbyte, style=dashed];
m21_62 -> m21_135  [color=green, key=1, label=string, style=dashed];
m21_205 -> m21_207  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m21_148 -> m21_150  [color=green, key=1, label=long, style=dashed];
m21_156 -> m21_301  [color=darkseagreen4, key=1, label=ulong, style=dashed];
m21_305 -> m21_308  [color=darkseagreen4, key=1, label=length, style=dashed];
m21_143 -> m21_294  [color=darkseagreen4, key=1, label=long, style=dashed];
m21_143 -> m21_296  [color=darkseagreen4, key=1, label=long, style=dashed];
m21_295 -> m21_298  [color=darkseagreen4, key=1, label=uvalue, style=dashed];
m21_123 -> m21_125  [color=green, key=1, label=string, style=dashed];
m21_197 -> m21_199  [color=darkseagreen4, key=1, label=byte, style=dashed];
m21_100 -> m21_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_100 -> m21_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_100 -> m21_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_100 -> m21_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_100 -> m21_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_100 -> m21_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_100 -> m21_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_100 -> m21_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_100 -> m21_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_100 -> m21_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_100 -> m21_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_100 -> m21_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_100 -> m21_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_100 -> m21_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_100 -> m21_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_100 -> m21_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_100 -> m21_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_100 -> m21_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_100 -> m21_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_100 -> m21_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_100 -> m21_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_100 -> m21_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPath", style=dashed];
m21_228 -> m21_233  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m21_188 -> m21_190  [color=darkseagreen4, key=1, label=ushort, style=dashed];
m21_311 -> m21_7  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_8  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_19  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_35  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_36  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_39  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_41  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_40  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_42  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_103  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_109  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_107  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_116  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_120  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_121  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_124  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_125  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_129  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_132  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_134  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_135  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_140  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_141  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_145  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_146  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_150  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_154  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_166  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_177  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_175  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_176  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_180  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_181  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_193  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_241  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_242  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_250  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_289  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_72  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_131  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_149  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_153  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_185  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_275  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_280  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_294  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_302  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m21_311 -> m21_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m22_54 -> m22_64  [color=green, key=1, label=jsonWriter, style=dashed];
m22_54 -> m22_65  [color=green, key=1, label=jsonWriter, style=dashed];
m22_54 -> m22_66  [color=green, key=1, label=jsonWriter, style=dashed];
m22_54 -> m22_67  [color=green, key=1, label=jsonWriter, style=dashed];
m22_54 -> m22_68  [color=green, key=1, label=jsonWriter, style=dashed];
m22_54 -> m22_69  [color=green, key=1, label=jsonWriter, style=dashed];
m22_54 -> m22_70  [color=green, key=1, label=jsonWriter, style=dashed];
m22_54 -> m22_71  [color=green, key=1, label=jsonWriter, style=dashed];
m22_54 -> m22_74  [color=green, key=1, label=jsonWriter, style=dashed];
m22_54 -> m22_75  [color=green, key=1, label=jsonWriter, style=dashed];
m22_54 -> m22_56  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_54 -> m22_57  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_54 -> m22_58  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_54 -> m22_59  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_54 -> m22_60  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_54 -> m22_61  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_54 -> m22_62  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_54 -> m22_63  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_41 -> m22_43  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_41 -> m22_44  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_41 -> m22_45  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_191 -> m22_193  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_191 -> m22_194  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_191 -> m22_195  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_196 -> m22_198  [color=darkseagreen4, key=1, label=json, style=dashed];
m22_192 -> m22_194  [color=darkseagreen4, key=1, label=value, style=dashed];
m22_277 -> m22_279  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_277 -> m22_280  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_277 -> m22_281  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_277 -> m22_282  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_277 -> m22_283  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_277 -> m22_284  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_277 -> m22_285  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_277 -> m22_286  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_277 -> m22_287  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_277 -> m22_288  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_277 -> m22_289  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_277 -> m22_290  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_277 -> m22_291  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_277 -> m22_292  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_293 -> m22_295  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_743 -> m22_745  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_744 -> m22_749  [color=darkseagreen4, key=1, label=script, style=dashed];
m22_979 -> m22_1037  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ConvertibleInt", style=dashed];
m22_531 -> m22_546  [color=darkseagreen4, key=1, label=sb, style=dashed];
m22_531 -> m22_547  [color=darkseagreen4, key=1, label=sb, style=dashed];
m22_533 -> m22_535  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_533 -> m22_536  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_533 -> m22_537  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_533 -> m22_538  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_533 -> m22_539  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_533 -> m22_540  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_533 -> m22_541  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_533 -> m22_542  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_533 -> m22_543  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_533 -> m22_544  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_533 -> m22_545  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_39 -> m22_46  [color=darkseagreen4, key=1, label=ms, style=dashed];
m22_87 -> m22_89  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_90  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_91  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_92  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_93  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_94  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_95  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_96  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_97  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_98  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_99  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_100  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_101  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_102  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_103  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_104  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_105  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_107  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_108  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_109  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_110  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_111  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_112  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_113  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_114  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_115  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_116  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_117  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_118  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_119  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_120  [color=green, key=1, label=jsonWriter, style=dashed];
m22_87 -> m22_121  [color=green, key=1, label=jsonWriter, style=dashed];
m22_88 -> m22_91  [color=darkseagreen4, key=1, label=sw, style=dashed];
m22_808 -> m22_818  [color=darkseagreen4, key=1, label=sw, style=dashed];
m22_809 -> m22_814  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_809 -> m22_815  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_809 -> m22_816  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_809 -> m22_817  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_165 -> m22_167  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_166 -> m22_169  [color=darkseagreen4, key=1, label=json, style=dashed];
m22_378 -> m22_381  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_378 -> m22_382  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_378 -> m22_383  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_378 -> m22_384  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_378 -> m22_385  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_378 -> m22_386  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_378 -> m22_387  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_378 -> m22_388  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_378 -> m22_389  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_390 -> m22_392  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_215 -> m22_217  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_215 -> m22_218  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_215 -> m22_219  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_215 -> m22_220  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_215 -> m22_221  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_222 -> m22_224  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_452 -> m22_454  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_452 -> m22_455  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_452 -> m22_456  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_457 -> m22_459  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_822 -> m22_825  [color=darkseagreen4, key=1, label=c, style=dashed];
m22_822 -> m22_827  [color=darkseagreen4, key=1, label=c, style=dashed];
m22_822 -> m22_831  [color=darkseagreen4, key=1, label=c, style=dashed];
m22_822 -> m22_832  [color=darkseagreen4, key=1, label=c, style=dashed];
m22_823 -> m22_825  [color=darkseagreen4, key=1, label=swNew, style=dashed];
m22_825 -> m22_825  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m22_832 -> m22_832  [color=darkseagreen4, key=1, label=c, style=dashed];
m22_828 -> m22_830  [color=darkseagreen4, key=1, label=newText, style=dashed];
m22_828 -> m22_831  [color=darkseagreen4, key=1, label=newText, style=dashed];
m22_829 -> m22_831  [color=darkseagreen4, key=1, label=oldText, style=dashed];
m22_137 -> m22_139  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_137 -> m22_140  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_137 -> m22_141  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_137 -> m22_144  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_141 -> m22_143  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_133 -> m22_135  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_136  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_137  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_138  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_139  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_140  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_141  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_142  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_143  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_144  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_145  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_146  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_148  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_149  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_150  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_151  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_152  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_153  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_154  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_155  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_157  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_158  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_159  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_160  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_161  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_162  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_163  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_164  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_133 -> m22_165  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_147 -> m22_149  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_147 -> m22_150  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_147 -> m22_151  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_147 -> m22_152  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_156 -> m22_158  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_156 -> m22_159  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_156 -> m22_160  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_156 -> m22_161  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_656 -> m22_658  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_656 -> m22_659  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_656 -> m22_660  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_656 -> m22_661  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_656 -> m22_662  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_656 -> m22_663  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_656 -> m22_664  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_656 -> m22_665  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_655 -> m22_660  [color=darkseagreen4, key=1, label=data, style=dashed];
m22_655 -> m22_661  [color=darkseagreen4, key=1, label=data, style=dashed];
m22_655 -> m22_662  [color=darkseagreen4, key=1, label=data, style=dashed];
m22_666 -> m22_668  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_605 -> m22_608  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_605 -> m22_610  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_605 -> m22_612  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_605 -> m22_614  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_605 -> m22_616  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_605 -> m22_617  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_605 -> m22_618  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_605 -> m22_619  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_605 -> m22_621  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_605 -> m22_623  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_605 -> m22_624  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_605 -> m22_625  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_605 -> m22_626  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_627 -> m22_629  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_397 -> m22_401  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_397 -> m22_402  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_397 -> m22_403  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_397 -> m22_404  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_397 -> m22_405  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_397 -> m22_406  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_397 -> m22_407  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_397 -> m22_408  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_397 -> m22_409  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_410 -> m22_412  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_837 -> m22_841  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m22_837 -> m22_842  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_837 -> m22_847  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_837 -> m22_849  [color=darkseagreen4, key=1, label=char, style=dashed];
m22_837 -> m22_884  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m22_837 -> m22_887  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m22_837 -> m22_888  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m22_837 -> m22_891  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m22_837 -> m22_894  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m22_837 -> m22_895  [color=darkseagreen4, key=1, label=bool, style=dashed];
m22_837 -> m22_896  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m22_848 -> m22_851  [color=darkseagreen4, key=1, label=c, style=dashed];
m22_848 -> m22_874  [color=darkseagreen4, key=1, label=c, style=dashed];
m22_848 -> m22_877  [color=darkseagreen4, key=1, label=c, style=dashed];
m22_883 -> m22_892  [color=darkseagreen4, key=1, label=chars, style=dashed];
m22_883 -> m22_894  [color=darkseagreen4, key=1, label=chars, style=dashed];
m22_843 -> m22_882  [color=darkseagreen4, key=1, label=chars, style=dashed];
m22_843 -> m22_884  [color=darkseagreen4, key=1, label=chars, style=dashed];
m22_843 -> m22_892  [color=darkseagreen4, key=1, label=chars, style=dashed];
m22_843 -> m22_894  [color=darkseagreen4, key=1, label=chars, style=dashed];
m22_844 -> m22_875  [color=darkseagreen4, key=1, label=unicodeBuffer, style=dashed];
m22_844 -> m22_877  [color=darkseagreen4, key=1, label=unicodeBuffer, style=dashed];
m22_844 -> m22_888  [color=darkseagreen4, key=1, label=unicodeBuffer, style=dashed];
m22_845 -> m22_881  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m22_845 -> m22_884  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m22_845 -> m22_890  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m22_845 -> m22_894  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m22_846 -> m22_881  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_846 -> m22_884  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_846 -> m22_889  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_885 -> m22_890  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m22_885 -> m22_894  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m22_889 -> m22_889  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_879 -> m22_886  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m22_879 -> m22_887  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m22_876 -> m22_888  [color=darkseagreen4, key=1, label=unicodeBuffer, style=dashed];
m22_878 -> m22_886  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m22_878 -> m22_887  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m22_330 -> m22_333  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_330 -> m22_334  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_330 -> m22_335  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_330 -> m22_336  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_330 -> m22_337  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_330 -> m22_338  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_330 -> m22_339  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_330 -> m22_340  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_330 -> m22_341  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_342 -> m22_344  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_770 -> m22_776  [color=darkseagreen4, key=1, label=sw, style=dashed];
m22_771 -> m22_773  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_771 -> m22_774  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_771 -> m22_775  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_952 -> m22_956  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_57 -> m22_65  [color=darkseagreen4, key=1, label=sb, style=dashed];
m22_59 -> m22_61  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_59 -> m22_62  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_59 -> m22_63  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_59 -> m22_64  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_78 -> m22_80  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_507 -> m22_528  [color=darkseagreen4, key=1, label=sb, style=dashed];
m22_509 -> m22_511  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_509 -> m22_512  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_509 -> m22_513  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_509 -> m22_514  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_509 -> m22_515  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_509 -> m22_516  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_509 -> m22_517  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_509 -> m22_518  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_509 -> m22_519  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_509 -> m22_520  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_509 -> m22_521  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_509 -> m22_522  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_509 -> m22_523  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_509 -> m22_524  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_509 -> m22_525  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_509 -> m22_526  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_509 -> m22_527  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_973 -> m22_976  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m22_925 -> m22_930  [color=darkseagreen4, key=1, label=d, style=dashed];
m22_927 -> m22_930  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m22_928 -> m22_932  [color=darkseagreen4, key=1, label=stringWriter, style=dashed];
m22_929 -> m22_931  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_593 -> m22_595  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_206 -> m22_208  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_206 -> m22_209  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_586 -> m22_588  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_586 -> m22_589  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_586 -> m22_590  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_127 -> m22_129  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_127 -> m22_130  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_127 -> m22_131  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_351 -> m22_354  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_351 -> m22_355  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_351 -> m22_356  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_351 -> m22_357  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_351 -> m22_358  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_351 -> m22_359  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_351 -> m22_360  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_351 -> m22_361  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_351 -> m22_362  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_351 -> m22_363  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_351 -> m22_364  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_351 -> m22_365  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_351 -> m22_366  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_351 -> m22_367  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_351 -> m22_368  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_369 -> m22_371  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_436 -> m22_439  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_436 -> m22_440  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_436 -> m22_441  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_436 -> m22_442  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_436 -> m22_443  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_436 -> m22_444  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_445 -> m22_447  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_255 -> m22_257  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_255 -> m22_258  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_255 -> m22_259  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_255 -> m22_260  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_255 -> m22_261  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_255 -> m22_262  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_255 -> m22_263  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_255 -> m22_264  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_255 -> m22_265  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_255 -> m22_266  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_255 -> m22_267  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_255 -> m22_268  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_269 -> m22_271  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_77 -> m22_79  [color=darkseagreen4, key=1, label=ms, style=dashed];
m22_77 -> m22_81  [color=darkseagreen4, key=1, label=ms, style=dashed];
m22_779 -> m22_797  [color=darkseagreen4, key=1, label=sw, style=dashed];
m22_780 -> m22_783  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_780 -> m22_784  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_780 -> m22_785  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_780 -> m22_787  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_780 -> m22_788  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_780 -> m22_790  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_780 -> m22_791  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_780 -> m22_792  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_780 -> m22_793  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_780 -> m22_794  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_780 -> m22_795  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_780 -> m22_796  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_419 -> m22_422  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_419 -> m22_423  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_419 -> m22_424  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_419 -> m22_425  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_419 -> m22_426  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_427 -> m22_429  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_98 -> m22_117  [color=darkseagreen4, key=1, label=sb, style=dashed];
m22_100 -> m22_102  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_100 -> m22_103  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_100 -> m22_104  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_100 -> m22_105  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_100 -> m22_107  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_100 -> m22_108  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_100 -> m22_109  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_100 -> m22_110  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_100 -> m22_111  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_100 -> m22_112  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_100 -> m22_113  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_100 -> m22_114  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_100 -> m22_115  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_106 -> m22_109  [color=darkseagreen4, key=1, label=a, style=dashed];
m22_106 -> m22_112  [color=darkseagreen4, key=1, label=a, style=dashed];
m22_106 -> m22_115  [color=darkseagreen4, key=1, label=a, style=dashed];
m22_106 -> m22_118  [color=darkseagreen4, key=1, label=a, style=dashed];
m22_116 -> m22_118  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_301 -> m22_303  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_304  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_305  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_306  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_307  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_308  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_309  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_310  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_311  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_312  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_313  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_314  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_315  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_316  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_317  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_318  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_319  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_320  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_321  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_322  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_323  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_324  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_301 -> m22_325  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_569 -> m22_571  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_569 -> m22_575  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_569 -> m22_572  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_569 -> m22_578  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_571 -> m22_574  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_572 -> m22_577  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_1 -> m22_9  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m22_1 -> m22_21  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m22_1 -> m22_23  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m22_1 -> m22_24  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m22_1 -> m22_34  [color=darkseagreen4, key=1, label=data, style=dashed];
m22_1 -> m22_17  [color=darkseagreen4, key=1, label=data, style=dashed];
m22_2 -> m22_14  [color=darkseagreen4, key=1, label=longString, style=dashed];
m22_3 -> m22_16  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_3 -> m22_5  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_3 -> m22_6  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_3 -> m22_7  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_3 -> m22_8  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_3 -> m22_9  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_3 -> m22_10  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_3 -> m22_11  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_3 -> m22_12  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_3 -> m22_13  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_3 -> m22_14  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_3 -> m22_15  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_3 -> m22_17  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_3 -> m22_18  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_4 -> m22_18  [color=darkseagreen4, key=1, label=longerEscapedString, style=dashed];
m22_5 -> m22_20  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_5 -> m22_22  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_22 -> m22_22  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_8 -> m22_10  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_8 -> m22_11  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_8 -> m22_12  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_8 -> m22_13  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_8 -> m22_14  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_8 -> m22_15  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_8 -> m22_16  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_8 -> m22_17  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_8 -> m22_18  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_19 -> m22_34  [color=darkseagreen4, key=1, label=root, style=dashed];
m22_19 -> m22_21  [color=darkseagreen4, key=1, label=root, style=dashed];
m22_19 -> m22_22  [color=darkseagreen4, key=1, label=root, style=dashed];
m22_19 -> m22_23  [color=darkseagreen4, key=1, label=root, style=dashed];
m22_19 -> m22_24  [color=darkseagreen4, key=1, label=root, style=dashed];
m22_19 -> m22_25  [color=darkseagreen4, key=1, label=root, style=dashed];
m22_19 -> m22_26  [color=darkseagreen4, key=1, label=root, style=dashed];
m22_19 -> m22_27  [color=darkseagreen4, key=1, label=root, style=dashed];
m22_19 -> m22_28  [color=darkseagreen4, key=1, label=root, style=dashed];
m22_19 -> m22_29  [color=darkseagreen4, key=1, label=root, style=dashed];
m22_19 -> m22_30  [color=darkseagreen4, key=1, label=root, style=dashed];
m22_19 -> m22_31  [color=darkseagreen4, key=1, label=root, style=dashed];
m22_19 -> m22_32  [color=darkseagreen4, key=1, label=root, style=dashed];
m22_19 -> m22_33  [color=darkseagreen4, key=1, label=root, style=dashed];
m22_736 -> m22_739  [color=darkseagreen4, key=1, label=sw, style=dashed];
m22_635 -> m22_645  [color=darkseagreen4, key=1, label=text, style=dashed];
m22_637 -> m22_639  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_637 -> m22_640  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_636 -> m22_640  [color=darkseagreen4, key=1, label=data, style=dashed];
m22_641 -> m22_643  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_93 -> m22_96  [color=green, key=1, label=o, style=dashed];
m22_93 -> m22_99  [color=green, key=1, label=o, style=dashed];
m22_93 -> m22_102  [color=green, key=1, label=o, style=dashed];
m22_93 -> m22_105  [color=green, key=1, label=o, style=dashed];
m22_93 -> m22_121  [color=green, key=1, label=o, style=dashed];
m22_719 -> m22_731  [color=darkseagreen4, key=1, label=stateArray, style=dashed];
m22_720 -> m22_731  [color=darkseagreen4, key=1, label=valueStates, style=dashed];
m22_721 -> m22_731  [color=darkseagreen4, key=1, label=valueToken, style=dashed];
m22_906 -> m22_917  [color=darkseagreen4, key=1, label=sw, style=dashed];
m22_907 -> m22_909  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_907 -> m22_910  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_907 -> m22_911  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_907 -> m22_912  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_907 -> m22_913  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_907 -> m22_914  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_907 -> m22_915  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_907 -> m22_916  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_72 -> m22_74  [color=darkseagreen4, key=1, label=ms, style=dashed];
m22_72 -> m22_76  [color=darkseagreen4, key=1, label=ms, style=dashed];
m22_73 -> m22_75  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_940 -> m22_944  [color=darkseagreen4, key=1, label=r, style=dashed];
m22_941 -> m22_945  [color=darkseagreen4, key=1, label=sw, style=dashed];
m22_942 -> m22_944  [color=darkseagreen4, key=1, label=w, style=dashed];
m22_475 -> m22_486  [color=darkseagreen4, key=1, label=sb, style=dashed];
m22_477 -> m22_480  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_477 -> m22_482  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_477 -> m22_483  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_477 -> m22_485  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_478 -> m22_481  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_478 -> m22_482  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_478 -> m22_484  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_479 -> m22_483  [color=darkseagreen4, key=1, label=rawJson, style=dashed];
m22_484 -> m22_484  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_1021 -> m22_1024  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m22_754 -> m22_756  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_757 -> m22_759  [color=darkseagreen4, key=1, label=json, style=dashed];
m22_755 -> m22_761  [color=darkseagreen4, key=1, label=unicode, style=dashed];
m22_755 -> m22_764  [color=darkseagreen4, key=1, label=unicode, style=dashed];
m22_765 -> m22_767  [color=darkseagreen4, key=1, label=json, style=dashed];
m22_462 -> m22_464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m22_462 -> m22_467  [color=darkseagreen4, key=1, label=reader, style=dashed];
m22_465 -> m22_468  [color=darkseagreen4, key=1, label=sw, style=dashed];
m22_201 -> m22_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_552 -> m22_562  [color=darkseagreen4, key=1, label=sb, style=dashed];
m22_554 -> m22_556  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_554 -> m22_557  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_554 -> m22_558  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_554 -> m22_559  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_554 -> m22_560  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_554 -> m22_561  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_581 -> m22_583  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_672 -> m22_714  [color=darkseagreen4, key=1, label=sb, style=dashed];
m22_676 -> m22_678  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_679  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_680  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_681  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_682  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_683  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_684  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_685  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_686  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_687  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_688  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_689  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_690  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_691  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_692  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_693  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_694  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_695  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_696  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_697  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_698  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_699  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_700  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_701  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_702  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_703  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_704  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_705  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_706  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_707  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_708  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_709  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_710  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_711  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_712  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_676 -> m22_713  [color=darkseagreen4, key=1, label=writer, style=dashed];
m22_229 -> m22_231  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_229 -> m22_232  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_229 -> m22_233  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_229 -> m22_234  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_229 -> m22_235  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_229 -> m22_236  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_229 -> m22_237  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_229 -> m22_238  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_229 -> m22_239  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_229 -> m22_240  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_229 -> m22_241  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_229 -> m22_242  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_229 -> m22_243  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_244 -> m22_246  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_490 -> m22_502  [color=darkseagreen4, key=1, label=sb, style=dashed];
m22_492 -> m22_494  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_492 -> m22_495  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_492 -> m22_496  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_492 -> m22_497  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_492 -> m22_498  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_492 -> m22_499  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_492 -> m22_500  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_492 -> m22_501  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_1035 -> m22_575  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_1035 -> m22_578  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m22_1036 -> m22_950  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m22_1036 -> m22_953  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m22_1036 -> m22_954  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m22_1036 -> m22_955  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m22_1036 -> m22_956  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m22_1036 -> m22_957  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m22_1036 -> m22_958  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m22_1036 -> m22_959  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m22_1036 -> m22_965  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m22_1036 -> m22_966  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m22_1036 -> m22_968  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m22_1036 -> m22_969  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m22_1036 -> m22_971  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m22_1036 -> m22_975  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m22_1036 -> m22_976  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m22_1038 -> m22_1023  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ConvertibleInt", style=dashed];
m24_9 -> m24_12  [color=green, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m24_16 -> m24_18  [color=green, key=1, label=value, style=dashed];
m24_332 -> m24_335  [color=darkseagreen4, key=1, label="ulong?", style=dashed];
m24_128 -> m24_266  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_387 -> m24_390  [color=darkseagreen4, key=1, label="System.DateTimeOffset?", style=dashed];
m24_352 -> m24_355  [color=darkseagreen4, key=1, label="short?", style=dashed];
m24_503 -> m24_505  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_184 -> m24_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m24_174 -> m24_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m24_37 -> m24_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m24_205 -> m24_209  [color=darkseagreen4, key=1, label=token, style=dashed];
m24_211 -> m24_221  [color=darkseagreen4, key=1, label=currentLevelType, style=dashed];
m24_194 -> m24_201  [color=darkseagreen4, key=1, label=levelsToComplete, style=dashed];
m24_194 -> m24_204  [color=darkseagreen4, key=1, label=levelsToComplete, style=dashed];
m24_195 -> m24_200  [color=darkseagreen4, key=1, label=i, style=dashed];
m24_200 -> m24_200  [color=darkseagreen4, key=1, label=i, style=dashed];
m24_199 -> m24_204  [color=darkseagreen4, key=1, label=levelsToComplete, style=dashed];
m24_210 -> m24_210  [color=darkseagreen4, key=1, label=i, style=dashed];
m24_203 -> m24_210  [color=darkseagreen4, key=1, label=i, style=dashed];
m24_71 -> m24_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_71 -> m24_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_71 -> m24_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_71 -> m24_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_71 -> m24_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_71 -> m24_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_71 -> m24_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_71 -> m24_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_71 -> m24_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_71 -> m24_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_71 -> m24_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_71 -> m24_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_71 -> m24_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_59 -> m24_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_59 -> m24_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_59 -> m24_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_367 -> m24_370  [color=darkseagreen4, key=1, label="byte?", style=dashed];
m24_377 -> m24_380  [color=darkseagreen4, key=1, label="decimal?", style=dashed];
m24_347 -> m24_350  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m24_327 -> m24_330  [color=darkseagreen4, key=1, label="long?", style=dashed];
m24_337 -> m24_340  [color=darkseagreen4, key=1, label="float?", style=dashed];
m24_362 -> m24_365  [color=darkseagreen4, key=1, label="char?", style=dashed];
m24_317 -> m24_320  [color=darkseagreen4, key=1, label="int?", style=dashed];
m24_357 -> m24_360  [color=darkseagreen4, key=1, label="ushort?", style=dashed];
m24_382 -> m24_385  [color=darkseagreen4, key=1, label="System.DateTime?", style=dashed];
m24_397 -> m24_400  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m24_392 -> m24_395  [color=darkseagreen4, key=1, label="System.Guid?", style=dashed];
m24_342 -> m24_345  [color=darkseagreen4, key=1, label="double?", style=dashed];
m24_116 -> m24_135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_116 -> m24_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_116 -> m24_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_116 -> m24_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_116 -> m24_142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_138 -> m24_143  [color=darkseagreen4, key=1, label=date, style=dashed];
m24_322 -> m24_325  [color=darkseagreen4, key=1, label="uint?", style=dashed];
m24_33 -> m24_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m24_33 -> m24_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m24_33 -> m24_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m24_33 -> m24_253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m24_58 -> m24_168  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m24_411 -> m24_467  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_411 -> m24_470  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_411 -> m24_473  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_411 -> m24_476  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_411 -> m24_479  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_411 -> m24_415  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_411 -> m24_466  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_411 -> m24_469  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_411 -> m24_472  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_411 -> m24_475  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_411 -> m24_478  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_411 -> m24_481  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_416 -> m24_419  [color=darkseagreen4, key=1, label=convertible, style=dashed];
m24_416 -> m24_422  [color=darkseagreen4, key=1, label=convertible, style=dashed];
m24_416 -> m24_425  [color=darkseagreen4, key=1, label=convertible, style=dashed];
m24_416 -> m24_428  [color=darkseagreen4, key=1, label=convertible, style=dashed];
m24_416 -> m24_431  [color=darkseagreen4, key=1, label=convertible, style=dashed];
m24_416 -> m24_434  [color=darkseagreen4, key=1, label=convertible, style=dashed];
m24_416 -> m24_437  [color=darkseagreen4, key=1, label=convertible, style=dashed];
m24_416 -> m24_440  [color=darkseagreen4, key=1, label=convertible, style=dashed];
m24_416 -> m24_443  [color=darkseagreen4, key=1, label=convertible, style=dashed];
m24_416 -> m24_446  [color=darkseagreen4, key=1, label=convertible, style=dashed];
m24_416 -> m24_449  [color=darkseagreen4, key=1, label=convertible, style=dashed];
m24_416 -> m24_452  [color=darkseagreen4, key=1, label=convertible, style=dashed];
m24_416 -> m24_455  [color=darkseagreen4, key=1, label=convertible, style=dashed];
m24_416 -> m24_458  [color=darkseagreen4, key=1, label=convertible, style=dashed];
m24_416 -> m24_461  [color=darkseagreen4, key=1, label=convertible, style=dashed];
m24_372 -> m24_375  [color=darkseagreen4, key=1, label="sbyte?", style=dashed];
m24_516 -> m24_2  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_10  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_12  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_11  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_17  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_21  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_26  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_30  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_31  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_35  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_39  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_40  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_43  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_46  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_47  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_50  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_53  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_56  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_143  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_163  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_172  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_282  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_289  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_329  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_369  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_380  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_390  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_422  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_428  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_431  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_449  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_452  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_455  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_461  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_467  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_470  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_473  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_476  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_501  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_513  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m24_516 -> m24_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m26_458 -> m26_469  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Reflection.MemberInfo>", style=dashed];
m26_463 -> m26_465  [color=darkseagreen4, key=1, label=nonPublicBindingAttr, style=dashed];
m26_467 -> m26_474  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_466 -> m26_469  [color=darkseagreen4, key=1, label=nonPublicProperty, style=dashed];
m26_466 -> m26_475  [color=darkseagreen4, key=1, label=nonPublicProperty, style=dashed];
m26_154 -> m26_157  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_154 -> m26_159  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_154 -> m26_164  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_154 -> m26_168  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_165 -> m26_169  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m26_161 -> m26_169  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m26_162 -> m26_169  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m26_166 -> m26_169  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m26_251 -> m26_255  [color=darkseagreen4, key=1, label=bool, style=dashed];
m26_251 -> m26_264  [color=darkseagreen4, key=1, label=bool, style=dashed];
m26_251 -> m26_266  [color=darkseagreen4, key=1, label=bool, style=dashed];
m26_254 -> m26_257  [color=darkseagreen4, key=1, label=fieldInfo, style=dashed];
m26_261 -> m26_266  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m26_380 -> m26_383  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_69 -> m26_71  [color=green, key=1, label="System.Type", style=dashed];
m26_395 -> m26_397  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_395 -> m26_398  [color=darkseagreen4, key=1, label=object, style=dashed];
m26_137 -> m26_140  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_137 -> m26_141  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_137 -> m26_142  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_137 -> m26_144  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_137 -> m26_146  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_137 -> m26_148  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_142 -> m26_145  [color=darkseagreen4, key=1, label=genericListType, style=dashed];
m26_16 -> m26_18  [color=green, key=1, label="System.Type", style=dashed];
m26_16 -> m26_20  [color=green, key=1, label="System.Type", style=dashed];
m26_294 -> m26_296  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_294 -> m26_297  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_294 -> m26_327  [color=darkseagreen4, key=1, label="System.Reflection.BindingFlags", style=dashed];
m26_295 -> m26_297  [color=darkseagreen4, key=1, label=targetMembers, style=dashed];
m26_303 -> m26_326  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_298 -> m26_302  [color=darkseagreen4, key=1, label=distinctMembers, style=dashed];
m26_298 -> m26_304  [color=darkseagreen4, key=1, label=distinctMembers, style=dashed];
m26_298 -> m26_305  [color=darkseagreen4, key=1, label=distinctMembers, style=dashed];
m26_299 -> m26_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_299 -> m26_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_300 -> m26_302  [color=darkseagreen4, key=1, label=groupedMember, style=dashed];
m26_38 -> m26_40  [color=green, key=1, label="System.Type", style=dashed];
m26_110 -> m26_112  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_182 -> m26_188  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m26_182 -> m26_189  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m26_182 -> m26_194  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m26_184 -> m26_192  [color=darkseagreen4, key=1, label=elementType, style=dashed];
m26_184 -> m26_199  [color=darkseagreen4, key=1, label=elementType, style=dashed];
m26_186 -> m26_189  [color=darkseagreen4, key=1, label=unitializedValue, style=dashed];
m26_187 -> m26_189  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_187 -> m26_191  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_191 -> m26_191  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_193 -> m26_198  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_198 -> m26_198  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_270 -> m26_276  [color=darkseagreen4, key=1, label=bool, style=dashed];
m26_270 -> m26_285  [color=darkseagreen4, key=1, label=bool, style=dashed];
m26_270 -> m26_287  [color=darkseagreen4, key=1, label=bool, style=dashed];
m26_273 -> m26_278  [color=darkseagreen4, key=1, label=fieldInfo, style=dashed];
m26_282 -> m26_287  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m26_409 -> m26_413  [color=darkseagreen4, key=1, label="out string", style=dashed];
m26_411 -> m26_413  [color=darkseagreen4, key=1, label="out string", style=dashed];
m26_220 -> m26_222  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m26_382 -> m26_390  [color=darkseagreen4, key=1, label="System.Func<System.Type, System.Collections.Generic.IList<object>, object>", style=dashed];
m26_382 -> m26_389  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Type>", style=dashed];
m26_382 -> m26_392  [color=darkseagreen4, key=1, label="System.Func<System.Type, System.Collections.Generic.IList<object>, object>", style=dashed];
m26_414 -> m26_419  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_417 -> m26_423  [color=darkseagreen4, key=1, label=scope, style=dashed];
m26_418 -> m26_428  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_418 -> m26_429  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_423 -> m26_423  [color=darkseagreen4, key=1, label=scope, style=dashed];
m26_423 -> m26_425  [color=darkseagreen4, key=1, label=scope, style=dashed];
m26_429 -> m26_429  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_425 -> m26_427  [color=darkseagreen4, key=1, label=scope, style=dashed];
m26_425 -> m26_425  [color=darkseagreen4, key=1, label=scope, style=dashed];
m26_22 -> m26_27  [color=green, key=1, label=bool, style=dashed];
m26_22 -> m26_29  [color=green, key=1, label="System.Type", style=dashed];
m26_26 -> m26_29  [color=green, key=1, label=accessModifier, style=dashed];
m26_215 -> m26_217  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m26_43 -> m26_47  [color=green, key=1, label=object, style=dashed];
m26_308 -> m26_434  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_433 -> m26_435  [color=darkseagreen4, key=1, label=fieldInfos, style=dashed];
m26_356 -> m26_359  [color=darkseagreen4, key=1, label="System.Reflection.ICustomAttributeProvider", style=dashed];
m26_63 -> m26_65  [color=green, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m26_126 -> m26_129  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_126 -> m26_132  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_126 -> m26_135  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_119 -> m26_121  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_119 -> m26_122  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_119 -> m26_123  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_119 -> m26_124  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_32 -> m26_34  [color=green, key=1, label="System.Type", style=dashed];
m26_32 -> m26_35  [color=green, key=1, label="System.Type", style=dashed];
m26_387 -> m26_403  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_73 -> m26_75  [color=green, key=1, label="System.Type", style=dashed];
m26_73 -> m26_76  [color=green, key=1, label="System.Type", style=dashed];
m26_73 -> m26_77  [color=green, key=1, label="System.Type", style=dashed];
m26_73 -> m26_78  [color=green, key=1, label="System.Type", style=dashed];
m26_73 -> m26_79  [color=green, key=1, label="System.Type", style=dashed];
m26_73 -> m26_81  [color=green, key=1, label="System.Type", style=dashed];
m26_73 -> m26_84  [color=green, key=1, label="System.Type", style=dashed];
m26_73 -> m26_87  [color=green, key=1, label="System.Type", style=dashed];
m26_90 -> m26_92  [color=green, key=1, label="out System.Type", style=dashed];
m26_224 -> m26_226  [color=darkseagreen4, key=1, label=object, style=dashed];
m26_224 -> m26_234  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m26_224 -> m26_233  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m26_224 -> m26_227  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m26_224 -> m26_229  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m26_224 -> m26_231  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m26_115 -> m26_117  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_439 -> m26_444  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Reflection.MemberInfo>", style=dashed];
m26_441 -> m26_443  [color=darkseagreen4, key=1, label=nonPublicBindingAttr, style=dashed];
m26_443 -> m26_449  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_176 -> m26_179  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_95 -> m26_98  [color=green, key=1, label=string, style=dashed];
m26_95 -> m26_102  [color=green, key=1, label="System.Type", style=dashed];
m26_95 -> m26_103  [color=green, key=1, label=string, style=dashed];
m26_96 -> m26_98  [color=green, key=1, label=current, style=dashed];
m26_106 -> m26_108  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m26_239 -> m26_241  [color=darkseagreen4, key=1, label=object, style=dashed];
m26_239 -> m26_247  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m26_239 -> m26_242  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m26_239 -> m26_244  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m26_239 -> m26_246  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m26_170 -> m26_173  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_367 -> m26_370  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_367 -> m26_369  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m26_367 -> m26_371  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_310 -> m26_454  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_453 -> m26_455  [color=darkseagreen4, key=1, label=propertyInfos, style=dashed];
m26_202 -> m26_204  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m26_202 -> m26_206  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m26_202 -> m26_208  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m26_202 -> m26_210  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m26_362 -> m26_364  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m26_49 -> m26_52  [color=green, key=1, label="System.Type", style=dashed];
m26_49 -> m26_53  [color=green, key=1, label="System.Type", style=dashed];
m26_49 -> m26_54  [color=green, key=1, label="System.Type", style=dashed];
m26_49 -> m26_56  [color=green, key=1, label="System.Type", style=dashed];
m26_49 -> m26_57  [color=green, key=1, label="System.Type", style=dashed];
m26_49 -> m26_58  [color=green, key=1, label="System.Type", style=dashed];
m26_4 -> m26_6  [color=green, key=1, label="System.Type", style=dashed];
m26_4 -> m26_8  [color=green, key=1, label="System.Type", style=dashed];
m26_477 -> m26_327  [color=darkseagreen4, key=1, label="System.Reflection.BindingFlags", style=dashed];
m26_478 -> m26_475  [color=darkseagreen4, key=1, label=nonPublicProperty, style=dashed];
m28_2 -> m28_4  [color=green, key=1, label=o, style=dashed];
m32_50 -> m32_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m32_23 -> m32_25  [color=darkseagreen4, key=1, label=value, style=dashed];
m32_59 -> m32_63  [color=green, key=1, label=string, style=dashed];
m32_44 -> m32_46  [color=darkseagreen4, key=1, label=object, style=dashed];
m32_44 -> m32_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_45 -> m32_161  [color=green, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m32_45 -> m32_179  [color=green, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m32_45 -> m32_173  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m32_45 -> m32_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m32_15 -> m32_18  [color=darkseagreen4, key=1, label=object, style=dashed];
m32_16 -> m32_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonType", style=dashed];
m32_16 -> m32_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonType", style=dashed];
m32_268 -> m32_272  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_268 -> m32_270  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_96 -> m32_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m32_0 -> m32_3  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m32_8 -> m32_11  [color=darkseagreen4, key=1, label=object, style=dashed];
m32_11 -> m32_11  [color=darkseagreen4, key=1, label=w, style=dashed];
m32_116 -> m32_126  [color=green, key=1, label=levelsToComplete, style=dashed];
m32_116 -> m32_123  [color=darkseagreen4, key=1, label=levelsToComplete, style=dashed];
m32_121 -> m32_126  [color=green, key=1, label=levelsToComplete, style=dashed];
m32_125 -> m32_138  [color=green, key=1, label=i, style=dashed];
m32_138 -> m32_138  [color=green, key=1, label=i, style=dashed];
m32_127 -> m32_130  [color=green, key=1, label=token, style=dashed];
m32_127 -> m32_137  [color=darkseagreen4, key=1, label=token, style=dashed];
m32_139 -> m32_147  [color=green, key=1, label=currentLevelType, style=dashed];
m32_117 -> m32_122  [color=darkseagreen4, key=1, label=i, style=dashed];
m32_122 -> m32_122  [color=darkseagreen4, key=1, label=i, style=dashed];
m32_185 -> m32_187  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_52 -> m32_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m32_262 -> m32_265  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_69 -> m32_73  [color=green, key=1, label=string, style=dashed];
m32_82 -> m32_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonType", style=dashed];
m32_152 -> m32_158  [color=darkseagreen4, key=1, label=i, style=dashed];
m32_158 -> m32_158  [color=darkseagreen4, key=1, label=i, style=dashed];
m32_154 -> m32_157  [color=darkseagreen4, key=1, label=j, style=dashed];
m32_157 -> m32_157  [color=darkseagreen4, key=1, label=j, style=dashed];
m32_60 -> m32_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter", style=dashed];
m32_63 -> m32_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter", style=dashed];
m32_63 -> m32_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter", style=dashed];
m32_63 -> m32_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter", style=dashed];
m32_62 -> m32_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.TraceWriter", style=dashed];
m32_106 -> m32_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonType", style=dashed];
m32_282 -> m32_7  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_10  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_35  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_36  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_41  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_42  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_43  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_48  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_52  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_53  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_54  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_57  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_60  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_63  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_61  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_62  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_64  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_67  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_70  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_73  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_71  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_72  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_74  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_75  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_76  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_80  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_132  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_134  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_179  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_193  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_129  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_153  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_173  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_178  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_180  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_282 -> m32_280  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m33_13 -> m33_16  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m33_13 -> m33_20  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m33_13 -> m33_22  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m33_32 -> m33_34  [color=green, key=1, label=e2, style=dashed];
m33_27 -> m33_30  [color=green, key=1, label=e1, style=dashed];
m33_27 -> m33_29  [color=darkseagreen4, key=1, label=e1, style=dashed];
m33_27 -> m33_31  [color=darkseagreen4, key=1, label=e1, style=dashed];
m33_35 -> m33_38  [color=darkseagreen4, key=1, label=movie, style=dashed];
m33_35 -> m33_39  [color=darkseagreen4, key=1, label=movie, style=dashed];
m33_15 -> m33_17  [color=darkseagreen4, key=1, label=sw, style=dashed];
m33_12 -> m33_16  [color=darkseagreen4, key=1, label=s1, style=dashed];
m33_18 -> m33_20  [color=green, key=1, label=compositeExpression, style=dashed];
m33_18 -> m33_22  [color=green, key=1, label=compositeExpression, style=dashed];
m33_18 -> m33_24  [color=green, key=1, label=compositeExpression, style=dashed];
m33_39 -> m33_41  [color=darkseagreen4, key=1, label=ignored, style=dashed];
m33_1 -> m33_3  [color=green, key=1, label=compositeExpression, style=dashed];
m33_1 -> m33_5  [color=green, key=1, label=compositeExpression, style=dashed];
m33_1 -> m33_7  [color=green, key=1, label=compositeExpression, style=dashed];
m35_91 -> m35_94  [color=darkseagreen4, key=1, label=stream, style=dashed];
m35_12 -> m35_23  [color=darkseagreen4, key=1, label=s1, style=dashed];
m35_12 -> m35_34  [color=green, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m35_12 -> m35_20  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m35_13 -> m35_18  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m35_13 -> m35_20  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m35_13 -> m35_22  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m35_20 -> m35_23  [color=darkseagreen4, key=1, label=s3, style=dashed];
m35_19 -> m35_33  [color=green, key=1, label=strSchema, style=dashed];
m35_19 -> m35_22  [color=darkseagreen4, key=1, label=strSchema, style=dashed];
m35_21 -> m35_24  [color=green, key=1, label=ds, style=dashed];
m35_21 -> m35_26  [color=green, key=1, label=ds, style=dashed];
m35_21 -> m35_27  [color=green, key=1, label=ds, style=dashed];
m35_21 -> m35_28  [color=green, key=1, label=ds, style=dashed];
m35_21 -> m35_29  [color=green, key=1, label=ds, style=dashed];
m35_21 -> m35_30  [color=green, key=1, label=ds, style=dashed];
m35_21 -> m35_31  [color=green, key=1, label=ds, style=dashed];
m35_21 -> m35_23  [color=darkseagreen4, key=1, label=ds, style=dashed];
m35_228 -> m35_231  [color=darkseagreen4, key=1, label="System.Data.DataRowChangeEventArgs", style=dashed];
m35_123 -> m35_148  [color=darkseagreen4, key=1, label="System.Xml.Schema.XmlSchemaSet", style=dashed];
m35_123 -> m35_132  [color=darkseagreen4, key=1, label="System.Xml.Schema.XmlSchemaSet", style=dashed];
m35_131 -> m35_148  [color=darkseagreen4, key=1, label=dsSchema, style=dashed];
m35_131 -> m35_136  [color=darkseagreen4, key=1, label=dsSchema, style=dashed];
m35_126 -> m35_129  [color=darkseagreen4, key=1, label=sequence, style=dashed];
m35_130 -> m35_147  [color=darkseagreen4, key=1, label=type, style=dashed];
m35_130 -> m35_149  [color=darkseagreen4, key=1, label=type, style=dashed];
m35_133 -> m35_136  [color=darkseagreen4, key=1, label=s1, style=dashed];
m35_133 -> m35_142  [color=darkseagreen4, key=1, label=s1, style=dashed];
m35_133 -> m35_145  [color=darkseagreen4, key=1, label=s1, style=dashed];
m35_133 -> m35_146  [color=darkseagreen4, key=1, label=s1, style=dashed];
m35_139 -> m35_141  [color=darkseagreen4, key=1, label=schema, style=dashed];
m35_134 -> m35_142  [color=darkseagreen4, key=1, label=s2, style=dashed];
m35_134 -> m35_140  [color=darkseagreen4, key=1, label=s2, style=dashed];
m35_134 -> m35_141  [color=darkseagreen4, key=1, label=s2, style=dashed];
m35_134 -> m35_145  [color=darkseagreen4, key=1, label=s2, style=dashed];
m35_38 -> m35_40  [color=darkseagreen4, key=1, label=included, style=dashed];
m35_234 -> m35_237  [color=darkseagreen4, key=1, label="System.Data.DataRowChangeEventArgs", style=dashed];
m35_220 -> m35_223  [color=darkseagreen4, key=1, label="System.Data.DataRowChangeEventArgs", style=dashed];
m35_250 -> m35_291  [color=darkseagreen4, key=1, label="System.Xml.Schema.XmlSchemaSet", style=dashed];
m35_250 -> m35_275  [color=darkseagreen4, key=1, label="System.Xml.Schema.XmlSchemaSet", style=dashed];
m35_252 -> m35_259  [color=darkseagreen4, key=1, label=sequence, style=dashed];
m35_252 -> m35_264  [color=darkseagreen4, key=1, label=sequence, style=dashed];
m35_274 -> m35_291  [color=darkseagreen4, key=1, label=dsSchema, style=dashed];
m35_274 -> m35_279  [color=darkseagreen4, key=1, label=dsSchema, style=dashed];
m35_251 -> m35_268  [color=darkseagreen4, key=1, label=type, style=dashed];
m35_251 -> m35_272  [color=darkseagreen4, key=1, label=type, style=dashed];
m35_273 -> m35_290  [color=darkseagreen4, key=1, label=type, style=dashed];
m35_273 -> m35_292  [color=darkseagreen4, key=1, label=type, style=dashed];
m35_276 -> m35_279  [color=darkseagreen4, key=1, label=s1, style=dashed];
m35_276 -> m35_285  [color=darkseagreen4, key=1, label=s1, style=dashed];
m35_276 -> m35_288  [color=darkseagreen4, key=1, label=s1, style=dashed];
m35_276 -> m35_289  [color=darkseagreen4, key=1, label=s1, style=dashed];
m35_282 -> m35_284  [color=darkseagreen4, key=1, label=schema, style=dashed];
m35_277 -> m35_285  [color=darkseagreen4, key=1, label=s2, style=dashed];
m35_277 -> m35_283  [color=darkseagreen4, key=1, label=s2, style=dashed];
m35_277 -> m35_284  [color=darkseagreen4, key=1, label=s2, style=dashed];
m35_277 -> m35_288  [color=darkseagreen4, key=1, label=s2, style=dashed];
m35_188 -> m35_190  [color=darkseagreen4, key=1, label=rowCustomersRow, style=dashed];
m35_58 -> m35_61  [color=green, key=1, label=cln, style=dashed];
m35_240 -> m35_243  [color=darkseagreen4, key=1, label="System.Data.DataRowChangeEventArgs", style=dashed];
m35_40 -> m35_103  [color=darkseagreen4, key=1, label=bool, style=dashed];
m35_70 -> m35_74  [color=darkseagreen4, key=1, label="System.Xml.XmlReader", style=dashed];
m35_70 -> m35_85  [color=darkseagreen4, key=1, label="System.Xml.XmlReader", style=dashed];
m35_73 -> m35_83  [color=green, key=1, label=ds, style=dashed];
m35_73 -> m35_75  [color=darkseagreen4, key=1, label=ds, style=dashed];
m35_73 -> m35_76  [color=darkseagreen4, key=1, label=ds, style=dashed];
m35_197 -> m35_199  [color=darkseagreen4, key=1, label=cln, style=dashed];
m35_309 -> m35_2  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m35_309 -> m35_24  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m35_309 -> m35_32  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m35_309 -> m35_54  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m35_309 -> m35_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m35_309 -> m35_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m35_309 -> m35_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m35_309 -> m35_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m35_309 -> m35_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m35_309 -> m35_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m35_309 -> m35_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m35_309 -> m35_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m35_309 -> m35_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", style=dashed];
m35_310 -> m35_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m35_310 -> m35_163  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m35_310 -> m35_180  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m35_310 -> m35_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m35_310 -> m35_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m35_310 -> m35_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m35_310 -> m35_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m35_310 -> m35_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m35_310 -> m35_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m35_310 -> m35_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m35_310 -> m35_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m35_310 -> m35_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m35_310 -> m35_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m35_310 -> m35_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m35_310 -> m35_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", style=dashed];
m36_75 -> m36_77  [color=darkseagreen4, key=1, label=o, style=dashed];
m36_75 -> m36_78  [color=darkseagreen4, key=1, label=o, style=dashed];
m36_78 -> m36_80  [color=darkseagreen4, key=1, label=a, style=dashed];
m36_167 -> m36_169  [color=darkseagreen4, key=1, label=o, style=dashed];
m36_167 -> m36_170  [color=darkseagreen4, key=1, label=o, style=dashed];
m36_167 -> m36_171  [color=darkseagreen4, key=1, label=o, style=dashed];
m36_167 -> m36_172  [color=darkseagreen4, key=1, label=o, style=dashed];
m36_173 -> m36_175  [color=darkseagreen4, key=1, label=a, style=dashed];
m36_96 -> m36_96  [color=darkseagreen4, key=1, label=p, style=dashed];
m36_134 -> m36_140  [color=darkseagreen4, key=1, label=o, style=dashed];
m36_135 -> m36_140  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m36_138 -> m36_140  [color=darkseagreen4, key=1, label=writer, style=dashed];
m36_2 -> m36_11  [color=darkseagreen4, key=1, label=o, style=dashed];
m36_3 -> m36_5  [color=darkseagreen4, key=1, label=properties, style=dashed];
m36_3 -> m36_6  [color=darkseagreen4, key=1, label=properties, style=dashed];
m36_11 -> m36_11  [color=darkseagreen4, key=1, label=p, style=dashed];
m36_11 -> m36_13  [color=darkseagreen4, key=1, label=parameterValues, style=dashed];
m36_7 -> m36_9  [color=darkseagreen4, key=1, label=list, style=dashed];
m36_7 -> m36_10  [color=darkseagreen4, key=1, label=list, style=dashed];
m36_61 -> m36_63  [color=darkseagreen4, key=1, label=o, style=dashed];
m36_61 -> m36_64  [color=darkseagreen4, key=1, label=o, style=dashed];
m36_61 -> m36_65  [color=darkseagreen4, key=1, label=o, style=dashed];
m36_61 -> m36_66  [color=darkseagreen4, key=1, label=o, style=dashed];
m36_61 -> m36_67  [color=darkseagreen4, key=1, label=o, style=dashed];
m36_69 -> m36_71  [color=darkseagreen4, key=1, label=a, style=dashed];
m36_69 -> m36_72  [color=darkseagreen4, key=1, label=a, style=dashed];
m36_37 -> m36_39  [color=darkseagreen4, key=1, label=resultUrls, style=dashed];
m36_154 -> m36_158  [color=darkseagreen4, key=1, label=testDates, style=dashed];
m36_155 -> m36_158  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m36_157 -> m36_159  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m36_111 -> m36_113  [color=darkseagreen4, key=1, label=o, style=dashed];
m36_111 -> m36_114  [color=darkseagreen4, key=1, label=o, style=dashed];
m36_111 -> m36_115  [color=darkseagreen4, key=1, label=o, style=dashed];
m36_111 -> m36_116  [color=darkseagreen4, key=1, label=o, style=dashed];
m38_1 -> m38_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberMapping", style=dashed];
m38_4 -> m38_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberMapping", style=dashed];
m38_5 -> m38_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberMapping", style=dashed];
m38_7 -> m38_9  [color=green, key=1, label="Newtonsoft.Json.MemberMapping", style=dashed];
m38_7 -> m38_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberMapping", style=dashed];
m38_8 -> m38_8  [color=darkseagreen4, key=1, label=existingMemberMapping, style=dashed];
m38_9 -> m38_9  [color=green, key=1, label="Newtonsoft.Json.MemberMapping", style=dashed];
m38_9 -> m38_11  [color=green, key=1, label="Newtonsoft.Json.MemberMapping", style=dashed];
m38_18 -> m38_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberMappingCollection", style=dashed];
m38_18 -> m38_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberMappingCollection", style=dashed];
m38_18 -> m38_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberMappingCollection", style=dashed];
m39_137 -> m39_139  [color=darkseagreen4, key=1, label=writer, style=dashed];
m39_137 -> m39_140  [color=darkseagreen4, key=1, label=writer, style=dashed];
m39_137 -> m39_144  [color=darkseagreen4, key=1, label=writer, style=dashed];
m39_141 -> m39_143  [color=darkseagreen4, key=1, label=i, style=dashed];
m39_87 -> m39_89  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_90  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_91  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_92  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_94  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_95  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_96  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_97  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_98  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_99  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_100  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_101  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_102  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_103  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_104  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_105  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_107  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_108  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_109  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_110  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_111  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_112  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_113  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_114  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_115  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_116  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_117  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_118  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_119  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_120  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_87 -> m39_121  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_93 -> m39_96  [color=darkseagreen4, key=1, label=o, style=dashed];
m39_93 -> m39_99  [color=darkseagreen4, key=1, label=o, style=dashed];
m39_93 -> m39_102  [color=darkseagreen4, key=1, label=o, style=dashed];
m39_93 -> m39_105  [color=darkseagreen4, key=1, label=o, style=dashed];
m39_93 -> m39_121  [color=darkseagreen4, key=1, label=o, style=dashed];
m39_106 -> m39_109  [color=darkseagreen4, key=1, label=a, style=dashed];
m39_106 -> m39_112  [color=darkseagreen4, key=1, label=a, style=dashed];
m39_106 -> m39_115  [color=darkseagreen4, key=1, label=a, style=dashed];
m39_106 -> m39_118  [color=darkseagreen4, key=1, label=a, style=dashed];
m39_54 -> m39_56  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_54 -> m39_57  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_54 -> m39_58  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_54 -> m39_59  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_54 -> m39_60  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_54 -> m39_61  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_54 -> m39_62  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_54 -> m39_63  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_54 -> m39_64  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_54 -> m39_65  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_54 -> m39_66  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_54 -> m39_67  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_54 -> m39_68  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_54 -> m39_69  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_54 -> m39_70  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_54 -> m39_71  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_54 -> m39_72  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_54 -> m39_73  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_54 -> m39_74  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_54 -> m39_75  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_1 -> m39_17  [color=darkseagreen4, key=1, label=data, style=dashed];
m39_1 -> m39_34  [color=darkseagreen4, key=1, label=data, style=dashed];
m39_3 -> m39_5  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_3 -> m39_6  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_3 -> m39_7  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_3 -> m39_8  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_3 -> m39_9  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_3 -> m39_10  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_3 -> m39_11  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_3 -> m39_12  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_3 -> m39_13  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_3 -> m39_14  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_3 -> m39_15  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_3 -> m39_16  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_3 -> m39_17  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_3 -> m39_18  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m39_19 -> m39_21  [color=darkseagreen4, key=1, label=root, style=dashed];
m39_19 -> m39_22  [color=darkseagreen4, key=1, label=root, style=dashed];
m39_19 -> m39_23  [color=darkseagreen4, key=1, label=root, style=dashed];
m39_19 -> m39_24  [color=darkseagreen4, key=1, label=root, style=dashed];
m39_19 -> m39_25  [color=darkseagreen4, key=1, label=root, style=dashed];
m39_19 -> m39_26  [color=darkseagreen4, key=1, label=root, style=dashed];
m39_19 -> m39_27  [color=darkseagreen4, key=1, label=root, style=dashed];
m39_19 -> m39_28  [color=darkseagreen4, key=1, label=root, style=dashed];
m39_19 -> m39_29  [color=darkseagreen4, key=1, label=root, style=dashed];
m39_19 -> m39_30  [color=darkseagreen4, key=1, label=root, style=dashed];
m39_19 -> m39_31  [color=darkseagreen4, key=1, label=root, style=dashed];
m39_19 -> m39_32  [color=darkseagreen4, key=1, label=root, style=dashed];
m39_19 -> m39_33  [color=darkseagreen4, key=1, label=root, style=dashed];
m39_19 -> m39_34  [color=darkseagreen4, key=1, label=root, style=dashed];
m39_156 -> m39_158  [color=darkseagreen4, key=1, label=writer, style=dashed];
m39_156 -> m39_159  [color=darkseagreen4, key=1, label=writer, style=dashed];
m39_156 -> m39_160  [color=darkseagreen4, key=1, label=writer, style=dashed];
m39_156 -> m39_161  [color=darkseagreen4, key=1, label=writer, style=dashed];
m39_147 -> m39_149  [color=darkseagreen4, key=1, label=writer, style=dashed];
m39_147 -> m39_150  [color=darkseagreen4, key=1, label=writer, style=dashed];
m39_147 -> m39_151  [color=darkseagreen4, key=1, label=writer, style=dashed];
m39_147 -> m39_152  [color=darkseagreen4, key=1, label=writer, style=dashed];
m39_127 -> m39_129  [color=darkseagreen4, key=1, label=writer, style=dashed];
m39_127 -> m39_130  [color=darkseagreen4, key=1, label=writer, style=dashed];
m39_127 -> m39_131  [color=darkseagreen4, key=1, label=writer, style=dashed];
m40_26 -> m40_28  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_103 -> m40_106  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_103 -> m40_108  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_103 -> m40_113  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_103 -> m40_117  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_110 -> m40_118  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m40_111 -> m40_118  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m40_114 -> m40_118  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m40_115 -> m40_118  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m40_125 -> m40_128  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_176 -> m40_178  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_199 -> m40_201  [color=darkseagreen4, key=1, label=object, style=dashed];
m40_199 -> m40_202  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_199 -> m40_204  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_199 -> m40_206  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_199 -> m40_207  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_57 -> m40_59  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_20 -> m40_22  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_20 -> m40_23  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_61 -> m40_63  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_61 -> m40_64  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_247 -> m40_250  [color=darkseagreen4, key=1, label="System.Reflection.ICustomAttributeProvider", style=dashed];
m40_258 -> m40_261  [color=darkseagreen4, key=1, label="System.Reflection.MemberTypes", style=dashed];
m40_258 -> m40_264  [color=darkseagreen4, key=1, label="System.Reflection.MemberFilter", style=dashed];
m40_260 -> m40_264  [color=darkseagreen4, key=1, label=memberInfos, style=dashed];
m40_260 -> m40_265  [color=darkseagreen4, key=1, label=memberInfos, style=dashed];
m40_262 -> m40_264  [color=darkseagreen4, key=1, label=nonPublicBindingAttr, style=dashed];
m40_281 -> m40_283  [color=green, key=1, label="System.Collections.Generic.IList<System.Type>", style=dashed];
m40_281 -> m40_285  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m40_131 -> m40_137  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m40_131 -> m40_138  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m40_131 -> m40_143  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m40_133 -> m40_141  [color=darkseagreen4, key=1, label=elementType, style=dashed];
m40_133 -> m40_148  [color=darkseagreen4, key=1, label=elementType, style=dashed];
m40_135 -> m40_138  [color=darkseagreen4, key=1, label=unitializedValue, style=dashed];
m40_136 -> m40_138  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_136 -> m40_140  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_140 -> m40_140  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_142 -> m40_147  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_147 -> m40_147  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_119 -> m40_122  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_13 -> m40_15  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_13 -> m40_17  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_86 -> m40_89  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_86 -> m40_90  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_86 -> m40_91  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_86 -> m40_93  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_86 -> m40_95  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_86 -> m40_97  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_91 -> m40_94  [color=darkseagreen4, key=1, label=genericListType, style=dashed];
m40_219 -> m40_224  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_51 -> m40_53  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m40_269 -> m40_271  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m40_269 -> m40_272  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_269 -> m40_273  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_169 -> m40_171  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m40_211 -> m40_216  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_1 -> m40_3  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_4 -> m40_6  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_4 -> m40_8  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_7 -> m40_10  [color=darkseagreen4, key=1, label=computer, style=dashed];
m40_10 -> m40_12  [color=darkseagreen4, key=1, label=a, style=dashed];
m40_230 -> m40_232  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_230 -> m40_233  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_231 -> m40_233  [color=darkseagreen4, key=1, label=targetMembers, style=dashed];
m40_231 -> m40_234  [color=darkseagreen4, key=1, label=targetMembers, style=dashed];
m40_151 -> m40_153  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_151 -> m40_155  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_151 -> m40_157  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_151 -> m40_159  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_164 -> m40_166  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m40_31 -> m40_35  [color=darkseagreen4, key=1, label=object, style=dashed];
m40_253 -> m40_255  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_66 -> m40_70  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_66 -> m40_71  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_66 -> m40_72  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_66 -> m40_73  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_66 -> m40_76  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_66 -> m40_77  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_66 -> m40_80  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_66 -> m40_83  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_184 -> m40_186  [color=darkseagreen4, key=1, label=object, style=dashed];
m40_184 -> m40_187  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_184 -> m40_189  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_184 -> m40_191  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_184 -> m40_193  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_184 -> m40_194  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_37 -> m40_40  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_37 -> m40_41  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_37 -> m40_42  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_37 -> m40_44  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_37 -> m40_45  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_37 -> m40_46  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m41_72 -> m41_74  [color=darkseagreen4, key=1, label=sr, style=dashed];
m41_72 -> m41_75  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_74 -> m41_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_194 -> m41_197  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_82 -> m41_84  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m41_83 -> m41_85  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_230 -> m41_232  [color=darkseagreen4, key=1, label=expressions, style=dashed];
m41_230 -> m41_233  [color=darkseagreen4, key=1, label=expressions, style=dashed];
m41_230 -> m41_234  [color=darkseagreen4, key=1, label=expressions, style=dashed];
m41_230 -> m41_235  [color=darkseagreen4, key=1, label=expressions, style=dashed];
m41_230 -> m41_236  [color=darkseagreen4, key=1, label=expressions, style=dashed];
m41_283 -> m41_285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_51 -> m41_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_28 -> m41_30  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_387 -> m41_389  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_387 -> m41_390  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_387 -> m41_391  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_38 -> m41_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_39 -> m41_42  [color=darkseagreen4, key=1, label=SqlString, style=dashed];
m41_199 -> m41_201  [color=darkseagreen4, key=1, label=char, style=dashed];
m41_149 -> m41_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_150 -> m41_157  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_289 -> m41_291  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_359 -> m41_361  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_359 -> m41_362  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_359 -> m41_363  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_322 -> m41_324  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_208 -> m41_214  [color=darkseagreen4, key=1, label=h3, style=dashed];
m41_209 -> m41_215  [color=darkseagreen4, key=1, label=h4, style=dashed];
m41_0 -> m41_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_0 -> m41_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_3 -> m41_5  [color=darkseagreen4, key=1, label=i, style=dashed];
m41_3 -> m41_7  [color=darkseagreen4, key=1, label=i, style=dashed];
m41_138 -> m41_145  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m41_138 -> m41_146  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m41_138 -> m41_147  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m41_144 -> m41_159  [color=darkseagreen4, key=1, label=removeTagsUpper, style=dashed];
m41_144 -> m41_161  [color=darkseagreen4, key=1, label=removeTagsUpper, style=dashed];
m41_144 -> m41_146  [color=darkseagreen4, key=1, label=expressions, style=dashed];
m41_146 -> m41_148  [color=darkseagreen4, key=1, label=removeTagsUpper, style=dashed];
m41_146 -> m41_159  [color=darkseagreen4, key=1, label=removeTagsUpper, style=dashed];
m41_146 -> m41_161  [color=darkseagreen4, key=1, label=removeTagsUpper, style=dashed];
m41_306 -> m41_308  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_306 -> m41_309  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_306 -> m41_310  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_306 -> m41_311  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_306 -> m41_312  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_306 -> m41_313  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_265 -> m41_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_204 -> m41_210  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m41_204 -> m41_211  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m41_204 -> m41_212  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m41_204 -> m41_213  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m41_204 -> m41_214  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m41_204 -> m41_215  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m41_206 -> m41_212  [color=darkseagreen4, key=1, label=h1, style=dashed];
m41_207 -> m41_213  [color=darkseagreen4, key=1, label=h2, style=dashed];
m41_338 -> m41_340  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_338 -> m41_341  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_338 -> m41_342  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_110 -> m41_112  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_110 -> m41_113  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_112 -> m41_112  [color=darkseagreen4, key=1, label=lineNumber, style=dashed];
m41_56 -> m41_58  [color=darkseagreen4, key=1, label="System.Action<string>", style=dashed];
m41_56 -> m41_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_56 -> m41_60  [color=darkseagreen4, key=1, label="System.Action<string>", style=dashed];
m41_56 -> m41_61  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_57 -> m41_59  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_12 -> m41_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_12 -> m41_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_18 -> m41_20  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_17 -> m41_19  [color=darkseagreen4, key=1, label=i, style=dashed];
m41_17 -> m41_21  [color=darkseagreen4, key=1, label=i, style=dashed];
m41_21 -> m41_21  [color=darkseagreen4, key=1, label=i, style=dashed];
m41_23 -> m41_25  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_277 -> m41_279  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_67 -> m41_70  [color=darkseagreen4, key=1, label=int, style=dashed];
m41_67 -> m41_74  [color=darkseagreen4, key=1, label=int, style=dashed];
m41_67 -> m41_83  [color=darkseagreen4, key=1, label=int, style=dashed];
m41_67 -> m41_69  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_133 -> m41_135  [color=green, key=1, label=path, style=dashed];
m41_139 -> m41_142  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_166 -> m41_168  [color=darkseagreen4, key=1, label=expressions, style=dashed];
m41_62 -> m41_64  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_223 -> m41_159  [color=darkseagreen4, key=1, label=removeTagsUpper, style=dashed];
m41_223 -> m41_161  [color=darkseagreen4, key=1, label=removeTagsUpper, style=dashed];
m41_366 -> m41_368  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_366 -> m41_369  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_366 -> m41_370  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_93 -> m41_95  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_171 -> m41_173  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_174 -> m41_176  [color=darkseagreen4, key=1, label=expressions, style=dashed];
m41_316 -> m41_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_373 -> m41_375  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_373 -> m41_376  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_373 -> m41_377  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_421 -> m41_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_413 -> m41_415  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_413 -> m41_416  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_413 -> m41_417  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_413 -> m41_418  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_24 -> m41_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_24 -> m41_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_24 -> m41_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_24 -> m41_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_24 -> m41_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_24 -> m41_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_24 -> m41_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_271 -> m41_273  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_155 -> m41_157  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_380 -> m41_382  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_380 -> m41_383  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_380 -> m41_384  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_124 -> m41_128  [color=darkseagreen4, key=1, label=line, style=dashed];
m41_125 -> m41_127  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_125 -> m41_128  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_128 -> m41_130  [color=darkseagreen4, key=1, label=expressions, style=dashed];
m41_98 -> m41_100  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_98 -> m41_101  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_119 -> m41_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_119 -> m41_121  [color=darkseagreen4, key=1, label=expressions, style=dashed];
m41_119 -> m41_122  [color=darkseagreen4, key=1, label=expressions, style=dashed];
m41_121 -> m41_127  [color=darkseagreen4, key=1, label=sb, style=dashed];
m41_121 -> m41_128  [color=darkseagreen4, key=1, label=sb, style=dashed];
m41_121 -> m41_129  [color=darkseagreen4, key=1, label=sb, style=dashed];
m41_122 -> m41_125  [color=darkseagreen4, key=1, label=first, style=dashed];
m41_163 -> m41_165  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_169 -> m41_172  [color=darkseagreen4, key=1, label=int, style=dashed];
m41_169 -> m41_177  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_169 -> m41_182  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_45 -> m41_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_45 -> m41_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_394 -> m41_396  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_394 -> m41_397  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_394 -> m41_398  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_407 -> m41_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_259 -> m41_261  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_99 -> m41_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_104 -> m41_106  [color=green, key=1, label=path, style=dashed];
m41_104 -> m41_107  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_89 -> m41_91  [color=darkseagreen4, key=1, label=firstLine, style=dashed];
m41_90 -> m41_94  [color=darkseagreen4, key=1, label=line, style=dashed];
m41_240 -> m41_242  [color=darkseagreen4, key=1, label=andExpression, style=dashed];
m41_240 -> m41_243  [color=darkseagreen4, key=1, label=andExpression, style=dashed];
m41_240 -> m41_244  [color=darkseagreen4, key=1, label=andExpression, style=dashed];
m41_245 -> m41_247  [color=darkseagreen4, key=1, label=orExpression, style=dashed];
m41_245 -> m41_248  [color=darkseagreen4, key=1, label=orExpression, style=dashed];
m41_245 -> m41_249  [color=darkseagreen4, key=1, label=orExpression, style=dashed];
m41_245 -> m41_250  [color=darkseagreen4, key=1, label=orExpression, style=dashed];
m41_116 -> m41_118  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_345 -> m41_347  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_345 -> m41_348  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_345 -> m41_349  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_157 -> m41_163  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m41_158 -> m41_160  [color=darkseagreen4, key=1, label=expressions, style=dashed];
m41_158 -> m41_161  [color=darkseagreen4, key=1, label=tag, style=dashed];
m41_33 -> m41_35  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_7 -> m41_7  [color=darkseagreen4, key=1, label=i, style=dashed];
m41_8 -> m41_10  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_108 -> m41_110  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m41_108 -> m41_111  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m41_141 -> m41_143  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_221 -> m41_83  [color=darkseagreen4, key=1, label=char, style=dashed];
m41_220 -> m41_83  [color=darkseagreen4, key=1, label=int, style=dashed];
m41_222 -> m41_112  [color=darkseagreen4, key=1, label=lineNumber, style=dashed];
m41_78 -> m41_80  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_80 -> m41_92  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m41_80 -> m41_94  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m41_333 -> m41_335  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_295 -> m41_297  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_328 -> m41_330  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_401 -> m41_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_253 -> m41_255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_352 -> m41_354  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_352 -> m41_355  [color=darkseagreen4, key=1, label=path, style=dashed];
m41_352 -> m41_356  [color=darkseagreen4, key=1, label=path, style=dashed];
m42_7 -> m42_7  [color=darkseagreen4, key=1, label=p, style=dashed];
m42_7 -> m42_9  [color=darkseagreen4, key=1, label=rss, style=dashed];
}
