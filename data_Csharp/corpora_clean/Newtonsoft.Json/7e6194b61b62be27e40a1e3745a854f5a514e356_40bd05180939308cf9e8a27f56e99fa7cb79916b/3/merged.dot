digraph  {
m0_8 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="ConvertUtils.cs"];
m0_22 [label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", span="41-41", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="ConvertUtils.cs"];
m0_23 [label="JObject o = new JObject()", span="43-43", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="ConvertUtils.cs"];
m0_24 [label="o.AddAnnotation(''A string!'')", span="44-44", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="ConvertUtils.cs"];
m0_25 [label="o.AddAnnotation(new Uri(''http://www.google.com/''))", span="45-45", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="ConvertUtils.cs"];
m0_26 [label="string s = o.Annotation<string>()", span="47-47", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="ConvertUtils.cs"];
m0_28 [label="s = (string)o.Annotation(typeof(string))", span="50-50", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="ConvertUtils.cs"];
m0_30 [label="Uri i = o.Annotation<Uri>()", span="53-53", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="ConvertUtils.cs"];
m0_32 [label="i = (Uri)o.Annotation(typeof(Uri))", span="56-56", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="ConvertUtils.cs"];
m0_27 [label="Assert.AreEqual(''A string!'', s)", span="48-48", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="ConvertUtils.cs"];
m0_29 [label="Assert.AreEqual(''A string!'', s)", span="51-51", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="ConvertUtils.cs"];
m0_31 [label="Assert.AreEqual(new Uri(''http://www.google.com/''), i)", span="54-54", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="ConvertUtils.cs"];
m0_33 [label="Assert.AreEqual(new Uri(''http://www.google.com/''), i)", span="57-57", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="ConvertUtils.cs"];
m0_34 [label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", span="41-41", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="ConvertUtils.cs"];
m0_62 [label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.Cast<TResult>()", file="ConvertUtils.cs"];
m0_9 [label="Entry Newtonsoft.Json.Linq.JToken.AddAnnotation(object)", span="2081-2081", cluster="Newtonsoft.Json.Linq.JToken.AddAnnotation(object)", file="ConvertUtils.cs"];
m0_90 [label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", span="134-134", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", file="ConvertUtils.cs"];
m0_91 [label="JObject o = new JObject()", span="136-136", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", file="ConvertUtils.cs"];
m0_92 [label="o.AddAnnotation(''A string!'')", span="137-137", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", file="ConvertUtils.cs"];
m0_93 [label="o.RemoveAnnotations(typeof(string))", span="139-139", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", file="ConvertUtils.cs"];
m0_94 [label="string s = o.Annotation<string>()", span="141-141", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", file="ConvertUtils.cs"];
m0_96 [label="s = (string)o.Annotation(typeof(string))", span="144-144", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", file="ConvertUtils.cs"];
m0_95 [label="Assert.AreEqual(null, s)", span="142-142", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", file="ConvertUtils.cs"];
m0_97 [label="Assert.AreEqual(null, s)", span="145-145", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", file="ConvertUtils.cs"];
m0_98 [label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", span="134-134", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", file="ConvertUtils.cs"];
m0_133 [label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", span="201-201", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="ConvertUtils.cs"];
m0_134 [label="JObject o = new JObject()", span="203-203", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="ConvertUtils.cs"];
m0_135 [label="o.AddAnnotation(''A string!'')", span="204-204", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="ConvertUtils.cs"];
m0_136 [label="o.AddAnnotation(new Uri(''http://www.google.com/''))", span="205-205", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="ConvertUtils.cs"];
m0_137 [label="o.RemoveAnnotations(typeof(string))", span="207-207", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="ConvertUtils.cs"];
m0_138 [label="o.RemoveAnnotations(typeof(Uri))", span="208-208", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="ConvertUtils.cs"];
m0_139 [label="string s = o.Annotation<string>()", span="210-210", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="ConvertUtils.cs"];
m0_141 [label="Uri i = o.Annotation<Uri>()", span="213-213", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="ConvertUtils.cs"];
m0_140 [label="Assert.AreEqual(null, s)", span="211-211", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="ConvertUtils.cs"];
m0_142 [label="Assert.AreEqual(null, i)", span="214-214", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="ConvertUtils.cs"];
m0_143 [label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", span="201-201", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="ConvertUtils.cs"];
m0_36 [label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotation_NeverSet()", span="61-61", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotation_NeverSet()", file="ConvertUtils.cs"];
m0_37 [label="JObject o = new JObject()", span="63-63", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotation_NeverSet()", file="ConvertUtils.cs"];
m0_38 [label="string s = o.Annotation<string>()", span="65-65", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotation_NeverSet()", file="ConvertUtils.cs"];
m0_40 [label="s = (string)o.Annotation(typeof(string))", span="68-68", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotation_NeverSet()", file="ConvertUtils.cs"];
m0_39 [label="Assert.AreEqual(null, s)", span="66-66", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotation_NeverSet()", file="ConvertUtils.cs"];
m0_41 [label="Assert.AreEqual(null, s)", span="69-69", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotation_NeverSet()", file="ConvertUtils.cs"];
m0_42 [label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotation_NeverSet()", span="61-61", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotation_NeverSet()", file="ConvertUtils.cs"];
m0_154 [label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", span="234-234", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", file="ConvertUtils.cs"];
m0_155 [label="JObject o = new JObject()", span="236-236", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", file="ConvertUtils.cs"];
m0_156 [label="o.AddAnnotation(''A string!'')", span="237-237", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", file="ConvertUtils.cs"];
m0_157 [label="o.AddAnnotation(new Uri(''http://www.google.com/''))", span="238-238", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", file="ConvertUtils.cs"];
m0_158 [label="o.RemoveAnnotations(typeof(string))", span="240-240", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", file="ConvertUtils.cs"];
m0_159 [label="string s = o.Annotation<string>()", span="242-242", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", file="ConvertUtils.cs"];
m0_161 [label="Uri i = o.Annotation<Uri>()", span="245-245", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", file="ConvertUtils.cs"];
m0_160 [label="Assert.AreEqual(null, s)", span="243-243", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", file="ConvertUtils.cs"];
m0_162 [label="Assert.AreEqual(new Uri(''http://www.google.com/''), i)", span="246-246", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", file="ConvertUtils.cs"];
m0_163 [label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", span="234-234", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", file="ConvertUtils.cs"];
m0_63 [label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", span="96-96", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="ConvertUtils.cs"];
m0_64 [label="JObject o = new JObject()", span="98-98", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="ConvertUtils.cs"];
m0_65 [label="o.AddAnnotation(''A string!'')", span="99-99", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="ConvertUtils.cs"];
m0_66 [label="o.AddAnnotation(''A string 2!'')", span="100-100", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="ConvertUtils.cs"];
m0_67 [label="o.AddAnnotation(''A string 3!'')", span="101-101", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="ConvertUtils.cs"];
m0_68 [label="o.AddAnnotation(new Uri(''http://www.google.com/''))", span="102-102", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="ConvertUtils.cs"];
m0_69 [label="IList<object> l = o.Annotations<object>().ToList()", span="104-104", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="ConvertUtils.cs"];
m0_75 [label="l = o.Annotations(typeof(object)).ToList()", span="112-112", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="ConvertUtils.cs"];
m0_70 [label="Assert.AreEqual(4, l.Count)", span="106-106", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="ConvertUtils.cs"];
m0_71 [label="Assert.AreEqual(''A string!'', l[0])", span="107-107", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="ConvertUtils.cs"];
m0_72 [label="Assert.AreEqual(''A string 2!'', l[1])", span="108-108", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="ConvertUtils.cs"];
m0_73 [label="Assert.AreEqual(''A string 3!'', l[2])", span="109-109", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="ConvertUtils.cs"];
m0_74 [label="Assert.AreEqual(new Uri(''http://www.google.com/''), l[3])", span="110-110", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="ConvertUtils.cs"];
m0_76 [label="Assert.AreEqual(4, l.Count)", span="114-114", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="ConvertUtils.cs"];
m0_77 [label="Assert.AreEqual(''A string!'', l[0])", span="115-115", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="ConvertUtils.cs"];
m0_78 [label="Assert.AreEqual(''A string 2!'', l[1])", span="116-116", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="ConvertUtils.cs"];
m0_79 [label="Assert.AreEqual(''A string 3!'', l[2])", span="117-117", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="ConvertUtils.cs"];
m0_80 [label="Assert.AreEqual(new Uri(''http://www.google.com/''), l[3])", span="118-118", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="ConvertUtils.cs"];
m0_81 [label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", span="96-96", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="ConvertUtils.cs"];
m0_82 [label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation()", span="122-122", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation()", file="ConvertUtils.cs"];
m0_83 [label="JObject o = new JObject()", span="124-124", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation()", file="ConvertUtils.cs"];
m0_84 [label="o.AddAnnotation(''A string!'')", span="125-125", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation()", file="ConvertUtils.cs"];
m0_85 [label="o.RemoveAnnotations<string>()", span="127-127", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation()", file="ConvertUtils.cs"];
m0_86 [label="string s = o.Annotation<string>()", span="129-129", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation()", file="ConvertUtils.cs"];
m0_87 [label="Assert.AreEqual(null, s)", span="130-130", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation()", file="ConvertUtils.cs"];
m0_88 [label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation()", span="122-122", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation()", file="ConvertUtils.cs"];
m0_144 [label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", span="218-218", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", file="ConvertUtils.cs"];
m0_145 [label="JObject o = new JObject()", span="220-220", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", file="ConvertUtils.cs"];
m0_146 [label="o.AddAnnotation(''A string!'')", span="221-221", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", file="ConvertUtils.cs"];
m0_147 [label="o.AddAnnotation(new Uri(''http://www.google.com/''))", span="222-222", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", file="ConvertUtils.cs"];
m0_148 [label="o.RemoveAnnotations<string>()", span="224-224", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", file="ConvertUtils.cs"];
m0_149 [label="string s = o.Annotation<string>()", span="226-226", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", file="ConvertUtils.cs"];
m0_151 [label="Uri i = o.Annotation<Uri>()", span="229-229", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", file="ConvertUtils.cs"];
m0_150 [label="Assert.AreEqual(null, s)", span="227-227", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", file="ConvertUtils.cs"];
m0_152 [label="Assert.AreEqual(new Uri(''http://www.google.com/''), i)", span="230-230", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", file="ConvertUtils.cs"];
m0_153 [label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", span="218-218", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", file="ConvertUtils.cs"];
m0_43 [label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", span="73-73", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="ConvertUtils.cs"];
m0_44 [label="JObject o = new JObject()", span="75-75", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="ConvertUtils.cs"];
m0_45 [label="o.AddAnnotation(''A string!'')", span="76-76", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="ConvertUtils.cs"];
m0_46 [label="o.AddAnnotation(''A string 2!'')", span="77-77", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="ConvertUtils.cs"];
m0_47 [label="o.AddAnnotation(''A string 3!'')", span="78-78", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="ConvertUtils.cs"];
m0_48 [label="IList<string> l = o.Annotations<string>().ToList()", span="80-80", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="ConvertUtils.cs"];
m0_53 [label="l = o.Annotations(typeof(string)).Cast<string>().ToList()", span="87-87", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="ConvertUtils.cs"];
m0_49 [label="Assert.AreEqual(3, l.Count)", span="82-82", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="ConvertUtils.cs"];
m0_50 [label="Assert.AreEqual(''A string!'', l[0])", span="83-83", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="ConvertUtils.cs"];
m0_51 [label="Assert.AreEqual(''A string 2!'', l[1])", span="84-84", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="ConvertUtils.cs"];
m0_52 [label="Assert.AreEqual(''A string 3!'', l[2])", span="85-85", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="ConvertUtils.cs"];
m0_54 [label="Assert.AreEqual(3, l.Count)", span="89-89", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="ConvertUtils.cs"];
m0_55 [label="Assert.AreEqual(''A string!'', l[0])", span="90-90", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="ConvertUtils.cs"];
m0_56 [label="Assert.AreEqual(''A string 2!'', l[1])", span="91-91", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="ConvertUtils.cs"];
m0_57 [label="Assert.AreEqual(''A string 3!'', l[2])", span="92-92", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="ConvertUtils.cs"];
m0_58 [label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", span="73-73", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="ConvertUtils.cs"];
m0_114 [label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", span="171-171", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="ConvertUtils.cs"];
m0_115 [label="JObject o = new JObject()", span="173-173", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="ConvertUtils.cs"];
m0_116 [label="o.AddAnnotation(''A string!'')", span="174-174", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="ConvertUtils.cs"];
m0_117 [label="o.AddAnnotation(new Uri(''http://www.google.com/''))", span="175-175", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="ConvertUtils.cs"];
m0_118 [label="o.RemoveAnnotations<string>()", span="177-177", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="ConvertUtils.cs"];
m0_119 [label="o.RemoveAnnotations<Uri>()", span="178-178", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="ConvertUtils.cs"];
m0_120 [label="string s = o.Annotation<string>()", span="180-180", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="ConvertUtils.cs"];
m0_122 [label="Uri i = o.Annotation<Uri>()", span="183-183", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="ConvertUtils.cs"];
m0_121 [label="Assert.AreEqual(null, s)", span="181-181", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="ConvertUtils.cs"];
m0_123 [label="Assert.AreEqual(null, i)", span="184-184", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="ConvertUtils.cs"];
m0_124 [label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", span="171-171", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="ConvertUtils.cs"];
m0_89 [label="Entry Newtonsoft.Json.Linq.JToken.RemoveAnnotations<T>()", span="2249-2249", cluster="Newtonsoft.Json.Linq.JToken.RemoveAnnotations<T>()", file="ConvertUtils.cs"];
m0_100 [label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", span="149-149", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="ConvertUtils.cs"];
m0_101 [label="JObject o = new JObject()", span="151-151", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="ConvertUtils.cs"];
m0_102 [label="o.AddAnnotation(''A string!'')", span="152-152", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="ConvertUtils.cs"];
m0_103 [label="o.AddAnnotation(''A string 2!'')", span="153-153", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="ConvertUtils.cs"];
m0_104 [label="o.AddAnnotation(''A string 3!'')", span="154-154", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="ConvertUtils.cs"];
m0_105 [label="o.RemoveAnnotations<string>()", span="156-156", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="ConvertUtils.cs"];
m0_106 [label="string s = o.Annotation<string>()", span="158-158", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="ConvertUtils.cs"];
m0_108 [label="o.AddAnnotation(''A string 4!'')", span="161-161", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="ConvertUtils.cs"];
m0_109 [label="s = o.Annotation<string>()", span="163-163", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="ConvertUtils.cs"];
m0_111 [label="Uri i = (Uri)o.Annotation(typeof(Uri))", span="166-166", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="ConvertUtils.cs"];
m0_107 [label="Assert.AreEqual(null, s)", span="159-159", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="ConvertUtils.cs"];
m0_110 [label="Assert.AreEqual(''A string 4!'', s)", span="164-164", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="ConvertUtils.cs"];
m0_112 [label="Assert.AreEqual(null, i)", span="167-167", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="ConvertUtils.cs"];
m0_113 [label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", span="149-149", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="ConvertUtils.cs"];
m0_11 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="ConvertUtils.cs"];
m0_12 [label="Entry Newtonsoft.Json.Linq.JToken.Annotation(System.Type)", span="2148-2148", cluster="Newtonsoft.Json.Linq.JToken.Annotation(System.Type)", file="ConvertUtils.cs"];
m0_99 [label="Entry Newtonsoft.Json.Linq.JToken.RemoveAnnotations(System.Type)", span="2294-2294", cluster="Newtonsoft.Json.Linq.JToken.RemoveAnnotations(System.Type)", file="ConvertUtils.cs"];
m0_0 [label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation()", span="14-14", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation()", file="ConvertUtils.cs"];
m0_1 [label="JObject o = new JObject()", span="16-16", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation()", file="ConvertUtils.cs"];
m0_2 [label="o.AddAnnotation(''A string!'')", span="17-17", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation()", file="ConvertUtils.cs"];
m0_3 [label="string s = o.Annotation<string>()", span="19-19", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation()", file="ConvertUtils.cs"];
m0_5 [label="s = (string)o.Annotation(typeof(string))", span="22-22", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation()", file="ConvertUtils.cs"];
m0_4 [label="Assert.AreEqual(''A string!'', s)", span="20-20", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation()", file="ConvertUtils.cs"];
m0_6 [label="Assert.AreEqual(''A string!'', s)", span="23-23", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation()", file="ConvertUtils.cs"];
m0_7 [label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation()", span="14-14", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation()", file="ConvertUtils.cs"];
m0_59 [label="Entry Newtonsoft.Json.Linq.JToken.Annotations<T>()", span="2183-2183", cluster="Newtonsoft.Json.Linq.JToken.Annotations<T>()", file="ConvertUtils.cs"];
m0_61 [label="Entry Newtonsoft.Json.Linq.JToken.Annotations(System.Type)", span="2216-2216", cluster="Newtonsoft.Json.Linq.JToken.Annotations(System.Type)", file="ConvertUtils.cs"];
m0_35 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="ConvertUtils.cs"];
m0_10 [label="Entry Newtonsoft.Json.Linq.JToken.Annotation<T>()", span="2119-2119", cluster="Newtonsoft.Json.Linq.JToken.Annotation<T>()", file="ConvertUtils.cs"];
m0_125 [label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple_NonGeneric()", span="188-188", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple_NonGeneric()", file="ConvertUtils.cs"];
m0_126 [label="JObject o = new JObject()", span="190-190", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple_NonGeneric()", file="ConvertUtils.cs"];
m0_127 [label="o.AddAnnotation(''A string!'')", span="191-191", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple_NonGeneric()", file="ConvertUtils.cs"];
m0_128 [label="o.AddAnnotation(''A string 2!'')", span="192-192", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple_NonGeneric()", file="ConvertUtils.cs"];
m0_129 [label="o.RemoveAnnotations(typeof(string))", span="194-194", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple_NonGeneric()", file="ConvertUtils.cs"];
m0_130 [label="string s = o.Annotation<string>()", span="196-196", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple_NonGeneric()", file="ConvertUtils.cs"];
m0_131 [label="Assert.AreEqual(null, s)", span="197-197", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple_NonGeneric()", file="ConvertUtils.cs"];
m0_132 [label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple_NonGeneric()", span="188-188", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple_NonGeneric()", file="ConvertUtils.cs"];
m0_60 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ConvertUtils.cs"];
m0_13 [label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", span="27-27", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", file="ConvertUtils.cs"];
m0_14 [label="JObject o = new JObject()", span="29-29", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", file="ConvertUtils.cs"];
m0_15 [label="o.AddAnnotation(''A string!'')", span="30-30", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", file="ConvertUtils.cs"];
m0_16 [label="o.AddAnnotation(''Another string!'')", span="31-31", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", file="ConvertUtils.cs"];
m0_17 [label="string s = o.Annotation<string>()", span="33-33", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", file="ConvertUtils.cs"];
m0_19 [label="s = (string)o.Annotation(typeof(string))", span="36-36", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", file="ConvertUtils.cs"];
m0_18 [label="Assert.AreEqual(''A string!'', s)", span="34-34", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", file="ConvertUtils.cs"];
m0_20 [label="Assert.AreEqual(''A string!'', s)", span="37-37", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", file="ConvertUtils.cs"];
m0_21 [label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", span="27-27", cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", file="ConvertUtils.cs"];
m2_1512 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="DateTimeParser.cs"];
m2_3178 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="DateTimeParser.cs"];
m2_3134 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.NewEmployee()", span="7317-7317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.NewEmployee()", file="DateTimeParser.cs"];
m2_616 [label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="DateTimeParser.cs"];
m2_1264 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="2901-2901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="DateTimeParser.cs"];
m2_1265 [label="return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="2903-2903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="DateTimeParser.cs"];
m2_1266 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="2901-2901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="DateTimeParser.cs"];
m2_1725 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", span="3887-3887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="DateTimeParser.cs"];
m2_1726 [label="Employee joe = new Employee()", span="3889-3889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="DateTimeParser.cs"];
m2_1727 [label="joe.Name = ''Joe Employee''", span="3890-3890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="DateTimeParser.cs"];
m2_1730 [label="joe.Manager = mike", span="3894-3894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="DateTimeParser.cs"];
m2_1732 [label="string json = JsonConvert.SerializeObject(new[] { joe, mike }, Formatting.Indented)", span="3897-3897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="DateTimeParser.cs"];
m2_1728 [label="Employee mike = new Employee()", span="3891-3891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="DateTimeParser.cs"];
m2_1729 [label="mike.Name = ''Mike Manager''", span="3892-3892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="DateTimeParser.cs"];
m2_1731 [label="mike.Manager = mike", span="3895-3895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="DateTimeParser.cs"];
m2_1733 [label="Console.WriteLine(json)", span="3910-3910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="DateTimeParser.cs"];
m2_1734 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", span="3887-3887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="DateTimeParser.cs"];
m2_1787 [label="Entry System.Console.WriteLine(string, object)", span="0-0", cluster="System.Console.WriteLine(string, object)", file="DateTimeParser.cs"];
m2_1222 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", span="2751-2751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", file="DateTimeParser.cs"];
m2_760 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="1605-1605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="DateTimeParser.cs"];
m2_761 [label="_name = name", span="1607-1607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="DateTimeParser.cs"];
m2_762 [label="Age = age", span="1608-1608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="DateTimeParser.cs"];
m2_763 [label="Rank = rank", span="1609-1609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="DateTimeParser.cs"];
m2_764 [label="Title = title", span="1610-1610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="DateTimeParser.cs"];
m2_765 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="1605-1605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="DateTimeParser.cs"];
m2_659 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="DateTimeParser.cs"];
m2_2803 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="393-393", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="DateTimeParser.cs"];
m2_1513 [label="Entry Unk.LoadXml", span="", cluster="Unk.LoadXml", file="DateTimeParser.cs"];
m2_308 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="504-504", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="DateTimeParser.cs"];
m2_1356 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="DateTimeParser.cs"];
m2_1531 [label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="766-766", cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="DateTimeParser.cs"];
m2_2494 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="410-410", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="DateTimeParser.cs"];
m2_420 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="DateTimeParser.cs"];
m2_850 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="1839-1839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="DateTimeParser.cs"];
m2_851 [label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="1841-1841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="DateTimeParser.cs"];
m2_852 [label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="1843-1843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="DateTimeParser.cs"];
m2_853 [label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="1845-1845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="DateTimeParser.cs"];
m2_854 [label="Assert.AreEqual(''Admin'', r.RoleName)", span="1846-1846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="DateTimeParser.cs"];
m2_855 [label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="1847-1847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="DateTimeParser.cs"];
m2_856 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="1839-1839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="DateTimeParser.cs"];
m2_818 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="325-325", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="DateTimeParser.cs"];
m2_3180 [label="Entry Newtonsoft.Json.Tests.Serialization.TestComponent.TestComponent()", span="7675-7675", cluster="Newtonsoft.Json.Tests.Serialization.TestComponent.TestComponent()", file="DateTimeParser.cs"];
m2_3181 [label="Exit Newtonsoft.Json.Tests.Serialization.TestComponent.TestComponent()", span="7675-7675", cluster="Newtonsoft.Json.Tests.Serialization.TestComponent.TestComponent()", file="DateTimeParser.cs"];
m2_57 [label="start + 2 < _end\r\n                        && Parse2Digit(start + Lz_, out ZoneHour)\r\n                        && ZoneHour <= 99", span="180-182", cluster="Newtonsoft.Json.Utilities.DateTimeParser.ParseZone(int)", file="DateTimeParser.cs", color=green, community=2];
m2_1605 [label="Entry Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", file="DateTimeParser.cs"];
m2_28 [label="Entry Newtonsoft.Json.Utilities.DateTimeParser.Parse4Digit(int, out int)", span="227-227", cluster="Newtonsoft.Json.Utilities.DateTimeParser.Parse4Digit(int, out int)", file="DateTimeParser.cs"];
m2_1191 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="2674-2674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DateTimeParser.cs"];
m2_1192 [label=initial, span="2676-2676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DateTimeParser.cs"];
m2_1193 [label="Add(pair.Key, pair.Value)", span="2678-2678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DateTimeParser.cs"];
m2_1194 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="2674-2674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DateTimeParser.cs"];
m2_1668 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="3780-3780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="DateTimeParser.cs"];
m2_1669 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''JSON reference $ref property must have a string or null value. Path 'Father.$ref', line 5, position 14.'',\r\n        () =>\r\n        {\r\n          //Additional text found in JSON string after finishing deserializing object.\r\n          //Test 1\r\n          var reference = new Dictionary<string, object>();\r\n          reference.Add(''$ref'', 1);\r\n          reference.Add(''$id'', 1);\r\n\r\n          var child = new Dictionary<string, object>();\r\n          child.Add(''_id'', 2);\r\n          child.Add(''Name'', ''Isabell'');\r\n          child.Add(''Father'', reference);\r\n\r\n          var json = JsonConvert.SerializeObject(child, Formatting.Indented);\r\n          JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n        })", span="3782-3799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="DateTimeParser.cs"];
m2_1670 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="3780-3780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="DateTimeParser.cs"];
m2_1568 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", span="3589-3589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="DateTimeParser.cs"];
m2_1569 [label="GenericListTestClass c = new GenericListTestClass()", span="3591-3591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="DateTimeParser.cs"];
m2_1570 [label="c.GenericList.Add(''1'')", span="3592-3592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="DateTimeParser.cs"];
m2_1571 [label="c.GenericList.Add(''2'')", span="3593-3593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="DateTimeParser.cs"];
m2_1572 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3595-3595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="DateTimeParser.cs"];
m2_1573 [label="GenericListTestClass newValue = JsonConvert.DeserializeObject<GenericListTestClass>(json)", span="3597-3597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="DateTimeParser.cs"];
m2_1574 [label="Assert.AreEqual(2, newValue.GenericList.Count)", span="3598-3598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="DateTimeParser.cs"];
m2_1575 [label="Assert.AreEqual(typeof(List<string>), newValue.GenericList.GetType())", span="3599-3599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="DateTimeParser.cs"];
m2_1576 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", span="3589-3589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="DateTimeParser.cs"];
m2_251 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="883-883", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="DateTimeParser.cs"];
m2_1029 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="177-177", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DateTimeParser.cs"];
m2_462 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="947-947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="DateTimeParser.cs"];
m2_463 [label="DateTime testDate = new DateTime(JsonConvert.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="949-949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="DateTimeParser.cs"];
m2_464 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="950-950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="DateTimeParser.cs"];
m2_468 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="960-960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="DateTimeParser.cs"];
m2_469 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="961-961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="DateTimeParser.cs"];
m2_465 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n      {\r\n        DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n      })", span="952-955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="DateTimeParser.cs"];
m2_466 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="956-956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="DateTimeParser.cs"];
m2_467 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="958-958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="DateTimeParser.cs"];
m2_470 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="947-947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="DateTimeParser.cs"];
m2_3024 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", span="6933-6933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="DateTimeParser.cs"];
m2_3025 [label="Event e1 = new Event\r\n        {\r\n          EventName = ''EventName!''\r\n        }", span="6935-6938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="DateTimeParser.cs"];
m2_3026 [label="Event[,] array1 = new [,] { { e1, e1 }, { e1, e1 } }", span="6939-6939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="DateTimeParser.cs"];
m2_3027 [label="IList<Event[,]> values1 = new List<Event[,]>\r\n        {\r\n          array1,\r\n          array1\r\n        }", span="6940-6944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="DateTimeParser.cs"];
m2_3028 [label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\r\n        {\r\n          PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n          Formatting = Formatting.Indented\r\n        })", span="6946-6950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="DateTimeParser.cs"];
m2_3029 [label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$id'''': ''''3'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          },\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          }\r\n        ]\r\n      ]\r\n    },\r\n    {\r\n      ''''$ref'''': ''''2''''\r\n    }\r\n  ]\r\n}'', json)", span="6952-6983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="DateTimeParser.cs"];
m2_3030 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", span="6933-6933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="DateTimeParser.cs"];
m2_933 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="2029-2029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="DateTimeParser.cs"];
m2_934 [label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="2031-2031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="DateTimeParser.cs"];
m2_935 [label="Assert.AreEqual(3, l.Count)", span="2032-2032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="DateTimeParser.cs"];
m2_936 [label="Assert.AreEqual(3.3m, l[0])", span="2034-2034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="DateTimeParser.cs"];
m2_937 [label="Assert.AreEqual(null, l[1])", span="2035-2035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="DateTimeParser.cs"];
m2_938 [label="Assert.AreEqual(1.1m, l[2])", span="2036-2036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="DateTimeParser.cs"];
m2_939 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="2029-2029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="DateTimeParser.cs"];
m2_2402 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="5568-5568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="DateTimeParser.cs"];
m2_2403 [label="IList<decimal> d1 = new List<decimal> { 1.1m }", span="5570-5570", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="DateTimeParser.cs"];
m2_2404 [label="string json = JsonConvert.SerializeObject(d1)", span="5572-5572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="DateTimeParser.cs"];
m2_2406 [label="Assert.AreEqual(d1.Count, d2.Count)", span="5576-5576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="DateTimeParser.cs"];
m2_2407 [label="Assert.AreEqual(d1[0], d2[0])", span="5577-5577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="DateTimeParser.cs"];
m2_2405 [label="IList<decimal> d2 = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="5574-5574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="DateTimeParser.cs"];
m2_2408 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="5568-5568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="DateTimeParser.cs"];
m2_829 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="1771-1771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="DateTimeParser.cs"];
m2_830 [label="var value = new\r\n        {\r\n          bar = new JObject(new JProperty(''baz'', 13))\r\n        }", span="1773-1776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="DateTimeParser.cs"];
m2_831 [label="string json = JsonConvert.SerializeObject(value)", span="1778-1778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="DateTimeParser.cs"];
m2_832 [label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="1780-1780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="DateTimeParser.cs"];
m2_833 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="1771-1771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="DateTimeParser.cs"];
m2_1878 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="4265-4265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="DateTimeParser.cs"];
m2_1879 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="4267-4267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="DateTimeParser.cs"];
m2_1880 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="4268-4268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="DateTimeParser.cs"];
m2_1881 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="4265-4265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="DateTimeParser.cs"];
m2_617 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="1245-1245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DateTimeParser.cs"];
m2_618 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="1247-1247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DateTimeParser.cs"];
m2_619 [label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="1249-1249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DateTimeParser.cs"];
m2_627 [label="Assert.AreEqual(json, after)", span="1260-1260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DateTimeParser.cs"];
m2_620 [label="Assert.AreEqual(''Before!'', aa.Before)", span="1251-1251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DateTimeParser.cs"];
m2_621 [label="Assert.AreEqual(''After!'', aa.After)", span="1252-1252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DateTimeParser.cs"];
m2_622 [label="Assert.AreEqual(4, aa.Coordinates.Length)", span="1253-1253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DateTimeParser.cs"];
m2_623 [label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="1254-1254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DateTimeParser.cs"];
m2_624 [label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="1255-1255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DateTimeParser.cs"];
m2_625 [label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="1256-1256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DateTimeParser.cs"];
m2_626 [label="string after = JsonConvert.SerializeObject(aa)", span="1258-1258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DateTimeParser.cs"];
m2_628 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="1245-1245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DateTimeParser.cs"];
m2_913 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="1996-1996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="DateTimeParser.cs"];
m2_914 [label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="1998-1998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="DateTimeParser.cs"];
m2_915 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Unable to find a constructor to use for type Newtonsoft.Json.Tests.TestObjects.Event. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'sublocation', line 1, position 15.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<TestObjects.Event>(json);\r\n        })", span="2000-2005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="DateTimeParser.cs"];
m2_916 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="1996-1996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="DateTimeParser.cs"];
m2_2628 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", span="6040-6040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", file="DateTimeParser.cs"];
m2_487 [label="Entry System.Convert.ToDateTime(string)", span="0-0", cluster="System.Convert.ToDateTime(string)", file="DateTimeParser.cs"];
m2_827 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="DateTimeParser.cs"];
m2_1357 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="DateTimeParser.cs"];
m2_1647 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", span="3742-3742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="DateTimeParser.cs"];
m2_1648 [label="Movie p = new Movie()", span="3744-3744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="DateTimeParser.cs"];
m2_1649 [label="p.Name = ''Existing,''", span="3745-3745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="DateTimeParser.cs"];
m2_1650 [label="JsonConvert.PopulateObject(''{'Name':'Appended'}'', p, new JsonSerializerSettings\r\n        {\r\n          Converters = new List<JsonConverter> { new StringAppenderConverter() }\r\n        })", span="3747-3750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="DateTimeParser.cs"];
m2_1651 [label="Assert.AreEqual(''Existing,Appended'', p.Name)", span="3752-3752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="DateTimeParser.cs"];
m2_1652 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", span="3742-3742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="DateTimeParser.cs"];
m2_125 [label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="328-328", cluster="Newtonsoft.Json.Linq.JToken.Children()", file="DateTimeParser.cs"];
m2_1946 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", span="4386-4386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", file="DateTimeParser.cs"];
m2_2068 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="4738-4738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="DateTimeParser.cs"];
m2_2069 [label="string json = @''{\r\n  'Name': 'James Hughes',\r\n  'Age': '40',\r\n  'Height': '44.4',\r\n  'Price': '4'\r\n}''", span="4740-4745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="DateTimeParser.cs"];
m2_2070 [label="DeserializeStringConvert p = JsonConvert.DeserializeObject<DeserializeStringConvert>(json)", span="4747-4747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="DateTimeParser.cs"];
m2_2071 [label="Assert.AreEqual(40, p.Age)", span="4748-4748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="DateTimeParser.cs"];
m2_2072 [label="Assert.AreEqual(44.4, p.Height)", span="4749-4749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="DateTimeParser.cs"];
m2_2073 [label="Assert.AreEqual(4m, p.Price)", span="4750-4750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="DateTimeParser.cs"];
m2_2074 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="4738-4738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="DateTimeParser.cs"];
m2_1682 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="3803-3803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DateTimeParser.cs"];
m2_1683 [label="var reference = new Dictionary<string, object>()", span="3805-3805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DateTimeParser.cs"];
m2_1684 [label="reference.Add(''$ref'', null)", span="3806-3806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DateTimeParser.cs"];
m2_1685 [label="reference.Add(''$id'', null)", span="3807-3807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DateTimeParser.cs"];
m2_1686 [label="reference.Add(''blah'', ''blah!'')", span="3808-3808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DateTimeParser.cs"];
m2_1690 [label="child.Add(''Father'', reference)", span="3813-3813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DateTimeParser.cs"];
m2_1687 [label="var child = new Dictionary<string, object>()", span="3810-3810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DateTimeParser.cs"];
m2_1688 [label="child.Add(''_id'', 2)", span="3811-3811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DateTimeParser.cs"];
m2_1689 [label="child.Add(''Name'', ''Isabell'')", span="3812-3812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DateTimeParser.cs"];
m2_1691 [label="var json = JsonConvert.SerializeObject(child)", span="3815-3815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DateTimeParser.cs"];
m2_1692 [label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="3816-3816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DateTimeParser.cs"];
m2_1693 [label="Assert.AreEqual(3, result.Count)", span="3818-3818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DateTimeParser.cs"];
m2_1694 [label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="3819-3819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DateTimeParser.cs"];
m2_1695 [label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="3820-3820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DateTimeParser.cs"];
m2_1696 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="3803-3803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DateTimeParser.cs"];
m2_276 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="615-615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="DateTimeParser.cs"];
m2_277 [label="string json = JsonConvert.SerializeObject(null)", span="617-617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="DateTimeParser.cs"];
m2_278 [label="Assert.AreEqual(''null'', json)", span="618-618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="DateTimeParser.cs"];
m2_279 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="615-615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="DateTimeParser.cs"];
m2_2613 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="5982-5982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DateTimeParser.cs"];
m2_2614 [label="Product product = new Product()", span="5984-5984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DateTimeParser.cs"];
m2_2615 [label="product.Name = ''Apple''", span="5985-5985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DateTimeParser.cs"];
m2_2616 [label="product.ExpiryDate = new DateTime(2012, 4, 1)", span="5986-5986", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DateTimeParser.cs"];
m2_2617 [label="product.Price = 3.99M", span="5987-5987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DateTimeParser.cs"];
m2_2618 [label="product.Sizes = new[] { ''Small'', ''Medium'', ''Large'' }", span="5988-5988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DateTimeParser.cs"];
m2_2619 [label="string json = JsonConvert.SerializeObject(product)", span="5990-5990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DateTimeParser.cs"];
m2_2620 [label="string metroJson = JsonConvert.SerializeObject(product, new JsonSerializerSettings\r\n        {\r\n          ContractResolver = new MetroPropertyNameResolver(),\r\n          Converters = { new MetroStringConverter() },\r\n          Formatting = Formatting.Indented\r\n        })", span="5998-6003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DateTimeParser.cs"];
m2_2621 [label="Assert.AreEqual(@''{\r\n  '''':::NAME:::'''': '''':::APPLE:::'''',\r\n  '''':::EXPIRYDATE:::'''': ''''2012-04-01T00:00:00'''',\r\n  '''':::PRICE:::'''': 3.99,\r\n  '''':::SIZES:::'''': [\r\n    '''':::SMALL:::'''',\r\n    '''':::MEDIUM:::'''',\r\n    '''':::LARGE:::''''\r\n  ]\r\n}'', metroJson)", span="6004-6013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DateTimeParser.cs"];
m2_2622 [label="Color[] colors = new[] { Color.Blue, Color.Red, Color.Yellow, Color.Green, Color.Black, Color.Brown }", span="6021-6021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DateTimeParser.cs"];
m2_2623 [label="string json2 = JsonConvert.SerializeObject(colors, new JsonSerializerSettings\r\n      {\r\n        ContractResolver = new MetroPropertyNameResolver(),\r\n        Converters = { new MetroStringConverter(), new MetroColorConverter() },\r\n        Formatting = Formatting.Indented\r\n      })", span="6023-6028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DateTimeParser.cs"];
m2_2624 [label="Assert.AreEqual(@''[\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::BLACK:::'''',\r\n  '''':::GRAY:::''''\r\n]'', json2)", span="6030-6037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DateTimeParser.cs"];
m2_2625 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="5982-5982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DateTimeParser.cs"];
m2_608 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="1232-1232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="DateTimeParser.cs"];
m2_609 [label="JaggedArray aa = new JaggedArray()", span="1234-1234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="DateTimeParser.cs"];
m2_610 [label="aa.Before = ''Before!''", span="1235-1235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="DateTimeParser.cs"];
m2_611 [label="aa.After = ''After!''", span="1236-1236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="DateTimeParser.cs"];
m2_612 [label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="1237-1237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="DateTimeParser.cs"];
m2_613 [label="string json = JsonConvert.SerializeObject(aa)", span="1239-1239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="DateTimeParser.cs"];
m2_614 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="1241-1241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="DateTimeParser.cs"];
m2_615 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="1232-1232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="DateTimeParser.cs"];
m2_2487 [label="Entry Newtonsoft.Json.Tests.Serialization.Item.Item()", span="7571-7571", cluster="Newtonsoft.Json.Tests.Serialization.Item.Item()", file="DateTimeParser.cs"];
m2_2514 [label="Entry Newtonsoft.Json.Tests.Serialization.WidgetId1.WidgetId1()", span="7531-7531", cluster="Newtonsoft.Json.Tests.Serialization.WidgetId1.WidgetId1()", file="DateTimeParser.cs"];
m2_1795 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="4071-4071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="DateTimeParser.cs"];
m2_1796 [label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="4073-4073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="DateTimeParser.cs"];
m2_1797 [label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="4075-4075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="DateTimeParser.cs"];
m2_1798 [label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="4076-4076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="DateTimeParser.cs"];
m2_1799 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4078-4078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="DateTimeParser.cs"];
m2_1800 [label="Assert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="4080-4083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="DateTimeParser.cs"];
m2_1801 [label="Dictionary<DictionaryKey, string> newDictionary =\r\n        JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="4085-4086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="DateTimeParser.cs"];
m2_1802 [label="Assert.AreEqual(2, newDictionary.Count)", span="4088-4088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="DateTimeParser.cs"];
m2_1803 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="4071-4071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="DateTimeParser.cs"];
m2_2305 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="399-399", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="DateTimeParser.cs"];
m2_488 [label="Entry System.DateTime.ToUniversalTime()", span="0-0", cluster="System.DateTime.ToUniversalTime()", file="DateTimeParser.cs"];
m2_1184 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="2660-2660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="DateTimeParser.cs"];
m2_1185 [label="string json = ''{key1:'value',key2:'value',key3:'value'}''", span="2662-2662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="DateTimeParser.cs"];
m2_1186 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unable to find a default constructor to use for type Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+DictionaryWithNoDefaultConstructor. Path 'key1', line 1, position 6.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json);\r\n        })", span="2664-2669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="DateTimeParser.cs"];
m2_1187 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="2660-2660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="DateTimeParser.cs"];
m2_156 [label="Entry Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", file="DateTimeParser.cs"];
m2_2362 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="5500-5500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="DateTimeParser.cs"];
m2_2363 [label="string input = @''http://tes/?a=b\\c&d=e\''", span="5502-5502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="DateTimeParser.cs"];
m2_2364 [label="Uri uri = new Uri(input)", span="5503-5503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="DateTimeParser.cs"];
m2_2365 [label="string json = JsonConvert.SerializeObject(uri)", span="5504-5504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="DateTimeParser.cs"];
m2_2367 [label="Assert.AreEqual(uri, output)", span="5507-5507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="DateTimeParser.cs"];
m2_2366 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="5505-5505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="DateTimeParser.cs"];
m2_2368 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="5500-5500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="DateTimeParser.cs"];
m2_1272 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="2911-2911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="DateTimeParser.cs"];
m2_1273 [label="return _innerDictionary.TryGetValue(key, out value);", span="2913-2913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="DateTimeParser.cs"];
m2_1274 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="2911-2911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="DateTimeParser.cs"];
m2_2210 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="5179-5179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="DateTimeParser.cs"];
m2_2211 [label="return _readonlyString;", span="5181-5181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="DateTimeParser.cs"];
m2_2212 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="5179-5179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="DateTimeParser.cs"];
m2_1634 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.StringListAppenderConverter()", span="3673-3673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.StringListAppenderConverter()", file="DateTimeParser.cs"];
m2_2612 [label="Entry Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", span="7510-7510", cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", file="DateTimeParser.cs"];
m2_3155 [label="return new PersonWithPrivateConstructor();", span="7512-7512", cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", file="DateTimeParser.cs"];
m2_3156 [label="Exit Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", span="7510-7510", cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", file="DateTimeParser.cs"];
m2_1360 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="DateTimeParser.cs"];
m2_2881 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", span="6611-6611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="DateTimeParser.cs"];
m2_2882 [label="Array3D aa = new Array3D()", span="6613-6613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="DateTimeParser.cs"];
m2_2883 [label="aa.Before = ''Before!''", span="6614-6614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="DateTimeParser.cs"];
m2_2884 [label="aa.After = ''After!''", span="6615-6615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="DateTimeParser.cs"];
m2_2885 [label="aa.Coordinates = new[, ,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { 2, 2, 2 } } }", span="6616-6616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="DateTimeParser.cs"];
m2_2886 [label="string json = JsonConvert.SerializeObject(aa)", span="6618-6618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="DateTimeParser.cs"];
m2_2887 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}'', json)", span="6620-6620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="DateTimeParser.cs"];
m2_2888 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", span="6611-6611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="DateTimeParser.cs"];
m2_2416 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="5594-5594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="DateTimeParser.cs"];
m2_2417 [label="IList<byte[]> d1 = new List<byte[]> { null }", span="5596-5596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="DateTimeParser.cs"];
m2_2418 [label="string json = JsonConvert.SerializeObject(d1)", span="5598-5598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="DateTimeParser.cs"];
m2_2420 [label="Assert.AreEqual(d1.Count, d2.Count)", span="5602-5602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="DateTimeParser.cs"];
m2_2421 [label="Assert.AreEqual(d1[0], d2[0])", span="5603-5603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="DateTimeParser.cs"];
m2_2419 [label="IList<byte[]> d2 = JsonConvert.DeserializeObject<IList<byte[]>>(json)", span="5600-5600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="DateTimeParser.cs"];
m2_2422 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="5594-5594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="DateTimeParser.cs"];
m2_2769 [label="Entry Newtonsoft.Json.Tests.Serialization.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", span="7762-7762", cluster="Newtonsoft.Json.Tests.Serialization.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", file="DateTimeParser.cs"];
m2_1157 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="2571-2571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="DateTimeParser.cs"];
m2_1158 [label="this._dict1.Add(item.Key, item)", span="2573-2573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="DateTimeParser.cs"];
m2_1159 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="2571-2571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="DateTimeParser.cs"];
m2_2641 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="6055-6055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_2642 [label="return objectType == typeof(Color);", span="6057-6057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_2643 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="6055-6055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_1908 [label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0", cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="DateTimeParser.cs"];
m2_237 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DateTimeParser.cs"];
m2_2021 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="4613-4613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="DateTimeParser.cs"];
m2_2022 [label="NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>(''{}'')", span="4615-4615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="DateTimeParser.cs"];
m2_2023 [label="Assert.AreEqual(''NonPublic'', c.Constructor)", span="4616-4616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="DateTimeParser.cs"];
m2_2024 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="4613-4613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="DateTimeParser.cs"];
m2_2869 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="6590-6590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="DateTimeParser.cs"];
m2_2870 [label="IgnoreSerializableAttribute = false", span="6592-6592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="DateTimeParser.cs"];
m2_2871 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="6590-6590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="DateTimeParser.cs"];
m2_1766 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="DateTimeParser.cs"];
m2_835 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="192-192", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="DateTimeParser.cs"];
m2_1786 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FamilyDetails.FamilyDetails()", span="4010-4010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FamilyDetails.FamilyDetails()", file="DateTimeParser.cs"];
m2_1918 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="4351-4351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="DateTimeParser.cs"];
m2_1919 [label="string json = ''{Amount:123456789876543.21}''", span="4353-4353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="DateTimeParser.cs"];
m2_1920 [label="Invoice i = JsonConvert.DeserializeObject<Invoice>(json)", span="4354-4354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="DateTimeParser.cs"];
m2_1921 [label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="4355-4355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="DateTimeParser.cs"];
m2_1922 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="4351-4351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="DateTimeParser.cs"];
m2_1858 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="4230-4230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="DateTimeParser.cs"];
m2_1859 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n        {\r\n          Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n        })", span="4232-4235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="DateTimeParser.cs"];
m2_1860 [label="Assert.AreEqual(''{\''Offset\'':\''2000-01-01T00:00:00+06:00\''}'', serializeObject)", span="4237-4237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="DateTimeParser.cs"];
m2_1861 [label="var deserializeObject = JsonConvert.DeserializeObject<TimeZoneOffsetObject>(serializeObject)", span="4238-4238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="DateTimeParser.cs"];
m2_1862 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="4239-4239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="DateTimeParser.cs"];
m2_1863 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="4240-4240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="DateTimeParser.cs"];
m2_1864 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="4230-4230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="DateTimeParser.cs"];
m2_2111 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="4876-4876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="DateTimeParser.cs"];
m2_2112 [label="string json = JsonConvert.SerializeObject(new EnumerableArrayPropertyClass())", span="4878-4878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="DateTimeParser.cs"];
m2_2113 [label="JsonConvert.DeserializeObject<EnumerableArrayPropertyClass>(json)", span="4879-4879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="DateTimeParser.cs"];
m2_2114 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="4876-4876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="DateTimeParser.cs"];
m2_2971 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", span="6848-6848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="DateTimeParser.cs"];
m2_2972 [label="Array3D aa = new Array3D()", span="6850-6850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="DateTimeParser.cs"];
m2_2973 [label="aa.Before = ''Before!''", span="6851-6851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="DateTimeParser.cs"];
m2_2974 [label="aa.After = ''After!''", span="6852-6852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="DateTimeParser.cs"];
m2_2975 [label="aa.Coordinates = new int[0, 0, 0]", span="6853-6853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="DateTimeParser.cs"];
m2_2976 [label="string json = JsonConvert.SerializeObject(aa)", span="6855-6855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="DateTimeParser.cs"];
m2_2977 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}'', json)", span="6857-6857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="DateTimeParser.cs"];
m2_2978 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", span="6848-6848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="DateTimeParser.cs"];
m2_1947 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", span="4374-4374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", file="DateTimeParser.cs"];
m2_3004 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", span="6899-6899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="DateTimeParser.cs"];
m2_3005 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':null,''''After'''':''''After!''''}''", span="6901-6901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="DateTimeParser.cs"];
m2_3006 [label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="6903-6903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="DateTimeParser.cs"];
m2_3011 [label="Assert.AreEqual(json, after)", span="6911-6911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="DateTimeParser.cs"];
m2_3007 [label="Assert.AreEqual(''Before!'', aa.Before)", span="6905-6905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="DateTimeParser.cs"];
m2_3008 [label="Assert.AreEqual(''After!'', aa.After)", span="6906-6906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="DateTimeParser.cs"];
m2_3009 [label="Assert.AreEqual(null, aa.Coordinates)", span="6907-6907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="DateTimeParser.cs"];
m2_3010 [label="string after = JsonConvert.SerializeObject(aa)", span="6909-6909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="DateTimeParser.cs"];
m2_3012 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", span="6899-6899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="DateTimeParser.cs"];
m2_2930 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", span="6788-6788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", file="DateTimeParser.cs"];
m2_2931 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1],[2,1],[2,2]],''''After'''':''''After!''''}''", span="6790-6790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", file="DateTimeParser.cs"];
m2_2932 [label="ExceptionAssert.Throws<Exception>(\r\n        ''Cannot deserialize non-cubical array as multidimensional array.'',\r\n        () => JsonConvert.DeserializeObject<Array2D>(json))", span="6792-6794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", file="DateTimeParser.cs"];
m2_2933 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", span="6788-6788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", file="DateTimeParser.cs"];
m2_325 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="DateTimeParser.cs"];
m2_2085 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="4773-4773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="DateTimeParser.cs"];
m2_2086 [label="MultiIndexSuper e = new MultiIndexSuper()", span="4775-4775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="DateTimeParser.cs"];
m2_2087 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="4777-4777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="DateTimeParser.cs"];
m2_2088 [label="Assert.AreEqual(@''{}'', json)", span="4779-4779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="DateTimeParser.cs"];
m2_2089 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="4773-4773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="DateTimeParser.cs"];
m2_1225 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="2809-2809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DateTimeParser.cs"];
m2_1226 [label="dictionary == null", span="2811-2811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DateTimeParser.cs"];
m2_1228 [label=dictionary, span="2816-2816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DateTimeParser.cs"];
m2_1227 [label="throw new ArgumentNullException(''dictionary'');", span="2813-2813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DateTimeParser.cs"];
m2_1229 [label="_innerDictionary.Add(entry.Key, entry.Value)", span="2818-2818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DateTimeParser.cs"];
m2_1230 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="2809-2809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DateTimeParser.cs"];
m2_2321 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", span="5439-5439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2322 [label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, { ''''Value'''': [ ''''3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="5441-5441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2323 [label="IList<KeyValuePair<string, IList<string>>> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="5443-5443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2324 [label="Assert.AreEqual(2, values.Count)", span="5445-5445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2325 [label="Assert.AreEqual(''aaa'', values[0].Key)", span="5446-5446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2326 [label="Assert.AreEqual(2, values[0].Value.Count)", span="5447-5447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2327 [label="Assert.AreEqual(''1'', values[0].Value[0])", span="5448-5448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2328 [label="Assert.AreEqual(''2'', values[0].Value[1])", span="5449-5449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2329 [label="Assert.AreEqual(''bbb'', values[1].Key)", span="5450-5450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2330 [label="Assert.AreEqual(2, values[1].Value.Count)", span="5451-5451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2331 [label="Assert.AreEqual(''3'', values[1].Value[0])", span="5452-5452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2332 [label="Assert.AreEqual(''4'', values[1].Value[1])", span="5453-5453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2333 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", span="5439-5439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2937 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", span="6798-6798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="DateTimeParser.cs"];
m2_2938 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="6800-6800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="DateTimeParser.cs"];
m2_2939 [label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="6802-6802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="DateTimeParser.cs"];
m2_2948 [label="Assert.AreEqual(json, after)", span="6814-6814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="DateTimeParser.cs"];
m2_2940 [label="Assert.AreEqual(''Before!'', aa.Before)", span="6804-6804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="DateTimeParser.cs"];
m2_2941 [label="Assert.AreEqual(''After!'', aa.After)", span="6805-6805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="DateTimeParser.cs"];
m2_2942 [label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="6806-6806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="DateTimeParser.cs"];
m2_2943 [label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="6807-6807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="DateTimeParser.cs"];
m2_2944 [label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="6808-6808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="DateTimeParser.cs"];
m2_2945 [label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="6809-6809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="DateTimeParser.cs"];
m2_2946 [label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="6810-6810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="DateTimeParser.cs"];
m2_2947 [label="string after = JsonConvert.SerializeObject(aa)", span="6812-6812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="DateTimeParser.cs"];
m2_2949 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", span="6798-6798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="DateTimeParser.cs"];
m2_2179 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="5095-5095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="DateTimeParser.cs"];
m2_2180 [label="throw new NotImplementedException();", span="5097-5097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="DateTimeParser.cs"];
m2_2181 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="5095-5095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="DateTimeParser.cs"];
m2_579 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="1162-1162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="DateTimeParser.cs"];
m2_580 [label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="1164-1169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="DateTimeParser.cs"];
m2_581 [label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1171-1171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="DateTimeParser.cs"];
m2_582 [label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="1173-1173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="DateTimeParser.cs"];
m2_583 [label="Assert.AreEqual(null, c.MiddleName)", span="1174-1174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="DateTimeParser.cs"];
m2_584 [label="Assert.AreEqual(null, c.LastName)", span="1175-1175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="DateTimeParser.cs"];
m2_585 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="1162-1162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="DateTimeParser.cs"];
m2_2636 [label="Entry Unk.WriteValue", span="", cluster="Unk.WriteValue", file="DateTimeParser.cs"];
m2_2837 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="6477-6477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="DateTimeParser.cs"];
m2_2838 [label="string json =\r\n        JsonConvert.SerializeObject(new KeyValuePair<int, string>(123, ''test value''), Formatting.Indented, new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n          })", span="6479-6483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="DateTimeParser.cs"];
m2_2839 [label="Assert.AreEqual(@''{\r\n  ''''key'''': 123,\r\n  ''''value'''': ''''test value''''\r\n}'', json)", span="6485-6488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="DateTimeParser.cs"];
m2_2840 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="6477-6477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="DateTimeParser.cs"];
m2_1548 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3551-3551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1549 [label="throw new NotImplementedException();", span="3553-3553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1550 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3551-3551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1091 [label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="DateTimeParser.cs"];
m2_2817 [label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0", cluster="System.Uri.Uri(string, System.UriKind)", file="DateTimeParser.cs"];
m2_1565 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", span="3582-3582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", file="DateTimeParser.cs"];
m2_1566 [label="GenericList = new List<string>()", span="3584-3584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", file="DateTimeParser.cs"];
m2_1567 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", span="3582-3582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", file="DateTimeParser.cs"];
m2_968 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="2103-2103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="DateTimeParser.cs"];
m2_969 [label="string json = @''[]''", span="2105-2105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="DateTimeParser.cs"];
m2_970 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.Linq.DynamicDictionary' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<DynamicDictionary>(json);\r\n        })", span="2107-2114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="DateTimeParser.cs"];
m2_971 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="2103-2103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="DateTimeParser.cs"];
m2_3199 [label="Entry Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", span="7738-7738", cluster="Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", file="DateTimeParser.cs"];
m2_3200 [label="return '':::'' + propertyName.ToUpper(CultureInfo.InvariantCulture) + '':::'';", span="7741-7741", cluster="Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", file="DateTimeParser.cs"];
m2_3201 [label="Exit Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", span="7738-7738", cluster="Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", file="DateTimeParser.cs"];
m2_428 [label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="DateTimeParser.cs"];
m2_2890 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", span="6624-6624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="DateTimeParser.cs"];
m2_2891 [label="Array3DWithConverter aa = new Array3DWithConverter()", span="6626-6626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="DateTimeParser.cs"];
m2_2892 [label="aa.Before = ''Before!''", span="6627-6627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="DateTimeParser.cs"];
m2_2893 [label="aa.After = ''After!''", span="6628-6628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="DateTimeParser.cs"];
m2_2894 [label="aa.Coordinates = new[, ,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { 2, 2, 2 } } }", span="6629-6629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="DateTimeParser.cs"];
m2_2895 [label="string json = JsonConvert.SerializeObject(aa, Formatting.Indented)", span="6631-6631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="DateTimeParser.cs"];
m2_2896 [label="Assert.AreEqual(@''{\r\n  ''''Before'''': ''''Before!'''',\r\n  ''''Coordinates'''': [\r\n    [\r\n      [\r\n        1.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        1.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ]\r\n  ],\r\n  ''''After'''': ''''After!''''\r\n}'', json)", span="6633-6686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="DateTimeParser.cs"];
m2_2897 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", span="6624-6624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="DateTimeParser.cs"];
m2_1241 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="DateTimeParser.cs"];
m2_1289 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="2959-2959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="DateTimeParser.cs"];
m2_1290 [label="_stringValue = stringValue", span="2961-2961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="DateTimeParser.cs"];
m2_1291 [label="_intValue = intValue", span="2962-2962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="DateTimeParser.cs"];
m2_1292 [label="_dateTimeOffsetValue = dateTimeOffset", span="2963-2963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="DateTimeParser.cs"];
m2_1293 [label="_personValue = personValue", span="2964-2964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="DateTimeParser.cs"];
m2_1294 [label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="2965-2965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="DateTimeParser.cs"];
m2_1295 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="2959-2959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="DateTimeParser.cs"];
m2_1232 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="2853-2853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="DateTimeParser.cs"];
m2_1233 [label="((IDictionary<string, T>)_innerDictionary).Add(item)", span="2855-2855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="DateTimeParser.cs"];
m2_1234 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="2853-2853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="DateTimeParser.cs"];
m2_1910 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="4337-4337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="DateTimeParser.cs"];
m2_1911 [label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="4339-4339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="DateTimeParser.cs"];
m2_1912 [label="Assert.AreEqual(123456789876543.21m, d)", span="4340-4340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="DateTimeParser.cs"];
m2_1913 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="4337-4337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="DateTimeParser.cs"];
m2_2127 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", span="4923-4923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", file="DateTimeParser.cs"];
m2_1708 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", span="3850-3850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="DateTimeParser.cs"];
m2_1709 [label="ShouldSerializeTestClass c = new ShouldSerializeTestClass()", span="3852-3852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="DateTimeParser.cs"];
m2_1710 [label="c.Name = ''James''", span="3853-3853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="DateTimeParser.cs"];
m2_1711 [label="c.Age = 27", span="3854-3854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="DateTimeParser.cs"];
m2_1712 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3856-3856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="DateTimeParser.cs"];
m2_1714 [label="c._shouldSerializeName = true", span="3862-3862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="DateTimeParser.cs"];
m2_1715 [label="json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3863-3863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="DateTimeParser.cs"];
m2_1713 [label="Assert.AreEqual(@''{\r\n  ''''Age'''': 27\r\n}'', json)", span="3858-3860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="DateTimeParser.cs"];
m2_1716 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James'''',\r\n  ''''Age'''': 27\r\n}'', json)", span="3865-3868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="DateTimeParser.cs"];
m2_1717 [label="ShouldSerializeTestClass deserialized = JsonConvert.DeserializeObject<ShouldSerializeTestClass>(json)", span="3870-3870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="DateTimeParser.cs"];
m2_1718 [label="Assert.AreEqual(''James'', deserialized.Name)", span="3871-3871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="DateTimeParser.cs"];
m2_1719 [label="Assert.AreEqual(27, deserialized.Age)", span="3872-3872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="DateTimeParser.cs"];
m2_1720 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", span="3850-3850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="DateTimeParser.cs"];
m2_3187 [label="Entry string.ToUpper(System.Globalization.CultureInfo)", span="0-0", cluster="string.ToUpper(System.Globalization.CultureInfo)", file="DateTimeParser.cs"];
m2_716 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="766-766", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="DateTimeParser.cs"];
m2_1484 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="3434-3434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DateTimeParser.cs"];
m2_1485 [label="XNodeTestObject testObject = new XNodeTestObject()", span="3436-3436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DateTimeParser.cs"];
m2_1486 [label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="3437-3437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DateTimeParser.cs"];
m2_1487 [label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="3438-3438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DateTimeParser.cs"];
m2_1488 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="3440-3440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DateTimeParser.cs"];
m2_1492 [label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="3456-3456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DateTimeParser.cs"];
m2_1493 [label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="3457-3457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DateTimeParser.cs"];
m2_1489 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="3441-3452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DateTimeParser.cs"];
m2_1490 [label="Assert.AreEqual(expected, json)", span="3453-3453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DateTimeParser.cs"];
m2_1491 [label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="3455-3455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DateTimeParser.cs"];
m2_1494 [label="Assert.IsNull(newTestObject.Element.Parent)", span="3459-3459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DateTimeParser.cs"];
m2_1495 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="3434-3434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DateTimeParser.cs"];
m2_3013 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", span="6915-6915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="DateTimeParser.cs"];
m2_3014 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[]],''''After'''':''''After!''''}''", span="6917-6917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="DateTimeParser.cs"];
m2_3015 [label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="6919-6919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="DateTimeParser.cs"];
m2_3022 [label="Assert.AreEqual(json, after)", span="6929-6929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="DateTimeParser.cs"];
m2_3016 [label="Assert.AreEqual(''Before!'', aa.Before)", span="6921-6921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="DateTimeParser.cs"];
m2_3017 [label="Assert.AreEqual(''After!'', aa.After)", span="6922-6922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="DateTimeParser.cs"];
m2_3018 [label="Assert.AreEqual(1, aa.Coordinates.GetLength(0))", span="6923-6923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="DateTimeParser.cs"];
m2_3019 [label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="6924-6924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="DateTimeParser.cs"];
m2_3020 [label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="6925-6925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="DateTimeParser.cs"];
m2_3021 [label="string after = JsonConvert.SerializeObject(aa)", span="6927-6927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="DateTimeParser.cs"];
m2_3023 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", span="6915-6915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="DateTimeParser.cs"];
m2_80 [label="num = (((((digit1 * 10) + digit2) * 10) + digit3) * 10) + digit4", span="240-240", cluster="Newtonsoft.Json.Utilities.DateTimeParser.Parse4Digit(int, out int)", file="DateTimeParser.cs"];
m2_81 [label="return true;", span="241-241", cluster="Newtonsoft.Json.Utilities.DateTimeParser.Parse4Digit(int, out int)", color=red, community=0, file="DateTimeParser.cs"];
m2_82 [label="num = 0", span="244-244", cluster="Newtonsoft.Json.Utilities.DateTimeParser.Parse4Digit(int, out int)", file="DateTimeParser.cs"];
m2_83 [label="return false;", span="245-245", cluster="Newtonsoft.Json.Utilities.DateTimeParser.Parse4Digit(int, out int)", file="DateTimeParser.cs"];
m2_84 [label="Exit Newtonsoft.Json.Utilities.DateTimeParser.Parse4Digit(int, out int)", span="227-227", cluster="Newtonsoft.Json.Utilities.DateTimeParser.Parse4Digit(int, out int)", file="DateTimeParser.cs"];
m2_85 [label="start + 1 < _end", span="250-250", cluster="Newtonsoft.Json.Utilities.DateTimeParser.Parse2Digit(int, out int)", file="DateTimeParser.cs", color=green, community=0];
m2_1238 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="2863-2863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="DateTimeParser.cs"];
m2_1239 [label="_innerDictionary.Clear()", span="2865-2865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="DateTimeParser.cs"];
m2_1240 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="2863-2863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="DateTimeParser.cs"];
m2_71 [label="start += 2", span="217-217", cluster="Newtonsoft.Json.Utilities.DateTimeParser.ParseZone(int)", file="DateTimeParser.cs"];
m2_2090 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", span="4782-4782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", file="DateTimeParser.cs"];
m2_489 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="1000-1000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="DateTimeParser.cs"];
m2_490 [label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="1002-1002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="DateTimeParser.cs"];
m2_491 [label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="1003-1003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="DateTimeParser.cs"];
m2_492 [label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="1004-1004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="DateTimeParser.cs"];
m2_493 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="1006-1006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="DateTimeParser.cs"];
m2_494 [label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="1007-1007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="DateTimeParser.cs"];
m2_495 [label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="1009-1009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="DateTimeParser.cs"];
m2_496 [label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="1011-1011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="DateTimeParser.cs"];
m2_497 [label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="1012-1012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="DateTimeParser.cs"];
m2_498 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="1000-1000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="DateTimeParser.cs"];
m2_1030 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="2227-2227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="DateTimeParser.cs"];
m2_1031 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error setting value to 'ReadTimeout' on 'System.IO.MemoryStream'.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          });\r\n        })", span="2229-2242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="DateTimeParser.cs"];
m2_1032 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="2227-2227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="DateTimeParser.cs"];
m2_1953 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="4429-4429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="DateTimeParser.cs"];
m2_1954 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="4429-4429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="DateTimeParser.cs"];
m2_1426 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="3401-3401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DateTimeParser.cs"];
m2_1473 [label="BB_field1 = g", span="3404-3404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DateTimeParser.cs"];
m2_1474 [label="BB_field2 = g", span="3405-3405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DateTimeParser.cs"];
m2_1475 [label="BB_property1 = g", span="3406-3406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DateTimeParser.cs"];
m2_1476 [label="BB_property2 = g", span="3407-3407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DateTimeParser.cs"];
m2_1477 [label="BB_property3 = g", span="3408-3408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DateTimeParser.cs"];
m2_1478 [label="BB_property4 = g", span="3409-3409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DateTimeParser.cs"];
m2_1479 [label="BB_property5 = g", span="3410-3410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DateTimeParser.cs"];
m2_1480 [label="BB_property6 = g", span="3411-3411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DateTimeParser.cs"];
m2_1481 [label="BB_property7 = g", span="3412-3412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DateTimeParser.cs"];
m2_1482 [label="BB_property8 = g", span="3413-3413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DateTimeParser.cs"];
m2_1483 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="3401-3401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DateTimeParser.cs"];
m2_2644 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="6068-6068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DateTimeParser.cs"];
m2_2645 [label="MemoryStream ms = new MemoryStream()", span="6070-6070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DateTimeParser.cs"];
m2_2646 [label="BsonWriter writer = new BsonWriter(ms)", span="6071-6071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DateTimeParser.cs"];
m2_2650 [label="byte[] data = ms.ToArray()", span="6076-6076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DateTimeParser.cs"];
m2_2647 [label="writer.WriteStartArray()", span="6072-6072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DateTimeParser.cs"];
m2_2648 [label="writer.WriteValue(''2000-01-02T03:04:05+06:00'')", span="6073-6073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DateTimeParser.cs"];
m2_2649 [label="writer.WriteEndArray()", span="6074-6074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DateTimeParser.cs"];
m2_2651 [label="BsonReader reader = new BsonReader(new MemoryStream(data))\r\n        {\r\n          ReadRootValueAsArray = true\r\n        }", span="6077-6080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DateTimeParser.cs"];
m2_2652 [label="JArray a = (JArray)JArray.ReadFrom(reader)", span="6082-6082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DateTimeParser.cs"];
m2_2653 [label="JValue v = (JValue)a[0]", span="6083-6083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DateTimeParser.cs"];
m2_2655 [label="Console.WriteLine(a.ToString())", span="6085-6085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DateTimeParser.cs"];
m2_2654 [label="Console.WriteLine(v.Value.GetType())", span="6084-6084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DateTimeParser.cs"];
m2_2656 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="6068-6068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DateTimeParser.cs"];
m2_513 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="1035-1035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="DateTimeParser.cs"];
m2_514 [label="string json", span="1037-1037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="DateTimeParser.cs"];
m2_515 [label="json = JsonConvert.SerializeObject((int?)null)", span="1039-1039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="DateTimeParser.cs"];
m2_516 [label="Assert.AreEqual(''null'', json)", span="1040-1040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="DateTimeParser.cs"];
m2_517 [label="json = JsonConvert.SerializeObject((int?)1)", span="1042-1042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="DateTimeParser.cs"];
m2_518 [label="Assert.AreEqual(''1'', json)", span="1043-1043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="DateTimeParser.cs"];
m2_519 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="1035-1035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="DateTimeParser.cs"];
m2_836 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="1784-1784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="DateTimeParser.cs"];
m2_837 [label="Content content = new Content\r\n        {\r\n          Text = ''Blah, blah, blah'',\r\n          Children = new List<Content>\r\n            {\r\n              new Content {Text = ''First''},\r\n              new Content {Text = ''Second''}\r\n            }\r\n        }", span="1786-1794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="DateTimeParser.cs"];
m2_838 [label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="1796-1796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="DateTimeParser.cs"];
m2_839 [label="Assert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="1798-1810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="DateTimeParser.cs"];
m2_840 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="1784-1784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="DateTimeParser.cs"];
m2_1822 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="DateTimeParser.cs"];
m2_1176 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", span="2565-2565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", file="DateTimeParser.cs"];
m2_1768 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", span="4020-4020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="DateTimeParser.cs"];
m2_1769 [label="FamilyDetails joe = new FamilyDetails()", span="4022-4022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="DateTimeParser.cs"];
m2_1770 [label="joe.Name = ''Joe Family Details''", span="4023-4023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="DateTimeParser.cs"];
m2_1771 [label="joe.NumberOfChildren = 4", span="4024-4024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="DateTimeParser.cs"];
m2_1772 [label="joe.NumberOfChildrenSpecified = true", span="4025-4025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="DateTimeParser.cs"];
m2_1777 [label="string json = JsonConvert.SerializeObject(new[] { joe, martha }, Formatting.Indented)", span="4032-4032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="DateTimeParser.cs"];
m2_1773 [label="FamilyDetails martha = new FamilyDetails()", span="4027-4027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="DateTimeParser.cs"];
m2_1774 [label="martha.Name = ''Martha Family Details''", span="4028-4028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="DateTimeParser.cs"];
m2_1775 [label="martha.NumberOfChildren = 3", span="4029-4029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="DateTimeParser.cs"];
m2_1776 [label="martha.NumberOfChildrenSpecified = false", span="4030-4030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="DateTimeParser.cs"];
m2_1778 [label="Console.WriteLine(json)", span="4042-4042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="DateTimeParser.cs"];
m2_1779 [label="string mikeString = ''{\''Name\'': \''Mike Person\''}''", span="4044-4044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="DateTimeParser.cs"];
m2_1780 [label="FamilyDetails mike = JsonConvert.DeserializeObject<FamilyDetails>(mikeString)", span="4045-4045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="DateTimeParser.cs"];
m2_1781 [label="Console.WriteLine(''mikeString specifies number of children: {0}'', mike.NumberOfChildrenSpecified)", span="4047-4047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="DateTimeParser.cs"];
m2_1782 [label="string mikeFullDisclosureString = ''{\''Name\'': \''Mike Person\'', \''NumberOfChildren\'': \''0\''}''", span="4049-4049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="DateTimeParser.cs"];
m2_1783 [label="mike = JsonConvert.DeserializeObject<FamilyDetails>(mikeFullDisclosureString)", span="4050-4050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="DateTimeParser.cs"];
m2_1784 [label="Console.WriteLine(''mikeString specifies number of children: {0}'', mike.NumberOfChildrenSpecified)", span="4052-4052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="DateTimeParser.cs"];
m2_1785 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", span="4020-4020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="DateTimeParser.cs"];
m2_1936 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="DateTimeParser.cs"];
m2_2102 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="4844-4844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="DateTimeParser.cs"];
m2_2103 [label="B = 2", span="4846-4846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="DateTimeParser.cs"];
m2_2104 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="4844-4844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="DateTimeParser.cs"];
m2_388 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", span="816-816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="DateTimeParser.cs"];
m2_389 [label="Name name = new Name(''The Idiot in Next To Me'')", span="818-818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="DateTimeParser.cs"];
m2_390 [label="PhoneNumber p1 = new PhoneNumber(''555-1212'')", span="820-820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="DateTimeParser.cs"];
m2_392 [label="name.pNumbers.Add(p1)", span="823-823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="DateTimeParser.cs"];
m2_393 [label="name.pNumbers.Add(p2)", span="824-824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="DateTimeParser.cs"];
m2_394 [label="string json = JsonConvert.SerializeObject(name, Formatting.Indented)", span="826-826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="DateTimeParser.cs"];
m2_391 [label="PhoneNumber p2 = new PhoneNumber(''444-1212'')", span="821-821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="DateTimeParser.cs"];
m2_395 [label="Assert.AreEqual(@''{\r\n  ''''personsName'''': ''''The Idiot in Next To Me'''',\r\n  ''''pNumbers'''': [\r\n    {\r\n      ''''phoneNumber'''': ''''555-1212''''\r\n    },\r\n    {\r\n      ''''phoneNumber'''': ''''444-1212''''\r\n    }\r\n  ]\r\n}'', json)", span="828-838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="DateTimeParser.cs"];
m2_396 [label="Name newName = JsonConvert.DeserializeObject<Name>(json)", span="840-840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="DateTimeParser.cs"];
m2_397 [label="Assert.AreEqual(''The Idiot in Next To Me'', newName.personsName)", span="842-842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="DateTimeParser.cs"];
m2_398 [label="Assert.AreEqual(2, newName.pNumbers.Count)", span="845-845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="DateTimeParser.cs"];
m2_399 [label="Assert.AreEqual(''555-1212'', newName.pNumbers[0].phoneNumber)", span="846-846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="DateTimeParser.cs"];
m2_400 [label="Assert.AreEqual(''444-1212'', newName.pNumbers[1].phoneNumber)", span="847-847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="DateTimeParser.cs"];
m2_401 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", span="816-816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="DateTimeParser.cs"];
m2_1324 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="DateTimeParser.cs"];
m2_1365 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="3097-3097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DateTimeParser.cs"];
m2_1366 [label="Person person = new Person()", span="3099-3099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DateTimeParser.cs"];
m2_1367 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="3100-3100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DateTimeParser.cs"];
m2_1368 [label="person.LastModified = person.BirthDate", span="3101-3101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DateTimeParser.cs"];
m2_1369 [label="person.Department = ''Department!''", span="3102-3102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DateTimeParser.cs"];
m2_1370 [label="person.Name = ''Name!''", span="3103-3103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DateTimeParser.cs"];
m2_1374 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="3113-3113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DateTimeParser.cs"];
m2_1371 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="3105-3105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DateTimeParser.cs"];
m2_1372 [label="string dateTimeOffsetText", span="3106-3106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DateTimeParser.cs"];
m2_1380 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="3144-3144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DateTimeParser.cs"];
m2_1373 [label="dateTimeOffsetText = @''2000-12-20T22:59:59+02:00''", span="3108-3108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DateTimeParser.cs"];
m2_1376 [label="Assert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''2000-01-01T01:01:01Z'''',\r\n    ''''LastModified'''': ''''2000-01-01T01:01:01Z''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''0001-01-01T00:00:00Z'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="3116-3139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DateTimeParser.cs"];
m2_1375 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3115-3115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DateTimeParser.cs"];
m2_1377 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="3141-3141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DateTimeParser.cs"];
m2_1378 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="3142-3142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DateTimeParser.cs"];
m2_1379 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="3143-3143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DateTimeParser.cs"];
m2_1381 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="3145-3145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DateTimeParser.cs"];
m2_1382 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="3146-3146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DateTimeParser.cs"];
m2_1383 [label="Assert.AreEqual(null, o2._nullableInt)", span="3147-3147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DateTimeParser.cs"];
m2_1384 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="3097-3097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DateTimeParser.cs"];
m2_2447 [label="Entry Newtonsoft.Json.Tests.Serialization.WidgetId.WidgetId()", span="7592-7592", cluster="Newtonsoft.Json.Tests.Serialization.WidgetId.WidgetId()", file="DateTimeParser.cs"];
m2_3150 [label="Entry Newtonsoft.Json.Tests.Serialization.SelectListItem.SelectListItem()", span="7403-7403", cluster="Newtonsoft.Json.Tests.Serialization.SelectListItem.SelectListItem()", file="DateTimeParser.cs"];
m2_2423 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="5607-5607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="DateTimeParser.cs"];
m2_2424 [label="Bb b = new Bb()", span="5609-5609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="DateTimeParser.cs"];
m2_2425 [label="b.no = true", span="5610-5610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="DateTimeParser.cs"];
m2_2426 [label="Aa a = b", span="5611-5611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="DateTimeParser.cs"];
m2_2428 [label="string json = JsonConvert.SerializeObject(b)", span="5614-5614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="DateTimeParser.cs"];
m2_2427 [label="a.no = int.MaxValue", span="5612-5612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="DateTimeParser.cs"];
m2_2429 [label="Assert.AreEqual(@''{''''no'''':true}'', json)", span="5616-5616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="DateTimeParser.cs"];
m2_2430 [label="Bb b2 = JsonConvert.DeserializeObject<Bb>(json)", span="5618-5618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="DateTimeParser.cs"];
m2_2431 [label="Assert.AreEqual(true, b2.no)", span="5620-5620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="DateTimeParser.cs"];
m2_2432 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="5607-5607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="DateTimeParser.cs"];
m2_570 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="1136-1136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="DateTimeParser.cs"];
m2_571 [label="RequiredMembersClass c = new RequiredMembersClass()\r\n        {\r\n          BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n          FirstName = ''Bob'',\r\n          LastName = ''Smith'',\r\n          MiddleName = ''Cosmo''\r\n        }", span="1138-1144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="DateTimeParser.cs"];
m2_572 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1146-1146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="DateTimeParser.cs"];
m2_573 [label="Assert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''2000-12-20T10:55:55Z''''\r\n}'', json)", span="1148-1153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="DateTimeParser.cs"];
m2_574 [label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1155-1155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="DateTimeParser.cs"];
m2_575 [label="Assert.AreEqual(''Bob'', c2.FirstName)", span="1157-1157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="DateTimeParser.cs"];
m2_576 [label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="1158-1158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="DateTimeParser.cs"];
m2_577 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="1136-1136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="DateTimeParser.cs"];
m2_55 [label="Zone = ParserTimeZone.Utc", span="175-175", cluster="Newtonsoft.Json.Utilities.DateTimeParser.ParseZone(int)", file="DateTimeParser.cs"];
m2_2140 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="5000-5000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="DateTimeParser.cs"];
m2_2141 [label="Title = title", span="5002-5002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="DateTimeParser.cs"];
m2_2142 [label="Categories = new List<string>()", span="5003-5003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="DateTimeParser.cs"];
m2_2143 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="5000-5000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="DateTimeParser.cs"];
m2_2513 [label="Entry Newtonsoft.Json.Tests.Serialization.Widget1.Widget1()", span="7525-7525", cluster="Newtonsoft.Json.Tests.Serialization.Widget1.Widget1()", file="DateTimeParser.cs"];
m2_512 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="DateTimeParser.cs"];
m2_2005 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", span="4575-4575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", file="DateTimeParser.cs"];
m2_2006 [label="Value = val", span="4577-4577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", file="DateTimeParser.cs"];
m2_2007 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", span="4575-4575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", file="DateTimeParser.cs"];
m2_2306 [label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="125-125", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="DateTimeParser.cs"];
m2_2658 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", span="140-140", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", file="DateTimeParser.cs"];
m2_1606 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="3675-3675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1607 [label="writer.WriteValue(value)", span="3677-3677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1608 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="3675-3675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1195 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="2718-2718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="DateTimeParser.cs"];
m2_1196 [label="B value = new B()", span="2720-2720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="DateTimeParser.cs"];
m2_1197 [label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="2721-2721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="DateTimeParser.cs"];
m2_1198 [label="Assert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="2723-2728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="DateTimeParser.cs"];
m2_1199 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="2718-2718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="DateTimeParser.cs"];
m2_725 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="1503-1503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="DateTimeParser.cs"];
m2_726 [label="string classRef = typeof(JsonPropertyWithHandlingValues).FullName", span="1505-1505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="DateTimeParser.cs"];
m2_727 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Self referencing loop detected for property 'ReferenceLoopHandlingErrorProperty' with type ''' + classRef + '''. Path ''.'',\r\n        () =>\r\n        {\r\n          JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues();\r\n          o.ReferenceLoopHandlingErrorProperty = o;\r\n\r\n          JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore });\r\n        })", span="1507-1515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="DateTimeParser.cs"];
m2_728 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="1503-1503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="DateTimeParser.cs"];
m2_2067 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexItem.ComplexItem()", span="4712-4712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexItem.ComplexItem()", file="DateTimeParser.cs"];
m2_3120 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.ShouldSerializeName()", span="7321-7321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.ShouldSerializeName()", file="DateTimeParser.cs"];
m2_3121 [label="return false;", span="7323-7323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.ShouldSerializeName()", file="DateTimeParser.cs"];
m2_3122 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.ShouldSerializeName()", span="7321-7321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.ShouldSerializeName()", file="DateTimeParser.cs"];
m2_2249 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", span="5299-5299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="DateTimeParser.cs"];
m2_2250 [label="IDictionary dictionary = JsonConvert.DeserializeObject<IDictionary>(''{'name':'value!'}'')", span="5301-5301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="DateTimeParser.cs"];
m2_2251 [label="Assert.AreEqual(1, dictionary.Count)", span="5302-5302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="DateTimeParser.cs"];
m2_2252 [label="Assert.AreEqual(''value!'', dictionary[''name''])", span="5303-5303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="DateTimeParser.cs"];
m2_2253 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", span="5299-5299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="DateTimeParser.cs"];
m2_3196 [label="Entry Newtonsoft.Json.Tests.Serialization.MetroStringConverter.CanConvert(System.Type)", span="7730-7730", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_3197 [label="return objectType == typeof(string);", span="7732-7732", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_3198 [label="Exit Newtonsoft.Json.Tests.Serialization.MetroStringConverter.CanConvert(System.Type)", span="7730-7730", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_586 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="1179-1179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="DateTimeParser.cs"];
m2_587 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Required property 'FirstName' expects a value but got null. Path '', line 6, position 2.'',\r\n        () =>\r\n        {\r\n          string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}'';\r\n\r\n          JsonConvert.DeserializeObject<RequiredMembersClass>(json);\r\n        })", span="1181-1193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="DateTimeParser.cs"];
m2_588 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="1179-1179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="DateTimeParser.cs"];
m2_3171 [label="Entry Newtonsoft.Json.Tests.Serialization.TestObject.TestObject()", span="7605-7605", cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject()", file="DateTimeParser.cs"];
m2_3172 [label="Exit Newtonsoft.Json.Tests.Serialization.TestObject.TestObject()", span="7605-7605", cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject()", file="DateTimeParser.cs"];
m2_1522 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", span="3516-3516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", file="DateTimeParser.cs"];
m2_3051 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="7127-7127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="DateTimeParser.cs"];
m2_3052 [label="IList<object> dates = new List<object>\r\n        {\r\n          new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n          new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n        }", span="7129-7133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="DateTimeParser.cs"];
m2_3053 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          DateFormatString = ''yyyy tt'',\r\n          Culture = new CultureInfo(''en-NZ'')\r\n        })", span="7135-7139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="DateTimeParser.cs"];
m2_3054 [label="Assert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="7141-7144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="DateTimeParser.cs"];
m2_3055 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="7127-7127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="DateTimeParser.cs"];
m2_34 [label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="162-162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="DateTimeParser.cs"];
m2_52 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", color=green, community=0, file="DateTimeParser.cs"];
m2_53 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="DateTimeParser.cs"];
m2_72 [label="Entry Unk.AreNotSame", span="", cluster="Unk.AreNotSame", color=green, community=0, file="DateTimeParser.cs"];
m2_54 [label="Entry DataContractJsonSerializer.cstr", span="", cluster="DataContractJsonSerializer.cstr", file="DateTimeParser.cs"];
m2_58 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="191-191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DateTimeParser.cs"];
m2_65 [label="Assert.AreNotSame(executorObject, executorObject2)", span="202-202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", color=green, community=0, file="DateTimeParser.cs"];
m2_61 [label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="195-195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DateTimeParser.cs"];
m2_64 [label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="200-200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DateTimeParser.cs"];
m2_66 [label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="203-203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DateTimeParser.cs"];
m2_70 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="191-191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", color=green, community=2, file="DateTimeParser.cs"];
m2_56 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="DateTimeParser.cs"];
m2_67 [label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="204-204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DateTimeParser.cs"];
m2_68 [label="CustomAssert.Contains(executorObject2.serverMethodParams, ''101'')", span="205-205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", color=green, community=2, file="DateTimeParser.cs"];
m2_69 [label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="206-206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DateTimeParser.cs"];
m2_59 [label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="193-193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DateTimeParser.cs"];
m2_62 [label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="196-196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DateTimeParser.cs"];
m2_60 [label="executorObject.serverClassName = ''BanSubs''", span="194-194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DateTimeParser.cs"];
m2_63 [label="string output = JsonConvert.SerializeObject(executorObject)", span="198-198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DateTimeParser.cs", color=red, community=0];
m2_73 [label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="108-108", cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="DateTimeParser.cs"];
m2_1547 [label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0", cluster="string.Format(System.IFormatProvider, string, object, object)", file="DateTimeParser.cs"];
m2_1235 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="2858-2858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="DateTimeParser.cs"];
m2_1236 [label="_innerDictionary.Add(key, value)", span="2860-2860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="DateTimeParser.cs"];
m2_1237 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="2858-2858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="DateTimeParser.cs"];
m2_3214 [label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeAge()", span="7822-7822", cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeAge()", file="DateTimeParser.cs"];
m2_3215 [label="Exit Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeAge()", span="7822-7822", cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeAge()", file="DateTimeParser.cs"];
m2_2386 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="DateTimeParser.cs"];
m2_1275 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="DateTimeParser.cs"];
m2_1331 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2991-2991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1332 [label="info.AddValue(''stringValue'', _stringValue)", span="2993-2993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1333 [label="info.AddValue(''intValue'', _intValue)", span="2994-2994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1334 [label="info.AddValue(''dateTimeOffsetValue'', _dateTimeOffsetValue)", span="2995-2995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1335 [label="info.AddValue(''personValue'', _personValue)", span="2996-2996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1336 [label="info.AddValue(''nullPersonValue'', _nullPersonValue)", span="2997-2997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1337 [label="info.AddValue(''nullableInt'', null)", span="2998-2998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1338 [label="info.AddValue(''booleanValue'', _booleanValue)", span="3000-3000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1339 [label="info.AddValue(''byteValue'', _byteValue)", span="3001-3001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1340 [label="info.AddValue(''charValue'', _charValue)", span="3002-3002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1341 [label="info.AddValue(''dateTimeValue'', _dateTimeValue)", span="3003-3003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1342 [label="info.AddValue(''decimalValue'', _decimalValue)", span="3004-3004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1343 [label="info.AddValue(''shortValue'', _shortValue)", span="3005-3005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1344 [label="info.AddValue(''longValue'', _longValue)", span="3006-3006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1345 [label="info.AddValue(''sbyteValue'', _sbyteValue)", span="3007-3007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1346 [label="info.AddValue(''floatValue'', _floatValue)", span="3008-3008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1347 [label="info.AddValue(''ushortValue'', _ushortValue)", span="3009-3009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1348 [label="info.AddValue(''uintValue'', _uintValue)", span="3010-3010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1349 [label="info.AddValue(''ulongValue'', _ulongValue)", span="3011-3011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1350 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2991-2991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1077 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="2339-2339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DateTimeParser.cs"];
m2_1078 [label="Foo f = new Foo()", span="2341-2341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DateTimeParser.cs"];
m2_1079 [label="f.Bars.Add(new Bar { Id = 0 })", span="2342-2342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DateTimeParser.cs"];
m2_1080 [label="f.Bars.Add(new Bar { Id = 1 })", span="2343-2343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DateTimeParser.cs"];
m2_1081 [label="f.Bars.Add(new Bar { Id = 2 })", span="2344-2344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DateTimeParser.cs"];
m2_1082 [label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="2346-2346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DateTimeParser.cs"];
m2_1083 [label="Assert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="2347-2353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DateTimeParser.cs"];
m2_1084 [label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="2355-2355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DateTimeParser.cs"];
m2_1085 [label="Assert.AreEqual(3, newFoo.Bars.Count)", span="2356-2356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DateTimeParser.cs"];
m2_1086 [label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="2357-2357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DateTimeParser.cs"];
m2_1087 [label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="2358-2358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DateTimeParser.cs"];
m2_1088 [label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="2359-2359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DateTimeParser.cs"];
m2_1089 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="2339-2339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DateTimeParser.cs"];
m2_145 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", span="405-405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="DateTimeParser.cs"];
m2_146 [label="Article a1 = new Article(''a1'')", span="407-407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="DateTimeParser.cs"];
m2_147 [label="Article a2 = new Article(''a2'')", span="408-408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="DateTimeParser.cs"];
m2_149 [label="articles1.Add(a1)", span="411-411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="DateTimeParser.cs"];
m2_148 [label="ArticleCollection articles1 = new ArticleCollection()", span="410-410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="DateTimeParser.cs"];
m2_150 [label="articles1.Add(a2)", span="412-412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="DateTimeParser.cs"];
m2_151 [label="string jsonText = JsonConvert.SerializeObject(articles1)", span="414-414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="DateTimeParser.cs"];
m2_153 [label="Assert.AreEqual(articles1.Count, articles2.Count)", span="418-418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="DateTimeParser.cs"];
m2_154 [label="Assert.AreEqual(articles1[0].Name, articles2[0].Name)", span="419-419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="DateTimeParser.cs"];
m2_152 [label="ArticleCollection articles2 = JsonConvert.DeserializeObject<ArticleCollection>(jsonText)", span="416-416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="DateTimeParser.cs"];
m2_155 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", span="405-405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="DateTimeParser.cs"];
m2_2233 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="5269-5269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="DateTimeParser.cs"];
m2_2234 [label="Exceptions = new List<Exception>()", span="5271-5271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="DateTimeParser.cs"];
m2_2235 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="5269-5269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="DateTimeParser.cs"];
m2_555 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="1114-1114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DateTimeParser.cs"];
m2_556 [label="string boolRef = typeof(bool).AssemblyQualifiedName", span="1116-1116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DateTimeParser.cs"];
m2_557 [label="TypeClass typeClass = new TypeClass { TypeProperty = typeof(bool) }", span="1117-1117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DateTimeParser.cs"];
m2_559 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + boolRef + @''''''}'', json)", span="1120-1120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DateTimeParser.cs"];
m2_558 [label="string json = JsonConvert.SerializeObject(typeClass)", span="1119-1119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DateTimeParser.cs"];
m2_560 [label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="1122-1122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DateTimeParser.cs"];
m2_561 [label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="1123-1123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DateTimeParser.cs"];
m2_562 [label="string jsonSerializerTestRef = typeof(JsonSerializerTest).AssemblyQualifiedName", span="1125-1125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DateTimeParser.cs"];
m2_563 [label="typeClass = new TypeClass { TypeProperty = typeof(JsonSerializerTest) }", span="1126-1126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DateTimeParser.cs"];
m2_565 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + jsonSerializerTestRef + @''''''}'', json)", span="1129-1129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DateTimeParser.cs"];
m2_564 [label="json = JsonConvert.SerializeObject(typeClass)", span="1128-1128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DateTimeParser.cs"];
m2_566 [label="typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="1131-1131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DateTimeParser.cs"];
m2_567 [label="Assert.AreEqual(typeof(JsonSerializerTest), typeClass2.TypeProperty)", span="1132-1132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DateTimeParser.cs"];
m2_568 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="1114-1114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DateTimeParser.cs"];
m2_2661 [label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="123-123", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="DateTimeParser.cs"];
m2_2910 [label="Entry System.Array.GetLength(int)", span="0-0", cluster="System.Array.GetLength(int)", file="DateTimeParser.cs"];
m2_3062 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="7168-7168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DateTimeParser.cs"];
m2_3063 [label="IList<object> dates = new List<object>\r\n        {\r\n          new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n          new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n        }", span="7170-7174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DateTimeParser.cs"];
m2_3064 [label="StringWriter sw = new StringWriter()", span="7176-7176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DateTimeParser.cs"];
m2_3067 [label="serializer.Serialize(jsonWriter, dates)", span="7185-7185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DateTimeParser.cs"];
m2_3065 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="7177-7177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DateTimeParser.cs"];
m2_3071 [label="string json = sw.ToString()", span="7191-7191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DateTimeParser.cs"];
m2_3066 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n        {\r\n          DateFormatString = ''yyyy tt'',\r\n          Culture = new CultureInfo(''en-NZ''),\r\n          Formatting = Formatting.Indented\r\n        })", span="7179-7184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DateTimeParser.cs"];
m2_3068 [label="Assert.IsNull(jsonWriter.DateFormatString)", span="7187-7187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DateTimeParser.cs"];
m2_3069 [label="Assert.AreEqual(CultureInfo.InvariantCulture, jsonWriter.Culture)", span="7188-7188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DateTimeParser.cs"];
m2_3070 [label="Assert.AreEqual(Formatting.None, jsonWriter.Formatting)", span="7189-7189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DateTimeParser.cs"];
m2_3072 [label="Assert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="7193-7196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DateTimeParser.cs"];
m2_3073 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="7168-7168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DateTimeParser.cs"];
m2_2433 [label="Entry Newtonsoft.Json.Tests.Serialization.Bb.Bb()", span="7634-7634", cluster="Newtonsoft.Json.Tests.Serialization.Bb.Bb()", file="DateTimeParser.cs"];
m2_947 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="2055-2055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="DateTimeParser.cs"];
m2_948 [label="string json = @''[]''", span="2057-2057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="DateTimeParser.cs"];
m2_949 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Dictionary<string, string>>(json);\r\n        })", span="2059-2066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="DateTimeParser.cs"];
m2_950 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="2055-2055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="DateTimeParser.cs"];
m2_208 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="DateTimeParser.cs"];
m2_2160 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="5043-5043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DateTimeParser.cs"];
m2_2161 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c1 = new NonDefaultConstructorWithReadOnlyDictionaryProperty(''blah'')", span="5045-5045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DateTimeParser.cs"];
m2_2162 [label="c1.Categories.Add(''one'', 1)", span="5046-5046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DateTimeParser.cs"];
m2_2163 [label="c1.Categories.Add(''two'', 2)", span="5047-5047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DateTimeParser.cs"];
m2_2164 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5049-5049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DateTimeParser.cs"];
m2_2167 [label="Assert.AreEqual(c1.Title, c2.Title)", span="5059-5059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DateTimeParser.cs"];
m2_2168 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="5060-5060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DateTimeParser.cs"];
m2_2165 [label="Assert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2\r\n  }\r\n}'', json)", span="5050-5056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DateTimeParser.cs"];
m2_2166 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyDictionaryProperty>(json)", span="5058-5058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DateTimeParser.cs"];
m2_2169 [label="Assert.AreEqual(1, c2.Categories[''one''])", span="5061-5061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DateTimeParser.cs"];
m2_2170 [label="Assert.AreEqual(2, c2.Categories[''two''])", span="5062-5062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DateTimeParser.cs"];
m2_2171 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="5043-5043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DateTimeParser.cs"];
m2_211 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="DateTimeParser.cs"];
m2_1735 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.Employee()", span="3875-3875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.Employee()", file="DateTimeParser.cs"];
m2_1427 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="3267-3267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1428 [label="AA myA = JsonConvert.DeserializeObject<AA>(\r\n        @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="3269-3279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1429 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3281-3281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1430 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3282-3282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1431 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3283-3283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1432 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3284-3284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1433 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3285-3285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1434 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3286-3286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1435 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3287-3287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1436 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3288-3288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1437 [label="BB myB = JsonConvert.DeserializeObject<BB>(\r\n        @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="3290-3310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1438 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3312-3312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1439 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3313-3313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1440 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3314-3314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1441 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3315-3315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1442 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3316-3316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1443 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3317-3317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1444 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3318-3318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1445 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3319-3319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1446 [label="Assert.AreEqual(4, myB.BB_field1)", span="3321-3321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1447 [label="Assert.AreEqual(4, myB.BB_field2)", span="3322-3322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1448 [label="Assert.AreEqual(3, myB.BB_property1)", span="3323-3323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1449 [label="Assert.AreEqual(3, myB.BB_property2)", span="3324-3324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1450 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="3325-3325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1451 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3326-3326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1452 [label="Assert.AreEqual(0, myB.BB_property5)", span="3327-3327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1453 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="3328-3328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1454 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="3329-3329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1455 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="3330-3330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1456 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="3267-3267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1948 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="4412-4412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="DateTimeParser.cs"];
m2_1949 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="4412-4412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="DateTimeParser.cs"];
m2_3170 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="DateTimeParser.cs"];
m2_338 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="710-710", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="DateTimeParser.cs"];
m2_676 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="1403-1403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="DateTimeParser.cs"];
m2_677 [label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="1405-1410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="DateTimeParser.cs"];
m2_678 [label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="1412-1412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="DateTimeParser.cs"];
m2_679 [label="Assert.IsNotNull(o)", span="1413-1413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="DateTimeParser.cs"];
m2_680 [label="Assert.AreEqual(''firstName'', o.firstName)", span="1415-1415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="DateTimeParser.cs"];
m2_681 [label="Assert.AreEqual(''FirstName'', o.FirstName)", span="1416-1416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="DateTimeParser.cs"];
m2_682 [label="Assert.AreEqual(''LastName'', o.LastName)", span="1417-1417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="DateTimeParser.cs"];
m2_683 [label="Assert.AreEqual(''lastName'', o.lastName)", span="1418-1418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="DateTimeParser.cs"];
m2_684 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="1403-1403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="DateTimeParser.cs"];
m2_480 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="DateTimeParser.cs"];
m2_300 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="650-650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="DateTimeParser.cs"];
m2_301 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="652-652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="DateTimeParser.cs"];
m2_302 [label="JsonSerializer s = new JsonSerializer()", span="654-654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="DateTimeParser.cs"];
m2_304 [label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="657-657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="DateTimeParser.cs"];
m2_303 [label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="655-655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="DateTimeParser.cs"];
m2_305 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="659-659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="DateTimeParser.cs"];
m2_306 [label="Assert.AreEqual(1, wibble.Bar.Count)", span="661-661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="DateTimeParser.cs"];
m2_307 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="650-650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="DateTimeParser.cs"];
m2_704 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="1462-1462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DateTimeParser.cs"];
m2_705 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="1464-1464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DateTimeParser.cs"];
m2_706 [label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="1465-1465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DateTimeParser.cs"];
m2_707 [label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="1466-1466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DateTimeParser.cs"];
m2_708 [label="o.DefaultValueHandlingPopulateProperty = ''Default!''", span="1467-1467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DateTimeParser.cs"];
m2_709 [label="o.DefaultValueHandlingIgnoreAndPopulateProperty = ''Default!''", span="1468-1468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DateTimeParser.cs"];
m2_710 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="1470-1470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DateTimeParser.cs"];
m2_712 [label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", span="1481-1481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DateTimeParser.cs"];
m2_711 [label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="1472-1479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DateTimeParser.cs"];
m2_713 [label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="1483-1487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DateTimeParser.cs"];
m2_714 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="1462-1462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DateTimeParser.cs"];
m2_1359 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="DateTimeParser.cs"];
m2_1609 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1187-1187", cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="DateTimeParser.cs"];
m2_429 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="721-721", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="DateTimeParser.cs"];
m2_209 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="DateTimeParser.cs"];
m2_2804 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="6415-6415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DateTimeParser.cs"];
m2_2805 [label="IList<Uri> uris = JsonConvert.DeserializeObject<IList<Uri>>(@''[''''http://localhost/path?query#hash'''']'')", span="6417-6417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DateTimeParser.cs"];
m2_2806 [label="Assert.AreEqual(1, uris.Count)", span="6418-6418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DateTimeParser.cs"];
m2_2807 [label="Assert.AreEqual(new Uri(''http://localhost/path?query#hash''), uris[0])", span="6419-6419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DateTimeParser.cs"];
m2_2808 [label="Uri uri = JsonConvert.DeserializeObject<Uri>(@''''''http://localhost/path?query#hash'''''')", span="6421-6421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DateTimeParser.cs"];
m2_2809 [label="Assert.IsNotNull(uri)", span="6422-6422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DateTimeParser.cs"];
m2_2810 [label="Uri i1 = new Uri(''http://localhost/path?query#hash'', UriKind.RelativeOrAbsolute)", span="6424-6424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DateTimeParser.cs"];
m2_2811 [label="Uri i2 = new Uri(''http://localhost/path?query#hash'')", span="6425-6425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DateTimeParser.cs"];
m2_2812 [label="Assert.AreEqual(i1, i2)", span="6426-6426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DateTimeParser.cs"];
m2_2813 [label="uri = JsonConvert.DeserializeObject<Uri>(@''''''/path?query#hash'''''')", span="6428-6428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DateTimeParser.cs"];
m2_2814 [label="Assert.IsNotNull(uri)", span="6429-6429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DateTimeParser.cs"];
m2_2815 [label="Assert.AreEqual(new Uri(''/path?query#hash'', UriKind.RelativeOrAbsolute), uri)", span="6430-6430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DateTimeParser.cs"];
m2_2816 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="6415-6415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DateTimeParser.cs"];
m2_238 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="557-557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DateTimeParser.cs"];
m2_239 [label="var anonymous =\r\n        new\r\n          {\r\n            StringValue = ''I am a string'',\r\n            IntValue = int.MaxValue,\r\n            NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n            NestedArray = new[] { 1, 2 },\r\n            Product = new Product() { Name = ''TestProduct'' }\r\n          }", span="559-567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DateTimeParser.cs"];
m2_240 [label="string json = JsonConvert.SerializeObject(anonymous)", span="569-569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DateTimeParser.cs"];
m2_242 [label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="572-572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DateTimeParser.cs"];
m2_241 [label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}}'', json)", span="570-570", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DateTimeParser.cs"];
m2_243 [label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="573-573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DateTimeParser.cs"];
m2_244 [label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="574-574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DateTimeParser.cs"];
m2_245 [label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="575-575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DateTimeParser.cs"];
m2_246 [label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="576-576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DateTimeParser.cs"];
m2_247 [label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="577-577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DateTimeParser.cs"];
m2_248 [label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="578-578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DateTimeParser.cs"];
m2_249 [label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="579-579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DateTimeParser.cs"];
m2_250 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="557-557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DateTimeParser.cs"];
m2_1701 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="3839-3839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="DateTimeParser.cs"];
m2_1702 [label="string json = @''{''''First'''':''''First'''',''''Second'''':2,''''Ignored'''':{''''Name'''':''''James''''},''''AdditionalContent'''':{''''LOL'''':true}}''", span="3841-3841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="DateTimeParser.cs"];
m2_1703 [label="ConstructorCompexIgnoredProperty cc = JsonConvert.DeserializeObject<ConstructorCompexIgnoredProperty>(json)", span="3843-3843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="DateTimeParser.cs"];
m2_1704 [label="Assert.AreEqual(''First'', cc.First)", span="3844-3844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="DateTimeParser.cs"];
m2_1705 [label="Assert.AreEqual(2, cc.Second)", span="3845-3845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="DateTimeParser.cs"];
m2_1706 [label="Assert.AreEqual(null, cc.Ignored)", span="3846-3846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="DateTimeParser.cs"];
m2_1707 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="3839-3839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="DateTimeParser.cs"];
m2_2236 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="5277-5277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DateTimeParser.cs"];
m2_2237 [label="ClassWithException classWithException = new ClassWithException()", span="5279-5279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DateTimeParser.cs"];
m2_2238 [label="throw new Exception(''Test Exception'');", span="5282-5282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DateTimeParser.cs"];
m2_2240 [label="classWithException.Exceptions.Add(ex)", span="5286-5286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DateTimeParser.cs"];
m2_2241 [label="string sex = JsonConvert.SerializeObject(classWithException)", span="5288-5288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DateTimeParser.cs"];
m2_2244 [label="sex = JsonConvert.SerializeObject(classWithException, Formatting.Indented)", span="5292-5292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DateTimeParser.cs"];
m2_2239 [label=Exception, span="5284-5284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DateTimeParser.cs"];
m2_2242 [label="ClassWithException dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="5289-5289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DateTimeParser.cs"];
m2_2243 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="5290-5290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DateTimeParser.cs"];
m2_2245 [label="dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="5294-5294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DateTimeParser.cs"];
m2_2246 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="5295-5295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DateTimeParser.cs"];
m2_2247 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="5277-5277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DateTimeParser.cs"];
m2_2227 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="5247-5247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="DateTimeParser.cs"];
m2_2228 [label="DerivedType d = new DerivedType()", span="5249-5249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="DateTimeParser.cs"];
m2_2229 [label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="5250-5250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="DateTimeParser.cs"];
m2_2230 [label="Assert.AreEqual(@''{\r\n  ''''dinosaur'''': null,\r\n  ''''dog'''': null,\r\n  ''''cat'''': null,\r\n  ''''zebra'''': null,\r\n  ''''bird'''': null,\r\n  ''''parrot'''': null,\r\n  ''''albatross'''': null,\r\n  ''''antelope'''': null\r\n}'', json)", span="5252-5261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="DateTimeParser.cs"];
m2_2231 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="5247-5247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="DateTimeParser.cs"];
m2_402 [label="Entry Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", file="DateTimeParser.cs"];
m2_1523 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", span="3539-3539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", file="DateTimeParser.cs"];
m2_1845 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", span="4164-4164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", file="DateTimeParser.cs"];
m2_1500 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="3465-3465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DateTimeParser.cs"];
m2_1501 [label="XmlNodeTestObject testObject = new XmlNodeTestObject()", span="3467-3467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DateTimeParser.cs"];
m2_1502 [label="XmlDocument document = new XmlDocument()", span="3468-3468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DateTimeParser.cs"];
m2_1504 [label="testObject.Document = document", span="3470-3470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DateTimeParser.cs"];
m2_1505 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="3472-3472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DateTimeParser.cs"];
m2_1509 [label="Assert.AreEqual(testObject.Document.InnerXml, newTestObject.Document.InnerXml)", span="3481-3481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DateTimeParser.cs"];
m2_1503 [label="document.LoadXml(''<root>hehe, root</root>'')", span="3469-3469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DateTimeParser.cs"];
m2_1506 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  }\r\n}''", span="3473-3477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DateTimeParser.cs"];
m2_1507 [label="Assert.AreEqual(expected, json)", span="3478-3478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DateTimeParser.cs"];
m2_1508 [label="XmlNodeTestObject newTestObject = JsonConvert.DeserializeObject<XmlNodeTestObject>(json)", span="3480-3480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DateTimeParser.cs"];
m2_1510 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="3465-3465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DateTimeParser.cs"];
m2_1254 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="2883-2883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="DateTimeParser.cs"];
m2_1255 [label="return _innerDictionary.GetEnumerator();", span="2885-2885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="DateTimeParser.cs"];
m2_1256 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="2883-2883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="DateTimeParser.cs"];
m2_2735 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="6222-6222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="DateTimeParser.cs"];
m2_2736 [label="var json = Serialize(obj)", span="6225-6225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="DateTimeParser.cs"];
m2_2737 [label="return Deserialize<T>(json);", span="6226-6226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="DateTimeParser.cs"];
m2_2738 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="6222-6222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="DateTimeParser.cs"];
m2_1937 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="4392-4392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="DateTimeParser.cs"];
m2_1938 [label="VectorParent obj = new VectorParent()", span="4394-4394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="DateTimeParser.cs"];
m2_1939 [label="obj.Position = new Vector { X = 1, Y = 2, Z = 3 }", span="4395-4395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="DateTimeParser.cs"];
m2_1940 [label="string str = JsonConvert.SerializeObject(obj)", span="4397-4397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="DateTimeParser.cs"];
m2_1941 [label="obj = JsonConvert.DeserializeObject<VectorParent>(str)", span="4399-4399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="DateTimeParser.cs"];
m2_1942 [label="Assert.AreEqual(1, obj.Position.X)", span="4401-4401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="DateTimeParser.cs"];
m2_1943 [label="Assert.AreEqual(2, obj.Position.Y)", span="4402-4402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="DateTimeParser.cs"];
m2_1944 [label="Assert.AreEqual(3, obj.Position.Z)", span="4403-4403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="DateTimeParser.cs"];
m2_1945 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="4392-4392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="DateTimeParser.cs"];
m2_769 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="1635-1635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="DateTimeParser.cs"];
m2_770 [label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="1637-1637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="DateTimeParser.cs"];
m2_771 [label="c.NotIncluded = ''Hi''", span="1638-1638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="DateTimeParser.cs"];
m2_772 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1639-1639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="DateTimeParser.cs"];
m2_773 [label="Assert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="1641-1646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="DateTimeParser.cs"];
m2_774 [label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="1648-1648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="DateTimeParser.cs"];
m2_775 [label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="1649-1649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="DateTimeParser.cs"];
m2_776 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="1635-1635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="DateTimeParser.cs"];
m2_2538 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="5835-5835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="DateTimeParser.cs"];
m2_2539 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''No JSON content found and type 'System.Double' is not nullable. Path '', line 0, position 0.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<double>('''');\r\n        })", span="5837-5842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="DateTimeParser.cs"];
m2_2540 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="5835-5835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="DateTimeParser.cs"];
m2_356 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="DateTimeParser.cs"];
m2_2590 [label="Entry System.DateTime.ToLocalTime()", span="0-0", cluster="System.DateTime.ToLocalTime()", file="DateTimeParser.cs"];
m2_2202 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="5160-5160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="DateTimeParser.cs"];
m2_2203 [label="_privateString = privateString", span="5162-5162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="DateTimeParser.cs"];
m2_2204 [label="_readonlyString = readonlyString", span="5163-5163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="DateTimeParser.cs"];
m2_2205 [label="_internalString = internalString", span="5164-5164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="DateTimeParser.cs"];
m2_2206 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="5160-5160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="DateTimeParser.cs"];
m2_2121 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", span="4893-4893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", file="DateTimeParser.cs"];
m2_3042 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="7112-7112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="DateTimeParser.cs"];
m2_3043 [label="var content = @''{''''startDateTime'''':''''2012-07-19T14:30:00+09:30''''}''", span="7114-7114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="DateTimeParser.cs"];
m2_3044 [label="var jsonSerializerSettings = new JsonSerializerSettings() {DateFormatHandling = DateFormatHandling.IsoDateFormat, DateParseHandling = DateParseHandling.DateTimeOffset, DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind}", span="7116-7116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="DateTimeParser.cs"];
m2_3045 [label="var obj = (JObject)JsonConvert.DeserializeObject(content, jsonSerializerSettings)", span="7118-7118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="DateTimeParser.cs"];
m2_3046 [label="var dateTimeOffset = (DateTimeOffset)((JValue) obj[''startDateTime'']).Value", span="7120-7120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="DateTimeParser.cs"];
m2_3047 [label="Assert.AreEqual(TimeSpan.FromHours(9.5), dateTimeOffset.Offset)", span="7122-7122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="DateTimeParser.cs"];
m2_3048 [label="Assert.AreEqual(''07/19/2012 14:30:00 +09:30'', dateTimeOffset.ToString(CultureInfo.InvariantCulture))", span="7123-7123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="DateTimeParser.cs"];
m2_3049 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="7112-7112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="DateTimeParser.cs"];
m2_348 [label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0", cluster="System.Collections.Generic.Stack<T>.Push(T)", file="DateTimeParser.cs"];
m2_3211 [label="Entry Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.CanConvert(System.Type)", span="7809-7809", cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_3212 [label="return objectType == typeof (int);", span="7811-7811", cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_3213 [label="Exit Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.CanConvert(System.Type)", span="7809-7809", cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_2061 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass.EnumerableClass()", span="4675-4675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass.EnumerableClass()", file="DateTimeParser.cs"];
m2_24 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="131-131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="DateTimeParser.cs"];
m2_94 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="246-246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", color=green, community=0, file="DateTimeParser.cs"];
m2_95 [label="string value = JsonConvert.SerializeObject(new SetOnlyPropertyClass())", span="248-248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="DateTimeParser.cs"];
m2_413 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="865-865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="DateTimeParser.cs"];
m2_414 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="867-867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="DateTimeParser.cs"];
m2_415 [label="string json = JsonConvert.SerializeObject(c1)", span="869-869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="DateTimeParser.cs"];
m2_416 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="870-870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="DateTimeParser.cs"];
m2_417 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="872-872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="DateTimeParser.cs"];
m2_418 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="874-874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="DateTimeParser.cs"];
m2_419 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="865-865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="DateTimeParser.cs"];
m2_8 [label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="46-46", cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="DateTimeParser.cs"];
m2_717 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="1491-1491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="DateTimeParser.cs"];
m2_718 [label="string json = ''{}''", span="1493-1493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="DateTimeParser.cs"];
m2_719 [label="JsonPropertyWithHandlingValues o = JsonConvert.DeserializeObject<JsonPropertyWithHandlingValues>(json)", span="1495-1495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="DateTimeParser.cs"];
m2_720 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingIgnoreAndPopulateProperty)", span="1496-1496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="DateTimeParser.cs"];
m2_721 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingPopulateProperty)", span="1497-1497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="DateTimeParser.cs"];
m2_722 [label="Assert.AreEqual(null, o.DefaultValueHandlingIgnoreProperty)", span="1498-1498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="DateTimeParser.cs"];
m2_723 [label="Assert.AreEqual(null, o.DefaultValueHandlingIncludeProperty)", span="1499-1499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="DateTimeParser.cs"];
m2_724 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="1491-1491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="DateTimeParser.cs"];
m2_1767 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="DateTimeParser.cs"];
m2_2591 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", file="DateTimeParser.cs"];
m2_2739 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="6229-6229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="DateTimeParser.cs"];
m2_2741 [label="var stringWriter = new StringWriter()", span="6232-6232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="DateTimeParser.cs"];
m2_2744 [label="serializer.Serialize(stringWriter, obj)", span="6238-6238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="DateTimeParser.cs"];
m2_2742 [label="var serializer = new Newtonsoft.Json.JsonSerializer()", span="6233-6233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="DateTimeParser.cs"];
m2_2745 [label="return stringWriter.ToString();", span="6240-6240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="DateTimeParser.cs"];
m2_2743 [label="serializer.ContractResolver = new DefaultContractResolver(false)\r\n        {\r\n          IgnoreSerializableAttribute = false\r\n        }", span="6234-6237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="DateTimeParser.cs"];
m2_2746 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="6229-6229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="DateTimeParser.cs"];
m2_2000 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", span="4540-4540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", file="DateTimeParser.cs"];
m2_2477 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="5708-5708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="DateTimeParser.cs"];
m2_2478 [label="Item expected = new Item()\r\n        {\r\n          SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n          BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n          Latitude = 33.657145,\r\n          Longitude = -117.766684,\r\n          TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n          Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n        }", span="5710-5718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="DateTimeParser.cs"];
m2_2479 [label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="5720-5720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="DateTimeParser.cs"];
m2_2480 [label="Assert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="5722-5732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="DateTimeParser.cs"];
m2_2481 [label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString)", span="5734-5734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="DateTimeParser.cs"];
m2_2482 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="5736-5736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="DateTimeParser.cs"];
m2_2483 [label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="5737-5737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="DateTimeParser.cs"];
m2_2484 [label="byte[] bytes = (byte[])actual.Payload", span="5738-5738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="DateTimeParser.cs"];
m2_2485 [label="CollectionAssert.AreEquivalent((new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }).ToList(), bytes.ToList())", span="5739-5739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="DateTimeParser.cs"];
m2_2486 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="5708-5708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="DateTimeParser.cs"];
m2_2770 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="6335-6335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DateTimeParser.cs"];
m2_2771 [label="string json = ''{one:1}{}''", span="6337-6337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DateTimeParser.cs"];
m2_2772 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="6339-6339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DateTimeParser.cs"];
m2_2774 [label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="6341-6341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DateTimeParser.cs"];
m2_2779 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Additional text encountered after finished reading JSON content: {. Path '', line 1, position 7.'',\r\n        () =>\r\n          {\r\n            s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)));\r\n          })", span="6348-6353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DateTimeParser.cs"];
m2_2773 [label="JsonSerializer s = JsonSerializer.Create(settings)", span="6340-6340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DateTimeParser.cs"];
m2_2777 [label="settings.CheckAdditionalContent = true", span="6346-6346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DateTimeParser.cs"];
m2_2778 [label="s = JsonSerializer.Create(settings)", span="6347-6347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DateTimeParser.cs"];
m2_2775 [label="Assert.IsNotNull(o)", span="6343-6343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DateTimeParser.cs"];
m2_2776 [label="Assert.AreEqual(1, o[''one''])", span="6344-6344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DateTimeParser.cs"];
m2_2780 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="6335-6335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DateTimeParser.cs"];
m2_1417 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="3235-3235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1418 [label="AA myA = new AA(2)", span="3237-3237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1419 [label="string json = JsonConvert.SerializeObject(myA, Formatting.Indented)", span="3238-3238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1420 [label="Assert.AreEqual(@''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2\r\n}'', json)", span="3239-3245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1421 [label="BB myB = new BB(3, 4)", span="3247-3247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1422 [label="json = JsonConvert.SerializeObject(myB, Formatting.Indented)", span="3248-3248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1423 [label="Assert.AreEqual(@''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''BB_property1'''': 4,\r\n  ''''BB_property2'''': 4,\r\n  ''''BB_property3'''': 4,\r\n  ''''BB_property4'''': 4,\r\n  ''''BB_property5'''': 4,\r\n  ''''BB_property7'''': 4,\r\n  ''''AA_property1'''': 3,\r\n  ''''AA_property2'''': 3,\r\n  ''''AA_property3'''': 3,\r\n  ''''AA_property4'''': 3\r\n}'', json)", span="3249-3263", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1424 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="3235-3235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="DateTimeParser.cs"];
m2_1736 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", span="3914-3914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1737 [label="SpecifiedTestClass c = new SpecifiedTestClass()", span="3916-3916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1738 [label="c.Name = ''James''", span="3917-3917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1739 [label="c.Age = 27", span="3918-3918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1740 [label="c.NameSpecified = false", span="3919-3919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1741 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3921-3921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1750 [label="c.NameSpecified = true", span="3935-3935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1751 [label="c.WeightSpecified = true", span="3936-3936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1752 [label="c.HeightSpecified = true", span="3937-3937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1753 [label="c.FavoriteNumber = 23", span="3938-3938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1754 [label="json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3939-3939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1742 [label="Assert.AreEqual(@''{\r\n  ''''Age'''': 27\r\n}'', json)", span="3923-3925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1743 [label="SpecifiedTestClass deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json)", span="3927-3927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1744 [label="Assert.IsNull(deserialized.Name)", span="3928-3928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1745 [label="Assert.IsFalse(deserialized.NameSpecified)", span="3929-3929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1746 [label="Assert.IsFalse(deserialized.WeightSpecified)", span="3930-3930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1747 [label="Assert.IsFalse(deserialized.HeightSpecified)", span="3931-3931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1748 [label="Assert.IsFalse(deserialized.FavoriteNumberSpecified)", span="3932-3932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1749 [label="Assert.AreEqual(27, deserialized.Age)", span="3933-3933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1755 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James'''',\r\n  ''''Age'''': 27,\r\n  ''''Weight'''': 0,\r\n  ''''Height'''': 0,\r\n  ''''FavoriteNumber'''': 23\r\n}'', json)", span="3941-3947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1756 [label="deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json)", span="3949-3949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1757 [label="Assert.AreEqual(''James'', deserialized.Name)", span="3950-3950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1758 [label="Assert.IsTrue(deserialized.NameSpecified)", span="3951-3951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1759 [label="Assert.IsTrue(deserialized.WeightSpecified)", span="3952-3952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1760 [label="Assert.IsTrue(deserialized.HeightSpecified)", span="3953-3953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1761 [label="Assert.IsTrue(deserialized.FavoriteNumberSpecified)", span="3954-3954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1762 [label="Assert.AreEqual(27, deserialized.Age)", span="3955-3955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1763 [label="Assert.AreEqual(23, deserialized.FavoriteNumber)", span="3956-3956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_1764 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", span="3914-3914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="DateTimeParser.cs"];
m2_79 [label="0 <= digit1 && digit1 < 10\r\n                    && 0 <= digit2 && digit2 < 10\r\n                    && 0 <= digit3 && digit3 < 10\r\n                    && 0 <= digit4 && digit4 < 10", span="235-238", cluster="Newtonsoft.Json.Utilities.DateTimeParser.Parse4Digit(int, out int)", file="DateTimeParser.cs"];
m2_2172 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="DateTimeParser.cs"];
m2_1990 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="4528-4528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="DateTimeParser.cs"];
m2_1991 [label="return JsonConvert.DeserializeObject<NullableStructPropertyClass>(\r\n        serStr,\r\n        new JsonSerializerSettings\r\n          {\r\n            NullValueHandling = NullValueHandling.Ignore,\r\n            MissingMemberHandling = MissingMemberHandling.Ignore\r\n          });", span="4530-4536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="DateTimeParser.cs"];
m2_1992 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="4528-4528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="DateTimeParser.cs"];
m2_2550 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="5857-5857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="DateTimeParser.cs"];
m2_2551 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''No JSON content found and type 'System.Int32' is not nullable. Path '', line 0, position 0.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<int>('''');\r\n        })", span="5859-5864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="DateTimeParser.cs"];
m2_2552 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="5857-5857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="DateTimeParser.cs"];
m2_629 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="1264-1264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="DateTimeParser.cs"];
m2_630 [label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="1266-1301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="DateTimeParser.cs"];
m2_631 [label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="1303-1303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="DateTimeParser.cs"];
m2_632 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="1264-1264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="DateTimeParser.cs"];
m2_2173 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="5085-5085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="DateTimeParser.cs"];
m2_2174 [label="throw new NotImplementedException();", span="5087-5087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="DateTimeParser.cs"];
m2_2175 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="5085-5085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="DateTimeParser.cs"];
m2_1144 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="2535-2535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DateTimeParser.cs"];
m2_1145 [label="ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@''{'Dictionary':{appended:'appended',existing:'new'}}'')", span="2537-2537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DateTimeParser.cs"];
m2_1146 [label="Assert.IsNotNull(d)", span="2539-2539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DateTimeParser.cs"];
m2_1147 [label="Assert.IsNotNull(d.Dictionary)", span="2540-2540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DateTimeParser.cs"];
m2_1148 [label="Assert.AreEqual(typeof(Dictionary<string, string>), d.Dictionary.GetType())", span="2541-2541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DateTimeParser.cs"];
m2_1149 [label="Assert.AreEqual(typeof(List<string>), d.List.GetType())", span="2542-2542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DateTimeParser.cs"];
m2_1150 [label="Assert.AreEqual(2, d.Dictionary.Count)", span="2543-2543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DateTimeParser.cs"];
m2_1151 [label="Assert.AreEqual(''new'', d.Dictionary[''existing''])", span="2544-2544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DateTimeParser.cs"];
m2_1152 [label="Assert.AreEqual(''appended'', d.Dictionary[''appended''])", span="2545-2545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DateTimeParser.cs"];
m2_1153 [label="Assert.AreEqual(1, d.List.Count)", span="2546-2546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DateTimeParser.cs"];
m2_1154 [label="Assert.AreEqual(''existing'', d.List[0])", span="2547-2547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DateTimeParser.cs"];
m2_1155 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="2535-2535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DateTimeParser.cs"];
m2_1364 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="DateTimeParser.cs"];
m2_37 [label="start += LzHH_mm_ss", span="136-136", cluster="Newtonsoft.Json.Utilities.DateTimeParser.ParseTime(ref int)", file="DateTimeParser.cs"];
m2_975 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="2119-2119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="DateTimeParser.cs"];
m2_976 [label="string json = @''[]''", span="2121-2121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="DateTimeParser.cs"];
m2_977 [label="ExceptionAssert.Throws<InvalidCastException>(\r\n        @''Unable to cast object of type 'Newtonsoft.Json.Linq.JArray' to type 'Newtonsoft.Json.Linq.JObject'.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<JObject>(json);\r\n        })", span="2123-2128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="DateTimeParser.cs"];
m2_978 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="2119-2119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="DateTimeParser.cs"];
m2_2001 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="DateTimeParser.cs"];
m2_1620 [label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="DateTimeParser.cs"];
m2_2657 [label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="62-62", cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="DateTimeParser.cs"];
m2_3157 [label="Entry Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.CanConvert(System.Type)", span="7538-7538", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_3158 [label="return objectType == typeof(WidgetId1) || objectType == typeof(WidgetId1?);", span="7540-7540", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_3159 [label="Exit Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.CanConvert(System.Type)", span="7538-7538", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_13 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="105-105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="DateTimeParser.cs"];
m2_14 [label="Product product = new Product()", span="107-107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="DateTimeParser.cs"];
m2_15 [label="product.Name = ''Apple''", span="109-109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="DateTimeParser.cs"];
m2_16 [label="Entry Newtonsoft.Json.Utilities.DateTimeParser.Parse(char[], int, int)", span="90-90", cluster="Newtonsoft.Json.Utilities.DateTimeParser.Parse(char[], int, int)", file="DateTimeParser.cs"];
m2_17 [label="_text = text", span="92-92", cluster="Newtonsoft.Json.Utilities.DateTimeParser.Parse(char[], int, int)", file="DateTimeParser.cs"];
m2_18 [label="_end = startIndex + length", span="93-93", cluster="Newtonsoft.Json.Utilities.DateTimeParser.Parse(char[], int, int)", file="DateTimeParser.cs", color=green, community=0];
m2_19 [label="ParseDate(startIndex) && ParseChar(Lzyyyy_MM_dd + startIndex, 'T') && ParseTimeAndZoneAndWhitespace(Lzyyyy_MM_ddT + startIndex)", span="95-95", cluster="Newtonsoft.Json.Utilities.DateTimeParser.Parse(char[], int, int)", file="DateTimeParser.cs", color=green, community=0];
m2_20 [label="return true;", span="97-97", cluster="Newtonsoft.Json.Utilities.DateTimeParser.Parse(char[], int, int)", file="DateTimeParser.cs"];
m2_21 [label="return false;", span="100-100", cluster="Newtonsoft.Json.Utilities.DateTimeParser.Parse(char[], int, int)", file="DateTimeParser.cs"];
m2_22 [label="Exit Newtonsoft.Json.Utilities.DateTimeParser.Parse(char[], int, int)", span="90-90", cluster="Newtonsoft.Json.Utilities.DateTimeParser.Parse(char[], int, int)", file="DateTimeParser.cs"];
m2_23 [label="Entry Newtonsoft.Json.Utilities.DateTimeParser.ParseDate(int)", span="103-103", cluster="Newtonsoft.Json.Utilities.DateTimeParser.ParseDate(int)", file="DateTimeParser.cs"];
m2_25 [label="Entry Newtonsoft.Json.Utilities.DateTimeParser.ParseTimeAndZoneAndWhitespace(int)", span="117-117", cluster="Newtonsoft.Json.Utilities.DateTimeParser.ParseTimeAndZoneAndWhitespace(int)", file="DateTimeParser.cs"];
m2_26 [label="return (Parse4Digit(start, out Year)\r\n                    && 1 <= Year\r\n                    && ParseChar(start + Lzyyyy, '-')\r\n                    && Parse2Digit(start + Lzyyyy_, out Month)\r\n                    && 1 <= Month\r\n                    && Month <= 12\r\n                    && ParseChar(start + Lzyyyy_MM, '-')\r\n                    && Parse2Digit(start + Lzyyyy_MM_, out Day)\r\n                    && 1 <= Day\r\n                    && Day <= DateTime.DaysInMonth(Year, Month));", span="105-114", cluster="Newtonsoft.Json.Utilities.DateTimeParser.ParseDate(int)", file="DateTimeParser.cs"];
m2_27 [label="Exit Newtonsoft.Json.Utilities.DateTimeParser.ParseDate(int)", span="103-103", cluster="Newtonsoft.Json.Utilities.DateTimeParser.ParseDate(int)", file="DateTimeParser.cs"];
m2_1887 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="4298-4298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DateTimeParser.cs"];
m2_1888 [label="dynamic expando = new ExpandoObject()", span="4300-4300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DateTimeParser.cs"];
m2_1889 [label="expando.Int = 1", span="4301-4301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DateTimeParser.cs"];
m2_1890 [label="expando.Decimal = 99.9d", span="4302-4302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DateTimeParser.cs"];
m2_1891 [label="expando.Complex = new ExpandoObject()", span="4303-4303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DateTimeParser.cs"];
m2_1892 [label="expando.Complex.String = ''I am a string''", span="4304-4304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DateTimeParser.cs"];
m2_1893 [label="expando.Complex.DateTime = new DateTime(2000, 12, 20, 18, 55, 0, DateTimeKind.Utc)", span="4305-4305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DateTimeParser.cs"];
m2_1894 [label="string json = JsonConvert.SerializeObject(expando, Formatting.Indented)", span="4307-4307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DateTimeParser.cs"];
m2_1898 [label="Assert.AreEqual((long)expando.Int, newExpando[''Int''])", span="4320-4320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DateTimeParser.cs"];
m2_1900 [label="Assert.AreEqual(expando.Decimal, newExpando[''Decimal''])", span="4323-4323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DateTimeParser.cs"];
m2_1904 [label="Assert.AreEqual(expando.Complex.String, o[''String''])", span="4329-4329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DateTimeParser.cs"];
m2_1906 [label="Assert.AreEqual(expando.Complex.DateTime, o[''DateTime''])", span="4332-4332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DateTimeParser.cs"];
m2_1895 [label="Assert.AreEqual(@''{\r\n  ''''Int'''': 1,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Complex'''': {\r\n    ''''String'''': ''''I am a string'''',\r\n    ''''DateTime'''': ''''2000-12-20T18:55:00Z''''\r\n  }\r\n}'', json)", span="4308-4315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DateTimeParser.cs"];
m2_1896 [label="IDictionary<string, object> newExpando = JsonConvert.DeserializeObject<ExpandoObject>(json)", span="4317-4317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DateTimeParser.cs"];
m2_1897 [label="CustomAssert.IsInstanceOfType(typeof(long), newExpando[''Int''])", span="4319-4319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DateTimeParser.cs"];
m2_1899 [label="CustomAssert.IsInstanceOfType(typeof(double), newExpando[''Decimal''])", span="4322-4322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DateTimeParser.cs"];
m2_1901 [label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), newExpando[''Complex''])", span="4325-4325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DateTimeParser.cs"];
m2_1902 [label="IDictionary<string, object> o = (ExpandoObject)newExpando[''Complex'']", span="4326-4326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DateTimeParser.cs"];
m2_1903 [label="CustomAssert.IsInstanceOfType(typeof(string), o[''String''])", span="4328-4328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DateTimeParser.cs"];
m2_1905 [label="CustomAssert.IsInstanceOfType(typeof(DateTime), o[''DateTime''])", span="4331-4331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DateTimeParser.cs"];
m2_1907 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="4298-4298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DateTimeParser.cs"];
m2_2385 [label="Entry Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", span="7610-7610", cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", file="DateTimeParser.cs"];
m2_3173 [label="Name = name", span="7612-7612", cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", file="DateTimeParser.cs"];
m2_3174 [label="Data = data", span="7613-7613", cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", file="DateTimeParser.cs"];
m2_3175 [label="Exit Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", span="7610-7610", cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", file="DateTimeParser.cs"];
m2_527 [label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="DateTimeParser.cs"];
m2_1610 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3680-3680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1611 [label="List<string> existingStrings = (List<string>)existingValue", span="3682-3682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1613 [label="reader.Read()", span="3685-3685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1614 [label="reader.TokenType != JsonToken.EndArray", span="3687-3687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1615 [label="string s = (string)reader.Value", span="3689-3689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1617 [label="reader.Read()", span="3692-3692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1612 [label="List<string> newStrings = new List<string>(existingStrings)", span="3683-3683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1616 [label="newStrings.Add(s)", span="3690-3690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1618 [label="return newStrings;", span="3695-3695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1619 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3680-3680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1018 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="2199-2199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="DateTimeParser.cs"];
m2_1019 [label="string json = @''{''''Name'''':''''''''}''", span="2201-2201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="DateTimeParser.cs"];
m2_1020 [label="Person p = JsonConvert.DeserializeObject<Person>(json)", span="2203-2203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="DateTimeParser.cs"];
m2_1021 [label="Assert.AreEqual('''', p.Name)", span="2204-2204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="DateTimeParser.cs"];
m2_1022 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="2199-2199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="DateTimeParser.cs"];
m2_2791 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="6395-6395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="DateTimeParser.cs"];
m2_2792 [label="ExceptionAssert.Throws<JsonException>(\r\n       ''Additional text found in JSON string after finishing deserializing object.'',\r\n       () =>\r\n         {\r\n           string json = ''[{},1]'';\r\n\r\n           JsonSerializer serializer = new JsonSerializer();\r\n           serializer.CheckAdditionalContent = true;\r\n\r\n           var reader = new JsonTextReader(new StringReader(json));\r\n           reader.Read();\r\n           reader.Read();\r\n\r\n           serializer.Deserialize(reader, typeof (MyType));\r\n         })", span="6397-6411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="DateTimeParser.cs"];
m2_2793 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="6395-6395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="DateTimeParser.cs"];
m2_1219 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="DateTimeParser.cs"];
m2_1065 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="2312-2312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DateTimeParser.cs"];
m2_1066 [label="StructTest structTest = new StructTest\r\n        {\r\n          StringProperty = ''StringProperty!'',\r\n          StringField = ''StringField'',\r\n          IntProperty = 5,\r\n          IntField = 10\r\n        }", span="2314-2320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DateTimeParser.cs"];
m2_1067 [label="string json = JsonConvert.SerializeObject(structTest, Formatting.Indented)", span="2322-2322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DateTimeParser.cs"];
m2_1071 [label="Assert.AreEqual(structTest.StringProperty, deserialized.StringProperty)", span="2332-2332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DateTimeParser.cs"];
m2_1068 [label="Console.WriteLine(json)", span="2323-2323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DateTimeParser.cs"];
m2_1069 [label="Assert.AreEqual(@''{\r\n  ''''StringField'''': ''''StringField'''',\r\n  ''''IntField'''': 10,\r\n  ''''StringProperty'''': ''''StringProperty!'''',\r\n  ''''IntProperty'''': 5\r\n}'', json)", span="2324-2329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DateTimeParser.cs"];
m2_1070 [label="StructTest deserialized = JsonConvert.DeserializeObject<StructTest>(json)", span="2331-2331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DateTimeParser.cs"];
m2_1072 [label="Assert.AreEqual(structTest.StringField, deserialized.StringField)", span="2333-2333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DateTimeParser.cs"];
m2_1073 [label="Assert.AreEqual(structTest.IntProperty, deserialized.IntProperty)", span="2334-2334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DateTimeParser.cs"];
m2_1074 [label="Assert.AreEqual(structTest.IntField, deserialized.IntField)", span="2335-2335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DateTimeParser.cs"];
m2_1075 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="2312-2312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DateTimeParser.cs"];
m2_2455 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="5664-5664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="DateTimeParser.cs"];
m2_2456 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Error reading integer. Unexpected token: Boolean. Path 'PreProperty', line 2, position 22.'',\r\n        () =>\r\n        {\r\n          string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}'';\r\n\r\n          JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n        })", span="5666-5676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="DateTimeParser.cs"];
m2_2457 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="5664-5664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="DateTimeParser.cs"];
m2_430 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="895-895", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="DateTimeParser.cs"];
m2_262 [label="Entry Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", file="DateTimeParser.cs"];
m2_252 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", span="583-583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="DateTimeParser.cs"];
m2_253 [label="ProductCollection collection = new ProductCollection()\r\n        {\r\n          new Product() {Name = ''Test1''},\r\n          new Product() {Name = ''Test2''},\r\n          new Product() {Name = ''Test3''}\r\n        }", span="585-590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="DateTimeParser.cs"];
m2_254 [label="JsonSerializer jsonSerializer = new JsonSerializer()", span="592-592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="DateTimeParser.cs"];
m2_257 [label="jsonSerializer.Serialize(sw, collection)", span="597-597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="DateTimeParser.cs"];
m2_260 [label="CollectionAssert.AreEqual(collection, collectionNew)", span="604-604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="DateTimeParser.cs"];
m2_255 [label="jsonSerializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="593-593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="DateTimeParser.cs"];
m2_259 [label="ProductCollection collectionNew = (ProductCollection)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(sw.GetStringBuilder().ToString())), typeof(ProductCollection))", span="602-602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="DateTimeParser.cs"];
m2_256 [label="StringWriter sw = new StringWriter()", span="595-595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="DateTimeParser.cs"];
m2_258 [label="Assert.AreEqual(@''[{''''Name'''':''''Test1'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''Test2'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''Test3'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}]'',\r\n                      sw.GetStringBuilder().ToString())", span="599-600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="DateTimeParser.cs"];
m2_261 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", span="583-583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="DateTimeParser.cs"];
m2_1316 [label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="DateTimeParser.cs"];
m2_1245 [label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="DateTimeParser.cs"];
m2_1328 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="DateTimeParser.cs"];
m2_1989 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", span="4460-4460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", file="DateTimeParser.cs"];
m2_188 [label="Entry JavaScriptSerializer.cstr", span="", cluster="JavaScriptSerializer.cstr", file="DateTimeParser.cs"];
m2_190 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="472-472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="DateTimeParser.cs"];
m2_191 [label="string json = @''[''''vvv\jvvv'''']''", span="474-474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="DateTimeParser.cs"];
m2_192 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n        @''Bad JSON escape sequence: \j. Path '', line 1, position 7.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<List<string>>(json);\r\n        })", span="476-481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="DateTimeParser.cs"];
m2_193 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="472-472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="DateTimeParser.cs"];
m2_1318 [label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="DateTimeParser.cs"];
m2_441 [label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="DateTimeParser.cs"];
m2_685 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="1422-1422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="DateTimeParser.cs"];
m2_686 [label="SubKlass i = new SubKlass(''my subprop'')", span="1424-1424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="DateTimeParser.cs"];
m2_687 [label="i.SuperProp = ''overrided superprop''", span="1425-1425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="DateTimeParser.cs"];
m2_688 [label="string json = JsonConvert.SerializeObject(i)", span="1427-1427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="DateTimeParser.cs"];
m2_689 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="1428-1428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="DateTimeParser.cs"];
m2_690 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="1430-1430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="DateTimeParser.cs"];
m2_691 [label="string newJson = JsonConvert.SerializeObject(ii)", span="1432-1432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="DateTimeParser.cs"];
m2_692 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="1433-1433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="DateTimeParser.cs"];
m2_693 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="1422-1422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="DateTimeParser.cs"];
m2_220 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="DateTimeParser.cs"];
m2_2258 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="5312-5312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DateTimeParser.cs"];
m2_2259 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="5314-5314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DateTimeParser.cs"];
m2_2260 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5315-5315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DateTimeParser.cs"];
m2_2263 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="5326-5326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DateTimeParser.cs"];
m2_2264 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="5327-5327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DateTimeParser.cs"];
m2_2265 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="5328-5328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DateTimeParser.cs"];
m2_2266 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="5329-5329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DateTimeParser.cs"];
m2_2267 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="5330-5330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DateTimeParser.cs"];
m2_2261 [label="Assert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', json)", span="5317-5323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DateTimeParser.cs"];
m2_2262 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="5325-5325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DateTimeParser.cs"];
m2_2268 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="5312-5312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DateTimeParser.cs"];
m2_954 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="2071-2071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="DateTimeParser.cs"];
m2_955 [label="string json = @''[]''", span="2073-2073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="DateTimeParser.cs"];
m2_956 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Exception' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Exception>(json);\r\n        })", span="2075-2082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="DateTimeParser.cs"];
m2_957 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="2071-2071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="DateTimeParser.cs"];
m2_92 [label="return false;", span="262-262", cluster="Newtonsoft.Json.Utilities.DateTimeParser.Parse2Digit(int, out int)", file="DateTimeParser.cs"];
m2_3207 [label="Entry Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7804-7804", cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_3208 [label="return Convert.ToInt32(reader.Value);", span="7806-7806", cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_3209 [label="Exit Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7804-7804", cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_2025 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="4624-4624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="DateTimeParser.cs"];
m2_2026 [label="Constructor = ''NonPublic''", span="4626-4626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="DateTimeParser.cs"];
m2_2027 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="4624-4624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="DateTimeParser.cs"];
m2_996 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="2158-2158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="DateTimeParser.cs"];
m2_997 [label="string json = @''{}''", span="2160-2160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="DateTimeParser.cs"];
m2_998 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON object (e.g. {''''name'''':''''value''''}) into type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.\r\nPath '', line 1, position 2.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<List<Person>>(json);\r\n        })", span="2162-2169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="DateTimeParser.cs"];
m2_999 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="2158-2158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="DateTimeParser.cs"];
m2_1958 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="4440-4440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="DateTimeParser.cs"];
m2_1959 [label="var derived = new Derived(''meh'', ''woo'')", span="4442-4442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="DateTimeParser.cs"];
m2_1960 [label="var settings = new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Objects,\r\n          ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n        }", span="4444-4448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="DateTimeParser.cs"];
m2_1961 [label="string json = JsonConvert.SerializeObject(derived, Formatting.Indented, settings)", span="4450-4450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="DateTimeParser.cs"];
m2_1962 [label="var meh = JsonConvert.DeserializeObject<Base>(json, settings)", span="4452-4452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="DateTimeParser.cs"];
m2_1963 [label="Assert.AreEqual(((Derived)meh).IDoWork, ''woo'')", span="4454-4454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="DateTimeParser.cs"];
m2_1964 [label="Assert.AreEqual(meh.IDontWork, ''meh'')", span="4455-4455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="DateTimeParser.cs"];
m2_1965 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="4440-4440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="DateTimeParser.cs"];
m2_982 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="2132-2132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="DateTimeParser.cs"];
m2_983 [label="string json = @''new Constructor(123)''", span="2134-2134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="DateTimeParser.cs"];
m2_984 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 16.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Person>(json);\r\n        })", span="2136-2141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="DateTimeParser.cs"];
m2_985 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="2132-2132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="DateTimeParser.cs"];
m2_1329 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="DateTimeParser.cs"];
m2_499 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="DateTimeParser.cs"];
m2_1933 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="4380-4380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="DateTimeParser.cs"];
m2_1934 [label="return string.Format(''({0},{1},{2})'', X, Y, Z);", span="4382-4382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="DateTimeParser.cs"];
m2_1935 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="4380-4380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="DateTimeParser.cs"];
m2_1622 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", span="3698-3698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_1623 [label="return (objectType == typeof(List<string>));", span="3700-3700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_1624 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", span="3698-3698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_2842 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="6496-6496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="DateTimeParser.cs"];
m2_2843 [label="m_Item1 = item1", span="6498-6498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="DateTimeParser.cs"];
m2_2844 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="6496-6496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="DateTimeParser.cs"];
m2_2201 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", span="5080-5080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", file="DateTimeParser.cs"];
m2_2156 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="5035-5035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="DateTimeParser.cs"];
m2_2157 [label="Title = title", span="5037-5037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="DateTimeParser.cs"];
m2_2158 [label="Categories = new Dictionary<string, int>()", span="5038-5038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="DateTimeParser.cs"];
m2_2159 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="5035-5035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="DateTimeParser.cs"];
m2_1722 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", span="3880-3880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", file="DateTimeParser.cs"];
m2_1723 [label="return (Manager != this);", span="3882-3882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", file="DateTimeParser.cs"];
m2_1724 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", span="3880-3880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", file="DateTimeParser.cs"];
m2_1928 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="4367-4367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="DateTimeParser.cs"];
m2_1929 [label="string json = ''{'Value':123456789876543.21}''", span="4369-4369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="DateTimeParser.cs"];
m2_1930 [label="IDictionary<string, decimal> d = JsonConvert.DeserializeObject<IDictionary<string, decimal>>(json)", span="4370-4370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="DateTimeParser.cs"];
m2_1931 [label="Assert.AreEqual(123456789876543.21m, d[''Value''])", span="4371-4371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="DateTimeParser.cs"];
m2_1932 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="4367-4367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="DateTimeParser.cs"];
m2_2207 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="5167-5167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="DateTimeParser.cs"];
m2_2208 [label="_readonlyString = ''default!''", span="5169-5169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="DateTimeParser.cs"];
m2_2209 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="5167-5167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="DateTimeParser.cs"];
m2_210 [label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0", cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="DateTimeParser.cs"];
m2_1322 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="DateTimeParser.cs"];
m2_144 [label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", file="DateTimeParser.cs"];
m2_364 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="776-776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="DateTimeParser.cs"];
m2_365 [label="TimeSpan ts = new TimeSpan(00, 23, 59, 1)", span="778-778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="DateTimeParser.cs"];
m2_366 [label="string json = JsonConvert.SerializeObject(new ClassWithTimeSpan { TimeSpanField = ts }, Formatting.Indented)", span="780-780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="DateTimeParser.cs"];
m2_369 [label="Assert.AreEqual(ts, c.TimeSpanField)", span="786-786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="DateTimeParser.cs"];
m2_367 [label="Assert.AreEqual(@''{\r\n  ''''TimeSpanField'''': ''''23:59:01''''\r\n}'', json)", span="781-783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="DateTimeParser.cs"];
m2_368 [label="ClassWithTimeSpan c = JsonConvert.DeserializeObject<ClassWithTimeSpan>(json)", span="785-785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="DateTimeParser.cs"];
m2_370 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="776-776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="DateTimeParser.cs"];
m2_2848 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="6524-6524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="DateTimeParser.cs"];
m2_2849 [label="var tuple = new MyTuple<int>(500)", span="6526-6526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="DateTimeParser.cs"];
m2_2850 [label="var json = JsonConvert.SerializeObject(tuple)", span="6527-6527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="DateTimeParser.cs"];
m2_2851 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="6528-6528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="DateTimeParser.cs"];
m2_2853 [label="Action doStuff = () =>\r\n      {\r\n        obj = JsonConvert.DeserializeObject<MyTuple<int>>(json);\r\n      }", span="6532-6535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="DateTimeParser.cs"];
m2_2852 [label="MyTuple<int> obj = null", span="6530-6530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="DateTimeParser.cs"];
m2_2854 [label="doStuff()", span="6538-6538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="DateTimeParser.cs"];
m2_2855 [label="Assert.AreEqual(500, obj.Item1)", span="6539-6539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="DateTimeParser.cs"];
m2_2856 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="6524-6524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="DateTimeParser.cs"];
m2_1296 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2968-2968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1297 [label="_stringValue = info.GetString(''stringValue'')", span="2970-2970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1298 [label="_intValue = info.GetInt32(''intValue'')", span="2971-2971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1299 [label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="2972-2972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1300 [label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="2973-2973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1301 [label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="2974-2974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1302 [label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="2975-2975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1303 [label="_booleanValue = info.GetBoolean(''booleanValue'')", span="2977-2977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1304 [label="_byteValue = info.GetByte(''byteValue'')", span="2978-2978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1305 [label="_charValue = info.GetChar(''charValue'')", span="2979-2979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1306 [label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="2980-2980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1307 [label="_decimalValue = info.GetDecimal(''decimalValue'')", span="2981-2981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1308 [label="_shortValue = info.GetInt16(''shortValue'')", span="2982-2982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1309 [label="_longValue = info.GetInt64(''longValue'')", span="2983-2983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1310 [label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="2984-2984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1311 [label="_floatValue = info.GetSingle(''floatValue'')", span="2985-2985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1312 [label="_ushortValue = info.GetUInt16(''ushortValue'')", span="2986-2986", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1313 [label="_uintValue = info.GetUInt32(''uintValue'')", span="2987-2987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1314 [label="_ulongValue = info.GetUInt64(''ulongValue'')", span="2988-2988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1315 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2968-2968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_2488 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="5743-5743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="DateTimeParser.cs"];
m2_2489 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="5745-5745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="DateTimeParser.cs"];
m2_2490 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="5746-5746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="DateTimeParser.cs"];
m2_2491 [label="Assert.AreEqual('''', dict[''k1''])", span="5748-5748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="DateTimeParser.cs"];
m2_2492 [label="Assert.AreEqual(''v2'', dict[''k2''])", span="5749-5749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="DateTimeParser.cs"];
m2_2493 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="5743-5743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="DateTimeParser.cs"];
m2_2185 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="5115-5115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="DateTimeParser.cs"];
m2_2186 [label="throw new NotImplementedException();", span="5117-5117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="DateTimeParser.cs"];
m2_2187 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="5115-5115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="DateTimeParser.cs"];
m2_2724 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="6205-6205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="DateTimeParser.cs"];
m2_2725 [label="string s = (string) new JsonSerializer().Deserialize(new JsonTextReader(new StringReader('''''')))", span="6207-6207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="DateTimeParser.cs"];
m2_2726 [label="Assert.AreEqual('''', s)", span="6208-6208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="DateTimeParser.cs"];
m2_2727 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="6205-6205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="DateTimeParser.cs"];
m2_347 [label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0", cluster="System.Collections.Generic.Stack<T>.Stack()", file="DateTimeParser.cs"];
m2_2832 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="6465-6465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="DateTimeParser.cs"];
m2_2833 [label="KeyValuePair<int, string> result =\r\n        JsonConvert.DeserializeObject<KeyValuePair<int, string>>(\r\n          ''{key: 123, \''VALUE\'': \''test value\''}''\r\n          )", span="6467-6470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="DateTimeParser.cs"];
m2_2834 [label="Assert.AreEqual(123, result.Key)", span="6472-6472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="DateTimeParser.cs"];
m2_2835 [label="Assert.AreEqual(''test value'', result.Value)", span="6473-6473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="DateTimeParser.cs"];
m2_2836 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="6465-6465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="DateTimeParser.cs"];
m2_1223 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="2805-2805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="DateTimeParser.cs"];
m2_1224 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="2805-2805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="DateTimeParser.cs"];
m2_2281 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="DateTimeParser.cs"];
m2_30 [label="Entry System.DateTime.DaysInMonth(int, int)", span="0-0", cluster="System.DateTime.DaysInMonth(int, int)", file="DateTimeParser.cs"];
m2_31 [label="return (ParseTime(ref start) && ParseZone(start));", span="119-119", cluster="Newtonsoft.Json.Utilities.DateTimeParser.ParseTimeAndZoneAndWhitespace(int)", file="DateTimeParser.cs"];
m2_32 [label="Exit Newtonsoft.Json.Utilities.DateTimeParser.ParseTimeAndZoneAndWhitespace(int)", span="117-117", cluster="Newtonsoft.Json.Utilities.DateTimeParser.ParseTimeAndZoneAndWhitespace(int)", file="DateTimeParser.cs"];
m2_33 [label="Entry Newtonsoft.Json.Utilities.DateTimeParser.ParseTime(ref int)", span="122-122", cluster="Newtonsoft.Json.Utilities.DateTimeParser.ParseTime(ref int)", file="DateTimeParser.cs"];
m2_35 [label="!(Parse2Digit(start, out Hour)\r\n                  && Hour < 24\r\n                  && ParseChar(start + LzHH, ':')\r\n                  && Parse2Digit(start + LzHH_, out Minute)\r\n                  && Minute < 60\r\n                  && ParseChar(start + LzHH_mm, ':')\r\n                  && Parse2Digit(start + LzHH_mm_, out Second)\r\n                  && Second < 60)", span="124-131", cluster="Newtonsoft.Json.Utilities.DateTimeParser.ParseTime(ref int)", file="DateTimeParser.cs"];
m2_36 [label="return false;", span="133-133", cluster="Newtonsoft.Json.Utilities.DateTimeParser.ParseTime(ref int)", file="DateTimeParser.cs"];
m2_644 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="1321-1321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="DateTimeParser.cs"];
m2_645 [label="Person person = new Person\r\n        {\r\n          Name = ''Mike Manager'',\r\n          BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n          Department = ''IT'',\r\n          LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n        }", span="1323-1329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="DateTimeParser.cs"];
m2_646 [label="return person;", span="1330-1330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="DateTimeParser.cs"];
m2_647 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="1321-1321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="DateTimeParser.cs"];
m2_819 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="389-389", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="DateTimeParser.cs"];
m2_2957 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", span="6828-6828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", file="DateTimeParser.cs"];
m2_2958 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],{}]],''''After'''':''''After!''''}''", span="6830-6830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", file="DateTimeParser.cs"];
m2_2959 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected token when deserializing multidimensional array: StartObject. Path 'Coordinates[3][1]', line 1, position 99.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="6832-6834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", file="DateTimeParser.cs"];
m2_2960 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", span="6828-6828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", file="DateTimeParser.cs"];
m2_99 [label="ref Newtonsoft.Json.Utilities.DateTimeParser", span="", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="DateTimeParser.cs"];
m2_2387 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="596-596", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="DateTimeParser.cs"];
m2_3123 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", span="7328-7328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="DateTimeParser.cs"];
m2_3124 [label="NewEmployee joe = new NewEmployee()", span="7330-7330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="DateTimeParser.cs"];
m2_3125 [label="joe.Name = ''Joe Employee''", span="7331-7331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="DateTimeParser.cs"];
m2_3126 [label="joe.Age = 100", span="7332-7332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="DateTimeParser.cs"];
m2_3130 [label="joe.Manager = mike", span="7338-7338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="DateTimeParser.cs"];
m2_3131 [label="string json = JsonConvert.SerializeObject(joe, Formatting.Indented)", span="7350-7350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="DateTimeParser.cs"];
m2_3127 [label="Employee mike = new Employee()", span="7334-7334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="DateTimeParser.cs"];
m2_3128 [label="mike.Name = ''Mike Manager''", span="7335-7335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="DateTimeParser.cs"];
m2_3129 [label="mike.Manager = mike", span="7336-7336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="DateTimeParser.cs"];
m2_3132 [label="Assert.AreEqual(@''{\r\n  ''''Age'''': 100,\r\n  ''''Name'''': ''''Joe Employee'''',\r\n  ''''Manager'''': {\r\n    ''''Name'''': ''''Mike Manager''''\r\n  }\r\n}'', json)", span="7352-7358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="DateTimeParser.cs"];
m2_3133 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", span="7328-7328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="DateTimeParser.cs"];
m2_3194 [label="Entry string.ToLower(System.Globalization.CultureInfo)", span="0-0", cluster="string.ToLower(System.Globalization.CultureInfo)", file="DateTimeParser.cs"];
m2_601 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="1217-1217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="DateTimeParser.cs"];
m2_602 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Required property 'LastName' not found in JSON. Path '', line 3, position 2.'',\r\n        () =>\r\n        {\r\n          string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}'';\r\n\r\n          JsonConvert.DeserializeObject<RequiredMembersClass>(json);\r\n        })", span="1219-1228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="DateTimeParser.cs"];
m2_603 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="1217-1217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="DateTimeParser.cs"];
m2_2014 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="4600-4600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="DateTimeParser.cs"];
m2_2015 [label="Constructor = ''NonPublic''", span="4602-4602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="DateTimeParser.cs"];
m2_2016 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="4600-4600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="DateTimeParser.cs"];
m2_593 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="1197-1197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="DateTimeParser.cs"];
m2_594 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.'',\r\n        () =>\r\n        {\r\n          RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n            {\r\n              FirstName = null,\r\n              BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n              LastName = null,\r\n              MiddleName = null\r\n            };\r\n\r\n          string json = JsonConvert.SerializeObject(requiredMembersClass);\r\n          Console.WriteLine(json);\r\n        })", span="1199-1213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="DateTimeParser.cs"];
m2_595 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="1197-1197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="DateTimeParser.cs"];
m2_2825 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="6445-6445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_2826 [label="return true;", span="6447-6447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_2827 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="6445-6445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_1969 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4476-4476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1970 [label="info.AddValue(''Name'', _name)", span="4478-4478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1971 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4476-4476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_158 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="DateTimeParser.cs"];
m2_1520 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", span="3504-3504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", file="DateTimeParser.cs"];
m2_12 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="DateTimeParser.cs"];
m2_1639 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3727-3727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1640 [label="string existingString = (string)existingValue", span="3729-3729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1641 [label="string newString = existingString + (string)reader.Value", span="3730-3730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1642 [label="return newString;", span="3732-3732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1643 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3727-3727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_2857 [label="Entry System.Action.Invoke()", span="0-0", cluster="System.Action.Invoke()", file="DateTimeParser.cs"];
m2_2604 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="5967-5967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="DateTimeParser.cs"];
m2_2605 [label="var person = PersonWithPrivateConstructor.CreatePerson()", span="5969-5969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="DateTimeParser.cs"];
m2_2606 [label="person.Name = ''John Doe''", span="5970-5970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="DateTimeParser.cs"];
m2_2607 [label="person.Age = 25", span="5971-5971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="DateTimeParser.cs"];
m2_2608 [label="var serializedPerson = JsonConvert.SerializeObject(person)", span="5973-5973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="DateTimeParser.cs"];
m2_2610 [label="Assert.AreEqual(person.Name, roundtrippedPerson.Name)", span="5976-5976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="DateTimeParser.cs"];
m2_2609 [label="var roundtrippedPerson = JsonConvert.DeserializeObject<PersonWithPrivateConstructor>(serializedPerson)", span="5974-5974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="DateTimeParser.cs"];
m2_2611 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="5967-5967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="DateTimeParser.cs"];
m2_799 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="1710-1710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="DateTimeParser.cs"];
m2_800 [label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="1712-1721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="DateTimeParser.cs"];
m2_801 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="1723-1723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="DateTimeParser.cs"];
m2_802 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="1725-1725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="DateTimeParser.cs"];
m2_803 [label="Assert.AreEqual(new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc), deserializedProduct.ExpiryDate)", span="1726-1726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="DateTimeParser.cs"];
m2_804 [label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="1727-1727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="DateTimeParser.cs"];
m2_805 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="1728-1728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="DateTimeParser.cs"];
m2_806 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="1729-1729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="DateTimeParser.cs"];
m2_807 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="1730-1730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="DateTimeParser.cs"];
m2_808 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="1710-1710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="DateTimeParser.cs"];
m2_2997 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", span="6889-6889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", file="DateTimeParser.cs"];
m2_2998 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/''", span="6891-6891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", file="DateTimeParser.cs"];
m2_2999 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected end when deserializing array. Path 'Coordinates[0]', line 1, position 48.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="6893-6895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", file="DateTimeParser.cs"];
m2_3000 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", span="6889-6889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", file="DateTimeParser.cs"];
m2_0 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="90-90", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="DateTimeParser.cs"];
m2_1 [label="Store store = new Store()", span="92-92", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="DateTimeParser.cs"];
m2_2 [label="string jsonText = JsonConvert.SerializeObject(store)", span="94-94", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="DateTimeParser.cs"];
m2_4 [label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="98-98", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="DateTimeParser.cs"];
m2_5 [label="Assert.AreEqual(store.product.Count, deserializedStore.product.Count)", span="99-99", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="DateTimeParser.cs"];
m2_3 [label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="96-96", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="DateTimeParser.cs"];
m2_6 [label="Console.WriteLine(jsonText)", span="101-101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="DateTimeParser.cs"];
m2_7 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="90-90", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="DateTimeParser.cs"];
m2_1498 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="DateTimeParser.cs"];
m2_2753 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="6258-6258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="DateTimeParser.cs"];
m2_2754 [label="Event e = new Event\r\n        {\r\n          EventName = ''Blackadder III'',\r\n          Venue = ''Gryphon Theatre'',\r\n          Performances = new List<DateTime>\r\n            {\r\n              JsonConvert.ConvertJavaScriptTicksToDateTime(1336458600000),\r\n              JsonConvert.ConvertJavaScriptTicksToDateTime(1336545000000),\r\n              JsonConvert.ConvertJavaScriptTicksToDateTime(1336636800000)\r\n            }\r\n        }", span="6260-6270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="DateTimeParser.cs"];
m2_2755 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="6272-6272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="DateTimeParser.cs"];
m2_2756 [label="Assert.AreEqual(@''{\r\n  ''''EventName'''': ''''Blackadder III'''',\r\n  ''''Venue'''': ''''Gryphon Theatre'''',\r\n  ''''Performances'''': [\r\n    new Date(\r\n      1336458600000\r\n    ),\r\n    new Date(\r\n      1336545000000\r\n    ),\r\n    new Date(\r\n      1336636800000\r\n    )\r\n  ]\r\n}'', json)", span="6283-6297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="DateTimeParser.cs"];
m2_2757 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="6258-6258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="DateTimeParser.cs"];
m2_2046 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="4667-4667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="DateTimeParser.cs"];
m2_2047 [label="MultipleParamatrizedConstructorsJsonConstructor c = JsonConvert.DeserializeObject<MultipleParamatrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'')", span="4669-4669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="DateTimeParser.cs"];
m2_2048 [label="Assert.AreEqual(''Public Paramatized 2'', c.Constructor)", span="4670-4670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="DateTimeParser.cs"];
m2_2049 [label="Assert.AreEqual(''value!'', c.Value)", span="4671-4671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="DateTimeParser.cs"];
m2_2050 [label="Assert.AreEqual(1, c.Age)", span="4672-4672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="DateTimeParser.cs"];
m2_2051 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="4667-4667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="DateTimeParser.cs"];
m2_309 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="665-665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DateTimeParser.cs"];
m2_310 [label="ClassWithArray wibble = new ClassWithArray()", span="667-667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DateTimeParser.cs"];
m2_311 [label="wibble.Foo = ''hello''", span="668-668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DateTimeParser.cs"];
m2_312 [label="wibble.Bar.Add(1)", span="669-669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DateTimeParser.cs"];
m2_313 [label="wibble.Bar.Add(2)", span="670-670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DateTimeParser.cs"];
m2_314 [label="wibble.Bar.Add(3)", span="671-671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DateTimeParser.cs"];
m2_315 [label="string json = JsonConvert.SerializeObject(wibble)", span="672-672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DateTimeParser.cs"];
m2_316 [label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="674-674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DateTimeParser.cs"];
m2_317 [label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="675-675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DateTimeParser.cs"];
m2_318 [label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="677-677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DateTimeParser.cs"];
m2_319 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="678-678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DateTimeParser.cs"];
m2_320 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="679-679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DateTimeParser.cs"];
m2_321 [label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="680-680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DateTimeParser.cs"];
m2_322 [label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="681-681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DateTimeParser.cs"];
m2_323 [label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="682-682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DateTimeParser.cs"];
m2_324 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="665-665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DateTimeParser.cs"];
m2_1385 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="3151-3151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DateTimeParser.cs"];
m2_1386 [label="Person person = new Person()", span="3153-3153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DateTimeParser.cs"];
m2_1387 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="3154-3154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DateTimeParser.cs"];
m2_1388 [label="person.LastModified = person.BirthDate", span="3155-3155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DateTimeParser.cs"];
m2_1389 [label="person.Department = ''Department!''", span="3156-3156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DateTimeParser.cs"];
m2_1390 [label="person.Name = ''Name!''", span="3157-3157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DateTimeParser.cs"];
m2_1394 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="3167-3167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DateTimeParser.cs"];
m2_1391 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="3159-3159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DateTimeParser.cs"];
m2_1392 [label="string dateTimeOffsetText", span="3160-3160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DateTimeParser.cs"];
m2_1400 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="3201-3201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DateTimeParser.cs"];
m2_1393 [label="dateTimeOffsetText = @''\/Date(977345999000+0200)\/''", span="3162-3162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DateTimeParser.cs"];
m2_1396 [label="Assert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''\/Date(946688461000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(946688461000)\/''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''\/Date(-62135596800000)\/'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="3173-3196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DateTimeParser.cs"];
m2_1395 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n        })", span="3169-3172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DateTimeParser.cs"];
m2_1397 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="3198-3198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DateTimeParser.cs"];
m2_1398 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="3199-3199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DateTimeParser.cs"];
m2_1399 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="3200-3200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DateTimeParser.cs"];
m2_1401 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="3202-3202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DateTimeParser.cs"];
m2_1402 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="3203-3203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DateTimeParser.cs"];
m2_1403 [label="Assert.AreEqual(null, o2._nullableInt)", span="3204-3204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DateTimeParser.cs"];
m2_1404 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="3151-3151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DateTimeParser.cs"];
m2_471 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="965-965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="DateTimeParser.cs"];
m2_472 [label="DateTime testDate = new DateTime(JsonConvert.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="967-967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="DateTimeParser.cs"];
m2_473 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="968-968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="DateTimeParser.cs"];
m2_477 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="975-975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="DateTimeParser.cs"];
m2_478 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="976-976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="DateTimeParser.cs"];
m2_474 [label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="970-970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="DateTimeParser.cs"];
m2_475 [label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="971-971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="DateTimeParser.cs"];
m2_476 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="973-973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="DateTimeParser.cs"];
m2_479 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="965-965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="DateTimeParser.cs"];
m2_2320 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)", file="DateTimeParser.cs"];
m2_2469 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="5694-5694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="DateTimeParser.cs"];
m2_2470 [label="string json = @''{''''Id'''':null}''", span="5696-5696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="DateTimeParser.cs"];
m2_2471 [label="var c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="5697-5697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="DateTimeParser.cs"];
m2_2472 [label="Assert.AreEqual(null, c.Id)", span="5699-5699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="DateTimeParser.cs"];
m2_2473 [label="json = @''{''''Id'''':''''d8220a4b-75b1-4b7a-8112-b7bdae956a45''''}''", span="5701-5701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="DateTimeParser.cs"];
m2_2474 [label="c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="5702-5702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="DateTimeParser.cs"];
m2_2475 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), c.Id)", span="5704-5704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="DateTimeParser.cs"];
m2_2476 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="5694-5694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="DateTimeParser.cs"];
m2_694 [label="Entry Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", file="DateTimeParser.cs"];
m2_2303 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="110-110", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="DateTimeParser.cs"];
m2_842 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="1814-1814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="DateTimeParser.cs"];
m2_843 [label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="1816-1828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="DateTimeParser.cs"];
m2_844 [label="Content content = JsonConvert.DeserializeObject<Content>(json)", span="1830-1830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="DateTimeParser.cs"];
m2_845 [label="Assert.AreEqual(''Blah, blah, blah'', content.Text)", span="1832-1832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="DateTimeParser.cs"];
m2_846 [label="Assert.AreEqual(2, content.Children.Count)", span="1833-1833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="DateTimeParser.cs"];
m2_847 [label="Assert.AreEqual(''First'', content.Children[0].Text)", span="1834-1834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="DateTimeParser.cs"];
m2_848 [label="Assert.AreEqual(''Second'', content.Children[1].Text)", span="1835-1835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="DateTimeParser.cs"];
m2_849 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="1814-1814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="DateTimeParser.cs"];
m2_3001 [label="Entry lambda expression", span="6895-6895", cluster="lambda expression", file="DateTimeParser.cs"];
m2_141 [label="Entry lambda expression", span="398-401", cluster="lambda expression", file="DateTimeParser.cs"];
m2_142 [label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="400-400", cluster="lambda expression", file="DateTimeParser.cs"];
m2_143 [label="Exit lambda expression", span="398-401", cluster="lambda expression", file="DateTimeParser.cs"];
m2_195 [label="JsonConvert.DeserializeObject<List<string>>(json)", span="480-480", cluster="lambda expression", file="DateTimeParser.cs"];
m2_194 [label="Entry lambda expression", span="478-481", cluster="lambda expression", file="DateTimeParser.cs"];
m2_196 [label="Exit lambda expression", span="478-481", cluster="lambda expression", file="DateTimeParser.cs"];
m2_459 [label="JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n         {\r\n           DateParseHandling = DateParseHandling.None\r\n         })", span="939-942", cluster="lambda expression", file="DateTimeParser.cs"];
m2_458 [label="Entry lambda expression", span="937-943", cluster="lambda expression", file="DateTimeParser.cs"];
m2_460 [label="Exit lambda expression", span="937-943", cluster="lambda expression", file="DateTimeParser.cs"];
m2_503 [label="Entry lambda expression", span="1020-1024", cluster="lambda expression", file="DateTimeParser.cs"];
m2_504 [label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="1022-1022", cluster="lambda expression", file="DateTimeParser.cs"];
m2_505 [label="JsonConvert.SerializeObject(c)", span="1023-1023", cluster="lambda expression", file="DateTimeParser.cs"];
m2_506 [label="Exit lambda expression", span="1020-1024", cluster="lambda expression", file="DateTimeParser.cs"];
m2_589 [label="Entry lambda expression", span="1183-1193", cluster="lambda expression", file="DateTimeParser.cs"];
m2_590 [label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="1185-1190", cluster="lambda expression", file="DateTimeParser.cs"];
m2_591 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1192-1192", cluster="lambda expression", file="DateTimeParser.cs"];
m2_592 [label="Exit lambda expression", span="1183-1193", cluster="lambda expression", file="DateTimeParser.cs"];
m2_596 [label="Entry lambda expression", span="1201-1213", cluster="lambda expression", file="DateTimeParser.cs"];
m2_597 [label="RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n            {\r\n              FirstName = null,\r\n              BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n              LastName = null,\r\n              MiddleName = null\r\n            }", span="1203-1209", cluster="lambda expression", file="DateTimeParser.cs"];
m2_598 [label="string json = JsonConvert.SerializeObject(requiredMembersClass)", span="1211-1211", cluster="lambda expression", file="DateTimeParser.cs"];
m2_599 [label="Console.WriteLine(json)", span="1212-1212", cluster="lambda expression", file="DateTimeParser.cs"];
m2_600 [label="Exit lambda expression", span="1201-1213", cluster="lambda expression", file="DateTimeParser.cs"];
m2_604 [label="Entry lambda expression", span="1221-1228", cluster="lambda expression", file="DateTimeParser.cs"];
m2_605 [label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="1223-1225", cluster="lambda expression", file="DateTimeParser.cs"];
m2_606 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1227-1227", cluster="lambda expression", file="DateTimeParser.cs"];
m2_607 [label="Exit lambda expression", span="1221-1228", cluster="lambda expression", file="DateTimeParser.cs"];
m2_642 [label="InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass))", span="1317-1317", cluster="lambda expression", file="DateTimeParser.cs"];
m2_641 [label="Entry lambda expression", span="1315-1318", cluster="lambda expression", file="DateTimeParser.cs"];
m2_643 [label="Exit lambda expression", span="1315-1318", cluster="lambda expression", file="DateTimeParser.cs"];
m2_729 [label="Entry lambda expression", span="1509-1515", cluster="lambda expression", file="DateTimeParser.cs"];
m2_730 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="1511-1511", cluster="lambda expression", file="DateTimeParser.cs"];
m2_731 [label="o.ReferenceLoopHandlingErrorProperty = o", span="1512-1512", cluster="lambda expression", file="DateTimeParser.cs"];
m2_732 [label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="1514-1514", cluster="lambda expression", file="DateTimeParser.cs"];
m2_733 [label="Exit lambda expression", span="1509-1515", cluster="lambda expression", file="DateTimeParser.cs"];
m2_918 [label="JsonConvert.DeserializeObject<TestObjects.Event>(json)", span="2004-2004", cluster="lambda expression", file="DateTimeParser.cs"];
m2_917 [label="Entry lambda expression", span="2002-2005", cluster="lambda expression", file="DateTimeParser.cs"];
m2_919 [label="Exit lambda expression", span="2002-2005", cluster="lambda expression", file="DateTimeParser.cs"];
m2_945 [label="JsonConvert.DeserializeObject<Person>(json)", span="2050-2050", cluster="lambda expression", file="DateTimeParser.cs"];
m2_944 [label="Entry lambda expression", span="2048-2051", cluster="lambda expression", file="DateTimeParser.cs"];
m2_946 [label="Exit lambda expression", span="2048-2051", cluster="lambda expression", file="DateTimeParser.cs"];
m2_952 [label="JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="2065-2065", cluster="lambda expression", file="DateTimeParser.cs"];
m2_951 [label="Entry lambda expression", span="2063-2066", cluster="lambda expression", file="DateTimeParser.cs"];
m2_953 [label="Exit lambda expression", span="2063-2066", cluster="lambda expression", file="DateTimeParser.cs"];
m2_959 [label="JsonConvert.DeserializeObject<Exception>(json)", span="2081-2081", cluster="lambda expression", file="DateTimeParser.cs"];
m2_958 [label="Entry lambda expression", span="2079-2082", cluster="lambda expression", file="DateTimeParser.cs"];
m2_960 [label="Exit lambda expression", span="2079-2082", cluster="lambda expression", file="DateTimeParser.cs"];
m2_966 [label="JsonConvert.DeserializeObject<double>(json)", span="2097-2097", cluster="lambda expression", file="DateTimeParser.cs"];
m2_965 [label="Entry lambda expression", span="2095-2098", cluster="lambda expression", file="DateTimeParser.cs"];
m2_967 [label="Exit lambda expression", span="2095-2098", cluster="lambda expression", file="DateTimeParser.cs"];
m2_973 [label="JsonConvert.DeserializeObject<DynamicDictionary>(json)", span="2113-2113", cluster="lambda expression", file="DateTimeParser.cs"];
m2_972 [label="Entry lambda expression", span="2111-2114", cluster="lambda expression", file="DateTimeParser.cs"];
m2_974 [label="Exit lambda expression", span="2111-2114", cluster="lambda expression", file="DateTimeParser.cs"];
m2_980 [label="JsonConvert.DeserializeObject<JObject>(json)", span="2127-2127", cluster="lambda expression", file="DateTimeParser.cs"];
m2_979 [label="Entry lambda expression", span="2125-2128", cluster="lambda expression", file="DateTimeParser.cs"];
m2_981 [label="Exit lambda expression", span="2125-2128", cluster="lambda expression", file="DateTimeParser.cs"];
m2_987 [label="JsonConvert.DeserializeObject<Person>(json)", span="2140-2140", cluster="lambda expression", file="DateTimeParser.cs"];
m2_986 [label="Entry lambda expression", span="2138-2141", cluster="lambda expression", file="DateTimeParser.cs"];
m2_988 [label="Exit lambda expression", span="2138-2141", cluster="lambda expression", file="DateTimeParser.cs"];
m2_994 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="2153-2153", cluster="lambda expression", file="DateTimeParser.cs"];
m2_993 [label="Entry lambda expression", span="2151-2154", cluster="lambda expression", file="DateTimeParser.cs"];
m2_995 [label="Exit lambda expression", span="2151-2154", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1001 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="2168-2168", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1000 [label="Entry lambda expression", span="2166-2169", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1002 [label="Exit lambda expression", span="2166-2169", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1008 [label="JsonConvert.PopulateObject(json, new Person())", span="2181-2181", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1007 [label="Entry lambda expression", span="2179-2182", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1009 [label="Exit lambda expression", span="2179-2182", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1016 [label="JsonConvert.PopulateObject(json, new List<Person>())", span="2194-2194", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1015 [label="Entry lambda expression", span="2192-2195", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1017 [label="Exit lambda expression", span="2192-2195", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1026 [label="Entry lambda expression", span="2212-2223", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1027 [label="JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          })", span="2214-2222", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1028 [label="Exit lambda expression", span="2212-2223", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1033 [label="Entry lambda expression", span="2231-2242", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1034 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          })", span="2233-2241", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1035 [label="Exit lambda expression", span="2231-2242", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1039 [label="Entry lambda expression", span="2250-2261", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1040 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n            {\r\n              ContractResolver = new DefaultContractResolver\r\n                {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE)\r\n                  IgnoreSerializableAttribute = true\r\n#endif\r\n                }\r\n            })", span="2252-2260", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1041 [label="Exit lambda expression", span="2250-2261", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1045 [label="Entry lambda expression", span="2269-2280", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1046 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          })", span="2271-2279", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1047 [label="Exit lambda expression", span="2269-2280", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1109 [label="Entry lambda expression", span="2395-2404", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1110 [label="string json =\r\n          @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}''", span="2397-2401", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1111 [label="JsonConvert.DeserializeObject<Dictionary<Person, int>>(json)", span="2403-2403", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1112 [label="Exit lambda expression", span="2395-2404", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1160 [label="Entry lambda expression", span="2584-2584", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1161 [label="x.Id == id", span="2584-2584", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1162 [label="Exit lambda expression", span="2584-2584", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1189 [label="JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="2668-2668", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1188 [label="Entry lambda expression", span="2666-2669", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1190 [label="Exit lambda expression", span="2666-2669", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1666 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="3775-3775", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1665 [label="Entry lambda expression", span="3773-3776", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1667 [label="Exit lambda expression", span="3773-3776", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1671 [label="Entry lambda expression", span="3784-3799", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1672 [label="var reference = new Dictionary<string, object>()", span="3788-3788", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1673 [label="reference.Add(''$ref'', 1)", span="3789-3789", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1674 [label="reference.Add(''$id'', 1)", span="3790-3790", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1678 [label="child.Add(''Father'', reference)", span="3795-3795", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1675 [label="var child = new Dictionary<string, object>()", span="3792-3792", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1676 [label="child.Add(''_id'', 2)", span="3793-3793", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1677 [label="child.Add(''Name'', ''Isabell'')", span="3794-3794", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1679 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="3797-3797", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1680 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="3798-3798", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1681 [label="Exit lambda expression", span="3784-3799", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1848 [label="JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="4190-4190", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1847 [label="Entry lambda expression", span="4188-4191", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1849 [label="Exit lambda expression", span="4188-4191", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2078 [label="Entry lambda expression", span="4758-4761", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2079 [label="JsonConvert.DeserializeObject(''null'', typeof(DateTime))", span="4760-4760", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2080 [label="Exit lambda expression", span="4758-4761", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2353 [label="JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="5484-5484", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2352 [label="Entry lambda expression", span="5482-5485", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2354 [label="Exit lambda expression", span="5482-5485", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2439 [label="List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json)", span="5637-5637", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2438 [label="Entry lambda expression", span="5635-5638", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2440 [label="Exit lambda expression", span="5635-5638", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2458 [label="Entry lambda expression", span="5668-5676", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2459 [label="string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}''", span="5670-5673", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2460 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="5675-5675", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2461 [label="Exit lambda expression", span="5668-5676", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2465 [label="Entry lambda expression", span="5684-5690", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2466 [label="string json = @''{\r\n  ''''PreProperty'''': ''", span="5686-5687", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2467 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="5689-5689", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2468 [label="Exit lambda expression", span="5684-5690", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2541 [label="Entry lambda expression", span="5839-5842", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2542 [label="JsonConvert.DeserializeObject<double>('''')", span="5841-5841", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2543 [label="Exit lambda expression", span="5839-5842", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2547 [label="Entry lambda expression", span="5850-5853", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2548 [label="JsonConvert.DeserializeObject<StringComparison>('''')", span="5852-5852", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2549 [label="Exit lambda expression", span="5850-5853", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2553 [label="Entry lambda expression", span="5861-5864", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2554 [label="JsonConvert.DeserializeObject<int>('''')", span="5863-5863", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2555 [label="Exit lambda expression", span="5861-5864", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2563 [label="Entry lambda expression", span="5880-5883", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2564 [label="JsonConvert.DeserializeObject<double>(null)", span="5882-5882", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2565 [label="Exit lambda expression", span="5880-5883", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2569 [label="Entry lambda expression", span="5892-5895", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2570 [label="JsonConvert.DeserializeObject(null)", span="5894-5894", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2571 [label="Exit lambda expression", span="5892-5895", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2677 [label="errors.Add(e.ErrorContext.Error.Message)", span="6096-6096", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2678 [label="e.ErrorContext.Handled = true", span="6097-6097", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2676 [label="Entry lambda expression", span="6094-6098", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2679 [label="Exit lambda expression", span="6094-6098", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2692 [label="errors.Add(e.ErrorContext.Error.Message)", span="6121-6121", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2693 [label="e.ErrorContext.Handled = true", span="6122-6122", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2691 [label="Entry lambda expression", span="6119-6123", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2694 [label="Exit lambda expression", span="6119-6123", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2707 [label="errors.Add(e.ErrorContext.Error.Message)", span="6144-6144", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2708 [label="e.ErrorContext.Handled = true", span="6145-6145", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2706 [label="Entry lambda expression", span="6142-6146", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2709 [label="Exit lambda expression", span="6142-6146", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2782 [label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="6352-6352", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2781 [label="Entry lambda expression", span="6350-6353", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2783 [label="Exit lambda expression", span="6350-6353", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2794 [label="Entry lambda expression", span="6399-6411", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2795 [label="string json = ''[{},1]''", span="6401-6401", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2796 [label="JsonSerializer serializer = new JsonSerializer()", span="6403-6403", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2798 [label="var reader = new JsonTextReader(new StringReader(json))", span="6406-6406", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2797 [label="serializer.CheckAdditionalContent = true", span="6404-6404", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2801 [label="serializer.Deserialize(reader, typeof (MyType))", span="6410-6410", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2799 [label="reader.Read()", span="6407-6407", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2800 [label="reader.Read()", span="6408-6408", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2802 [label="Exit lambda expression", span="6399-6411", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2859 [label="obj = JsonConvert.DeserializeObject<MyTuple<int>>(json)", span="6534-6534", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2858 [label="Entry lambda expression", span="6532-6535", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2860 [label="Exit lambda expression", span="6532-6535", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2928 [label="JsonConvert.DeserializeObject<Array2D>(json)", span="6784-6784", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2927 [label="Entry lambda expression", span="6784-6784", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2929 [label="Exit lambda expression", span="6784-6784", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2935 [label="JsonConvert.DeserializeObject<Array2D>(json)", span="6794-6794", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2934 [label="Entry lambda expression", span="6794-6794", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2936 [label="Exit lambda expression", span="6794-6794", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2955 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="6824-6824", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2954 [label="Entry lambda expression", span="6824-6824", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2956 [label="Exit lambda expression", span="6824-6824", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2962 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="6834-6834", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2961 [label="Entry lambda expression", span="6834-6834", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2963 [label="Exit lambda expression", span="6834-6834", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2969 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="6844-6844", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2968 [label="Entry lambda expression", span="6844-6844", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2970 [label="Exit lambda expression", span="6844-6844", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2995 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="6885-6885", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2994 [label="Entry lambda expression", span="6885-6885", cluster="lambda expression", file="DateTimeParser.cs"];
m2_2996 [label="Exit lambda expression", span="6885-6885", cluster="lambda expression", file="DateTimeParser.cs"];
m2_3002 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="6895-6895", cluster="lambda expression", file="DateTimeParser.cs"];
m2_3003 [label="Exit lambda expression", span="6895-6895", cluster="lambda expression", file="DateTimeParser.cs"];
m2_1156 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DateTimeParser.cs"];
m2_1554 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", span="3563-3563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="DateTimeParser.cs"];
m2_1555 [label="string s = @''host\user''", span="3565-3565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="DateTimeParser.cs"];
m2_1556 [label="string serialized = JsonConvert.SerializeObject(s)", span="3566-3566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="DateTimeParser.cs"];
m2_1559 [label="d1.Add(5, s)", span="3570-3570", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="DateTimeParser.cs"];
m2_1562 [label="d2.Add(s, 5)", span="3574-3574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="DateTimeParser.cs"];
m2_1557 [label="Assert.AreEqual(@''''''host\\user'''''', serialized)", span="3567-3567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="DateTimeParser.cs"];
m2_1558 [label="Dictionary<int, object> d1 = new Dictionary<int, object>()", span="3569-3569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="DateTimeParser.cs"];
m2_1560 [label="Assert.AreEqual(@''{''''5'''':''''host\\user''''}'', JsonConvert.SerializeObject(d1))", span="3571-3571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="DateTimeParser.cs"];
m2_1561 [label="Dictionary<string, object> d2 = new Dictionary<string, object>()", span="3573-3573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="DateTimeParser.cs"];
m2_1563 [label="Assert.AreEqual(@''{''''host\\user'''':5}'', JsonConvert.SerializeObject(d2))", span="3575-3575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="DateTimeParser.cs"];
m2_1564 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", span="3563-3563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="DateTimeParser.cs"];
m2_3146 [label="Entry Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", span="7420-7420", cluster="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", file="DateTimeParser.cs"];
m2_3147 [label="this.answerValues = (from answer in Enum.GetNames(typeof(Antworten))\r\n                           select new SelectListItem { Text = answer, Value = answer, Selected = false })\r\n                           .ToList()", span="7422-7424", cluster="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", file="DateTimeParser.cs"];
m2_3148 [label="Exit Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", span="7420-7420", cluster="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", file="DateTimeParser.cs"];
m2_481 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="980-980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="DateTimeParser.cs"];
m2_482 [label="DateTime date = Convert.ToDateTime(''1970-01-01T00:00:00Z'').ToUniversalTime()", span="982-982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="DateTimeParser.cs"];
m2_483 [label="MemberConverterClass c = new MemberConverterClass\r\n        {\r\n          DefaultConverter = date,\r\n          MemberConverter = date\r\n        }", span="984-988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="DateTimeParser.cs"];
m2_484 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="990-990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="DateTimeParser.cs"];
m2_485 [label="Console.WriteLine(json)", span="992-992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="DateTimeParser.cs"];
m2_486 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="980-980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="DateTimeParser.cs"];
m2_2898 [label="Entry Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()", span="7789-7789", cluster="Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()", file="DateTimeParser.cs"];
m2_1036 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="2246-2246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="DateTimeParser.cs"];
m2_1037 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 15.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n            {\r\n              ContractResolver = new DefaultContractResolver\r\n                {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE)\r\n                  IgnoreSerializableAttribute = true\r\n#endif\r\n                }\r\n            });\r\n        })", span="2248-2261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="DateTimeParser.cs"];
m2_1038 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="2246-2246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="DateTimeParser.cs"];
m2_1125 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="DateTimeParser.cs"];
m2_2758 [label="Entry Newtonsoft.Json.Tests.Serialization.Event.Event()", span="7490-7490", cluster="Newtonsoft.Json.Tests.Serialization.Event.Event()", file="DateTimeParser.cs"];
m2_3182 [label="Entry Newtonsoft.Json.Tests.Serialization.TestComponentSimple.TestComponentSimple()", span="7687-7687", cluster="Newtonsoft.Json.Tests.Serialization.TestComponentSimple.TestComponentSimple()", file="DateTimeParser.cs"];
m2_3183 [label="Exit Newtonsoft.Json.Tests.Serialization.TestComponentSimple.TestComponentSimple()", span="7687-7687", cluster="Newtonsoft.Json.Tests.Serialization.TestComponentSimple.TestComponentSimple()", file="DateTimeParser.cs"];
m2_1409 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="3221-3221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="DateTimeParser.cs"];
m2_1410 [label="List<KVPair<string, string>> kvPairs =\r\n        JsonConvert.DeserializeObject<List<KVPair<string, string>>>(\r\n          ''[{\''Key\'':\''Two\'',\''Value\'':\''2\''},{\''Key\'':\''One\'',\''Value\'':\''1\''}]'')", span="3223-3225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="DateTimeParser.cs"];
m2_1411 [label="Assert.AreEqual(2, kvPairs.Count)", span="3227-3227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="DateTimeParser.cs"];
m2_1412 [label="Assert.AreEqual(''Two'', kvPairs[0].Key)", span="3228-3228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="DateTimeParser.cs"];
m2_1413 [label="Assert.AreEqual(''2'', kvPairs[0].Value)", span="3229-3229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="DateTimeParser.cs"];
m2_1414 [label="Assert.AreEqual(''One'', kvPairs[1].Key)", span="3230-3230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="DateTimeParser.cs"];
m2_1415 [label="Assert.AreEqual(''1'', kvPairs[1].Value)", span="3231-3231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="DateTimeParser.cs"];
m2_1416 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="3221-3221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="DateTimeParser.cs"];
m2_1113 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="2408-2408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DateTimeParser.cs"];
m2_1114 [label="string googleSearchText = @''{\r\n        ''''responseData'''': {\r\n          ''''results'''': [\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''url'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''visibleUrl'''': ''''en.wikipedia.org'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:TwrPfhd22hYJ:en.wikipedia.org'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton - Wikipedia, the free encyclopedia'''',\r\n              ''''content'''': ''''[1] In 2006, she released her debut album...''''\r\n            },\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''url'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''visibleUrl'''': ''''www.imdb.com'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:1i34KkqnsooJ:www.imdb.com'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b>'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton'''',\r\n              ''''content'''': ''''Self: Zoolander. Socialite <b>Paris Hilton</b>...''''\r\n            }\r\n          ],\r\n          ''''cursor'''': {\r\n            ''''pages'''': [\r\n              {\r\n                ''''start'''': ''''0'''',\r\n                ''''label'''': 1\r\n              },\r\n              {\r\n                ''''start'''': ''''4'''',\r\n                ''''label'''': 2\r\n              },\r\n              {\r\n                ''''start'''': ''''8'''',\r\n                ''''label'''': 3\r\n              },\r\n              {\r\n                ''''start'''': ''''12'''',\r\n                ''''label'''': 4\r\n              }\r\n            ],\r\n            ''''estimatedResultCount'''': ''''59600000'''',\r\n            ''''currentPageIndex'''': 0,\r\n            ''''moreResultsUrl'''': ''''http://www.google.com/search?oe=utf8&ie=utf8...''''\r\n          }\r\n        },\r\n        ''''responseDetails'''': null,\r\n        ''''responseStatus'''': 200\r\n      }''", span="2410-2460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DateTimeParser.cs"];
m2_1115 [label="JObject googleSearch = JObject.Parse(googleSearchText)", span="2462-2462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DateTimeParser.cs"];
m2_1116 [label="IList<JToken> results = googleSearch[''responseData''][''results''].Children().ToList()", span="2465-2465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DateTimeParser.cs"];
m2_1117 [label="IList<SearchResult> searchResults = new List<SearchResult>()", span="2468-2468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DateTimeParser.cs"];
m2_1118 [label=results, span="2469-2469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DateTimeParser.cs"];
m2_1120 [label="searchResults.Add(searchResult)", span="2472-2472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DateTimeParser.cs"];
m2_1121 [label="Assert.AreEqual(2, searchResults.Count)", span="2483-2483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DateTimeParser.cs"];
m2_1122 [label="Assert.AreEqual(''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'', searchResults[0].Title)", span="2484-2484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DateTimeParser.cs"];
m2_1123 [label="Assert.AreEqual(''<b>Paris Hilton</b>'', searchResults[1].Title)", span="2485-2485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DateTimeParser.cs"];
m2_1119 [label="SearchResult searchResult = JsonConvert.DeserializeObject<SearchResult>(result.ToString())", span="2471-2471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DateTimeParser.cs"];
m2_1124 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="2408-2408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DateTimeParser.cs"];
m2_2828 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="6458-6458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="DateTimeParser.cs"];
m2_2829 [label="var actual = JsonConvert.DeserializeObject<MyType>(@''{ ''''MyProperty'''':{''''Key'''':''''Y''''}}'')", span="6460-6460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="DateTimeParser.cs"];
m2_2830 [label="Assert.AreEqual(''X'', actual.MyProperty[''Key''])", span="6461-6461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="DateTimeParser.cs"];
m2_2831 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="6458-6458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="DateTimeParser.cs"];
m2_1253 [label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="DateTimeParser.cs"];
m2_633 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="1307-1307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="DateTimeParser.cs"];
m2_634 [label="InterfacePropertyTestClass testClass = new InterfacePropertyTestClass()", span="1309-1309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="DateTimeParser.cs"];
m2_635 [label="testClass.co = new Co()", span="1310-1310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="DateTimeParser.cs"];
m2_636 [label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="1311-1311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="DateTimeParser.cs"];
m2_637 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.ICo. Type is an interface or abstract class and cannot be instantiated. Path 'co.Name', line 1, position 14.'',\r\n        () =>\r\n        {\r\n          InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass));\r\n        })", span="1313-1318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="DateTimeParser.cs"];
m2_638 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="1307-1307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="DateTimeParser.cs"];
m2_2560 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="5875-5875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="DateTimeParser.cs"];
m2_2561 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n        @''Value cannot be null.\r\nParameter name: value'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<double>(null);\r\n        })", span="5877-5883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="DateTimeParser.cs"];
m2_2562 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="5875-5875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="DateTimeParser.cs"];
m2_1090 [label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="DateTimeParser.cs"];
m2_1099 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="2377-2377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="DateTimeParser.cs"];
m2_1100 [label="Dictionary<Person, int> dictionary = new Dictionary<Person, int>()", span="2379-2379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="DateTimeParser.cs"];
m2_1101 [label="dictionary.Add(new Person { Name = ''p1'' }, 1)", span="2380-2380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="DateTimeParser.cs"];
m2_1102 [label="dictionary.Add(new Person { Name = ''p2'' }, 2)", span="2381-2381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="DateTimeParser.cs"];
m2_1103 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="2383-2383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="DateTimeParser.cs"];
m2_1104 [label="Assert.AreEqual(@''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'', json)", span="2385-2388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="DateTimeParser.cs"];
m2_1105 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="2377-2377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="DateTimeParser.cs"];
m2_1363 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="DateTimeParser.cs"];
m2_2008 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", span="4585-4585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="DateTimeParser.cs"];
m2_2009 [label="var data = new DecimalTest(decimal.MinValue)", span="4587-4587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="DateTimeParser.cs"];
m2_2010 [label="var json = JsonConvert.SerializeObject(data)", span="4588-4588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="DateTimeParser.cs"];
m2_2011 [label="var obj = JsonConvert.DeserializeObject<DecimalTest>(json)", span="4589-4589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="DateTimeParser.cs"];
m2_2012 [label="Assert.AreEqual(decimal.MinValue, obj.Value)", span="4591-4591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="DateTimeParser.cs"];
m2_2013 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", span="4585-4585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="DateTimeParser.cs"];
m2_358 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="761-761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="DateTimeParser.cs"];
m2_359 [label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="763-763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="DateTimeParser.cs"];
m2_360 [label="Assert.AreEqual(@''1'', json)", span="764-764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="DateTimeParser.cs"];
m2_361 [label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="766-766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="DateTimeParser.cs"];
m2_362 [label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="767-767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="DateTimeParser.cs"];
m2_363 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="761-761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="DateTimeParser.cs"];
m2_2522 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="5805-5805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DateTimeParser.cs"];
m2_2523 [label="object v = JsonConvert.DeserializeObject<double?>('''')", span="5807-5807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DateTimeParser.cs"];
m2_2524 [label="Assert.IsNull(v)", span="5808-5808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DateTimeParser.cs"];
m2_2525 [label="v = JsonConvert.DeserializeObject<char?>('''')", span="5810-5810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DateTimeParser.cs"];
m2_2526 [label="Assert.IsNull(v)", span="5811-5811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DateTimeParser.cs"];
m2_2527 [label="v = JsonConvert.DeserializeObject<int?>('''')", span="5813-5813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DateTimeParser.cs"];
m2_2528 [label="Assert.IsNull(v)", span="5814-5814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DateTimeParser.cs"];
m2_2529 [label="v = JsonConvert.DeserializeObject<decimal?>('''')", span="5816-5816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DateTimeParser.cs"];
m2_2530 [label="Assert.IsNull(v)", span="5817-5817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DateTimeParser.cs"];
m2_2531 [label="v = JsonConvert.DeserializeObject<DateTime?>('''')", span="5819-5819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DateTimeParser.cs"];
m2_2532 [label="Assert.IsNull(v)", span="5820-5820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DateTimeParser.cs"];
m2_2533 [label="v = JsonConvert.DeserializeObject<DateTimeOffset?>('''')", span="5822-5822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DateTimeParser.cs"];
m2_2534 [label="Assert.IsNull(v)", span="5823-5823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DateTimeParser.cs"];
m2_2535 [label="v = JsonConvert.DeserializeObject<byte[]>('''')", span="5825-5825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DateTimeParser.cs"];
m2_2536 [label="Assert.IsNull(v)", span="5826-5826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DateTimeParser.cs"];
m2_2537 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="5805-5805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DateTimeParser.cs"];
m2_1064 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="DateTimeParser.cs"];
m2_3102 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="7280-7280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="DateTimeParser.cs"];
m2_3103 [label="string json = @''{\r\n  ''''MyNullableBool'''': '''''''',\r\n  ''''MyNullableInteger'''': '''''''',\r\n  ''''MyNullableDateTime'''': '''''''',\r\n  ''''MyNullableDateTimeOffset'''': '''''''',\r\n  ''''MyNullableDecimal'''': ''''''''\r\n}''", span="7282-7288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="DateTimeParser.cs"];
m2_3104 [label="NullableTestClass c2 = JsonConvert.DeserializeObject<NullableTestClass>(json)", span="7290-7290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="DateTimeParser.cs"];
m2_3105 [label="Assert.IsNull(c2.MyNullableBool)", span="7291-7291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="DateTimeParser.cs"];
m2_3106 [label="Assert.IsNull(c2.MyNullableInteger)", span="7292-7292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="DateTimeParser.cs"];
m2_3107 [label="Assert.IsNull(c2.MyNullableDateTime)", span="7293-7293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="DateTimeParser.cs"];
m2_3108 [label="Assert.IsNull(c2.MyNullableDateTimeOffset)", span="7294-7294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="DateTimeParser.cs"];
m2_3109 [label="Assert.IsNull(c2.MyNullableDecimal)", span="7295-7295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="DateTimeParser.cs"];
m2_3110 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="7280-7280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="DateTimeParser.cs"];
m2_2441 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="5642-5642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="DateTimeParser.cs"];
m2_2442 [label="Widget widget = new Widget { Id = new WidgetId { Value = ''id'' } }", span="5644-5644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="DateTimeParser.cs"];
m2_2443 [label="string json = JsonConvert.SerializeObject(widget)", span="5646-5646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="DateTimeParser.cs"];
m2_2444 [label="Assert.AreEqual(@''{''''Id'''':{''''Value'''':''''id''''}}'', json)", span="5648-5648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="DateTimeParser.cs"];
m2_2445 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="5642-5642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="DateTimeParser.cs"];
m2_339 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="737-737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="DateTimeParser.cs"];
m2_340 [label="Stack<object> s = new Stack<object>()", span="739-739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="DateTimeParser.cs"];
m2_341 [label="s.Push(1)", span="740-740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="DateTimeParser.cs"];
m2_342 [label="s.Push(2)", span="741-741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="DateTimeParser.cs"];
m2_343 [label="s.Push(3)", span="742-742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="DateTimeParser.cs"];
m2_344 [label="string json = JsonConvert.SerializeObject(s)", span="744-744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="DateTimeParser.cs"];
m2_345 [label="Assert.AreEqual(''[3,2,1]'', json)", span="745-745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="DateTimeParser.cs"];
m2_346 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="737-737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="DateTimeParser.cs"];
m2_197 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="485-485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DateTimeParser.cs"];
m2_198 [label="List<DateTime> testDates = new List<DateTime>\r\n        {\r\n          new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n          new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n          new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n          new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n          new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n          new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n        }", span="487-495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DateTimeParser.cs"];
m2_199 [label="MemoryStream ms = new MemoryStream()", span="497-497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DateTimeParser.cs"];
m2_201 [label="s.WriteObject(ms, testDates)", span="499-499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DateTimeParser.cs"];
m2_205 [label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="505-505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DateTimeParser.cs"];
m2_200 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="498-498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DateTimeParser.cs"];
m2_202 [label="ms.Seek(0, SeekOrigin.Begin)", span="500-500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DateTimeParser.cs"];
m2_203 [label="StreamReader sr = new StreamReader(ms)", span="501-501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DateTimeParser.cs"];
m2_204 [label="string expected = sr.ReadToEnd()", span="503-503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DateTimeParser.cs"];
m2_206 [label="Assert.AreEqual(expected, result)", span="506-506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DateTimeParser.cs"];
m2_207 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="485-485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DateTimeParser.cs"];
m2_578 [label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="DateTimeParser.cs"];
m2_766 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="1628-1628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="DateTimeParser.cs"];
m2_767 [label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="1630-1630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="DateTimeParser.cs"];
m2_768 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="1628-1628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="DateTimeParser.cs"];
m2_2369 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="5511-5511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DateTimeParser.cs"];
m2_2370 [label="TestObject test = new TestObject(''Test'', new byte[] { 72, 63, 62, 71, 92, 55 })", span="5513-5513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DateTimeParser.cs"];
m2_2371 [label="JsonSerializer serializer = new JsonSerializer()", span="5515-5515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DateTimeParser.cs"];
m2_2376 [label="serializer.Serialize(bsonWriter, test)", span="5522-5522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DateTimeParser.cs"];
m2_2372 [label="serializer.TypeNameHandling = TypeNameHandling.All", span="5516-5516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DateTimeParser.cs"];
m2_2381 [label="TestObject newObject = (TestObject)serializer.Deserialize(bsonReader)", span="5532-5532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DateTimeParser.cs"];
m2_2373 [label="byte[] objectBytes", span="5518-5518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DateTimeParser.cs"];
m2_2374 [label="MemoryStream bsonStream = new MemoryStream()", span="5519-5519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DateTimeParser.cs"];
m2_2375 [label="JsonWriter bsonWriter = new JsonTextWriter(new StreamWriter(bsonStream))", span="5520-5520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DateTimeParser.cs"];
m2_2378 [label="objectBytes = bsonStream.ToArray()", span="5525-5525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DateTimeParser.cs"];
m2_2377 [label="bsonWriter.Flush()", span="5523-5523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DateTimeParser.cs"];
m2_2379 [label="MemoryStream bsonStream = new MemoryStream(objectBytes)", span="5528-5528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DateTimeParser.cs"];
m2_2380 [label="JsonReader bsonReader = new JsonTextReader(new StreamReader(bsonStream))", span="5529-5529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DateTimeParser.cs"];
m2_2382 [label="Assert.AreEqual(''Test'', newObject.Name)", span="5534-5534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DateTimeParser.cs"];
m2_2383 [label="CollectionAssert.AreEquivalent(new byte[] { 72, 63, 62, 71, 92, 55 }, newObject.Data)", span="5535-5535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DateTimeParser.cs"];
m2_2384 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="5511-5511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DateTimeParser.cs"];
m2_176 [label="Entry Unk.ReadObject", span="", cluster="Unk.ReadObject", file="DateTimeParser.cs"];
m2_640 [label="Entry Newtonsoft.Json.Tests.TestObjects.Co.Co()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Co.Co()", file="DateTimeParser.cs"];
m2_1496 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", span="3418-3418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", file="DateTimeParser.cs"];
m2_1242 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="2868-2868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="DateTimeParser.cs"];
m2_1243 [label="return ((IDictionary<string, T>)_innerDictionary).Contains(item);", span="2870-2870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="DateTimeParser.cs"];
m2_1244 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="2868-2868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="DateTimeParser.cs"];
m2_96 [label="ref Newtonsoft.Json.Utilities.DateTimeParser", span="", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="DateTimeParser.cs"];
m2_97 [label="Newtonsoft.Json.Utilities.DateTimeParser", span="", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="DateTimeParser.cs"];
m2_98 [label="ref Newtonsoft.Json.Utilities.DateTimeParser", span="", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="DateTimeParser.cs"];
m2_93 [label="Exit Newtonsoft.Json.Utilities.DateTimeParser.Parse2Digit(int, out int)", span="248-248", cluster="Newtonsoft.Json.Utilities.DateTimeParser.Parse2Digit(int, out int)", file="DateTimeParser.cs"];
m2_1177 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", span="2558-2558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", file="DateTimeParser.cs"];
m2_2664 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="6089-6089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DateTimeParser.cs"];
m2_2665 [label="string json = ''{}''", span="6091-6091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DateTimeParser.cs"];
m2_2666 [label="IList<string> errors = new List<string>()", span="6092-6092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DateTimeParser.cs"];
m2_2668 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n        {\r\n          Error = error\r\n        })", span="6100-6103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DateTimeParser.cs"];
m2_2667 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n        {\r\n          errors.Add(e.ErrorContext.Error.Message);\r\n          e.ErrorContext.Handled = true;\r\n        }", span="6094-6098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DateTimeParser.cs"];
m2_2670 [label="Assert.AreEqual(4, errors.Count)", span="6106-6106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DateTimeParser.cs"];
m2_2671 [label="Assert.AreEqual(''Required property 'NonAttributeProperty' not found in JSON. Path '', line 1, position 2.'', errors[0])", span="6107-6107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DateTimeParser.cs"];
m2_2672 [label="Assert.AreEqual(''Required property 'UnsetProperty' not found in JSON. Path '', line 1, position 2.'', errors[1])", span="6108-6108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DateTimeParser.cs"];
m2_2673 [label="Assert.AreEqual(''Required property 'AllowNullProperty' not found in JSON. Path '', line 1, position 2.'', errors[2])", span="6109-6109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DateTimeParser.cs"];
m2_2674 [label="Assert.AreEqual(''Required property 'AlwaysProperty' not found in JSON. Path '', line 1, position 2.'', errors[3])", span="6110-6110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DateTimeParser.cs"];
m2_2669 [label="Assert.IsNotNull(o)", span="6105-6105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DateTimeParser.cs"];
m2_2675 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="6089-6089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DateTimeParser.cs"];
m2_41 [label="testDictionary[''date''] = dateValue", span="171-171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", color=green, community=0, file="DateTimeParser.cs"];
m2_40 [label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="170-170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DateTimeParser.cs"];
m2_45 [label="serializer.WriteObject(ms, testDictionary)", span="178-178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DateTimeParser.cs"];
m2_42 [label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="173-173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DateTimeParser.cs"];
m2_46 [label="byte[] data = ms.ToArray()", span="180-180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DateTimeParser.cs"];
m2_38 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="167-167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DateTimeParser.cs"];
m2_44 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(Dictionary<string, object>))", span="177-177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DateTimeParser.cs"];
m2_49 [label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="185-185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DateTimeParser.cs"];
m2_39 [label="DateTime dateValue = new DateTime(2010, 3, 30)", span="169-169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DateTimeParser.cs"];
m2_47 [label="string output = Encoding.UTF8.GetString(data, 0, data.Length)", span="181-181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DateTimeParser.cs"];
m2_43 [label="MemoryStream ms = new MemoryStream()", span="176-176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DateTimeParser.cs"];
m2_50 [label="Assert.AreEqual(dateValue, deserializedDate)", span="187-187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DateTimeParser.cs"];
m2_48 [label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="184-184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DateTimeParser.cs"];
m2_51 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="167-167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DateTimeParser.cs"];
m2_2191 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="5125-5125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="DateTimeParser.cs"];
m2_2192 [label="throw new NotImplementedException();", span="5127-5127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="DateTimeParser.cs"];
m2_2193 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="5125-5125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="DateTimeParser.cs"];
m2_535 [label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="664-664", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="DateTimeParser.cs"];
m2_658 [label="Entry Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", file="DateTimeParser.cs"];
m2_451 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="924-924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="DateTimeParser.cs"];
m2_452 [label="DateTime testDate = new DateTime(JsonConvert.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="926-926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="DateTimeParser.cs"];
m2_453 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="927-927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="DateTimeParser.cs"];
m2_454 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n      {\r\n        DateFormatHandling = DateFormatHandling.MicrosoftDateFormat,\r\n      })", span="929-932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="DateTimeParser.cs"];
m2_455 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="933-933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="DateTimeParser.cs"];
m2_456 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n       ''Could not convert string to DateTime: /Date(0)/. Path 'DefaultConverter', line 1, position 33.'',\r\n       () =>\r\n       {\r\n         JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n         {\r\n           DateParseHandling = DateParseHandling.None\r\n         });\r\n       })", span="935-943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="DateTimeParser.cs"];
m2_457 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="924-924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="DateTimeParser.cs"];
m2_3083 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="7222-7222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DateTimeParser.cs"];
m2_3084 [label="string json = @''[\r\n  'NaN',\r\n  'Infinity',\r\n  '-Infinity'\r\n]''", span="7224-7228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DateTimeParser.cs"];
m2_3085 [label="IList<float> floats = JsonConvert.DeserializeObject<IList<float>>(json)", span="7230-7230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DateTimeParser.cs"];
m2_3089 [label="IList<double> doubles = JsonConvert.DeserializeObject<IList<double>>(json)", span="7235-7235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DateTimeParser.cs"];
m2_3086 [label="Assert.AreEqual(float.NaN, floats[0])", span="7231-7231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DateTimeParser.cs"];
m2_3087 [label="Assert.AreEqual(float.PositiveInfinity, floats[1])", span="7232-7232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DateTimeParser.cs"];
m2_3088 [label="Assert.AreEqual(float.NegativeInfinity, floats[2])", span="7233-7233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DateTimeParser.cs"];
m2_3090 [label="Assert.AreEqual(float.NaN, doubles[0])", span="7236-7236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DateTimeParser.cs"];
m2_3091 [label="Assert.AreEqual(float.PositiveInfinity, doubles[1])", span="7237-7237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DateTimeParser.cs"];
m2_3092 [label="Assert.AreEqual(float.NegativeInfinity, doubles[2])", span="7238-7238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DateTimeParser.cs"];
m2_3093 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="7222-7222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DateTimeParser.cs"];
m2_1268 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="2906-2906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="DateTimeParser.cs"];
m2_1269 [label="return _innerDictionary.Remove(key);", span="2908-2908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="DateTimeParser.cs"];
m2_1270 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="2906-2906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="DateTimeParser.cs"];
m2_2062 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="4718-4718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="DateTimeParser.cs"];
m2_2063 [label="ComplexItem i = new ComplexItem()", span="4720-4720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="DateTimeParser.cs"];
m2_2064 [label="string json = JsonConvert.SerializeObject(i, Formatting.Indented)", span="4722-4722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="DateTimeParser.cs"];
m2_2065 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': null\r\n}'', json)", span="4724-4726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="DateTimeParser.cs"];
m2_2066 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="4718-4718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="DateTimeParser.cs"];
m2_3184 [label="Entry Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7708-7708", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_3185 [label="writer.WriteValue('':::'' + value.ToString().ToUpper(CultureInfo.InvariantCulture) + '':::'')", span="7711-7711", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_3186 [label="Exit Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7708-7708", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_961 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="2087-2087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="DateTimeParser.cs"];
m2_962 [label="string json = @''[]''", span="2089-2089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="DateTimeParser.cs"];
m2_963 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Double' because the type requires a JSON primitive value (e.g. string, number, boolean, null) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON primitive value (e.g. string, number, boolean, null) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<double>(json);\r\n        })", span="2091-2098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="DateTimeParser.cs"];
m2_964 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="2087-2087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="DateTimeParser.cs"];
m2_2592 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="5941-5941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DateTimeParser.cs"];
m2_2593 [label="NullableDateTimeTestClass c =\r\n        JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n          @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n          new JsonSerializerSettings\r\n          {\r\n            DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n          })", span="5943-5949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DateTimeParser.cs"];
m2_2594 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="5951-5951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DateTimeParser.cs"];
m2_2595 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="5952-5952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DateTimeParser.cs"];
m2_2596 [label="Assert.AreEqual(''Pre'', c.PreField)", span="5953-5953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DateTimeParser.cs"];
m2_2597 [label="Assert.AreEqual(''Post'', c.PostField)", span="5954-5954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DateTimeParser.cs"];
m2_2598 [label="NullableDateTimeTestClass c2 =\r\n        JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n          @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'')", span="5956-5958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DateTimeParser.cs"];
m2_2599 [label="Assert.AreEqual(null, c2.DateTimeField)", span="5960-5960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DateTimeParser.cs"];
m2_2600 [label="Assert.AreEqual(null, c2.DateTimeOffsetField)", span="5961-5961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DateTimeParser.cs"];
m2_2601 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="5962-5962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DateTimeParser.cs"];
m2_2602 [label="Assert.AreEqual(''Post'', c2.PostField)", span="5963-5963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DateTimeParser.cs"];
m2_2603 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="5941-5941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DateTimeParser.cs"];
m2_899 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", span="1953-1953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="DateTimeParser.cs"];
m2_900 [label="string json = @''[\r\n        {\r\n          ''''Name'''': ''''Product 1'''',\r\n          ''''ExpiryDate'''': ''''\/Date(978048000000)\/'''',\r\n          ''''Price'''': 99.95,\r\n          ''''Sizes'''': null\r\n        },\r\n        {\r\n          ''''Name'''': ''''Product 2'''',\r\n          ''''ExpiryDate'''': ''''\/Date(1248998400000)\/'''',\r\n          ''''Price'''': 12.50,\r\n          ''''Sizes'''': null\r\n        }\r\n      ]''", span="1955-1968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="DateTimeParser.cs"];
m2_901 [label="List<Product> products = JsonConvert.DeserializeObject<List<Product>>(json)", span="1970-1970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="DateTimeParser.cs"];
m2_902 [label="Console.WriteLine(products.Count)", span="1972-1972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="DateTimeParser.cs"];
m2_903 [label="Product p1 = products[0]", span="1975-1975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="DateTimeParser.cs"];
m2_905 [label="Assert.AreEqual(2, products.Count)", span="1980-1980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="DateTimeParser.cs"];
m2_906 [label="Assert.AreEqual(''Product 1'', products[0].Name)", span="1981-1981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="DateTimeParser.cs"];
m2_904 [label="Console.WriteLine(p1.Name)", span="1977-1977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="DateTimeParser.cs"];
m2_907 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", span="1953-1953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="DateTimeParser.cs"];
m2_3031 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", span="6987-6987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="DateTimeParser.cs"];
m2_3032 [label="Event e1 = new Event\r\n      {\r\n        EventName = ''EventName!''\r\n      }", span="6989-6992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="DateTimeParser.cs"];
m2_3033 [label="Event[,] array1 = new[,] { { e1, e1 }, { e1, e1 } }", span="6993-6993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="DateTimeParser.cs"];
m2_3034 [label="IList<Event[,]> values1 = new List<Event[,]>\r\n        {\r\n          array1,\r\n          array1\r\n        }", span="6994-6998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="DateTimeParser.cs"];
m2_3035 [label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\r\n      {\r\n        TypeNameHandling = TypeNameHandling.All,\r\n        Formatting = Formatting.Indented\r\n      })", span="7000-7004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="DateTimeParser.cs"];
m2_3036 [label="Assert.AreEqual(@''{\r\n  ''''$type'''': ''''System.Collections.Generic.List`1[[Newtonsoft.Json.Tests.Serialization.Event[,], Newtonsoft.Json.Tests]], mscorlib'''',\r\n  ''''$values'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event[,], Newtonsoft.Json.Tests'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ]\r\n      ]\r\n    },\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event[,], Newtonsoft.Json.Tests'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ]\r\n      ]\r\n    }\r\n  ]\r\n}'', json)", span="7006-7076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="DateTimeParser.cs"];
m2_3037 [label="IList<Event[,]> values2 = (IList<Event[,]>)JsonConvert.DeserializeObject(json, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.All\r\n        })", span="7078-7081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="DateTimeParser.cs"];
m2_3038 [label="Assert.AreEqual(2, values2.Count)", span="7083-7083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="DateTimeParser.cs"];
m2_3039 [label="Assert.AreEqual(''EventName!'', values2[0][0, 0].EventName)", span="7084-7084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="DateTimeParser.cs"];
m2_3040 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", span="6987-6987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="DateTimeParser.cs"];
m2_107 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="DateTimeParser.cs"];
m2_2768 [label="Entry Newtonsoft.Json.Tests.Serialization.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", span="7750-7750", cluster="Newtonsoft.Json.Tests.Serialization.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", file="DateTimeParser.cs"];
m2_1533 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3528-3528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1534 [label="throw new NotImplementedException();", span="3530-3530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1535 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3528-3528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1220 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", span="2762-2762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", file="DateTimeParser.cs"];
m2_1499 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="DateTimeParser.cs"];
m2_2950 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", span="6818-6818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", file="DateTimeParser.cs"];
m2_2951 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="6820-6820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", file="DateTimeParser.cs"];
m2_2952 [label="ExceptionAssert.Throws<Exception>(\r\n        ''Cannot deserialize non-cubical array as multidimensional array.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="6822-6824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", file="DateTimeParser.cs"];
m2_2953 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", span="6818-6818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", file="DateTimeParser.cs"];
m2_431 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="891-891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="DateTimeParser.cs"];
m2_432 [label="DateTime testDate = new DateTime(JsonConvert.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="893-893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="DateTimeParser.cs"];
m2_433 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="894-894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="DateTimeParser.cs"];
m2_437 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="901-901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="DateTimeParser.cs"];
m2_438 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="902-902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="DateTimeParser.cs"];
m2_434 [label="string json = JsonConvert.SerializeObject(m1)", span="896-896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="DateTimeParser.cs"];
m2_435 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="897-897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="DateTimeParser.cs"];
m2_436 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="899-899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="DateTimeParser.cs"];
m2_439 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="891-891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="DateTimeParser.cs"];
m2_1246 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="2873-2873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="DateTimeParser.cs"];
m2_1247 [label="return _innerDictionary.ContainsKey(key);", span="2875-2875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="DateTimeParser.cs"];
m2_1248 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="2873-2873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="DateTimeParser.cs"];
m2_3056 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="DateTimeParser.cs"];
m2_1524 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="3518-3518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1525 [label="Pos p = (Pos)value", span="3520-3520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1527 [label="writer.WriteRawValue(String.Format(''new Pos({0},{1})'', p.X, p.Y))", span="3523-3523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1528 [label="writer.WriteNull()", span="3525-3525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1526 [label="p != null", span="3522-3522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1529 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="3518-3518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_2640 [label="Entry System.Enum.Parse(System.Type, string)", span="0-0", cluster="System.Enum.Parse(System.Type, string)", file="DateTimeParser.cs"];
m2_2841 [label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38", cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="DateTimeParser.cs"];
m2_2747 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", span="191-191", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="DateTimeParser.cs"];
m2_940 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="2040-2040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="DateTimeParser.cs"];
m2_941 [label="string json = @''[]''", span="2042-2042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="DateTimeParser.cs"];
m2_942 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.TestObjects.Person' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Person>(json);\r\n        })", span="2044-2051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="DateTimeParser.cs"];
m2_943 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="2040-2040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="DateTimeParser.cs"];
m2_1846 [label="Entry System.Collections.Specialized.StringDictionary.StringDictionary()", span="0-0", cluster="System.Collections.Specialized.StringDictionary.StringDictionary()", file="DateTimeParser.cs"];
m2_2680 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="6114-6114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DateTimeParser.cs"];
m2_2681 [label="string json = ''{'NonAttributeProperty':null,'UnsetProperty':null,'AllowNullProperty':null,'AlwaysProperty':null}''", span="6116-6116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DateTimeParser.cs"];
m2_2682 [label="IList<string> errors = new List<string>()", span="6117-6117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DateTimeParser.cs"];
m2_2684 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n      {\r\n        Error = error\r\n      })", span="6125-6128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DateTimeParser.cs"];
m2_2683 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n      {\r\n        errors.Add(e.ErrorContext.Error.Message);\r\n        e.ErrorContext.Handled = true;\r\n      }", span="6119-6123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DateTimeParser.cs"];
m2_2686 [label="Assert.AreEqual(3, errors.Count)", span="6131-6131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DateTimeParser.cs"];
m2_2687 [label="Assert.AreEqual(''Required property 'NonAttributeProperty' expects a value but got null. Path '', line 1, position 97.'', errors[0])", span="6132-6132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DateTimeParser.cs"];
m2_2688 [label="Assert.AreEqual(''Required property 'UnsetProperty' expects a value but got null. Path '', line 1, position 97.'', errors[1])", span="6133-6133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DateTimeParser.cs"];
m2_2689 [label="Assert.AreEqual(''Required property 'AlwaysProperty' expects a value but got null. Path '', line 1, position 97.'', errors[2])", span="6134-6134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DateTimeParser.cs"];
m2_2685 [label="Assert.IsNotNull(o)", span="6130-6130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DateTimeParser.cs"];
m2_2690 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="6114-6114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DateTimeParser.cs"];
m2_212 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="DateTimeParser.cs"];
m2_1352 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", file="DateTimeParser.cs"];
m2_2728 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="6213-6213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="DateTimeParser.cs"];
m2_2729 [label="var testObj = new PersonSerializable() { Name = ''John Doe'', Age = 28 }", span="6215-6215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="DateTimeParser.cs"];
m2_2730 [label="var objDeserialized = this.SerializeAndDeserialize<PersonSerializable>(testObj)", span="6216-6216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="DateTimeParser.cs"];
m2_2731 [label="Assert.AreEqual(testObj.Name, objDeserialized.Name)", span="6218-6218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="DateTimeParser.cs"];
m2_2732 [label="Assert.AreEqual(0, objDeserialized.Age)", span="6219-6219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="DateTimeParser.cs"];
m2_2733 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="6213-6213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="DateTimeParser.cs"];
m2_928 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", file="DateTimeParser.cs"];
m2_1140 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="2521-2521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="DateTimeParser.cs"];
m2_1141 [label="Dictionary = new Dictionary<string, string>\r\n          {\r\n            {''existing'', ''yup''}\r\n          }", span="2523-2526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="DateTimeParser.cs"];
m2_1142 [label="List = new List<string>\r\n          {\r\n            ''existing''\r\n          }", span="2527-2530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="DateTimeParser.cs"];
m2_1143 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="2521-2521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="DateTimeParser.cs"];
m2_2880 [label="Entry Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()", span="7775-7775", cluster="Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()", file="DateTimeParser.cs"];
m2_2052 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="4681-4681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="DateTimeParser.cs"];
m2_2053 [label="EnumerableClass c = new EnumerableClass\r\n        {\r\n          Enumerable = new List<string> { ''One'', ''Two'', ''Three'' }\r\n        }", span="4683-4686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="DateTimeParser.cs"];
m2_2054 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="4688-4688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="DateTimeParser.cs"];
m2_2055 [label="Assert.AreEqual(@''{\r\n  ''''Enumerable'''': [\r\n    ''''One'''',\r\n    ''''Two'''',\r\n    ''''Three''''\r\n  ]\r\n}'', json)", span="4690-4696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="DateTimeParser.cs"];
m2_2056 [label="EnumerableClass c2 = JsonConvert.DeserializeObject<EnumerableClass>(json)", span="4698-4698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="DateTimeParser.cs"];
m2_2057 [label="Assert.AreEqual(''One'', c2.Enumerable.ElementAt(0))", span="4700-4700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="DateTimeParser.cs"];
m2_2058 [label="Assert.AreEqual(''Two'', c2.Enumerable.ElementAt(1))", span="4701-4701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="DateTimeParser.cs"];
m2_2059 [label="Assert.AreEqual(''Three'', c2.Enumerable.ElementAt(2))", span="4702-4702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="DateTimeParser.cs"];
m2_2060 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="4681-4681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="DateTimeParser.cs"];
m2_1405 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="3213-3213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="DateTimeParser.cs"];
m2_1406 [label="Key = k", span="3215-3215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="DateTimeParser.cs"];
m2_1407 [label="Value = v", span="3216-3216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="DateTimeParser.cs"];
m2_1408 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="3213-3213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="DateTimeParser.cs"];
m2_2448 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="5652-5652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="DateTimeParser.cs"];
m2_2449 [label="string json = @''{''''Id'''':{''''Value'''':''''id''''}}''", span="5654-5654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="DateTimeParser.cs"];
m2_2450 [label="Widget w = JsonConvert.DeserializeObject<Widget>(json)", span="5656-5656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="DateTimeParser.cs"];
m2_2451 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id)", span="5658-5658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="DateTimeParser.cs"];
m2_2452 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id.Value)", span="5659-5659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="DateTimeParser.cs"];
m2_2453 [label="Assert.AreEqual(''id'', w.Id.Value.Value)", span="5660-5660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="DateTimeParser.cs"];
m2_2454 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="5652-5652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="DateTimeParser.cs"];
m2_3153 [label="Entry Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.PersonWithPrivateConstructor()", span="7507-7507", cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.PersonWithPrivateConstructor()", file="DateTimeParser.cs"];
m2_3154 [label="Exit Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.PersonWithPrivateConstructor()", span="7507-7507", cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.PersonWithPrivateConstructor()", file="DateTimeParser.cs"];
m2_2307 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="DateTimeParser.cs"];
m2_442 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="906-906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="DateTimeParser.cs"];
m2_443 [label="DateTime testDate = new DateTime(JsonConvert.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="908-908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="DateTimeParser.cs"];
m2_444 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="909-909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="DateTimeParser.cs"];
m2_448 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="919-919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="DateTimeParser.cs"];
m2_449 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="920-920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="DateTimeParser.cs"];
m2_445 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n        {\r\n          DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n        })", span="911-914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="DateTimeParser.cs"];
m2_446 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="915-915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="DateTimeParser.cs"];
m2_447 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="917-917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="DateTimeParser.cs"];
m2_450 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="906-906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="DateTimeParser.cs"];
m2_2964 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", span="6838-6838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", file="DateTimeParser.cs"];
m2_2965 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="6840-6840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", file="DateTimeParser.cs"];
m2_2966 [label="ExceptionAssert.Throws<Exception>(\r\n        ''Cannot deserialize non-cubical array as multidimensional array.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="6842-6844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", file="DateTimeParser.cs"];
m2_2967 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", span="6838-6838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", file="DateTimeParser.cs"];
m2_2515 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="5793-5793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="DateTimeParser.cs"];
m2_2516 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="5795-5795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="DateTimeParser.cs"];
m2_2517 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="5796-5796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="DateTimeParser.cs"];
m2_2519 [label="var dict2 = serializer.Deserialize<Dictionary<string, object>>(reader)", span="5799-5799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="DateTimeParser.cs"];
m2_2518 [label="var reader = new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}''))", span="5798-5798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="DateTimeParser.cs"];
m2_2520 [label="Assert.AreEqual(dict[''k1''], dict2[''k1''])", span="5801-5801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="DateTimeParser.cs"];
m2_2521 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="5793-5793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="DateTimeParser.cs"];
m2_1794 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", span="4055-4055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", file="DateTimeParser.cs"];
m2_834 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="DateTimeParser.cs"];
m2_2695 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="6138-6138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="DateTimeParser.cs"];
m2_2696 [label="IList<string> errors = new List<string>()", span="6140-6140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="DateTimeParser.cs"];
m2_2697 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n      {\r\n        errors.Add(e.ErrorContext.Error.Message);\r\n        e.ErrorContext.Handled = true;\r\n      }", span="6142-6146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="DateTimeParser.cs"];
m2_2700 [label="Assert.AreEqual(3, errors.Count)", span="6159-6159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="DateTimeParser.cs"];
m2_2701 [label="Assert.AreEqual(''Cannot write a null value for property 'NonAttributeProperty'. Property requires a value. Path ''.'', errors[0])", span="6160-6160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="DateTimeParser.cs"];
m2_2702 [label="Assert.AreEqual(''Cannot write a null value for property 'UnsetProperty'. Property requires a value. Path ''.'', errors[1])", span="6161-6161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="DateTimeParser.cs"];
m2_2703 [label="Assert.AreEqual(''Cannot write a null value for property 'AlwaysProperty'. Property requires a value. Path ''.'', errors[2])", span="6162-6162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="DateTimeParser.cs"];
m2_2698 [label="string json = JsonConvert.SerializeObject(new RequiredObject(), new JsonSerializerSettings\r\n      {\r\n        Error = error,\r\n        Formatting = Formatting.Indented\r\n      })", span="6148-6152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="DateTimeParser.cs"];
m2_2699 [label="Assert.AreEqual(@''{\r\n  ''''DefaultProperty'''': null,\r\n  ''''AllowNullProperty'''': null\r\n}'', json)", span="6154-6157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="DateTimeParser.cs"];
m2_2704 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="6138-6138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="DateTimeParser.cs"];
m2_280 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="622-622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="DateTimeParser.cs"];
m2_281 [label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="624-624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="DateTimeParser.cs"];
m2_282 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="625-625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="DateTimeParser.cs"];
m2_283 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="626-626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="DateTimeParser.cs"];
m2_284 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="628-628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="DateTimeParser.cs"];
m2_285 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="629-629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="DateTimeParser.cs"];
m2_286 [label="Assert.AreEqual(1, wibble.Bar[1])", span="630-630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="DateTimeParser.cs"];
m2_287 [label="Assert.AreEqual(2, wibble.Bar[2])", span="631-631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="DateTimeParser.cs"];
m2_288 [label="Assert.AreEqual(3, wibble.Bar[3])", span="632-632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="DateTimeParser.cs"];
m2_289 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="622-622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="DateTimeParser.cs"];
m2_2334 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", span="5457-5457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2335 [label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, null, { ''''Value'''': [ ''''3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="5459-5459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2336 [label="IList<KeyValuePair<string, IList<string>>?> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>?>>(json)", span="5461-5461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2337 [label="Assert.AreEqual(3, values.Count)", span="5463-5463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2338 [label="Assert.AreEqual(''aaa'', values[0].Value.Key)", span="5464-5464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2339 [label="Assert.AreEqual(2, values[0].Value.Value.Count)", span="5465-5465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2340 [label="Assert.AreEqual(''1'', values[0].Value.Value[0])", span="5466-5466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2341 [label="Assert.AreEqual(''2'', values[0].Value.Value[1])", span="5467-5467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2342 [label="Assert.AreEqual(null, values[1])", span="5468-5468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2343 [label="Assert.AreEqual(''bbb'', values[2].Value.Key)", span="5469-5469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2344 [label="Assert.AreEqual(2, values[2].Value.Value.Count)", span="5470-5470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2345 [label="Assert.AreEqual(''3'', values[2].Value.Value[0])", span="5471-5471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2346 [label="Assert.AreEqual(''4'', values[2].Value.Value[1])", span="5472-5472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2347 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", span="5457-5457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="DateTimeParser.cs"];
m2_270 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="528-528", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="DateTimeParser.cs"];
m2_507 [label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="DateTimeParser.cs"];
m2_2282 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", span="5362-5362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="DateTimeParser.cs"];
m2_2283 [label="IDictionary<string, int?> v1 = new Dictionary<string, int?>\r\n        {\r\n          {''First'', 1},\r\n          {''Second'', null},\r\n          {''Third'', 3}\r\n        }", span="5364-5369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="DateTimeParser.cs"];
m2_2284 [label="string json = JsonConvert.SerializeObject(v1, Formatting.Indented)", span="5371-5371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="DateTimeParser.cs"];
m2_2285 [label="Assert.AreEqual(@''{\r\n  ''''First'''': 1,\r\n  ''''Second'''': null,\r\n  ''''Third'''': 3\r\n}'', json)", span="5373-5377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="DateTimeParser.cs"];
m2_2286 [label="IDictionary<string, int?> v2 = JsonConvert.DeserializeObject<IDictionary<string, int?>>(json)", span="5379-5379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="DateTimeParser.cs"];
m2_2287 [label="Assert.AreEqual(3, v2.Count)", span="5380-5380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="DateTimeParser.cs"];
m2_2288 [label="Assert.AreEqual(1, v2[''First''])", span="5381-5381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="DateTimeParser.cs"];
m2_2289 [label="Assert.AreEqual(null, v2[''Second''])", span="5382-5382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="DateTimeParser.cs"];
m2_2290 [label="Assert.AreEqual(3, v2[''Third''])", span="5383-5383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="DateTimeParser.cs"];
m2_2291 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", span="5362-5362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="DateTimeParser.cs"];
m2_2017 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="4605-4605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="DateTimeParser.cs"];
m2_2018 [label="Value = value", span="4607-4607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="DateTimeParser.cs"];
m2_2019 [label="Constructor = ''Public Paramatized''", span="4608-4608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="DateTimeParser.cs"];
m2_2020 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="4605-4605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="DateTimeParser.cs"];
m2_1361 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="DateTimeParser.cs"];
m2_2868 [label="Entry System.Tuple.Create<T1>(T1)", span="0-0", cluster="System.Tuple.Create<T1>(T1)", file="DateTimeParser.cs"];
m2_213 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="245-245", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="DateTimeParser.cs"];
m2_1321 [label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="DateTimeParser.cs"];
m2_228 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="541-541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="DateTimeParser.cs"];
m2_229 [label="Dictionary<int, int> values = new Dictionary<int, int>()", span="543-543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="DateTimeParser.cs"];
m2_230 [label="values.Add(-5, 6)", span="544-544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="DateTimeParser.cs"];
m2_231 [label="values.Add(int.MinValue, int.MaxValue)", span="545-545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="DateTimeParser.cs"];
m2_232 [label="string json = JsonConvert.SerializeObject(values)", span="547-547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="DateTimeParser.cs"];
m2_235 [label="CollectionAssert.AreEqual(values, newValues)", span="553-553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="DateTimeParser.cs"];
m2_233 [label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="549-549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="DateTimeParser.cs"];
m2_234 [label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="551-551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="DateTimeParser.cs"];
m2_236 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="541-541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="DateTimeParser.cs"];
m2_1551 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="3556-3556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_1552 [label="return objectType.IsAssignableFrom(typeof(PosDouble));", span="3558-3558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_1553 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="3556-3556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_1823 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="DateTimeParser.cs"];
m2_1126 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="2489-2489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DateTimeParser.cs"];
m2_1127 [label="PersonPropertyClass personPropertyClass = new PersonPropertyClass()", span="2491-2491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DateTimeParser.cs"];
m2_1128 [label="WagePerson wagePerson = (WagePerson)personPropertyClass.Person", span="2492-2492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DateTimeParser.cs"];
m2_1134 [label="string json = JsonConvert.SerializeObject(personPropertyClass, Formatting.Indented)", span="2500-2500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DateTimeParser.cs"];
m2_1129 [label="wagePerson.BirthDate = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="2494-2494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DateTimeParser.cs"];
m2_1130 [label="wagePerson.Department = ''McDees''", span="2495-2495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DateTimeParser.cs"];
m2_1131 [label="wagePerson.HourlyWage = 12.50m", span="2496-2496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DateTimeParser.cs"];
m2_1132 [label="wagePerson.LastModified = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="2497-2497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DateTimeParser.cs"];
m2_1133 [label="wagePerson.Name = ''Jim Bob''", span="2498-2498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DateTimeParser.cs"];
m2_1137 [label="Assert.AreEqual(wagePerson.HourlyWage, ((WagePerson)newPersonPropertyClass.Person).HourlyWage)", span="2513-2513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DateTimeParser.cs"];
m2_1135 [label="Assert.AreEqual(\r\n        @''{\r\n  ''''Person'''': {\r\n    ''''HourlyWage'''': 12.50,\r\n    ''''Name'''': ''''Jim Bob'''',\r\n    ''''BirthDate'''': ''''2000-11-29T23:59:59Z'''',\r\n    ''''LastModified'''': ''''2000-11-29T23:59:59Z''''\r\n  }\r\n}'',\r\n        json)", span="2501-2510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DateTimeParser.cs"];
m2_1136 [label="PersonPropertyClass newPersonPropertyClass = JsonConvert.DeserializeObject<PersonPropertyClass>(json)", span="2512-2512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DateTimeParser.cs"];
m2_1138 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="2489-2489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DateTimeParser.cs"];
m2_673 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="DateTimeParser.cs"];
m2_500 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="1016-1016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="DateTimeParser.cs"];
m2_501 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected value when converting date. Expected DateTime or DateTimeOffset, got Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.'',\r\n        () =>\r\n        {\r\n          IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass();\r\n          JsonConvert.SerializeObject(c);\r\n        })", span="1018-1024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="DateTimeParser.cs"];
m2_502 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="1016-1016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="DateTimeParser.cs"];
m2_3195 [label="Entry string.Trim(params char[])", span="0-0", cluster="string.Trim(params char[])", file="DateTimeParser.cs"];
m2_1635 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="1036-1036", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="DateTimeParser.cs"];
m2_115 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="355-355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="DateTimeParser.cs"];
m2_116 [label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="357-366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="DateTimeParser.cs"];
m2_117 [label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="368-368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="DateTimeParser.cs"];
m2_118 [label="Assert.AreEqual(4, o.Children().Count())", span="369-369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="DateTimeParser.cs"];
m2_119 [label="JToken torrentsArray = (JToken)o[''torrents'']", span="371-371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="DateTimeParser.cs"];
m2_120 [label="JToken nestedTorrentsArray = (JToken)torrentsArray[0]", span="372-372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="DateTimeParser.cs"];
m2_121 [label="Assert.AreEqual(nestedTorrentsArray.Children().Count(), 19)", span="373-373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="DateTimeParser.cs"];
m2_122 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="355-355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="DateTimeParser.cs"];
m2_857 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", span="1851-1851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="DateTimeParser.cs"];
m2_858 [label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',null],''''type'''':''''rpc'''',''''tid'''':2}''", span="1853-1853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="DateTimeParser.cs"];
m2_859 [label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1855-1855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="DateTimeParser.cs"];
m2_860 [label="Assert.AreEqual(''Router'', o.Action)", span="1857-1857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="DateTimeParser.cs"];
m2_861 [label="Assert.AreEqual(''Navigate'', o.Method)", span="1858-1858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="DateTimeParser.cs"];
m2_862 [label="Assert.AreEqual(2, o.Data.Length)", span="1859-1859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="DateTimeParser.cs"];
m2_863 [label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1860-1860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="DateTimeParser.cs"];
m2_864 [label="Assert.AreEqual(null, o.Data[1])", span="1861-1861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="DateTimeParser.cs"];
m2_865 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", span="1851-1851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="DateTimeParser.cs"];
m2_1644 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", span="3735-3735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_1645 [label="return (objectType == typeof(string));", span="3737-3737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_1646 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", span="3735-3735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_3041 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="845-845", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="DateTimeParser.cs"];
m2_3188 [label="Entry Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7717-7717", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_3189 [label="string s = (string)reader.Value", span="7719-7719", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_3190 [label="s == null", span="7720-7720", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_3192 [label="return s.ToLower(CultureInfo.InvariantCulture).Trim(new[] { ':' });", span="7724-7724", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_3191 [label="return null;", span="7721-7721", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_3193 [label="Exit Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7717-7717", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1271 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="DateTimeParser.cs"];
m2_695 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="1437-1437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="DateTimeParser.cs"];
m2_696 [label="SubKlass i = new SubKlass(''my subprop'')", span="1439-1439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="DateTimeParser.cs"];
m2_697 [label="i.SuperProp = ''overrided superprop''", span="1440-1440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="DateTimeParser.cs"];
m2_698 [label="string json = JsonConvert.SerializeObject(i, new JsonSerializerSettings\r\n        {\r\n          PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n        })", span="1442-1445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="DateTimeParser.cs"];
m2_699 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="1447-1447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="DateTimeParser.cs"];
m2_700 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json, new JsonSerializerSettings\r\n        {\r\n          PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n        })", span="1449-1452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="DateTimeParser.cs"];
m2_701 [label="string newJson = JsonConvert.SerializeObject(ii, new JsonSerializerSettings\r\n      {\r\n        PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n      })", span="1454-1457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="DateTimeParser.cs"];
m2_702 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="1458-1458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="DateTimeParser.cs"];
m2_703 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="1437-1437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="DateTimeParser.cs"];
m2_1325 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="DateTimeParser.cs"];
m2_2572 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="5900-5900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="DateTimeParser.cs"];
m2_2573 [label="string jsonIsoText =\r\n        @''{''''Value'''':''''2012-02-25T19:55:50.6095676+13:00''''}''", span="5902-5903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="DateTimeParser.cs"];
m2_2574 [label="DateTimeWrapper c = JsonConvert.DeserializeObject<DateTimeWrapper>(jsonIsoText, new IsoDateTimeConverter())", span="5905-5905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="DateTimeParser.cs"];
m2_2575 [label="Assert.AreEqual(DateTimeKind.Local, c.Value.Kind)", span="5906-5906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="DateTimeParser.cs"];
m2_2576 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="5900-5900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="DateTimeParser.cs"];
m2_2923 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", span="6778-6778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", file="DateTimeParser.cs"];
m2_2924 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2,3],[2,1],[2,2]],''''After'''':''''After!''''}''", span="6780-6780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", file="DateTimeParser.cs"];
m2_2925 [label="ExceptionAssert.Throws<Exception>(\r\n        ''Cannot deserialize non-cubical array as multidimensional array.'',\r\n        () => JsonConvert.DeserializeObject<Array2D>(json))", span="6782-6784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", file="DateTimeParser.cs"];
m2_2926 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", span="6778-6778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", file="DateTimeParser.cs"];
m2_381 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", span="804-804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="DateTimeParser.cs"];
m2_382 [label="string jsonText = @''[3, ''''somestring'''',[1,2,3],{}]''", span="806-806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="DateTimeParser.cs"];
m2_383 [label="ArrayList o = JsonConvert.DeserializeObject<ArrayList>(jsonText)", span="807-807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="DateTimeParser.cs"];
m2_384 [label="Assert.AreEqual(4, o.Count)", span="809-809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="DateTimeParser.cs"];
m2_385 [label="Assert.AreEqual(3, ((JArray)o[2]).Count)", span="810-810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="DateTimeParser.cs"];
m2_386 [label="Assert.AreEqual(0, ((JObject)o[3]).Count)", span="811-811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="DateTimeParser.cs"];
m2_387 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", span="804-804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="DateTimeParser.cs"];
m2_1351 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="DateTimeParser.cs"];
m2_1993 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="4547-4547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="DateTimeParser.cs"];
m2_1994 [label="Response response = new Response\r\n        {\r\n          Name = ''Success'',\r\n          Data = new JObject(new JProperty(''First'', ''Value1''), new JProperty(''Second'', ''Value2''))\r\n        }", span="4549-4553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="DateTimeParser.cs"];
m2_1995 [label="string json = JsonConvert.SerializeObject(response, Formatting.Indented)", span="4555-4555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="DateTimeParser.cs"];
m2_1998 [label="Assert.IsTrue(deserializedResponse.Data.DeepEquals(response.Data))", span="4560-4560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="DateTimeParser.cs"];
m2_1996 [label="Response deserializedResponse = JsonConvert.DeserializeObject<Response>(json)", span="4557-4557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="DateTimeParser.cs"];
m2_1997 [label="Assert.AreEqual(''Success'', deserializedResponse.Name)", span="4559-4559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="DateTimeParser.cs"];
m2_1999 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="4547-4547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="DateTimeParser.cs"];
m2_1966 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4464-4464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1967 [label="_name = info.GetString(''Name'')", span="4466-4466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1968 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4464-4464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DateTimeParser.cs"];
m2_1106 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="2392-2392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="DateTimeParser.cs"];
m2_1107 [label="ExceptionAssert.Throws<JsonSerializationException>(''Could not convert string 'Newtonsoft.Json.Tests.TestObjects.Person' to dictionary key type 'Newtonsoft.Json.Tests.TestObjects.Person'. Create a TypeConverter to convert from the string to the key type object. Path 'Newtonsoft.Json.Tests.TestObjects.Person', line 2, position 46.'',\r\n      () =>\r\n      {\r\n        string json =\r\n          @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'';\r\n\r\n        JsonConvert.DeserializeObject<Dictionary<Person, int>>(json);\r\n      })", span="2394-2404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="DateTimeParser.cs"];
m2_1108 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="2392-2392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="DateTimeParser.cs"];
m2_3057 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="7148-7148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="DateTimeParser.cs"];
m2_3058 [label="IList<object> dates = new List<object>\r\n        {\r\n          new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n          new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n        }", span="7150-7154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="DateTimeParser.cs"];
m2_3059 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        DateFormatString = @''yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffK''\r\n      })", span="7156-7159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="DateTimeParser.cs"];
m2_3060 [label="Assert.AreEqual(@''[\r\n  ''''2000-12-12T12:12:12.000Z'''',\r\n  ''''2000-12-12T12:12:12.000+01:00''''\r\n]'', json)", span="7161-7164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="DateTimeParser.cs"];
m2_3061 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="7148-7148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="DateTimeParser.cs"];
m2_2759 [label="Entry Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", span="289-289", cluster="Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", file="DateTimeParser.cs"];
m2_2032 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="4638-4638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="DateTimeParser.cs"];
m2_2033 [label="PublicConstructorOverridenByJsonConstructor c = JsonConvert.DeserializeObject<PublicConstructorOverridenByJsonConstructor>(''{Value:'value!'}'')", span="4640-4640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="DateTimeParser.cs"];
m2_2034 [label="Assert.AreEqual(''Public Paramatized'', c.Constructor)", span="4641-4641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="DateTimeParser.cs"];
m2_2035 [label="Assert.AreEqual(''value!'', c.Value)", span="4642-4642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="DateTimeParser.cs"];
m2_2036 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="4638-4638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="DateTimeParser.cs"];
m2_166 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="436-436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="DateTimeParser.cs"];
m2_167 [label="string json = @''[''''PRE\u003cPOST'''']''", span="438-438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="DateTimeParser.cs"];
m2_168 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="440-440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="DateTimeParser.cs"];
m2_169 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="441-441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="DateTimeParser.cs"];
m2_170 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="443-443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="DateTimeParser.cs"];
m2_172 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="446-446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="DateTimeParser.cs"];
m2_171 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="445-445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="DateTimeParser.cs"];
m2_173 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="436-436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="DateTimeParser.cs"];
m2_275 [label="Entry object.Object()", span="0-0", cluster="object.Object()", file="DateTimeParser.cs"];
m2_1327 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="DateTimeParser.cs"];
m2_1532 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="724-724", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="DateTimeParser.cs"];
m2_2134 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="4979-4979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="DateTimeParser.cs"];
m2_2135 [label="ImplementInterfaceObject cc = new ImplementInterfaceObject\r\n        {\r\n          InterfaceMember = new DateTime(2010, 12, 31, 0, 0, 0, DateTimeKind.Utc),\r\n          NewMember = ''NewMember!''\r\n        }", span="4981-4985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="DateTimeParser.cs"];
m2_2136 [label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="4987-4987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="DateTimeParser.cs"];
m2_2137 [label="Assert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''2010-12-31T00:00:00Z'''',\r\n  ''''newMemberWithProperty'''': null\r\n}'', result)", span="4989-4992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="DateTimeParser.cs"];
m2_2138 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="4979-4979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="DateTimeParser.cs"];
m2_2818 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6435-6435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_2819 [label="writer.WriteValue(''X'')", span="6437-6437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_2820 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6435-6435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_268 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="70-70", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="DateTimeParser.cs"];
m2_2705 [label="Entry Newtonsoft.Json.Tests.Serialization.RequiredObject.RequiredObject()", span="7693-7693", cluster="Newtonsoft.Json.Tests.Serialization.RequiredObject.RequiredObject()", file="DateTimeParser.cs"];
m2_1721 [label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeTestClass()", span="7815-7815", cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeTestClass()", file="DateTimeParser.cs"];
m2_1257 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="DateTimeParser.cs"];
m2_2182 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="5100-5100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="DateTimeParser.cs"];
m2_2183 [label="throw new NotImplementedException();", span="5102-5102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="DateTimeParser.cs"];
m2_2184 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="5100-5100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="DateTimeParser.cs"];
m2_1276 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="2916-2916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="DateTimeParser.cs"];
m2_1277 [label="return ((IEnumerable)_innerDictionary).GetEnumerator();", span="2918-2918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="DateTimeParser.cs"];
m2_1278 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="2916-2916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="DateTimeParser.cs"];
m2_214 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="751-751", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="DateTimeParser.cs"];
m2_1317 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt32(string)", file="DateTimeParser.cs"];
m2_784 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="1673-1673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DateTimeParser.cs"];
m2_785 [label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="1675-1692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DateTimeParser.cs"];
m2_786 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n                                                                                           new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="1694-1695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DateTimeParser.cs"];
m2_787 [label="Assert.AreEqual(''Name!'', c.Name)", span="1697-1697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DateTimeParser.cs"];
m2_788 [label="Assert.AreEqual(3, c.Dictionary.Count)", span="1698-1698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DateTimeParser.cs"];
m2_789 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="1699-1699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DateTimeParser.cs"];
m2_790 [label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="1700-1700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DateTimeParser.cs"];
m2_791 [label="Assert.AreEqual(4, c.Collection.Count)", span="1701-1701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DateTimeParser.cs"];
m2_792 [label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="1702-1702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DateTimeParser.cs"];
m2_793 [label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="1703-1703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DateTimeParser.cs"];
m2_794 [label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="1704-1704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DateTimeParser.cs"];
m2_795 [label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="1705-1705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DateTimeParser.cs"];
m2_796 [label="Assert.IsNotNull(c.Random)", span="1706-1706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DateTimeParser.cs"];
m2_797 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="1673-1673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DateTimeParser.cs"];
m2_1353 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="DateTimeParser.cs"];
m2_520 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="1047-1047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="DateTimeParser.cs"];
m2_521 [label="PersonRaw personRaw = new PersonRaw\r\n        {\r\n          FirstName = ''FirstNameValue'',\r\n          RawContent = new JRaw(''[1,2,3,4,5]''),\r\n          LastName = ''LastNameValue''\r\n        }", span="1049-1054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="DateTimeParser.cs"];
m2_522 [label="string json", span="1056-1056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="DateTimeParser.cs"];
m2_523 [label="json = JsonConvert.SerializeObject(personRaw)", span="1058-1058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="DateTimeParser.cs"];
m2_524 [label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="1059-1059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="DateTimeParser.cs"];
m2_525 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="1047-1047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="DateTimeParser.cs"];
m2_189 [label="Entry Unk.>", span="", cluster="Unk.>", file="DateTimeParser.cs"];
m2_2845 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="6512-6512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="DateTimeParser.cs"];
m2_2846 [label="m_Item1 = item1", span="6514-6514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="DateTimeParser.cs"];
m2_2847 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="6512-6512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="DateTimeParser.cs"];
m2_1541 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="3541-3541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1542 [label="PosDouble p = (PosDouble)value", span="3543-3543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1544 [label="writer.WriteRawValue(String.Format(CultureInfo.InvariantCulture, ''new PosD({0},{1})'', p.X, p.Y))", span="3546-3546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1545 [label="writer.WriteNull()", span="3548-3548", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1543 [label="p != null", span="3545-3545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1546 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="3541-3541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1250 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="2878-2878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="DateTimeParser.cs"];
m2_1251 [label="((IDictionary<string, T>)_innerDictionary).CopyTo(array, arrayIndex)", span="2880-2880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="DateTimeParser.cs"];
m2_1252 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="2878-2878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="DateTimeParser.cs"];
m2_2348 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", span="5476-5476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2349 [label="string json = @''[ null ]''", span="5478-5478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2350 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Cannot convert null value to KeyValuePair. Path '[0]', line 1, position 6.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json);\r\n        })", span="5480-5485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", file="DateTimeParser.cs"];
m2_2351 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", span="5476-5476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", file="DateTimeParser.cs"];
m2_715 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="DateTimeParser.cs"];
m2_2760 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="6302-6302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="DateTimeParser.cs"];
m2_2761 [label="DataContractSerializationAttributesClass dataContract = new DataContractSerializationAttributesClass\r\n        {\r\n          NoAttribute = ''Value!'',\r\n          IgnoreDataMemberAttribute = ''Value!'',\r\n          DataMemberAttribute = ''Value!'',\r\n          IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n        }", span="6304-6310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="DateTimeParser.cs"];
m2_2762 [label="string json = JsonConvert.SerializeObject(dataContract, Formatting.Indented)", span="6312-6312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="DateTimeParser.cs"];
m2_2763 [label="Assert.AreEqual(@''{\r\n  ''''DataMemberAttribute'''': ''''Value!'''',\r\n  ''''IgnoreDataMemberAndDataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="6313-6316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="DateTimeParser.cs"];
m2_2764 [label="PocoDataContractSerializationAttributesClass poco = new PocoDataContractSerializationAttributesClass\r\n      {\r\n        NoAttribute = ''Value!'',\r\n        IgnoreDataMemberAttribute = ''Value!'',\r\n        DataMemberAttribute = ''Value!'',\r\n        IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n      }", span="6318-6324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="DateTimeParser.cs"];
m2_2765 [label="json = JsonConvert.SerializeObject(poco, Formatting.Indented)", span="6326-6326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="DateTimeParser.cs"];
m2_2766 [label="Assert.AreEqual(@''{\r\n  ''''NoAttribute'''': ''''Value!'''',\r\n  ''''DataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="6327-6330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="DateTimeParser.cs"];
m2_2767 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="6302-6302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="DateTimeParser.cs"];
m2_1621 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="321-321", cluster="Newtonsoft.Json.JsonReader.Read()", file="DateTimeParser.cs"];
m2_1788 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="4059-4059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="DateTimeParser.cs"];
m2_1789 [label="return Value;", span="4061-4061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="DateTimeParser.cs"];
m2_1790 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="4059-4059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="DateTimeParser.cs"];
m2_1867 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="4244-4244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="DateTimeParser.cs"];
m2_1868 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''2000-01-01T00:00:00+06:00\''}'')", span="4246-4246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="DateTimeParser.cs"];
m2_1869 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="4247-4247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="DateTimeParser.cs"];
m2_1870 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="4244-4244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="DateTimeParser.cs"];
m2_2091 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="4810-4810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="DateTimeParser.cs"];
m2_2092 [label="string json = @''{''''indexed'''':true, ''''startYear'''':1939, ''''values'''':\r\n                            [  3000,  /* 1940-1949 */\r\n                               3000,   3600,   3600,   3600,   3600,   4200,   4200,   4200,   4200,   4800,  /* 1950-1959 */\r\n                               4800,   4800,   4800,   4800,   4800,   4800,   6600,   6600,   7800,   7800,  /* 1960-1969 */\r\n                               7800,   7800,   9000,  10800,  13200,  14100,  15300,  16500,  17700,  22900,  /* 1970-1979 */\r\n                              25900,  29700,  32400,  35700,  37800,  39600,  42000,  43800,  45000,  48000,  /* 1980-1989 */\r\n                              51300,  53400,  55500,  57600,  60600,  61200,  62700,  65400,  68400,  72600,  /* 1990-1999 */\r\n                              76200,  80400,  84900,  87000,  87900,  90000,  94200,  97500, 102000, 106800,  /* 2000-2009 */\r\n                             106800, 106800]  /* 2010-2011 */\r\n                                }''", span="4812-4821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="DateTimeParser.cs"];
m2_2093 [label="CommentTestClass commentTestClass = JsonConvert.DeserializeObject<CommentTestClass>(json)", span="4823-4823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="DateTimeParser.cs"];
m2_2094 [label="Assert.AreEqual(true, commentTestClass.Indexed)", span="4825-4825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="DateTimeParser.cs"];
m2_2095 [label="Assert.AreEqual(1939, commentTestClass.StartYear)", span="4826-4826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="DateTimeParser.cs"];
m2_2096 [label="Assert.AreEqual(63, commentTestClass.Values.Count)", span="4827-4827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="DateTimeParser.cs"];
m2_2097 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="4810-4810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="DateTimeParser.cs"];
m2_1460 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="3354-3354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="DateTimeParser.cs"];
m2_1461 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="3354-3354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="DateTimeParser.cs"];
m2_908 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="1986-1986", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="DateTimeParser.cs"];
m2_909 [label="string json = @''{''''DateTimeField'''':''''''''}''", span="1988-1988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="DateTimeParser.cs"];
m2_910 [label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", span="1990-1990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="DateTimeParser.cs"];
m2_911 [label="Assert.AreEqual(null, c.DateTimeField)", span="1991-1991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="DateTimeParser.cs"];
m2_912 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="1986-1986", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="DateTimeParser.cs"];
m2_2302 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="342-342", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="DateTimeParser.cs"];
m2_2304 [label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1372-1372", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="DateTimeParser.cs"];
m2_1838 [label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="DateTimeParser.cs"];
m2_2821 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="778-778", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="DateTimeParser.cs"];
m2_215 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="510-510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="DateTimeParser.cs"];
m2_216 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n        {\r\n          new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n        }", span="512-518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="DateTimeParser.cs"];
m2_217 [label="string result = JsonConvert.SerializeObject(testDates)", span="520-520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="DateTimeParser.cs"];
m2_218 [label="Assert.AreEqual(@''[''''0100-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+13:00'''',''''2000-01-01T01:01:01-03:30'''']'', result)", span="521-521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="DateTimeParser.cs"];
m2_219 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="510-510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="DateTimeParser.cs"];
m2_2544 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="5846-5846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="DateTimeParser.cs"];
m2_2545 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''No JSON content found and type 'System.StringComparison' is not nullable. Path '', line 0, position 0.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<StringComparison>('''');\r\n        })", span="5848-5853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="DateTimeParser.cs"];
m2_2546 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="5846-5846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="DateTimeParser.cs"];
m2_2740 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="6243-6243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="DateTimeParser.cs"];
m2_2748 [label="var jsonReader = new Newtonsoft.Json.JsonTextReader(new StringReader(json))", span="6246-6246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="DateTimeParser.cs"];
m2_2749 [label="var serializer = new Newtonsoft.Json.JsonSerializer()", span="6247-6247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="DateTimeParser.cs"];
m2_2751 [label="return serializer.Deserialize(jsonReader, typeof(T)) as T;", span="6253-6253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="DateTimeParser.cs"];
m2_2750 [label="serializer.ContractResolver = new DefaultContractResolver(false)\r\n      {\r\n        IgnoreSerializableAttribute = false\r\n      }", span="6248-6251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="DateTimeParser.cs"];
m2_2752 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="6243-6243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="DateTimeParser.cs"];
m2_11 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="DateTimeParser.cs"];
m2_2496 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="5753-5753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="DateTimeParser.cs"];
m2_2497 [label="string json = JsonConvert.SerializeObject(new WithEnums\r\n        {\r\n          Id = 7,\r\n          NullableEnum = null\r\n        })", span="5755-5759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="DateTimeParser.cs"];
m2_2498 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':null}'', json)", span="5761-5761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="DateTimeParser.cs"];
m2_2499 [label="WithEnums e = JsonConvert.DeserializeObject<WithEnums>(json)", span="5763-5763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="DateTimeParser.cs"];
m2_2500 [label="Assert.AreEqual(null, e.NullableEnum)", span="5765-5765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="DateTimeParser.cs"];
m2_2501 [label="json = JsonConvert.SerializeObject(new WithEnums\r\n        {\r\n          Id = 7,\r\n          NullableEnum = MyEnum.Value2\r\n        })", span="5767-5771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="DateTimeParser.cs"];
m2_2502 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':1}'', json)", span="5773-5773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="DateTimeParser.cs"];
m2_2503 [label="e = JsonConvert.DeserializeObject<WithEnums>(json)", span="5775-5775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="DateTimeParser.cs"];
m2_2504 [label="Assert.AreEqual(MyEnum.Value2, e.NullableEnum)", span="5777-5777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="DateTimeParser.cs"];
m2_2505 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="5753-5753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="DateTimeParser.cs"];
m2_2003 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", span="4571-4571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", file="DateTimeParser.cs"];
m2_2004 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", span="4571-4571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", file="DateTimeParser.cs"];
m2_223 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="525-525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="DateTimeParser.cs"];
m2_224 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n        {\r\n          new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n        }", span="527-533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="DateTimeParser.cs"];
m2_225 [label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="535-535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="DateTimeParser.cs"];
m2_226 [label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="536-536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="DateTimeParser.cs"];
m2_227 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="525-525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="DateTimeParser.cs"];
m2_2390 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="DateTimeParser.cs"];
m2_1459 [label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="DateTimeParser.cs"];
m2_674 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="DateTimeParser.cs"];
m2_2660 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="345-345", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="DateTimeParser.cs"];
m2_3142 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="7374-7374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="DateTimeParser.cs"];
m2_3143 [label="string json =\r\n        JsonConvert.SerializeObject(new AnswerFilterModel(), Formatting.Indented, new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n              {\r\n                IgnoreSerializableAttribute = false\r\n              }\r\n          })", span="7376-7383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="DateTimeParser.cs"];
m2_3144 [label="Assert.AreEqual(@''{\r\n  ''''<Active>k__BackingField'''': false,\r\n  ''''<Ja>k__BackingField'''': false,\r\n  ''''<Handlungsbedarf>k__BackingField'''': false,\r\n  ''''<Beratungsbedarf>k__BackingField'''': false,\r\n  ''''<Unzutreffend>k__BackingField'''': false,\r\n  ''''<Unbeantwortet>k__BackingField'''': false\r\n}'', json)", span="7385-7392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="DateTimeParser.cs"];
m2_3145 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="7374-7374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="DateTimeParser.cs"];
m2_326 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="DateTimeParser.cs"];
m2_136 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", file="DateTimeParser.cs"];
m2_2462 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="5680-5680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="DateTimeParser.cs"];
m2_2463 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected end when setting PreProperty's value. Path 'PreProperty', line 2, position 18.'',\r\n        () =>\r\n        {\r\n          string json = @''{\r\n  ''''PreProperty'''': '';\r\n\r\n          JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n        })", span="5682-5690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="DateTimeParser.cs"];
m2_2464 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="5680-5680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="DateTimeParser.cs"];
m2_2075 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="4754-4754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="DateTimeParser.cs"];
m2_2076 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Error converting value {null} to type 'System.DateTime'. Path '', line 1, position 4.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject(''null'', typeof(DateTime));\r\n        })", span="4756-4761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="DateTimeParser.cs"];
m2_2077 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="4754-4754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="DateTimeParser.cs"];
m2_1280 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="2923-2923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="DateTimeParser.cs"];
m2_1281 [label="ModelStateDictionary<string> modelStateDictionary = new ModelStateDictionary<string>()", span="2925-2925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="DateTimeParser.cs"];
m2_1282 [label="modelStateDictionary.Add(''key'', ''value'')", span="2926-2926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="DateTimeParser.cs"];
m2_1283 [label="string json = JsonConvert.SerializeObject(modelStateDictionary)", span="2928-2928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="DateTimeParser.cs"];
m2_1284 [label="Assert.AreEqual(@''{''''key'''':''''value''''}'', json)", span="2930-2930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="DateTimeParser.cs"];
m2_1285 [label="ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json)", span="2932-2932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="DateTimeParser.cs"];
m2_1286 [label="Assert.AreEqual(1, newModelStateDictionary.Count)", span="2933-2933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="DateTimeParser.cs"];
m2_1287 [label="Assert.AreEqual(''value'', newModelStateDictionary[''key''])", span="2934-2934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="DateTimeParser.cs"];
m2_1288 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="2923-2923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="DateTimeParser.cs"];
m2_74 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="211-211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", color=green, community=0, file="DateTimeParser.cs"];
m2_75 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="213-213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="DateTimeParser.cs"];
m2_76 [label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="215-215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="DateTimeParser.cs"];
m2_77 [label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="217-217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="DateTimeParser.cs"];
m2_78 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="211-211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="DateTimeParser.cs"];
m2_1540 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="DateTimeParser.cs"];
m2_2254 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", span="5306-5306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", file="DateTimeParser.cs"];
m2_2255 [label="IList list = JsonConvert.DeserializeObject<IList>(''['1', 'two', 'III']'')", span="5308-5308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", file="DateTimeParser.cs"];
m2_2256 [label="Assert.AreEqual(3, list.Count)", span="5309-5309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", file="DateTimeParser.cs"];
m2_2257 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", span="5306-5306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", file="DateTimeParser.cs"];
m2_1591 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", span="3622-3622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="DateTimeParser.cs"];
m2_1592 [label="DateTime dateTime = new DateTime(2000, 12, 1, 23, 1, 1, DateTimeKind.Utc)", span="3624-3624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="DateTimeParser.cs"];
m2_1593 [label="List<KeyValuePair<string, WagePerson>> list = new List<KeyValuePair<string, WagePerson>>()", span="3626-3626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="DateTimeParser.cs"];
m2_1594 [label="list.Add(new KeyValuePair<string, WagePerson>(''key1'', new WagePerson\r\n        {\r\n          BirthDate = dateTime,\r\n          Department = ''Department1'',\r\n          LastModified = dateTime,\r\n          HourlyWage = 1\r\n        }))", span="3627-3633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="DateTimeParser.cs"];
m2_1595 [label="list.Add(new KeyValuePair<string, WagePerson>(''key2'', new WagePerson\r\n        {\r\n          BirthDate = dateTime,\r\n          Department = ''Department2'',\r\n          LastModified = dateTime,\r\n          HourlyWage = 2\r\n        }))", span="3634-3640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="DateTimeParser.cs"];
m2_1596 [label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="3642-3642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="DateTimeParser.cs"];
m2_1597 [label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Key'''': ''''key1'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 1.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''2000-12-01T23:01:01Z'''',\r\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\r\n    }\r\n  },\r\n  {\r\n    ''''Key'''': ''''key2'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 2.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''2000-12-01T23:01:01Z'''',\r\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\r\n    }\r\n  }\r\n]'', json)", span="3644-3663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="DateTimeParser.cs"];
m2_1598 [label="List<KeyValuePair<string, WagePerson>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, WagePerson>>>(json)", span="3665-3665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="DateTimeParser.cs"];
m2_1599 [label="Assert.AreEqual(2, result.Count)", span="3666-3666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="DateTimeParser.cs"];
m2_1600 [label="Assert.AreEqual(''key1'', result[0].Key)", span="3667-3667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="DateTimeParser.cs"];
m2_1601 [label="Assert.AreEqual(1, result[0].Value.HourlyWage)", span="3668-3668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="DateTimeParser.cs"];
m2_1602 [label="Assert.AreEqual(''key2'', result[1].Key)", span="3669-3669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="DateTimeParser.cs"];
m2_1603 [label="Assert.AreEqual(2, result[1].Value.HourlyWage)", span="3670-3670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="DateTimeParser.cs"];
m2_1604 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", span="3622-3622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="DateTimeParser.cs"];
m2_2911 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", span="6759-6759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="DateTimeParser.cs"];
m2_2912 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="6761-6761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="DateTimeParser.cs"];
m2_2913 [label="Array2D aa = JsonConvert.DeserializeObject<Array2D>(json)", span="6763-6763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="DateTimeParser.cs"];
m2_2921 [label="Assert.AreEqual(json, after)", span="6774-6774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="DateTimeParser.cs"];
m2_2914 [label="Assert.AreEqual(''Before!'', aa.Before)", span="6765-6765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="DateTimeParser.cs"];
m2_2915 [label="Assert.AreEqual(''After!'', aa.After)", span="6766-6766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="DateTimeParser.cs"];
m2_2916 [label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="6767-6767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="DateTimeParser.cs"];
m2_2917 [label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="6768-6768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="DateTimeParser.cs"];
m2_2918 [label="Assert.AreEqual(1, aa.Coordinates[0, 0])", span="6769-6769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="DateTimeParser.cs"];
m2_2919 [label="Assert.AreEqual(2, aa.Coordinates[1, 1])", span="6770-6770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="DateTimeParser.cs"];
m2_2920 [label="string after = JsonConvert.SerializeObject(aa)", span="6772-6772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="DateTimeParser.cs"];
m2_2922 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", span="6759-6759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="DateTimeParser.cs"];
m2_1458 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="530-530", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="DateTimeParser.cs"];
m2_2662 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1586-1586", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="DateTimeParser.cs"];
m2_2822 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6440-6440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_2823 [label="return ''X'';", span="6442-6442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_2824 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6440-6440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_372 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", span="770-770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", file="DateTimeParser.cs"];
m2_371 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="DateTimeParser.cs"];
m2_2122 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="4936-4936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="DateTimeParser.cs"];
m2_2123 [label="ChildObject cc = new ChildObject\r\n        {\r\n          VirtualMember = ''VirtualMember!'',\r\n          NonVirtualMember = ''NonVirtualMember!''\r\n        }", span="4938-4942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="DateTimeParser.cs"];
m2_2124 [label="string result = JsonConvert.SerializeObject(cc)", span="4944-4944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="DateTimeParser.cs"];
m2_2125 [label="Assert.AreEqual(@''{''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="4945-4945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="DateTimeParser.cs"];
m2_2126 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="4936-4936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="DateTimeParser.cs"];
m2_879 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="96-96", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="DateTimeParser.cs"];
m2_1048 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="2284-2284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="DateTimeParser.cs"];
m2_1049 [label="List<String> strings = new List<String>()", span="2286-2286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="DateTimeParser.cs"];
m2_1050 [label="strings.Add(''str_1'')", span="2288-2288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="DateTimeParser.cs"];
m2_1051 [label="strings.Add(''str_2'')", span="2289-2289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="DateTimeParser.cs"];
m2_1052 [label="strings.Add(''str_3'')", span="2290-2290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="DateTimeParser.cs"];
m2_1053 [label="string json = JsonConvert.SerializeObject(strings)", span="2292-2292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="DateTimeParser.cs"];
m2_1054 [label="Assert.AreEqual(@''[''''str_1'''',''''str_2'''',''''str_3'''']'', json)", span="2293-2293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="DateTimeParser.cs"];
m2_1055 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="2284-2284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="DateTimeParser.cs"];
m2_1056 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="2297-2297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="DateTimeParser.cs"];
m2_1057 [label="ConstructorReadonlyFields c1 = new ConstructorReadonlyFields(''String!'', int.MaxValue)", span="2299-2299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="DateTimeParser.cs"];
m2_1058 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="2300-2300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="DateTimeParser.cs"];
m2_1059 [label="Assert.AreEqual(@''{\r\n  ''''A'''': ''''String!'''',\r\n  ''''B'''': 2147483647\r\n}'', json)", span="2301-2304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="DateTimeParser.cs"];
m2_1060 [label="ConstructorReadonlyFields c2 = JsonConvert.DeserializeObject<ConstructorReadonlyFields>(json)", span="2306-2306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="DateTimeParser.cs"];
m2_1061 [label="Assert.AreEqual(''String!'', c2.A)", span="2307-2307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="DateTimeParser.cs"];
m2_1062 [label="Assert.AreEqual(int.MaxValue, c2.B)", span="2308-2308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="DateTimeParser.cs"];
m2_1063 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="2297-2297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="DateTimeParser.cs"];
m2_269 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="DateTimeParser.cs"];
m2_2507 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="5781-5781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="DateTimeParser.cs"];
m2_2508 [label="string json = JsonConvert.SerializeObject(new Widget1 { Id = new WidgetId1 { Value = 1234 } })", span="5783-5783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="DateTimeParser.cs"];
m2_2509 [label="Assert.AreEqual(@''{''''Id'''':''''1234''''}'', json)", span="5785-5785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="DateTimeParser.cs"];
m2_2510 [label="Widget1 w = JsonConvert.DeserializeObject<Widget1>(@''{''''Id'''':''''1234''''}'')", span="5787-5787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="DateTimeParser.cs"];
m2_2511 [label="Assert.AreEqual(new WidgetId1 { Value = 1234 }, w.Id)", span="5789-5789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="DateTimeParser.cs"];
m2_2512 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="5781-5781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="DateTimeParser.cs"];
m2_2710 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="6166-6166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="DateTimeParser.cs"];
m2_2711 [label="PropertyItemConverter c = new PropertyItemConverter\r\n        {\r\n          Data =\r\n            new[]{\r\n              ''one'',\r\n              ''two'',\r\n              ''three''\r\n            }\r\n        }", span="6168-6176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="DateTimeParser.cs"];
m2_2712 [label="var c2 = JsonConvert.DeserializeObject<PropertyItemConverter>(''{'Data':['::ONE::','::TWO::']}'')", span="6178-6178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="DateTimeParser.cs"];
m2_2713 [label="Assert.IsNotNull(c2)", span="6180-6180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="DateTimeParser.cs"];
m2_2714 [label="Assert.AreEqual(2, c2.Data.Count)", span="6181-6181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="DateTimeParser.cs"];
m2_2715 [label="Assert.AreEqual(''one'', c2.Data[0])", span="6182-6182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="DateTimeParser.cs"];
m2_2716 [label="Assert.AreEqual(''two'', c2.Data[1])", span="6183-6183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="DateTimeParser.cs"];
m2_2717 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="6166-6166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="DateTimeParser.cs"];
m2_2663 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="DateTimeParser.cs"];
m2_2577 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="5911-5911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DateTimeParser.cs"];
m2_2578 [label="DateTimeTestClass c =\r\n        JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n          @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n          new JsonSerializerSettings\r\n          {\r\n            DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n          })", span="5913-5919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DateTimeParser.cs"];
m2_2579 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="5921-5921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DateTimeParser.cs"];
m2_2580 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="5922-5922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DateTimeParser.cs"];
m2_2581 [label="Assert.AreEqual(''Pre'', c.PreField)", span="5923-5923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DateTimeParser.cs"];
m2_2582 [label="Assert.AreEqual(''Post'', c.PostField)", span="5924-5924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DateTimeParser.cs"];
m2_2583 [label="DateTimeTestClass c2 =\r\n        JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n          @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-01-01T01:01:01Z'''',''''DateTimeOffsetField'''':''''2008-01-01T01:01:01Z'''',''''PostField'''':''''Post''''}'',\r\n          new JsonSerializerSettings\r\n          {\r\n            DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n          })", span="5926-5932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DateTimeParser.cs"];
m2_2584 [label="Assert.AreEqual(new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime(), c2.DateTimeField)", span="5934-5934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DateTimeParser.cs"];
m2_2585 [label="Assert.AreEqual(new DateTimeOffset(2008, 1, 1, 1, 1, 1, 0, TimeSpan.Zero), c2.DateTimeOffsetField)", span="5935-5935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DateTimeParser.cs"];
m2_2586 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="5936-5936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DateTimeParser.cs"];
m2_2587 [label="Assert.AreEqual(''Post'', c2.PostField)", span="5937-5937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DateTimeParser.cs"];
m2_2588 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="5911-5911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DateTimeParser.cs"];
m2_1866 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="DateTimeParser.cs"];
m2_373 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="790-790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="DateTimeParser.cs"];
m2_374 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="792-792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="DateTimeParser.cs"];
m2_375 [label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="794-794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="DateTimeParser.cs"];
m2_376 [label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="796-796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="DateTimeParser.cs"];
m2_377 [label="Assert.AreEqual(0, c.IgnoredField)", span="798-798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="DateTimeParser.cs"];
m2_378 [label="Assert.AreEqual(99, c.Field)", span="799-799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="DateTimeParser.cs"];
m2_379 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="790-790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="DateTimeParser.cs"];
m2_2194 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="5132-5132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="DateTimeParser.cs"];
m2_2195 [label="string json = JsonConvert.SerializeObject(new ClassAttributeDerived\r\n        {\r\n          BaseClassValue = ''BaseClassValue!'',\r\n          DerivedClassValue = ''DerivedClassValue!'',\r\n          NonSerialized = ''NonSerialized!''\r\n        }, Formatting.Indented)", span="5134-5139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="DateTimeParser.cs"];
m2_2196 [label="Assert.AreEqual(@''{\r\n  ''''DerivedClassValue'''': ''''DerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="5141-5144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="DateTimeParser.cs"];
m2_2197 [label="json = JsonConvert.SerializeObject(new CollectionClassAttributeDerived\r\n        {\r\n          BaseClassValue = ''BaseClassValue!'',\r\n          CollectionDerivedClassValue = ''CollectionDerivedClassValue!''\r\n        }, Formatting.Indented)", span="5146-5150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="DateTimeParser.cs"];
m2_2198 [label="Assert.AreEqual(@''{\r\n  ''''CollectionDerivedClassValue'''': ''''CollectionDerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="5152-5155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="DateTimeParser.cs"];
m2_2199 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="5132-5132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="DateTimeParser.cs"];
m2_403 [label="Entry Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", file="DateTimeParser.cs"];
m2_2098 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="4832-4832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="DateTimeParser.cs"];
m2_2099 [label="this.A = A", span="4834-4834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="DateTimeParser.cs"];
m2_2100 [label="B = 2", span="4835-4835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="DateTimeParser.cs"];
m2_2101 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="4832-4832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="DateTimeParser.cs"];
m2_2028 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="4630-4630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="DateTimeParser.cs"];
m2_2029 [label="Value = value", span="4632-4632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="DateTimeParser.cs"];
m2_2030 [label="Constructor = ''Public Paramatized''", span="4633-4633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="DateTimeParser.cs"];
m2_2031 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="4630-4630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="DateTimeParser.cs"];
m2_1003 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="2173-2173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="DateTimeParser.cs"];
m2_1004 [label="string json = @''[]''", span="2175-2175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="DateTimeParser.cs"];
m2_1005 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot populate JSON array onto type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.PopulateObject(json, new Person());\r\n        })", span="2177-2182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="DateTimeParser.cs"];
m2_1006 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="2173-2173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="DateTimeParser.cs"];
m2_2899 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", span="6690-6690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="DateTimeParser.cs"];
m2_2900 [label="string json = @''{\r\n  ''''Before'''': ''''Before!'''',\r\n  ''''Coordinates'''': [\r\n    [\r\n      [\r\n        1.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        1.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ]\r\n  ],\r\n  ''''After'''': ''''After!''''\r\n}''", span="6692-6745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="DateTimeParser.cs"];
m2_2901 [label="Array3DWithConverter aa = JsonConvert.DeserializeObject<Array3DWithConverter>(json)", span="6747-6747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="DateTimeParser.cs"];
m2_2902 [label="Assert.AreEqual(''Before!'', aa.Before)", span="6749-6749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="DateTimeParser.cs"];
m2_2903 [label="Assert.AreEqual(''After!'', aa.After)", span="6750-6750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="DateTimeParser.cs"];
m2_2904 [label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="6751-6751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="DateTimeParser.cs"];
m2_2905 [label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="6752-6752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="DateTimeParser.cs"];
m2_2906 [label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="6753-6753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="DateTimeParser.cs"];
m2_2907 [label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="6754-6754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="DateTimeParser.cs"];
m2_2908 [label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="6755-6755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="DateTimeParser.cs"];
m2_2909 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", span="6690-6690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="DateTimeParser.cs"];
m2_1355 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="DateTimeParser.cs"];
m2_2446 [label="Entry Newtonsoft.Json.Tests.Serialization.Widget.Widget()", span="7587-7587", cluster="Newtonsoft.Json.Tests.Serialization.Widget.Widget()", file="DateTimeParser.cs"];
m2_880 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="1883-1883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="DateTimeParser.cs"];
m2_881 [label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", span="1885-1885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="DateTimeParser.cs"];
m2_882 [label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="1887-1887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="DateTimeParser.cs"];
m2_883 [label="Console.WriteLine(values.Count)", span="1889-1889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="DateTimeParser.cs"];
m2_884 [label="Console.WriteLine(values[''key1''])", span="1892-1892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="DateTimeParser.cs"];
m2_885 [label="Assert.AreEqual(2, values.Count)", span="1895-1895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="DateTimeParser.cs"];
m2_886 [label="Assert.AreEqual(''value1'', values[''key1''])", span="1896-1896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="DateTimeParser.cs"];
m2_887 [label="Assert.AreEqual(''value2'', values[''key2''])", span="1897-1897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="DateTimeParser.cs"];
m2_888 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="1883-1883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="DateTimeParser.cs"];
m2_1163 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="2596-2596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="DateTimeParser.cs"];
m2_1164 [label="return JsonConvert.SerializeObject(this, Formatting.Indented);", span="2598-2598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="DateTimeParser.cs"];
m2_1165 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="2596-2596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="DateTimeParser.cs"];
m2_264 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="DateTimeParser.cs"];
m2_2734 [label="Entry Newtonsoft.Json.Tests.Serialization.PersonSerializable.PersonSerializable()", span="7470-7470", cluster="Newtonsoft.Json.Tests.Serialization.PersonSerializable.PersonSerializable()", file="DateTimeParser.cs"];
m2_3152 [label="Exit Newtonsoft.Json.Tests.Serialization.PersonSerializable.PersonSerializable()", span="7470-7470", cluster="Newtonsoft.Json.Tests.Serialization.PersonSerializable.PersonSerializable()", file="DateTimeParser.cs"];
m2_1923 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="4359-4359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="DateTimeParser.cs"];
m2_1924 [label="string json = ''[123456789876543.21]''", span="4361-4361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="DateTimeParser.cs"];
m2_1925 [label="IList<decimal> a = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="4362-4362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="DateTimeParser.cs"];
m2_1926 [label="Assert.AreEqual(123456789876543.21m, a[0])", span="4363-4363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="DateTimeParser.cs"];
m2_1927 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="4359-4359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="DateTimeParser.cs"];
m2_2318 [label="Entry Newtonsoft.Json.Tests.Serialization.Component.Component()", span="7664-7664", cluster="Newtonsoft.Json.Tests.Serialization.Component.Component()", file="DateTimeParser.cs"];
m2_3179 [label="Exit Newtonsoft.Json.Tests.Serialization.Component.Component()", span="7664-7664", cluster="Newtonsoft.Json.Tests.Serialization.Component.Component()", file="DateTimeParser.cs"];
m2_929 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="2021-2021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="DateTimeParser.cs"];
m2_930 [label="string json = @''{id: ''''12'''', name: ''''test'''', items: [{id: ''''112'''', name: ''''testing''''}]}''", span="2023-2023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="DateTimeParser.cs"];
m2_931 [label="ListTestClass l = JsonConvert.DeserializeObject<ListTestClass>(json)", span="2025-2025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="DateTimeParser.cs"];
m2_932 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="2021-2021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="DateTimeParser.cs"];
m2_1139 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", file="DateTimeParser.cs"];
m2_2308 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", span="5407-5407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="DateTimeParser.cs"];
m2_2309 [label="IDictionary<string, Component> components = new Dictionary<string, Component>\r\n        {\r\n          {''Key!'', new Component()}\r\n        }", span="5409-5412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="DateTimeParser.cs"];
m2_2310 [label="GameObject go = new GameObject\r\n        {\r\n          Components = new ConcurrentDictionary<string, Component>(components),\r\n          Id = ''Id!'',\r\n          Name = ''Name!''\r\n        }", span="5413-5418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="DateTimeParser.cs"];
m2_2311 [label="string originalJson = JsonConvert.SerializeObject(go, Formatting.Indented)", span="5420-5420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="DateTimeParser.cs"];
m2_2312 [label="Assert.AreEqual(@''{\r\n  ''''Components'''': {\r\n    ''''Key!'''': {}\r\n  },\r\n  ''''Id'''': ''''Id!'''',\r\n  ''''Name'''': ''''Name!''''\r\n}'', originalJson)", span="5422-5428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="DateTimeParser.cs"];
m2_2313 [label="GameObject newObject = JsonConvert.DeserializeObject<GameObject>(originalJson)", span="5430-5430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="DateTimeParser.cs"];
m2_2314 [label="Assert.AreEqual(1, newObject.Components.Count)", span="5432-5432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="DateTimeParser.cs"];
m2_2315 [label="Assert.AreEqual(''Id!'', newObject.Id)", span="5433-5433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="DateTimeParser.cs"];
m2_2316 [label="Assert.AreEqual(''Name!'', newObject.Name)", span="5434-5434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="DateTimeParser.cs"];
m2_2317 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", span="5407-5407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="DateTimeParser.cs"];
m2_421 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="878-878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="DateTimeParser.cs"];
m2_422 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="880-880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="DateTimeParser.cs"];
m2_423 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="882-882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="DateTimeParser.cs"];
m2_424 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="883-883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="DateTimeParser.cs"];
m2_425 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="885-885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="DateTimeParser.cs"];
m2_426 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="887-887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="DateTimeParser.cs"];
m2_427 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="878-878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="DateTimeParser.cs"];
m2_2861 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="6572-6572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="DateTimeParser.cs"];
m2_2862 [label="var tuple = Tuple.Create(500)", span="6574-6574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="DateTimeParser.cs"];
m2_2863 [label="var json = JsonConvert.SerializeObject(tuple, new JsonSerializerSettings\r\n      {\r\n        ContractResolver = new SerializableContractResolver()\r\n      })", span="6575-6578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="DateTimeParser.cs"];
m2_2864 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="6579-6579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="DateTimeParser.cs"];
m2_2865 [label="var obj = JsonConvert.DeserializeObject<Tuple<int>>(json, new JsonSerializerSettings\r\n      {\r\n        ContractResolver = new SerializableContractResolver()\r\n      })", span="6581-6584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="DateTimeParser.cs"];
m2_2866 [label="Assert.AreEqual(500, obj.Item1)", span="6585-6585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="DateTimeParser.cs"];
m2_2867 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="6572-6572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="DateTimeParser.cs"];
m2_1362 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="DateTimeParser.cs"];
m2_536 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="1076-1076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DateTimeParser.cs"];
m2_537 [label="UserNullable userNullablle = new UserNullable\r\n        {\r\n          Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n          FName = ''FirstValue'',\r\n          LName = ''LastValue'',\r\n          RoleId = 5,\r\n          NullableRoleId = 6,\r\n          NullRoleId = null,\r\n          Active = true\r\n        }", span="1078-1087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DateTimeParser.cs"];
m2_538 [label="string json = JsonConvert.SerializeObject(userNullablle)", span="1089-1089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DateTimeParser.cs"];
m2_539 [label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="1091-1091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DateTimeParser.cs"];
m2_540 [label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="1093-1093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DateTimeParser.cs"];
m2_541 [label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="1095-1095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DateTimeParser.cs"];
m2_542 [label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="1096-1096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DateTimeParser.cs"];
m2_543 [label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="1097-1097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DateTimeParser.cs"];
m2_544 [label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="1098-1098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DateTimeParser.cs"];
m2_545 [label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="1099-1099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DateTimeParser.cs"];
m2_546 [label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="1100-1100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DateTimeParser.cs"];
m2_547 [label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="1101-1101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DateTimeParser.cs"];
m2_548 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="1076-1076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DateTimeParser.cs"];
m2_380 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="DateTimeParser.cs"];
m2_1042 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="2265-2265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="DateTimeParser.cs"];
m2_1043 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 17.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          });\r\n        })", span="2267-2280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="DateTimeParser.cs"];
m2_1044 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="2265-2265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="DateTimeParser.cs"];
m2_2213 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="5186-5186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="DateTimeParser.cs"];
m2_2214 [label="PrivateMembersClassWithAttributes c1 = new PrivateMembersClassWithAttributes(''privateString!'', ''internalString!'', ''readonlyString!'')", span="5188-5188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="DateTimeParser.cs"];
m2_2215 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5190-5190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="DateTimeParser.cs"];
m2_2216 [label="Assert.AreEqual(@''{\r\n  ''''_privateString'''': ''''privateString!'''',\r\n  ''''_readonlyString'''': ''''readonlyString!'''',\r\n  ''''_internalString'''': ''''internalString!''''\r\n}'', json)", span="5191-5195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="DateTimeParser.cs"];
m2_2217 [label="PrivateMembersClassWithAttributes c2 = JsonConvert.DeserializeObject<PrivateMembersClassWithAttributes>(json)", span="5197-5197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="DateTimeParser.cs"];
m2_2218 [label="Assert.AreEqual(''readonlyString!'', c2.UseValue())", span="5198-5198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="DateTimeParser.cs"];
m2_2219 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="5186-5186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="DateTimeParser.cs"];
m2_3074 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="7200-7200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="DateTimeParser.cs"];
m2_3075 [label="StringWriter sw = new StringWriter()", span="7202-7202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="DateTimeParser.cs"];
m2_3076 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="7203-7203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="DateTimeParser.cs"];
m2_3080 [label="string json = sw.ToString()", span="7214-7214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="DateTimeParser.cs"];
m2_3077 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n      {\r\n        StringEscapeHandling = StringEscapeHandling.EscapeHtml,\r\n        Formatting = Formatting.Indented\r\n      })", span="7205-7209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="DateTimeParser.cs"];
m2_3078 [label="serializer.Serialize(jsonWriter, new { html = ''<html></html>'' })", span="7210-7210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="DateTimeParser.cs"];
m2_3079 [label="Assert.AreEqual(StringEscapeHandling.Default, jsonWriter.StringEscapeHandling)", span="7212-7212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="DateTimeParser.cs"];
m2_3081 [label="Assert.AreEqual(@''{\r\n  ''''html'''': ''''\u003chtml\u003e\u003c/html\u003e''''\r\n}'', json)", span="7216-7218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="DateTimeParser.cs"];
m2_3082 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="7200-7200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="DateTimeParser.cs"];
m2_1358 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="DateTimeParser.cs"];
m2_1886 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", span="4278-4278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", file="DateTimeParser.cs"];
m2_989 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="2145-2145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="DateTimeParser.cs"];
m2_990 [label="string json = @''[new Constructor(123)]''", span="2147-2147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="DateTimeParser.cs"];
m2_991 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '[0]', line 1, position 17.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<List<Person>>(json);\r\n        })", span="2149-2154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="DateTimeParser.cs"];
m2_992 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="2145-2145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="DateTimeParser.cs"];
m2_1076 [label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="DateTimeParser.cs"];
m2_2589 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="DateTimeParser.cs"];
m2_745 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="1572-1572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DateTimeParser.cs"];
m2_746 [label="OptInClass optInClass = new OptInClass()", span="1574-1574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DateTimeParser.cs"];
m2_747 [label="optInClass.Age = 26", span="1575-1575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DateTimeParser.cs"];
m2_748 [label="optInClass.Name = ''James NK''", span="1576-1576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DateTimeParser.cs"];
m2_749 [label="optInClass.NotIncluded = ''Poor me :(''", span="1577-1577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DateTimeParser.cs"];
m2_750 [label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="1579-1579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DateTimeParser.cs"];
m2_751 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="1581-1584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DateTimeParser.cs"];
m2_752 [label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="1586-1590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DateTimeParser.cs"];
m2_753 [label="Assert.AreEqual(26, newOptInClass.Age)", span="1591-1591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DateTimeParser.cs"];
m2_754 [label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="1592-1592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DateTimeParser.cs"];
m2_755 [label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="1593-1593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DateTimeParser.cs"];
m2_756 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="1572-1572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DateTimeParser.cs"];
m2_175 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="DateTimeParser.cs"];
m2_650 [label="LogEntry entry = new LogEntry\r\n        {\r\n          LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n          Details = ''Application started.''\r\n        }", span="1336-1340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="DateTimeParser.cs"];
m2_649 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="1334-1334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="DateTimeParser.cs"];
m2_651 [label="string defaultJson = JsonConvert.SerializeObject(entry)", span="1342-1342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="DateTimeParser.cs"];
m2_652 [label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="1345-1345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="DateTimeParser.cs"];
m2_653 [label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="1348-1348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="DateTimeParser.cs"];
m2_654 [label="Console.WriteLine(defaultJson)", span="1351-1351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="DateTimeParser.cs"];
m2_655 [label="Console.WriteLine(isoJson)", span="1352-1352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="DateTimeParser.cs"];
m2_656 [label="Console.WriteLine(javascriptJson)", span="1353-1353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="DateTimeParser.cs"];
m2_657 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="1334-1334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="DateTimeParser.cs"];
m2_337 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="DateTimeParser.cs"];
m2_1323 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="DateTimeParser.cs"];
m2_2200 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", span="5072-5072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", file="DateTimeParser.cs"];
m2_2629 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6042-6042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_2630 [label="Color color = (Color)value", span="6044-6044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_2632 [label="writer.WriteValue('':::'' + fixedColor.ToKnownColor().ToString().ToUpper() + '':::'')", span="6047-6047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_2631 [label="Color fixedColor = (color == Color.White || color == Color.Black) ? color : Color.Gray", span="6045-6045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_2633 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6042-6042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1330 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="DateTimeParser.cs"];
m2_1850 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="4205-4205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="DateTimeParser.cs"];
m2_1851 [label="StructWithAttribute testStruct = new StructWithAttribute\r\n        {\r\n          MyInt = int.MaxValue\r\n        }", span="4207-4210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="DateTimeParser.cs"];
m2_1852 [label="string json = JsonConvert.SerializeObject(testStruct, Formatting.Indented)", span="4212-4212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="DateTimeParser.cs"];
m2_1853 [label="Assert.AreEqual(@''{\r\n  ''''MyInt'''': 2147483647\r\n}'', json)", span="4214-4216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="DateTimeParser.cs"];
m2_1854 [label="StructWithAttribute newStruct = JsonConvert.DeserializeObject<StructWithAttribute>(json)", span="4218-4218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="DateTimeParser.cs"];
m2_1855 [label="Assert.AreEqual(int.MaxValue, newStruct.MyInt)", span="4220-4220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="DateTimeParser.cs"];
m2_1856 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="4205-4205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="DateTimeParser.cs"];
m2_10 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="856-856", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="DateTimeParser.cs"];
m2_648 [label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="DateTimeParser.cs"];
m2_1511 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", span="3426-3426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", file="DateTimeParser.cs"];
m2_2002 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="122-122", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="DateTimeParser.cs"];
m2_2081 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="4765-4765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="DateTimeParser.cs"];
m2_2082 [label="object dateTime = JsonConvert.DeserializeObject(''null'', typeof(DateTime?))", span="4767-4767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="DateTimeParser.cs"];
m2_2083 [label="Assert.IsNull(dateTime)", span="4769-4769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="DateTimeParser.cs"];
m2_2084 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="4765-4765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="DateTimeParser.cs"];
m2_2409 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="5581-5581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="DateTimeParser.cs"];
m2_2410 [label="IList<DateTimeOffset?> d1 = new List<DateTimeOffset?> { null }", span="5583-5583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="DateTimeParser.cs"];
m2_2411 [label="string json = JsonConvert.SerializeObject(d1)", span="5585-5585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="DateTimeParser.cs"];
m2_2413 [label="Assert.AreEqual(d1.Count, d2.Count)", span="5589-5589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="DateTimeParser.cs"];
m2_2414 [label="Assert.AreEqual(d1[0], d2[0])", span="5590-5590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="DateTimeParser.cs"];
m2_2412 [label="IList<DateTimeOffset?> d2 = JsonConvert.DeserializeObject<IList<DateTimeOffset?>>(json)", span="5587-5587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="DateTimeParser.cs"];
m2_2415 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="5581-5581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="DateTimeParser.cs"];
m2_1326 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="DateTimeParser.cs"];
m2_1871 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="4251-4251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="DateTimeParser.cs"];
m2_1872 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n      {\r\n        Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n      }, Formatting.None, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="4253-4256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="DateTimeParser.cs"];
m2_1873 [label="Assert.AreEqual(''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}'', serializeObject)", span="4258-4258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="DateTimeParser.cs"];
m2_1874 [label="var deserializeObject = JsonConvert.DeserializeObject<TimeZoneOffsetObject>(serializeObject)", span="4259-4259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="DateTimeParser.cs"];
m2_1875 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="4260-4260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="DateTimeParser.cs"];
m2_1876 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="4261-4261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="DateTimeParser.cs"];
m2_1877 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="4251-4251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="DateTimeParser.cs"];
m2_3151 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="DateTimeParser.cs"];
m2_528 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="1063-1063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="DateTimeParser.cs"];
m2_529 [label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="1065-1065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="DateTimeParser.cs"];
m2_530 [label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="1067-1067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="DateTimeParser.cs"];
m2_531 [label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="1069-1069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="DateTimeParser.cs"];
m2_532 [label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.ToString())", span="1070-1070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="DateTimeParser.cs"];
m2_533 [label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="1071-1071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="DateTimeParser.cs"];
m2_534 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="1063-1063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="DateTimeParser.cs"];
m2_1249 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="DateTimeParser.cs"];
m2_1425 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="3358-3358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="DateTimeParser.cs"];
m2_1462 [label="AA_field1 = f", span="3360-3360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="DateTimeParser.cs"];
m2_1463 [label="AA_field2 = f", span="3361-3361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="DateTimeParser.cs"];
m2_1464 [label="AA_property1 = f", span="3362-3362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="DateTimeParser.cs"];
m2_1465 [label="AA_property2 = f", span="3363-3363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="DateTimeParser.cs"];
m2_1466 [label="AA_property3 = f", span="3364-3364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="DateTimeParser.cs"];
m2_1467 [label="AA_property4 = f", span="3365-3365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="DateTimeParser.cs"];
m2_1468 [label="AA_property5 = f", span="3366-3366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="DateTimeParser.cs"];
m2_1469 [label="AA_property6 = f", span="3367-3367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="DateTimeParser.cs"];
m2_1470 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="3358-3358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="DateTimeParser.cs"];
m2_1909 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="DateTimeParser.cs"];
m2_1804 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="4092-4092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="DateTimeParser.cs"];
m2_1805 [label="string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4, 4.3, null }, Formatting.Indented)", span="4094-4094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="DateTimeParser.cs"];
m2_1806 [label="Assert.AreEqual(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', jsonText)", span="4096-4100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="DateTimeParser.cs"];
m2_1807 [label="double?[] d = (double?[])JsonConvert.DeserializeObject(jsonText, typeof(double?[]))", span="4102-4102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="DateTimeParser.cs"];
m2_1808 [label="Assert.AreEqual(3, d.Length)", span="4104-4104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="DateTimeParser.cs"];
m2_1809 [label="Assert.AreEqual(2.4, d[0])", span="4105-4105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="DateTimeParser.cs"];
m2_1810 [label="Assert.AreEqual(4.3, d[1])", span="4106-4106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="DateTimeParser.cs"];
m2_1811 [label="Assert.AreEqual(null, d[2])", span="4107-4107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="DateTimeParser.cs"];
m2_1812 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="4092-4092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="DateTimeParser.cs"];
m2_2979 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", span="6861-6861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="DateTimeParser.cs"];
m2_2980 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}''", span="6863-6863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="DateTimeParser.cs"];
m2_2981 [label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="6865-6865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="DateTimeParser.cs"];
m2_2988 [label="Assert.AreEqual(json, after)", span="6875-6875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="DateTimeParser.cs"];
m2_2982 [label="Assert.AreEqual(''Before!'', aa.Before)", span="6867-6867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="DateTimeParser.cs"];
m2_2983 [label="Assert.AreEqual(''After!'', aa.After)", span="6868-6868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="DateTimeParser.cs"];
m2_2984 [label="Assert.AreEqual(0, aa.Coordinates.GetLength(0))", span="6869-6869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="DateTimeParser.cs"];
m2_2985 [label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="6870-6870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="DateTimeParser.cs"];
m2_2986 [label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="6871-6871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="DateTimeParser.cs"];
m2_2987 [label="string after = JsonConvert.SerializeObject(aa)", span="6873-6873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="DateTimeParser.cs"];
m2_2989 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", span="6861-6861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="DateTimeParser.cs"];
m2_404 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="851-851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="DateTimeParser.cs"];
m2_405 [label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="853-853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="DateTimeParser.cs"];
m2_406 [label="string json = JsonConvert.SerializeObject(c)", span="855-855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="DateTimeParser.cs"];
m2_407 [label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="857-857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="DateTimeParser.cs"];
m2_408 [label="Assert.AreEqual(''param1'', deserialized.param1)", span="859-859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="DateTimeParser.cs"];
m2_409 [label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="860-860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="DateTimeParser.cs"];
m2_410 [label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="861-861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="DateTimeParser.cs"];
m2_411 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="851-851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="DateTimeParser.cs"];
m2_889 [label="Entry System.Console.WriteLine(int)", span="0-0", cluster="System.Console.WriteLine(int)", file="DateTimeParser.cs"];
m2_1839 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="4170-4170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="DateTimeParser.cs"];
m2_1840 [label="string classRef = typeof(StringDictionary).FullName", span="4172-4172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="DateTimeParser.cs"];
m2_1841 [label="StringDictionaryTestClass s1 = new StringDictionaryTestClass()\r\n        {\r\n          StringDictionaryProperty = new StringDictionary()\r\n            {\r\n              {''1'', ''One''},\r\n              {''2'', ''II''},\r\n              {''3'', ''3''}\r\n            }\r\n        }", span="4174-4182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="DateTimeParser.cs"];
m2_1843 [label="ExceptionAssert.Throws<InvalidOperationException>(\r\n        ''Cannot create and populate list type '' + classRef + ''.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<StringDictionaryTestClass>(json);\r\n        })", span="4186-4191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="DateTimeParser.cs"];
m2_1842 [label="string json = JsonConvert.SerializeObject(s1, Formatting.Indented)", span="4184-4184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="DateTimeParser.cs"];
m2_1844 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="4170-4170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="DateTimeParser.cs"];
m2_349 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="749-749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="DateTimeParser.cs"];
m2_350 [label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="751-751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="DateTimeParser.cs"];
m2_351 [label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="753-753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="DateTimeParser.cs"];
m2_354 [label="Assert.AreEqual(guid, c.GuidField)", span="757-757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="DateTimeParser.cs"];
m2_352 [label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="754-754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="DateTimeParser.cs"];
m2_353 [label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="756-756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="DateTimeParser.cs"];
m2_355 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="749-749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="DateTimeParser.cs"];
m2_1950 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="4416-4416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="DateTimeParser.cs"];
m2_1951 [label="IDoWork = doWork", span="4419-4419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="DateTimeParser.cs"];
m2_1952 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="4416-4416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="DateTimeParser.cs"];
m2_2566 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="5887-5887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="DateTimeParser.cs"];
m2_2567 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n        @''Value cannot be null.\r\nParameter name: value'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject(null);\r\n        })", span="5889-5895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="DateTimeParser.cs"];
m2_2568 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="5887-5887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="DateTimeParser.cs"];
m2_2133 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", span="4929-4929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", file="DateTimeParser.cs"];
m2_271 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="608-608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="DateTimeParser.cs"];
m2_272 [label="string json = JsonConvert.SerializeObject(new object())", span="610-610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="DateTimeParser.cs"];
m2_273 [label="Assert.AreEqual(''{}'', json)", span="611-611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="DateTimeParser.cs"];
m2_274 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="608-608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="DateTimeParser.cs"];
m2_757 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", span="1552-1552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", file="DateTimeParser.cs"];
m2_1497 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="DateTimeParser.cs"];
m2_440 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="DateTimeParser.cs"];
m2_1791 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="4064-4064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="DateTimeParser.cs"];
m2_1792 [label="return new DictionaryKey() { Value = value };", span="4066-4066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="DateTimeParser.cs"];
m2_1793 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="4064-4064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="DateTimeParser.cs"];
m2_2116 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="4900-4900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="DateTimeParser.cs"];
m2_2117 [label="ChildDataContract cc = new ChildDataContract\r\n        {\r\n          VirtualMember = ''VirtualMember!'',\r\n          NonVirtualMember = ''NonVirtualMember!''\r\n        }", span="4902-4906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="DateTimeParser.cs"];
m2_2118 [label="string result = JsonConvert.SerializeObject(cc)", span="4908-4908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="DateTimeParser.cs"];
m2_2119 [label="Assert.AreEqual(@''{''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="4909-4909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="DateTimeParser.cs"];
m2_2120 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="4900-4900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="DateTimeParser.cs"];
m2_2115 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", span="4863-4863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", file="DateTimeParser.cs"];
m2_2037 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", span="4651-4651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="DateTimeParser.cs"];
m2_2038 [label="Value = value", span="4653-4653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="DateTimeParser.cs"];
m2_2039 [label="Constructor = ''Public Paramatized 1''", span="4654-4654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="DateTimeParser.cs"];
m2_2040 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", span="4651-4651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="DateTimeParser.cs"];
m2_2388 [label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="301-301", cluster="Newtonsoft.Json.JsonWriter.Flush()", file="DateTimeParser.cs"];
m2_841 [label="Entry Newtonsoft.Json.Tests.TestObjects.Content.Content()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Content.Content()", file="DateTimeParser.cs"];
m2_1221 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="DateTimeParser.cs"];
m2_1457 [label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="DateTimeParser.cs"];
m2_2659 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", span="243-243", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", file="DateTimeParser.cs"];
m2_327 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="686-686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="DateTimeParser.cs"];
m2_328 [label="string json = JsonConvert.SerializeObject(new ConverableMembers(), Formatting.Indented)", span="688-688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="DateTimeParser.cs"];
m2_329 [label="string expected = null", span="690-690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="DateTimeParser.cs"];
m2_331 [label="Assert.AreEqual(expected, json)", span="726-726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="DateTimeParser.cs"];
m2_332 [label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="728-728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="DateTimeParser.cs"];
m2_330 [label="expected = @''{\r\n  ''''String'''': ''''string'''',\r\n  ''''Int32'''': 2147483647,\r\n  ''''UInt32'''': 4294967295,\r\n  ''''Byte'''': 255,\r\n  ''''SByte'''': 127,\r\n  ''''Short'''': 32767,\r\n  ''''UShort'''': 65535,\r\n  ''''Long'''': 9223372036854775807,\r\n  ''''ULong'''': 9223372036854775807,\r\n  ''''Double'''': 1.7976931348623157E+308,\r\n  ''''Float'''': 3.40282347E+38,\r\n  ''''DBNull'''': null,\r\n  ''''Bool'''': true,\r\n  ''''Char'''': ''''\u0000''''\r\n}''", span="692-707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="DateTimeParser.cs"];
m2_333 [label="Assert.AreEqual(''string'', c.String)", span="729-729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="DateTimeParser.cs"];
m2_334 [label="Assert.AreEqual(double.MaxValue, c.Double)", span="730-730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="DateTimeParser.cs"];
m2_335 [label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="732-732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="DateTimeParser.cs"];
m2_336 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="686-686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="DateTimeParser.cs"];
m2_1827 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="4147-4147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DateTimeParser.cs"];
m2_1828 [label="JsonSerializer serializer1 = new JsonSerializer()", span="4149-4149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DateTimeParser.cs"];
m2_1829 [label="serializer1.Converters.Add(new IsoDateTimeConverter())", span="4150-4150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DateTimeParser.cs"];
m2_1830 [label="serializer1.NullValueHandling = NullValueHandling.Ignore", span="4151-4151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DateTimeParser.cs"];
m2_1833 [label="MyClass[] z = (MyClass[])serializer1.Deserialize(reader, typeof(MyClass[]))", span="4157-4157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DateTimeParser.cs"];
m2_1831 [label="string json = @''[{''''Prop1'''':''''''''},{''''Prop1'''':''''''''}]''", span="4153-4153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DateTimeParser.cs"];
m2_1832 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="4155-4155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DateTimeParser.cs"];
m2_1834 [label="Assert.AreEqual(2, z.Length)", span="4158-4158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DateTimeParser.cs"];
m2_1835 [label="Assert.AreEqual(0, z[0].Prop1.Length)", span="4159-4159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DateTimeParser.cs"];
m2_1836 [label="Assert.AreEqual(0, z[1].Prop1.Length)", span="4160-4160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DateTimeParser.cs"];
m2_1837 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="4147-4147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DateTimeParser.cs"];
m2_809 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="1734-1734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="DateTimeParser.cs"];
m2_810 [label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''short'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': 0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="1736-1746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="DateTimeParser.cs"];
m2_811 [label="JObject o = JObject.Parse(json)", span="1748-1748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="DateTimeParser.cs"];
m2_812 [label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="1750-1750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="DateTimeParser.cs"];
m2_813 [label="Assert.IsNotNull(s)", span="1751-1751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="DateTimeParser.cs"];
m2_814 [label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="1753-1753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="DateTimeParser.cs"];
m2_815 [label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="1754-1754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="DateTimeParser.cs"];
m2_816 [label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="1755-1755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="DateTimeParser.cs"];
m2_817 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="1734-1734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="DateTimeParser.cs"];
m2_2626 [label="Entry Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.MetroPropertyNameResolver()", span="7736-7736", cluster="Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.MetroPropertyNameResolver()", file="DateTimeParser.cs"];
m2_2391 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="5541-5541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="DateTimeParser.cs"];
m2_2392 [label="CultureInfo initialCulture = Thread.CurrentThread.CurrentCulture", span="5543-5543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="DateTimeParser.cs"];
m2_2393 [label="CultureInfo testCulture = CultureInfo.CreateSpecificCulture(''nb-NO'')", span="5547-5547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="DateTimeParser.cs"];
m2_2394 [label="Thread.CurrentThread.CurrentCulture = testCulture", span="5549-5549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="DateTimeParser.cs"];
m2_2395 [label="Thread.CurrentThread.CurrentUICulture = testCulture", span="5550-5550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="DateTimeParser.cs"];
m2_2396 [label="string json = @''{ 'Quantity': '1.5', 'OptionalQuantity': '2.2' }''", span="5552-5552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="DateTimeParser.cs"];
m2_2397 [label="DecimalTestClass c = JsonConvert.DeserializeObject<DecimalTestClass>(json)", span="5554-5554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="DateTimeParser.cs"];
m2_2398 [label="Assert.AreEqual(1.5m, c.Quantity)", span="5556-5556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="DateTimeParser.cs"];
m2_2399 [label="Assert.AreEqual(2.2d, c.OptionalQuantity)", span="5557-5557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="DateTimeParser.cs"];
m2_2400 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="5541-5541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="DateTimeParser.cs"];
m2_660 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="1356-1356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DateTimeParser.cs"];
m2_661 [label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="1358-1358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DateTimeParser.cs"];
m2_662 [label="o.IDictionaryProperty = new Dictionary<string, int>\r\n        {\r\n          {''one'', 1},\r\n          {''two'', 2},\r\n          {''three'', 3}\r\n        }", span="1359-1364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DateTimeParser.cs"];
m2_663 [label="o.IListProperty = new List<int>\r\n        {\r\n          1, 2, 3\r\n        }", span="1365-1368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DateTimeParser.cs"];
m2_664 [label="o.IEnumerableProperty = new List<int>\r\n        {\r\n          4, 5, 6\r\n        }", span="1369-1372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DateTimeParser.cs"];
m2_665 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="1374-1374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DateTimeParser.cs"];
m2_669 [label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="1397-1397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DateTimeParser.cs"];
m2_670 [label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="1398-1398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DateTimeParser.cs"];
m2_671 [label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="1399-1399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DateTimeParser.cs"];
m2_666 [label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="1376-1392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DateTimeParser.cs"];
m2_667 [label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="1394-1394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DateTimeParser.cs"];
m2_668 [label="Assert.IsNotNull(deserializedObject)", span="1395-1395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DateTimeParser.cs"];
m2_672 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="1356-1356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DateTimeParser.cs"];
m2_2355 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="5489-5489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="DateTimeParser.cs"];
m2_2356 [label="string input = ''http://test.com/%22foo+bar%22''", span="5491-5491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="DateTimeParser.cs"];
m2_2357 [label="Uri uri = new Uri(input)", span="5492-5492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="DateTimeParser.cs"];
m2_2358 [label="string json = JsonConvert.SerializeObject(uri)", span="5493-5493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="DateTimeParser.cs"];
m2_2360 [label="Assert.AreEqual(uri, output)", span="5496-5496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="DateTimeParser.cs"];
m2_2359 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="5494-5494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="DateTimeParser.cs"];
m2_2361 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="5489-5489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="DateTimeParser.cs"];
m2_1521 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", span="3510-3510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", file="DateTimeParser.cs"];
m2_734 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="1519-1519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DateTimeParser.cs"];
m2_735 [label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="1521-1537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DateTimeParser.cs"];
m2_736 [label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="1539-1539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DateTimeParser.cs"];
m2_738 [label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="1542-1542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DateTimeParser.cs"];
m2_737 [label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="1540-1540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DateTimeParser.cs"];
m2_739 [label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="1543-1543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DateTimeParser.cs"];
m2_740 [label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="1544-1544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DateTimeParser.cs"];
m2_741 [label="Assert.AreEqual(8, n.FidOrder.Count)", span="1545-1545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DateTimeParser.cs"];
m2_742 [label="Assert.AreEqual(''id'', n.FidOrder[0])", span="1546-1546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DateTimeParser.cs"];
m2_743 [label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="1547-1547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DateTimeParser.cs"];
m2_744 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="1519-1519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DateTimeParser.cs"];
m2_2627 [label="Entry Newtonsoft.Json.Tests.Serialization.MetroStringConverter.MetroStringConverter()", span="7706-7706", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.MetroStringConverter()", file="DateTimeParser.cs"];
m2_1653 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.StringAppenderConverter()", span="3720-3720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.StringAppenderConverter()", file="DateTimeParser.cs"];
m2_1972 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="4504-4504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DateTimeParser.cs"];
m2_1973 [label="NullableStructPropertyClass nullableStructPropertyClass = new NullableStructPropertyClass()", span="4506-4506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DateTimeParser.cs"];
m2_1974 [label="nullableStructPropertyClass.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="4507-4507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DateTimeParser.cs"];
m2_1975 [label="nullableStructPropertyClass.Foo2 = new StructISerializable() { Name = ''foo 2'' }", span="4508-4508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DateTimeParser.cs"];
m2_1979 [label="string s = JsonConvert.SerializeObject(nullableStructPropertyClass)", span="4515-4515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DateTimeParser.cs"];
m2_1976 [label="NullableStructPropertyClass barWithNull = new NullableStructPropertyClass()", span="4510-4510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DateTimeParser.cs"];
m2_1977 [label="barWithNull.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="4511-4511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DateTimeParser.cs"];
m2_1978 [label="barWithNull.Foo2 = null", span="4512-4512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DateTimeParser.cs"];
m2_1983 [label="s = JsonConvert.SerializeObject(barWithNull)", span="4521-4521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DateTimeParser.cs"];
m2_1980 [label="NullableStructPropertyClass deserialized = deserialize(s)", span="4516-4516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DateTimeParser.cs"];
m2_1981 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="4517-4517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DateTimeParser.cs"];
m2_1982 [label="Assert.AreEqual(deserialized.Foo2.Value.Name, ''foo 2'')", span="4518-4518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DateTimeParser.cs"];
m2_1984 [label="deserialized = deserialize(s)", span="4522-4522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DateTimeParser.cs"];
m2_1985 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="4523-4523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DateTimeParser.cs"];
m2_1986 [label="Assert.AreEqual(deserialized.Foo2, null)", span="4524-4524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DateTimeParser.cs"];
m2_1987 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="4504-4504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DateTimeParser.cs"];
m2_569 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="DateTimeParser.cs"];
m2_550 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="1105-1105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="DateTimeParser.cs"];
m2_551 [label="string json = @''{''''Height'''':1}''", span="1107-1107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="DateTimeParser.cs"];
m2_552 [label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="1109-1109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="DateTimeParser.cs"];
m2_553 [label="Assert.AreEqual(1, c.Height)", span="1110-1110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="DateTimeParser.cs"];
m2_554 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="1105-1105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="DateTimeParser.cs"];
m2_114 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="831-831", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="DateTimeParser.cs"];
m2_1577 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", span="3603-3603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="DateTimeParser.cs"];
m2_1578 [label="List<KeyValuePair<string, string>> list = new List<KeyValuePair<string, string>>()", span="3605-3605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="DateTimeParser.cs"];
m2_1579 [label="list.Add(new KeyValuePair<string, string>(''key1'', ''value1''))", span="3606-3606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="DateTimeParser.cs"];
m2_1580 [label="list.Add(new KeyValuePair<string, string>(''key2'', ''value2''))", span="3607-3607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="DateTimeParser.cs"];
m2_1581 [label="string json = JsonConvert.SerializeObject(list)", span="3609-3609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="DateTimeParser.cs"];
m2_1582 [label="Assert.AreEqual(@''[{''''Key'''':''''key1'''',''''Value'''':''''value1''''},{''''Key'''':''''key2'''',''''Value'''':''''value2''''}]'', json)", span="3611-3611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="DateTimeParser.cs"];
m2_1583 [label="List<KeyValuePair<string, string>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(json)", span="3613-3613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="DateTimeParser.cs"];
m2_1584 [label="Assert.AreEqual(2, result.Count)", span="3614-3614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="DateTimeParser.cs"];
m2_1585 [label="Assert.AreEqual(''key1'', result[0].Key)", span="3615-3615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="DateTimeParser.cs"];
m2_1586 [label="Assert.AreEqual(''value1'', result[0].Value)", span="3616-3616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="DateTimeParser.cs"];
m2_1587 [label="Assert.AreEqual(''key2'', result[1].Key)", span="3617-3617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="DateTimeParser.cs"];
m2_1588 [label="Assert.AreEqual(''value2'', result[1].Value)", span="3618-3618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="DateTimeParser.cs"];
m2_1589 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", span="3603-3603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="DateTimeParser.cs"];
m2_3216 [label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeName()", span="7827-7827", cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeName()", file="DateTimeParser.cs"];
m2_3217 [label="return _shouldSerializeName;", span="7829-7829", cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeName()", file="DateTimeParser.cs"];
m2_3218 [label="Exit Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeName()", span="7827-7827", cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeName()", file="DateTimeParser.cs"];
m2_124 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="DateTimeParser.cs"];
m2_1514 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="3486-3486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="DateTimeParser.cs"];
m2_1515 [label="ClientMap source = new ClientMap()\r\n        {\r\n          position = new Pos() { X = 100, Y = 200 },\r\n          center = new PosDouble() { X = 251.6, Y = 361.3 }\r\n        }", span="3488-3492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="DateTimeParser.cs"];
m2_1516 [label="string json = JsonConvert.SerializeObject(source, new PosConverter(), new PosDoubleConverter())", span="3494-3494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="DateTimeParser.cs"];
m2_1517 [label="Assert.AreEqual(''{\''position\'':new Pos(100,200),\''center\'':new PosD(251.6,361.3)}'', json)", span="3495-3495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="DateTimeParser.cs"];
m2_1518 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="3486-3486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="DateTimeParser.cs"];
m2_2188 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="5120-5120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="DateTimeParser.cs"];
m2_2189 [label="throw new NotImplementedException();", span="5122-5122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="DateTimeParser.cs"];
m2_2190 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="5120-5120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="DateTimeParser.cs"];
m2_1231 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DateTimeParser.cs"];
m2_1636 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="3722-3722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1637 [label="writer.WriteValue(value)", span="3724-3724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1638 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="3722-3722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_2292 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="5387-5387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="DateTimeParser.cs"];
m2_2293 [label="object o = new { p = 1 }", span="5390-5390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="DateTimeParser.cs"];
m2_2294 [label="var json = JObject.FromObject(o)", span="5392-5392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="DateTimeParser.cs"];
m2_2295 [label="var sw = new StringWriter()", span="5394-5394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="DateTimeParser.cs"];
m2_2297 [label="jw.WriteToken(json.CreateReader())", span="5397-5397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="DateTimeParser.cs"];
m2_2296 [label="var jw = new JsonTextWriter(sw)", span="5395-5395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="DateTimeParser.cs"];
m2_2299 [label="string result = sw.ToString()", span="5400-5400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="DateTimeParser.cs"];
m2_2298 [label="jw.Flush()", span="5398-5398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="DateTimeParser.cs"];
m2_2300 [label="Assert.AreEqual(@''{''''p'''':1}'', result)", span="5401-5401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="DateTimeParser.cs"];
m2_2301 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="5387-5387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="DateTimeParser.cs"];
m2_2634 [label="Entry Unk.ToKnownColor", span="", cluster="Unk.ToKnownColor", file="DateTimeParser.cs"];
m2_1519 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", span="3498-3498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", file="DateTimeParser.cs"];
m2_159 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="423-423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="DateTimeParser.cs"];
m2_160 [label="ReadOnlyCollection<int> r1 = new ReadOnlyCollection<int>(new int[] { 0, 1, 2, 3, 4 })", span="425-425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="DateTimeParser.cs"];
m2_161 [label="string jsonText = JsonConvert.SerializeObject(r1)", span="427-427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="DateTimeParser.cs"];
m2_163 [label="CollectionAssert.AreEqual(r1, r2)", span="431-431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="DateTimeParser.cs"];
m2_162 [label="ReadOnlyCollection<int> r2 = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(jsonText)", span="429-429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="DateTimeParser.cs"];
m2_164 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="423-423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="DateTimeParser.cs"];
m2_675 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="DateTimeParser.cs"];
m2_1824 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="4140-4140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="DateTimeParser.cs"];
m2_1825 [label="Prop1 = new byte[0]", span="4142-4142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="DateTimeParser.cs"];
m2_1826 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="4140-4140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="DateTimeParser.cs"];
m2_2041 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", span="4658-4658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="DateTimeParser.cs"];
m2_2042 [label="Value = value", span="4660-4660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="DateTimeParser.cs"];
m2_2043 [label="Age = age", span="4661-4661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="DateTimeParser.cs"];
m2_2044 [label="Constructor = ''Public Paramatized 2''", span="4662-4662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="DateTimeParser.cs"];
m2_2045 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", span="4658-4658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="DateTimeParser.cs"];
m2_758 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="1601-1601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="DateTimeParser.cs"];
m2_759 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="1601-1601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="DateTimeParser.cs"];
m2_1319 [label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="DateTimeParser.cs"];
m2_1267 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="DateTimeParser.cs"];
m2_1258 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="2888-2888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DateTimeParser.cs"];
m2_1259 [label="dictionary == null", span="2890-2890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DateTimeParser.cs"];
m2_1261 [label=dictionary, span="2895-2895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DateTimeParser.cs"];
m2_1260 [label="return;", span="2892-2892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DateTimeParser.cs"];
m2_1262 [label="this[entry.Key] = entry.Value", span="2897-2897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DateTimeParser.cs"];
m2_1263 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="2888-2888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DateTimeParser.cs"];
m2_1882 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="4287-4287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="DateTimeParser.cs"];
m2_1883 [label="string json = JsonConvert.SerializeObject(new DerivedEvent(), Formatting.Indented)", span="4289-4289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="DateTimeParser.cs"];
m2_1884 [label="Assert.AreEqual(@''{\r\n  ''''event'''': ''''derived''''\r\n}'', json)", span="4291-4293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="DateTimeParser.cs"];
m2_1885 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="4287-4287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="DateTimeParser.cs"];
m2_2269 [label="Entry Newtonsoft.Json.Tests.Serialization.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="7620-7620", cluster="Newtonsoft.Json.Tests.Serialization.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="DateTimeParser.cs"];
m2_1010 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="1022-1022", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="DateTimeParser.cs"];
m2_290 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="636-636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="DateTimeParser.cs"];
m2_291 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="638-638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="DateTimeParser.cs"];
m2_292 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="639-639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="DateTimeParser.cs"];
m2_293 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="640-640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="DateTimeParser.cs"];
m2_294 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="642-642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="DateTimeParser.cs"];
m2_295 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="643-643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="DateTimeParser.cs"];
m2_296 [label="Assert.AreEqual(1, wibble.Bar[1])", span="644-644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="DateTimeParser.cs"];
m2_297 [label="Assert.AreEqual(2, wibble.Bar[2])", span="645-645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="DateTimeParser.cs"];
m2_298 [label="Assert.AreEqual(3, wibble.Bar[3])", span="646-646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="DateTimeParser.cs"];
m2_299 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="636-636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="DateTimeParser.cs"];
m2_100 [label="ref Newtonsoft.Json.Utilities.DateTimeParser", span="", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="DateTimeParser.cs"];
m2_101 [label="ref Newtonsoft.Json.Utilities.DateTimeParser", span="", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="DateTimeParser.cs"];
m2_102 [label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="260-260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="DateTimeParser.cs"];
m2_103 [label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="262-262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="DateTimeParser.cs"];
m2_104 [label="Assert.AreEqual(0, c.IgnoredField)", span="264-264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="DateTimeParser.cs"];
m2_105 [label="Assert.AreEqual(99, c.Field)", span="265-265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="DateTimeParser.cs"];
m2_106 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="256-256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="DateTimeParser.cs"];
m2_828 [label="Entry System.Uri.ToString()", span="0-0", cluster="System.Uri.ToString()", file="DateTimeParser.cs"];
m2_177 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="450-450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DateTimeParser.cs"];
m2_178 [label="string json = @''[''''vvv\/vvv\tvvv\''''vvv\bvvv\nvvv\rvvv\\vvv\fvvv'''']''", span="452-452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DateTimeParser.cs"];
m2_179 [label="JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer()", span="455-455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DateTimeParser.cs"];
m2_180 [label="List<string> javaScriptSerializerResult = javaScriptSerializer.Deserialize<List<string>>(json)", span="456-456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DateTimeParser.cs"];
m2_182 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="460-460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DateTimeParser.cs"];
m2_183 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="462-462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DateTimeParser.cs"];
m2_181 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="459-459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DateTimeParser.cs"];
m2_186 [label="Assert.AreEqual(javaScriptSerializerResult[0], jsonNetResult[0])", span="467-467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DateTimeParser.cs"];
m2_185 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="465-465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DateTimeParser.cs"];
m2_184 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="464-464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DateTimeParser.cs"];
m2_187 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="450-450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DateTimeParser.cs"];
m2_1857 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", span="4196-4196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", file="DateTimeParser.cs"];
m2_798 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="DateTimeParser.cs"];
m2_1988 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", span="4483-4483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", file="DateTimeParser.cs"];
m2_2495 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="516-516", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="DateTimeParser.cs"];
m2_137 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="394-394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="DateTimeParser.cs"];
m2_138 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''A member with the name 'pie' already exists on 'Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass'. Use the JsonPropertyAttribute to specify another name.'',\r\n        () =>\r\n        {\r\n          JsonConvert.SerializeObject(new BadJsonPropertyClass());\r\n        })", span="396-401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="DateTimeParser.cs"];
m2_139 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="394-394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="DateTimeParser.cs"];
m2_412 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="DateTimeParser.cs"];
m2_265 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="585-585", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="DateTimeParser.cs"];
m2_357 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="DateTimeParser.cs"];
m2_29 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="DateTimeParser.cs"];
m2_86 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="235-235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="DateTimeParser.cs"];
m2_91 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="235-235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="DateTimeParser.cs"];
m2_87 [label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="237-237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="DateTimeParser.cs"];
m2_88 [label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="239-239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="DateTimeParser.cs"];
m2_89 [label="Assert.AreEqual(c.Field, ''Field'')", span="241-241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="DateTimeParser.cs"];
m2_90 [label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="242-242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="DateTimeParser.cs"];
m2_2637 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6050-6050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_2638 [label="return Enum.Parse(typeof(Color), reader.Value.ToString());", span="6052-6052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_2639 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6050-6050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_461 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="910-910", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="DateTimeParser.cs"];
m2_1633 [label="Entry Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", file="DateTimeParser.cs"];
m2_1955 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="4433-4433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="DateTimeParser.cs"];
m2_1956 [label="IDontWork = dontWork", span="4435-4435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="DateTimeParser.cs"];
m2_1957 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="4433-4433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="DateTimeParser.cs"];
m2_2872 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", span="6598-6598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="DateTimeParser.cs"];
m2_2873 [label="Array2D aa = new Array2D()", span="6600-6600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="DateTimeParser.cs"];
m2_2874 [label="aa.Before = ''Before!''", span="6601-6601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="DateTimeParser.cs"];
m2_2875 [label="aa.After = ''After!''", span="6602-6602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="DateTimeParser.cs"];
m2_2876 [label="aa.Coordinates = new[,] { { 1, 1 }, { 1, 2 }, { 2, 1 }, { 2, 2 } }", span="6603-6603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="DateTimeParser.cs"];
m2_2877 [label="string json = JsonConvert.SerializeObject(aa)", span="6605-6605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="DateTimeParser.cs"];
m2_2878 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="6607-6607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="DateTimeParser.cs"];
m2_2879 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", span="6598-6598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="DateTimeParser.cs"];
m2_3205 [label="Entry System.Convert.ToDouble(object)", span="0-0", cluster="System.Convert.ToDouble(object)", file="DateTimeParser.cs"];
m2_2270 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="5333-5333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DateTimeParser.cs"];
m2_2271 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n        {\r\n          Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n          NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n          TimeSpan = TimeSpan.FromDays(1),\r\n          NullableTimeSpan = TimeSpan.FromHours(1),\r\n          Uri = new Uri(''http://testuri.com'')\r\n        }", span="5335-5342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DateTimeParser.cs"];
m2_2272 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5343-5343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DateTimeParser.cs"];
m2_2275 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="5354-5354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DateTimeParser.cs"];
m2_2276 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="5355-5355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DateTimeParser.cs"];
m2_2277 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="5356-5356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DateTimeParser.cs"];
m2_2278 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="5357-5357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DateTimeParser.cs"];
m2_2279 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="5358-5358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DateTimeParser.cs"];
m2_2273 [label="Assert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com/''''\r\n}'', json)", span="5345-5351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DateTimeParser.cs"];
m2_2274 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="5353-5353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DateTimeParser.cs"];
m2_2280 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="5333-5333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DateTimeParser.cs"];
m2_1471 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="3397-3397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="DateTimeParser.cs"];
m2_1472 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="3397-3397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="DateTimeParser.cs"];
m2_3210 [label="Entry System.Convert.ToInt32(object)", span="0-0", cluster="System.Convert.ToInt32(object)", file="DateTimeParser.cs"];
m2_1697 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="3831-3831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="DateTimeParser.cs"];
m2_1698 [label="First = first", span="3833-3833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="DateTimeParser.cs"];
m2_1699 [label="Second = second", span="3834-3834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="DateTimeParser.cs"];
m2_1700 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="3831-3831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="DateTimeParser.cs"];
m2_3164 [label="Entry long.ToString()", span="0-0", cluster="long.ToString()", file="DateTimeParser.cs"];
m2_1320 [label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="DateTimeParser.cs"];
m2_2176 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="5090-5090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="DateTimeParser.cs"];
m2_2177 [label="throw new NotImplementedException();", span="5092-5092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="DateTimeParser.cs"];
m2_2178 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="5090-5090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="DateTimeParser.cs"];
m2_266 [label="Entry System.IO.StringWriter.GetStringBuilder()", span="0-0", cluster="System.IO.StringWriter.GetStringBuilder()", file="DateTimeParser.cs"];
m2_263 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="391-391", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="DateTimeParser.cs"];
m2_2144 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="5008-5008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DateTimeParser.cs"];
m2_2145 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c1 = new NonDefaultConstructorWithReadOnlyCollectionProperty(''blah'')", span="5010-5010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DateTimeParser.cs"];
m2_2146 [label="c1.Categories.Add(''one'')", span="5011-5011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DateTimeParser.cs"];
m2_2147 [label="c1.Categories.Add(''two'')", span="5012-5012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DateTimeParser.cs"];
m2_2148 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5014-5014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DateTimeParser.cs"];
m2_2151 [label="Assert.AreEqual(c1.Title, c2.Title)", span="5024-5024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DateTimeParser.cs"];
m2_2152 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="5025-5025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DateTimeParser.cs"];
m2_2149 [label="Assert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': [\r\n    ''''one'''',\r\n    ''''two''''\r\n  ]\r\n}'', json)", span="5015-5021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DateTimeParser.cs"];
m2_2150 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyCollectionProperty>(json)", span="5023-5023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DateTimeParser.cs"];
m2_2153 [label="Assert.AreEqual(''one'', c2.Categories[0])", span="5026-5026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DateTimeParser.cs"];
m2_2154 [label="Assert.AreEqual(''two'', c2.Categories[1])", span="5027-5027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DateTimeParser.cs"];
m2_2155 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="5008-5008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DateTimeParser.cs"];
m2_2248 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="DateTimeParser.cs"];
m2_777 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="1654-1654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="DateTimeParser.cs"];
m2_778 [label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="1656-1661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="DateTimeParser.cs"];
m2_779 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(\r\n        json,\r\n        new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="1663-1665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="DateTimeParser.cs"];
m2_780 [label="Assert.AreEqual(''Name!'', c.Name)", span="1667-1667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="DateTimeParser.cs"];
m2_781 [label="Assert.AreEqual(1, c.Dictionary.Count)", span="1668-1668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="DateTimeParser.cs"];
m2_782 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="1669-1669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="DateTimeParser.cs"];
m2_783 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="1654-1654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="DateTimeParser.cs"];
m2_920 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="2009-2009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="DateTimeParser.cs"];
m2_921 [label="string json = @''{'SetOnlyProperty':[1,2,3,4,5]}''", span="2011-2011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="DateTimeParser.cs"];
m2_922 [label="SetOnlyPropertyClass2 setOnly = JsonConvert.DeserializeObject<SetOnlyPropertyClass2>(json)", span="2013-2013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="DateTimeParser.cs"];
m2_923 [label="JArray a = (JArray)setOnly.GetValue()", span="2014-2014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="DateTimeParser.cs"];
m2_924 [label="Assert.AreEqual(5, a.Count)", span="2015-2015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="DateTimeParser.cs"];
m2_925 [label="Assert.AreEqual(1, (int)a[0])", span="2016-2016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="DateTimeParser.cs"];
m2_926 [label="Assert.AreEqual(5, (int)a[a.Count - 1])", span="2017-2017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="DateTimeParser.cs"];
m2_927 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="2009-2009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="DateTimeParser.cs"];
m2_1530 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="DateTimeParser.cs"];
m2_1201 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="2738-2738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="DateTimeParser.cs"];
m2_1202 [label="var json = ''{ Key: 'abc', Value: 123 }''", span="2740-2740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="DateTimeParser.cs"];
m2_1203 [label="var item = JsonConvert.DeserializeObject<TestClass>(json)", span="2741-2741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="DateTimeParser.cs"];
m2_1204 [label="Assert.AreEqual(123L, item.Value)", span="2743-2743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="DateTimeParser.cs"];
m2_1205 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="2738-2738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="DateTimeParser.cs"];
m2_3119 [label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="DateTimeParser.cs"];
m2_1011 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="2186-2186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="DateTimeParser.cs"];
m2_1012 [label="string json = @''{}''", span="2188-2188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="DateTimeParser.cs"];
m2_1013 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot populate JSON object onto type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]'. Path '', line 1, position 2.'',\r\n        () =>\r\n        {\r\n          JsonConvert.PopulateObject(json, new List<Person>());\r\n        })", span="2190-2195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="DateTimeParser.cs"];
m2_1014 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="2186-2186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="DateTimeParser.cs"];
m2_2401 [label="Entry System.Globalization.CultureInfo.CreateSpecificCulture(string)", span="0-0", cluster="System.Globalization.CultureInfo.CreateSpecificCulture(string)", file="DateTimeParser.cs"];
m2_2990 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", span="6879-6879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", file="DateTimeParser.cs"];
m2_2991 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/[1/*hi*/,/*hi*/1/*hi*/,1]/*hi*/,/*hi*/[1,1''", span="6881-6881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", file="DateTimeParser.cs"];
m2_2992 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected end when deserializing array. Path 'Coordinates[0][1][1]', line 1, position 90.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="6883-6885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", file="DateTimeParser.cs"];
m2_2993 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", span="6879-6879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", file="DateTimeParser.cs"];
m2_3050 [label="Entry System.DateTimeOffset.ToString(System.IFormatProvider)", span="0-0", cluster="System.DateTimeOffset.ToString(System.IFormatProvider)", file="DateTimeParser.cs"];
m2_157 [label="Entry Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", file="DateTimeParser.cs"];
m2_1206 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="2771-2771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DateTimeParser.cs"];
m2_1207 [label="Exception ex = new Exception(''Blah blah blah'')", span="2773-2773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DateTimeParser.cs"];
m2_1208 [label="DataContractJsonSerializerTestClass c = new DataContractJsonSerializerTestClass()", span="2775-2775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DateTimeParser.cs"];
m2_1212 [label="c.ExceptionProperty = ex", span="2779-2779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DateTimeParser.cs"];
m2_1209 [label="c.TimeSpanProperty = new TimeSpan(200, 20, 59, 30, 900)", span="2776-2776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DateTimeParser.cs"];
m2_1210 [label="c.GuidProperty = new Guid(''66143115-BE2A-4a59-AF0A-348E1EA15B1E'')", span="2777-2777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DateTimeParser.cs"];
m2_1211 [label="c.AnimalProperty = new Human() { Ethnicity = ''European'' }", span="2778-2778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DateTimeParser.cs"];
m2_1215 [label="serializer.WriteObject(ms, c)", span="2785-2785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DateTimeParser.cs"];
m2_1213 [label="MemoryStream ms = new MemoryStream()", span="2781-2781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DateTimeParser.cs"];
m2_1214 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(\r\n        typeof(DataContractJsonSerializerTestClass),\r\n        new Type[] { typeof(Human) })", span="2782-2784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DateTimeParser.cs"];
m2_1216 [label="byte[] jsonBytes = ms.ToArray()", span="2787-2787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DateTimeParser.cs"];
m2_1217 [label="string json = Encoding.UTF8.GetString(jsonBytes, 0, jsonBytes.Length)", span="2788-2788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DateTimeParser.cs"];
m2_1218 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="2771-2771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DateTimeParser.cs"];
m2_2232 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", span="5228-5228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", file="DateTimeParser.cs"];
m2_3135 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="7362-7362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="DateTimeParser.cs"];
m2_3136 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''1234567890.123456''))", span="7364-7364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="DateTimeParser.cs"];
m2_3137 [label="var settings = new JsonSerializerSettings()", span="7365-7365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="DateTimeParser.cs"];
m2_3139 [label="decimal? d = serialiser.Deserialize<decimal?>(reader)", span="7367-7367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="DateTimeParser.cs"];
m2_3138 [label="var serialiser = JsonSerializer.Create(settings)", span="7366-7366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="DateTimeParser.cs"];
m2_3140 [label="Assert.AreEqual(1234567890.123456m, d)", span="7369-7369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="DateTimeParser.cs"];
m2_3141 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="7362-7362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="DateTimeParser.cs"];
m2_1092 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="2363-2363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="DateTimeParser.cs"];
m2_1093 [label="Dictionary<Guid, int> dictionary = new Dictionary<Guid, int>()", span="2365-2365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="DateTimeParser.cs"];
m2_1094 [label="dictionary.Add(new Guid(''F60EAEE0-AE47-488E-B330-59527B742D77''), 1)", span="2366-2366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="DateTimeParser.cs"];
m2_1095 [label="dictionary.Add(new Guid(''C2594C02-EBA1-426A-AA87-8DD8871350B0''), 2)", span="2367-2367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="DateTimeParser.cs"];
m2_1096 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="2369-2369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="DateTimeParser.cs"];
m2_1097 [label="Assert.AreEqual(@''{\r\n  ''''f60eaee0-ae47-488e-b330-59527b742d77'''': 1,\r\n  ''''c2594c02-eba1-426a-aa87-8dd8871350b0'''': 2\r\n}'', json)", span="2370-2373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="DateTimeParser.cs"];
m2_1098 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="2363-2363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="DateTimeParser.cs"];
m2_1914 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="4344-4344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="DateTimeParser.cs"];
m2_1915 [label="decimal? d = JsonConvert.DeserializeObject<decimal?>(''123456789876543.21'')", span="4346-4346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="DateTimeParser.cs"];
m2_1916 [label="Assert.AreEqual(123456789876543.21m, d)", span="4347-4347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="DateTimeParser.cs"];
m2_1917 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="4344-4344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="DateTimeParser.cs"];
m2_1536 [label="Entry System.NotImplementedException.NotImplementedException()", span="0-0", cluster="System.NotImplementedException.NotImplementedException()", file="DateTimeParser.cs"];
m2_1354 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="DateTimeParser.cs"];
m2_1813 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="4112-4112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="DateTimeParser.cs"];
m2_1814 [label="string jsonText = JsonConvert.SerializeObject(new HashSet<string>()\r\n        {\r\n          ''One'',\r\n          ''2'',\r\n          ''III''\r\n        }, Formatting.Indented)", span="4114-4119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="DateTimeParser.cs"];
m2_1815 [label="Assert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''2'''',\r\n  ''''III''''\r\n]'', jsonText)", span="4121-4125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="DateTimeParser.cs"];
m2_1816 [label="HashSet<string> d = JsonConvert.DeserializeObject<HashSet<string>>(jsonText)", span="4127-4127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="DateTimeParser.cs"];
m2_1817 [label="Assert.AreEqual(3, d.Count)", span="4129-4129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="DateTimeParser.cs"];
m2_1818 [label="Assert.IsTrue(d.Contains(''One''))", span="4130-4130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="DateTimeParser.cs"];
m2_1819 [label="Assert.IsTrue(d.Contains(''2''))", span="4131-4131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="DateTimeParser.cs"];
m2_1820 [label="Assert.IsTrue(d.Contains(''III''))", span="4132-4132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="DateTimeParser.cs"];
m2_1821 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="4112-4112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="DateTimeParser.cs"];
m2_221 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="DateTimeParser.cs"];
m2_123 [label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="244-244", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="DateTimeParser.cs"];
m2_820 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="1759-1759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="DateTimeParser.cs"];
m2_821 [label="Uri uri = new Uri(''http://codeplex.com'')", span="1761-1761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="DateTimeParser.cs"];
m2_822 [label="string json = JsonConvert.SerializeObject(uri)", span="1762-1762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="DateTimeParser.cs"];
m2_823 [label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="1764-1764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="DateTimeParser.cs"];
m2_825 [label="Assert.AreEqual(uri, newUri)", span="1767-1767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="DateTimeParser.cs"];
m2_824 [label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="1766-1766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="DateTimeParser.cs"];
m2_826 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="1759-1759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="DateTimeParser.cs"];
m2_1654 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="3756-3756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DateTimeParser.cs"];
m2_1655 [label="var reference = new Dictionary<string, object>()", span="3760-3760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DateTimeParser.cs"];
m2_1656 [label="reference.Add(''$ref'', ''Persons'')", span="3761-3761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DateTimeParser.cs"];
m2_1657 [label="reference.Add(''$id'', 1)", span="3762-3762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DateTimeParser.cs"];
m2_1661 [label="child.Add(''Father'', reference)", span="3767-3767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DateTimeParser.cs"];
m2_1658 [label="var child = new Dictionary<string, object>()", span="3764-3764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DateTimeParser.cs"];
m2_1659 [label="child.Add(''_id'', 2)", span="3765-3765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DateTimeParser.cs"];
m2_1660 [label="child.Add(''Name'', ''Isabell'')", span="3766-3766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DateTimeParser.cs"];
m2_1662 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="3769-3769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DateTimeParser.cs"];
m2_1663 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Additional content found in JSON reference object. A JSON reference object should only have a $ref property. Path 'Father.$id', line 6, position 11.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n        })", span="3771-3776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DateTimeParser.cs"];
m2_1664 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="3756-3756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DateTimeParser.cs"];
m2_2719 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="6187-6187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="DateTimeParser.cs"];
m2_2720 [label="PropertyItemConverter c = new PropertyItemConverter\r\n        {\r\n          Data = new[]\r\n            {\r\n              ''one'',\r\n              ''two'',\r\n              ''three''\r\n            }\r\n        }", span="6189-6197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="DateTimeParser.cs"];
m2_2721 [label="string json = JsonConvert.SerializeObject(c)", span="6199-6199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="DateTimeParser.cs"];
m2_2722 [label="Assert.AreEqual(@''{''''Data'''':['''':::ONE:::'''','''':::TWO:::'''','''':::THREE:::'''']}'', json)", span="6201-6201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="DateTimeParser.cs"];
m2_2723 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="6187-6187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="DateTimeParser.cs"];
m2_2434 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="5624-5624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="DateTimeParser.cs"];
m2_2435 [label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="5626-5631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="DateTimeParser.cs"];
m2_2436 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Error converting value {null} to type 'System.Int32'. Path '[3]', line 5, position 7.'',\r\n        () =>\r\n        {\r\n          List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json);\r\n        })", span="5633-5638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="DateTimeParser.cs"];
m2_2437 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="5624-5624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="DateTimeParser.cs"];
m2_1765 [label="Entry Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass.SpecifiedTestClass()", span="7833-7833", cluster="Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass.SpecifiedTestClass()", file="DateTimeParser.cs"];
m2_549 [label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="DateTimeParser.cs"];
m2_639 [label="Entry Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", span="46-46", cluster="Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", file="DateTimeParser.cs"];
m2_3165 [label="Entry Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7549-7549", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_3166 [label="reader.TokenType == JsonToken.Null", span="7551-7551", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_3168 [label="return new WidgetId1 { Value = int.Parse(reader.Value.ToString()) };", span="7553-7553", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_3167 [label="return null;", span="7552-7552", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_3169 [label="Exit Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7549-7549", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_140 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="121-121", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="DateTimeParser.cs"];
m2_3111 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="7301-7301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="DateTimeParser.cs"];
m2_3112 [label="ISet<string> s1 = new HashSet<string>(new[] {''1'', ''two'', ''III''})", span="7303-7303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="DateTimeParser.cs"];
m2_3113 [label="string json = JsonConvert.SerializeObject(s1)", span="7305-7305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="DateTimeParser.cs"];
m2_3115 [label="Assert.AreEqual(s1.Count, s2.Count)", span="7309-7309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="DateTimeParser.cs"];
m2_3116 [label=s1, span="7310-7310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="DateTimeParser.cs"];
m2_3114 [label="ISet<string> s2 = JsonConvert.DeserializeObject<ISet<string>>(json)", span="7307-7307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="DateTimeParser.cs"];
m2_3117 [label="Assert.IsTrue(s2.Contains(s))", span="7312-7312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="DateTimeParser.cs"];
m2_3118 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="7301-7301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="DateTimeParser.cs"];
m2_1200 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", span="2700-2700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", file="DateTimeParser.cs"];
m2_222 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="DateTimeParser.cs"];
m2_108 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="269-269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="DateTimeParser.cs"];
m2_109 [label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="271-348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="DateTimeParser.cs"];
m2_110 [label="object o = JsonConvert.DeserializeObject(json)", span="349-349", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="DateTimeParser.cs"];
m2_111 [label="string s = string.Empty", span="350-350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="DateTimeParser.cs"];
m2_112 [label="s += s", span="351-351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="DateTimeParser.cs"];
m2_113 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="269-269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="DateTimeParser.cs"];
m2_1537 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="3533-3533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_1538 [label="return objectType.IsAssignableFrom(typeof(Pos));", span="3535-3535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_1539 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="3533-3533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="DateTimeParser.cs"];
m2_890 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", span="1901-1901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="DateTimeParser.cs"];
m2_891 [label="Product p1 = new Product\r\n        {\r\n          Name = ''Product 1'',\r\n          Price = 99.95m,\r\n          ExpiryDate = new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc),\r\n        }", span="1903-1908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="DateTimeParser.cs"];
m2_892 [label="Product p2 = new Product\r\n        {\r\n          Name = ''Product 2'',\r\n          Price = 12.50m,\r\n          ExpiryDate = new DateTime(2009, 7, 31, 0, 0, 0, DateTimeKind.Utc),\r\n        }", span="1909-1914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="DateTimeParser.cs"];
m2_894 [label="products.Add(p1)", span="1917-1917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="DateTimeParser.cs"];
m2_893 [label="List<Product> products = new List<Product>()", span="1916-1916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="DateTimeParser.cs"];
m2_895 [label="products.Add(p2)", span="1918-1918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="DateTimeParser.cs"];
m2_896 [label="string json = JsonConvert.SerializeObject(products, Formatting.Indented)", span="1920-1920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="DateTimeParser.cs"];
m2_897 [label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Name'''': ''''Product 1'''',\r\n    ''''ExpiryDate'''': ''''2000-12-29T00:00:00Z'''',\r\n    ''''Price'''': 99.95,\r\n    ''''Sizes'''': null\r\n  },\r\n  {\r\n    ''''Name'''': ''''Product 2'''',\r\n    ''''ExpiryDate'''': ''''2009-07-31T00:00:00Z'''',\r\n    ''''Price'''': 12.50,\r\n    ''''Sizes'''': null\r\n  }\r\n]'', json)", span="1936-1949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="DateTimeParser.cs"];
m2_898 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", span="1901-1901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="DateTimeParser.cs"];
m2_1865 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", span="4223-4223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", file="DateTimeParser.cs"];
m2_2506 [label="Entry Newtonsoft.Json.Tests.Serialization.WithEnums.WithEnums()", span="7565-7565", cluster="Newtonsoft.Json.Tests.Serialization.WithEnums.WithEnums()", file="DateTimeParser.cs"];
m2_2635 [label="Entry Unk.ToUpper", span="", cluster="Unk.ToUpper", file="DateTimeParser.cs"];
m2_3160 [label="Entry Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7543-7543", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_3161 [label="WidgetId1 id = (WidgetId1)value", span="7545-7545", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_3162 [label="writer.WriteValue(id.Value.ToString())", span="7546-7546", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_3163 [label="Exit Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7543-7543", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1178 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="2650-2650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="DateTimeParser.cs"];
m2_1179 [label="JRawValueTestObject deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:3}'')", span="2652-2652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="DateTimeParser.cs"];
m2_1180 [label="Assert.AreEqual(''3'', deserialized.Value.ToString())", span="2653-2653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="DateTimeParser.cs"];
m2_1181 [label="deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:'3'}'')", span="2655-2655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="DateTimeParser.cs"];
m2_1182 [label="Assert.AreEqual(@''''''3'''''', deserialized.Value.ToString())", span="2656-2656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="DateTimeParser.cs"];
m2_1183 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="2650-2650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="DateTimeParser.cs"];
m2_2319 [label="Entry Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", span="7651-7651", cluster="Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", file="DateTimeParser.cs"];
m2_3176 [label="Components = new ConcurrentDictionary<string, Component>()", span="7653-7653", cluster="Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", file="DateTimeParser.cs"];
m2_3177 [label="Exit Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", span="7651-7651", cluster="Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", file="DateTimeParser.cs"];
m2_3094 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="7242-7242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="DateTimeParser.cs"];
m2_3095 [label="IDictionary<string, object> dates = new Dictionary<string, object>\r\n        {\r\n          {''DateTime-Unspecified'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Unspecified)},\r\n          {''DateTime-Utc'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)},\r\n          {''DateTime-Local'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Local)},\r\n          {''DateTimeOffset-Zero'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)},\r\n          {''DateTimeOffset-Plus1'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))},\r\n          {''DateTimeOffset-Plus15'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1.5))}\r\n        }", span="7244-7252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="DateTimeParser.cs"];
m2_3096 [label="string expected = JsonConvert.SerializeObject(dates, Formatting.Indented)", span="7254-7254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="DateTimeParser.cs"];
m2_3098 [label="string actual = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          DateFormatString = JsonSerializerSettings.DefaultDateFormatString\r\n        })", span="7258-7261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="DateTimeParser.cs"];
m2_3097 [label="Console.WriteLine(expected)", span="7256-7256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="DateTimeParser.cs"];
m2_3099 [label="Console.WriteLine(expected)", span="7263-7263", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="DateTimeParser.cs"];
m2_3100 [label="Assert.AreEqual(expected, actual)", span="7265-7265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="DateTimeParser.cs"];
m2_3101 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="7242-7242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="DateTimeParser.cs"];
m2_2139 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", span="4969-4969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", file="DateTimeParser.cs"];
m2_165 [label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0", cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", file="DateTimeParser.cs"];
m2_2389 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="492-492", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="DateTimeParser.cs"];
m2_2105 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="4854-4854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="DateTimeParser.cs"];
m2_2106 [label="string json = @''{A:''''Test''''}''", span="4856-4856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="DateTimeParser.cs"];
m2_2107 [label="var withoutParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithoutParameterisedConstructor>(json)", span="4858-4858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="DateTimeParser.cs"];
m2_2108 [label="var withParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithParameterisedConstructor>(json)", span="4859-4859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="DateTimeParser.cs"];
m2_2109 [label="Assert.AreEqual(withoutParameterisedConstructor.B, withParameterisedConstructor.B)", span="4860-4860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="DateTimeParser.cs"];
m2_2110 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="4854-4854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="DateTimeParser.cs"];
m2_2718 [label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemConverter.PropertyItemConverter()", span="7499-7499", cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemConverter.PropertyItemConverter()", file="DateTimeParser.cs"];
m2_2784 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="6358-6358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="DateTimeParser.cs"];
m2_2785 [label="string json = @''{ ''''ClassName'''' : ''''System.InvalidOperationException'''',\r\n  ''''Data'''' : null,\r\n  ''''ExceptionMethod'''' : ''''8\nLogin\nAppBiz, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null\nMyApp.LoginBiz\nMyApp.User Login()'''',\r\n  ''''HResult'''' : -2146233079,\r\n  ''''HelpURL'''' : null,\r\n  ''''InnerException'''' : { ''''ClassName'''' : ''''System.Exception'''',\r\n      ''''Data'''' : null,\r\n      ''''ExceptionMethod'''' : null,\r\n      ''''HResult'''' : -2146233088,\r\n      ''''HelpURL'''' : null,\r\n      ''''InnerException'''' : null,\r\n      ''''Message'''' : ''''Inner exception...'''',\r\n      ''''RemoteStackIndex'''' : 0,\r\n      ''''RemoteStackTraceString'''' : null,\r\n      ''''Source'''' : null,\r\n      ''''StackTraceString'''' : null,\r\n      ''''WatsonBuckets'''' : null\r\n    },\r\n  ''''Message'''' : ''''Outter exception...'''',\r\n  ''''RemoteStackIndex'''' : 0,\r\n  ''''RemoteStackTraceString'''' : null,\r\n  ''''Source'''' : ''''AppBiz'''',\r\n  ''''StackTraceString'''' : '''' at MyApp.LoginBiz.Login() in C:\\MyApp\\LoginBiz.cs:line 44\r\n at MyApp.LoginSvc.Login() in C:\\MyApp\\LoginSvc.cs:line 71\r\n at SyncInvokeLogin(Object , Object[] , Object[] )\r\n at System.ServiceModel.Dispatcher.SyncMethodInvoker.Invoke(Object instance, Object[] inputs, Object[]& outputs)\r\n at System.ServiceModel.Dispatcher.DispatchOperationRuntime.InvokeBegin(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage41(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage31(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage11(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)'''',\r\n  ''''WatsonBuckets'''' : null\r\n}''", span="6360-6384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="DateTimeParser.cs"];
m2_2786 [label="InvalidOperationException exception = JsonConvert.DeserializeObject<InvalidOperationException>(json)", span="6386-6386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="DateTimeParser.cs"];
m2_2787 [label="Assert.IsNotNull(exception)", span="6387-6387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="DateTimeParser.cs"];
m2_2788 [label="CustomAssert.IsInstanceOfType(typeof(InvalidOperationException), exception)", span="6388-6388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="DateTimeParser.cs"];
m2_2789 [label="Assert.AreEqual(''Outter exception...'', exception.Message)", span="6390-6390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="DateTimeParser.cs"];
m2_2790 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="6358-6358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="DateTimeParser.cs"];
m2_1590 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="DateTimeParser.cs"];
m2_1625 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", span="3705-3705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="DateTimeParser.cs"];
m2_1626 [label="Movie p = new Movie()", span="3707-3707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="DateTimeParser.cs"];
m2_1627 [label="p.ReleaseCountries = new List<string> { ''Existing'' }", span="3708-3708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="DateTimeParser.cs"];
m2_1628 [label="JsonConvert.PopulateObject(''{'ReleaseCountries':['Appended']}'', p, new JsonSerializerSettings\r\n        {\r\n          Converters = new List<JsonConverter> { new StringListAppenderConverter() }\r\n        })", span="3710-3713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="DateTimeParser.cs"];
m2_1629 [label="Assert.AreEqual(2, p.ReleaseCountries.Count)", span="3715-3715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="DateTimeParser.cs"];
m2_1630 [label="Assert.AreEqual(''Existing'', p.ReleaseCountries[0])", span="3716-3716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="DateTimeParser.cs"];
m2_1631 [label="Assert.AreEqual(''Appended'', p.ReleaseCountries[1])", span="3717-3717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="DateTimeParser.cs"];
m2_1632 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", span="3705-3705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="DateTimeParser.cs"];
m2_526 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="DateTimeParser.cs"];
m2_1166 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="2613-2613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="DateTimeParser.cs"];
m2_1167 [label="ThisGenericTest<KeyValueId> g = new ThisGenericTest<KeyValueId>()", span="2615-2615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="DateTimeParser.cs"];
m2_1168 [label="g.Add(new KeyValueId { Id = 1, Key = ''key1'', Value = ''value1'' })", span="2617-2617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="DateTimeParser.cs"];
m2_1169 [label="g.Add(new KeyValueId { Id = 2, Key = ''key2'', Value = ''value2'' })", span="2618-2618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="DateTimeParser.cs"];
m2_1170 [label="g.MyProperty = ''some value''", span="2620-2620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="DateTimeParser.cs"];
m2_1171 [label="string json = g.ToJson()", span="2622-2622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="DateTimeParser.cs"];
m2_1172 [label="Assert.AreEqual(@''{\r\n  ''''MyProperty'''': ''''some value'''',\r\n  ''''TheItems'''': [\r\n    {\r\n      ''''Id'''': 1,\r\n      ''''Key'''': ''''key1'''',\r\n      ''''Value'''': ''''value1''''\r\n    },\r\n    {\r\n      ''''Id'''': 2,\r\n      ''''Key'''': ''''key2'''',\r\n      ''''Value'''': ''''value2''''\r\n    }\r\n  ]\r\n}'', json)", span="2624-2638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="DateTimeParser.cs"];
m2_1173 [label="ThisGenericTest<KeyValueId> gen = JsonConvert.DeserializeObject<ThisGenericTest<KeyValueId>>(json)", span="2640-2640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="DateTimeParser.cs"];
m2_1174 [label="Assert.AreEqual(''some value'', gen.MyProperty)", span="2641-2641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="DateTimeParser.cs"];
m2_1175 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="2613-2613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="DateTimeParser.cs"];
m2_9 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="697-697", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="DateTimeParser.cs"];
m2_3206 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="840-840", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="DateTimeParser.cs"];
m2_508 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="1028-1028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="DateTimeParser.cs"];
m2_509 [label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="1030-1030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="DateTimeParser.cs"];
m2_510 [label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="1031-1031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="DateTimeParser.cs"];
m2_511 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="1028-1028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="DateTimeParser.cs"];
m2_3202 [label="Entry Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7799-7799", cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_3203 [label="writer.WriteValue(Convert.ToDouble(value))", span="7801-7801", cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_3204 [label="Exit Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7799-7799", cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DateTimeParser.cs"];
m2_1023 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="2208-2208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="DateTimeParser.cs"];
m2_1024 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error getting value from 'ReadTimeout' on 'System.IO.MemoryStream'.'',\r\n        () =>\r\n        {\r\n          JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          });\r\n        })", span="2210-2223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="DateTimeParser.cs"];
m2_1025 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="2208-2208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="DateTimeParser.cs"];
m2_1279 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="DateTimeParser.cs"];
m2_2889 [label="Entry Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", span="7782-7782", cluster="Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", file="DateTimeParser.cs"];
m2_126 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="377-377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="DateTimeParser.cs"];
m2_127 [label="JsonPropertyClass test = new JsonPropertyClass()", span="379-379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="DateTimeParser.cs"];
m2_128 [label="test.Pie = ''Delicious''", span="380-380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="DateTimeParser.cs"];
m2_129 [label="test.SweetCakesCount = int.MaxValue", span="381-381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="DateTimeParser.cs"];
m2_130 [label="string jsonText = JsonConvert.SerializeObject(test)", span="383-383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="DateTimeParser.cs"];
m2_133 [label="Assert.AreEqual(test.Pie, test2.Pie)", span="389-389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="DateTimeParser.cs"];
m2_134 [label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="390-390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="DateTimeParser.cs"];
m2_131 [label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="385-385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="DateTimeParser.cs"];
m2_132 [label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="387-387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="DateTimeParser.cs"];
m2_135 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="377-377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="DateTimeParser.cs"];
m2_2556 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="5868-5868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="DateTimeParser.cs"];
m2_2557 [label="byte[] b = JsonConvert.DeserializeObject<byte[]>('''')", span="5870-5870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="DateTimeParser.cs"];
m2_2558 [label="Assert.IsNull(b)", span="5871-5871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="DateTimeParser.cs"];
m2_2559 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="5868-5868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="DateTimeParser.cs"];
m2_2128 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="4949-4949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="DateTimeParser.cs"];
m2_2129 [label="ChildWithDifferentOverrideObject cc = new ChildWithDifferentOverrideObject\r\n        {\r\n          VirtualMember = ''VirtualMember!'',\r\n          NonVirtualMember = ''NonVirtualMember!''\r\n        }", span="4951-4955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="DateTimeParser.cs"];
m2_2130 [label="string result = JsonConvert.SerializeObject(cc)", span="4957-4957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="DateTimeParser.cs"];
m2_2131 [label="Assert.AreEqual(@''{''''differentVirtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="4958-4958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="DateTimeParser.cs"];
m2_2132 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="4949-4949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="DateTimeParser.cs"];
m2_267 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="DateTimeParser.cs"];
m2_174 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="DateTimeParser.cs"];
m2_2220 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="5208-5208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="DateTimeParser.cs"];
m2_2221 [label="BusRun r = JsonConvert.DeserializeObject<BusRun>(''{\''Departures\'':[\''\\/Date(1309874148734-0400)\\/\'',\''\\/Date(1309874148739-0400)\\/\'',null],\''WheelchairAccessible\'':true}'')", span="5210-5210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="DateTimeParser.cs"];
m2_2222 [label="Assert.AreEqual(3, r.Departures.Count())", span="5212-5212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="DateTimeParser.cs"];
m2_2223 [label="Assert.IsNotNull(r.Departures.ElementAt(0))", span="5213-5213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="DateTimeParser.cs"];
m2_2224 [label="Assert.IsNotNull(r.Departures.ElementAt(1))", span="5214-5214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="DateTimeParser.cs"];
m2_2225 [label="Assert.IsNull(r.Departures.ElementAt(2))", span="5215-5215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="DateTimeParser.cs"];
m2_2226 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="5208-5208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="DateTimeParser.cs"];
m2_866 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", span="1865-1865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="DateTimeParser.cs"];
m2_867 [label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',[''''id'''', 1, ''''teststring'''', ''''test''''],{''''one'''':1}],''''type'''':''''rpc'''',''''tid'''':2}''", span="1867-1867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="DateTimeParser.cs"];
m2_868 [label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1869-1869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="DateTimeParser.cs"];
m2_869 [label="Assert.AreEqual(''Router'', o.Action)", span="1871-1871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="DateTimeParser.cs"];
m2_870 [label="Assert.AreEqual(''Navigate'', o.Method)", span="1872-1872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="DateTimeParser.cs"];
m2_871 [label="Assert.AreEqual(3, o.Data.Length)", span="1873-1873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="DateTimeParser.cs"];
m2_872 [label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1874-1874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="DateTimeParser.cs"];
m2_873 [label="CustomAssert.IsInstanceOfType(typeof(JArray), o.Data[1])", span="1875-1875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="DateTimeParser.cs"];
m2_874 [label="Assert.AreEqual(4, ((JArray)o.Data[1]).Count)", span="1876-1876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="DateTimeParser.cs"];
m2_875 [label="CustomAssert.IsInstanceOfType(typeof(JObject), o.Data[2])", span="1877-1877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="DateTimeParser.cs"];
m2_876 [label="Assert.AreEqual(1, ((JObject)o.Data[2]).Count)", span="1878-1878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="DateTimeParser.cs"];
m2_877 [label="Assert.AreEqual(1, (int)((JObject)o.Data[2])[''one''])", span="1879-1879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="DateTimeParser.cs"];
m2_878 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", span="1865-1865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="DateTimeParser.cs"];
m2_3149 [label="Entry System.Enum.GetNames(System.Type)", span="0-0", cluster="System.Enum.GetNames(System.Type)", file="DateTimeParser.cs"];
m2_3219 [label=json, span="", file="DateTimeParser.cs"];
m2_3220 [label=json, span="", file="DateTimeParser.cs"];
m2_3221 [label=strFromTest, span="", file="DateTimeParser.cs"];
m2_3222 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", span="", file="DateTimeParser.cs"];
m2_3223 [label=json, span="", file="DateTimeParser.cs"];
m2_3224 [label=json, span="", file="DateTimeParser.cs"];
m2_3225 [label=json, span="", file="DateTimeParser.cs"];
m2_3226 [label=json, span="", file="DateTimeParser.cs"];
m2_3227 [label=json, span="", file="DateTimeParser.cs"];
m2_3228 [label=json, span="", file="DateTimeParser.cs"];
m2_3229 [label=json, span="", file="DateTimeParser.cs"];
m2_3230 [label=json, span="", file="DateTimeParser.cs"];
m2_3231 [label=json, span="", file="DateTimeParser.cs"];
m2_3232 [label=json, span="", file="DateTimeParser.cs"];
m2_3233 [label=json, span="", file="DateTimeParser.cs"];
m2_3234 [label=json, span="", file="DateTimeParser.cs"];
m2_3235 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", span="", file="DateTimeParser.cs"];
m2_3236 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", span="", file="DateTimeParser.cs"];
m2_3237 [label=json, span="", file="DateTimeParser.cs"];
m2_3238 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", span="", file="DateTimeParser.cs"];
m2_3239 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", span="", file="DateTimeParser.cs"];
m2_3240 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", span="", file="DateTimeParser.cs"];
m2_3241 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>", span="", file="DateTimeParser.cs"];
m2_3242 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", span="", file="DateTimeParser.cs"];
m2_3243 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", span="", file="DateTimeParser.cs"];
m2_3244 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass", span="", file="DateTimeParser.cs"];
m2_3245 [label=json, span="", file="DateTimeParser.cs"];
m2_3246 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty", span="", file="DateTimeParser.cs"];
m2_3247 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee", span="", file="DateTimeParser.cs"];
m2_3248 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey", span="", file="DateTimeParser.cs"];
m2_3249 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass", span="", file="DateTimeParser.cs"];
m2_3250 [label=json, span="", file="DateTimeParser.cs"];
m2_3251 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector", span="", file="DateTimeParser.cs"];
m2_3252 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", span="", file="DateTimeParser.cs"];
m2_3253 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base", span="", file="DateTimeParser.cs"];
m2_3254 [label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="DateTimeParser.cs"];
m2_3255 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="DateTimeParser.cs"];
m2_3256 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest", span="", file="DateTimeParser.cs"];
m2_3257 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor", span="", file="DateTimeParser.cs"];
m2_3258 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor", span="", file="DateTimeParser.cs"];
m2_3259 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor", span="", file="DateTimeParser.cs"];
m2_3260 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor", span="", file="DateTimeParser.cs"];
m2_3261 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor", span="", file="DateTimeParser.cs"];
m2_3262 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", span="", file="DateTimeParser.cs"];
m2_3263 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", span="", file="DateTimeParser.cs"];
m2_3264 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", span="", file="DateTimeParser.cs"];
m2_3265 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException", span="", file="DateTimeParser.cs"];
m2_3266 [label=json, span="", file="DateTimeParser.cs"];
m2_3267 [label=json, span="", file="DateTimeParser.cs"];
m2_3268 [label=errors, span="", file="DateTimeParser.cs"];
m2_3269 [label=errors, span="", file="DateTimeParser.cs"];
m2_3270 [label=errors, span="", file="DateTimeParser.cs"];
m2_3271 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", span="", file="DateTimeParser.cs"];
m2_3272 [label=json, span="", file="DateTimeParser.cs"];
m2_3273 [label=s, span="", file="DateTimeParser.cs"];
m2_3274 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>", span="", file="DateTimeParser.cs"];
m2_3275 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>", span="", file="DateTimeParser.cs"];
m2_3276 [label=json, span="", file="DateTimeParser.cs"];
m2_3277 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver", span="", file="DateTimeParser.cs"];
m2_3278 [label=json, span="", file="DateTimeParser.cs"];
m2_3279 [label=json, span="", file="DateTimeParser.cs"];
m2_3280 [label=json, span="", file="DateTimeParser.cs"];
m2_3281 [label=json, span="", file="DateTimeParser.cs"];
m2_3282 [label=json, span="", file="DateTimeParser.cs"];
m2_3283 [label=json, span="", file="DateTimeParser.cs"];
m2_3284 [label=json, span="", file="DateTimeParser.cs"];
m2_3285 [label="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel", span="", file="DateTimeParser.cs"];
m2_3286 [label="Newtonsoft.Json.Tests.Serialization.TestObject", span="", file="DateTimeParser.cs"];
m2_3287 [label="Newtonsoft.Json.Tests.Serialization.GameObject", span="", file="DateTimeParser.cs"];
m2_3288 [label="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass", span="", file="DateTimeParser.cs"];
m6_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDictionary.Example()", span="9-9", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDictionary.Example()", file="IsoDateTimeConverterTests.cs"];
m6_1 [label="Dictionary<string, int> points = new Dictionary<string, int>\r\n        {\r\n          { ''James'', 9001 },\r\n          { ''Jo'', 3474 },\r\n          { ''Jess'', 11926 }\r\n        }", span="12-17", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDictionary.Example()", file="IsoDateTimeConverterTests.cs"];
m6_2 [label="string json = JsonConvert.SerializeObject(points, Formatting.Indented)", span="19-19", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDictionary.Example()", file="IsoDateTimeConverterTests.cs"];
m6_3 [label="Console.WriteLine(json)", span="21-21", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDictionary.Example()", file="IsoDateTimeConverterTests.cs"];
m6_4 [label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDictionary.Example()", span="9-9", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.SerializeDictionary.Example()", file="IsoDateTimeConverterTests.cs"];
m6_7 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="IsoDateTimeConverterTests.cs"];
m6_6 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="710-710", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="IsoDateTimeConverterTests.cs"];
m6_5 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="IsoDateTimeConverterTests.cs"];
m7_116 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JavaScriptUtils.cs"];
m7_100 [label="Entry System.Array.Copy(System.Array, System.Array, int)", span="0-0", cluster="System.Array.Copy(System.Array, System.Array, int)", file="JavaScriptUtils.cs"];
m7_99 [label="Entry string.Equals(string, string)", span="0-0", cluster="string.Equals(string, string)", file="JavaScriptUtils.cs"];
m7_16 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", span="76-76", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs"];
m7_17 [label="stringEscapeHandling == StringEscapeHandling.EscapeHtml", span="78-78", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs"];
m7_19 [label="quoteChar == ''''", span="81-81", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs"];
m7_18 [label="return HtmlCharEscapeFlags;", span="79-79", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs"];
m7_20 [label="return DoubleQuoteCharEscapeFlags;", span="82-82", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs"];
m7_21 [label="return SingleQuoteCharEscapeFlags;", span="84-84", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs"];
m7_22 [label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", span="76-76", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs"];
m7_15 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="JavaScriptUtils.cs"];
m7_23 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", span="87-87", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs"];
m7_24 [label="s == null", span="89-89", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs"];
m7_26 [label=s, span="92-92", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs"];
m7_27 [label="c >= charEscapeFlags.Length || charEscapeFlags[c]", span="94-94", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs"];
m7_25 [label="return false;", span="90-90", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs"];
m7_29 [label="return false;", span="98-98", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs"];
m7_28 [label="return true;", span="95-95", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs"];
m7_30 [label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", span="87-87", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs"];
m7_31 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", span="101-101", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_32 [label=appendDelimiters, span="105-105", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_33 [label="writer.Write(delimiter)", span="106-106", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_34 [label="s != null", span="108-108", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_37 [label="i < s.Length", span="112-112", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_38 [label="var c = s[i]", span="114-114", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_39 [label="c < charEscapeFlags.Length && !charEscapeFlags[c]", span="116-116", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_60 [label="c < charEscapeFlags.Length || stringEscapeHandling == StringEscapeHandling.EscapeNonAscii", span="151-151", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_61 [label="c == '\'' && stringEscapeHandling != StringEscapeHandling.EscapeHtml", span="153-153", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_63 [label="c == '''' && stringEscapeHandling != StringEscapeHandling.EscapeHtml", span="157-157", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_65 [label="writeBuffer == null || writeBuffer.Length < UnicodeTextLength", span="163-163", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_67 [label="StringUtils.ToCharAsUnicode(c, writeBuffer)", span="166-166", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_75 [label="writeBuffer == null || writeBuffer.Length < length", span="189-189", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_78 [label="Array.Copy(writeBuffer, newBuffer, UnicodeTextLength)", span="196-196", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_80 [label="s.CopyTo(lastWritePosition, writeBuffer, start, length - start)", span="201-201", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_81 [label="writer.Write(writeBuffer, start, length - start)", span="204-204", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_84 [label="writer.Write(escapedValue)", span="209-209", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_85 [label="writer.Write(writeBuffer, 0, UnicodeTextLength)", span="211-211", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_88 [label="writer.Write(s)", span="217-217", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_89 [label="int length = s.Length - lastWritePosition", span="221-221", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_90 [label="writeBuffer == null || writeBuffer.Length < length", span="223-223", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_92 [label="s.CopyTo(lastWritePosition, writeBuffer, 0, length)", span="226-226", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_93 [label="writer.Write(writeBuffer, 0, length)", span="229-229", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_94 [label=appendDelimiters, span="234-234", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_95 [label="writer.Write(delimiter)", span="235-235", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_35 [label="int lastWritePosition = 0", span="110-110", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_36 [label="int i = 0", span="112-112", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_72 [label="i > lastWritePosition", span="184-184", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_73 [label="int length = i - lastWritePosition + ((isEscapedUnicodeText) ? UnicodeTextLength : 0)", span="186-186", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_87 [label="lastWritePosition == 0", span="214-214", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_82 [label="lastWritePosition = i + 1", span="207-207", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_86 [label="i++", span="112-112", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_41 [label=c, span="121-121", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_40 [label="string escapedValue", span="119-119", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_42 [label="'\t'", span="123-123", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_44 [label="'\n'", span="126-126", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_46 [label="'\r'", span="129-129", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_48 [label="'\f'", span="132-132", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_50 [label="'\b'", span="135-135", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_52 [label="'\\'", span="138-138", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_54 [label="'\u0085'", span="141-141", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_56 [label="'\u2028'", span="144-144", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_58 [label="'\u2029'", span="147-147", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_43 [label="escapedValue = @''\t''", span="124-124", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_45 [label="escapedValue = @''\n''", span="127-127", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_47 [label="escapedValue = @''\r''", span="130-130", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_49 [label="escapedValue = @''\f''", span="133-133", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_51 [label="escapedValue = @''\b''", span="136-136", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_53 [label="escapedValue = @''\\''", span="139-139", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_55 [label="escapedValue = @''\u0085''", span="142-142", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_57 [label="escapedValue = @''\u2028''", span="145-145", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_59 [label="escapedValue = @''\u2029''", span="148-148", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_69 [label="escapedValue = null", span="174-174", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_62 [label="escapedValue = @''\'''", span="155-155", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_64 [label="escapedValue = @''\''''''", span="159-159", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_66 [label="writeBuffer = new char[UnicodeTextLength]", span="164-164", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", color=red, community=0, file="JavaScriptUtils.cs"];
m7_68 [label="escapedValue = EscapedUnicodeText", span="169-169", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_70 [label="escapedValue == null", span="179-179", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_71 [label="bool isEscapedUnicodeText = string.Equals(escapedValue, EscapedUnicodeText)", span="182-182", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_74 [label="int start = (isEscapedUnicodeText) ? UnicodeTextLength : 0", span="187-187", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_77 [label=isEscapedUnicodeText, span="195-195", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_83 [label="!isEscapedUnicodeText", span="208-208", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_76 [label="char[] newBuffer = new char[length]", span="191-191", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", color=red, community=0, file="JavaScriptUtils.cs"];
m7_79 [label="writeBuffer = newBuffer", span="198-198", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_91 [label="writeBuffer = new char[length]", span="224-224", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_96 [label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", span="101-101", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_114 [label="Entry Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", span="118-118", cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="JavaScriptUtils.cs"];
m7_115 [label="Entry Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="110-110", cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="JavaScriptUtils.cs"];
m7_101 [label="Entry string.CopyTo(int, char[], int, int)", span="0-0", cluster="string.CopyTo(int, char[], int, int)", file="JavaScriptUtils.cs"];
m7_98 [label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", span="126-126", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="JavaScriptUtils.cs"];
m7_14 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JavaScriptUtils.cs"];
m7_102 [label="Entry System.IO.TextWriter.Write(char[], int, int)", span="0-0", cluster="System.IO.TextWriter.Write(char[], int, int)", file="JavaScriptUtils.cs"];
m7_97 [label="Entry System.IO.TextWriter.Write(char)", span="0-0", cluster="System.IO.TextWriter.Write(char)", file="JavaScriptUtils.cs"];
m7_103 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)", file="JavaScriptUtils.cs"];
m7_13 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JavaScriptUtils.cs"];
m7_0 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", span="49-49", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_1 [label="IList<char> escapeChars = new List<char>\r\n            {\r\n                '\n', '\r', '\t', '\\', '\f', '\b',\r\n            }", span="51-54", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_2 [label="int i = 0", span="55-55", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_4 [label="escapeChars.Add((char)i)", span="57-57", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_6 [label="escapeChars.Union(new[] { '\'' })", span="60-60", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_8 [label="escapeChars.Union(new[] { '''' })", span="64-64", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_10 [label="escapeChars.Union(new[] { '''', '\'', '<', '>', '&' })", span="68-68", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_3 [label="i < ' '", span="55-55", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_5 [label="i++", span="55-55", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_7 [label="SingleQuoteCharEscapeFlags[escapeChar] = true", span="62-62", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_9 [label="DoubleQuoteCharEscapeFlags[escapeChar] = true", span="66-66", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_11 [label="HtmlCharEscapeFlags[escapeChar] = true", span="70-70", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_12 [label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", span="49-49", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_107 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", span="243-243", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m7_108 [label="bool[] charEscapeFlags = GetCharEscapeFlags(stringEscapeHandling, delimiter)", span="245-245", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m7_109 [label="StringWriter w = StringUtils.CreateStringWriter(StringUtils.GetLength(value) ?? 16)", span="247-247", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m7_111 [label="WriteEscapedJavaScriptString(w, value, delimiter, appendDelimiters, charEscapeFlags, stringEscapeHandling, ref buffer)", span="250-250", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", color=red, community=0, file="JavaScriptUtils.cs"];
m7_110 [label="char[] buffer = null", span="249-249", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m7_112 [label="return w.ToString();", span="251-251", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m7_113 [label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", span="243-243", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m7_104 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", span="238-238", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", file="JavaScriptUtils.cs"];
m7_105 [label="return ToEscapedJavaScriptString(value, delimiter, appendDelimiters, StringEscapeHandling.Default);", span="240-240", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", file="JavaScriptUtils.cs"];
m7_106 [label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", span="238-238", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", file="JavaScriptUtils.cs"];
m8_16 [label="duplicateProperty = false", span="81-81", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m8_28 [label="Entry System.Collections.ObjectModel.Collection<T>.Remove(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Remove(T)", file="JsonPropertyCollection.cs"];
m8_8 [label="string json = o.ToString()", span="23-23", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonManually.Example()", file="JsonPropertyCollection.cs"];
m8_9 [label="Console.WriteLine(json)", span="25-25", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonManually.Example()", file="JsonPropertyCollection.cs"];
m8_12 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="127-127", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JsonPropertyCollection.cs"];
m8_15 [label="Entry Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="282-282", cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="JsonPropertyCollection.cs"];
m8_19 [label="Remove(existingProperty)", span="91-91", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m8_24 [label="throw new JsonSerializationException(''A member with the name '{0}' already exists on '{1}'. Use the JsonPropertyAttribute to specify another name.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, _type));", span="104-104", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m8_25 [label="Add(property)", span="107-107", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m8_10 [label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonManually.Example()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonManually.Example()", file="JsonPropertyCollection.cs"];
m8_13 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="109-109", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="JsonPropertyCollection.cs"];
m8_14 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JsonPropertyCollection.cs"];
m8_17 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="389-389", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonPropertyCollection.cs"];
m8_18 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonPropertyCollection.cs"];
m8_21 [label="existingProperty.DeclaringType.IsSubclassOf(property.DeclaringType)\r\n                            || (property.DeclaringType.IsInterface() && existingProperty.DeclaringType.ImplementInterface(property.DeclaringType))", span="94-95", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m8_20 [label="duplicateProperty = false", span="92-92", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m8_23 [label=duplicateProperty, span="103-103", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m8_11 [label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="64-64", cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="JsonPropertyCollection.cs"];
m8_22 [label="return;", span="98-98", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m8_26 [label="Exit Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="66-66", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m8_42 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)", span="126-126", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m8_45 [label="return false;", span="131-131", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)", color=green, community=0, file="JsonPropertyCollection.cs"];
m8_44 [label="item = default(JsonProperty)", span="130-130", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m8_43 [label="Dictionary == null", span="128-128", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m8_46 [label="return Dictionary.TryGetValue(key, out item);", span="134-134", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m8_47 [label="Exit Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)", span="126-126", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs"];
m8_59 [label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)", file="JsonPropertyCollection.cs"];
m8_35 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="117-117", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JsonPropertyCollection.cs"];
m8_36 [label="JsonProperty property = GetProperty(propertyName, StringComparison.Ordinal)", span="119-119", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JsonPropertyCollection.cs"];
m8_38 [label="property = GetProperty(propertyName, StringComparison.OrdinalIgnoreCase)", span="121-121", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JsonPropertyCollection.cs"];
m8_37 [label="property == null", span="120-120", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JsonPropertyCollection.cs"];
m8_39 [label="return property;", span="123-123", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JsonPropertyCollection.cs"];
m8_40 [label="Exit Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="117-117", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JsonPropertyCollection.cs"];
m8_29 [label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0", cluster="System.Type.IsSubclassOf(System.Type)", file="JsonPropertyCollection.cs"];
m8_30 [label="Entry System.Type.IsInterface()", span="128-128", cluster="System.Type.IsInterface()", file="JsonPropertyCollection.cs"];
m8_34 [label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonPropertyCollection.cs"];
m8_41 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", span="143-143", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs"];
m8_51 [label="TryGetValue(propertyName, out property)", span="149-149", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs"];
m8_50 [label="JsonProperty property", span="148-148", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs"];
m8_52 [label="return property;", span="150-150", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs"];
m8_53 [label="return null;", span="152-152", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs"];
m8_49 [label="comparisonType == StringComparison.Ordinal", span="146-146", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs"];
m8_55 [label="string.Equals(propertyName, property.PropertyName, comparisonType)", span="157-157", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs"];
m8_54 [label=this, span="155-155", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs"];
m8_57 [label="return null;", span="163-163", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs"];
m8_56 [label="return property;", span="159-159", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs"];
m8_58 [label="Exit Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", span="143-143", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs"];
m8_32 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonPropertyCollection.cs"];
m8_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonManually.Example()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonManually.Example()", file="JsonPropertyCollection.cs"];
m8_2 [label="JValue text = new JValue(''Manual text'')", span="14-14", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonManually.Example()", file="JsonPropertyCollection.cs"];
m8_1 [label="JArray array = new JArray()", span="13-13", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonManually.Example()", file="JsonPropertyCollection.cs"];
m8_3 [label="JValue date = new JValue(new DateTime(2000, 5, 23))", span="15-15", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonManually.Example()", file="JsonPropertyCollection.cs"];
m8_27 [label="Entry System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", span="0-0", cluster="System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", file="JsonPropertyCollection.cs"];
m8_4 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonPropertyCollection.cs"];
m8_5 [label="array.Add(date)", span="18-18", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonManually.Example()", file="JsonPropertyCollection.cs"];
m8_7 [label="o[''MyArray''] = array", span="21-21", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonManually.Example()", file="JsonPropertyCollection.cs"];
m8_6 [label="JObject o = new JObject()", span="20-20", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.CreateJsonManually.Example()", file="JsonPropertyCollection.cs"];
m8_48 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonPropertyCollection.cs"];
m8_31 [label="Entry System.Type.ImplementInterface(System.Type)", span="553-553", cluster="System.Type.ImplementInterface(System.Type)", file="JsonPropertyCollection.cs"];
m8_33 [label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonPropertyCollection.cs"];
m8_60 [label="Newtonsoft.Json.Serialization.JsonPropertyCollection", span="", file="JsonPropertyCollection.cs"];
m9_55 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeQueue()", span="162-162", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeQueue()", file="JsonReader.cs"];
m9_58 [label="StringAssert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''II'''',\r\n  ''''3''''\r\n]'', json)", span="172-176", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeQueue()", color=green, community=0, file="JsonReader.cs"];
m9_57 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="171-171", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeQueue()", file="JsonReader.cs"];
m9_56 [label="ImmutableQueue<string> l = ImmutableQueue.CreateRange(new List<string>\r\n            {\r\n                ''One'',\r\n                ''II'',\r\n                ''3''\r\n            })", span="164-169", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeQueue()", file="JsonReader.cs"];
m9_59 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeQueue()", span="162-162", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeQueue()", file="JsonReader.cs"];
m9_35 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeArray()", span="117-117", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeArray()", file="JsonReader.cs"];
m9_36 [label="ImmutableArray<string> l = ImmutableArray.CreateRange(new List<string>\r\n                {\r\n                  ''One'',\r\n                  ''II'',\r\n                  ''3''\r\n                })", span="119-124", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeArray()", file="JsonReader.cs"];
m9_38 [label="StringAssert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''II'''',\r\n  ''''3''''\r\n]'', json)", span="127-131", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeArray()", file="JsonReader.cs"];
m9_37 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="126-126", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeArray()", file="JsonReader.cs"];
m9_39 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeArray()", span="117-117", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeArray()", file="JsonReader.cs"];
m9_144 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeSortedSet()", span="343-343", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeSortedSet()", file="JsonReader.cs"];
m9_147 [label="Assert.AreEqual(3, l.Count())", span="353-353", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeSortedSet()", file="JsonReader.cs"];
m9_146 [label="ImmutableSortedSet<string> l = JsonConvert.DeserializeObject<ImmutableSortedSet<string>>(json)", span="351-351", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeSortedSet()", file="JsonReader.cs"];
m9_148 [label="Assert.IsTrue(l.Contains(''3''))", span="354-354", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeSortedSet()", file="JsonReader.cs"];
m9_145 [label="string json = @''[\r\n  ''''One'''',\r\n  ''''II'''',\r\n  ''''3''''\r\n]''", span="345-349", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeSortedSet()", file="JsonReader.cs"];
m9_149 [label="Assert.IsTrue(l.Contains(''II''))", span="355-355", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeSortedSet()", file="JsonReader.cs"];
m9_150 [label="Assert.IsTrue(l.Contains(''One''))", span="356-356", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeSortedSet()", file="JsonReader.cs"];
m9_151 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeSortedSet()", span="343-343", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeSortedSet()", file="JsonReader.cs"];
m9_48 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeDefaultArray()", span="152-152", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeDefaultArray()", file="JsonReader.cs"];
m9_49 [label="ExceptionAssert.Throws<InvalidOperationException>(\r\n                () => JsonConvert.SerializeObject(default(ImmutableArray<int>), Formatting.Indented),\r\n                ''This operation cannot be performed on a default instance of ImmutableArray<T>.  Consider initializing the array, or checking the ImmutableArray<T>.IsDefault property.'')", span="154-156", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeDefaultArray()", file="JsonReader.cs"];
m9_50 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeDefaultArray()", span="152-152", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeDefaultArray()", file="JsonReader.cs"];
m9_60 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeQueue()", span="180-180", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeQueue()", file="JsonReader.cs"];
m9_61 [label="string json = @''[\r\n  ''''One'''',\r\n  ''''II'''',\r\n  ''''3''''\r\n]''", span="182-186", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeQueue()", color=green, community=0, file="JsonReader.cs"];
m9_62 [label="ImmutableQueue<string> l = JsonConvert.DeserializeObject<ImmutableQueue<string>>(json)", span="188-188", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeQueue()", file="JsonReader.cs"];
m9_65 [label="Assert.AreEqual(''II'', l.ElementAt(1))", span="192-192", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeQueue()", color=green, community=0, file="JsonReader.cs"];
m9_64 [label="Assert.AreEqual(''One'', l.ElementAt(0))", span="191-191", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeQueue()", file="JsonReader.cs"];
m9_66 [label="Assert.AreEqual(''3'', l.ElementAt(2))", span="193-193", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeQueue()", color=green, community=0, file="JsonReader.cs"];
m9_63 [label="Assert.AreEqual(3, l.Count())", span="190-190", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeQueue()", file="JsonReader.cs"];
m9_67 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeQueue()", span="180-180", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeQueue()", file="JsonReader.cs"];
m9_114 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="132-132", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m9_139 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeSortedSet()", span="325-325", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeSortedSet()", file="JsonReader.cs"];
m9_142 [label="StringAssert.AreEqual(@''[\r\n  ''''3'''',\r\n  ''''II'''',\r\n  ''''One''''\r\n]'', json)", span="335-339", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeSortedSet()", file="JsonReader.cs"];
m9_140 [label="ImmutableSortedSet<string> l = ImmutableSortedSet.CreateRange(new List<string>\r\n            {\r\n                ''One'',\r\n                ''II'',\r\n                ''3''\r\n            })", span="327-332", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeSortedSet()", file="JsonReader.cs"];
m9_141 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="334-334", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeSortedSet()", file="JsonReader.cs"];
m9_143 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeSortedSet()", span="325-325", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeSortedSet()", file="JsonReader.cs"];
m9_7 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonReader.cs"];
m9_186 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeSortedDictionary()", span="434-434", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeSortedDictionary()", file="JsonReader.cs"];
m9_189 [label="Assert.AreEqual(3, l.Count)", span="444-444", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeSortedDictionary()", file="JsonReader.cs"];
m9_190 [label="Assert.AreEqual(''One'', l[1])", span="445-445", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeSortedDictionary()", file="JsonReader.cs"];
m9_191 [label="Assert.AreEqual(''II'', l[2])", span="446-446", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeSortedDictionary()", file="JsonReader.cs"];
m9_192 [label="Assert.AreEqual(''3'', l[3])", span="447-447", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeSortedDictionary()", file="JsonReader.cs"];
m9_188 [label="ImmutableSortedDictionary<int, string> l = JsonConvert.DeserializeObject<ImmutableSortedDictionary<int, string>>(json)", span="442-442", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeSortedDictionary()", file="JsonReader.cs"];
m9_187 [label="string json = @''{\r\n  ''''1'''': ''''One'''',\r\n  ''''2'''': ''''II'''',\r\n  ''''3'''': ''''3''''\r\n}''", span="436-440", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeSortedDictionary()", file="JsonReader.cs"];
m9_193 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeSortedDictionary()", span="434-434", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeSortedDictionary()", file="JsonReader.cs"];
m9_110 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JsonReader.cs"];
m9_164 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeDictionary()", span="380-380", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeDictionary()", file="JsonReader.cs"];
m9_167 [label="Assert.AreEqual(3, l.Count)", span="390-390", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeDictionary()", file="JsonReader.cs"];
m9_168 [label="Assert.AreEqual(''One'', l[1])", span="391-391", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeDictionary()", file="JsonReader.cs"];
m9_169 [label="Assert.AreEqual(''II'', l[2])", span="392-392", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeDictionary()", file="JsonReader.cs"];
m9_170 [label="Assert.AreEqual(''3'', l[3])", span="393-393", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeDictionary()", file="JsonReader.cs"];
m9_166 [label="ImmutableDictionary<int, string> l = JsonConvert.DeserializeObject<ImmutableDictionary<int, string>>(json)", span="388-388", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeDictionary()", file="JsonReader.cs"];
m9_165 [label="string json = @''{\r\n  ''''1'''': ''''One'''',\r\n  ''''2'''': ''''II'''',\r\n  ''''3'''': ''''3''''\r\n}''", span="382-386", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeDictionary()", file="JsonReader.cs"];
m9_171 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeDictionary()", span="380-380", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeDictionary()", file="JsonReader.cs"];
m9_163 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonReader.cs"];
m9_99 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeHashSet()", span="270-270", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeHashSet()", file="JsonReader.cs"];
m9_103 [label="Assert.AreEqual(3, a.Count)", span="282-282", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeHashSet()", file="JsonReader.cs"];
m9_100 [label="ImmutableHashSet<string> l = ImmutableHashSet.CreateRange(new List<string>\r\n            {\r\n                ''One'',\r\n                ''II'',\r\n                ''3''\r\n            })", span="272-277", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeHashSet()", file="JsonReader.cs"];
m9_101 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="279-279", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeHashSet()", file="JsonReader.cs"];
m9_102 [label="JArray a = JArray.Parse(json)", span="281-281", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeHashSet()", file="JsonReader.cs"];
m9_104 [label="Assert.IsTrue(a.Any(t => t.DeepEquals(''One'')))", span="283-283", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeHashSet()", file="JsonReader.cs"];
m9_105 [label="Assert.IsTrue(a.Any(t => t.DeepEquals(''II'')))", span="284-284", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeHashSet()", file="JsonReader.cs"];
m9_106 [label="Assert.IsTrue(a.Any(t => t.DeepEquals(''3'')))", span="285-285", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeHashSet()", file="JsonReader.cs"];
m9_107 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeHashSet()", span="270-270", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeHashSet()", file="JsonReader.cs"];
m9_130 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeHashSetInterface()", span="306-306", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeHashSetInterface()", file="JsonReader.cs"];
m9_133 [label="Assert.AreEqual(3, l.Count())", span="316-316", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeHashSetInterface()", file="JsonReader.cs"];
m9_132 [label="IImmutableSet<string> l = JsonConvert.DeserializeObject<IImmutableSet<string>>(json)", span="314-314", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeHashSetInterface()", file="JsonReader.cs"];
m9_134 [label="Assert.IsTrue(l.Contains(''3''))", span="317-317", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeHashSetInterface()", file="JsonReader.cs"];
m9_131 [label="string json = @''[\r\n  ''''One'''',\r\n  ''''II'''',\r\n  ''''3''''\r\n]''", span="308-312", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeHashSetInterface()", file="JsonReader.cs"];
m9_135 [label="Assert.IsTrue(l.Contains(''II''))", span="318-318", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeHashSetInterface()", file="JsonReader.cs"];
m9_136 [label="Assert.IsTrue(l.Contains(''One''))", span="319-319", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeHashSetInterface()", file="JsonReader.cs"];
m9_137 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeHashSetInterface()", span="306-306", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeHashSetInterface()", file="JsonReader.cs"];
m9_8 [label="Entry Unk.CreateRange", span="", cluster="Unk.CreateRange", file="JsonReader.cs"];
m9_11 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonReader.cs"];
m9_0 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeList()", span="52-52", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeList()", file="JsonReader.cs"];
m9_3 [label="StringAssert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''II'''',\r\n  ''''3''''\r\n]'', json)", span="62-66", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeList()", file="JsonReader.cs"];
m9_4 [label="Console.WriteLine(''Serialized immutable list:'')", span="68-68", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeList()", file="JsonReader.cs"];
m9_1 [label="ImmutableList<string> l = ImmutableList.CreateRange(new List<string>\r\n            {\r\n                ''One'',\r\n                ''II'',\r\n                ''3''\r\n            })", span="54-59", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeList()", file="JsonReader.cs"];
m9_2 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="61-61", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeList()", file="JsonReader.cs"];
m9_5 [label="Console.WriteLine(json)", span="69-69", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeList()", file="JsonReader.cs"];
m9_6 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeList()", span="52-52", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeList()", file="JsonReader.cs"];
m9_180 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeSortedDictionary()", span="416-416", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeSortedDictionary()", file="JsonReader.cs"];
m9_183 [label="StringAssert.AreEqual(@''{\r\n  ''''1'''': ''''One'''',\r\n  ''''2'''': ''''II'''',\r\n  ''''3'''': ''''3''''\r\n}'', json)", span="426-430", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeSortedDictionary()", file="JsonReader.cs"];
m9_181 [label="ImmutableSortedDictionary<int, string> l = ImmutableSortedDictionary.CreateRange(new SortedDictionary<int, string>\r\n            {\r\n                { 1, ''One'' },\r\n                { 2, ''II'' },\r\n                { 3, ''3'' }\r\n            })", span="418-423", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeSortedDictionary()", file="JsonReader.cs"];
m9_182 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="425-425", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeSortedDictionary()", file="JsonReader.cs"];
m9_184 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeSortedDictionary()", span="416-416", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeSortedDictionary()", file="JsonReader.cs"];
m9_162 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonReader.cs"];
m9_69 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="JsonReader.cs"];
m9_129 [label="Entry System.Collections.Immutable.ImmutableHashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Immutable.ImmutableHashSet<T>.Contains(T)", file="JsonReader.cs"];
m9_21 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonReader.cs"];
m9_138 [label="Entry System.Collections.Immutable.IImmutableSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Immutable.IImmutableSet<T>.Contains(T)", file="JsonReader.cs"];
m9_34 [label="Entry string.Join(string, params object[])", span="0-0", cluster="string.Join(string, params object[])", file="JsonReader.cs"];
m9_9 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonReader.cs"];
m9_152 [label="Entry System.Collections.Immutable.ImmutableSortedSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Immutable.ImmutableSortedSet<T>.Contains(T)", file="JsonReader.cs"];
m9_20 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonReader.cs"];
m9_40 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeArray()", span="135-135", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeArray()", file="JsonReader.cs"];
m9_43 [label="Assert.AreEqual(3, l.Length)", span="145-145", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeArray()", file="JsonReader.cs"];
m9_44 [label="Assert.AreEqual(''One'', l[0])", span="146-146", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeArray()", file="JsonReader.cs"];
m9_45 [label="Assert.AreEqual(''II'', l[1])", span="147-147", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeArray()", file="JsonReader.cs"];
m9_46 [label="Assert.AreEqual(''3'', l[2])", span="148-148", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeArray()", file="JsonReader.cs"];
m9_42 [label="ImmutableArray<string> l = JsonConvert.DeserializeObject<ImmutableArray<string>>(json)", span="143-143", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeArray()", file="JsonReader.cs"];
m9_41 [label="string json = @''[\r\n          ''''One'''',\r\n          ''''II'''',\r\n          ''''3''''\r\n        ]''", span="137-141", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeArray()", file="JsonReader.cs"];
m9_47 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeArray()", span="135-135", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeArray()", file="JsonReader.cs"];
m9_172 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeDictionaryInterface()", span="397-397", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeDictionaryInterface()", file="JsonReader.cs"];
m9_175 [label="Assert.AreEqual(3, l.Count)", span="407-407", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeDictionaryInterface()", file="JsonReader.cs"];
m9_176 [label="Assert.AreEqual(''One'', l[1])", span="408-408", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeDictionaryInterface()", file="JsonReader.cs"];
m9_177 [label="Assert.AreEqual(''II'', l[2])", span="409-409", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeDictionaryInterface()", file="JsonReader.cs"];
m9_178 [label="Assert.AreEqual(''3'', l[3])", span="410-410", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeDictionaryInterface()", file="JsonReader.cs"];
m9_174 [label="IImmutableDictionary<int, string> l = JsonConvert.DeserializeObject<IImmutableDictionary<int, string>>(json)", span="405-405", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeDictionaryInterface()", file="JsonReader.cs"];
m9_173 [label="string json = @''{\r\n  ''''1'''': ''''One'''',\r\n  ''''2'''': ''''II'''',\r\n  ''''3'''': ''''3''''\r\n}''", span="399-403", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeDictionaryInterface()", file="JsonReader.cs"];
m9_179 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeDictionaryInterface()", span="397-397", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeDictionaryInterface()", file="JsonReader.cs"];
m9_121 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeHashSet()", span="289-289", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeHashSet()", file="JsonReader.cs"];
m9_122 [label="string json = @''[\r\n  ''''One'''',\r\n  ''''II'''',\r\n  ''''3''''\r\n]''", span="291-295", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeHashSet()", file="JsonReader.cs"];
m9_124 [label="Assert.AreEqual(3, l.Count())", span="299-299", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeHashSet()", file="JsonReader.cs"];
m9_123 [label="ImmutableHashSet<string> l = JsonConvert.DeserializeObject<ImmutableHashSet<string>>(json)", span="297-297", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeHashSet()", file="JsonReader.cs"];
m9_125 [label="Assert.IsTrue(l.Contains(''3''))", span="300-300", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeHashSet()", file="JsonReader.cs"];
m9_126 [label="Assert.IsTrue(l.Contains(''II''))", span="301-301", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeHashSet()", file="JsonReader.cs"];
m9_127 [label="Assert.IsTrue(l.Contains(''One''))", span="302-302", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeHashSet()", file="JsonReader.cs"];
m9_128 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeHashSet()", span="289-289", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeHashSet()", file="JsonReader.cs"];
m9_109 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="JsonReader.cs"];
m9_108 [label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="144-144", cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JsonReader.cs"];
m9_33 [label="Entry Unk.WriteLine", span="", cluster="Unk.WriteLine", file="JsonReader.cs"];
m9_22 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeListInterface()", span="90-90", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeListInterface()", file="JsonReader.cs"];
m9_23 [label="string json = @''[\r\n        'Volibear',\r\n        'Teemo',\r\n        'Katarina'\r\n      ]''", span="92-96", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeListInterface()", file="JsonReader.cs"];
m9_26 [label="Assert.AreEqual(3, champions.Count)", span="104-104", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeListInterface()", file="JsonReader.cs"];
m9_27 [label="Assert.AreEqual(''Volibear'', champions[0])", span="105-105", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeListInterface()", file="JsonReader.cs"];
m9_28 [label="Assert.AreEqual(''Teemo'', champions[1])", span="106-106", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeListInterface()", file="JsonReader.cs"];
m9_29 [label="Assert.AreEqual(''Katarina'', champions[2])", span="107-107", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeListInterface()", file="JsonReader.cs"];
m9_24 [label="IImmutableList<string> champions = JsonConvert.DeserializeObject<IImmutableList<string>>(json)", span="99-99", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeListInterface()", file="JsonReader.cs"];
m9_25 [label="Console.WriteLine(champions[0])", span="101-101", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeListInterface()", file="JsonReader.cs"];
m9_30 [label="Console.WriteLine(''Deserialized immutable list:'')", span="109-109", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeListInterface()", file="JsonReader.cs"];
m9_31 [label="Console.WriteLine(string.Join('', '', champions))", span="110-110", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeListInterface()", file="JsonReader.cs"];
m9_32 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeListInterface()", span="90-90", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeListInterface()", file="JsonReader.cs"];
m9_70 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeQueueInterface()", span="197-197", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeQueueInterface()", file="JsonReader.cs"];
m9_71 [label="string json = @''[\r\n  ''''One'''',\r\n  ''''II'''',\r\n  ''''3''''\r\n]''", span="199-203", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeQueueInterface()", color=green, community=0, file="JsonReader.cs"];
m9_72 [label="IImmutableQueue<string> l = JsonConvert.DeserializeObject<IImmutableQueue<string>>(json)", span="205-205", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeQueueInterface()", color=green, community=0, file="JsonReader.cs"];
m9_73 [label="Assert.AreEqual(3, l.Count())", span="207-207", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeQueueInterface()", file="JsonReader.cs"];
m9_74 [label="Assert.AreEqual(''One'', l.ElementAt(0))", span="208-208", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeQueueInterface()", file="JsonReader.cs"];
m9_75 [label="Assert.AreEqual(''II'', l.ElementAt(1))", span="209-209", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeQueueInterface()", file="JsonReader.cs"];
m9_76 [label="Assert.AreEqual(''3'', l.ElementAt(2))", span="210-210", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeQueueInterface()", file="JsonReader.cs"];
m9_77 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeQueueInterface()", span="197-197", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeQueueInterface()", file="JsonReader.cs"];
m9_78 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeStack()", span="216-216", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeStack()", file="JsonReader.cs"];
m9_79 [label="ImmutableStack<string> l = ImmutableStack.CreateRange(new List<string>\r\n            {\r\n                ''One'',\r\n                ''II'',\r\n                ''3''\r\n            })", span="218-223", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeStack()", color=green, community=0, file="JsonReader.cs"];
m9_80 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="225-225", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeStack()", file="JsonReader.cs"];
m9_81 [label="StringAssert.AreEqual(@''[\r\n  ''''3'''',\r\n  ''''II'''',\r\n  ''''One''''\r\n]'', json)", span="226-230", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeStack()", file="JsonReader.cs"];
m9_82 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeStack()", span="216-216", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeStack()", file="JsonReader.cs"];
m9_12 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeList()", span="73-73", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeList()", file="JsonReader.cs"];
m9_13 [label="string json = @''[\r\n  ''''One'''',\r\n  ''''II'''',\r\n  ''''3''''\r\n]''", span="75-79", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeList()", file="JsonReader.cs"];
m9_15 [label="Assert.AreEqual(3, l.Count)", span="83-83", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeList()", file="JsonReader.cs"];
m9_16 [label="Assert.AreEqual(''One'', l[0])", span="84-84", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeList()", file="JsonReader.cs"];
m9_17 [label="Assert.AreEqual(''II'', l[1])", span="85-85", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeList()", file="JsonReader.cs"];
m9_18 [label="Assert.AreEqual(''3'', l[2])", span="86-86", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeList()", file="JsonReader.cs"];
m9_14 [label="ImmutableList<string> l = JsonConvert.DeserializeObject<ImmutableList<string>>(json)", span="81-81", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeList()", file="JsonReader.cs"];
m9_19 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeList()", span="73-73", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeList()", file="JsonReader.cs"];
m9_10 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="327-327", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonReader.cs"];
m9_118 [label="Entry lambda expression", span="285-285", cluster="lambda expression", file="JsonReader.cs"];
m9_53 [label="JsonConvert.SerializeObject(default(ImmutableArray<int>), Formatting.Indented)", span="155-155", cluster="lambda expression", file="JsonReader.cs"];
m9_52 [label="Entry lambda expression", span="155-155", cluster="lambda expression", file="JsonReader.cs"];
m9_54 [label="Exit lambda expression", span="155-155", cluster="lambda expression", file="JsonReader.cs"];
m9_111 [label="Entry lambda expression", span="283-283", cluster="lambda expression", file="JsonReader.cs"];
m9_115 [label="Entry lambda expression", span="284-284", cluster="lambda expression", file="JsonReader.cs"];
m9_113 [label="Exit lambda expression", span="283-283", cluster="lambda expression", file="JsonReader.cs"];
m9_112 [label="t.DeepEquals(''One'')", span="283-283", cluster="lambda expression", file="JsonReader.cs"];
m9_117 [label="Exit lambda expression", span="284-284", cluster="lambda expression", file="JsonReader.cs"];
m9_116 [label="t.DeepEquals(''II'')", span="284-284", cluster="lambda expression", file="JsonReader.cs"];
m9_119 [label="t.DeepEquals(''3'')", span="285-285", cluster="lambda expression", file="JsonReader.cs"];
m9_120 [label="Exit lambda expression", span="285-285", cluster="lambda expression", file="JsonReader.cs"];
m9_185 [label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", span="0-0", cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", file="JsonReader.cs"];
m9_153 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeDictionary()", span="362-362", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeDictionary()", file="JsonReader.cs"];
m9_157 [label="Assert.AreEqual(3, a.Count)", span="373-373", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeDictionary()", file="JsonReader.cs"];
m9_158 [label="Assert.AreEqual(''One'', (string)a[''1''])", span="374-374", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeDictionary()", file="JsonReader.cs"];
m9_159 [label="Assert.AreEqual(''II'', (string)a[''2''])", span="375-375", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeDictionary()", file="JsonReader.cs"];
m9_160 [label="Assert.AreEqual(''3'', (string)a[''3''])", span="376-376", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeDictionary()", file="JsonReader.cs"];
m9_154 [label="ImmutableDictionary<int, string> l = ImmutableDictionary.CreateRange(new Dictionary<int, string>\r\n            {\r\n                { 1, ''One'' },\r\n                { 2, ''II'' },\r\n                { 3, ''3'' }\r\n            })", span="364-369", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeDictionary()", file="JsonReader.cs"];
m9_155 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="371-371", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeDictionary()", file="JsonReader.cs"];
m9_156 [label="JObject a = JObject.Parse(json)", span="372-372", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeDictionary()", file="JsonReader.cs"];
m9_161 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeDictionary()", span="362-362", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.SerializeDictionary()", file="JsonReader.cs"];
m9_68 [label="Entry Unk.Count", span="", cluster="Unk.Count", file="JsonReader.cs"];
m9_51 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="354-354", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonReader.cs"];
m9_83 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeStack()", span="234-234", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeStack()", file="JsonReader.cs"];
m9_87 [label="Assert.AreEqual(''3'', l.ElementAt(0))", span="245-245", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeStack()", file="JsonReader.cs"];
m9_88 [label="Assert.AreEqual(''II'', l.ElementAt(1))", span="246-246", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeStack()", file="JsonReader.cs"];
m9_89 [label="Assert.AreEqual(''One'', l.ElementAt(2))", span="247-247", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeStack()", file="JsonReader.cs"];
m9_86 [label="Assert.AreEqual(3, l.Count())", span="244-244", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeStack()", file="JsonReader.cs"];
m9_85 [label="ImmutableStack<string> l = JsonConvert.DeserializeObject<ImmutableStack<string>>(json)", span="242-242", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeStack()", file="JsonReader.cs"];
m9_84 [label="string json = @''[\r\n  ''''One'''',\r\n  ''''II'''',\r\n  ''''3''''\r\n]''", span="236-240", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeStack()", file="JsonReader.cs"];
m9_90 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeStack()", span="234-234", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeStack()", file="JsonReader.cs"];
m9_91 [label="Entry Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeStackInterface()", span="251-251", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeStackInterface()", file="JsonReader.cs"];
m9_95 [label="Assert.AreEqual(''3'', l.ElementAt(0))", span="262-262", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeStackInterface()", file="JsonReader.cs"];
m9_96 [label="Assert.AreEqual(''II'', l.ElementAt(1))", span="263-263", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeStackInterface()", file="JsonReader.cs"];
m9_97 [label="Assert.AreEqual(''One'', l.ElementAt(2))", span="264-264", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeStackInterface()", file="JsonReader.cs"];
m9_94 [label="Assert.AreEqual(3, l.Count())", span="261-261", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeStackInterface()", file="JsonReader.cs"];
m9_93 [label="IImmutableStack<string> l = JsonConvert.DeserializeObject<IImmutableStack<string>>(json)", span="259-259", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeStackInterface()", file="JsonReader.cs"];
m9_92 [label="string json = @''[\r\n  ''''One'''',\r\n  ''''II'''',\r\n  ''''3''''\r\n]''", span="253-257", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeStackInterface()", file="JsonReader.cs"];
m9_98 [label="Exit Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeStackInterface()", span="251-251", cluster="Newtonsoft.Json.Tests.Serialization.ImmutableCollectionsTests.DeserializeStackInterface()", file="JsonReader.cs"];
m10_6 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="245-245", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerInternalReader.cs"];
m10_7 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="910-910", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs"];
m10_8 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonSerializerInternalReader.cs"];
m10_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.MaxDepth.Example()", span="9-9", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.MaxDepth.Example()", file="JsonSerializerInternalReader.cs"];
m10_1 [label="string json = @''[\r\n        [\r\n          [\r\n            '1',\r\n            'Two',\r\n            'III'\r\n          ]\r\n        ]\r\n      ]''", span="12-20", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.MaxDepth.Example()", file="JsonSerializerInternalReader.cs"];
m10_2 [label="JsonConvert.DeserializeObject<List<IList<IList<string>>>>(json, new JsonSerializerSettings\r\n          {\r\n            MaxDepth = 2\r\n          })", span="24-27", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.MaxDepth.Example()", file="JsonSerializerInternalReader.cs"];
m10_3 [label=JsonReaderException, span="29-29", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.MaxDepth.Example()", file="JsonSerializerInternalReader.cs"];
m10_4 [label="Console.WriteLine(ex.Message)", span="31-31", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.MaxDepth.Example()", file="JsonSerializerInternalReader.cs"];
m10_5 [label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.MaxDepth.Example()", span="9-9", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.MaxDepth.Example()", file="JsonSerializerInternalReader.cs"];
m11_5 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="245-245", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerInternalWriter.cs"];
m11_0 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="236-236", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerInternalWriter.cs"];
m11_1 [label="DefaultContext = new StreamingContext()", span="238-238", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerInternalWriter.cs"];
m11_2 [label="DefaultCulture = CultureInfo.InvariantCulture", span="239-239", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerInternalWriter.cs"];
m11_3 [label="Exit Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="236-236", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerInternalWriter.cs"];
m11_6 [label="ReferenceLoopHandling = DefaultReferenceLoopHandling", span="247-247", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerInternalWriter.cs"];
m11_7 [label="MissingMemberHandling = DefaultMissingMemberHandling", span="248-248", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerInternalWriter.cs"];
m11_8 [label="ObjectCreationHandling = DefaultObjectCreationHandling", span="249-249", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerInternalWriter.cs"];
m11_9 [label="NullValueHandling = DefaultNullValueHandling", span="250-250", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerInternalWriter.cs"];
m11_10 [label="DefaultValueHandling = DefaultDefaultValueHandling", span="251-251", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerInternalWriter.cs"];
m11_11 [label="PreserveReferencesHandling = DefaultPreserveReferencesHandling", span="252-252", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerInternalWriter.cs"];
m11_12 [label="TypeNameHandling = DefaultTypeNameHandling", span="253-253", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerInternalWriter.cs"];
m11_13 [label="TypeNameAssemblyFormat = DefaultTypeNameAssemblyFormat", span="254-254", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerInternalWriter.cs"];
m11_14 [label="Context = DefaultContext", span="255-255", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerInternalWriter.cs"];
m11_15 [label="Converters = new List<JsonConverter>()", span="257-257", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerInternalWriter.cs"];
m11_16 [label="Exit Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="245-245", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerInternalWriter.cs"];
m11_4 [label="Entry System.Runtime.Serialization.StreamingContext.StreamingContext()", span="0-0", cluster="System.Runtime.Serialization.StreamingContext.StreamingContext()", file="JsonSerializerInternalWriter.cs"];
m11_17 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerInternalWriter.cs"];
m11_18 [label="Newtonsoft.Json.JsonSerializerSettings", span="", file="JsonSerializerInternalWriter.cs"];
m12_8 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="382-382", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m12_3 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="373-373", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m12_4 [label="DefaultContext = new StreamingContext()", span="375-375", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m12_5 [label="DefaultCulture = CultureInfo.InvariantCulture", span="376-376", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m12_6 [label="Exit Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="373-373", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m12_9 [label="Converters = new List<JsonConverter>()", span="384-384", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m12_10 [label="Exit Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="382-382", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m12_7 [label="Entry System.Runtime.Serialization.StreamingContext.StreamingContext()", span="0-0", cluster="System.Runtime.Serialization.StreamingContext.StreamingContext()", file="JsonSerializerSettings.cs"];
m12_0 [label="Entry lambda expression", span="221-221", cluster="lambda expression", file="JsonSerializerSettings.cs"];
m12_1 [label=value, span="227-227", cluster="lambda expression", color=green, community=1, file="JsonSerializerSettings.cs"];
m12_2 [label="Exit lambda expression", span="221-221", cluster="lambda expression", file="JsonSerializerSettings.cs"];
m12_11 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerSettings.cs"];
m12_12 [label="Newtonsoft.Json.JsonSerializerSettings", span="", file="JsonSerializerSettings.cs"];
m13_5 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerTest.cs"];
m13_7 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m13_8 [label="Entry lambda expression", span="28-32", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_9 [label="errors.Add(args.ErrorContext.Error.Message)", span="30-30", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_10 [label="args.ErrorContext.Handled = true", span="31-31", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_11 [label="Exit lambda expression", span="28-32", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_6 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonSerializerTest.cs"];
m13_12 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerTest.cs"];
m13_4 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerTest.cs"];
m13_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ErrorHandlingEvent.Example()", span="11-11", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ErrorHandlingEvent.Example()", file="JsonSerializerTest.cs"];
m13_1 [label="List<string> errors = new List<string>()", span="14-14", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ErrorHandlingEvent.Example()", file="JsonSerializerTest.cs"];
m13_2 [label="List<DateTime> c = JsonConvert.DeserializeObject<List<DateTime>>(@''[\r\n              '2009-09-09T00:00:00Z',\r\n              'I am not a date and will error!',\r\n              [\r\n                1\r\n              ],\r\n              '1977-02-20T00:00:00Z',\r\n              null,\r\n              '2000-12-01T00:00:00Z'\r\n            ]'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    Error = delegate(object sender, ErrorEventArgs args)\r\n                    {\r\n                        errors.Add(args.ErrorContext.Error.Message);\r\n                        args.ErrorContext.Handled = true;\r\n                    },\r\n                    Converters = { new IsoDateTimeConverter() }\r\n                })", span="16-34", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ErrorHandlingEvent.Example()", file="JsonSerializerTest.cs"];
m13_3 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ErrorHandlingEvent.Example()", span="11-11", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ErrorHandlingEvent.Example()", file="JsonSerializerTest.cs"];
m13_13 [label=errors, span="", file="JsonSerializerTest.cs"];
m14_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DeserializeCollection.Example()", span="9-9", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DeserializeCollection.Example()", file="JsonTextReader.cs"];
m14_1 [label="string json = @''['Starcraft','Halo','Legend of Zelda']''", span="12-12", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DeserializeCollection.Example()", file="JsonTextReader.cs"];
m14_2 [label="List<string> videogames = JsonConvert.DeserializeObject<List<string>>(json)", span="14-14", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DeserializeCollection.Example()", file="JsonTextReader.cs"];
m14_3 [label="Console.WriteLine(string.Join('', '', videogames))", span="16-16", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DeserializeCollection.Example()", file="JsonTextReader.cs"];
m14_4 [label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DeserializeCollection.Example()", span="9-9", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DeserializeCollection.Example()", file="JsonTextReader.cs"];
m14_7 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonTextReader.cs"];
m14_6 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="JsonTextReader.cs"];
m14_5 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="867-867", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonTextReader.cs"];
m15_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectTokenWithLinq.Example()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectTokenWithLinq.Example()", file="JsonTextWriterTest.cs"];
m15_1 [label="JObject o = JObject.Parse(@''{\r\n        'Stores': [\r\n          'Lambton Quay',\r\n          'Willis Street'\r\n        ],\r\n        'Manufacturers': [\r\n          {\r\n            'Name': 'Acme Co',\r\n            'Products': [\r\n              {\r\n                'Name': 'Anvil',\r\n                'Price': 50\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            'Name': 'Contoso',\r\n            'Products': [\r\n              {\r\n                'Name': 'Elbow Grease',\r\n                'Price': 99.95\r\n              },\r\n              {\r\n                'Name': 'Headlight Fluid',\r\n                'Price': 4\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }'')", span="13-42", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectTokenWithLinq.Example()", file="JsonTextWriterTest.cs"];
m15_2 [label="IList<string> storeNames = o.SelectToken(''Stores'').Select(s => (string)s).ToList()", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectTokenWithLinq.Example()", file="JsonTextWriterTest.cs"];
m15_4 [label="IList<string> firstProductNames = o[''Manufacturers''].Select(m => (string)m.SelectToken(''Products[1].Name'')).Where(n => n != null).ToList()", span="49-49", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectTokenWithLinq.Example()", file="JsonTextWriterTest.cs"];
m15_6 [label="decimal totalPrice = o[''Manufacturers''].Sum(m => (decimal)m.SelectToken(''Products[0].Price''))", span="54-54", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectTokenWithLinq.Example()", file="JsonTextWriterTest.cs"];
m15_3 [label="Console.WriteLine(string.Join('', '', storeNames))", span="46-46", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectTokenWithLinq.Example()", file="JsonTextWriterTest.cs"];
m15_5 [label="Console.WriteLine(string.Join('', '', firstProductNames))", span="51-51", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectTokenWithLinq.Example()", file="JsonTextWriterTest.cs"];
m15_7 [label="Console.WriteLine(totalPrice)", span="56-56", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectTokenWithLinq.Example()", file="JsonTextWriterTest.cs"];
m15_8 [label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectTokenWithLinq.Example()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectTokenWithLinq.Example()", file="JsonTextWriterTest.cs"];
m15_10 [label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="1684-1684", cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="JsonTextWriterTest.cs"];
m15_13 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="JsonTextWriterTest.cs"];
m15_12 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="JsonTextWriterTest.cs"];
m15_16 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", file="JsonTextWriterTest.cs"];
m15_11 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JsonTextWriterTest.cs"];
m15_9 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="325-325", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonTextWriterTest.cs"];
m15_15 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="JsonTextWriterTest.cs"];
m15_27 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m15_18 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m15_21 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m15_24 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m15_19 [label="(string)s", span="44-44", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m15_20 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m15_22 [label="(string)m.SelectToken(''Products[1].Name'')", span="49-49", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m15_23 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m15_25 [label="n != null", span="49-49", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m15_26 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m15_28 [label="(decimal)m.SelectToken(''Products[0].Price'')", span="54-54", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m15_29 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m15_17 [label="Entry System.Console.WriteLine(decimal)", span="0-0", cluster="System.Console.WriteLine(decimal)", file="JsonTextWriterTest.cs"];
m15_14 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonTextWriterTest.cs"];
m16_236 [label="Entry Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.StringListAppenderConverter()", span="1637-1637", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.StringListAppenderConverter()", file="JsonValidatingReader.cs"];
m16_594 [label="Entry Newtonsoft.Json.Tests.Serialization.GenericItem<T>.GenericItem()", span="1595-1595", cluster="Newtonsoft.Json.Tests.Serialization.GenericItem<T>.GenericItem()", file="JsonValidatingReader.cs"];
m16_145 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", span="338-338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_146 [label="return _dictionary.GetEnumerator();", span="340-340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_147 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", span="338-338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_661 [label="Entry Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="1627-1627", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_662 [label="return GetEnumerator();", span="1629-1629", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_663 [label="Exit Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="1627-1627", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_275 [label="Entry Newtonsoft.Json.Tests.TestObjects.GameObject.GameObject()", span="42-42", cluster="Newtonsoft.Json.Tests.TestObjects.GameObject.GameObject()", file="JsonValidatingReader.cs"];
m16_85 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", span="219-219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", file="JsonValidatingReader.cs"];
m16_87 [label="Assert.AreEqual(1, d.Count)", span="223-223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", file="JsonValidatingReader.cs"];
m16_89 [label="Assert.AreEqual(''test'', d[key])", span="226-226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", file="JsonValidatingReader.cs"];
m16_86 [label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(@''{''''04/28/2013 00:00:00'''':''''test''''}'')", span="221-221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", file="JsonValidatingReader.cs"];
m16_88 [label="DateTime key = DateTime.Parse(''04/28/2013 00:00:00'', CultureInfo.InvariantCulture)", span="225-225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", file="JsonValidatingReader.cs"];
m16_90 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", span="219-219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", file="JsonValidatingReader.cs"];
m16_120 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", span="276-276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonValidatingReader.cs"];
m16_122 [label="Assert.AreEqual(2, dic.Count)", span="280-280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonValidatingReader.cs"];
m16_123 [label="Assert.AreEqual(1, dic[''one''])", span="282-282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonValidatingReader.cs"];
m16_124 [label="Assert.AreEqual(2, dic[''two''])", span="283-283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonValidatingReader.cs"];
m16_121 [label="IReadOnlyDictionary<string, int> dic = JsonConvert.DeserializeObject<IReadOnlyDictionary<string, int>>(''{'one':1,'two':2}'')", span="278-278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonValidatingReader.cs"];
m16_125 [label="CustomAssert.IsInstanceOfType(typeof(ReadOnlyDictionary<string, int>), dic)", span="285-285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonValidatingReader.cs"];
m16_126 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", span="276-276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonValidatingReader.cs"];
m16_19 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JsonValidatingReader.cs"];
m16_16 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonValidatingReader.cs"];
m16_46 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.GetEnumerator()", span="151-151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_47 [label="return _values.GetEnumerator();", span="153-153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_48 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.GetEnumerator()", span="151-151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_74 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", span="200-200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", file="JsonValidatingReader.cs"];
m16_75 [label="Add(default(T))", span="203-203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", file="JsonValidatingReader.cs"];
m16_76 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", span="200-200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", file="JsonValidatingReader.cs"];
m16_25 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.GetEnumerator()", span="114-114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_26 [label="return _values.GetEnumerator();", span="116-116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_27 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.GetEnumerator()", span="114-114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_226 [label="Entry Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", file="JsonValidatingReader.cs"];
m16_189 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", span="439-439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonValidatingReader.cs"];
m16_195 [label="Assert.AreEqual(2, newValue.GenericList.Count)", span="448-448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonValidatingReader.cs"];
m16_196 [label="Assert.AreEqual(typeof(List<string>), newValue.GenericList.GetType())", span="449-449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonValidatingReader.cs"];
m16_194 [label="GenericListTestClass newValue = JsonConvert.DeserializeObject<GenericListTestClass>(json)", span="447-447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonValidatingReader.cs"];
m16_193 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="445-445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonValidatingReader.cs"];
m16_190 [label="GenericListTestClass c = new GenericListTestClass()", span="441-441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonValidatingReader.cs"];
m16_192 [label="c.GenericList.Add(''2'')", span="443-443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonValidatingReader.cs"];
m16_191 [label="c.GenericList.Add(''1'')", span="442-442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonValidatingReader.cs"];
m16_197 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", span="439-439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonValidatingReader.cs"];
m16_569 [label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonValidatingReader.cs"];
m16_636 [label="Entry System.Console.WriteLine(int)", span="0-0", cluster="System.Console.WriteLine(int)", file="JsonValidatingReader.cs"];
m16_158 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", span="371-371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonValidatingReader.cs"];
m16_159 [label="_values = values", span="373-373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonValidatingReader.cs"];
m16_160 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", span="371-371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonValidatingReader.cs"];
m16_49 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", span="156-156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_50 [label="return GetEnumerator();", span="158-158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_51 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", span="156-156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_459 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", span="1071-1071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", file="JsonValidatingReader.cs"];
m16_460 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/[1/*hi*/,/*hi*/1/*hi*/,1]/*hi*/,/*hi*/[1,1''", span="1073-1073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", file="JsonValidatingReader.cs"];
m16_461 [label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.DeserializeObject<Array3D>(json))", span="1075-1075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", file="JsonValidatingReader.cs"];
m16_462 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", span="1071-1071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", file="JsonValidatingReader.cs"];
m16_290 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", span="645-645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_293 [label="Assert.AreEqual(3, values.Count)", span="651-651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_294 [label="Assert.AreEqual(''aaa'', values[0].Value.Key)", span="652-652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_295 [label="Assert.AreEqual(2, values[0].Value.Value.Count)", span="653-653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_296 [label="Assert.AreEqual(''1'', values[0].Value.Value[0])", span="654-654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_297 [label="Assert.AreEqual(''2'', values[0].Value.Value[1])", span="655-655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_298 [label="Assert.AreEqual(null, values[1])", span="656-656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_299 [label="Assert.AreEqual(''bbb'', values[2].Value.Key)", span="657-657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_300 [label="Assert.AreEqual(2, values[2].Value.Value.Count)", span="658-658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_301 [label="Assert.AreEqual(''3'', values[2].Value.Value[0])", span="659-659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_302 [label="Assert.AreEqual(''4'', values[2].Value.Value[1])", span="660-660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_292 [label="IList<KeyValuePair<string, IList<string>>?> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>?>>(json)", span="649-649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_291 [label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, null, { ''''Value'''': [ ''''3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="647-647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_303 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", span="645-645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_92 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", span="230-230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", file="JsonValidatingReader.cs"];
m16_94 [label="Assert.AreEqual(typeof(List<object>), l.GetType())", span="234-234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", file="JsonValidatingReader.cs"];
m16_95 [label="Assert.AreEqual(1, l.Count)", span="235-235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", file="JsonValidatingReader.cs"];
m16_96 [label="Assert.AreEqual(''string!'', l[0])", span="236-236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", file="JsonValidatingReader.cs"];
m16_93 [label="IList l = JsonConvert.DeserializeObject<IList>(''['string!']'')", span="232-232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", file="JsonValidatingReader.cs"];
m16_97 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", span="230-230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", file="JsonValidatingReader.cs"];
m16_349 [label="Entry Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()", span="1571-1571", cluster="Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()", file="JsonValidatingReader.cs"];
m16_325 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", span="709-709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonValidatingReader.cs"];
m16_327 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="713-713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonValidatingReader.cs"];
m16_326 [label="PopulateReadOnlyTestClass c1 = new PopulateReadOnlyTestClass()", span="711-711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonValidatingReader.cs"];
m16_328 [label="StringAssert.AreEqual(@''{\r\n  ''''NonReadOnlyList'''': [\r\n    1\r\n  ],\r\n  ''''NonReadOnlyDictionary'''': {\r\n    ''''first'''': 2\r\n  },\r\n  ''''Array'''': [\r\n    3\r\n  ],\r\n  ''''List'''': [\r\n    4\r\n  ],\r\n  ''''Dictionary'''': {\r\n    ''''first'''': 5\r\n  },\r\n  ''''IReadOnlyCollection'''': [\r\n    6\r\n  ],\r\n  ''''ReadOnlyCollection'''': [\r\n    7\r\n  ],\r\n  ''''IReadOnlyList'''': [\r\n    8\r\n  ],\r\n  ''''IReadOnlyDictionary'''': {\r\n    ''''first'''': 9\r\n  },\r\n  ''''ReadOnlyDictionary'''': {\r\n    ''''first'''': 10\r\n  }\r\n}'', json)", span="715-746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonValidatingReader.cs"];
m16_329 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", span="709-709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonValidatingReader.cs"];
m16_359 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", span="826-826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonValidatingReader.cs"];
m16_364 [label="string json = JsonConvert.SerializeObject(aa, Formatting.Indented)", span="833-833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonValidatingReader.cs"];
m16_365 [label="StringAssert.AreEqual(@''{\r\n  ''''Before'''': ''''Before!'''',\r\n  ''''Coordinates'''': [\r\n    [\r\n      [\r\n        1.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        1.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ]\r\n  ],\r\n  ''''After'''': ''''After!''''\r\n}'', json)", span="835-888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonValidatingReader.cs"];
m16_360 [label="Array3DWithConverter aa = new Array3DWithConverter()", span="828-828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonValidatingReader.cs"];
m16_363 [label="aa.Coordinates = new[, ,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { 2, 2, 2 } } }", span="831-831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonValidatingReader.cs"];
m16_361 [label="aa.Before = ''Before!''", span="829-829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonValidatingReader.cs"];
m16_362 [label="aa.After = ''After!''", span="830-830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonValidatingReader.cs"];
m16_366 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", span="826-826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonValidatingReader.cs"];
m16_493 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", span="1121-1121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonValidatingReader.cs"];
m16_496 [label="IList<Event1[,]> values1 = new List<Event1[,]>\r\n            {\r\n                array1,\r\n                array1\r\n            }", span="1128-1132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonValidatingReader.cs"];
m16_497 [label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                Formatting = Formatting.Indented\r\n            })", span="1134-1138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonValidatingReader.cs"];
m16_498 [label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$id'''': ''''3'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          },\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          }\r\n        ]\r\n      ]\r\n    },\r\n    {\r\n      ''''$ref'''': ''''2''''\r\n    }\r\n  ]\r\n}'', json)", span="1140-1171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonValidatingReader.cs"];
m16_495 [label="Event1[,] array1 = new[,] { { e1, e1 }, { e1, e1 } }", span="1127-1127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonValidatingReader.cs"];
m16_494 [label="Event1 e1 = new Event1\r\n            {\r\n                EventName = ''EventName!''\r\n            }", span="1123-1126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonValidatingReader.cs"];
m16_499 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", span="1121-1121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonValidatingReader.cs"];
m16_144 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonValidatingReader.cs"];
m16_24 [label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="JsonValidatingReader.cs"];
m16_99 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", span="241-241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonValidatingReader.cs"];
m16_101 [label="Assert.AreEqual(3, list.Count)", span="245-245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonValidatingReader.cs"];
m16_102 [label="Assert.AreEqual(1, list[0])", span="246-246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonValidatingReader.cs"];
m16_103 [label="Assert.AreEqual(2, list[1])", span="247-247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonValidatingReader.cs"];
m16_104 [label="Assert.AreEqual(3, list[2])", span="248-248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonValidatingReader.cs"];
m16_100 [label="IReadOnlyList<int> list = JsonConvert.DeserializeObject<IReadOnlyList<int>>(''[1,2,3]'')", span="243-243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonValidatingReader.cs"];
m16_105 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", span="241-241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonValidatingReader.cs"];
m16_577 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="686-686", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonValidatingReader.cs"];
m16_542 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", span="1321-1321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonValidatingReader.cs"];
m16_551 [label="Assert.AreEqual(''The Idiot in Next To Me'', newName.personsName)", span="1347-1347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonValidatingReader.cs"];
m16_552 [label="Assert.AreEqual(2, newName.pNumbers.Count)", span="1350-1350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonValidatingReader.cs"];
m16_553 [label="Assert.AreEqual(''555-1212'', newName.pNumbers[0].phoneNumber)", span="1351-1351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonValidatingReader.cs"];
m16_554 [label="Assert.AreEqual(''444-1212'', newName.pNumbers[1].phoneNumber)", span="1352-1352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonValidatingReader.cs"];
m16_550 [label="Name newName = JsonConvert.DeserializeObject<Name>(json)", span="1345-1345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonValidatingReader.cs"];
m16_548 [label="string json = JsonConvert.SerializeObject(name, Formatting.Indented)", span="1331-1331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonValidatingReader.cs"];
m16_549 [label="StringAssert.AreEqual(@''{\r\n  ''''personsName'''': ''''The Idiot in Next To Me'''',\r\n  ''''pNumbers'''': [\r\n    {\r\n      ''''phoneNumber'''': ''''555-1212''''\r\n    },\r\n    {\r\n      ''''phoneNumber'''': ''''444-1212''''\r\n    }\r\n  ]\r\n}'', json)", span="1333-1343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonValidatingReader.cs"];
m16_543 [label="Name name = new Name(''The Idiot in Next To Me'')", span="1323-1323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonValidatingReader.cs"];
m16_547 [label="name.pNumbers.Add(p2)", span="1329-1329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonValidatingReader.cs"];
m16_546 [label="name.pNumbers.Add(p1)", span="1328-1328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonValidatingReader.cs"];
m16_544 [label="PhoneNumber p1 = new PhoneNumber(''555-1212'')", span="1325-1325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonValidatingReader.cs"];
m16_545 [label="PhoneNumber p2 = new PhoneNumber(''444-1212'')", span="1326-1326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonValidatingReader.cs"];
m16_555 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", span="1321-1321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonValidatingReader.cs"];
m16_324 [label="Entry System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonValidatingReader.cs"];
m16_482 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", span="1103-1103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_491 [label="Assert.AreEqual(json, after)", span="1117-1117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_485 [label="Assert.AreEqual(''Before!'', aa.Before)", span="1109-1109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_486 [label="Assert.AreEqual(''After!'', aa.After)", span="1110-1110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_487 [label="Assert.AreEqual(1, aa.Coordinates.GetLength(0))", span="1111-1111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_488 [label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="1112-1112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_489 [label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="1113-1113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_490 [label="string after = JsonConvert.SerializeObject(aa)", span="1115-1115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_483 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[]],''''After'''':''''After!''''}''", span="1105-1105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_484 [label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1107-1107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_492 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", span="1103-1103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_535 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", span="1309-1309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonValidatingReader.cs"];
m16_538 [label="Assert.AreEqual(4, o.Count)", span="1314-1314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonValidatingReader.cs"];
m16_539 [label="Assert.AreEqual(3, ((JArray)o[2]).Count)", span="1315-1315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonValidatingReader.cs"];
m16_540 [label="Assert.AreEqual(0, ((JObject)o[3]).Count)", span="1316-1316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonValidatingReader.cs"];
m16_537 [label="ArrayList o = JsonConvert.DeserializeObject<ArrayList>(jsonText)", span="1312-1312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonValidatingReader.cs"];
m16_536 [label="string jsonText = @''[3, ''''somestring'''',[1,2,3],{}]''", span="1311-1311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonValidatingReader.cs"];
m16_541 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", span="1309-1309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonValidatingReader.cs"];
m16_67 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonValidatingReader.cs"];
m16_173 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", span="413-413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonValidatingReader.cs"];
m16_177 [label="Dictionary<int, object> d1 = new Dictionary<int, object>()", span="419-419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", color=green, community=0, file="JsonValidatingReader.cs"];
m16_176 [label="Assert.AreEqual(@''''''host\\user'''''', serialized)", span="417-417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonValidatingReader.cs"];
m16_178 [label="d1.Add(5, s)", span="420-420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonValidatingReader.cs"];
m16_179 [label="Assert.AreEqual(@''{''''5'''':''''host\\user''''}'', JsonConvert.SerializeObject(d1))", span="421-421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonValidatingReader.cs"];
m16_175 [label="string serialized = JsonConvert.SerializeObject(s)", span="416-416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonValidatingReader.cs"];
m16_174 [label="string s = @''host\user''", span="415-415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonValidatingReader.cs"];
m16_180 [label="Dictionary<string, object> d2 = new Dictionary<string, object>()", span="423-423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonValidatingReader.cs"];
m16_182 [label="Assert.AreEqual(@''{''''host\\user'''':5}'', JsonConvert.SerializeObject(d2))", span="425-425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonValidatingReader.cs"];
m16_181 [label="d2.Add(s, 5)", span="424-424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonValidatingReader.cs"];
m16_183 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", span="413-413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonValidatingReader.cs"];
m16_406 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", span="996-996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonValidatingReader.cs"];
m16_417 [label="Assert.AreEqual(json, after)", span="1012-1012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonValidatingReader.cs"];
m16_409 [label="Assert.AreEqual(''Before!'', aa.Before)", span="1002-1002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonValidatingReader.cs"];
m16_410 [label="Assert.AreEqual(''After!'', aa.After)", span="1003-1003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonValidatingReader.cs"];
m16_411 [label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="1004-1004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonValidatingReader.cs"];
m16_412 [label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="1005-1005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonValidatingReader.cs"];
m16_413 [label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="1006-1006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonValidatingReader.cs"];
m16_414 [label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="1007-1007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonValidatingReader.cs"];
m16_415 [label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="1008-1008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonValidatingReader.cs"];
m16_416 [label="string after = JsonConvert.SerializeObject(aa)", span="1010-1010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonValidatingReader.cs"];
m16_407 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="998-998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonValidatingReader.cs"];
m16_408 [label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1000-1000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonValidatingReader.cs"];
m16_418 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", span="996-996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonValidatingReader.cs"];
m16_40 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonValidatingReader.cs"];
m16_568 [label="Entry Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", file="JsonValidatingReader.cs"];
m16_198 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", span="453-453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonValidatingReader.cs"];
m16_203 [label="Assert.AreEqual(@''[{''''Key'''':''''key1'''',''''Value'''':''''value1''''},{''''Key'''':''''key2'''',''''Value'''':''''value2''''}]'', json)", span="461-461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonValidatingReader.cs"];
m16_205 [label="Assert.AreEqual(2, result.Count)", span="464-464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonValidatingReader.cs"];
m16_206 [label="Assert.AreEqual(''key1'', result[0].Key)", span="465-465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonValidatingReader.cs"];
m16_207 [label="Assert.AreEqual(''value1'', result[0].Value)", span="466-466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonValidatingReader.cs"];
m16_208 [label="Assert.AreEqual(''key2'', result[1].Key)", span="467-467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonValidatingReader.cs"];
m16_209 [label="Assert.AreEqual(''value2'', result[1].Value)", span="468-468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonValidatingReader.cs"];
m16_202 [label="string json = JsonConvert.SerializeObject(list)", span="459-459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonValidatingReader.cs"];
m16_204 [label="List<KeyValuePair<string, string>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(json)", span="463-463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonValidatingReader.cs"];
m16_199 [label="List<KeyValuePair<string, string>> list = new List<KeyValuePair<string, string>>()", span="455-455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonValidatingReader.cs"];
m16_201 [label="list.Add(new KeyValuePair<string, string>(''key2'', ''value2''))", span="457-457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonValidatingReader.cs"];
m16_200 [label="list.Add(new KeyValuePair<string, string>(''key1'', ''value1''))", span="456-456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonValidatingReader.cs"];
m16_210 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", span="453-453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonValidatingReader.cs"];
m16_598 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", span="1405-1405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonValidatingReader.cs"];
m16_606 [label="Assert.AreEqual(articles1.Count, articles2.Count)", span="1418-1418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonValidatingReader.cs"];
m16_607 [label="Assert.AreEqual(articles1[0].Name, articles2[0].Name)", span="1419-1419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonValidatingReader.cs"];
m16_604 [label="string jsonText = JsonConvert.SerializeObject(articles1)", span="1414-1414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonValidatingReader.cs"];
m16_601 [label="ArticleCollection articles1 = new ArticleCollection()", span="1410-1410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonValidatingReader.cs"];
m16_605 [label="ArticleCollection articles2 = JsonConvert.DeserializeObject<ArticleCollection>(jsonText)", span="1416-1416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonValidatingReader.cs"];
m16_603 [label="articles1.Add(a2)", span="1412-1412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonValidatingReader.cs"];
m16_600 [label="Article a2 = new Article(''a2'')", span="1408-1408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonValidatingReader.cs"];
m16_602 [label="articles1.Add(a1)", span="1411-1411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonValidatingReader.cs"];
m16_599 [label="Article a1 = new Article(''a1'')", span="1407-1407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonValidatingReader.cs"];
m16_608 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", span="1405-1405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonValidatingReader.cs"];
m16_609 [label="Entry Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", file="JsonValidatingReader.cs"];
m16_254 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", span="569-569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonValidatingReader.cs"];
m16_255 [label="IDictionary<string, int?> v1 = new Dictionary<string, int?>\r\n            {\r\n                { ''First'', 1 },\r\n                { ''Second'', null },\r\n                { ''Third'', 3 }\r\n            }", span="571-576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonValidatingReader.cs"];
m16_259 [label="Assert.AreEqual(3, v2.Count)", span="587-587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonValidatingReader.cs"];
m16_260 [label="Assert.AreEqual(1, v2[''First''])", span="588-588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonValidatingReader.cs"];
m16_261 [label="Assert.AreEqual(null, v2[''Second''])", span="589-589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonValidatingReader.cs"];
m16_262 [label="Assert.AreEqual(3, v2[''Third''])", span="590-590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonValidatingReader.cs"];
m16_256 [label="string json = JsonConvert.SerializeObject(v1, Formatting.Indented)", span="578-578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonValidatingReader.cs"];
m16_258 [label="IDictionary<string, int?> v2 = JsonConvert.DeserializeObject<IDictionary<string, int?>>(json)", span="586-586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonValidatingReader.cs"];
m16_257 [label="StringAssert.AreEqual(@''{\r\n  ''''First'''': 1,\r\n  ''''Second'''': null,\r\n  ''''Third'''': 3\r\n}'', json)", span="580-584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonValidatingReader.cs"];
m16_263 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", span="569-569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonValidatingReader.cs"];
m16_237 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="938-938", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonValidatingReader.cs"];
m16_426 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", span="1024-1024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="JsonValidatingReader.cs"];
m16_427 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],{}]],''''After'''':''''After!''''}''", span="1026-1026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="JsonValidatingReader.cs"];
m16_428 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Array3D>(json), ''Unexpected token when deserializing multidimensional array: StartObject. Path 'Coordinates[3][1]', line 1, position 99.'')", span="1028-1028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="JsonValidatingReader.cs"];
m16_429 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", span="1024-1024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="JsonValidatingReader.cs"];
m16_618 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", span="1437-1437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonValidatingReader.cs"];
m16_624 [label="string json = JsonConvert.SerializeObject(products, Formatting.Indented)", span="1456-1456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonValidatingReader.cs"];
m16_621 [label="List<Product> products = new List<Product>()", span="1452-1452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonValidatingReader.cs"];
m16_619 [label="Product p1 = new Product\r\n            {\r\n                Name = ''Product 1'',\r\n                Price = 99.95m,\r\n                ExpiryDate = new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc),\r\n            }", span="1439-1444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonValidatingReader.cs"];
m16_620 [label="Product p2 = new Product\r\n            {\r\n                Name = ''Product 2'',\r\n                Price = 12.50m,\r\n                ExpiryDate = new DateTime(2009, 7, 31, 0, 0, 0, DateTimeKind.Utc),\r\n            }", span="1445-1450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonValidatingReader.cs"];
m16_625 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Name'''': ''''Product 1'''',\r\n    ''''ExpiryDate'''': ''''2000-12-29T00:00:00Z'''',\r\n    ''''Price'''': 99.95,\r\n    ''''Sizes'''': null\r\n  },\r\n  {\r\n    ''''Name'''': ''''Product 2'''',\r\n    ''''ExpiryDate'''': ''''2009-07-31T00:00:00Z'''',\r\n    ''''Price'''': 12.50,\r\n    ''''Sizes'''': null\r\n  }\r\n]'', json)", span="1472-1485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonValidatingReader.cs"];
m16_623 [label="products.Add(p2)", span="1454-1454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonValidatingReader.cs"];
m16_622 [label="products.Add(p1)", span="1453-1453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonValidatingReader.cs"];
m16_626 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", span="1437-1437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonValidatingReader.cs"];
m16_512 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="717-717", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonValidatingReader.cs"];
m16_596 [label="Entry Newtonsoft.Json.Tests.Serialization.NonGenericItem.NonGenericItem()", span="1600-1600", cluster="Newtonsoft.Json.Tests.Serialization.NonGenericItem.NonGenericItem()", file="JsonValidatingReader.cs"];
m16_185 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonValidatingReader.cs"];
m16_433 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", span="1032-1032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="JsonValidatingReader.cs"];
m16_434 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="1034-1034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="JsonValidatingReader.cs"];
m16_435 [label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array3D>(json), ''Cannot deserialize non-cubical array as multidimensional array.'')", span="1036-1036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="JsonValidatingReader.cs"];
m16_436 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", span="1032-1032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="JsonValidatingReader.cs"];
m16_29 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", span="119-119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_30 [label="return GetEnumerator();", span="121-121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_31 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", span="119-119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_250 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", span="562-562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="JsonValidatingReader.cs"];
m16_252 [label="Assert.AreEqual(3, list.Count)", span="565-565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="JsonValidatingReader.cs"];
m16_251 [label="IList list = JsonConvert.DeserializeObject<IList>(''['1', 'two', 'III']'')", span="564-564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="JsonValidatingReader.cs"];
m16_253 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", span="562-562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="JsonValidatingReader.cs"];
m16_62 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", span="182-182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", file="JsonValidatingReader.cs"];
m16_65 [label="Assert.AreEqual(2, list.Count)", span="191-191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", file="JsonValidatingReader.cs"];
m16_64 [label="var list = JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]'', new JsonSerializerSettings\r\n            {\r\n                ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n            })", span="186-189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", file="JsonValidatingReader.cs"];
m16_63 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]''), ''Unable to find a constructor to use for type Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+PrivateDefaultCtorList`1[System.Int32]. Path '', line 1, position 1.'')", span="184-184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", file="JsonValidatingReader.cs"];
m16_66 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", span="182-182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", file="JsonValidatingReader.cs"];
m16_52 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", span="163-163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", file="JsonValidatingReader.cs"];
m16_53 [label="string json = @''[\r\n  ''''One'''',\r\n  ''''II'''',\r\n  ''''3''''\r\n]''", span="165-169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", file="JsonValidatingReader.cs"];
m16_54 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<EnumerableClassFailure<string>>(json), ''Cannot create and populate list type Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+EnumerableClassFailure`1[System.String]. Path '', line 1, position 1.'')", span="171-171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", file="JsonValidatingReader.cs"];
m16_55 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", span="163-163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", file="JsonValidatingReader.cs"];
m16_341 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", span="800-800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonValidatingReader.cs"];
m16_347 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="809-809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonValidatingReader.cs"];
m16_346 [label="string json = JsonConvert.SerializeObject(aa)", span="807-807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonValidatingReader.cs"];
m16_342 [label="Array2D aa = new Array2D()", span="802-802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonValidatingReader.cs"];
m16_345 [label="aa.Coordinates = new[,] { { 1, 1 }, { 1, 2 }, { 2, 1 }, { 2, 2 } }", span="805-805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonValidatingReader.cs"];
m16_343 [label="aa.Before = ''Before!''", span="803-803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonValidatingReader.cs"];
m16_344 [label="aa.After = ''After!''", span="804-804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonValidatingReader.cs"];
m16_348 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", span="800-800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonValidatingReader.cs"];
m16_151 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", span="350-350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonValidatingReader.cs"];
m16_152 [label="IDictionary<string, int> d = new Dictionary<string, int>\r\n            {\r\n                { ''one'', 1 },\r\n                { ''two'', 2 }\r\n            }", span="352-356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonValidatingReader.cs"];
m16_153 [label="CustomReadOnlyDictionary<string, int> dic = new CustomReadOnlyDictionary<string, int>(d)", span="358-358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonValidatingReader.cs"];
m16_154 [label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented)", span="360-360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonValidatingReader.cs"];
m16_155 [label="StringAssert.AreEqual(@''{\r\n  ''''one'''': 1,\r\n  ''''two'''': 2\r\n}'', json)", span="361-364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonValidatingReader.cs"];
m16_156 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", span="350-350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonValidatingReader.cs"];
m16_137 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="308-308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonValidatingReader.cs"];
m16_138 [label="return _dictionary.ContainsKey(key);", span="310-310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonValidatingReader.cs"];
m16_139 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="308-308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonValidatingReader.cs"];
m16_350 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", span="813-813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonValidatingReader.cs"];
m16_356 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}'', json)", span="822-822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonValidatingReader.cs"];
m16_355 [label="string json = JsonConvert.SerializeObject(aa)", span="820-820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonValidatingReader.cs"];
m16_351 [label="Array3D aa = new Array3D()", span="815-815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonValidatingReader.cs"];
m16_354 [label="aa.Coordinates = new[, ,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { 2, 2, 2 } } }", span="818-818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonValidatingReader.cs"];
m16_352 [label="aa.Before = ''Before!''", span="816-816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonValidatingReader.cs"];
m16_353 [label="aa.After = ''After!''", span="817-817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonValidatingReader.cs"];
m16_357 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", span="813-813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonValidatingReader.cs"];
m16_41 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonValidatingReader.cs"];
m16_113 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", span="264-264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonValidatingReader.cs"];
m16_115 [label="Assert.AreEqual(3, list.Count)", span="268-268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonValidatingReader.cs"];
m16_116 [label="Assert.AreEqual(1, list[0])", span="270-270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonValidatingReader.cs"];
m16_117 [label="Assert.AreEqual(2, list[1])", span="271-271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonValidatingReader.cs"];
m16_118 [label="Assert.AreEqual(3, list[2])", span="272-272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonValidatingReader.cs"];
m16_114 [label="ReadOnlyCollection<int> list = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(''[1,2,3]'')", span="266-266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonValidatingReader.cs"];
m16_119 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", span="264-264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonValidatingReader.cs"];
m16_161 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", span="381-381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_162 [label="return _values.GetEnumerator();", span="383-383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_163 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", span="381-381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_21 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", span="109-109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", file="JsonValidatingReader.cs"];
m16_22 [label="_values = new List<T>(values)", span="111-111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", file="JsonValidatingReader.cs"];
m16_23 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", span="109-109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", file="JsonValidatingReader.cs"];
m16_572 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="817-817", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonValidatingReader.cs"];
m16_245 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", span="554-554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonValidatingReader.cs"];
m16_247 [label="Assert.AreEqual(1, dictionary.Count)", span="557-557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonValidatingReader.cs"];
m16_248 [label="Assert.AreEqual(''value!'', dictionary[''name''])", span="558-558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonValidatingReader.cs"];
m16_246 [label="IDictionary dictionary = JsonConvert.DeserializeObject<IDictionary>(''{'name':'value!'}'')", span="556-556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonValidatingReader.cs"];
m16_249 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", span="554-554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonValidatingReader.cs"];
m16_91 [label="Entry System.DateTime.Parse(string, System.IFormatProvider)", span="0-0", cluster="System.DateTime.Parse(string, System.IFormatProvider)", file="JsonValidatingReader.cs"];
m16_575 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonValidatingReader.cs"];
m16_578 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", span="1381-1381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonValidatingReader.cs"];
m16_583 [label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="1389-1389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonValidatingReader.cs"];
m16_587 [label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="1395-1395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonValidatingReader.cs"];
m16_591 [label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="1401-1401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonValidatingReader.cs"];
m16_582 [label="json = JsonConvert.SerializeObject(new { selectList = foo1 })", span="1388-1388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonValidatingReader.cs"];
m16_586 [label="json = JsonConvert.SerializeObject(new { selectList = foo2 })", span="1394-1394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonValidatingReader.cs"];
m16_590 [label="json = JsonConvert.SerializeObject(new { selectList = foo3 })", span="1400-1400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonValidatingReader.cs"];
m16_584 [label="GenericClass<NonGenericItem, string> foo2 = new GenericClass<NonGenericItem, string>()", span="1391-1391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonValidatingReader.cs"];
m16_588 [label="NonGenericClass foo3 = new NonGenericClass()", span="1397-1397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonValidatingReader.cs"];
m16_580 [label="GenericClass<GenericItem<string>, string> foo1 = new GenericClass<GenericItem<string>, string>()", span="1385-1385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonValidatingReader.cs"];
m16_581 [label="foo1.Items.Add(new GenericItem<string> { Value = ''Hello'' })", span="1386-1386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonValidatingReader.cs"];
m16_585 [label="foo2.Items.Add(new NonGenericItem { Value = ''Hello'' })", span="1392-1392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonValidatingReader.cs"];
m16_589 [label="foo3.Items.Add(new NonGenericItem { Value = ''Hello'' })", span="1398-1398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonValidatingReader.cs"];
m16_579 [label="string json", span="1383-1383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonValidatingReader.cs"];
m16_592 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", span="1381-1381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonValidatingReader.cs"];
m16_68 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonValidatingReader.cs"];
m16_522 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", span="1290-1290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_525 [label="Assert.AreEqual(''Router'', o.Action)", span="1296-1296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_526 [label="Assert.AreEqual(''Navigate'', o.Method)", span="1297-1297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_527 [label="Assert.AreEqual(3, o.Data.Length)", span="1298-1298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_528 [label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1299-1299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_530 [label="Assert.AreEqual(4, ((JArray)o.Data[1]).Count)", span="1301-1301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_532 [label="Assert.AreEqual(1, ((JObject)o.Data[2]).Count)", span="1303-1303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_533 [label="Assert.AreEqual(1, (int)((JObject)o.Data[2])[''one''])", span="1304-1304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_524 [label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1294-1294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_529 [label="CustomAssert.IsInstanceOfType(typeof(JArray), o.Data[1])", span="1300-1300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_531 [label="CustomAssert.IsInstanceOfType(typeof(JObject), o.Data[2])", span="1302-1302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_523 [label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',[''''id'''', 1, ''''teststring'''', ''''test''''],{''''one'''':1}],''''type'''':''''rpc'''',''''tid'''':2}''", span="1292-1292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_534 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", span="1290-1290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_500 [label="Entry Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", file="JsonValidatingReader.cs"];
m16_235 [label="Entry Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", file="JsonValidatingReader.cs"];
m16_501 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonValidatingReader.cs"];
m16_32 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", span="126-126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonValidatingReader.cs"];
m16_35 [label="Assert.AreEqual(3, result.Count())", span="136-136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonValidatingReader.cs"];
m16_36 [label="Assert.AreEqual(1, result.ElementAt(0))", span="137-137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonValidatingReader.cs"];
m16_37 [label="Assert.AreEqual(2, result.ElementAt(1))", span="138-138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonValidatingReader.cs"];
m16_38 [label="Assert.AreEqual(null, result.ElementAt(2))", span="139-139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonValidatingReader.cs"];
m16_34 [label="var result = JsonConvert.DeserializeObject<EnumerableClass<int?>>(json)", span="134-134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonValidatingReader.cs"];
m16_33 [label="string json = @''[\r\n  1,\r\n  2,\r\n  null\r\n]''", span="128-132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonValidatingReader.cs"];
m16_39 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", span="126-126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonValidatingReader.cs"];
m16_380 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", span="961-961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonValidatingReader.cs"];
m16_390 [label="Assert.AreEqual(json, after)", span="976-976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonValidatingReader.cs"];
m16_383 [label="Assert.AreEqual(''Before!'', aa.Before)", span="967-967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonValidatingReader.cs"];
m16_384 [label="Assert.AreEqual(''After!'', aa.After)", span="968-968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonValidatingReader.cs"];
m16_385 [label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="969-969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonValidatingReader.cs"];
m16_386 [label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="970-970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonValidatingReader.cs"];
m16_387 [label="Assert.AreEqual(1, aa.Coordinates[0, 0])", span="971-971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonValidatingReader.cs"];
m16_388 [label="Assert.AreEqual(2, aa.Coordinates[1, 1])", span="972-972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonValidatingReader.cs"];
m16_389 [label="string after = JsonConvert.SerializeObject(aa)", span="974-974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonValidatingReader.cs"];
m16_381 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="963-963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonValidatingReader.cs"];
m16_382 [label="Array2D aa = JsonConvert.DeserializeObject<Array2D>(json)", span="965-965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonValidatingReader.cs"];
m16_391 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", span="961-961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonValidatingReader.cs"];
m16_164 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", span="386-386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_165 [label="return _values.GetEnumerator();", span="388-388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_166 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", span="386-386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_106 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", span="252-252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonValidatingReader.cs"];
m16_108 [label="Assert.AreEqual(3, list.Count)", span="256-256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonValidatingReader.cs"];
m16_109 [label="Assert.AreEqual(1, list.ElementAt(0))", span="258-258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonValidatingReader.cs"];
m16_110 [label="Assert.AreEqual(2, list.ElementAt(1))", span="259-259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonValidatingReader.cs"];
m16_111 [label="Assert.AreEqual(3, list.ElementAt(2))", span="260-260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonValidatingReader.cs"];
m16_107 [label="IReadOnlyCollection<int> list = JsonConvert.DeserializeObject<IReadOnlyCollection<int>>(''[1,2,3]'')", span="254-254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonValidatingReader.cs"];
m16_112 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", span="252-252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonValidatingReader.cs"];
m16_678 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365", cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonValidatingReader.cs"];
m16_649 [label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.List<T>.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_227 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", span="524-524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonValidatingReader.cs"];
m16_231 [label="Assert.AreEqual(2, p.ReleaseCountries.Count)", span="534-534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonValidatingReader.cs"];
m16_232 [label="Assert.AreEqual(''Existing'', p.ReleaseCountries[0])", span="535-535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonValidatingReader.cs"];
m16_233 [label="Assert.AreEqual(''Appended'', p.ReleaseCountries[1])", span="536-536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonValidatingReader.cs"];
m16_228 [label="Movie p = new Movie()", span="526-526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonValidatingReader.cs"];
m16_230 [label="JsonConvert.PopulateObject(''{'ReleaseCountries':['Appended']}'', p, new JsonSerializerSettings\r\n            {\r\n                Converters = new List<JsonConverter> { new StringListAppenderConverter() }\r\n            })", span="529-532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonValidatingReader.cs"];
m16_229 [label="p.ReleaseCountries = new List<string> { ''Existing'' }", span="527-527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonValidatingReader.cs"];
m16_234 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", span="524-524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonValidatingReader.cs"];
m16_238 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", span="540-540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonValidatingReader.cs"];
m16_242 [label="Assert.AreEqual(''Existing,Appended'', p.Name)", span="550-550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonValidatingReader.cs"];
m16_239 [label="Movie p = new Movie()", span="542-542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonValidatingReader.cs"];
m16_241 [label="JsonConvert.PopulateObject(''{'Name':'Appended'}'', p, new JsonSerializerSettings\r\n            {\r\n                Converters = new List<JsonConverter> { new StringAppenderConverter() }\r\n            })", span="545-548", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonValidatingReader.cs"];
m16_240 [label="p.Name = ''Existing,''", span="543-543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonValidatingReader.cs"];
m16_243 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", span="540-540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonValidatingReader.cs"];
m16_502 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", span="1175-1175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonValidatingReader.cs"];
m16_509 [label="Assert.AreEqual(2, values2.Count)", span="1271-1271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonValidatingReader.cs"];
m16_510 [label="Assert.AreEqual(''EventName!'', values2[0][0, 0].EventName)", span="1272-1272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonValidatingReader.cs"];
m16_508 [label="IList<Event1[,]> values2 = (IList<Event1[,]>)JsonConvert.DeserializeObject(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All\r\n            })", span="1266-1269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonValidatingReader.cs"];
m16_506 [label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                Formatting = Formatting.Indented\r\n            })", span="1188-1192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonValidatingReader.cs"];
m16_507 [label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': ''''System.Collections.Generic.List`1[[Newtonsoft.Json.Tests.TestObjects.Event1[,], Newtonsoft.Json.Tests]], mscorlib'''',\r\n  ''''$values'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1[,], Newtonsoft.Json.Tests'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ]\r\n      ]\r\n    },\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1[,], Newtonsoft.Json.Tests'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ]\r\n      ]\r\n    }\r\n  ]\r\n}'', json)", span="1194-1264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonValidatingReader.cs"];
m16_505 [label="IList<Event1[,]> values1 = new List<Event1[,]>\r\n            {\r\n                array1,\r\n                array1\r\n            }", span="1182-1186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonValidatingReader.cs"];
m16_503 [label="Event1 e1 = new Event1\r\n            {\r\n                EventName = ''EventName!''\r\n            }", span="1177-1180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonValidatingReader.cs"];
m16_504 [label="Event1[,] array1 = new[,] { { e1, e1 }, { e1, e1 } }", span="1181-1181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonValidatingReader.cs"];
m16_511 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", span="1175-1175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonValidatingReader.cs"];
m16_573 [label="Entry System.IO.StringWriter.GetStringBuilder()", span="0-0", cluster="System.IO.StringWriter.GetStringBuilder()", file="JsonValidatingReader.cs"];
m16_570 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonValidatingReader.cs"];
m16_558 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", span="1356-1356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonValidatingReader.cs"];
m16_566 [label="CollectionAssert.AreEqual(collection, collectionNew)", span="1377-1377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonValidatingReader.cs"];
m16_564 [label="Assert.AreEqual(@''[{''''Name'''':''''Test1'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''Test2'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''Test3'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}]'',\r\n                sw.GetStringBuilder().ToString())", span="1372-1373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonValidatingReader.cs"];
m16_559 [label="ProductCollection collection = new ProductCollection()\r\n            {\r\n                new Product() { Name = ''Test1'' },\r\n                new Product() { Name = ''Test2'' },\r\n                new Product() { Name = ''Test3'' }\r\n            }", span="1358-1363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonValidatingReader.cs"];
m16_565 [label="ProductCollection collectionNew = (ProductCollection)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(sw.GetStringBuilder().ToString())), typeof(ProductCollection))", span="1375-1375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonValidatingReader.cs"];
m16_563 [label="jsonSerializer.Serialize(sw, collection)", span="1370-1370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonValidatingReader.cs"];
m16_562 [label="StringWriter sw = new StringWriter()", span="1368-1368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonValidatingReader.cs"];
m16_560 [label="JsonSerializer jsonSerializer = new JsonSerializer()", span="1365-1365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonValidatingReader.cs"];
m16_561 [label="jsonSerializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1366-1366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonValidatingReader.cs"];
m16_567 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", span="1356-1356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonValidatingReader.cs"];
m16_148 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="343-343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_149 [label="return _dictionary.GetEnumerator();", span="345-345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_150 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="343-343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_440 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", span="1040-1040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_446 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}'', json)", span="1049-1049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_445 [label="string json = JsonConvert.SerializeObject(aa)", span="1047-1047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_441 [label="Array3D aa = new Array3D()", span="1042-1042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_444 [label="aa.Coordinates = new int[0, 0, 0]", span="1045-1045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_442 [label="aa.Before = ''Before!''", span="1043-1043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_443 [label="aa.After = ''After!''", span="1044-1044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_447 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", span="1040-1040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_77 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonValidatingReader.cs"];
m16_368 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", span="892-892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonValidatingReader.cs"];
m16_371 [label="Assert.AreEqual(''Before!'', aa.Before)", span="951-951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonValidatingReader.cs"];
m16_372 [label="Assert.AreEqual(''After!'', aa.After)", span="952-952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonValidatingReader.cs"];
m16_373 [label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="953-953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonValidatingReader.cs"];
m16_374 [label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="954-954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonValidatingReader.cs"];
m16_375 [label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="955-955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonValidatingReader.cs"];
m16_376 [label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="956-956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonValidatingReader.cs"];
m16_377 [label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="957-957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonValidatingReader.cs"];
m16_370 [label="Array3DWithConverter aa = JsonConvert.DeserializeObject<Array3DWithConverter>(json)", span="949-949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonValidatingReader.cs"];
m16_369 [label="string json = @''{\r\n  ''''Before'''': ''''Before!'''',\r\n  ''''Coordinates'''': [\r\n    [\r\n      [\r\n        1.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        1.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ]\r\n  ],\r\n  ''''After'''': ''''After!''''\r\n}''", span="894-947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonValidatingReader.cs"];
m16_378 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", span="892-892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonValidatingReader.cs"];
m16_244 [label="Entry Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.StringAppenderConverter()", span="1668-1668", cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.StringAppenderConverter()", file="JsonValidatingReader.cs"];
m16_637 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonValidatingReader.cs"];
m16_157 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonValidatingReader.cs"];
m16_20 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonValidatingReader.cs"];
m16_264 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", span="595-595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonValidatingReader.cs"];
m16_265 [label="IDictionary<string, TestObjects.Component> components = new Dictionary<string, TestObjects.Component>\r\n            {\r\n                { ''Key!'', new TestObjects.Component() }\r\n            }", span="597-600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonValidatingReader.cs"];
m16_270 [label="Assert.AreEqual(1, newObject.Components.Count)", span="620-620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonValidatingReader.cs"];
m16_271 [label="Assert.AreEqual(''Id!'', newObject.Id)", span="621-621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonValidatingReader.cs"];
m16_272 [label="Assert.AreEqual(''Name!'', newObject.Name)", span="622-622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonValidatingReader.cs"];
m16_266 [label="GameObject go = new GameObject\r\n            {\r\n                Components = new ConcurrentDictionary<string, TestObjects.Component>(components),\r\n                Id = ''Id!'',\r\n                Name = ''Name!''\r\n            }", span="601-606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonValidatingReader.cs"];
m16_269 [label="GameObject newObject = JsonConvert.DeserializeObject<GameObject>(originalJson)", span="618-618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonValidatingReader.cs"];
m16_267 [label="string originalJson = JsonConvert.SerializeObject(go, Formatting.Indented)", span="608-608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonValidatingReader.cs"];
m16_268 [label="StringAssert.AreEqual(@''{\r\n  ''''Components'''': {\r\n    ''''Key!'''': {}\r\n  },\r\n  ''''Id'''': ''''Id!'''',\r\n  ''''Name'''': ''''Name!''''\r\n}'', originalJson)", span="610-616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonValidatingReader.cs"];
m16_273 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", span="595-595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonValidatingReader.cs"];
m16_274 [label="Entry Newtonsoft.Json.Tests.TestObjects.Component.Component()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.Component.Component()", file="JsonValidatingReader.cs"];
m16_134 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="303-303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonValidatingReader.cs"];
m16_135 [label="_dictionary = dictionary", span="305-305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonValidatingReader.cs"];
m16_136 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="303-303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonValidatingReader.cs"];
m16_311 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", span="689-689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonValidatingReader.cs"];
m16_313 [label="NonReadOnlyDictionary = new Dictionary<string, int> { { ''first'', 2 } }", span="692-692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonValidatingReader.cs"];
m16_316 [label="Dictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 5 } })", span="697-697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonValidatingReader.cs"];
m16_320 [label="IReadOnlyDictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 9 } })", span="703-703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonValidatingReader.cs"];
m16_321 [label="ReadOnlyDictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 10 } })", span="704-704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonValidatingReader.cs"];
m16_312 [label="NonReadOnlyList = new List<int> { 1 }", span="691-691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonValidatingReader.cs"];
m16_314 [label="Array = new[] { 3 }", span="694-694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonValidatingReader.cs"];
m16_315 [label="List = new ReadOnlyCollection<int>(new[] { 4 })", span="696-696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonValidatingReader.cs"];
m16_317 [label="IReadOnlyCollection = new ReadOnlyCollection<int>(new[] { 6 })", span="699-699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonValidatingReader.cs"];
m16_319 [label="IReadOnlyList = new ReadOnlyCollection<int>(new[] { 8 })", span="701-701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonValidatingReader.cs"];
m16_318 [label="ReadOnlyCollection = new ReadOnlyCollection<int>(new[] { 7 })", span="700-700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonValidatingReader.cs"];
m16_322 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", span="689-689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonValidatingReader.cs"];
m16_610 [label="Entry Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", file="JsonValidatingReader.cs"];
m16_399 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", span="988-988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", file="JsonValidatingReader.cs"];
m16_400 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1],[2,1],[2,2]],''''After'''':''''After!''''}''", span="990-990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", file="JsonValidatingReader.cs"];
m16_401 [label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array2D>(json), ''Cannot deserialize non-cubical array as multidimensional array.'')", span="992-992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", file="JsonValidatingReader.cs"];
m16_402 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", span="988-988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", file="JsonValidatingReader.cs"];
m16_211 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", span="472-472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonValidatingReader.cs"];
m16_219 [label="Assert.AreEqual(2, result.Count)", span="516-516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonValidatingReader.cs"];
m16_220 [label="Assert.AreEqual(''key1'', result[0].Key)", span="517-517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonValidatingReader.cs"];
m16_221 [label="Assert.AreEqual(1, result[0].Value.HourlyWage)", span="518-518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonValidatingReader.cs"];
m16_222 [label="Assert.AreEqual(''key2'', result[1].Key)", span="519-519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonValidatingReader.cs"];
m16_223 [label="Assert.AreEqual(2, result[1].Value.HourlyWage)", span="520-520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonValidatingReader.cs"];
m16_218 [label="List<KeyValuePair<string, WagePerson>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, WagePerson>>>(json)", span="515-515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonValidatingReader.cs"];
m16_216 [label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="492-492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonValidatingReader.cs"];
m16_217 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Key'''': ''''key1'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 1.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''2000-12-01T23:01:01Z'''',\r\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\r\n    }\r\n  },\r\n  {\r\n    ''''Key'''': ''''key2'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 2.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''2000-12-01T23:01:01Z'''',\r\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\r\n    }\r\n  }\r\n]'', json)", span="494-513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonValidatingReader.cs"];
m16_213 [label="List<KeyValuePair<string, WagePerson>> list = new List<KeyValuePair<string, WagePerson>>()", span="476-476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonValidatingReader.cs"];
m16_215 [label="list.Add(new KeyValuePair<string, WagePerson>(''key2'', new WagePerson\r\n            {\r\n                BirthDate = dateTime,\r\n                Department = ''Department2'',\r\n                LastModified = dateTime,\r\n                HourlyWage = 2\r\n            }))", span="484-490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonValidatingReader.cs"];
m16_212 [label="DateTime dateTime = new DateTime(2000, 12, 1, 23, 1, 1, DateTimeKind.Utc)", span="474-474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonValidatingReader.cs"];
m16_214 [label="list.Add(new KeyValuePair<string, WagePerson>(''key1'', new WagePerson\r\n            {\r\n                BirthDate = dateTime,\r\n                Department = ''Department1'',\r\n                LastModified = dateTime,\r\n                HourlyWage = 1\r\n            }))", span="477-483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonValidatingReader.cs"];
m16_224 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", span="472-472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonValidatingReader.cs"];
m16_78 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", span="208-208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="JsonValidatingReader.cs"];
m16_80 [label="Assert.AreEqual(3, list.Count)", span="212-212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="JsonValidatingReader.cs"];
m16_81 [label="Assert.AreEqual(1, list[0])", span="213-213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="JsonValidatingReader.cs"];
m16_82 [label="Assert.AreEqual(2, list[1])", span="214-214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="JsonValidatingReader.cs"];
m16_83 [label="Assert.AreEqual(0, list[2])", span="215-215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="JsonValidatingReader.cs"];
m16_79 [label="var list = JsonConvert.DeserializeObject<PrivateDefaultCtorWithIEnumerableCtorList<int>>(''[1,2]'')", span="210-210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="JsonValidatingReader.cs"];
m16_84 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", span="208-208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="JsonValidatingReader.cs"];
m16_627 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", span="1489-1489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonValidatingReader.cs"];
m16_633 [label="Assert.AreEqual(2, products.Count)", span="1516-1516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonValidatingReader.cs"];
m16_634 [label="Assert.AreEqual(''Product 1'', products[0].Name)", span="1517-1517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonValidatingReader.cs"];
m16_629 [label="List<Product> products = JsonConvert.DeserializeObject<List<Product>>(json)", span="1506-1506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonValidatingReader.cs"];
m16_632 [label="Console.WriteLine(p1.Name)", span="1513-1513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonValidatingReader.cs"];
m16_628 [label="string json = @''[\r\n        {\r\n          ''''Name'''': ''''Product 1'''',\r\n          ''''ExpiryDate'''': ''''\/Date(978048000000)\/'''',\r\n          ''''Price'''': 99.95,\r\n          ''''Sizes'''': null\r\n        },\r\n        {\r\n          ''''Name'''': ''''Product 2'''',\r\n          ''''ExpiryDate'''': ''''\/Date(1248998400000)\/'''',\r\n          ''''Price'''': 12.50,\r\n          ''''Sizes'''': null\r\n        }\r\n      ]''", span="1491-1504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonValidatingReader.cs"];
m16_630 [label="Console.WriteLine(products.Count)", span="1508-1508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonValidatingReader.cs"];
m16_631 [label="Product p1 = products[0]", span="1511-1511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonValidatingReader.cs"];
m16_635 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", span="1489-1489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonValidatingReader.cs"];
m16_140 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonValidatingReader.cs"];
m16_595 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonValidatingReader.cs"];
m16_638 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", span="1522-1522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonValidatingReader.cs"];
m16_640 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1532-1532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonValidatingReader.cs"];
m16_639 [label="ReadOnlyIntegerList l = new ReadOnlyIntegerList(new List<int>\r\n            {\r\n                1,\r\n                2,\r\n                3,\r\n                int.MaxValue\r\n            })", span="1524-1530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonValidatingReader.cs"];
m16_641 [label="StringAssert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3,\r\n  2147483647\r\n]'', json)", span="1534-1539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonValidatingReader.cs"];
m16_642 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", span="1522-1522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonValidatingReader.cs"];
m16_448 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", span="1053-1053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_457 [label="Assert.AreEqual(json, after)", span="1067-1067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_451 [label="Assert.AreEqual(''Before!'', aa.Before)", span="1059-1059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_452 [label="Assert.AreEqual(''After!'', aa.After)", span="1060-1060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_453 [label="Assert.AreEqual(0, aa.Coordinates.GetLength(0))", span="1061-1061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_454 [label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="1062-1062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_455 [label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="1063-1063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_456 [label="string after = JsonConvert.SerializeObject(aa)", span="1065-1065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_449 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}''", span="1055-1055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_450 [label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1057-1057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_458 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", span="1053-1053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonValidatingReader.cs"];
m16_141 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="318-318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonValidatingReader.cs"];
m16_142 [label="return _dictionary.TryGetValue(key, out value);", span="320-320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonValidatingReader.cs"];
m16_143 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="318-318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonValidatingReader.cs"];
m16_276 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)", file="JsonValidatingReader.cs"];
m16_419 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", span="1016-1016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="JsonValidatingReader.cs"];
m16_420 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="1018-1018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="JsonValidatingReader.cs"];
m16_421 [label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array3D>(json), ''Cannot deserialize non-cubical array as multidimensional array.'')", span="1020-1020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="JsonValidatingReader.cs"];
m16_422 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", span="1016-1016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="JsonValidatingReader.cs"];
m16_167 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", span="393-393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonValidatingReader.cs"];
m16_170 [label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="404-404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonValidatingReader.cs"];
m16_168 [label="IList<int> l = new List<int>\r\n            {\r\n                1,\r\n                2,\r\n                3\r\n            }", span="395-400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonValidatingReader.cs"];
m16_171 [label="StringAssert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', json)", span="405-409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonValidatingReader.cs"];
m16_169 [label="CustomReadOnlyCollection<int> list = new CustomReadOnlyCollection<int>(l)", span="402-402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonValidatingReader.cs"];
m16_172 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", span="393-393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonValidatingReader.cs"];
m16_330 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", span="750-750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonValidatingReader.cs"];
m16_333 [label="Assert.AreEqual(1, c2.NonReadOnlyDictionary.Count)", span="787-787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonValidatingReader.cs"];
m16_334 [label="Assert.AreEqual(12, c2.NonReadOnlyDictionary[''first''])", span="788-788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonValidatingReader.cs"];
m16_335 [label="Assert.AreEqual(2, c2.NonReadOnlyList.Count)", span="790-790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonValidatingReader.cs"];
m16_336 [label="Assert.AreEqual(1, c2.NonReadOnlyList[0])", span="791-791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonValidatingReader.cs"];
m16_337 [label="Assert.AreEqual(11, c2.NonReadOnlyList[1])", span="792-792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonValidatingReader.cs"];
m16_338 [label="Assert.AreEqual(1, c2.Array.Count)", span="794-794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonValidatingReader.cs"];
m16_339 [label="Assert.AreEqual(13, c2.Array[0])", span="795-795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonValidatingReader.cs"];
m16_332 [label="var c2 = JsonConvert.DeserializeObject<PopulateReadOnlyTestClass>(json)", span="785-785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonValidatingReader.cs"];
m16_331 [label="string json = @''{\r\n  ''''NonReadOnlyList'''': [\r\n    11\r\n  ],\r\n  ''''NonReadOnlyDictionary'''': {\r\n    ''''first'''': 12\r\n  },\r\n  ''''Array'''': [\r\n    13\r\n  ],\r\n  ''''List'''': [\r\n    14\r\n  ],\r\n  ''''Dictionary'''': {\r\n    ''''first'''': 15\r\n  },\r\n  ''''IReadOnlyCollection'''': [\r\n    16\r\n  ],\r\n  ''''ReadOnlyCollection'''': [\r\n    17\r\n  ],\r\n  ''''IReadOnlyList'''': [\r\n    18\r\n  ],\r\n  ''''IReadOnlyDictionary'''': {\r\n    ''''first'''': 19\r\n  },\r\n  ''''ReadOnlyDictionary'''': {\r\n    ''''first'''': 20\r\n  }\r\n}''", span="752-783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonValidatingReader.cs"];
m16_340 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", span="750-750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonValidatingReader.cs"];
m16_15 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="324-324", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonValidatingReader.cs"];
m16_98 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JsonValidatingReader.cs"];
m16_470 [label="Entry lambda expression", span="1083-1083", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_58 [label="JsonConvert.DeserializeObject<EnumerableClassFailure<string>>(json)", span="171-171", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_70 [label="JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]'')", span="184-184", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_309 [label="JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="668-668", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_397 [label="JsonConvert.DeserializeObject<Array2D>(json)", span="984-984", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_404 [label="JsonConvert.DeserializeObject<Array2D>(json)", span="992-992", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_424 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="1020-1020", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_431 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="1028-1028", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_438 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="1036-1036", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_464 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="1075-1075", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_471 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="1083-1083", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_69 [label="Entry lambda expression", span="184-184", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_57 [label="Entry lambda expression", span="171-171", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_59 [label="Exit lambda expression", span="171-171", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_71 [label="Exit lambda expression", span="184-184", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_308 [label="Entry lambda expression", span="668-668", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_310 [label="Exit lambda expression", span="668-668", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_396 [label="Entry lambda expression", span="984-984", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_398 [label="Exit lambda expression", span="984-984", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_403 [label="Entry lambda expression", span="992-992", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_405 [label="Exit lambda expression", span="992-992", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_423 [label="Entry lambda expression", span="1020-1020", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_425 [label="Exit lambda expression", span="1020-1020", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_430 [label="Entry lambda expression", span="1028-1028", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_432 [label="Exit lambda expression", span="1028-1028", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_437 [label="Entry lambda expression", span="1036-1036", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_439 [label="Exit lambda expression", span="1036-1036", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_463 [label="Entry lambda expression", span="1075-1075", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_465 [label="Exit lambda expression", span="1075-1075", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_472 [label="Exit lambda expression", span="1083-1083", cluster="lambda expression", file="JsonValidatingReader.cs"];
m16_643 [label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", span="1549-1549", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", file="JsonValidatingReader.cs"];
m16_644 [label="_list = l", span="1551-1551", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", file="JsonValidatingReader.cs"];
m16_645 [label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", span="1549-1549", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", file="JsonValidatingReader.cs"];
m16_392 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", span="980-980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", file="JsonValidatingReader.cs"];
m16_393 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2,3],[2,1],[2,2]],''''After'''':''''After!''''}''", span="982-982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", file="JsonValidatingReader.cs"];
m16_394 [label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array2D>(json), ''Cannot deserialize non-cubical array as multidimensional array.'')", span="984-984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", file="JsonValidatingReader.cs"];
m16_395 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", span="980-980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", file="JsonValidatingReader.cs"];
m16_367 [label="Entry Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()", span="1585-1585", cluster="Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()", file="JsonValidatingReader.cs"];
m16_28 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_127 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="294-294", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonValidatingReader.cs"];
m16_576 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonValidatingReader.cs"];
m16_128 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", span="289-289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonValidatingReader.cs"];
m16_130 [label="Assert.AreEqual(2, dic.Count)", span="293-293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonValidatingReader.cs"];
m16_131 [label="Assert.AreEqual(1, dic[''one''])", span="295-295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonValidatingReader.cs"];
m16_132 [label="Assert.AreEqual(2, dic[''two''])", span="296-296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonValidatingReader.cs"];
m16_129 [label="ReadOnlyDictionary<string, int> dic = JsonConvert.DeserializeObject<ReadOnlyDictionary<string, int>>(''{'one':1,'two':2}'')", span="291-291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonValidatingReader.cs"];
m16_133 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", span="289-289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonValidatingReader.cs"];
m16_379 [label="Entry System.Array.GetLength(int)", span="0-0", cluster="System.Array.GetLength(int)", file="JsonValidatingReader.cs"];
m16_557 [label="Entry Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", file="JsonValidatingReader.cs"];
m16_45 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonValidatingReader.cs"];
m16_186 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", span="432-432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", file="JsonValidatingReader.cs"];
m16_187 [label="GenericList = new List<string>()", span="434-434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", file="JsonValidatingReader.cs"];
m16_188 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", span="432-432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", file="JsonValidatingReader.cs"];
m16_277 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", span="627-627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_280 [label="Assert.AreEqual(2, values.Count)", span="633-633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_281 [label="Assert.AreEqual(''aaa'', values[0].Key)", span="634-634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_282 [label="Assert.AreEqual(2, values[0].Value.Count)", span="635-635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_283 [label="Assert.AreEqual(''1'', values[0].Value[0])", span="636-636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_284 [label="Assert.AreEqual(''2'', values[0].Value[1])", span="637-637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_285 [label="Assert.AreEqual(''bbb'', values[1].Key)", span="638-638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_286 [label="Assert.AreEqual(2, values[1].Value.Count)", span="639-639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_287 [label="Assert.AreEqual(''3'', values[1].Value[0])", span="640-640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_288 [label="Assert.AreEqual(''4'', values[1].Value[1])", span="641-641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_279 [label="IList<KeyValuePair<string, IList<string>>> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="631-631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_278 [label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, { ''''Value'''': [ ''''3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="629-629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_289 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", span="627-627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_571 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonValidatingReader.cs"];
m16_597 [label="Entry Newtonsoft.Json.Tests.Serialization.NonGenericClass.NonGenericClass()", span="1633-1633", cluster="Newtonsoft.Json.Tests.Serialization.NonGenericClass.NonGenericClass()", file="JsonValidatingReader.cs"];
m16_0 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", span="60-60", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonValidatingReader.cs"];
m16_7 [label="Assert.AreEqual(''foobar'', myOtherResult[0, 1])", span="96-96", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonValidatingReader.cs"];
m16_8 [label="Assert.AreEqual(true, myOtherResult[1, 0])", span="98-98", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonValidatingReader.cs"];
m16_9 [label="Assert.AreEqual(0.4, myOtherResult[1, 1])", span="99-99", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonValidatingReader.cs"];
m16_10 [label="Assert.AreEqual(0.05, myOtherResult[2, 0])", span="101-101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonValidatingReader.cs"];
m16_11 [label="Assert.AreEqual(6, myOtherResult[2, 1])", span="102-102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonValidatingReader.cs"];
m16_5 [label="object[,] myOtherResult = JsonConvert.DeserializeObject<object[,]>(myOtherArrayAsString)", span="94-94", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonValidatingReader.cs"];
m16_6 [label="Assert.IsTrue(JToken.DeepEquals(o, (JToken)myOtherResult[0, 0]))", span="95-95", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonValidatingReader.cs"];
m16_2 [label="string myOtherArrayAsString = JsonConvert.SerializeObject(myOtherArray, Formatting.Indented)", span="69-69", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonValidatingReader.cs"];
m16_4 [label="JObject o = JObject.Parse(@''{\r\n              ''''Key'''': ''''my value'''',\r\n              ''''Value'''': 0.8\r\n            }'')", span="89-92", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonValidatingReader.cs"];
m16_1 [label="object[,] myOtherArray =\r\n            {\r\n                { new KeyValuePair<string, double>(''my value'', 0.8), ''foobar'' },\r\n                { true, 0.4d },\r\n                { 0.05f, 6 }\r\n            }", span="62-67", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonValidatingReader.cs"];
m16_3 [label="StringAssert.AreEqual(@''[\r\n  [\r\n    {\r\n      ''''Key'''': ''''my value'''',\r\n      ''''Value'''': 0.8\r\n    },\r\n    ''''foobar''''\r\n  ],\r\n  [\r\n    true,\r\n    0.4\r\n  ],\r\n  [\r\n    0.05,\r\n    6\r\n  ]\r\n]'', myOtherArrayAsString)", span="71-87", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonValidatingReader.cs"];
m16_12 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", span="60-60", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonValidatingReader.cs"];
m16_323 [label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0", cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonValidatingReader.cs"];
m16_304 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", span="664-664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_305 [label="string json = @''[ null ]''", span="666-666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_306 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json); }, ''Cannot convert null value to KeyValuePair. Path '[0]', line 1, position 6.'')", span="668-668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_307 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", span="664-664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonValidatingReader.cs"];
m16_42 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", span="146-146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", file="JsonValidatingReader.cs"];
m16_43 [label="_values = new List<T>()", span="148-148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", file="JsonValidatingReader.cs"];
m16_44 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", span="146-146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", file="JsonValidatingReader.cs"];
m16_513 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", span="1276-1276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_516 [label="Assert.AreEqual(''Router'', o.Action)", span="1282-1282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_517 [label="Assert.AreEqual(''Navigate'', o.Method)", span="1283-1283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_518 [label="Assert.AreEqual(2, o.Data.Length)", span="1284-1284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_519 [label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1285-1285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_520 [label="Assert.AreEqual(null, o.Data[1])", span="1286-1286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_515 [label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1280-1280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_514 [label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',null],''''type'''':''''rpc'''',''''tid'''':2}''", span="1278-1278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_521 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", span="1276-1276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonValidatingReader.cs"];
m16_13 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonValidatingReader.cs"];
m16_14 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonValidatingReader.cs"];
m16_184 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonValidatingReader.cs"];
m16_17 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonValidatingReader.cs"];
m16_473 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", span="1087-1087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonValidatingReader.cs"];
m16_480 [label="Assert.AreEqual(json, after)", span="1099-1099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonValidatingReader.cs"];
m16_476 [label="Assert.AreEqual(''Before!'', aa.Before)", span="1093-1093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonValidatingReader.cs"];
m16_477 [label="Assert.AreEqual(''After!'', aa.After)", span="1094-1094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonValidatingReader.cs"];
m16_478 [label="Assert.AreEqual(null, aa.Coordinates)", span="1095-1095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonValidatingReader.cs"];
m16_479 [label="string after = JsonConvert.SerializeObject(aa)", span="1097-1097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonValidatingReader.cs"];
m16_474 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':null,''''After'''':''''After!''''}''", span="1089-1089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonValidatingReader.cs"];
m16_475 [label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1091-1091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonValidatingReader.cs"];
m16_481 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", span="1087-1087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonValidatingReader.cs"];
m16_668 [label="Entry Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1644-1644", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonValidatingReader.cs"];
m16_674 [label="newStrings.Add(s)", span="1654-1654", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonValidatingReader.cs"];
m16_673 [label="string s = (string)reader.Value", span="1653-1653", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonValidatingReader.cs"];
m16_670 [label="List<string> newStrings = new List<string>(existingStrings)", span="1647-1647", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonValidatingReader.cs"];
m16_675 [label="reader.Read()", span="1656-1656", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonValidatingReader.cs"];
m16_672 [label="reader.TokenType != JsonToken.EndArray", span="1651-1651", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonValidatingReader.cs"];
m16_669 [label="List<string> existingStrings = (List<string>)existingValue", span="1646-1646", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonValidatingReader.cs"];
m16_671 [label="reader.Read()", span="1649-1649", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonValidatingReader.cs"];
m16_676 [label="return newStrings;", span="1659-1659", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonValidatingReader.cs"];
m16_677 [label="Exit Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1644-1644", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonValidatingReader.cs"];
m16_225 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonValidatingReader.cs"];
m16_358 [label="Entry Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", span="1578-1578", cluster="Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", file="JsonValidatingReader.cs"];
m16_466 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", span="1079-1079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", file="JsonValidatingReader.cs"];
m16_467 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/''", span="1081-1081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", file="JsonValidatingReader.cs"];
m16_468 [label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.DeserializeObject<Array3D>(json))", span="1083-1083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", file="JsonValidatingReader.cs"];
m16_469 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", span="1079-1079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", file="JsonValidatingReader.cs"];
m16_655 [label="Entry Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", span="1614-1614", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_656 [label="Items != null", span="1616-1616", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_657 [label=Items, span="1618-1618", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_659 [label="yield break;", span="1624-1624", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_658 [label="yield return item;", span="1620-1620", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_660 [label="Exit Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", span="1614-1614", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_574 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="JsonValidatingReader.cs"];
m16_556 [label="Entry Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", file="JsonValidatingReader.cs"];
m16_650 [label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", span="1564-1564", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_651 [label="return GetEnumerator();", span="1566-1566", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_652 [label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", span="1564-1564", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_56 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="351-351", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonValidatingReader.cs"];
m16_593 [label="Entry Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", span="1609-1609", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", file="JsonValidatingReader.cs"];
m16_653 [label="Items = new List<T>()", span="1611-1611", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", file="JsonValidatingReader.cs"];
m16_654 [label="Exit Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", span="1609-1609", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", file="JsonValidatingReader.cs"];
m16_611 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", span="1423-1423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonValidatingReader.cs"];
m16_616 [label="CollectionAssert.AreEqual(r1, r2)", span="1433-1433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonValidatingReader.cs"];
m16_614 [label="Assert.AreEqual(''[0,1,2,3,4]'', jsonText)", span="1429-1429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonValidatingReader.cs"];
m16_613 [label="string jsonText = JsonConvert.SerializeObject(r1)", span="1427-1427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonValidatingReader.cs"];
m16_612 [label="ReadOnlyCollection<int> r1 = new ReadOnlyCollection<int>(new int[] { 0, 1, 2, 3, 4 })", span="1425-1425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonValidatingReader.cs"];
m16_615 [label="ReadOnlyCollection<int> r2 = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(jsonText)", span="1431-1431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonValidatingReader.cs"];
m16_617 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", span="1423-1423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonValidatingReader.cs"];
m16_646 [label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", span="1559-1559", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_647 [label="return _list.GetEnumerator();", span="1561-1561", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_648 [label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", span="1559-1559", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", file="JsonValidatingReader.cs"];
m16_18 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="154-154", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonValidatingReader.cs"];
m16_701 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", span="", file="JsonValidatingReader.cs"];
m16_697 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", span="", file="JsonValidatingReader.cs"];
m16_694 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>", span="", file="JsonValidatingReader.cs"];
m16_699 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass", span="", file="JsonValidatingReader.cs"];
m16_710 [label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", span="", file="JsonValidatingReader.cs"];
m16_695 [label=json, span="", file="JsonValidatingReader.cs"];
m16_700 [label=json, span="", file="JsonValidatingReader.cs"];
m16_702 [label=json, span="", file="JsonValidatingReader.cs"];
m16_703 [label=json, span="", file="JsonValidatingReader.cs"];
m16_704 [label=json, span="", file="JsonValidatingReader.cs"];
m16_705 [label=json, span="", file="JsonValidatingReader.cs"];
m16_706 [label=json, span="", file="JsonValidatingReader.cs"];
m16_707 [label=json, span="", file="JsonValidatingReader.cs"];
m16_708 [label=json, span="", file="JsonValidatingReader.cs"];
m16_696 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>", span="", file="JsonValidatingReader.cs"];
m16_709 [label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList", span="", file="JsonValidatingReader.cs"];
m16_698 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>", span="", file="JsonValidatingReader.cs"];
m16_693 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>", span="", file="JsonValidatingReader.cs"];
m17_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Linq.ParseJsonArray.Example()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ParseJsonArray.Example()", file="JsonWriter.cs"];
m17_1 [label="string json = @''[\r\n        'Small',\r\n        'Medium',\r\n        'Large'\r\n      ]''", span="13-17", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ParseJsonArray.Example()", file="JsonWriter.cs"];
m17_2 [label="JArray a = JArray.Parse(json)", span="19-19", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ParseJsonArray.Example()", file="JsonWriter.cs"];
m17_3 [label="Console.WriteLine(a.ToString())", span="21-21", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ParseJsonArray.Example()", file="JsonWriter.cs"];
m17_4 [label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Linq.ParseJsonArray.Example()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.ParseJsonArray.Example()", file="JsonWriter.cs"];
m17_6 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="389-389", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonWriter.cs"];
m17_7 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonWriter.cs"];
m17_5 [label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="143-143", cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JsonWriter.cs"];
m18_116 [label="Entry Unk.>", span="", cluster="Unk.>", file="JTokenReader.cs"];
m18_14 [label="Entry System.Console.ReadKey()", span="0-0", cluster="System.Console.ReadKey()", file="JTokenReader.cs"];
m18_0 [label="Entry Newtonsoft.Json.TestConsole.Program.Main(string[])", span="41-41", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JTokenReader.cs"];
m18_1 [label="Console.WriteLine(''Json.NET Test Console'')", span="43-43", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JTokenReader.cs"];
m18_2 [label="string version = FileVersionInfo.GetVersionInfo(typeof(JsonConvert).Assembly.Location).FileVersion", span="45-45", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JTokenReader.cs"];
m18_3 [label="Console.WriteLine(''Json.NET Version: '' + version)", span="46-46", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JTokenReader.cs"];
m18_4 [label="Console.ReadKey()", span="47-47", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JTokenReader.cs"];
m18_5 [label="Console.WriteLine(''Doing stuff...'')", span="49-49", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JTokenReader.cs"];
m18_6 [label="LargeArrayJTokenPathPerformance()", span="55-55", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JTokenReader.cs"];
m18_7 [label="Console.WriteLine()", span="70-70", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JTokenReader.cs"];
m18_8 [label="Console.WriteLine(''Finished'')", span="71-71", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JTokenReader.cs"];
m18_9 [label="Console.WriteLine(''Press any key to exit'')", span="72-72", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JTokenReader.cs"];
m18_10 [label="Console.ReadKey()", span="73-73", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JTokenReader.cs"];
m18_11 [label="Exit Newtonsoft.Json.TestConsole.Program.Main(string[])", span="41-41", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="JTokenReader.cs"];
m18_34 [label="Entry Newtonsoft.Json.TestConsole.Program.DeserializeJson()", span="98-98", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="JTokenReader.cs"];
m18_35 [label="PerformanceTests t = new PerformanceTests()", span="100-100", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="JTokenReader.cs"];
m18_36 [label="t.Iterations = 50000", span="101-101", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="JTokenReader.cs"];
m18_37 [label="t.Deserialize()", span="102-102", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="JTokenReader.cs"];
m18_38 [label="Exit Newtonsoft.Json.TestConsole.Program.DeserializeJson()", span="98-98", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="JTokenReader.cs"];
m18_115 [label="Entry JavaScriptSerializer.cstr", span="", cluster="JavaScriptSerializer.cstr", file="JTokenReader.cs"];
m18_45 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", span="194-194", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", file="JTokenReader.cs"];
m18_39 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.PerformanceTests()", span="66-66", cluster="Newtonsoft.Json.Tests.PerformanceTests.PerformanceTests()", file="JTokenReader.cs"];
m18_92 [label="Entry System.IO.File.OpenText(string)", span="0-0", cluster="System.IO.File.OpenText(string)", file="JTokenReader.cs"];
m18_69 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JTokenReader.cs"];
m18_33 [label="Entry Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="345-345", cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs"];
m18_46 [label="Entry Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", span="111-111", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JTokenReader.cs"];
m18_47 [label="var json = System.IO.File.ReadAllText(''large.json'')", span="113-113", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JTokenReader.cs"];
m18_48 [label="IList<PerformanceTests.RootObject> o = JsonConvert.DeserializeObject<IList<PerformanceTests.RootObject>>(json)", span="115-115", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JTokenReader.cs"];
m18_49 [label="Console.WriteLine(''Press any key to start serialize'')", span="117-117", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JTokenReader.cs"];
m18_59 [label="serializer.Serialize(file, o)", span="130-130", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JTokenReader.cs"];
m18_50 [label="Console.ReadKey()", span="118-118", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JTokenReader.cs"];
m18_51 [label="Console.WriteLine(''Serializing...'')", span="119-119", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JTokenReader.cs"];
m18_52 [label="Stopwatch sw = new Stopwatch()", span="121-121", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JTokenReader.cs"];
m18_53 [label="sw.Start()", span="122-122", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JTokenReader.cs"];
m18_61 [label="sw.Stop()", span="134-134", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JTokenReader.cs"];
m18_62 [label="Console.WriteLine(''Finished. Total seconds: '' + sw.Elapsed.TotalSeconds)", span="136-136", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JTokenReader.cs"];
m18_54 [label="int i = 0", span="124-124", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JTokenReader.cs"];
m18_55 [label="i < 10", span="124-124", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JTokenReader.cs"];
m18_60 [label="i++", span="124-124", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JTokenReader.cs"];
m18_56 [label="StreamWriter file = System.IO.File.CreateText(''largewrite.json'')", span="126-126", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JTokenReader.cs"];
m18_57 [label="JsonSerializer serializer = new JsonSerializer()", span="128-128", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JTokenReader.cs"];
m18_58 [label="serializer.Formatting = Formatting.Indented", span="129-129", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JTokenReader.cs"];
m18_63 [label="Exit Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", span="111-111", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="JTokenReader.cs"];
m18_95 [label="Entry Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", span="170-170", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JTokenReader.cs"];
m18_96 [label="string json = System.IO.File.ReadAllText(''large.json'')", span="172-172", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JTokenReader.cs"];
m18_97 [label="JavaScriptSerializer s = new JavaScriptSerializer()", span="174-174", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JTokenReader.cs"];
m18_99 [label="s.Deserialize<IList<PerformanceTests.RootObject>>(json)", span="176-176", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JTokenReader.cs"];
m18_98 [label="s.MaxJsonLength = int.MaxValue", span="175-175", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JTokenReader.cs"];
m18_100 [label="Console.WriteLine(''Press any key to start deserialization'')", span="178-178", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JTokenReader.cs"];
m18_101 [label="Console.ReadKey()", span="179-179", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JTokenReader.cs"];
m18_102 [label="Console.WriteLine(''Deserializing...'')", span="180-180", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JTokenReader.cs"];
m18_103 [label="Stopwatch sw = new Stopwatch()", span="182-182", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JTokenReader.cs"];
m18_104 [label="sw.Start()", span="183-183", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JTokenReader.cs"];
m18_112 [label="sw.Stop()", span="194-194", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JTokenReader.cs"];
m18_113 [label="Console.WriteLine(''Finished. Total seconds: '' + sw.Elapsed.TotalSeconds)", span="196-196", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JTokenReader.cs"];
m18_105 [label="int i = 0", span="185-185", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JTokenReader.cs"];
m18_106 [label="i < 5", span="185-185", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JTokenReader.cs"];
m18_111 [label="i++", span="185-185", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JTokenReader.cs"];
m18_107 [label="json = System.IO.File.ReadAllText(''large.json'')", span="187-187", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JTokenReader.cs"];
m18_108 [label="s = new JavaScriptSerializer()", span="189-189", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JTokenReader.cs"];
m18_110 [label="s.Deserialize<IList<PerformanceTests.RootObject>>(json)", span="191-191", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JTokenReader.cs"];
m18_109 [label="s.MaxJsonLength = int.MaxValue", span="190-190", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JTokenReader.cs"];
m18_114 [label="Exit Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", span="170-170", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="JTokenReader.cs"];
m18_12 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JTokenReader.cs"];
m18_40 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", span="231-231", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="JTokenReader.cs"];
m18_68 [label="Entry System.IO.File.CreateText(string)", span="0-0", cluster="System.IO.File.CreateText(string)", file="JTokenReader.cs"];
m18_64 [label="Entry System.IO.File.ReadAllText(string)", span="0-0", cluster="System.IO.File.ReadAllText(string)", file="JTokenReader.cs"];
m18_65 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="754-754", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JTokenReader.cs"];
m18_13 [label="Entry System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", span="0-0", cluster="System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", file="JTokenReader.cs"];
m18_94 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="839-839", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JTokenReader.cs"];
m18_67 [label="Entry System.Diagnostics.Stopwatch.Start()", span="0-0", cluster="System.Diagnostics.Stopwatch.Start()", file="JTokenReader.cs"];
m18_70 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="1000-1000", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JTokenReader.cs"];
m18_93 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JTokenReader.cs"];
m18_41 [label="Entry Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", span="105-105", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="JTokenReader.cs"];
m18_42 [label="PerformanceTests t = new PerformanceTests()", span="107-107", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="JTokenReader.cs"];
m18_43 [label="t.DeserializeLargeJson()", span="108-108", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="JTokenReader.cs"];
m18_44 [label="Exit Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", span="105-105", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="JTokenReader.cs"];
m18_66 [label="Entry System.Diagnostics.Stopwatch.Stopwatch()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stopwatch()", file="JTokenReader.cs"];
m18_32 [label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65", cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="JTokenReader.cs"];
m18_72 [label="Entry Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", span="139-139", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JTokenReader.cs"];
m18_73 [label="var jsonFile = System.IO.File.OpenText(''large.json'')", span="141-141", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JTokenReader.cs"];
m18_74 [label="JsonTextReader jsonTextReader = new JsonTextReader(jsonFile)", span="142-142", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JTokenReader.cs"];
m18_75 [label="JsonSerializer serializer = new JsonSerializer()", span="144-144", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JTokenReader.cs"];
m18_76 [label="serializer.Deserialize<IList<PerformanceTests.RootObject>>(jsonTextReader)", span="145-145", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JTokenReader.cs"];
m18_77 [label="Console.WriteLine(''Press any key to start deserialization'')", span="148-148", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JTokenReader.cs"];
m18_78 [label="Console.ReadKey()", span="149-149", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JTokenReader.cs"];
m18_79 [label="Console.WriteLine(''Deserializing...'')", span="150-150", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JTokenReader.cs"];
m18_80 [label="Stopwatch sw = new Stopwatch()", span="152-152", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JTokenReader.cs"];
m18_81 [label="sw.Start()", span="153-153", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JTokenReader.cs"];
m18_89 [label="sw.Stop()", span="165-165", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JTokenReader.cs"];
m18_90 [label="Console.WriteLine(''Finished. Total seconds: '' + sw.Elapsed.TotalSeconds)", span="167-167", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JTokenReader.cs"];
m18_82 [label="int i = 0", span="155-155", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JTokenReader.cs"];
m18_83 [label="i < 5", span="155-155", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JTokenReader.cs"];
m18_88 [label="i++", span="155-155", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JTokenReader.cs"];
m18_84 [label="var jsonFile = System.IO.File.OpenText(''large.json'')", span="157-157", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JTokenReader.cs"];
m18_85 [label="JsonTextReader jsonTextReader = new JsonTextReader(jsonFile)", span="158-158", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JTokenReader.cs"];
m18_86 [label="JsonSerializer serializer = new JsonSerializer()", span="160-160", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JTokenReader.cs"];
m18_87 [label="serializer.Deserialize<IList<PerformanceTests.RootObject>>(jsonTextReader)", span="161-161", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JTokenReader.cs"];
m18_91 [label="Exit Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", span="139-139", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="JTokenReader.cs"];
m18_71 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="JTokenReader.cs"];
m18_15 [label="Entry Newtonsoft.Json.TestConsole.Program.LargeArrayJTokenPathPerformance()", span="76-76", cluster="Newtonsoft.Json.TestConsole.Program.LargeArrayJTokenPathPerformance()", file="JTokenReader.cs"];
m18_17 [label="JArray a = new JArray()", span="78-78", cluster="Newtonsoft.Json.TestConsole.Program.LargeArrayJTokenPathPerformance()", file="JTokenReader.cs"];
m18_18 [label="int i = 0", span="79-79", cluster="Newtonsoft.Json.TestConsole.Program.LargeArrayJTokenPathPerformance()", file="JTokenReader.cs"];
m18_20 [label="a.Add(i)", span="81-81", cluster="Newtonsoft.Json.TestConsole.Program.LargeArrayJTokenPathPerformance()", file="JTokenReader.cs"];
m18_22 [label="JToken last = a.Last", span="84-84", cluster="Newtonsoft.Json.TestConsole.Program.LargeArrayJTokenPathPerformance()", file="JTokenReader.cs"];
m18_19 [label="i < 100000", span="79-79", cluster="Newtonsoft.Json.TestConsole.Program.LargeArrayJTokenPathPerformance()", file="JTokenReader.cs"];
m18_21 [label="i++", span="79-79", cluster="Newtonsoft.Json.TestConsole.Program.LargeArrayJTokenPathPerformance()", file="JTokenReader.cs"];
m18_23 [label="int interations = 1000", span="86-86", cluster="Newtonsoft.Json.TestConsole.Program.LargeArrayJTokenPathPerformance()", file="JTokenReader.cs"];
m18_29 [label="p = last.Path", span="94-94", cluster="Newtonsoft.Json.TestConsole.Program.LargeArrayJTokenPathPerformance()", file="JTokenReader.cs"];
m18_24 [label="Console.WriteLine(''Ready!!!'')", span="88-88", cluster="Newtonsoft.Json.TestConsole.Program.LargeArrayJTokenPathPerformance()", file="JTokenReader.cs"];
m18_28 [label="i < interations", span="92-92", cluster="Newtonsoft.Json.TestConsole.Program.LargeArrayJTokenPathPerformance()", file="JTokenReader.cs"];
m18_25 [label="Console.ReadKey()", span="89-89", cluster="Newtonsoft.Json.TestConsole.Program.LargeArrayJTokenPathPerformance()", file="JTokenReader.cs"];
m18_26 [label="string p = null", span="91-91", cluster="Newtonsoft.Json.TestConsole.Program.LargeArrayJTokenPathPerformance()", file="JTokenReader.cs"];
m18_27 [label="int i = 0", span="92-92", cluster="Newtonsoft.Json.TestConsole.Program.LargeArrayJTokenPathPerformance()", file="JTokenReader.cs"];
m18_30 [label="i++", span="92-92", cluster="Newtonsoft.Json.TestConsole.Program.LargeArrayJTokenPathPerformance()", file="JTokenReader.cs"];
m18_31 [label="Exit Newtonsoft.Json.TestConsole.Program.LargeArrayJTokenPathPerformance()", span="76-76", cluster="Newtonsoft.Json.TestConsole.Program.LargeArrayJTokenPathPerformance()", file="JTokenReader.cs"];
m18_16 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="JTokenReader.cs"];
m19_782 [label="Entry char.ToString()", span="0-0", cluster="char.ToString()", file="PerformanceTests.cs"];
m19_20 [label="Entry Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetBySecond(TSecond, out TFirst)", span="63-63", cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetBySecond(TSecond, out TFirst)", file="PerformanceTests.cs"];
m19_34 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="PerformanceTests.cs"];
m19_0 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", span="62-62", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="PerformanceTests.cs"];
m19_1 [label="MemoryStream ms = new MemoryStream()", span="64-64", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="PerformanceTests.cs"];
m19_160 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", span="224-224", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="PerformanceTests.cs"];
m19_169 [label="Assert.AreEqual(expected, json)", span="239-239", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="PerformanceTests.cs"];
m19_162 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="227-227", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="PerformanceTests.cs"];
m19_167 [label="string json = sw.ToString()", span="236-236", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="PerformanceTests.cs"];
m19_168 [label="string expected = @''[''''c'''']''", span="237-237", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="PerformanceTests.cs"];
m19_161 [label="StringWriter sw = new StringWriter()", span="226-226", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="PerformanceTests.cs"];
m19_163 [label="char? value = 'c'", span="229-229", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="PerformanceTests.cs"];
m19_164 [label="jsonWriter.WriteStartArray()", span="231-231", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="PerformanceTests.cs"];
m19_165 [label="jsonWriter.WriteValue((object)value)", span="232-232", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="PerformanceTests.cs"];
m19_166 [label="jsonWriter.WriteEndArray()", span="233-233", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="PerformanceTests.cs"];
m19_170 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", span="224-224", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="PerformanceTests.cs"];
m19_16 [label="Entry Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetByFirst(TFirst, out TSecond)", span="58-58", cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetByFirst(TFirst, out TSecond)", file="PerformanceTests.cs"];
m19_18 [label="Exit Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetByFirst(TFirst, out TSecond)", span="58-58", cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetByFirst(TFirst, out TSecond)", file="PerformanceTests.cs"];
m19_152 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", span="1019-1019", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", file="PerformanceTests.cs"];
m19_445 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="299-299", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="PerformanceTests.cs"];
m19_848 [label="Entry System.IO.TextWriter.Write(char[], int, int)", span="0-0", cluster="System.IO.TextWriter.Write(char[], int, int)", file="PerformanceTests.cs"];
m19_2 [label="var streamWriter = new StreamWriter(ms, new UTF8Encoding(false)) { NewLine = ''\n'' }", span="66-66", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="PerformanceTests.cs"];
m19_3 [label="var jsonWriter = new JsonTextWriter(streamWriter)\r\n            {\r\n                CloseOutput = true,\r\n                Indentation = 2,\r\n                Formatting = Formatting.Indented\r\n            }", span="67-72", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="PerformanceTests.cs"];
m19_4 [label="jsonWriter.WriteStartObject()", span="74-74", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="PerformanceTests.cs"];
m19_5 [label="jsonWriter.WritePropertyName(''prop'')", span="75-75", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="PerformanceTests.cs"];
m19_246 [label="Entry Newtonsoft.Json.JsonWriter.Close()", span="349-349", cluster="Newtonsoft.Json.JsonWriter.Close()", file="PerformanceTests.cs"];
m19_91 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char)", span="906-906", cluster="Newtonsoft.Json.JsonWriter.WriteValue(char)", file="PerformanceTests.cs"];
m19_14 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="PerformanceTests.cs"];
m19_461 [label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="801-801", cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="PerformanceTests.cs"];
m19_763 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="PerformanceTests.cs"];
m19_883 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="473-473", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="PerformanceTests.cs"];
m19_52 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="PerformanceTests.cs"];
m19_158 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", span="1154-1154", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", file="PerformanceTests.cs"];
m19_96 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="934-934", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="PerformanceTests.cs"];
m19_247 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", span="362-362", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_265 [label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="384-384", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_250 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="367-367", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_254 [label="jsonWriter.WriteValue(''Intel'')", span="373-373", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_256 [label="jsonWriter.WriteValue(''500W'')", span="375-375", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_259 [label="jsonWriter.WriteValue(''DVD read/writer'')", span="378-378", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_261 [label="jsonWriter.WriteValue(''500 gigabyte hard drive'')", span="380-380", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_262 [label="jsonWriter.WriteValue(''200 gigabype hard drive'')", span="381-381", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_264 [label="jsonWriter.WriteEndObject()", span="383-383", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_266 [label="string expected = @''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabype hard drive''''\r\n  ]\r\n}''", span="398-407", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_249 [label="StringWriter sw = new StringWriter(sb)", span="365-365", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_251 [label="jsonWriter.Formatting = Formatting.Indented", span="369-369", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_252 [label="jsonWriter.WriteStartObject()", span="371-371", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_253 [label="jsonWriter.WritePropertyName(''CPU'')", span="372-372", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_255 [label="jsonWriter.WritePropertyName(''PSU'')", span="374-374", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_257 [label="jsonWriter.WritePropertyName(''Drives'')", span="376-376", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_258 [label="jsonWriter.WriteStartArray()", span="377-377", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_260 [label="jsonWriter.WriteComment(''(broken)'')", span="379-379", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_263 [label="jsonWriter.WriteEnd()", span="382-382", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_267 [label="string result = sb.ToString()", span="408-408", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_268 [label="StringAssert.AreEqual(expected, result)", span="410-410", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_248 [label="StringBuilder sb = new StringBuilder()", span="364-364", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_269 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", span="362-362", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="PerformanceTests.cs"];
m19_687 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", span="1085-1085", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="PerformanceTests.cs"];
m19_695 [label="Assert.AreEqual(script, reader.ReadAsString())", span="1103-1103", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="PerformanceTests.cs"];
m19_693 [label="Assert.AreEqual(@''''''\u003cscript type=\u0022text/javascript\u0022\u003ealert(\u0027hi\u0027);\u003c/script\u003e'''''', json)", span="1099-1099", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="PerformanceTests.cs"];
m19_689 [label="JsonTextWriter writer = new JsonTextWriter(sw)\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeHtml\r\n            }", span="1088-1091", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="PerformanceTests.cs"];
m19_690 [label="string script = @''<script type=''''text/javascript''''>alert('hi');</script>''", span="1093-1093", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="PerformanceTests.cs"];
m19_694 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1101-1101", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="PerformanceTests.cs"];
m19_692 [label="string json = sw.ToString()", span="1097-1097", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="PerformanceTests.cs"];
m19_688 [label="StringWriter sw = new StringWriter()", span="1087-1087", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="PerformanceTests.cs"];
m19_691 [label="writer.WriteValue(script)", span="1095-1095", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="PerformanceTests.cs"];
m19_696 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", span="1085-1085", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="PerformanceTests.cs"];
m19_783 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", span="99-99", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="PerformanceTests.cs"];
m19_62 [label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1534-1534", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="PerformanceTests.cs"];
m19_926 [label="_value = value", span="1536-1536", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="PerformanceTests.cs"];
m19_927 [label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1534-1534", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="PerformanceTests.cs"];
m19_21 [label="return _secondToFirst.TryGetValue(second, out first);", span="65-65", cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetBySecond(TSecond, out TFirst)", file="PerformanceTests.cs"];
m19_319 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float)", span="860-860", cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="PerformanceTests.cs"];
m19_677 [label="Entry Newtonsoft.Json.JsonWriter.BuildStateArray()", span="78-78", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="PerformanceTests.cs"];
m19_503 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", span="788-788", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="PerformanceTests.cs"];
m19_506 [label="JsonWriter jsonWriter = new JsonTextWriter(sw) { Formatting = Formatting.Indented }", span="793-793", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="PerformanceTests.cs"];
m19_505 [label="StringWriter sw = new StringWriter(sb)", span="791-791", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="PerformanceTests.cs"];
m19_507 [label="jsonWriter.WriteStartArray()", span="795-795", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="PerformanceTests.cs"];
m19_508 [label="jsonWriter.WriteValue(int.MaxValue)", span="797-797", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="PerformanceTests.cs"];
m19_509 [label="jsonWriter.WriteValue(int.MinValue)", span="798-798", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="PerformanceTests.cs"];
m19_510 [label="jsonWriter.WriteValue(0)", span="799-799", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="PerformanceTests.cs"];
m19_511 [label="jsonWriter.WriteValue(-0)", span="800-800", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="PerformanceTests.cs"];
m19_512 [label="jsonWriter.WriteValue(9L)", span="801-801", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="PerformanceTests.cs"];
m19_513 [label="jsonWriter.WriteValue(9UL)", span="802-802", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="PerformanceTests.cs"];
m19_514 [label="jsonWriter.WriteValue(long.MaxValue)", span="803-803", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="PerformanceTests.cs"];
m19_515 [label="jsonWriter.WriteValue(long.MinValue)", span="804-804", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="PerformanceTests.cs"];
m19_516 [label="jsonWriter.WriteValue(ulong.MaxValue)", span="805-805", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="PerformanceTests.cs"];
m19_517 [label="jsonWriter.WriteValue(ulong.MinValue)", span="806-806", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="PerformanceTests.cs"];
m19_518 [label="jsonWriter.WriteEndArray()", span="808-808", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="PerformanceTests.cs"];
m19_519 [label="Console.WriteLine(sb.ToString())", span="811-811", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="PerformanceTests.cs"];
m19_520 [label="StringAssert.AreEqual(@''[\r\n  2147483647,\r\n  -2147483648,\r\n  0,\r\n  0,\r\n  9,\r\n  9,\r\n  9223372036854775807,\r\n  -9223372036854775808,\r\n  18446744073709551615,\r\n  0\r\n]'', sb.ToString())", span="813-824", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="PerformanceTests.cs"];
m19_504 [label="StringBuilder sb = new StringBuilder()", span="790-790", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="PerformanceTests.cs"];
m19_521 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", span="788-788", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="PerformanceTests.cs"];
m19_15 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="124-124", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="PerformanceTests.cs"];
m19_147 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(short?)", span="1067-1067", cluster="Newtonsoft.Json.JsonWriter.WriteValue(short?)", file="PerformanceTests.cs"];
m19_870 [label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", span="1515-1515", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", file="PerformanceTests.cs"];
m19_918 [label="SetWriteState(JsonToken.EndObject, null)", span="1517-1517", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", file="PerformanceTests.cs"];
m19_919 [label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", span="1515-1515", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", file="PerformanceTests.cs"];
m19_22 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="PerformanceTests.cs"];
m19_10 [label="_firstToSecond.Add(first, second)", span="54-54", cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.Add(TFirst, TSecond)", file="PerformanceTests.cs"];
m19_9 [label="throw new ArgumentException(''Duplicate first or second'');", span="52-52", cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.Add(TFirst, TSecond)", file="PerformanceTests.cs"];
m19_6 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", file="PerformanceTests.cs"];
m19_7 [label="Entry Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.Add(TFirst, TSecond)", span="48-48", cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.Add(TFirst, TSecond)", file="PerformanceTests.cs"];
m19_8 [label="_firstToSecond.ContainsKey(first) || _secondToFirst.ContainsKey(second)", span="50-50", cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.Add(TFirst, TSecond)", file="PerformanceTests.cs"];
m19_11 [label="_secondToFirst.Add(second, first)", span="55-55", cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.Add(TFirst, TSecond)", file="PerformanceTests.cs"];
m19_55 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", span="125-125", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", file="PerformanceTests.cs"];
m19_59 [label="Assert.AreEqual(''1'', sw.ToString())", span="131-131", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", file="PerformanceTests.cs"];
m19_57 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="128-128", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", file="PerformanceTests.cs"];
m19_56 [label="var sw = new StringWriter()", span="127-127", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", file="PerformanceTests.cs"];
m19_58 [label="writer.WriteValue(new ConvertibleInt(1))", span="129-129", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", file="PerformanceTests.cs"];
m19_60 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", span="125-125", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", file="PerformanceTests.cs"];
m19_867 [label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", span="1508-1508", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="PerformanceTests.cs"];
m19_915 [label="SetWriteState(JsonToken.StartObject, null)", span="1510-1510", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="PerformanceTests.cs"];
m19_916 [label="_writer.Write(''{{{'')", span="1512-1512", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="PerformanceTests.cs"];
m19_917 [label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", span="1508-1508", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="PerformanceTests.cs"];
m19_154 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", span="439-439", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="PerformanceTests.cs"];
m19_405 [label="Entry Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", span="1249-1249", cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="PerformanceTests.cs"];
m19_697 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="344-344", cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="PerformanceTests.cs"];
m19_750 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", span="1205-1205", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="PerformanceTests.cs"];
m19_752 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1208-1208", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="PerformanceTests.cs"];
m19_751 [label="StringWriter sw = new StringWriter()", span="1207-1207", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="PerformanceTests.cs"];
m19_753 [label="writer.Formatting = Formatting.Indented", span="1209-1209", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="PerformanceTests.cs"];
m19_754 [label="writer.DateFormatString = ''yyyy tt''", span="1210-1210", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="PerformanceTests.cs"];
m19_755 [label="writer.Culture = new CultureInfo(''en-NZ'')", span="1211-1211", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="PerformanceTests.cs"];
m19_756 [label="writer.QuoteChar = '\''", span="1212-1212", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="PerformanceTests.cs"];
m19_757 [label="writer.WriteStartArray()", span="1214-1214", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="PerformanceTests.cs"];
m19_758 [label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1216-1216", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="PerformanceTests.cs"];
m19_759 [label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1217-1217", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="PerformanceTests.cs"];
m19_760 [label="writer.WriteEnd()", span="1219-1219", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="PerformanceTests.cs"];
m19_761 [label="StringAssert.AreEqual(@''[\r\n  '2000 a.m.',\r\n  '2000 a.m.'\r\n]'', sw.ToString())", span="1221-1224", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="PerformanceTests.cs"];
m19_762 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", span="1205-1205", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="PerformanceTests.cs"];
m19_157 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="PerformanceTests.cs"];
m19_320 [label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="344-344", cluster="Newtonsoft.Json.JsonWriter.Flush()", file="PerformanceTests.cs"];
m19_19 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="PerformanceTests.cs"];
m19_348 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", span="541-541", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="PerformanceTests.cs"];
m19_351 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="546-546", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="PerformanceTests.cs"];
m19_350 [label="StringWriter sw = new StringWriter(sb)", span="544-544", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="PerformanceTests.cs"];
m19_352 [label="jsonWriter.Formatting = Formatting.Indented", span="548-548", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="PerformanceTests.cs"];
m19_353 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.String", span="549-549", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="PerformanceTests.cs"];
m19_354 [label="jsonWriter.WriteStartArray()", span="551-551", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="PerformanceTests.cs"];
m19_355 [label="jsonWriter.WriteValue(double.NaN)", span="552-552", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="PerformanceTests.cs"];
m19_356 [label="jsonWriter.WriteValue(double.PositiveInfinity)", span="553-553", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="PerformanceTests.cs"];
m19_357 [label="jsonWriter.WriteValue(double.NegativeInfinity)", span="554-554", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="PerformanceTests.cs"];
m19_358 [label="jsonWriter.WriteValue(float.NaN)", span="555-555", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="PerformanceTests.cs"];
m19_359 [label="jsonWriter.WriteValue(float.PositiveInfinity)", span="556-556", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="PerformanceTests.cs"];
m19_360 [label="jsonWriter.WriteValue(float.NegativeInfinity)", span="557-557", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="PerformanceTests.cs"];
m19_361 [label="jsonWriter.WriteEndArray()", span="558-558", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="PerformanceTests.cs"];
m19_362 [label="jsonWriter.Flush()", span="560-560", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="PerformanceTests.cs"];
m19_364 [label="string result = sb.ToString()", span="571-571", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="PerformanceTests.cs"];
m19_349 [label="StringBuilder sb = new StringBuilder()", span="543-543", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="PerformanceTests.cs"];
m19_363 [label="string expected = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity'''',\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="563-570", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="PerformanceTests.cs"];
m19_365 [label="StringAssert.AreEqual(expected, result)", span="573-573", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="PerformanceTests.cs"];
m19_366 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", span="541-541", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="PerformanceTests.cs"];
m19_64 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="PerformanceTests.cs"];
m19_17 [label="return _firstToSecond.TryGetValue(first, out second);", span="60-60", cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetByFirst(TFirst, out TSecond)", file="PerformanceTests.cs"];
m19_36 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(string)", span="367-367", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="PerformanceTests.cs"];
m19_748 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="PerformanceTests.cs"];
m19_183 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", span="258-258", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="PerformanceTests.cs"];
m19_197 [label="Assert.AreEqual(expected, result)", span="279-279", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="PerformanceTests.cs"];
m19_186 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="263-263", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="PerformanceTests.cs"];
m19_188 [label="jsonWriter.WriteValue(@''''''These pretzels are making me thirsty!'''''')", span="266-266", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="PerformanceTests.cs"];
m19_189 [label="jsonWriter.WriteValue(''Jeff's house was burninated.'')", span="267-267", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="PerformanceTests.cs"];
m19_190 [label="jsonWriter.WriteValue(''1. You don't talk about fight club.\r\n2. You don't talk about fight club.'')", span="268-268", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="PerformanceTests.cs"];
m19_191 [label="jsonWriter.WriteValue(''35% of\t statistics\n are made\r up.'')", span="269-269", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="PerformanceTests.cs"];
m19_194 [label="string result = sb.ToString()", span="274-274", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="PerformanceTests.cs"];
m19_193 [label="string expected = @''[''''\''''These pretzels are making me thirsty!\'''''''',''''Jeff's house was burninated.'''',''''1. You don't talk about fight club.\r\n2. You don't talk about fight club.'''',''''35% of\t statistics\n are made\r up.'''']''", span="273-273", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="PerformanceTests.cs"];
m19_196 [label="Console.WriteLine(result)", span="277-277", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="PerformanceTests.cs"];
m19_185 [label="StringWriter sw = new StringWriter(sb)", span="261-261", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="PerformanceTests.cs"];
m19_187 [label="jsonWriter.WriteStartArray()", span="265-265", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="PerformanceTests.cs"];
m19_192 [label="jsonWriter.WriteEndArray()", span="270-270", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="PerformanceTests.cs"];
m19_184 [label="StringBuilder sb = new StringBuilder()", span="260-260", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="PerformanceTests.cs"];
m19_195 [label="Console.WriteLine(''StringEscaping'')", span="276-276", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="PerformanceTests.cs"];
m19_198 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", span="258-258", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="PerformanceTests.cs"];
m19_422 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", span="668-668", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="PerformanceTests.cs"];
m19_432 [label="Assert.AreEqual(expected, result)", span="685-685", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="PerformanceTests.cs"];
m19_425 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="673-673", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="PerformanceTests.cs"];
m19_431 [label="string result = sb.ToString()", span="683-683", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="PerformanceTests.cs"];
m19_430 [label="string expected = @''{''''PropertyName'''':[1,2,3,4,5]}''", span="682-682", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="PerformanceTests.cs"];
m19_424 [label="StringWriter sw = new StringWriter(sb)", span="671-671", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="PerformanceTests.cs"];
m19_426 [label="jsonWriter.Formatting = Formatting.Indented", span="675-675", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="PerformanceTests.cs"];
m19_427 [label="jsonWriter.WriteStartObject()", span="677-677", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="PerformanceTests.cs"];
m19_428 [label="jsonWriter.WriteRaw(@''''''PropertyName'''':[1,2,3,4,5]'')", span="678-678", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="PerformanceTests.cs"];
m19_429 [label="jsonWriter.WriteEnd()", span="679-679", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="PerformanceTests.cs"];
m19_423 [label="StringBuilder sb = new StringBuilder()", span="670-670", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="PerformanceTests.cs"];
m19_433 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", span="668-668", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="PerformanceTests.cs"];
m19_746 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", span="604-604", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="PerformanceTests.cs"];
m19_522 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="841-841", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="PerformanceTests.cs"];
m19_523 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong)", span="851-851", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="PerformanceTests.cs"];
m19_785 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="PerformanceTests.cs"];
m19_851 [label="Entry System.IO.TextWriter.Write(char[])", span="0-0", cluster="System.IO.TextWriter.Write(char[])", file="PerformanceTests.cs"];
m19_882 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="PerformanceTests.cs"];
m19_910 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="PerformanceTests.cs"];
m19_446 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="434-434", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="PerformanceTests.cs"];
m19_686 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", span="555-555", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="PerformanceTests.cs"];
m19_594 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)", file="PerformanceTests.cs"];
m19_35 [label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="PerformanceTests.cs"];
m19_593 [label="Entry string.Trim(params char[])", span="0-0", cluster="string.Trim(params char[])", file="PerformanceTests.cs"];
m19_764 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", span="1229-1229", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="PerformanceTests.cs"];
m19_774 [label="string newText = swNew.ToString()", span="1247-1247", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="PerformanceTests.cs"];
m19_775 [label="string oldText = swOld.ToString()", span="1248-1248", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="PerformanceTests.cs"];
m19_769 [label="StringWriter swNew = new StringWriter()", span="1240-1240", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="PerformanceTests.cs"];
m19_772 [label="StringWriter swOld = new StringWriter()", span="1244-1244", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="PerformanceTests.cs"];
m19_773 [label="WriteEscapedJavaScriptStringOld(swOld, c.ToString(), '''', true)", span="1245-1245", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="PerformanceTests.cs"];
m19_776 [label="newText != oldText", span="1250-1250", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="PerformanceTests.cs"];
m19_777 [label="throw new Exception(''Difference for char '{0}' (value {1}). Old text: {2}, New text: {3}''.FormatWith(CultureInfo.InvariantCulture, c, (int)c, oldText, newText));", span="1251-1251", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="PerformanceTests.cs"];
m19_765 [label="Console.WriteLine(''Started'')", span="1231-1231", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="PerformanceTests.cs"];
m19_768 [label="Console.WriteLine(''Position: '' + (int)c)", span="1238-1238", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="PerformanceTests.cs"];
m19_780 [label="Console.WriteLine(''Finished'')", span="1256-1256", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="PerformanceTests.cs"];
m19_767 [label="c % 1000 == 0", span="1237-1237", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="PerformanceTests.cs"];
m19_770 [label="char[] buffer = null", span="1241-1241", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="PerformanceTests.cs"];
m19_771 [label="JavaScriptUtils.WriteEscapedJavaScriptString(swNew, c.ToString(), '''', true, JavaScriptUtils.DoubleQuoteCharEscapeFlags, StringEscapeHandling.Default, ref buffer)", span="1242-1242", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="PerformanceTests.cs"];
m19_766 [label="char c = (char)0", span="1233-1233", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="PerformanceTests.cs"];
m19_778 [label="c++", span="1253-1253", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="PerformanceTests.cs"];
m19_779 [label="c != char.MaxValue", span="1254-1254", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="PerformanceTests.cs"];
m19_781 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", span="1229-1229", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="PerformanceTests.cs"];
m19_145 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte?)", span="1104-1104", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte?)", file="PerformanceTests.cs"];
m19_155 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", span="1129-1129", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", file="PerformanceTests.cs"];
m19_911 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="PerformanceTests.cs"];
m19_153 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", span="466-466", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="PerformanceTests.cs"];
m19_102 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", span="170-170", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_140 [label="Assert.AreEqual(expected, json)", span="220-220", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_104 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="173-173", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_137 [label="string json = sw.ToString()", span="211-211", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_139 [label="expected = @''[null,''''c'''',null,true,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1.1,null,1.1,null,1.1,null,''''1970-01-01T00:00:00Z'''',null,''''1970-01-01T00:00:00+00:00'''']''", span="215-215", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_103 [label="StringWriter sw = new StringWriter()", span="172-172", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_105 [label="jsonWriter.WriteStartArray()", span="175-175", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_106 [label="jsonWriter.WriteValue((char?)null)", span="176-176", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_107 [label="jsonWriter.WriteValue((char?)'c')", span="177-177", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_108 [label="jsonWriter.WriteValue((bool?)null)", span="178-178", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_109 [label="jsonWriter.WriteValue((bool?)true)", span="179-179", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_110 [label="jsonWriter.WriteValue((byte?)null)", span="180-180", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_111 [label="jsonWriter.WriteValue((byte?)1)", span="181-181", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_112 [label="jsonWriter.WriteValue((sbyte?)null)", span="182-182", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_113 [label="jsonWriter.WriteValue((sbyte?)1)", span="183-183", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_114 [label="jsonWriter.WriteValue((short?)null)", span="184-184", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_115 [label="jsonWriter.WriteValue((short?)1)", span="185-185", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_116 [label="jsonWriter.WriteValue((ushort?)null)", span="186-186", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_117 [label="jsonWriter.WriteValue((ushort?)1)", span="187-187", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_118 [label="jsonWriter.WriteValue((int?)null)", span="188-188", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_119 [label="jsonWriter.WriteValue((int?)1)", span="189-189", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_120 [label="jsonWriter.WriteValue((uint?)null)", span="190-190", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_121 [label="jsonWriter.WriteValue((uint?)1)", span="191-191", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_122 [label="jsonWriter.WriteValue((long?)null)", span="192-192", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_123 [label="jsonWriter.WriteValue((long?)1)", span="193-193", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_124 [label="jsonWriter.WriteValue((ulong?)null)", span="194-194", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_125 [label="jsonWriter.WriteValue((ulong?)1)", span="195-195", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_126 [label="jsonWriter.WriteValue((double?)null)", span="196-196", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_127 [label="jsonWriter.WriteValue((double?)1.1)", span="197-197", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_128 [label="jsonWriter.WriteValue((float?)null)", span="198-198", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_129 [label="jsonWriter.WriteValue((float?)1.1)", span="199-199", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_130 [label="jsonWriter.WriteValue((decimal?)null)", span="200-200", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_131 [label="jsonWriter.WriteValue((decimal?)1.1m)", span="201-201", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_132 [label="jsonWriter.WriteValue((DateTime?)null)", span="202-202", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_133 [label="jsonWriter.WriteValue((DateTime?)new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc))", span="203-203", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_134 [label="jsonWriter.WriteValue((DateTimeOffset?)null)", span="205-205", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_135 [label="jsonWriter.WriteValue((DateTimeOffset?)new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero))", span="206-206", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_136 [label="jsonWriter.WriteEndArray()", span="208-208", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_138 [label="string expected", span="212-212", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_141 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", span="170-170", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="PerformanceTests.cs"];
m19_387 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double)", span="456-456", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="PerformanceTests.cs"];
m19_54 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="PerformanceTests.cs"];
m19_595 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", span="938-938", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="PerformanceTests.cs"];
m19_602 [label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="949-949", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="PerformanceTests.cs"];
m19_600 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="946-946", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="PerformanceTests.cs"];
m19_601 [label="jsonWriter.Formatting = Formatting.Indented", span="948-948", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="PerformanceTests.cs"];
m19_603 [label="jsonWriter.WriteStartArray()", span="951-951", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="PerformanceTests.cs"];
m19_597 [label="StringWriter sw = new StringWriter(sb)", span="941-941", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="PerformanceTests.cs"];
m19_599 [label="byte[] data = Encoding.UTF8.GetBytes(text)", span="944-944", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="PerformanceTests.cs"];
m19_604 [label="jsonWriter.WriteValue(data)", span="952-952", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="PerformanceTests.cs"];
m19_605 [label="jsonWriter.WriteValue(data)", span="953-953", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="PerformanceTests.cs"];
m19_606 [label="jsonWriter.WriteValue((object)data)", span="954-954", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="PerformanceTests.cs"];
m19_607 [label="jsonWriter.WriteValue((byte[])null)", span="955-955", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="PerformanceTests.cs"];
m19_608 [label="jsonWriter.WriteValue((Uri)null)", span="956-956", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="PerformanceTests.cs"];
m19_609 [label="jsonWriter.WriteEndArray()", span="957-957", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="PerformanceTests.cs"];
m19_611 [label="string result = sb.ToString()", span="967-967", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="PerformanceTests.cs"];
m19_596 [label="StringBuilder sb = new StringBuilder()", span="940-940", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="PerformanceTests.cs"];
m19_598 [label="string text = ''Hello world.''", span="943-943", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="PerformanceTests.cs"];
m19_610 [label="string expected = @''[\r\n  ''''SGVsbG8gd29ybGQu'''',\r\n  ''''SGVsbG8gd29ybGQu'''',\r\n  ''''SGVsbG8gd29ybGQu'''',\r\n  null,\r\n  null\r\n]''", span="960-966", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="PerformanceTests.cs"];
m19_612 [label="StringAssert.AreEqual(expected, result)", span="969-969", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="PerformanceTests.cs"];
m19_613 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", span="938-938", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="PerformanceTests.cs"];
m19_388 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float)", span="429-429", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="PerformanceTests.cs"];
m19_12 [label="Exit Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.Add(TFirst, TSecond)", span="48-48", cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.Add(TFirst, TSecond)", file="PerformanceTests.cs"];
m19_614 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", span="673-673", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="PerformanceTests.cs"];
m19_747 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", span="653-653", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="PerformanceTests.cs"];
m19_925 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="198-198", cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="PerformanceTests.cs"];
m19_546 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", span="864-864", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_552 [label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="874-874", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_554 [label="Assert.AreEqual(5, jsonWriter.Indentation)", span="877-877", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_556 [label="Assert.AreEqual('_', jsonWriter.IndentChar)", span="879-879", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_558 [label="Assert.AreEqual(true, jsonWriter.QuoteName)", span="881-881", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_560 [label="Assert.AreEqual('\'', jsonWriter.QuoteChar)", span="883-883", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_565 [label="Assert.AreEqual('?', jsonWriter.IndentChar)", span="891-891", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_567 [label="Assert.AreEqual(6, jsonWriter.Indentation)", span="893-893", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_549 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="869-869", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_551 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="872-872", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_553 [label="jsonWriter.Indentation = 5", span="876-876", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_555 [label="jsonWriter.IndentChar = '_'", span="878-878", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_557 [label="jsonWriter.QuoteName = true", span="880-880", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_559 [label="jsonWriter.QuoteChar = '\''", span="882-882", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_561 [label="jsonWriter.WriteStartObject()", span="885-885", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_564 [label="jsonWriter.IndentChar = '?'", span="890-890", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_566 [label="jsonWriter.Indentation = 6", span="892-892", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_568 [label="jsonWriter.WritePropertyName(''prop2'')", span="895-895", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_548 [label="StringWriter sw = new StringWriter(sb)", span="867-867", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_550 [label="jsonWriter.Formatting = Formatting.Indented", span="871-871", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_562 [label="jsonWriter.WritePropertyName(''propertyName'')", span="887-887", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_563 [label="jsonWriter.WriteValue(double.NaN)", span="888-888", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_569 [label="jsonWriter.WriteValue(123)", span="896-896", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_570 [label="jsonWriter.WriteEndObject()", span="898-898", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_572 [label="string result = sb.ToString()", span="905-905", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_547 [label="StringBuilder sb = new StringBuilder()", span="866-866", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_571 [label="string expected = @''{\r\n_____'propertyName': NaN,\r\n??????'prop2': 123\r\n}''", span="901-904", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_573 [label="StringAssert.AreEqual(expected, result)", span="907-907", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_574 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", span="864-864", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="PerformanceTests.cs"];
m19_98 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="775-775", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="PerformanceTests.cs"];
m19_144 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool?)", span="1055-1055", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="PerformanceTests.cs"];
m19_367 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", span="577-577", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="PerformanceTests.cs"];
m19_370 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="582-582", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="PerformanceTests.cs"];
m19_369 [label="StringWriter sw = new StringWriter(sb)", span="580-580", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="PerformanceTests.cs"];
m19_371 [label="jsonWriter.Formatting = Formatting.Indented", span="584-584", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="PerformanceTests.cs"];
m19_372 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.String", span="585-585", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="PerformanceTests.cs"];
m19_373 [label="jsonWriter.QuoteChar = '\''", span="586-586", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="PerformanceTests.cs"];
m19_374 [label="jsonWriter.WriteStartArray()", span="588-588", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="PerformanceTests.cs"];
m19_375 [label="jsonWriter.WriteValue(double.NaN)", span="589-589", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="PerformanceTests.cs"];
m19_376 [label="jsonWriter.WriteValue(double.PositiveInfinity)", span="590-590", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="PerformanceTests.cs"];
m19_377 [label="jsonWriter.WriteValue(double.NegativeInfinity)", span="591-591", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="PerformanceTests.cs"];
m19_378 [label="jsonWriter.WriteValue(float.NaN)", span="592-592", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="PerformanceTests.cs"];
m19_379 [label="jsonWriter.WriteValue(float.PositiveInfinity)", span="593-593", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="PerformanceTests.cs"];
m19_380 [label="jsonWriter.WriteValue(float.NegativeInfinity)", span="594-594", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="PerformanceTests.cs"];
m19_381 [label="jsonWriter.WriteEndArray()", span="595-595", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="PerformanceTests.cs"];
m19_382 [label="jsonWriter.Flush()", span="597-597", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="PerformanceTests.cs"];
m19_384 [label="string result = sb.ToString()", span="608-608", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="PerformanceTests.cs"];
m19_368 [label="StringBuilder sb = new StringBuilder()", span="579-579", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="PerformanceTests.cs"];
m19_383 [label="string expected = @''[\r\n  'NaN',\r\n  'Infinity',\r\n  '-Infinity',\r\n  'NaN',\r\n  'Infinity',\r\n  '-Infinity'\r\n]''", span="600-607", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="PerformanceTests.cs"];
m19_385 [label="StringAssert.AreEqual(expected, result)", span="610-610", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="PerformanceTests.cs"];
m19_386 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", span="577-577", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="PerformanceTests.cs"];
m19_151 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long?)", span="1006-1006", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long?)", file="PerformanceTests.cs"];
m19_443 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="PerformanceTests.cs"];
m19_909 [label="Entry string.String(char[])", span="0-0", cluster="string.String(char[])", file="PerformanceTests.cs"];
m19_894 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", span="444-444", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", file="PerformanceTests.cs"];
m19_784 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", span="1261-1261", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_787 [label=appendDelimiters, span="1264-1264", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_788 [label="writer.Write(delimiter)", span="1265-1265", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_789 [label="s != null", span="1267-1267", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_794 [label="i < s.Length", span="1273-1273", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_795 [label="var c = s[i]", span="1275-1275", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_796 [label="c >= ' ' && c < 128 && c != '\\' && c != delimiter", span="1278-1278", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_830 [label="chars = s.ToCharArray()", span="1344-1344", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_831 [label="writer.Write(chars, lastWritePosition, i - lastWritePosition)", span="1347-1347", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_834 [label="writer.Write(escapedValue)", span="1352-1352", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_835 [label="writer.Write(unicodeBuffer)", span="1354-1354", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_838 [label="writer.Write(s)", span="1360-1360", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_840 [label="chars = s.ToCharArray()", span="1365-1365", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_841 [label="writer.Write(chars, lastWritePosition, s.Length - lastWritePosition)", span="1368-1368", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_842 [label=appendDelimiters, span="1373-1373", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_843 [label="writer.Write(delimiter)", span="1374-1374", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_790 [label="char[] chars = null", span="1269-1269", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_793 [label="int i = 0", span="1273-1273", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_836 [label="i++", span="1273-1273", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_827 [label="escapedValue == null", span="1338-1338", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_837 [label="lastWritePosition == 0", span="1357-1357", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_798 [label=c, span="1283-1283", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_821 [label="c <= '\u001f'", span="1321-1321", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_824 [label="StringUtils.ToCharAsUnicode(c, unicodeBuffer)", span="1326-1326", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_797 [label="string escapedValue", span="1281-1281", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_829 [label="chars == null", span="1343-1343", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_839 [label="chars == null", span="1364-1364", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_792 [label="int lastWritePosition = 0", span="1271-1271", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_832 [label="lastWritePosition = i + 1", span="1350-1350", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_826 [label="escapedValue = null", span="1333-1333", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_825 [label="escapedValue = EscapedUnicodeText", span="1329-1329", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_833 [label="!string.Equals(escapedValue, EscapedUnicodeText)", span="1351-1351", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_791 [label="char[] unicodeBuffer = null", span="1270-1270", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_823 [label="unicodeBuffer = new char[6]", span="1324-1324", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_828 [label="i > lastWritePosition", span="1341-1341", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_800 [label="escapedValue = @''\t''", span="1286-1286", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_802 [label="escapedValue = @''\n''", span="1289-1289", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_804 [label="escapedValue = @''\r''", span="1292-1292", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_806 [label="escapedValue = @''\f''", span="1295-1295", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_808 [label="escapedValue = @''\b''", span="1298-1298", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_810 [label="escapedValue = @''\\''", span="1301-1301", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_812 [label="escapedValue = @''\u0085''", span="1304-1304", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_814 [label="escapedValue = @''\u2028''", span="1307-1307", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_816 [label="escapedValue = @''\u2029''", span="1310-1310", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_818 [label="escapedValue = @''\'''", span="1314-1314", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_820 [label="escapedValue = ''\\\''''", span="1318-1318", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_799 [label="'\t'", span="1285-1285", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_801 [label="'\n'", span="1288-1288", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_803 [label="'\r'", span="1291-1291", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_805 [label="'\f'", span="1294-1294", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_807 [label="'\b'", span="1297-1297", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_809 [label="'\\'", span="1300-1300", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_811 [label="'\u0085'", span="1303-1303", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_813 [label="'\u2028'", span="1306-1306", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_815 [label="'\u2029'", span="1309-1309", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_817 [label="'\''", span="1312-1312", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_819 [label="''''", span="1316-1316", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_822 [label="unicodeBuffer == null", span="1323-1323", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_844 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", span="1261-1261", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="PerformanceTests.cs"];
m19_478 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="398-398", cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="PerformanceTests.cs"];
m19_845 [label="Entry System.IO.TextWriter.Write(char)", span="0-0", cluster="System.IO.TextWriter.Write(char)", file="PerformanceTests.cs"];
m19_300 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", span="457-457", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="PerformanceTests.cs"];
m19_303 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="462-462", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="PerformanceTests.cs"];
m19_302 [label="StringWriter sw = new StringWriter(sb)", span="460-460", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="PerformanceTests.cs"];
m19_304 [label="jsonWriter.Formatting = Formatting.Indented", span="464-464", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="PerformanceTests.cs"];
m19_305 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="465-465", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="PerformanceTests.cs"];
m19_306 [label="jsonWriter.WriteStartArray()", span="467-467", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="PerformanceTests.cs"];
m19_307 [label="jsonWriter.WriteValue(double.NaN)", span="468-468", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="PerformanceTests.cs"];
m19_308 [label="jsonWriter.WriteValue(double.PositiveInfinity)", span="469-469", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="PerformanceTests.cs"];
m19_309 [label="jsonWriter.WriteValue(double.NegativeInfinity)", span="470-470", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="PerformanceTests.cs"];
m19_310 [label="jsonWriter.WriteValue(float.NaN)", span="471-471", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="PerformanceTests.cs"];
m19_311 [label="jsonWriter.WriteValue(float.PositiveInfinity)", span="472-472", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="PerformanceTests.cs"];
m19_312 [label="jsonWriter.WriteValue(float.NegativeInfinity)", span="473-473", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="PerformanceTests.cs"];
m19_313 [label="jsonWriter.WriteEndArray()", span="474-474", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="PerformanceTests.cs"];
m19_314 [label="jsonWriter.Flush()", span="476-476", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="PerformanceTests.cs"];
m19_316 [label="string result = sb.ToString()", span="487-487", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="PerformanceTests.cs"];
m19_301 [label="StringBuilder sb = new StringBuilder()", span="459-459", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="PerformanceTests.cs"];
m19_315 [label="string expected = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity,\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="479-486", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="PerformanceTests.cs"];
m19_317 [label="StringAssert.AreEqual(expected, result)", span="489-489", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="PerformanceTests.cs"];
m19_318 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", span="457-457", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="PerformanceTests.cs"];
m19_347 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float?)", span="1031-1031", cluster="Newtonsoft.Json.JsonWriter.WriteValue(float?)", file="PerformanceTests.cs"];
m19_63 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(object)", span="319-319", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="PerformanceTests.cs"];
m19_93 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="878-878", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="PerformanceTests.cs"];
m19_661 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteNull()", span="337-337", cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="PerformanceTests.cs"];
m19_847 [label="Entry string.ToCharArray()", span="0-0", cluster="string.ToCharArray()", file="PerformanceTests.cs"];
m19_143 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char?)", span="1092-1092", cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="PerformanceTests.cs"];
m19_270 [label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="425-425", cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="PerformanceTests.cs"];
m19_53 [label="Entry Newtonsoft.Json.JsonTextWriter.Close()", span="149-149", cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="PerformanceTests.cs"];
m19_908 [label="Entry Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", span="1434-1434", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="PerformanceTests.cs"];
m19_660 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", span="185-185", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="PerformanceTests.cs"];
m19_749 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", span="632-632", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="PerformanceTests.cs"];
m19_715 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", span="1148-1148", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="PerformanceTests.cs"];
m19_722 [label="Assert.AreEqual(''{'Blah':null}'', sw.ToString())", span="1158-1158", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="PerformanceTests.cs"];
m19_717 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1151-1151", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="PerformanceTests.cs"];
m19_716 [label="StringWriter sw = new StringWriter()", span="1150-1150", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="PerformanceTests.cs"];
m19_721 [label="writer.WriteEnd()", span="1156-1156", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="PerformanceTests.cs"];
m19_718 [label="writer.QuoteChar = '\''", span="1152-1152", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="PerformanceTests.cs"];
m19_719 [label="writer.WriteStartObject()", span="1154-1154", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="PerformanceTests.cs"];
m19_720 [label="writer.WritePropertyName(''Blah'')", span="1155-1155", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="PerformanceTests.cs"];
m19_723 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", span="1148-1148", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="PerformanceTests.cs"];
m19_575 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="387-387", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="PerformanceTests.cs"];
m19_884 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="860-860", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="PerformanceTests.cs"];
m19_149 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int?)", span="981-981", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="PerformanceTests.cs"];
m19_148 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", span="1080-1080", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="PerformanceTests.cs"];
m19_13 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="PerformanceTests.cs"];
m19_99 [label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="783-783", cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="PerformanceTests.cs"];
m19_223 [label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1240-1240", cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="PerformanceTests.cs"];
m19_899 [label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", span="1486-1486", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="PerformanceTests.cs"];
m19_900 [label="SetWriteState(JsonToken.PropertyName, name)", span="1488-1488", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="PerformanceTests.cs"];
m19_901 [label=QuoteName, span="1490-1490", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="PerformanceTests.cs"];
m19_902 [label="_writer.Write(QuoteChar)", span="1491-1491", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="PerformanceTests.cs"];
m19_903 [label="_writer.Write(new string(name.ToCharArray().Reverse().ToArray()))", span="1493-1493", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="PerformanceTests.cs"];
m19_904 [label=QuoteName, span="1495-1495", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="PerformanceTests.cs"];
m19_905 [label="_writer.Write(QuoteChar)", span="1496-1496", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="PerformanceTests.cs"];
m19_906 [label="_writer.Write(':')", span="1498-1498", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="PerformanceTests.cs"];
m19_907 [label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", span="1486-1486", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="PerformanceTests.cs"];
m19_101 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="PerformanceTests.cs"];
m19_92 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="813-813", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="PerformanceTests.cs"];
m19_881 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="PerformanceTests.cs"];
m19_866 [label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", span="1476-1476", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", file="PerformanceTests.cs"];
m19_895 [label="_writer = textWriter", span="1478-1478", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", file="PerformanceTests.cs"];
m19_896 [label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", span="1476-1476", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", file="PerformanceTests.cs"];
m19_23 [label="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>", span="", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="PerformanceTests.cs"];
m19_32 [label="Assert.AreEqual(@''{name:''''value''''}'', sb.ToString())", span="102-102", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="PerformanceTests.cs"];
m19_26 [label="JsonTextWriter writer = new JsonTextWriter(sw) { QuoteName = false }", span="92-92", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="PerformanceTests.cs"];
m19_24 [label="StringBuilder sb = new StringBuilder()", span="90-90", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="PerformanceTests.cs"];
m19_31 [label="writer.Flush()", span="100-100", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="PerformanceTests.cs"];
m19_25 [label="StringWriter sw = new StringWriter(sb)", span="91-91", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="PerformanceTests.cs"];
m19_27 [label="writer.WriteStartObject()", span="94-94", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="PerformanceTests.cs"];
m19_28 [label="writer.WritePropertyName(''name'')", span="96-96", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="PerformanceTests.cs"];
m19_29 [label="writer.WriteValue(''value'')", span="97-97", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="PerformanceTests.cs"];
m19_30 [label="writer.WriteEndObject()", span="99-99", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="PerformanceTests.cs"];
m19_33 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", span="88-88", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="PerformanceTests.cs"];
m19_222 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="PerformanceTests.cs"];
m19_479 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", span="754-754", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_501 [label="Assert.AreEqual(@''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN]'', sb.ToString())", span="784-784", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_482 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="759-759", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_480 [label="StringBuilder sb = new StringBuilder()", span="756-756", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_500 [label="jsonWriter.WriteEndArray()", span="781-781", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_481 [label="StringWriter sw = new StringWriter(sb)", span="757-757", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_483 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="761-761", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_484 [label="jsonWriter.WriteStartArray()", span="763-763", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_485 [label="jsonWriter.WriteValue(0.0)", span="765-765", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_486 [label="jsonWriter.WriteValue(0f)", span="766-766", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_487 [label="jsonWriter.WriteValue(0.1)", span="767-767", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_488 [label="jsonWriter.WriteValue(1.0)", span="768-768", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_489 [label="jsonWriter.WriteValue(1.000001)", span="769-769", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_490 [label="jsonWriter.WriteValue(0.000001)", span="770-770", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_491 [label="jsonWriter.WriteValue(double.Epsilon)", span="771-771", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_492 [label="jsonWriter.WriteValue(double.PositiveInfinity)", span="772-772", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_493 [label="jsonWriter.WriteValue(double.NegativeInfinity)", span="773-773", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_494 [label="jsonWriter.WriteValue(double.NaN)", span="774-774", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_495 [label="jsonWriter.WriteValue(double.MaxValue)", span="775-775", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_496 [label="jsonWriter.WriteValue(double.MinValue)", span="776-776", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_497 [label="jsonWriter.WriteValue(float.PositiveInfinity)", span="777-777", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_498 [label="jsonWriter.WriteValue(float.NegativeInfinity)", span="778-778", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_499 [label="jsonWriter.WriteValue(float.NaN)", span="779-779", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_502 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", span="754-754", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="PerformanceTests.cs"];
m19_37 [label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="141-141", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="PerformanceTests.cs"];
m19_100 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="PerformanceTests.cs"];
m19_920 [label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="1520-1520", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="PerformanceTests.cs"];
m19_922 [label="_writer.Write(''}}}'')", span="1523-1523", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="PerformanceTests.cs"];
m19_923 [label="base.WriteEnd(token)", span="1525-1525", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="PerformanceTests.cs"];
m19_921 [label="token == JsonToken.EndObject", span="1522-1522", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="PerformanceTests.cs"];
m19_924 [label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="1520-1520", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="PerformanceTests.cs"];
m19_871 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", span="1398-1398", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="PerformanceTests.cs"];
m19_876 [label="var writer = new JsonTextWriter(stringWriter) { QuoteName = false }", span="1411-1411", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="PerformanceTests.cs"];
m19_875 [label="var stringWriter = new StringWriter()", span="1409-1409", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="PerformanceTests.cs"];
m19_877 [label="serializer.Serialize(writer, d)", span="1413-1413", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="PerformanceTests.cs"];
m19_878 [label="writer.Close()", span="1414-1414", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="PerformanceTests.cs"];
m19_879 [label="StringAssert.AreEqual(@''{\r\n  a: 1\r\n}'', stringWriter.ToString())", span="1417-1419", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="PerformanceTests.cs"];
m19_874 [label="var serializer = JsonSerializer.Create(jsonSerializerSettings)", span="1408-1408", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="PerformanceTests.cs"];
m19_872 [label="var d = new Dictionary<string, int>\r\n            {\r\n                { ''a'', 1 },\r\n            }", span="1400-1403", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="PerformanceTests.cs"];
m19_873 [label="var jsonSerializerSettings = new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n            }", span="1404-1407", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="PerformanceTests.cs"];
m19_880 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", span="1398-1398", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="PerformanceTests.cs"];
m19_536 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", span="848-848", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="PerformanceTests.cs"];
m19_537 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                StringBuilder sb = new StringBuilder();\r\n                StringWriter sw = new StringWriter(sb);\r\n\r\n                using (JsonTextWriter jsonWriter = new JsonTextWriter(sw))\r\n                {\r\n                    jsonWriter.Formatting = Formatting.Indented;\r\n                    jsonWriter.QuoteChar = '*';\r\n                }\r\n            }, @''Invalid JavaScript string quote character. Valid quote characters are ' and ''''.'')", span="850-860", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="PerformanceTests.cs"];
m19_538 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", span="848-848", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="PerformanceTests.cs"];
m19_869 [label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", span="1501-1501", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="PerformanceTests.cs"];
m19_912 [label="SetWriteState(JsonToken.Null, null)", span="1503-1503", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="PerformanceTests.cs"];
m19_913 [label="_writer.Write(''NULL!!!'')", span="1505-1505", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="PerformanceTests.cs"];
m19_914 [label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", span="1501-1501", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="PerformanceTests.cs"];
m19_745 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="PerformanceTests.cs"];
m19_156 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", span="1141-1141", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", file="PerformanceTests.cs"];
m19_404 [label="Entry Newtonsoft.Json.JsonWriter.WriteRaw(string)", span="792-792", cluster="Newtonsoft.Json.JsonWriter.WriteRaw(string)", file="PerformanceTests.cs"];
m19_224 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="324-324", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="PerformanceTests.cs"];
m19_539 [label="Entry lambda expression", span="850-860", cluster="lambda expression", file="PerformanceTests.cs"];
m19_177 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="248-248", cluster="lambda expression", file="PerformanceTests.cs"];
m19_530 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="835-835", cluster="lambda expression", file="PerformanceTests.cs"];
m19_542 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="855-855", cluster="lambda expression", file="PerformanceTests.cs"];
m19_529 [label="StringWriter sw = new StringWriter(sb)", span="833-833", cluster="lambda expression", file="PerformanceTests.cs"];
m19_541 [label="StringWriter sw = new StringWriter(sb)", span="853-853", cluster="lambda expression", file="PerformanceTests.cs"];
m19_176 [label="StringWriter sw = new StringWriter()", span="247-247", cluster="lambda expression", file="PerformanceTests.cs"];
m19_178 [label="jsonWriter.WriteStartArray()", span="250-250", cluster="lambda expression", file="PerformanceTests.cs"];
m19_179 [label="jsonWriter.WriteValue(new Version(1, 1, 1, 1))", span="251-251", cluster="lambda expression", file="PerformanceTests.cs"];
m19_180 [label="jsonWriter.WriteEndArray()", span="252-252", cluster="lambda expression", file="PerformanceTests.cs"];
m19_531 [label="jsonWriter.WriteStartArray()", span="837-837", cluster="lambda expression", file="PerformanceTests.cs"];
m19_532 [label="jsonWriter.WriteValue(0.0)", span="839-839", cluster="lambda expression", file="PerformanceTests.cs"];
m19_533 [label="jsonWriter.WriteEndArray()", span="841-841", cluster="lambda expression", file="PerformanceTests.cs"];
m19_534 [label="jsonWriter.WriteEndArray()", span="842-842", cluster="lambda expression", file="PerformanceTests.cs"];
m19_543 [label="jsonWriter.Formatting = Formatting.Indented", span="857-857", cluster="lambda expression", file="PerformanceTests.cs"];
m19_544 [label="jsonWriter.QuoteChar = '*'", span="858-858", cluster="lambda expression", file="PerformanceTests.cs"];
m19_528 [label="StringBuilder sb = new StringBuilder()", span="832-832", cluster="lambda expression", file="PerformanceTests.cs"];
m19_540 [label="StringBuilder sb = new StringBuilder()", span="852-852", cluster="lambda expression", file="PerformanceTests.cs"];
m19_175 [label="Entry lambda expression", span="245-254", cluster="lambda expression", file="PerformanceTests.cs"];
m19_181 [label="Exit lambda expression", span="245-254", cluster="lambda expression", file="PerformanceTests.cs"];
m19_535 [label="Exit lambda expression", span="830-844", cluster="lambda expression", file="PerformanceTests.cs"];
m19_527 [label="Entry lambda expression", span="830-844", cluster="lambda expression", file="PerformanceTests.cs"];
m19_545 [label="Exit lambda expression", span="850-860", cluster="lambda expression", file="PerformanceTests.cs"];
m19_868 [label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", span="1481-1481", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", file="PerformanceTests.cs"];
m19_897 [label="WritePropertyName(name, true)", span="1483-1483", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", file="PerformanceTests.cs"];
m19_898 [label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", span="1481-1481", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", file="PerformanceTests.cs"];
m19_159 [label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="PerformanceTests.cs"];
m19_321 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", span="493-493", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_324 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="498-498", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_323 [label="StringWriter sw = new StringWriter(sb)", span="496-496", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_325 [label="jsonWriter.Formatting = Formatting.Indented", span="500-500", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_326 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.DefaultValue", span="501-501", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_327 [label="jsonWriter.WriteStartArray()", span="503-503", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_328 [label="jsonWriter.WriteValue(double.NaN)", span="504-504", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_329 [label="jsonWriter.WriteValue(double.PositiveInfinity)", span="505-505", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_330 [label="jsonWriter.WriteValue(double.NegativeInfinity)", span="506-506", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_331 [label="jsonWriter.WriteValue(float.NaN)", span="507-507", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_332 [label="jsonWriter.WriteValue(float.PositiveInfinity)", span="508-508", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_333 [label="jsonWriter.WriteValue(float.NegativeInfinity)", span="509-509", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_334 [label="jsonWriter.WriteValue((double?)double.NaN)", span="510-510", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_335 [label="jsonWriter.WriteValue((double?)double.PositiveInfinity)", span="511-511", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_336 [label="jsonWriter.WriteValue((double?)double.NegativeInfinity)", span="512-512", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_337 [label="jsonWriter.WriteValue((float?)float.NaN)", span="513-513", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_338 [label="jsonWriter.WriteValue((float?)float.PositiveInfinity)", span="514-514", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_339 [label="jsonWriter.WriteValue((float?)float.NegativeInfinity)", span="515-515", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_340 [label="jsonWriter.WriteEndArray()", span="516-516", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_341 [label="jsonWriter.Flush()", span="518-518", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_343 [label="string result = sb.ToString()", span="535-535", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_322 [label="StringBuilder sb = new StringBuilder()", span="495-495", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_342 [label="string expected = @''[\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  null,\r\n  null,\r\n  null,\r\n  null,\r\n  null,\r\n  null\r\n]''", span="521-534", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_344 [label="StringAssert.AreEqual(expected, result)", span="537-537", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_345 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", span="493-493", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="PerformanceTests.cs"];
m19_406 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", span="640-640", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="PerformanceTests.cs"];
m19_409 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="645-645", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="PerformanceTests.cs"];
m19_408 [label="StringWriter sw = new StringWriter(sb)", span="643-643", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="PerformanceTests.cs"];
m19_410 [label="jsonWriter.Formatting = Formatting.Indented", span="647-647", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="PerformanceTests.cs"];
m19_411 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="648-648", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="PerformanceTests.cs"];
m19_412 [label="jsonWriter.WriteStartArray()", span="650-650", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="PerformanceTests.cs"];
m19_413 [label="jsonWriter.WriteValue(double.NaN)", span="651-651", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="PerformanceTests.cs"];
m19_414 [label="jsonWriter.WriteRaw('',[1,2,3,4,5]'')", span="652-652", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="PerformanceTests.cs"];
m19_415 [label="jsonWriter.WriteRaw('',[1,2,3,4,5]'')", span="653-653", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="PerformanceTests.cs"];
m19_416 [label="jsonWriter.WriteValue(float.NaN)", span="654-654", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="PerformanceTests.cs"];
m19_417 [label="jsonWriter.WriteEndArray()", span="655-655", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="PerformanceTests.cs"];
m19_419 [label="string result = sb.ToString()", span="662-662", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="PerformanceTests.cs"];
m19_407 [label="StringBuilder sb = new StringBuilder()", span="642-642", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="PerformanceTests.cs"];
m19_418 [label="string expected = @''[\r\n  NaN,[1,2,3,4,5],[1,2,3,4,5],\r\n  NaN\r\n]''", span="658-661", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="PerformanceTests.cs"];
m19_420 [label="StringAssert.AreEqual(expected, result)", span="664-664", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="PerformanceTests.cs"];
m19_421 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", span="640-640", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="PerformanceTests.cs"];
m19_678 [label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", span="140-140", cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="PerformanceTests.cs"];
m19_225 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", span="323-323", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="PerformanceTests.cs"];
m19_228 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="328-328", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="PerformanceTests.cs"];
m19_232 [label="jsonWriter.WriteValue(''Intel'')", span="334-334", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="PerformanceTests.cs"];
m19_234 [label="jsonWriter.WriteValue(''500W'')", span="336-336", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="PerformanceTests.cs"];
m19_237 [label="jsonWriter.WriteValue(''DVD read/writer'')", span="339-339", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="PerformanceTests.cs"];
m19_239 [label="jsonWriter.WriteValue(''500 gigabyte hard drive'')", span="341-341", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="PerformanceTests.cs"];
m19_240 [label="jsonWriter.WriteValue(''200 gigabype hard drive'')", span="342-342", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="PerformanceTests.cs"];
m19_227 [label="StringWriter sw = new StringWriter(sb)", span="326-326", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="PerformanceTests.cs"];
m19_229 [label="jsonWriter.Formatting = Formatting.Indented", span="330-330", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="PerformanceTests.cs"];
m19_230 [label="jsonWriter.WriteStartObject()", span="332-332", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="PerformanceTests.cs"];
m19_231 [label="jsonWriter.WritePropertyName(''CPU'')", span="333-333", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="PerformanceTests.cs"];
m19_233 [label="jsonWriter.WritePropertyName(''PSU'')", span="335-335", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="PerformanceTests.cs"];
m19_235 [label="jsonWriter.WritePropertyName(''Drives'')", span="337-337", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="PerformanceTests.cs"];
m19_236 [label="jsonWriter.WriteStartArray()", span="338-338", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="PerformanceTests.cs"];
m19_238 [label="jsonWriter.WriteComment(''(broken)'')", span="340-340", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="PerformanceTests.cs"];
m19_241 [label="jsonWriter.Close()", span="343-343", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="PerformanceTests.cs"];
m19_243 [label="string result = sb.ToString()", span="356-356", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="PerformanceTests.cs"];
m19_226 [label="StringBuilder sb = new StringBuilder()", span="325-325", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="PerformanceTests.cs"];
m19_242 [label="string expected = @''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabype hard drive''''\r\n  ]\r\n}''", span="346-355", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="PerformanceTests.cs"];
m19_244 [label="StringAssert.AreEqual(expected, result)", span="358-358", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="PerformanceTests.cs"];
m19_245 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", span="323-323", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="PerformanceTests.cs"];
m19_221 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="PerformanceTests.cs"];
m19_51 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="PerformanceTests.cs"];
m19_444 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="PerformanceTests.cs"];
m19_724 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", span="1163-1163", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="PerformanceTests.cs"];
m19_726 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1166-1166", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="PerformanceTests.cs"];
m19_725 [label="StringWriter sw = new StringWriter()", span="1165-1165", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="PerformanceTests.cs"];
m19_727 [label="writer.Formatting = Formatting.Indented", span="1167-1167", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="PerformanceTests.cs"];
m19_728 [label="writer.QuoteChar = '\''", span="1168-1168", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="PerformanceTests.cs"];
m19_729 [label="writer.WriteStartArray()", span="1170-1170", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="PerformanceTests.cs"];
m19_730 [label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1172-1172", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="PerformanceTests.cs"];
m19_731 [label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1173-1173", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="PerformanceTests.cs"];
m19_732 [label="writer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1175-1175", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="PerformanceTests.cs"];
m19_733 [label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1176-1176", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="PerformanceTests.cs"];
m19_734 [label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1177-1177", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="PerformanceTests.cs"];
m19_735 [label="writer.DateFormatString = ''yyyy gg''", span="1179-1179", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="PerformanceTests.cs"];
m19_736 [label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1180-1180", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="PerformanceTests.cs"];
m19_737 [label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1181-1181", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="PerformanceTests.cs"];
m19_738 [label="writer.WriteValue(new byte[] { 1, 2, 3 })", span="1183-1183", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="PerformanceTests.cs"];
m19_739 [label="writer.WriteValue(TimeSpan.Zero)", span="1184-1184", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="PerformanceTests.cs"];
m19_740 [label="writer.WriteValue(new Uri(''http://www.google.com/''))", span="1185-1185", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="PerformanceTests.cs"];
m19_741 [label="writer.WriteValue(Guid.Empty)", span="1186-1186", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="PerformanceTests.cs"];
m19_742 [label="writer.WriteEnd()", span="1188-1188", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="PerformanceTests.cs"];
m19_743 [label="StringAssert.AreEqual(@''[\r\n  '2000-01-01T01:01:01Z',\r\n  '2000-01-01T01:01:01+00:00',\r\n  '\/Date(946688461000)\/',\r\n  '\/Date(946688461000+0000)\/',\r\n  '2000 A.D.',\r\n  '2000 A.D.',\r\n  'AQID',\r\n  '00:00:00',\r\n  'http://www.google.com/',\r\n  '00000000-0000-0000-0000-000000000000'\r\n]'', sw.ToString())", span="1190-1201", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="PerformanceTests.cs"];
m19_744 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", span="1163-1163", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="PerformanceTests.cs"];
m19_182 [label="Entry System.Version.Version(int, int, int, int)", span="0-0", cluster="System.Version.Version(int, int, int, int)", file="PerformanceTests.cs"];
m19_389 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", span="614-614", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="PerformanceTests.cs"];
m19_392 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="619-619", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="PerformanceTests.cs"];
m19_391 [label="StringWriter sw = new StringWriter(sb)", span="617-617", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="PerformanceTests.cs"];
m19_393 [label="jsonWriter.Formatting = Formatting.Indented", span="621-621", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="PerformanceTests.cs"];
m19_394 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="622-622", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="PerformanceTests.cs"];
m19_395 [label="jsonWriter.WriteRaw(''[1,2,3,4,5]'')", span="624-624", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="PerformanceTests.cs"];
m19_396 [label="jsonWriter.WriteWhitespace(''  '')", span="625-625", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="PerformanceTests.cs"];
m19_397 [label="jsonWriter.WriteStartArray()", span="626-626", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="PerformanceTests.cs"];
m19_398 [label="jsonWriter.WriteValue(double.NaN)", span="627-627", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="PerformanceTests.cs"];
m19_399 [label="jsonWriter.WriteEndArray()", span="628-628", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="PerformanceTests.cs"];
m19_401 [label="string result = sb.ToString()", span="634-634", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="PerformanceTests.cs"];
m19_390 [label="StringBuilder sb = new StringBuilder()", span="616-616", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="PerformanceTests.cs"];
m19_400 [label="string expected = @''[1,2,3,4,5]  [\r\n  NaN\r\n]''", span="631-633", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="PerformanceTests.cs"];
m19_402 [label="StringAssert.AreEqual(expected, result)", span="636-636", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="PerformanceTests.cs"];
m19_403 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", span="614-614", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="PerformanceTests.cs"];
m19_65 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", span="136-136", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_88 [label="Assert.AreEqual(expected, result)", span="166-166", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_68 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="141-141", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_71 [label="jsonWriter.WriteValue(''\r\n\t\f\b?{\\r\\n\''\''')", span="145-145", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_78 [label="jsonWriter.WriteValue((string)null)", span="152-152", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_80 [label="jsonWriter.WriteValue(''This is a string.'')", span="154-154", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_85 [label="string result = sb.ToString()", span="161-161", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_84 [label="string expected = @''[''''@'''',''''\r\n\t\f\b?{\\r\\n\''''''''',true,10,10.99,0.99,1E-18,0.000000000000000001,null,null,''''This is a string.'''',null,undefined]''", span="160-160", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_87 [label="Console.WriteLine(result)", span="164-164", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_67 [label="StringWriter sw = new StringWriter(sb)", span="139-139", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_69 [label="jsonWriter.WriteStartArray()", span="143-143", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_70 [label="jsonWriter.WriteValue('@')", span="144-144", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_72 [label="jsonWriter.WriteValue(true)", span="146-146", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_73 [label="jsonWriter.WriteValue(10)", span="147-147", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_74 [label="jsonWriter.WriteValue(10.99)", span="148-148", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_75 [label="jsonWriter.WriteValue(0.99)", span="149-149", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_76 [label="jsonWriter.WriteValue(0.000000000000000001d)", span="150-150", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_77 [label="jsonWriter.WriteValue(0.000000000000000001m)", span="151-151", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_79 [label="jsonWriter.WriteValue((object)null)", span="153-153", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_81 [label="jsonWriter.WriteNull()", span="155-155", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_82 [label="jsonWriter.WriteUndefined()", span="156-156", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_83 [label="jsonWriter.WriteEndArray()", span="157-157", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_66 [label="StringBuilder sb = new StringBuilder()", span="138-138", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_86 [label="Console.WriteLine(''ValueFormatting'')", span="163-163", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_89 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", span="136-136", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="PerformanceTests.cs"];
m19_271 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.State()", span="414-414", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_283 [label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="432-432", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", color=green, community=0, file="PerformanceTests.cs"];
m19_274 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="419-419", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_282 [label="jsonWriter.WriteValue(''Intel'')", span="431-431", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_284 [label="Assert.AreEqual(''CPU'', jsonWriter.Path)", span="433-433", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_273 [label="StringWriter sw = new StringWriter(sb)", span="417-417", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_275 [label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="421-421", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_276 [label="jsonWriter.WriteStartObject()", span="423-423", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_277 [label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="424-424", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_278 [label="Assert.AreEqual('''', jsonWriter.Path)", span="425-425", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_279 [label="jsonWriter.WritePropertyName(''CPU'')", span="427-427", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_280 [label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="428-428", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_281 [label="Assert.AreEqual(''CPU'', jsonWriter.Path)", span="429-429", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_285 [label="jsonWriter.WritePropertyName(''Drives'')", span="435-435", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_286 [label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="436-436", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_287 [label="Assert.AreEqual(''Drives'', jsonWriter.Path)", span="437-437", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_288 [label="jsonWriter.WriteStartArray()", span="439-439", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_289 [label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="440-440", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_290 [label="jsonWriter.WriteValue(''DVD read/writer'')", span="442-442", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_291 [label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="443-443", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_292 [label="Assert.AreEqual(''Drives[0]'', jsonWriter.Path)", span="444-444", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_293 [label="jsonWriter.WriteEnd()", span="446-446", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_294 [label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="447-447", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_295 [label="Assert.AreEqual(''Drives'', jsonWriter.Path)", span="448-448", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_296 [label="jsonWriter.WriteEndObject()", span="450-450", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_297 [label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="451-451", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_298 [label="Assert.AreEqual('''', jsonWriter.Path)", span="452-452", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_272 [label="StringBuilder sb = new StringBuilder()", span="416-416", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_299 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.State()", span="414-414", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="PerformanceTests.cs"];
m19_90 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="PerformanceTests.cs"];
m19_346 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double?)", span="1043-1043", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="PerformanceTests.cs"];
m19_679 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", span="1071-1071", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="PerformanceTests.cs"];
m19_683 [label="Assert.AreEqual(@''''''2000-01-01T01:01:01Z'''''', sw.ToString())", span="1081-1081", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="PerformanceTests.cs"];
m19_681 [label="JsonTextWriter writer = new JsonTextWriter(sw)\r\n            {\r\n                DateTimeZoneHandling = Json.DateTimeZoneHandling.Utc\r\n            }", span="1074-1077", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="PerformanceTests.cs"];
m19_680 [label="StringWriter sw = new StringWriter()", span="1073-1073", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="PerformanceTests.cs"];
m19_682 [label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified))", span="1079-1079", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="PerformanceTests.cs"];
m19_684 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", span="1071-1071", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="PerformanceTests.cs"];
m19_576 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", span="911-911", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="PerformanceTests.cs"];
m19_589 [label="Assert.AreEqual(text, Encoding.UTF8.GetString(d2, 0, d2.Length))", span="934-934", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="PerformanceTests.cs"];
m19_583 [label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="922-922", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="PerformanceTests.cs"];
m19_587 [label="Assert.AreEqual(expected, result)", span="930-930", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="PerformanceTests.cs"];
m19_581 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="919-919", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="PerformanceTests.cs"];
m19_579 [label="string text = ''Hello world.''", span="916-916", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="PerformanceTests.cs"];
m19_588 [label="byte[] d2 = Convert.FromBase64String(result.Trim(''''))", span="932-932", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="PerformanceTests.cs"];
m19_582 [label="jsonWriter.Formatting = Formatting.Indented", span="921-921", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="PerformanceTests.cs"];
m19_584 [label="jsonWriter.WriteValue(data)", span="924-924", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="PerformanceTests.cs"];
m19_586 [label="string result = sb.ToString()", span="928-928", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="PerformanceTests.cs"];
m19_585 [label="string expected = @''''''SGVsbG8gd29ybGQu''''''", span="927-927", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="PerformanceTests.cs"];
m19_578 [label="StringWriter sw = new StringWriter(sb)", span="914-914", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="PerformanceTests.cs"];
m19_580 [label="byte[] data = Encoding.UTF8.GetBytes(text)", span="917-917", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="PerformanceTests.cs"];
m19_577 [label="StringBuilder sb = new StringBuilder()", span="913-913", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="PerformanceTests.cs"];
m19_590 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", span="911-911", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="PerformanceTests.cs"];
m19_662 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", span="1046-1046", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="PerformanceTests.cs"];
m19_675 [label="Assert.AreEqual(valueStates, stateArray[(int)valueToken], ''Error for '' + valueToken + '' states.'')", span="1064-1064", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="PerformanceTests.cs"];
m19_663 [label="JsonWriter.State[][] stateArray = JsonWriter.BuildStateArray()", span="1048-1048", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="PerformanceTests.cs"];
m19_664 [label="var valueStates = JsonWriter.StateArrayTempate[7]", span="1050-1050", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="PerformanceTests.cs"];
m19_665 [label="EnumUtils.GetValues(typeof(JsonToken))", span="1052-1052", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="PerformanceTests.cs"];
m19_674 [label="JsonToken.Bytes", span="1063-1063", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="PerformanceTests.cs"];
m19_666 [label=valueToken, span="1054-1054", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="PerformanceTests.cs"];
m19_673 [label="JsonToken.Date", span="1062-1062", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="PerformanceTests.cs"];
m19_667 [label="JsonToken.Integer", span="1056-1056", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="PerformanceTests.cs"];
m19_672 [label="JsonToken.Undefined", span="1061-1061", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="PerformanceTests.cs"];
m19_668 [label="JsonToken.Float", span="1057-1057", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="PerformanceTests.cs"];
m19_671 [label="JsonToken.Null", span="1060-1060", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="PerformanceTests.cs"];
m19_669 [label="JsonToken.String", span="1058-1058", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="PerformanceTests.cs"];
m19_670 [label="JsonToken.Boolean", span="1059-1059", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="PerformanceTests.cs"];
m19_676 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", span="1046-1046", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="PerformanceTests.cs"];
m19_61 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="PerformanceTests.cs"];
m19_852 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", span="1378-1378", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="PerformanceTests.cs"];
m19_856 [label="Assert.AreEqual(WriteState.Object, writer.WriteState)", span="1383-1383", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="PerformanceTests.cs"];
m19_858 [label="Assert.AreEqual(WriteState.Property, writer.WriteState)", span="1385-1385", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="PerformanceTests.cs"];
m19_859 [label="Assert.AreEqual(''Property1'', writer.Path)", span="1386-1386", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="PerformanceTests.cs"];
m19_861 [label="Assert.AreEqual(WriteState.Object, writer.WriteState)", span="1388-1388", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="PerformanceTests.cs"];
m19_863 [label="Assert.AreEqual(WriteState.Start, writer.WriteState)", span="1390-1390", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="PerformanceTests.cs"];
m19_854 [label="CustomJsonTextWriter writer = new CustomJsonTextWriter(sw) { Formatting = Formatting.Indented }", span="1381-1381", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="PerformanceTests.cs"];
m19_855 [label="writer.WriteStartObject()", span="1382-1382", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="PerformanceTests.cs"];
m19_857 [label="writer.WritePropertyName(''Property1'')", span="1384-1384", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="PerformanceTests.cs"];
m19_860 [label="writer.WriteNull()", span="1387-1387", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="PerformanceTests.cs"];
m19_862 [label="writer.WriteEndObject()", span="1389-1389", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="PerformanceTests.cs"];
m19_864 [label="StringAssert.AreEqual(@''{{{\r\n  ''''1ytreporP'''': NULL!!!\r\n}}}'', sw.ToString())", span="1392-1394", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="PerformanceTests.cs"];
m19_853 [label="StringWriter sw = new StringWriter()", span="1380-1380", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="PerformanceTests.cs"];
m19_865 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", span="1378-1378", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="PerformanceTests.cs"];
m19_786 [label="Entry string.FormatWith(System.IFormatProvider, object, object, object, object)", span="62-62", cluster="string.FormatWith(System.IFormatProvider, object, object, object, object)", file="PerformanceTests.cs"];
m19_477 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="390-390", cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="PerformanceTests.cs"];
m19_885 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", span="1424-1424", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="PerformanceTests.cs"];
m19_889 [label="JsonTextWriter w = new JsonTextWriter(sw)", span="1450-1450", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="PerformanceTests.cs"];
m19_888 [label="StringWriter sw = new StringWriter()", span="1449-1449", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="PerformanceTests.cs"];
m19_890 [label="w.Formatting = Formatting.Indented", span="1451-1451", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="PerformanceTests.cs"];
m19_891 [label="w.WriteToken(r, true)", span="1453-1453", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="PerformanceTests.cs"];
m19_892 [label="StringAssert.AreEqual(@''/*comment*//*hi*/*/{/*comment*/\r\n  ''''Name'''': /*comment*/ true/*comment after true*//*comment after comma*/,\r\n  ''''ExpiryDate'''': /*comment*/ new Constructor(\r\n    /*comment*/,\r\n    null\r\n    /*comment*/\r\n  ),\r\n  ''''Price'''': 3.99,\r\n  ''''Sizes'''': /*comment*/ [\r\n    /*comment*/\r\n    ''''Small''''\r\n    /*comment*/\r\n  ]/*comment*/\r\n}/*comment *//*comment 1 */'', sw.ToString())", span="1455-1468", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="PerformanceTests.cs"];
m19_887 [label="JsonTextReader r = new JsonTextReader(new StringReader(json))", span="1447-1447", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="PerformanceTests.cs"];
m19_886 [label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn + @''\r\n,//comment after comma'' + StringUtils.CarriageReturnLineFeed + @''\r\n''''ExpiryDate''''://comment'' + StringUtils.LineFeed + @''\r\nnew\r\n'' + StringUtils.LineFeed +\r\n                  @''Constructor\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="1426-1445", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="PerformanceTests.cs"];
m19_893 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", span="1424-1424", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="PerformanceTests.cs"];
m19_447 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", span="703-703", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="PerformanceTests.cs"];
m19_459 [label="Assert.AreEqual(@''{''''d0'''':[1,2],''''d1'''':[1,2],''''d2'''':[1,2]}'', sb.ToString())", span="726-726", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="PerformanceTests.cs"];
m19_450 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="708-708", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="PerformanceTests.cs"];
m19_448 [label="StringBuilder sb = new StringBuilder()", span="705-705", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="PerformanceTests.cs"];
m19_458 [label="jsonWriter.WriteEndObject()", span="723-723", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="PerformanceTests.cs"];
m19_449 [label="StringWriter sw = new StringWriter(sb)", span="706-706", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="PerformanceTests.cs"];
m19_451 [label="int i = 0", span="710-710", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="PerformanceTests.cs"];
m19_453 [label="jsonWriter.WriteStartObject()", span="713-713", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="PerformanceTests.cs"];
m19_455 [label="jsonWriter.WritePropertyName(''d'' + i)", span="717-717", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="PerformanceTests.cs"];
m19_456 [label="jsonWriter.WriteRawValue(rawJson)", span="718-718", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="PerformanceTests.cs"];
m19_454 [label="i < 3", span="715-715", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="PerformanceTests.cs"];
m19_452 [label="string rawJson = ''[1,2]''", span="711-711", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="PerformanceTests.cs"];
m19_457 [label="i++", span="720-720", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="PerformanceTests.cs"];
m19_460 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", span="703-703", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="PerformanceTests.cs"];
m19_150 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(uint?)", span="994-994", cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="PerformanceTests.cs"];
m19_968 [label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", span="1604-1604", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="PerformanceTests.cs"];
m19_971 [label="throw new Exception(''Type not supported: '' + conversionType.FullName);", span="1609-1609", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="PerformanceTests.cs"];
m19_969 [label="conversionType == typeof(int)", span="1606-1606", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="PerformanceTests.cs"];
m19_970 [label="return _value;", span="1607-1607", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="PerformanceTests.cs"];
m19_972 [label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", span="1604-1604", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="PerformanceTests.cs"];
m19_849 [label="Entry string.Equals(string, string)", span="0-0", cluster="string.Equals(string, string)", file="PerformanceTests.cs"];
m19_698 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", span="1112-1112", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="PerformanceTests.cs"];
m19_707 [label="Assert.AreEqual(unicode, reader.ReadAsString())", span="1131-1131", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="PerformanceTests.cs"];
m19_704 [label="Assert.AreEqual(8, json.Length)", span="1126-1126", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="PerformanceTests.cs"];
m19_705 [label="Assert.AreEqual(@''''''\u5f20'''''', json)", span="1127-1127", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="PerformanceTests.cs"];
m19_712 [label="Assert.AreEqual(3, json.Length)", span="1143-1143", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="PerformanceTests.cs"];
m19_713 [label="Assert.AreEqual(''\''\u5f20\'''', json)", span="1144-1144", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="PerformanceTests.cs"];
m19_700 [label="JsonTextWriter writer = new JsonTextWriter(sw)\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeNonAscii\r\n            }", span="1115-1118", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="PerformanceTests.cs"];
m19_709 [label="writer = new JsonTextWriter(sw)\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.Default\r\n            }", span="1134-1137", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="PerformanceTests.cs"];
m19_701 [label="string unicode = ''\u5f20''", span="1120-1120", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="PerformanceTests.cs"];
m19_706 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1129-1129", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="PerformanceTests.cs"];
m19_708 [label="sw = new StringWriter()", span="1133-1133", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="PerformanceTests.cs"];
m19_703 [label="string json = sw.ToString()", span="1124-1124", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="PerformanceTests.cs"];
m19_711 [label="json = sw.ToString()", span="1141-1141", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="PerformanceTests.cs"];
m19_699 [label="StringWriter sw = new StringWriter()", span="1114-1114", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="PerformanceTests.cs"];
m19_702 [label="writer.WriteValue(unicode)", span="1122-1122", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="PerformanceTests.cs"];
m19_710 [label="writer.WriteValue(unicode)", span="1139-1139", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="PerformanceTests.cs"];
m19_714 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", span="1112-1112", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="PerformanceTests.cs"];
m19_434 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", span="689-689", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="PerformanceTests.cs"];
m19_441 [label="Assert.AreEqual(''1'', sw.ToString())", span="699-699", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="PerformanceTests.cs"];
m19_439 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="696-696", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="PerformanceTests.cs"];
m19_440 [label="writer.WriteToken(reader)", span="697-697", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="PerformanceTests.cs"];
m19_438 [label="StringWriter sw = new StringWriter()", span="695-695", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="PerformanceTests.cs"];
m19_435 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''[1,2,3,4,5]''))", span="691-691", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="PerformanceTests.cs"];
m19_437 [label="reader.Read()", span="693-693", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="PerformanceTests.cs"];
m19_436 [label="reader.Read()", span="692-692", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="PerformanceTests.cs"];
m19_442 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", span="689-689", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="PerformanceTests.cs"];
m19_95 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="869-869", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="PerformanceTests.cs"];
m19_97 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1216-1216", cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="PerformanceTests.cs"];
m19_171 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", span="243-243", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="PerformanceTests.cs"];
m19_172 [label="ExceptionAssert.Throws<JsonWriterException>(() =>\r\n            {\r\n                StringWriter sw = new StringWriter();\r\n                using (JsonTextWriter jsonWriter = new JsonTextWriter(sw))\r\n                {\r\n                    jsonWriter.WriteStartArray();\r\n                    jsonWriter.WriteValue(new Version(1, 1, 1, 1));\r\n                    jsonWriter.WriteEndArray();\r\n                }\r\n            }, @''Unsupported type: System.Version. Use the JsonSerializer class to get the object's JSON representation. Path ''.'')", span="245-254", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="PerformanceTests.cs"];
m19_173 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", span="243-243", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="PerformanceTests.cs"];
m19_146 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", span="1117-1117", cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="PerformanceTests.cs"];
m19_142 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="174-174", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="PerformanceTests.cs"];
m19_39 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", span="106-106", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="PerformanceTests.cs"];
m19_41 [label="JsonTextWriter writer = new JsonTextWriter(new StreamWriter(ms))", span="109-109", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="PerformanceTests.cs"];
m19_46 [label="writer = new JsonTextWriter(new StreamWriter(ms)) { CloseOutput = false }", span="116-116", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="PerformanceTests.cs"];
m19_40 [label="MemoryStream ms = new MemoryStream()", span="108-108", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="PerformanceTests.cs"];
m19_42 [label="Assert.IsTrue(ms.CanRead)", span="111-111", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="PerformanceTests.cs"];
m19_43 [label="writer.Close()", span="112-112", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="PerformanceTests.cs"];
m19_45 [label="ms = new MemoryStream()", span="115-115", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="PerformanceTests.cs"];
m19_47 [label="Assert.IsTrue(ms.CanRead)", span="118-118", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="PerformanceTests.cs"];
m19_48 [label="writer.Close()", span="119-119", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="PerformanceTests.cs"];
m19_44 [label="Assert.IsFalse(ms.CanRead)", span="113-113", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="PerformanceTests.cs"];
m19_49 [label="Assert.IsTrue(ms.CanRead)", span="120-120", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="PerformanceTests.cs"];
m19_50 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", span="106-106", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="PerformanceTests.cs"];
m19_685 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="PerformanceTests.cs"];
m19_38 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="PerformanceTests.cs"];
m19_524 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", span="828-828", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="PerformanceTests.cs"];
m19_525 [label="ExceptionAssert.Throws<JsonWriterException>(() =>\r\n            {\r\n                StringBuilder sb = new StringBuilder();\r\n                StringWriter sw = new StringWriter(sb);\r\n\r\n                using (JsonWriter jsonWriter = new JsonTextWriter(sw))\r\n                {\r\n                    jsonWriter.WriteStartArray();\r\n\r\n                    jsonWriter.WriteValue(0.0);\r\n\r\n                    jsonWriter.WriteEndArray();\r\n                    jsonWriter.WriteEndArray();\r\n                }\r\n            }, ''No token to close. Path ''.'')", span="830-844", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="PerformanceTests.cs"];
m19_526 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", span="828-828", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="PerformanceTests.cs"];
m19_592 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", span="583-583", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="PerformanceTests.cs"];
m19_591 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="PerformanceTests.cs"];
m19_846 [label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", span="126-126", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="PerformanceTests.cs"];
m19_94 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="822-822", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="PerformanceTests.cs"];
m19_615 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", span="973-973", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_623 [label="Assert.AreEqual('''', writer.Path)", span="986-986", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_625 [label="Assert.AreEqual(''[0]'', writer.Path)", span="988-988", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_627 [label="Assert.AreEqual(''[0].Property1'', writer.Path)", span="990-990", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_629 [label="Assert.AreEqual(''[0].Property1'', writer.Path)", span="992-992", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_631 [label="Assert.AreEqual(''[0].Property1[0]'', writer.Path)", span="994-994", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_633 [label="Assert.AreEqual(''[0].Property1[1]'', writer.Path)", span="996-996", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_635 [label="Assert.AreEqual(''[0].Property1[1][0]'', writer.Path)", span="998-998", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_637 [label="Assert.AreEqual(''[0].Property1[1][0][0]'', writer.Path)", span="1000-1000", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_639 [label="Assert.AreEqual(''[0]'', writer.Path)", span="1002-1002", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_641 [label="Assert.AreEqual(''[1]'', writer.Path)", span="1004-1004", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_643 [label="Assert.AreEqual(''[1].Property2'', writer.Path)", span="1006-1006", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_645 [label="Assert.AreEqual(''[1].Property2'', writer.Path)", span="1008-1008", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_647 [label="Assert.AreEqual(''[1].Property2[0]'', writer.Path)", span="1010-1010", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_649 [label="Assert.AreEqual(''[1].Property2[1]'', writer.Path)", span="1012-1012", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_651 [label="Assert.AreEqual(''[1].Property2[1][0]'', writer.Path)", span="1014-1014", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_653 [label="Assert.AreEqual(''[1].Property2[1]'', writer.Path)", span="1016-1016", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_655 [label="Assert.AreEqual(''[1]'', writer.Path)", span="1018-1018", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_657 [label="Assert.AreEqual('''', writer.Path)", span="1020-1020", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_620 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="981-981", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_622 [label="writer.WriteStartArray()", span="985-985", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_624 [label="writer.WriteStartObject()", span="987-987", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_626 [label="writer.WritePropertyName(''Property1'')", span="989-989", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_628 [label="writer.WriteStartArray()", span="991-991", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_630 [label="writer.WriteValue(1)", span="993-993", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_632 [label="writer.WriteStartArray()", span="995-995", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_634 [label="writer.WriteStartArray()", span="997-997", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_636 [label="writer.WriteStartArray()", span="999-999", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_638 [label="writer.WriteEndObject()", span="1001-1001", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_640 [label="writer.WriteStartObject()", span="1003-1003", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_642 [label="writer.WritePropertyName(''Property2'')", span="1005-1005", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_644 [label="writer.WriteStartConstructor(''Constructor1'')", span="1007-1007", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_646 [label="writer.WriteNull()", span="1009-1009", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_648 [label="writer.WriteStartArray()", span="1011-1011", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_650 [label="writer.WriteValue(1)", span="1013-1013", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_652 [label="writer.WriteEnd()", span="1015-1015", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_654 [label="writer.WriteEndObject()", span="1017-1017", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_656 [label="writer.WriteEndArray()", span="1019-1019", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_658 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Property1'''': [\r\n      1,\r\n      [\r\n        [\r\n          []\r\n        ]\r\n      ]\r\n    ]\r\n  },\r\n  {\r\n    ''''Property2'''': new Constructor1(\r\n      null,\r\n      [\r\n        1\r\n      ]\r\n    )\r\n  }\r\n]'', sb.ToString())", span="1023-1042", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_617 [label="StringWriter sw = new StringWriter(sb)", span="976-976", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_619 [label="byte[] data = Encoding.UTF8.GetBytes(text)", span="979-979", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_621 [label="writer.Formatting = Formatting.Indented", span="983-983", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_616 [label="StringBuilder sb = new StringBuilder()", span="975-975", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_618 [label="string text = ''Hello world.''", span="978-978", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_659 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", span="973-973", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="PerformanceTests.cs"];
m19_850 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)", file="PerformanceTests.cs"];
m19_174 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="351-351", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="PerformanceTests.cs"];
m19_199 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", span="283-283", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_216 [label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="304-304", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_202 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="288-288", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_206 [label="jsonWriter.WriteValue(''Intel'')", span="294-294", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_208 [label="jsonWriter.WriteValue(''500W'')", span="296-296", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_211 [label="jsonWriter.WriteValue(''DVD read/writer'')", span="299-299", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_213 [label="jsonWriter.WriteValue(''500 gigabyte hard drive'')", span="301-301", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_214 [label="jsonWriter.WriteValue(''200 gigabype hard drive'')", span="302-302", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_215 [label="jsonWriter.WriteEndObject()", span="303-303", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_217 [label="string expected = @''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabype hard drive''''\r\n  ]\r\n}''", span="307-316", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_201 [label="StringWriter sw = new StringWriter(sb)", span="286-286", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_203 [label="jsonWriter.Formatting = Formatting.Indented", span="290-290", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_204 [label="jsonWriter.WriteStartObject()", span="292-292", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_205 [label="jsonWriter.WritePropertyName(''CPU'')", span="293-293", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_207 [label="jsonWriter.WritePropertyName(''PSU'')", span="295-295", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_209 [label="jsonWriter.WritePropertyName(''Drives'')", span="297-297", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_210 [label="jsonWriter.WriteStartArray()", span="298-298", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_212 [label="jsonWriter.WriteComment(''(broken)'')", span="300-300", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_218 [label="string result = sb.ToString()", span="317-317", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_219 [label="StringAssert.AreEqual(expected, result)", span="319-319", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_200 [label="StringBuilder sb = new StringBuilder()", span="285-285", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_220 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", span="283-283", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="PerformanceTests.cs"];
m19_462 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", span="730-730", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="PerformanceTests.cs"];
m19_475 [label="Assert.AreEqual(@''{''''con'''':new Ext.data.JsonStore({''''aa'''':''''aa''''})}'', sb.ToString())", span="750-750", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="PerformanceTests.cs"];
m19_465 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="735-735", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="PerformanceTests.cs"];
m19_471 [label="jsonWriter.WriteValue(''aa'')", span="743-743", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="PerformanceTests.cs"];
m19_463 [label="StringBuilder sb = new StringBuilder()", span="732-732", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="PerformanceTests.cs"];
m19_474 [label="jsonWriter.WriteEndObject()", span="747-747", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="PerformanceTests.cs"];
m19_464 [label="StringWriter sw = new StringWriter(sb)", span="733-733", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="PerformanceTests.cs"];
m19_466 [label="jsonWriter.WriteStartObject()", span="737-737", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="PerformanceTests.cs"];
m19_467 [label="jsonWriter.WritePropertyName(''con'')", span="738-738", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="PerformanceTests.cs"];
m19_468 [label="jsonWriter.WriteStartConstructor(''Ext.data.JsonStore'')", span="740-740", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="PerformanceTests.cs"];
m19_469 [label="jsonWriter.WriteStartObject()", span="741-741", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="PerformanceTests.cs"];
m19_470 [label="jsonWriter.WritePropertyName(''aa'')", span="742-742", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="PerformanceTests.cs"];
m19_472 [label="jsonWriter.WriteEndObject()", span="744-744", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="PerformanceTests.cs"];
m19_473 [label="jsonWriter.WriteEndConstructor()", span="745-745", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="PerformanceTests.cs"];
m19_476 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", span="730-730", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="PerformanceTests.cs"];
m19_983 [label="out Newtonsoft.Json.Tests.ConvertibleInt", span="", file="PerformanceTests.cs"];
m19_982 [label="Newtonsoft.Json.Tests.CustomJsonTextWriter", span="", file="PerformanceTests.cs"];
m19_984 [label="Newtonsoft.Json.Tests.ConvertibleInt", span="", file="PerformanceTests.cs"];
m20_103 [label="Entry Unk.>", span="", cluster="Unk.>", file="Program.cs"];
m20_16 [label="Entry System.Console.ReadKey()", span="0-0", cluster="System.Console.ReadKey()", file="Program.cs"];
m20_0 [label="Entry Newtonsoft.Json.TestConsole.Program.Main(string[])", span="40-40", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m20_1 [label="Console.WriteLine(''Json.NET Test Console'')", span="42-42", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m20_2 [label="string version = FileVersionInfo.GetVersionInfo(typeof(JsonConvert).Assembly.Location).FileVersion", span="44-44", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m20_3 [label="Console.WriteLine(''Json.NET Version: '' + version)", span="45-45", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m20_4 [label="Console.ReadKey()", span="46-46", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m20_5 [label="Console.WriteLine(''Doing stuff...'')", span="48-48", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m20_6 [label="DiscriminatedUnionConverterTests t = new DiscriminatedUnionConverterTests()", span="58-58", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", color=red, community=0, file="Program.cs"];
m20_7 [label="t.SerializePerformance()", span="59-59", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", color=red, community=0, file="Program.cs"];
m20_8 [label="t.DeserializePerformance()", span="60-60", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", color=red, community=0, file="Program.cs"];
m20_9 [label="Console.WriteLine()", span="62-62", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m20_10 [label="Console.WriteLine(''Finished'')", span="63-63", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m20_11 [label="Console.WriteLine(''Press any key to exit'')", span="64-64", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m20_12 [label="Console.ReadKey()", span="65-65", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m20_13 [label="Exit Newtonsoft.Json.TestConsole.Program.Main(string[])", span="40-40", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m20_21 [label="Entry Newtonsoft.Json.TestConsole.Program.DeserializeJson()", span="68-68", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="Program.cs"];
m20_22 [label="PerformanceTests t = new PerformanceTests()", span="70-70", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="Program.cs"];
m20_23 [label="t.Iterations = 50000", span="71-71", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="Program.cs"];
m20_24 [label="t.Deserialize()", span="72-72", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="Program.cs"];
m20_25 [label="Exit Newtonsoft.Json.TestConsole.Program.DeserializeJson()", span="68-68", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="Program.cs"];
m20_102 [label="Entry JavaScriptSerializer.cstr", span="", cluster="JavaScriptSerializer.cstr", file="Program.cs"];
m20_32 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", span="182-182", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", file="Program.cs"];
m20_19 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", span="114-114", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="Program.cs"];
m20_26 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.PerformanceTests()", span="66-66", cluster="Newtonsoft.Json.Tests.PerformanceTests.PerformanceTests()", file="Program.cs"];
m20_79 [label="Entry System.IO.File.OpenText(string)", span="0-0", cluster="System.IO.File.OpenText(string)", file="Program.cs"];
m20_56 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="445-445", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="Program.cs"];
m20_33 [label="Entry Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", span="81-81", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m20_34 [label="var json = System.IO.File.ReadAllText(''large.json'')", span="83-83", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m20_35 [label="IList<PerformanceTests.RootObject> o = JsonConvert.DeserializeObject<IList<PerformanceTests.RootObject>>(json)", span="85-85", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m20_36 [label="Console.WriteLine(''Press any key to start serialize'')", span="87-87", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m20_46 [label="serializer.Serialize(file, o)", span="100-100", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m20_37 [label="Console.ReadKey()", span="88-88", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m20_38 [label="Console.WriteLine(''Serializing...'')", span="89-89", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m20_39 [label="Stopwatch sw = new Stopwatch()", span="91-91", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m20_40 [label="sw.Start()", span="92-92", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m20_48 [label="sw.Stop()", span="104-104", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m20_49 [label="Console.WriteLine(''Finished. Total seconds: '' + sw.Elapsed.TotalSeconds)", span="106-106", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m20_41 [label="int i = 0", span="94-94", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m20_42 [label="i < 10", span="94-94", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m20_47 [label="i++", span="94-94", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m20_43 [label="StreamWriter file = System.IO.File.CreateText(''largewrite.json'')", span="96-96", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m20_44 [label="JsonSerializer serializer = new JsonSerializer()", span="98-98", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m20_45 [label="serializer.Formatting = Formatting.Indented", span="99-99", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m20_50 [label="Exit Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", span="81-81", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m20_82 [label="Entry Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", span="140-140", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m20_83 [label="string json = System.IO.File.ReadAllText(''large.json'')", span="142-142", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m20_84 [label="JavaScriptSerializer s = new JavaScriptSerializer()", span="144-144", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m20_86 [label="s.Deserialize<IList<PerformanceTests.RootObject>>(json)", span="146-146", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m20_85 [label="s.MaxJsonLength = int.MaxValue", span="145-145", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m20_87 [label="Console.WriteLine(''Press any key to start deserialization'')", span="148-148", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m20_88 [label="Console.ReadKey()", span="149-149", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m20_89 [label="Console.WriteLine(''Deserializing...'')", span="150-150", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m20_90 [label="Stopwatch sw = new Stopwatch()", span="152-152", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m20_91 [label="sw.Start()", span="153-153", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m20_99 [label="sw.Stop()", span="164-164", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m20_100 [label="Console.WriteLine(''Finished. Total seconds: '' + sw.Elapsed.TotalSeconds)", span="166-166", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m20_92 [label="int i = 0", span="155-155", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m20_93 [label="i < 5", span="155-155", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m20_98 [label="i++", span="155-155", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m20_94 [label="json = System.IO.File.ReadAllText(''large.json'')", span="157-157", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m20_95 [label="s = new JavaScriptSerializer()", span="159-159", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m20_97 [label="s.Deserialize<IList<PerformanceTests.RootObject>>(json)", span="161-161", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m20_96 [label="s.MaxJsonLength = int.MaxValue", span="160-160", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m20_101 [label="Exit Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", span="140-140", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m20_14 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="Program.cs"];
m20_27 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", span="219-219", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="Program.cs"];
m20_55 [label="Entry System.IO.File.CreateText(string)", span="0-0", cluster="System.IO.File.CreateText(string)", file="Program.cs"];
m20_18 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", span="90-90", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="Program.cs"];
m20_51 [label="Entry System.IO.File.ReadAllText(string)", span="0-0", cluster="System.IO.File.ReadAllText(string)", file="Program.cs"];
m20_17 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DiscriminatedUnionConverterTests()", span="41-41", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DiscriminatedUnionConverterTests()", file="Program.cs"];
m20_52 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="Program.cs"];
m20_15 [label="Entry System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", span="0-0", cluster="System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", file="Program.cs"];
m20_81 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="696-696", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="Program.cs"];
m20_54 [label="Entry System.Diagnostics.Stopwatch.Start()", span="0-0", cluster="System.Diagnostics.Stopwatch.Start()", file="Program.cs"];
m20_57 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="839-839", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="Program.cs"];
m20_80 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="Program.cs"];
m20_28 [label="Entry Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", span="75-75", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="Program.cs"];
m20_29 [label="PerformanceTests t = new PerformanceTests()", span="77-77", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="Program.cs"];
m20_30 [label="t.DeserializeLargeJson()", span="78-78", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="Program.cs"];
m20_31 [label="Exit Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", span="75-75", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="Program.cs"];
m20_53 [label="Entry System.Diagnostics.Stopwatch.Stopwatch()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stopwatch()", file="Program.cs"];
m20_59 [label="Entry Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", span="109-109", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m20_60 [label="var jsonFile = System.IO.File.OpenText(''large.json'')", span="111-111", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m20_61 [label="JsonTextReader jsonTextReader = new JsonTextReader(jsonFile)", span="112-112", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m20_62 [label="JsonSerializer serializer = new JsonSerializer()", span="114-114", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m20_63 [label="serializer.Deserialize<IList<PerformanceTests.RootObject>>(jsonTextReader)", span="115-115", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m20_64 [label="Console.WriteLine(''Press any key to start deserialization'')", span="118-118", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m20_65 [label="Console.ReadKey()", span="119-119", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m20_66 [label="Console.WriteLine(''Deserializing...'')", span="120-120", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m20_67 [label="Stopwatch sw = new Stopwatch()", span="122-122", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m20_68 [label="sw.Start()", span="123-123", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m20_76 [label="sw.Stop()", span="135-135", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m20_77 [label="Console.WriteLine(''Finished. Total seconds: '' + sw.Elapsed.TotalSeconds)", span="137-137", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m20_69 [label="int i = 0", span="125-125", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m20_70 [label="i < 5", span="125-125", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m20_75 [label="i++", span="125-125", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m20_71 [label="var jsonFile = System.IO.File.OpenText(''large.json'')", span="127-127", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m20_72 [label="JsonTextReader jsonTextReader = new JsonTextReader(jsonFile)", span="128-128", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m20_73 [label="JsonSerializer serializer = new JsonSerializer()", span="130-130", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m20_74 [label="serializer.Deserialize<IList<PerformanceTests.RootObject>>(jsonTextReader)", span="131-131", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m20_78 [label="Exit Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", span="109-109", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m20_58 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="Program.cs"];
m20_20 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="Program.cs"];
m22_18 [label="Entry System.Array.IndexOf<T>(T[], T, int, int)", span="0-0", cluster="System.Array.IndexOf<T>(T[], T, int, int)", file="StringReference.cs"];
m22_12 [label="Entry Newtonsoft.Json.Utilities.StringReferenceExtensions.IndexOf(Newtonsoft.Json.Utilities.StringReference, char, int, int)", span="75-75", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.IndexOf(Newtonsoft.Json.Utilities.StringReference, char, int, int)", file="StringReference.cs"];
m22_13 [label="int index = Array.IndexOf(s.Chars, c, s.StartIndex + startIndex, length)", span="77-77", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.IndexOf(Newtonsoft.Json.Utilities.StringReference, char, int, int)", color=green, community=0, file="StringReference.cs"];
m22_14 [label="index == -1", span="78-78", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.IndexOf(Newtonsoft.Json.Utilities.StringReference, char, int, int)", color=green, community=0, file="StringReference.cs"];
m22_16 [label="return index - s.StartIndex;", span="83-83", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.IndexOf(Newtonsoft.Json.Utilities.StringReference, char, int, int)", color=green, community=0, file="StringReference.cs"];
m22_15 [label="return -1;", span="80-80", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.IndexOf(Newtonsoft.Json.Utilities.StringReference, char, int, int)", color=green, community=0, file="StringReference.cs"];
m22_17 [label="Exit Newtonsoft.Json.Utilities.StringReferenceExtensions.IndexOf(Newtonsoft.Json.Utilities.StringReference, char, int, int)", span="75-75", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.IndexOf(Newtonsoft.Json.Utilities.StringReference, char, int, int)", file="StringReference.cs"];
m22_0 [label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", span="48-48", cluster="Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", file="StringReference.cs"];
m22_1 [label="_chars = chars", span="50-50", cluster="Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", file="StringReference.cs"];
m22_2 [label="_startIndex = startIndex", span="51-51", cluster="Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", file="StringReference.cs"];
m22_3 [label="_length = length", span="52-52", cluster="Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", file="StringReference.cs"];
m22_4 [label="Exit Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", span="48-48", cluster="Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", file="StringReference.cs"];
m22_8 [label="Entry string.String(char[], int, int)", span="0-0", cluster="string.String(char[], int, int)", file="StringReference.cs"];
m22_9 [label="out Newtonsoft.Json.Utilities.StringReference", span="", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.IndexOf(Newtonsoft.Json.Utilities.StringReference, char)", file="StringReference.cs"];
m22_10 [label="Newtonsoft.Json.Utilities.StringReference", span="", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.IndexOf(Newtonsoft.Json.Utilities.StringReference, char)", color=green, community=0, file="StringReference.cs"];
m22_11 [label="Exit Newtonsoft.Json.Utilities.StringReferenceExtensions.IndexOf(Newtonsoft.Json.Utilities.StringReference, char)", span="70-70", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.IndexOf(Newtonsoft.Json.Utilities.StringReference, char)", file="StringReference.cs"];
m22_19 [label="Entry Newtonsoft.Json.Utilities.StringReferenceExtensions.StartsWith(Newtonsoft.Json.Utilities.StringReference, string)", span="86-86", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.StartsWith(Newtonsoft.Json.Utilities.StringReference, string)", file="StringReference.cs"];
m22_24 [label="i < text.Length", span="95-95", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.StartsWith(Newtonsoft.Json.Utilities.StringReference, string)", color=green, community=0, file="StringReference.cs"];
m22_20 [label="text.Length > s.Length", span="88-88", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.StartsWith(Newtonsoft.Json.Utilities.StringReference, string)", color=green, community=0, file="StringReference.cs"];
m22_21 [label="return false;", span="90-90", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.StartsWith(Newtonsoft.Json.Utilities.StringReference, string)", color=green, community=0, file="StringReference.cs"];
m22_22 [label="char[] chars = s.Chars", span="93-93", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.StartsWith(Newtonsoft.Json.Utilities.StringReference, string)", color=green, community=0, file="StringReference.cs"];
m22_23 [label="int i = 0", span="95-95", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.StartsWith(Newtonsoft.Json.Utilities.StringReference, string)", color=green, community=0, file="StringReference.cs"];
m22_27 [label="i++", span="95-95", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.StartsWith(Newtonsoft.Json.Utilities.StringReference, string)", color=green, community=0, file="StringReference.cs"];
m22_25 [label="text[i] != chars[i + s.StartIndex]", span="97-97", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.StartsWith(Newtonsoft.Json.Utilities.StringReference, string)", color=green, community=0, file="StringReference.cs"];
m22_28 [label="return true;", span="103-103", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.StartsWith(Newtonsoft.Json.Utilities.StringReference, string)", color=green, community=0, file="StringReference.cs"];
m22_26 [label="return false;", span="99-99", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.StartsWith(Newtonsoft.Json.Utilities.StringReference, string)", color=green, community=0, file="StringReference.cs"];
m22_29 [label="Exit Newtonsoft.Json.Utilities.StringReferenceExtensions.StartsWith(Newtonsoft.Json.Utilities.StringReference, string)", span="86-86", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.StartsWith(Newtonsoft.Json.Utilities.StringReference, string)", file="StringReference.cs"];
m22_5 [label="Entry Newtonsoft.Json.Utilities.StringReference.ToString()", span="55-55", cluster="Newtonsoft.Json.Utilities.StringReference.ToString()", file="StringReference.cs"];
m22_6 [label="return new string(_chars, _startIndex, _length);", span="57-57", cluster="Newtonsoft.Json.Utilities.StringReference.ToString()", file="StringReference.cs"];
m22_7 [label="Exit Newtonsoft.Json.Utilities.StringReference.ToString()", span="55-55", cluster="Newtonsoft.Json.Utilities.StringReference.ToString()", file="StringReference.cs"];
m22_30 [label="Entry Newtonsoft.Json.Utilities.StringReferenceExtensions.EndsWith(Newtonsoft.Json.Utilities.StringReference, string)", span="106-106", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.EndsWith(Newtonsoft.Json.Utilities.StringReference, string)", file="StringReference.cs"];
m22_36 [label="i < text.Length", span="116-116", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.EndsWith(Newtonsoft.Json.Utilities.StringReference, string)", color=green, community=0, file="StringReference.cs"];
m22_31 [label="text.Length > s.Length", span="108-108", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.EndsWith(Newtonsoft.Json.Utilities.StringReference, string)", color=green, community=0, file="StringReference.cs"];
m22_32 [label="return false;", span="110-110", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.EndsWith(Newtonsoft.Json.Utilities.StringReference, string)", color=green, community=0, file="StringReference.cs"];
m22_33 [label="char[] chars = s.Chars", span="113-113", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.EndsWith(Newtonsoft.Json.Utilities.StringReference, string)", color=green, community=0, file="StringReference.cs"];
m22_34 [label="int start = s.StartIndex + s.Length - text.Length", span="115-115", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.EndsWith(Newtonsoft.Json.Utilities.StringReference, string)", color=green, community=0, file="StringReference.cs"];
m22_35 [label="int i = 0", span="116-116", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.EndsWith(Newtonsoft.Json.Utilities.StringReference, string)", color=green, community=0, file="StringReference.cs"];
m22_37 [label="text[i] != chars[i + start]", span="118-118", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.EndsWith(Newtonsoft.Json.Utilities.StringReference, string)", color=green, community=0, file="StringReference.cs"];
m22_39 [label="i++", span="116-116", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.EndsWith(Newtonsoft.Json.Utilities.StringReference, string)", color=green, community=0, file="StringReference.cs"];
m22_40 [label="return true;", span="124-124", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.EndsWith(Newtonsoft.Json.Utilities.StringReference, string)", color=green, community=0, file="StringReference.cs"];
m22_38 [label="return false;", span="120-120", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.EndsWith(Newtonsoft.Json.Utilities.StringReference, string)", color=green, community=0, file="StringReference.cs"];
m22_41 [label="Exit Newtonsoft.Json.Utilities.StringReferenceExtensions.EndsWith(Newtonsoft.Json.Utilities.StringReference, string)", span="106-106", cluster="Newtonsoft.Json.Utilities.StringReferenceExtensions.EndsWith(Newtonsoft.Json.Utilities.StringReference, string)", file="StringReference.cs"];
m0_22 -> m0_23  [key=0, style=solid];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_8  [key=2, style=dotted];
m0_23 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_23 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_23 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_23 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_23 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_9  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_35  [key=2, style=dotted];
m0_25 -> m0_9  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_10  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_12  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_10  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_12  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_11  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_11  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_35  [key=2, style=dotted];
m0_31 -> m0_11  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_35  [key=2, style=dotted];
m0_33 -> m0_11  [key=2, style=dotted];
m0_34 -> m0_22  [key=0, style=bold, color=blue];
m0_90 -> m0_91  [key=0, style=solid];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_8  [key=2, style=dotted];
m0_91 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_91 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_91 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_9  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_99  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_10  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_12  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_11  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_11  [key=2, style=dotted];
m0_98 -> m0_90  [key=0, style=bold, color=blue];
m0_133 -> m0_134  [key=0, style=solid];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_8  [key=2, style=dotted];
m0_134 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_134 -> m0_137  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_134 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_134 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_134 -> m0_141  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_9  [key=2, style=dotted];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_35  [key=2, style=dotted];
m0_136 -> m0_9  [key=2, style=dotted];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_99  [key=2, style=dotted];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_99  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_10  [key=2, style=dotted];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_10  [key=2, style=dotted];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_11  [key=2, style=dotted];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_11  [key=2, style=dotted];
m0_143 -> m0_133  [key=0, style=bold, color=blue];
m0_36 -> m0_37  [key=0, style=solid];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_8  [key=2, style=dotted];
m0_37 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_10  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_12  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_11  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_11  [key=2, style=dotted];
m0_42 -> m0_36  [key=0, style=bold, color=blue];
m0_154 -> m0_155  [key=0, style=solid];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_8  [key=2, style=dotted];
m0_155 -> m0_157  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_155 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_155 -> m0_159  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_155 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_9  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_35  [key=2, style=dotted];
m0_157 -> m0_9  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_99  [key=2, style=dotted];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_10  [key=2, style=dotted];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_10  [key=2, style=dotted];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_11  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_35  [key=2, style=dotted];
m0_162 -> m0_11  [key=2, style=dotted];
m0_163 -> m0_154  [key=0, style=bold, color=blue];
m0_63 -> m0_64  [key=0, style=solid];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_8  [key=2, style=dotted];
m0_64 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_64 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_64 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_64 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_64 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_9  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_9  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_9  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_35  [key=2, style=dotted];
m0_68 -> m0_9  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_59  [key=2, style=dotted];
m0_69 -> m0_60  [key=2, style=dotted];
m0_69 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label=l];
m0_69 -> m0_72  [key=1, style=dashed, color=darkseagreen4, label=l];
m0_69 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=l];
m0_69 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label=l];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_61  [key=2, style=dotted];
m0_75 -> m0_60  [key=2, style=dotted];
m0_75 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label=l];
m0_75 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label=l];
m0_75 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=l];
m0_75 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label=l];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_11  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_11  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_11  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_11  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_35  [key=2, style=dotted];
m0_74 -> m0_11  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_11  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_11  [key=2, style=dotted];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_11  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_11  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_35  [key=2, style=dotted];
m0_80 -> m0_11  [key=2, style=dotted];
m0_81 -> m0_63  [key=0, style=bold, color=blue];
m0_82 -> m0_83  [key=0, style=solid];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_8  [key=2, style=dotted];
m0_83 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_83 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_9  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_89  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_10  [key=2, style=dotted];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_11  [key=2, style=dotted];
m0_88 -> m0_82  [key=0, style=bold, color=blue];
m0_144 -> m0_145  [key=0, style=solid];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_8  [key=2, style=dotted];
m0_145 -> m0_147  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_145 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_145 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_145 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_9  [key=2, style=dotted];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_35  [key=2, style=dotted];
m0_147 -> m0_9  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_89  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_10  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_10  [key=2, style=dotted];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_11  [key=2, style=dotted];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_35  [key=2, style=dotted];
m0_152 -> m0_11  [key=2, style=dotted];
m0_153 -> m0_144  [key=0, style=bold, color=blue];
m0_43 -> m0_44  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_8  [key=2, style=dotted];
m0_44 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_44 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_44 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_44 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_9  [key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_9  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_9  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_59  [key=2, style=dotted];
m0_48 -> m0_60  [key=2, style=dotted];
m0_48 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label=l];
m0_48 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label=l];
m0_48 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label=l];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_61  [key=2, style=dotted];
m0_53 -> m0_62  [key=2, style=dotted];
m0_53 -> m0_60  [key=2, style=dotted];
m0_53 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=l];
m0_53 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=l];
m0_53 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label=l];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_11  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_11  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_11  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_11  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_11  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_11  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_11  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_11  [key=2, style=dotted];
m0_58 -> m0_43  [key=0, style=bold, color=blue];
m0_114 -> m0_115  [key=0, style=solid];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_8  [key=2, style=dotted];
m0_115 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_115 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_115 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_115 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_115 -> m0_122  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_9  [key=2, style=dotted];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_35  [key=2, style=dotted];
m0_117 -> m0_9  [key=2, style=dotted];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_89  [key=2, style=dotted];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_89  [key=2, style=dotted];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_10  [key=2, style=dotted];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_10  [key=2, style=dotted];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_11  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_11  [key=2, style=dotted];
m0_123 -> m0_126  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.PrimitiveTypeCode GetTypeCode"];
m0_123 -> m0_140  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m0_124 -> m0_114  [key=0, style=bold, color=blue];
m0_100 -> m0_101  [key=0, style=solid];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_8  [key=2, style=dotted];
m0_101 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_101 -> m0_104  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_101 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_101 -> m0_106  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_101 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_101 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_101 -> m0_111  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_9  [key=2, style=dotted];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_9  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_9  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_89  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_10  [key=2, style=dotted];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_9  [key=2, style=dotted];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_10  [key=2, style=dotted];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_12  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_11  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_11  [key=2, style=dotted];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_11  [key=2, style=dotted];
m0_113 -> m0_100  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_8  [key=2, style=dotted];
m0_1 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_1 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_9  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_10  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_12  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_11  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_11  [key=2, style=dotted];
m0_7 -> m0_0  [key=0, style=bold, color=blue];
m0_125 -> m0_126  [key=0, style=solid];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_8  [key=2, style=dotted];
m0_126 -> m0_128  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_126 -> m0_129  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_126 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_126 -> m0_123  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.PrimitiveTypeCode GetTypeCode"];
m0_126 -> m0_144  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.PrimitiveTypeCode GetTypeCode"];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_9  [key=2, style=dotted];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_9  [key=2, style=dotted];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_99  [key=2, style=dotted];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_10  [key=2, style=dotted];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_11  [key=2, style=dotted];
m0_132 -> m0_125  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_8  [key=2, style=dotted];
m0_14 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_14 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_14 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_9  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_9  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_10  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_12  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_11  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_11  [key=2, style=dotted];
m0_21 -> m0_13  [key=0, style=bold, color=blue];
m2_1264 -> m2_1265  [key=0, style=solid];
m2_1265 -> m2_1266  [key=0, style=solid];
m2_1265 -> m2_1267  [key=2, style=dotted];
m2_1266 -> m2_1264  [key=0, style=bold, color=blue];
m2_1725 -> m2_1726  [key=0, style=solid];
m2_1726 -> m2_1727  [key=0, style=solid];
m2_1726 -> m2_1735  [key=2, style=dotted];
m2_1726 -> m2_1730  [key=1, style=dashed, color=darkseagreen4, label=joe];
m2_1726 -> m2_1732  [key=1, style=dashed, color=darkseagreen4, label=joe];
m2_1727 -> m2_1728  [key=0, style=solid];
m2_1730 -> m2_1731  [key=0, style=solid];
m2_1732 -> m2_1733  [key=0, style=solid];
m2_1732 -> m2_338  [key=2, style=dotted];
m2_1728 -> m2_1729  [key=0, style=solid];
m2_1728 -> m2_1735  [key=2, style=dotted];
m2_1728 -> m2_1730  [key=1, style=dashed, color=darkseagreen4, label=mike];
m2_1728 -> m2_1731  [key=1, style=dashed, color=darkseagreen4, label=mike];
m2_1728 -> m2_1732  [key=1, style=dashed, color=darkseagreen4, label=mike];
m2_1729 -> m2_1730  [key=0, style=solid];
m2_1731 -> m2_1732  [key=0, style=solid];
m2_1733 -> m2_1734  [key=0, style=solid];
m2_1733 -> m2_12  [key=2, style=dotted];
m2_1734 -> m2_1725  [key=0, style=bold, color=blue];
m2_760 -> m2_761  [key=0, style=solid];
m2_760 -> m2_762  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_760 -> m2_763  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_760 -> m2_764  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_761 -> m2_762  [key=0, style=solid];
m2_762 -> m2_763  [key=0, style=solid];
m2_763 -> m2_764  [key=0, style=solid];
m2_764 -> m2_765  [key=0, style=solid];
m2_765 -> m2_760  [key=0, style=bold, color=blue];
m2_850 -> m2_851  [key=0, style=solid];
m2_851 -> m2_852  [key=0, style=solid];
m2_851 -> m2_851  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_852 -> m2_853  [key=0, style=solid];
m2_852 -> m2_93  [key=2, style=dotted];
m2_852 -> m2_854  [key=1, style=dashed, color=darkseagreen4, label=r];
m2_852 -> m2_855  [key=1, style=dashed, color=darkseagreen4, label=r];
m2_853 -> m2_854  [key=0, style=solid];
m2_853 -> m2_11  [key=2, style=dotted];
m2_854 -> m2_855  [key=0, style=solid];
m2_854 -> m2_11  [key=2, style=dotted];
m2_855 -> m2_856  [key=0, style=solid];
m2_855 -> m2_11  [key=2, style=dotted];
m2_856 -> m2_850  [key=0, style=bold, color=blue];
m2_3180 -> m2_3181  [key=0, style=solid];
m2_3181 -> m2_3180  [key=0, style=bold, color=blue];
m2_57 -> m2_58  [key=0, style=solid, color=green];
m2_57 -> m2_65  [key=0, style=solid, color=green];
m2_57 -> m2_29  [key=2, style=dotted, color=green];
m2_57 -> m2_101  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_28 -> m2_74  [key=0, style=solid, color=green];
m2_28 -> m2_20  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Parse4Digit"];
m2_28 -> m2_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Parse4Digit"];
m2_28 -> m2_23  [key=3, color=darkorchid, style=bold, label="Parameter variable int start"];
m2_28 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_28 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_28 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_28 -> m2_78  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1191 -> m2_1192  [key=0, style=solid];
m2_1192 -> m2_1193  [key=0, style=solid];
m2_1192 -> m2_1194  [key=0, style=solid];
m2_1193 -> m2_1192  [key=0, style=solid];
m2_1193 -> m2_237  [key=2, style=dotted];
m2_1193 -> m2_1193  [key=1, style=dashed, color=darkseagreen4, label=pair];
m2_1194 -> m2_1191  [key=0, style=bold, color=blue];
m2_1668 -> m2_1669  [key=0, style=solid];
m2_1669 -> m2_1670  [key=0, style=solid];
m2_1669 -> m2_140  [key=2, style=dotted];
m2_1669 -> m2_1671  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1670 -> m2_1668  [key=0, style=bold, color=blue];
m2_1568 -> m2_1569  [key=0, style=solid];
m2_1569 -> m2_1570  [key=0, style=solid];
m2_1569 -> m2_1565  [key=2, style=dotted];
m2_1569 -> m2_1571  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1569 -> m2_1572  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1570 -> m2_1571  [key=0, style=solid];
m2_1570 -> m2_158  [key=2, style=dotted];
m2_1571 -> m2_1572  [key=0, style=solid];
m2_1571 -> m2_158  [key=2, style=dotted];
m2_1572 -> m2_1573  [key=0, style=solid];
m2_1572 -> m2_338  [key=2, style=dotted];
m2_1573 -> m2_1574  [key=0, style=solid];
m2_1573 -> m2_93  [key=2, style=dotted];
m2_1573 -> m2_1575  [key=1, style=dashed, color=darkseagreen4, label=newValue];
m2_1574 -> m2_1575  [key=0, style=solid];
m2_1574 -> m2_11  [key=2, style=dotted];
m2_1575 -> m2_1576  [key=0, style=solid];
m2_1575 -> m2_1156  [key=2, style=dotted];
m2_1575 -> m2_11  [key=2, style=dotted];
m2_1576 -> m2_1568  [key=0, style=bold, color=blue];
m2_462 -> m2_463  [key=0, style=solid];
m2_463 -> m2_464  [key=0, style=solid];
m2_463 -> m2_440  [key=2, style=dotted];
m2_463 -> m2_468  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m2_463 -> m2_469  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m2_464 -> m2_465  [key=0, style=solid];
m2_464 -> m2_441  [key=2, style=dotted];
m2_468 -> m2_469  [key=0, style=solid];
m2_468 -> m2_11  [key=2, style=dotted];
m2_469 -> m2_470  [key=0, style=solid];
m2_469 -> m2_11  [key=2, style=dotted];
m2_465 -> m2_466  [key=0, style=solid];
m2_465 -> m2_213  [key=2, style=dotted];
m2_465 -> m2_214  [key=2, style=dotted];
m2_465 -> m2_467  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_466 -> m2_467  [key=0, style=solid];
m2_466 -> m2_11  [key=2, style=dotted];
m2_467 -> m2_468  [key=0, style=solid];
m2_467 -> m2_93  [key=2, style=dotted];
m2_467 -> m2_469  [key=1, style=dashed, color=darkseagreen4, label=m2];
m2_470 -> m2_462  [key=0, style=bold, color=blue];
m2_3024 -> m2_3025  [key=0, style=solid];
m2_3025 -> m2_3026  [key=0, style=solid];
m2_3025 -> m2_2758  [key=2, style=dotted];
m2_3026 -> m2_3027  [key=0, style=solid];
m2_3027 -> m2_3028  [key=0, style=solid];
m2_3027 -> m2_208  [key=2, style=dotted];
m2_3028 -> m2_3029  [key=0, style=solid];
m2_3028 -> m2_213  [key=2, style=dotted];
m2_3028 -> m2_214  [key=2, style=dotted];
m2_3029 -> m2_3030  [key=0, style=solid];
m2_3029 -> m2_11  [key=2, style=dotted];
m2_3030 -> m2_3024  [key=0, style=bold, color=blue];
m2_933 -> m2_934  [key=0, style=solid];
m2_934 -> m2_935  [key=0, style=solid];
m2_934 -> m2_93  [key=2, style=dotted];
m2_934 -> m2_936  [key=1, style=dashed, color=darkseagreen4, label=l];
m2_934 -> m2_937  [key=1, style=dashed, color=darkseagreen4, label=l];
m2_934 -> m2_938  [key=1, style=dashed, color=darkseagreen4, label=l];
m2_935 -> m2_936  [key=0, style=solid];
m2_935 -> m2_11  [key=2, style=dotted];
m2_936 -> m2_937  [key=0, style=solid];
m2_936 -> m2_11  [key=2, style=dotted];
m2_937 -> m2_938  [key=0, style=solid];
m2_937 -> m2_11  [key=2, style=dotted];
m2_938 -> m2_939  [key=0, style=solid];
m2_938 -> m2_11  [key=2, style=dotted];
m2_939 -> m2_933  [key=0, style=bold, color=blue];
m2_2402 -> m2_2403  [key=0, style=solid];
m2_2403 -> m2_2404  [key=0, style=solid];
m2_2403 -> m2_208  [key=2, style=dotted];
m2_2403 -> m2_2406  [key=1, style=dashed, color=darkseagreen4, label=d1];
m2_2403 -> m2_2407  [key=1, style=dashed, color=darkseagreen4, label=d1];
m2_2404 -> m2_2405  [key=0, style=solid];
m2_2404 -> m2_9  [key=2, style=dotted];
m2_2406 -> m2_2407  [key=0, style=solid];
m2_2406 -> m2_11  [key=2, style=dotted];
m2_2407 -> m2_2408  [key=0, style=solid];
m2_2407 -> m2_11  [key=2, style=dotted];
m2_2405 -> m2_2406  [key=0, style=solid];
m2_2405 -> m2_93  [key=2, style=dotted];
m2_2405 -> m2_2407  [key=1, style=dashed, color=darkseagreen4, label=d2];
m2_2408 -> m2_2402  [key=0, style=bold, color=blue];
m2_829 -> m2_830  [key=0, style=solid];
m2_830 -> m2_831  [key=0, style=solid];
m2_830 -> m2_834  [key=2, style=dotted];
m2_830 -> m2_835  [key=2, style=dotted];
m2_831 -> m2_832  [key=0, style=solid];
m2_831 -> m2_9  [key=2, style=dotted];
m2_832 -> m2_833  [key=0, style=solid];
m2_832 -> m2_11  [key=2, style=dotted];
m2_833 -> m2_829  [key=0, style=bold, color=blue];
m2_1878 -> m2_1879  [key=0, style=solid];
m2_1879 -> m2_1880  [key=0, style=solid];
m2_1879 -> m2_93  [key=2, style=dotted];
m2_1880 -> m2_1881  [key=0, style=solid];
m2_1880 -> m2_1866  [key=2, style=dotted];
m2_1880 -> m2_29  [key=2, style=dotted];
m2_1880 -> m2_222  [key=2, style=dotted];
m2_1880 -> m2_11  [key=2, style=dotted];
m2_1881 -> m2_1878  [key=0, style=bold, color=blue];
m2_617 -> m2_618  [key=0, style=solid];
m2_618 -> m2_619  [key=0, style=solid];
m2_618 -> m2_627  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_618 -> m2_618  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_619 -> m2_620  [key=0, style=solid];
m2_619 -> m2_93  [key=2, style=dotted];
m2_619 -> m2_621  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_619 -> m2_622  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_619 -> m2_623  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_619 -> m2_624  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_619 -> m2_625  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_619 -> m2_626  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_627 -> m2_628  [key=0, style=solid];
m2_627 -> m2_11  [key=2, style=dotted];
m2_620 -> m2_621  [key=0, style=solid];
m2_620 -> m2_11  [key=2, style=dotted];
m2_621 -> m2_622  [key=0, style=solid];
m2_621 -> m2_11  [key=2, style=dotted];
m2_622 -> m2_623  [key=0, style=solid];
m2_622 -> m2_11  [key=2, style=dotted];
m2_623 -> m2_624  [key=0, style=solid];
m2_623 -> m2_11  [key=2, style=dotted];
m2_624 -> m2_625  [key=0, style=solid];
m2_624 -> m2_11  [key=2, style=dotted];
m2_625 -> m2_626  [key=0, style=solid];
m2_625 -> m2_11  [key=2, style=dotted];
m2_626 -> m2_627  [key=0, style=solid];
m2_626 -> m2_9  [key=2, style=dotted];
m2_628 -> m2_617  [key=0, style=bold, color=blue];
m2_913 -> m2_914  [key=0, style=solid];
m2_914 -> m2_915  [key=0, style=solid];
m2_914 -> m2_918  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_914 -> m2_914  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_915 -> m2_916  [key=0, style=solid];
m2_915 -> m2_140  [key=2, style=dotted];
m2_915 -> m2_917  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_916 -> m2_913  [key=0, style=bold, color=blue];
m2_1647 -> m2_1648  [key=0, style=solid];
m2_1648 -> m2_1649  [key=0, style=solid];
m2_1648 -> m2_1633  [key=2, style=dotted];
m2_1648 -> m2_1650  [key=1, style=dashed, color=darkseagreen4, label=p];
m2_1648 -> m2_1651  [key=1, style=dashed, color=darkseagreen4, label=p];
m2_1649 -> m2_1650  [key=0, style=solid];
m2_1650 -> m2_1651  [key=0, style=solid];
m2_1650 -> m2_213  [key=2, style=dotted];
m2_1650 -> m2_208  [key=2, style=dotted];
m2_1650 -> m2_1653  [key=2, style=dotted];
m2_1650 -> m2_1635  [key=2, style=dotted];
m2_1651 -> m2_1652  [key=0, style=solid];
m2_1651 -> m2_11  [key=2, style=dotted];
m2_1652 -> m2_1647  [key=0, style=bold, color=blue];
m2_2068 -> m2_2069  [key=0, style=solid];
m2_2069 -> m2_2070  [key=0, style=solid];
m2_2069 -> m2_2069  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2070 -> m2_2071  [key=0, style=solid];
m2_2070 -> m2_93  [key=2, style=dotted];
m2_2070 -> m2_2072  [key=1, style=dashed, color=darkseagreen4, label=p];
m2_2070 -> m2_2073  [key=1, style=dashed, color=darkseagreen4, label=p];
m2_2071 -> m2_2072  [key=0, style=solid];
m2_2071 -> m2_11  [key=2, style=dotted];
m2_2072 -> m2_2073  [key=0, style=solid];
m2_2072 -> m2_11  [key=2, style=dotted];
m2_2073 -> m2_2074  [key=0, style=solid];
m2_2073 -> m2_11  [key=2, style=dotted];
m2_2074 -> m2_2068  [key=0, style=bold, color=blue];
m2_1682 -> m2_1683  [key=0, style=solid];
m2_1683 -> m2_1684  [key=0, style=solid];
m2_1683 -> m2_52  [key=2, style=dotted];
m2_1683 -> m2_1685  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_1683 -> m2_1686  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_1683 -> m2_1690  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_1684 -> m2_1685  [key=0, style=solid];
m2_1684 -> m2_237  [key=2, style=dotted];
m2_1685 -> m2_1686  [key=0, style=solid];
m2_1685 -> m2_237  [key=2, style=dotted];
m2_1686 -> m2_1687  [key=0, style=solid];
m2_1686 -> m2_237  [key=2, style=dotted];
m2_1690 -> m2_1691  [key=0, style=solid];
m2_1690 -> m2_237  [key=2, style=dotted];
m2_1687 -> m2_1688  [key=0, style=solid];
m2_1687 -> m2_52  [key=2, style=dotted];
m2_1687 -> m2_1689  [key=1, style=dashed, color=darkseagreen4, label=child];
m2_1687 -> m2_1690  [key=1, style=dashed, color=darkseagreen4, label=child];
m2_1687 -> m2_1691  [key=1, style=dashed, color=darkseagreen4, label=child];
m2_1688 -> m2_1689  [key=0, style=solid];
m2_1688 -> m2_237  [key=2, style=dotted];
m2_1689 -> m2_1690  [key=0, style=solid];
m2_1689 -> m2_237  [key=2, style=dotted];
m2_1691 -> m2_1692  [key=0, style=solid];
m2_1691 -> m2_9  [key=2, style=dotted];
m2_1692 -> m2_1693  [key=0, style=solid];
m2_1692 -> m2_93  [key=2, style=dotted];
m2_1692 -> m2_1694  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_1692 -> m2_1695  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_1693 -> m2_1694  [key=0, style=solid];
m2_1693 -> m2_11  [key=2, style=dotted];
m2_1694 -> m2_1695  [key=0, style=solid];
m2_1694 -> m2_11  [key=2, style=dotted];
m2_1695 -> m2_1696  [key=0, style=solid];
m2_1695 -> m2_11  [key=2, style=dotted];
m2_1696 -> m2_1682  [key=0, style=bold, color=blue];
m2_276 -> m2_277  [key=0, style=solid];
m2_277 -> m2_278  [key=0, style=solid];
m2_277 -> m2_9  [key=2, style=dotted];
m2_278 -> m2_279  [key=0, style=solid];
m2_278 -> m2_11  [key=2, style=dotted];
m2_279 -> m2_276  [key=0, style=bold, color=blue];
m2_2613 -> m2_2614  [key=0, style=solid];
m2_2614 -> m2_2615  [key=0, style=solid];
m2_2614 -> m2_28  [key=2, style=dotted];
m2_2614 -> m2_2616  [key=1, style=dashed, color=darkseagreen4, label=product];
m2_2614 -> m2_2617  [key=1, style=dashed, color=darkseagreen4, label=product];
m2_2614 -> m2_2618  [key=1, style=dashed, color=darkseagreen4, label=product];
m2_2614 -> m2_2619  [key=1, style=dashed, color=darkseagreen4, label=product];
m2_2614 -> m2_2620  [key=1, style=dashed, color=darkseagreen4, label=product];
m2_2615 -> m2_2616  [key=0, style=solid];
m2_2616 -> m2_2617  [key=0, style=solid];
m2_2616 -> m2_29  [key=2, style=dotted];
m2_2617 -> m2_2618  [key=0, style=solid];
m2_2618 -> m2_2619  [key=0, style=solid];
m2_2619 -> m2_2620  [key=0, style=solid];
m2_2619 -> m2_9  [key=2, style=dotted];
m2_2620 -> m2_2621  [key=0, style=solid];
m2_2620 -> m2_213  [key=2, style=dotted];
m2_2620 -> m2_2626  [key=2, style=dotted];
m2_2620 -> m2_2627  [key=2, style=dotted];
m2_2620 -> m2_214  [key=2, style=dotted];
m2_2621 -> m2_2622  [key=0, style=solid];
m2_2621 -> m2_11  [key=2, style=dotted];
m2_2622 -> m2_2623  [key=0, style=solid];
m2_2623 -> m2_2624  [key=0, style=solid];
m2_2623 -> m2_213  [key=2, style=dotted];
m2_2623 -> m2_2626  [key=2, style=dotted];
m2_2623 -> m2_2627  [key=2, style=dotted];
m2_2623 -> m2_2628  [key=2, style=dotted];
m2_2623 -> m2_214  [key=2, style=dotted];
m2_2624 -> m2_2625  [key=0, style=solid];
m2_2624 -> m2_11  [key=2, style=dotted];
m2_2625 -> m2_2613  [key=0, style=bold, color=blue];
m2_608 -> m2_609  [key=0, style=solid];
m2_609 -> m2_610  [key=0, style=solid];
m2_609 -> m2_616  [key=2, style=dotted];
m2_609 -> m2_611  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_609 -> m2_612  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_609 -> m2_613  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_610 -> m2_611  [key=0, style=solid];
m2_611 -> m2_612  [key=0, style=solid];
m2_612 -> m2_613  [key=0, style=solid];
m2_613 -> m2_614  [key=0, style=solid];
m2_613 -> m2_9  [key=2, style=dotted];
m2_614 -> m2_615  [key=0, style=solid];
m2_614 -> m2_11  [key=2, style=dotted];
m2_615 -> m2_608  [key=0, style=bold, color=blue];
m2_1795 -> m2_1796  [key=0, style=solid];
m2_1796 -> m2_1797  [key=0, style=solid];
m2_1796 -> m2_52  [key=2, style=dotted];
m2_1796 -> m2_1798  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m2_1796 -> m2_1799  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m2_1797 -> m2_1798  [key=0, style=solid];
m2_1797 -> m2_1794  [key=2, style=dotted];
m2_1797 -> m2_237  [key=2, style=dotted];
m2_1798 -> m2_1799  [key=0, style=solid];
m2_1798 -> m2_1794  [key=2, style=dotted];
m2_1798 -> m2_237  [key=2, style=dotted];
m2_1799 -> m2_1800  [key=0, style=solid];
m2_1799 -> m2_338  [key=2, style=dotted];
m2_1799 -> m2_1801  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1800 -> m2_1801  [key=0, style=solid];
m2_1800 -> m2_11  [key=2, style=dotted];
m2_1801 -> m2_1802  [key=0, style=solid];
m2_1801 -> m2_93  [key=2, style=dotted];
m2_1802 -> m2_1803  [key=0, style=solid];
m2_1802 -> m2_11  [key=2, style=dotted];
m2_1803 -> m2_1795  [key=0, style=bold, color=blue];
m2_1184 -> m2_1185  [key=0, style=solid];
m2_1185 -> m2_1186  [key=0, style=solid];
m2_1185 -> m2_1189  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1185 -> m2_1185  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1186 -> m2_1187  [key=0, style=solid];
m2_1186 -> m2_140  [key=2, style=dotted];
m2_1186 -> m2_1188  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1187 -> m2_1184  [key=0, style=bold, color=blue];
m2_2362 -> m2_2363  [key=0, style=solid];
m2_2363 -> m2_2364  [key=0, style=solid];
m2_2363 -> m2_2363  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m2_2364 -> m2_2365  [key=0, style=solid];
m2_2364 -> m2_827  [key=2, style=dotted];
m2_2364 -> m2_2367  [key=1, style=dashed, color=darkseagreen4, label=uri];
m2_2365 -> m2_2366  [key=0, style=solid];
m2_2365 -> m2_9  [key=2, style=dotted];
m2_2367 -> m2_2368  [key=0, style=solid];
m2_2367 -> m2_11  [key=2, style=dotted];
m2_2366 -> m2_2367  [key=0, style=solid];
m2_2366 -> m2_93  [key=2, style=dotted];
m2_2368 -> m2_2362  [key=0, style=bold, color=blue];
m2_1272 -> m2_1273  [key=0, style=solid];
m2_1273 -> m2_1274  [key=0, style=solid];
m2_1273 -> m2_1275  [key=2, style=dotted];
m2_1274 -> m2_1272  [key=0, style=bold, color=blue];
m2_2210 -> m2_2211  [key=0, style=solid];
m2_2211 -> m2_2212  [key=0, style=solid];
m2_2212 -> m2_2210  [key=0, style=bold, color=blue];
m2_2612 -> m2_3155  [key=0, style=solid];
m2_3155 -> m2_3156  [key=0, style=solid];
m2_3155 -> m2_3153  [key=2, style=dotted];
m2_3156 -> m2_2612  [key=0, style=bold, color=blue];
m2_2881 -> m2_2882  [key=0, style=solid];
m2_2882 -> m2_2883  [key=0, style=solid];
m2_2882 -> m2_2889  [key=2, style=dotted];
m2_2882 -> m2_2884  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2882 -> m2_2885  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2882 -> m2_2886  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2883 -> m2_2884  [key=0, style=solid];
m2_2884 -> m2_2885  [key=0, style=solid];
m2_2885 -> m2_2886  [key=0, style=solid];
m2_2886 -> m2_2887  [key=0, style=solid];
m2_2886 -> m2_9  [key=2, style=dotted];
m2_2887 -> m2_2888  [key=0, style=solid];
m2_2887 -> m2_11  [key=2, style=dotted];
m2_2888 -> m2_2881  [key=0, style=bold, color=blue];
m2_2416 -> m2_2417  [key=0, style=solid];
m2_2417 -> m2_2418  [key=0, style=solid];
m2_2417 -> m2_208  [key=2, style=dotted];
m2_2417 -> m2_2420  [key=1, style=dashed, color=darkseagreen4, label=d1];
m2_2417 -> m2_2421  [key=1, style=dashed, color=darkseagreen4, label=d1];
m2_2418 -> m2_2419  [key=0, style=solid];
m2_2418 -> m2_9  [key=2, style=dotted];
m2_2420 -> m2_2421  [key=0, style=solid];
m2_2420 -> m2_11  [key=2, style=dotted];
m2_2421 -> m2_2422  [key=0, style=solid];
m2_2421 -> m2_11  [key=2, style=dotted];
m2_2419 -> m2_2420  [key=0, style=solid];
m2_2419 -> m2_93  [key=2, style=dotted];
m2_2419 -> m2_2421  [key=1, style=dashed, color=darkseagreen4, label=d2];
m2_2422 -> m2_2416  [key=0, style=bold, color=blue];
m2_1157 -> m2_1158  [key=0, style=solid];
m2_1158 -> m2_1159  [key=0, style=solid];
m2_1158 -> m2_237  [key=2, style=dotted];
m2_1159 -> m2_1157  [key=0, style=bold, color=blue];
m2_2641 -> m2_2642  [key=0, style=solid];
m2_2642 -> m2_2643  [key=0, style=solid];
m2_2643 -> m2_2641  [key=0, style=bold, color=blue];
m2_2021 -> m2_2022  [key=0, style=solid];
m2_2022 -> m2_2023  [key=0, style=solid];
m2_2022 -> m2_93  [key=2, style=dotted];
m2_2023 -> m2_2024  [key=0, style=solid];
m2_2023 -> m2_11  [key=2, style=dotted];
m2_2024 -> m2_2021  [key=0, style=bold, color=blue];
m2_2869 -> m2_2870  [key=0, style=solid];
m2_2870 -> m2_2871  [key=0, style=solid];
m2_2871 -> m2_2869  [key=0, style=bold, color=blue];
m2_1918 -> m2_1919  [key=0, style=solid];
m2_1919 -> m2_1920  [key=0, style=solid];
m2_1919 -> m2_1919  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1920 -> m2_1921  [key=0, style=solid];
m2_1920 -> m2_93  [key=2, style=dotted];
m2_1921 -> m2_1922  [key=0, style=solid];
m2_1921 -> m2_11  [key=2, style=dotted];
m2_1922 -> m2_1918  [key=0, style=bold, color=blue];
m2_1858 -> m2_1859  [key=0, style=solid];
m2_1859 -> m2_1860  [key=0, style=solid];
m2_1859 -> m2_1865  [key=2, style=dotted];
m2_1859 -> m2_1866  [key=2, style=dotted];
m2_1859 -> m2_29  [key=2, style=dotted];
m2_1859 -> m2_222  [key=2, style=dotted];
m2_1859 -> m2_9  [key=2, style=dotted];
m2_1859 -> m2_1861  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m2_1860 -> m2_1861  [key=0, style=solid];
m2_1860 -> m2_11  [key=2, style=dotted];
m2_1861 -> m2_1862  [key=0, style=solid];
m2_1861 -> m2_93  [key=2, style=dotted];
m2_1861 -> m2_1863  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m2_1862 -> m2_1863  [key=0, style=solid];
m2_1862 -> m2_222  [key=2, style=dotted];
m2_1862 -> m2_11  [key=2, style=dotted];
m2_1863 -> m2_1864  [key=0, style=solid];
m2_1863 -> m2_29  [key=2, style=dotted];
m2_1863 -> m2_11  [key=2, style=dotted];
m2_1864 -> m2_1858  [key=0, style=bold, color=blue];
m2_2111 -> m2_2112  [key=0, style=solid];
m2_2112 -> m2_2113  [key=0, style=solid];
m2_2112 -> m2_2115  [key=2, style=dotted];
m2_2112 -> m2_9  [key=2, style=dotted];
m2_2113 -> m2_2114  [key=0, style=solid];
m2_2113 -> m2_93  [key=2, style=dotted];
m2_2114 -> m2_2111  [key=0, style=bold, color=blue];
m2_2971 -> m2_2972  [key=0, style=solid];
m2_2972 -> m2_2973  [key=0, style=solid];
m2_2972 -> m2_2889  [key=2, style=dotted];
m2_2972 -> m2_2974  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2972 -> m2_2975  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2972 -> m2_2976  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2973 -> m2_2974  [key=0, style=solid];
m2_2974 -> m2_2975  [key=0, style=solid];
m2_2975 -> m2_2976  [key=0, style=solid];
m2_2976 -> m2_2977  [key=0, style=solid];
m2_2976 -> m2_9  [key=2, style=dotted];
m2_2977 -> m2_2978  [key=0, style=solid];
m2_2977 -> m2_11  [key=2, style=dotted];
m2_2978 -> m2_2971  [key=0, style=bold, color=blue];
m2_3004 -> m2_3005  [key=0, style=solid];
m2_3005 -> m2_3006  [key=0, style=solid];
m2_3005 -> m2_3011  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3005 -> m2_3005  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_3006 -> m2_3007  [key=0, style=solid];
m2_3006 -> m2_93  [key=2, style=dotted];
m2_3006 -> m2_3008  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_3006 -> m2_3009  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_3006 -> m2_3010  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_3011 -> m2_3012  [key=0, style=solid];
m2_3011 -> m2_11  [key=2, style=dotted];
m2_3007 -> m2_3008  [key=0, style=solid];
m2_3007 -> m2_11  [key=2, style=dotted];
m2_3008 -> m2_3009  [key=0, style=solid];
m2_3008 -> m2_11  [key=2, style=dotted];
m2_3009 -> m2_3010  [key=0, style=solid];
m2_3009 -> m2_11  [key=2, style=dotted];
m2_3010 -> m2_3011  [key=0, style=solid];
m2_3010 -> m2_9  [key=2, style=dotted];
m2_3012 -> m2_3004  [key=0, style=bold, color=blue];
m2_2930 -> m2_2931  [key=0, style=solid];
m2_2931 -> m2_2932  [key=0, style=solid];
m2_2931 -> m2_2935  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2931 -> m2_2931  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2932 -> m2_2933  [key=0, style=solid];
m2_2932 -> m2_140  [key=2, style=dotted];
m2_2932 -> m2_2934  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2933 -> m2_2930  [key=0, style=bold, color=blue];
m2_2085 -> m2_2086  [key=0, style=solid];
m2_2086 -> m2_2087  [key=0, style=solid];
m2_2086 -> m2_2090  [key=2, style=dotted];
m2_2087 -> m2_2088  [key=0, style=solid];
m2_2087 -> m2_338  [key=2, style=dotted];
m2_2088 -> m2_2089  [key=0, style=solid];
m2_2088 -> m2_11  [key=2, style=dotted];
m2_2089 -> m2_2085  [key=0, style=bold, color=blue];
m2_1225 -> m2_1226  [key=0, style=solid];
m2_1225 -> m2_1228  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_1226 -> m2_1227  [key=0, style=solid];
m2_1226 -> m2_1228  [key=0, style=solid];
m2_1228 -> m2_1229  [key=0, style=solid];
m2_1228 -> m2_1230  [key=0, style=solid];
m2_1227 -> m2_1230  [key=0, style=solid];
m2_1227 -> m2_1231  [key=2, style=dotted];
m2_1229 -> m2_1228  [key=0, style=solid];
m2_1229 -> m2_237  [key=2, style=dotted];
m2_1229 -> m2_1229  [key=1, style=dashed, color=darkseagreen4, label=entry];
m2_1230 -> m2_1225  [key=0, style=bold, color=blue];
m2_2321 -> m2_2322  [key=0, style=solid];
m2_2322 -> m2_2323  [key=0, style=solid];
m2_2322 -> m2_2322  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2323 -> m2_2324  [key=0, style=solid];
m2_2323 -> m2_93  [key=2, style=dotted];
m2_2323 -> m2_2325  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_2323 -> m2_2326  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_2323 -> m2_2327  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_2323 -> m2_2328  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_2323 -> m2_2329  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_2323 -> m2_2330  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_2323 -> m2_2331  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_2323 -> m2_2332  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_2324 -> m2_2325  [key=0, style=solid];
m2_2324 -> m2_11  [key=2, style=dotted];
m2_2325 -> m2_2326  [key=0, style=solid];
m2_2325 -> m2_11  [key=2, style=dotted];
m2_2326 -> m2_2327  [key=0, style=solid];
m2_2326 -> m2_11  [key=2, style=dotted];
m2_2327 -> m2_2328  [key=0, style=solid];
m2_2327 -> m2_11  [key=2, style=dotted];
m2_2328 -> m2_2329  [key=0, style=solid];
m2_2328 -> m2_11  [key=2, style=dotted];
m2_2329 -> m2_2330  [key=0, style=solid];
m2_2329 -> m2_11  [key=2, style=dotted];
m2_2330 -> m2_2331  [key=0, style=solid];
m2_2330 -> m2_11  [key=2, style=dotted];
m2_2331 -> m2_2332  [key=0, style=solid];
m2_2331 -> m2_11  [key=2, style=dotted];
m2_2332 -> m2_2333  [key=0, style=solid];
m2_2332 -> m2_11  [key=2, style=dotted];
m2_2333 -> m2_2321  [key=0, style=bold, color=blue];
m2_2937 -> m2_2938  [key=0, style=solid];
m2_2938 -> m2_2939  [key=0, style=solid];
m2_2938 -> m2_2948  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2938 -> m2_2938  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2939 -> m2_2940  [key=0, style=solid];
m2_2939 -> m2_93  [key=2, style=dotted];
m2_2939 -> m2_2941  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2939 -> m2_2942  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2939 -> m2_2943  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2939 -> m2_2944  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2939 -> m2_2945  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2939 -> m2_2946  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2939 -> m2_2947  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2948 -> m2_2949  [key=0, style=solid];
m2_2948 -> m2_11  [key=2, style=dotted];
m2_2940 -> m2_2941  [key=0, style=solid];
m2_2940 -> m2_11  [key=2, style=dotted];
m2_2941 -> m2_2942  [key=0, style=solid];
m2_2941 -> m2_11  [key=2, style=dotted];
m2_2942 -> m2_2943  [key=0, style=solid];
m2_2942 -> m2_2910  [key=2, style=dotted];
m2_2942 -> m2_11  [key=2, style=dotted];
m2_2943 -> m2_2944  [key=0, style=solid];
m2_2943 -> m2_2910  [key=2, style=dotted];
m2_2943 -> m2_11  [key=2, style=dotted];
m2_2944 -> m2_2945  [key=0, style=solid];
m2_2944 -> m2_2910  [key=2, style=dotted];
m2_2944 -> m2_11  [key=2, style=dotted];
m2_2945 -> m2_2946  [key=0, style=solid];
m2_2945 -> m2_11  [key=2, style=dotted];
m2_2946 -> m2_2947  [key=0, style=solid];
m2_2946 -> m2_11  [key=2, style=dotted];
m2_2947 -> m2_2948  [key=0, style=solid];
m2_2947 -> m2_9  [key=2, style=dotted];
m2_2949 -> m2_2937  [key=0, style=bold, color=blue];
m2_2179 -> m2_2180  [key=0, style=solid];
m2_2180 -> m2_2181  [key=0, style=solid];
m2_2180 -> m2_1536  [key=2, style=dotted];
m2_2181 -> m2_2179  [key=0, style=bold, color=blue];
m2_579 -> m2_580  [key=0, style=solid];
m2_580 -> m2_581  [key=0, style=solid];
m2_580 -> m2_580  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_581 -> m2_582  [key=0, style=solid];
m2_581 -> m2_93  [key=2, style=dotted];
m2_581 -> m2_583  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_581 -> m2_584  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_582 -> m2_583  [key=0, style=solid];
m2_582 -> m2_11  [key=2, style=dotted];
m2_583 -> m2_584  [key=0, style=solid];
m2_583 -> m2_11  [key=2, style=dotted];
m2_584 -> m2_585  [key=0, style=solid];
m2_584 -> m2_11  [key=2, style=dotted];
m2_585 -> m2_579  [key=0, style=bold, color=blue];
m2_2837 -> m2_2838  [key=0, style=solid];
m2_2838 -> m2_2839  [key=0, style=solid];
m2_2838 -> m2_1590  [key=2, style=dotted];
m2_2838 -> m2_213  [key=2, style=dotted];
m2_2838 -> m2_2841  [key=2, style=dotted];
m2_2838 -> m2_716  [key=2, style=dotted];
m2_2839 -> m2_2840  [key=0, style=solid];
m2_2839 -> m2_11  [key=2, style=dotted];
m2_2840 -> m2_2837  [key=0, style=bold, color=blue];
m2_1548 -> m2_1549  [key=0, style=solid];
m2_1549 -> m2_1550  [key=0, style=solid];
m2_1549 -> m2_1536  [key=2, style=dotted];
m2_1550 -> m2_1548  [key=0, style=bold, color=blue];
m2_1565 -> m2_1566  [key=0, style=solid];
m2_1566 -> m2_1567  [key=0, style=solid];
m2_1566 -> m2_208  [key=2, style=dotted];
m2_1567 -> m2_1565  [key=0, style=bold, color=blue];
m2_968 -> m2_969  [key=0, style=solid];
m2_969 -> m2_970  [key=0, style=solid];
m2_969 -> m2_973  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_969 -> m2_941  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_970 -> m2_971  [key=0, style=solid];
m2_970 -> m2_140  [key=2, style=dotted];
m2_970 -> m2_972  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_971 -> m2_968  [key=0, style=bold, color=blue];
m2_3199 -> m2_3200  [key=0, style=solid];
m2_3200 -> m2_3201  [key=0, style=solid];
m2_3200 -> m2_3187  [key=2, style=dotted];
m2_3201 -> m2_3199  [key=0, style=bold, color=blue];
m2_2890 -> m2_2891  [key=0, style=solid];
m2_2891 -> m2_2892  [key=0, style=solid];
m2_2891 -> m2_2898  [key=2, style=dotted];
m2_2891 -> m2_2893  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2891 -> m2_2894  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2891 -> m2_2895  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2892 -> m2_2893  [key=0, style=solid];
m2_2893 -> m2_2894  [key=0, style=solid];
m2_2894 -> m2_2895  [key=0, style=solid];
m2_2895 -> m2_2896  [key=0, style=solid];
m2_2895 -> m2_338  [key=2, style=dotted];
m2_2896 -> m2_2897  [key=0, style=solid];
m2_2896 -> m2_11  [key=2, style=dotted];
m2_2897 -> m2_2890  [key=0, style=bold, color=blue];
m2_1289 -> m2_1290  [key=0, style=solid];
m2_1289 -> m2_1291  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1289 -> m2_1292  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeOffset"];
m2_1289 -> m2_1293  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.Person"];
m2_1290 -> m2_1291  [key=0, style=solid];
m2_1291 -> m2_1292  [key=0, style=solid];
m2_1292 -> m2_1293  [key=0, style=solid];
m2_1293 -> m2_1294  [key=0, style=solid];
m2_1294 -> m2_1295  [key=0, style=solid];
m2_1294 -> m2_440  [key=2, style=dotted];
m2_1295 -> m2_1289  [key=0, style=bold, color=blue];
m2_1232 -> m2_1233  [key=0, style=solid];
m2_1233 -> m2_1234  [key=0, style=solid];
m2_1233 -> m2_326  [key=2, style=dotted];
m2_1234 -> m2_1232  [key=0, style=bold, color=blue];
m2_1910 -> m2_1911  [key=0, style=solid];
m2_1911 -> m2_1912  [key=0, style=solid];
m2_1911 -> m2_93  [key=2, style=dotted];
m2_1912 -> m2_1913  [key=0, style=solid];
m2_1912 -> m2_11  [key=2, style=dotted];
m2_1913 -> m2_1910  [key=0, style=bold, color=blue];
m2_1708 -> m2_1709  [key=0, style=solid];
m2_1709 -> m2_1710  [key=0, style=solid];
m2_1709 -> m2_1721  [key=2, style=dotted];
m2_1709 -> m2_1711  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1709 -> m2_1712  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1709 -> m2_1714  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1709 -> m2_1715  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1710 -> m2_1711  [key=0, style=solid];
m2_1711 -> m2_1712  [key=0, style=solid];
m2_1712 -> m2_1713  [key=0, style=solid];
m2_1712 -> m2_338  [key=2, style=dotted];
m2_1714 -> m2_1715  [key=0, style=solid];
m2_1715 -> m2_1716  [key=0, style=solid];
m2_1715 -> m2_338  [key=2, style=dotted];
m2_1715 -> m2_1717  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1713 -> m2_1714  [key=0, style=solid];
m2_1713 -> m2_11  [key=2, style=dotted];
m2_1716 -> m2_1717  [key=0, style=solid];
m2_1716 -> m2_11  [key=2, style=dotted];
m2_1717 -> m2_1718  [key=0, style=solid];
m2_1717 -> m2_93  [key=2, style=dotted];
m2_1717 -> m2_1719  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_1718 -> m2_1719  [key=0, style=solid];
m2_1718 -> m2_11  [key=2, style=dotted];
m2_1719 -> m2_1720  [key=0, style=solid];
m2_1719 -> m2_11  [key=2, style=dotted];
m2_1720 -> m2_1708  [key=0, style=bold, color=blue];
m2_1484 -> m2_1485  [key=0, style=solid];
m2_1485 -> m2_1486  [key=0, style=solid];
m2_1485 -> m2_1496  [key=2, style=dotted];
m2_1485 -> m2_1487  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m2_1485 -> m2_1488  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m2_1485 -> m2_1492  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m2_1485 -> m2_1493  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m2_1486 -> m2_1487  [key=0, style=solid];
m2_1486 -> m2_1497  [key=2, style=dotted];
m2_1487 -> m2_1488  [key=0, style=solid];
m2_1487 -> m2_1497  [key=2, style=dotted];
m2_1488 -> m2_1489  [key=0, style=solid];
m2_1488 -> m2_338  [key=2, style=dotted];
m2_1488 -> m2_1490  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1488 -> m2_1491  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1492 -> m2_1493  [key=0, style=solid];
m2_1492 -> m2_1498  [key=2, style=dotted];
m2_1492 -> m2_11  [key=2, style=dotted];
m2_1493 -> m2_1494  [key=0, style=solid];
m2_1493 -> m2_1498  [key=2, style=dotted];
m2_1493 -> m2_11  [key=2, style=dotted];
m2_1489 -> m2_1490  [key=0, style=solid];
m2_1489 -> m2_1489  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m2_1490 -> m2_1491  [key=0, style=solid];
m2_1490 -> m2_11  [key=2, style=dotted];
m2_1491 -> m2_1492  [key=0, style=solid];
m2_1491 -> m2_93  [key=2, style=dotted];
m2_1491 -> m2_1493  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m2_1491 -> m2_1494  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m2_1494 -> m2_1495  [key=0, style=solid];
m2_1494 -> m2_1499  [key=2, style=dotted];
m2_1495 -> m2_1484  [key=0, style=bold, color=blue];
m2_3013 -> m2_3014  [key=0, style=solid];
m2_3014 -> m2_3015  [key=0, style=solid];
m2_3014 -> m2_3022  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3014 -> m2_3014  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_3015 -> m2_3016  [key=0, style=solid];
m2_3015 -> m2_93  [key=2, style=dotted];
m2_3015 -> m2_3017  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_3015 -> m2_3018  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_3015 -> m2_3019  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_3015 -> m2_3020  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_3015 -> m2_3021  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_3022 -> m2_3023  [key=0, style=solid];
m2_3022 -> m2_11  [key=2, style=dotted];
m2_3016 -> m2_3017  [key=0, style=solid];
m2_3016 -> m2_11  [key=2, style=dotted];
m2_3017 -> m2_3018  [key=0, style=solid];
m2_3017 -> m2_11  [key=2, style=dotted];
m2_3018 -> m2_3019  [key=0, style=solid];
m2_3018 -> m2_2910  [key=2, style=dotted];
m2_3018 -> m2_11  [key=2, style=dotted];
m2_3019 -> m2_3020  [key=0, style=solid];
m2_3019 -> m2_2910  [key=2, style=dotted];
m2_3019 -> m2_11  [key=2, style=dotted];
m2_3020 -> m2_3021  [key=0, style=solid];
m2_3020 -> m2_2910  [key=2, style=dotted];
m2_3020 -> m2_11  [key=2, style=dotted];
m2_3021 -> m2_3022  [key=0, style=solid];
m2_3021 -> m2_9  [key=2, style=dotted];
m2_3023 -> m2_3013  [key=0, style=bold, color=blue];
m2_80 -> m2_81  [key=0, style=solid, color=red];
m2_80 -> m2_6  [key=3, color=darkorchid, style=bold, label="Parameter variable int start"];
m2_80 -> m2_3  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Parse4Digit"];
m2_80 -> m2_4  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Parse4Digit"];
m2_81 -> m2_82  [key=0, style=solid, color=red];
m2_81 -> m2_81  [key=3, color=red, style=bold, label="Local variable string value"];
m2_81 -> m2_84  [key=0, style=solid];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_10  [key=2, style=dotted];
m2_82 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label="out int"];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_79  [key=2, style=dotted];
m2_83 -> m2_11  [key=2, style=dotted];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_79  [key=2, style=dotted];
m2_84 -> m2_11  [key=2, style=dotted];
m2_84 -> m2_28  [key=0, style=bold, color=blue];
m2_85 -> m2_80  [key=0, style=bold, color=blue];
m2_85 -> m2_86  [key=0, style=solid, color=green];
m2_85 -> m2_91  [key=0, style=solid, color=green];
m2_1238 -> m2_1239  [key=0, style=solid];
m2_1239 -> m2_1240  [key=0, style=solid];
m2_1239 -> m2_1241  [key=2, style=dotted];
m2_1240 -> m2_1238  [key=0, style=bold, color=blue];
m2_71 -> m2_72  [key=0, style=solid, color=green];
m2_71 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_489 -> m2_490  [key=0, style=solid];
m2_490 -> m2_491  [key=0, style=solid];
m2_490 -> m2_499  [key=2, style=dotted];
m2_490 -> m2_492  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_490 -> m2_493  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_491 -> m2_492  [key=0, style=solid];
m2_491 -> m2_420  [key=2, style=dotted];
m2_492 -> m2_493  [key=0, style=solid];
m2_492 -> m2_420  [key=2, style=dotted];
m2_493 -> m2_494  [key=0, style=solid];
m2_493 -> m2_428  [key=2, style=dotted];
m2_493 -> m2_429  [key=2, style=dotted];
m2_493 -> m2_495  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_494 -> m2_495  [key=0, style=solid];
m2_494 -> m2_11  [key=2, style=dotted];
m2_495 -> m2_496  [key=0, style=solid];
m2_495 -> m2_428  [key=2, style=dotted];
m2_495 -> m2_430  [key=2, style=dotted];
m2_495 -> m2_497  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_496 -> m2_497  [key=0, style=solid];
m2_496 -> m2_11  [key=2, style=dotted];
m2_497 -> m2_498  [key=0, style=solid];
m2_497 -> m2_11  [key=2, style=dotted];
m2_498 -> m2_489  [key=0, style=bold, color=blue];
m2_1030 -> m2_1031  [key=0, style=solid];
m2_1031 -> m2_1032  [key=0, style=solid];
m2_1031 -> m2_140  [key=2, style=dotted];
m2_1031 -> m2_1033  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1032 -> m2_1030  [key=0, style=bold, color=blue];
m2_1953 -> m2_1954  [key=0, style=solid];
m2_1954 -> m2_1953  [key=0, style=bold, color=blue];
m2_1426 -> m2_1473  [key=0, style=solid];
m2_1426 -> m2_1474  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1426 -> m2_1475  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1426 -> m2_1476  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1426 -> m2_1477  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1426 -> m2_1478  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1426 -> m2_1479  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1426 -> m2_1480  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1426 -> m2_1481  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1426 -> m2_1482  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1473 -> m2_1474  [key=0, style=solid];
m2_1474 -> m2_1475  [key=0, style=solid];
m2_1475 -> m2_1476  [key=0, style=solid];
m2_1476 -> m2_1477  [key=0, style=solid];
m2_1477 -> m2_1478  [key=0, style=solid];
m2_1478 -> m2_1479  [key=0, style=solid];
m2_1479 -> m2_1480  [key=0, style=solid];
m2_1480 -> m2_1481  [key=0, style=solid];
m2_1481 -> m2_1482  [key=0, style=solid];
m2_1482 -> m2_1483  [key=0, style=solid];
m2_1483 -> m2_1426  [key=0, style=bold, color=blue];
m2_2644 -> m2_2645  [key=0, style=solid];
m2_2645 -> m2_2646  [key=0, style=solid];
m2_2645 -> m2_53  [key=2, style=dotted];
m2_2645 -> m2_2650  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_2646 -> m2_2647  [key=0, style=solid];
m2_2646 -> m2_2657  [key=2, style=dotted];
m2_2646 -> m2_2648  [key=1, style=dashed, color=darkseagreen4, label=writer];
m2_2646 -> m2_2649  [key=1, style=dashed, color=darkseagreen4, label=writer];
m2_2650 -> m2_2651  [key=0, style=solid];
m2_2650 -> m2_56  [key=2, style=dotted];
m2_2647 -> m2_2648  [key=0, style=solid];
m2_2647 -> m2_2658  [key=2, style=dotted];
m2_2648 -> m2_2649  [key=0, style=solid];
m2_2648 -> m2_2659  [key=2, style=dotted];
m2_2649 -> m2_2650  [key=0, style=solid];
m2_2649 -> m2_2660  [key=2, style=dotted];
m2_2651 -> m2_2652  [key=0, style=solid];
m2_2651 -> m2_2661  [key=2, style=dotted];
m2_2651 -> m2_174  [key=2, style=dotted];
m2_2652 -> m2_2653  [key=0, style=solid];
m2_2652 -> m2_2662  [key=2, style=dotted];
m2_2652 -> m2_2655  [key=1, style=dashed, color=darkseagreen4, label=a];
m2_2653 -> m2_2654  [key=0, style=solid];
m2_2655 -> m2_2656  [key=0, style=solid];
m2_2655 -> m2_819  [key=2, style=dotted];
m2_2655 -> m2_12  [key=2, style=dotted];
m2_2654 -> m2_2655  [key=0, style=solid];
m2_2654 -> m2_1156  [key=2, style=dotted];
m2_2654 -> m2_2663  [key=2, style=dotted];
m2_2656 -> m2_2644  [key=0, style=bold, color=blue];
m2_513 -> m2_514  [key=0, style=solid];
m2_514 -> m2_515  [key=0, style=solid];
m2_515 -> m2_516  [key=0, style=solid];
m2_515 -> m2_9  [key=2, style=dotted];
m2_516 -> m2_517  [key=0, style=solid];
m2_516 -> m2_11  [key=2, style=dotted];
m2_517 -> m2_518  [key=0, style=solid];
m2_517 -> m2_9  [key=2, style=dotted];
m2_518 -> m2_519  [key=0, style=solid];
m2_518 -> m2_11  [key=2, style=dotted];
m2_519 -> m2_513  [key=0, style=bold, color=blue];
m2_836 -> m2_837  [key=0, style=solid];
m2_837 -> m2_838  [key=0, style=solid];
m2_837 -> m2_841  [key=2, style=dotted];
m2_837 -> m2_208  [key=2, style=dotted];
m2_838 -> m2_839  [key=0, style=solid];
m2_838 -> m2_338  [key=2, style=dotted];
m2_839 -> m2_840  [key=0, style=solid];
m2_839 -> m2_11  [key=2, style=dotted];
m2_840 -> m2_836  [key=0, style=bold, color=blue];
m2_1768 -> m2_1769  [key=0, style=solid];
m2_1769 -> m2_1770  [key=0, style=solid];
m2_1769 -> m2_1786  [key=2, style=dotted];
m2_1769 -> m2_1771  [key=1, style=dashed, color=darkseagreen4, label=joe];
m2_1769 -> m2_1772  [key=1, style=dashed, color=darkseagreen4, label=joe];
m2_1769 -> m2_1777  [key=1, style=dashed, color=darkseagreen4, label=joe];
m2_1770 -> m2_1771  [key=0, style=solid];
m2_1771 -> m2_1772  [key=0, style=solid];
m2_1772 -> m2_1773  [key=0, style=solid];
m2_1777 -> m2_1778  [key=0, style=solid];
m2_1777 -> m2_338  [key=2, style=dotted];
m2_1773 -> m2_1774  [key=0, style=solid];
m2_1773 -> m2_1786  [key=2, style=dotted];
m2_1773 -> m2_1775  [key=1, style=dashed, color=darkseagreen4, label=martha];
m2_1773 -> m2_1776  [key=1, style=dashed, color=darkseagreen4, label=martha];
m2_1773 -> m2_1777  [key=1, style=dashed, color=darkseagreen4, label=martha];
m2_1774 -> m2_1775  [key=0, style=solid];
m2_1775 -> m2_1776  [key=0, style=solid];
m2_1776 -> m2_1777  [key=0, style=solid];
m2_1778 -> m2_1779  [key=0, style=solid];
m2_1778 -> m2_12  [key=2, style=dotted];
m2_1779 -> m2_1780  [key=0, style=solid];
m2_1779 -> m2_1779  [key=3, color=darkorchid, style=bold, label="Local variable string mikeString"];
m2_1780 -> m2_1781  [key=0, style=solid];
m2_1780 -> m2_93  [key=2, style=dotted];
m2_1781 -> m2_1782  [key=0, style=solid];
m2_1781 -> m2_1787  [key=2, style=dotted];
m2_1782 -> m2_1783  [key=0, style=solid];
m2_1782 -> m2_1782  [key=3, color=darkorchid, style=bold, label="Local variable string mikeFullDisclosureString"];
m2_1783 -> m2_1784  [key=0, style=solid];
m2_1783 -> m2_93  [key=2, style=dotted];
m2_1784 -> m2_1785  [key=0, style=solid];
m2_1784 -> m2_1787  [key=2, style=dotted];
m2_1785 -> m2_1768  [key=0, style=bold, color=blue];
m2_2102 -> m2_2103  [key=0, style=solid];
m2_2103 -> m2_2104  [key=0, style=solid];
m2_2104 -> m2_2102  [key=0, style=bold, color=blue];
m2_388 -> m2_389  [key=0, style=solid];
m2_389 -> m2_390  [key=0, style=solid];
m2_389 -> m2_402  [key=2, style=dotted];
m2_389 -> m2_392  [key=1, style=dashed, color=darkseagreen4, label=name];
m2_389 -> m2_393  [key=1, style=dashed, color=darkseagreen4, label=name];
m2_389 -> m2_394  [key=1, style=dashed, color=darkseagreen4, label=name];
m2_390 -> m2_391  [key=0, style=solid];
m2_390 -> m2_403  [key=2, style=dotted];
m2_390 -> m2_392  [key=1, style=dashed, color=darkseagreen4, label=p1];
m2_392 -> m2_393  [key=0, style=solid];
m2_392 -> m2_158  [key=2, style=dotted];
m2_393 -> m2_394  [key=0, style=solid];
m2_393 -> m2_158  [key=2, style=dotted];
m2_394 -> m2_395  [key=0, style=solid];
m2_394 -> m2_338  [key=2, style=dotted];
m2_394 -> m2_396  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_391 -> m2_392  [key=0, style=solid];
m2_391 -> m2_403  [key=2, style=dotted];
m2_391 -> m2_393  [key=1, style=dashed, color=darkseagreen4, label=p2];
m2_395 -> m2_396  [key=0, style=solid];
m2_395 -> m2_11  [key=2, style=dotted];
m2_396 -> m2_397  [key=0, style=solid];
m2_396 -> m2_93  [key=2, style=dotted];
m2_396 -> m2_398  [key=1, style=dashed, color=darkseagreen4, label=newName];
m2_396 -> m2_399  [key=1, style=dashed, color=darkseagreen4, label=newName];
m2_396 -> m2_400  [key=1, style=dashed, color=darkseagreen4, label=newName];
m2_397 -> m2_398  [key=0, style=solid];
m2_397 -> m2_11  [key=2, style=dotted];
m2_398 -> m2_399  [key=0, style=solid];
m2_398 -> m2_11  [key=2, style=dotted];
m2_399 -> m2_400  [key=0, style=solid];
m2_399 -> m2_11  [key=2, style=dotted];
m2_400 -> m2_401  [key=0, style=solid];
m2_400 -> m2_11  [key=2, style=dotted];
m2_401 -> m2_388  [key=0, style=bold, color=blue];
m2_1365 -> m2_1366  [key=0, style=solid];
m2_1366 -> m2_1367  [key=0, style=solid];
m2_1366 -> m2_648  [key=2, style=dotted];
m2_1366 -> m2_1368  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_1366 -> m2_1369  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_1366 -> m2_1370  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_1366 -> m2_1374  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_1367 -> m2_1368  [key=0, style=solid];
m2_1367 -> m2_209  [key=2, style=dotted];
m2_1368 -> m2_1369  [key=0, style=solid];
m2_1369 -> m2_1370  [key=0, style=solid];
m2_1370 -> m2_1371  [key=0, style=solid];
m2_1374 -> m2_1375  [key=0, style=solid];
m2_1374 -> m2_1289  [key=2, style=dotted];
m2_1371 -> m2_1372  [key=0, style=solid];
m2_1371 -> m2_221  [key=2, style=dotted];
m2_1371 -> m2_222  [key=2, style=dotted];
m2_1371 -> m2_1374  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m2_1371 -> m2_1380  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m2_1372 -> m2_1373  [key=0, style=solid];
m2_1380 -> m2_1381  [key=0, style=solid];
m2_1380 -> m2_11  [key=2, style=dotted];
m2_1373 -> m2_1374  [key=0, style=solid];
m2_1373 -> m2_1376  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m2_1376 -> m2_1377  [key=0, style=solid];
m2_1376 -> m2_11  [key=2, style=dotted];
m2_1375 -> m2_1376  [key=0, style=solid];
m2_1375 -> m2_338  [key=2, style=dotted];
m2_1375 -> m2_1377  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1377 -> m2_1378  [key=0, style=solid];
m2_1377 -> m2_93  [key=2, style=dotted];
m2_1377 -> m2_1379  [key=1, style=dashed, color=darkseagreen4, label=o2];
m2_1377 -> m2_1380  [key=1, style=dashed, color=darkseagreen4, label=o2];
m2_1377 -> m2_1381  [key=1, style=dashed, color=darkseagreen4, label=o2];
m2_1377 -> m2_1382  [key=1, style=dashed, color=darkseagreen4, label=o2];
m2_1377 -> m2_1383  [key=1, style=dashed, color=darkseagreen4, label=o2];
m2_1378 -> m2_1379  [key=0, style=solid];
m2_1378 -> m2_11  [key=2, style=dotted];
m2_1379 -> m2_1380  [key=0, style=solid];
m2_1379 -> m2_11  [key=2, style=dotted];
m2_1381 -> m2_1382  [key=0, style=solid];
m2_1381 -> m2_11  [key=2, style=dotted];
m2_1382 -> m2_1383  [key=0, style=solid];
m2_1382 -> m2_11  [key=2, style=dotted];
m2_1383 -> m2_1384  [key=0, style=solid];
m2_1383 -> m2_11  [key=2, style=dotted];
m2_1384 -> m2_1365  [key=0, style=bold, color=blue];
m2_2423 -> m2_2424  [key=0, style=solid];
m2_2424 -> m2_2425  [key=0, style=solid];
m2_2424 -> m2_2433  [key=2, style=dotted];
m2_2424 -> m2_2426  [key=1, style=dashed, color=darkseagreen4, label=b];
m2_2424 -> m2_2428  [key=1, style=dashed, color=darkseagreen4, label=b];
m2_2425 -> m2_2426  [key=0, style=solid];
m2_2426 -> m2_2427  [key=0, style=solid];
m2_2426 -> m2_2424  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Tests.Serialization.Aa a"];
m2_2428 -> m2_2429  [key=0, style=solid];
m2_2428 -> m2_9  [key=2, style=dotted];
m2_2428 -> m2_2430  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2427 -> m2_2428  [key=0, style=solid];
m2_2429 -> m2_2430  [key=0, style=solid];
m2_2429 -> m2_11  [key=2, style=dotted];
m2_2430 -> m2_2431  [key=0, style=solid];
m2_2430 -> m2_93  [key=2, style=dotted];
m2_2431 -> m2_2432  [key=0, style=solid];
m2_2431 -> m2_11  [key=2, style=dotted];
m2_2432 -> m2_2423  [key=0, style=bold, color=blue];
m2_570 -> m2_571  [key=0, style=solid];
m2_571 -> m2_572  [key=0, style=solid];
m2_571 -> m2_578  [key=2, style=dotted];
m2_571 -> m2_209  [key=2, style=dotted];
m2_572 -> m2_573  [key=0, style=solid];
m2_572 -> m2_338  [key=2, style=dotted];
m2_572 -> m2_574  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_573 -> m2_574  [key=0, style=solid];
m2_573 -> m2_11  [key=2, style=dotted];
m2_574 -> m2_575  [key=0, style=solid];
m2_574 -> m2_93  [key=2, style=dotted];
m2_574 -> m2_576  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_575 -> m2_576  [key=0, style=solid];
m2_575 -> m2_11  [key=2, style=dotted];
m2_576 -> m2_577  [key=0, style=solid];
m2_576 -> m2_209  [key=2, style=dotted];
m2_576 -> m2_11  [key=2, style=dotted];
m2_577 -> m2_570  [key=0, style=bold, color=blue];
m2_55 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_55 -> m2_56  [key=0, style=solid];
m2_2140 -> m2_2141  [key=0, style=solid];
m2_2141 -> m2_2142  [key=0, style=solid];
m2_2142 -> m2_2143  [key=0, style=solid];
m2_2142 -> m2_208  [key=2, style=dotted];
m2_2143 -> m2_2140  [key=0, style=bold, color=blue];
m2_2005 -> m2_2006  [key=0, style=solid];
m2_2006 -> m2_2007  [key=0, style=solid];
m2_2007 -> m2_2005  [key=0, style=bold, color=blue];
m2_1606 -> m2_1607  [key=0, style=solid];
m2_1607 -> m2_1608  [key=0, style=solid];
m2_1607 -> m2_1609  [key=2, style=dotted];
m2_1608 -> m2_1606  [key=0, style=bold, color=blue];
m2_1195 -> m2_1196  [key=0, style=solid];
m2_1196 -> m2_1197  [key=0, style=solid];
m2_1196 -> m2_1200  [key=2, style=dotted];
m2_1197 -> m2_1198  [key=0, style=solid];
m2_1197 -> m2_338  [key=2, style=dotted];
m2_1198 -> m2_1199  [key=0, style=solid];
m2_1198 -> m2_11  [key=2, style=dotted];
m2_1199 -> m2_1195  [key=0, style=bold, color=blue];
m2_725 -> m2_726  [key=0, style=solid];
m2_726 -> m2_727  [key=0, style=solid];
m2_727 -> m2_728  [key=0, style=solid];
m2_727 -> m2_140  [key=2, style=dotted];
m2_727 -> m2_729  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_728 -> m2_725  [key=0, style=bold, color=blue];
m2_3120 -> m2_3121  [key=0, style=solid];
m2_3121 -> m2_3122  [key=0, style=solid];
m2_3122 -> m2_3120  [key=0, style=bold, color=blue];
m2_2249 -> m2_2250  [key=0, style=solid];
m2_2250 -> m2_2251  [key=0, style=solid];
m2_2250 -> m2_93  [key=2, style=dotted];
m2_2250 -> m2_2252  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m2_2251 -> m2_2252  [key=0, style=solid];
m2_2251 -> m2_11  [key=2, style=dotted];
m2_2252 -> m2_2253  [key=0, style=solid];
m2_2252 -> m2_11  [key=2, style=dotted];
m2_2253 -> m2_2249  [key=0, style=bold, color=blue];
m2_3196 -> m2_3197  [key=0, style=solid];
m2_3197 -> m2_3198  [key=0, style=solid];
m2_3198 -> m2_3196  [key=0, style=bold, color=blue];
m2_586 -> m2_587  [key=0, style=solid];
m2_587 -> m2_588  [key=0, style=solid];
m2_587 -> m2_140  [key=2, style=dotted];
m2_587 -> m2_589  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_587 -> m2_587  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_588 -> m2_586  [key=0, style=bold, color=blue];
m2_3171 -> m2_3172  [key=0, style=solid];
m2_3172 -> m2_3171  [key=0, style=bold, color=blue];
m2_3051 -> m2_3052  [key=0, style=solid];
m2_3052 -> m2_3053  [key=0, style=solid];
m2_3052 -> m2_208  [key=2, style=dotted];
m2_3052 -> m2_209  [key=2, style=dotted];
m2_3052 -> m2_221  [key=2, style=dotted];
m2_3052 -> m2_222  [key=2, style=dotted];
m2_3053 -> m2_3054  [key=0, style=solid];
m2_3053 -> m2_213  [key=2, style=dotted];
m2_3053 -> m2_3056  [key=2, style=dotted];
m2_3053 -> m2_716  [key=2, style=dotted];
m2_3054 -> m2_3055  [key=0, style=solid];
m2_3054 -> m2_11  [key=2, style=dotted];
m2_3055 -> m2_3051  [key=0, style=bold, color=blue];
m2_34 -> m2_52  [key=0, style=solid, color=green];
m2_34 -> m2_57  [key=1, style=dashed, color=green, label=int];
m2_34 -> m2_65  [key=1, style=dashed, color=green, label=int];
m2_34 -> m2_70  [key=1, style=dashed, color=green, label=int];
m2_34 -> m2_72  [key=1, style=dashed, color=green, label=int];
m2_34 -> m2_25  [key=3, color=darkorchid, style=bold, label="Parameter variable int start"];
m2_34 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_34 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_34 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_34 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_34 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_34 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_37  [key=2, style=dotted];
m2_34 -> m2_11  [key=2, style=dotted];
m2_52 -> m2_53  [key=0, style=solid, color=green];
m2_52 -> m2_72  [key=0, style=solid, color=green];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label=ch];
m2_72 -> m2_73  [key=0, style=solid, color=green];
m2_54 -> m2_57  [key=0, style=solid, color=green];
m2_54 -> m2_55  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_62  [key=0, style=solid];
m2_65 -> m2_66  [key=0, style=solid, color=green];
m2_65 -> m2_72  [key=0, style=solid, color=green];
m2_61 -> m2_65  [key=0, style=solid, color=green];
m2_61 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_61 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_61 -> m2_62  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid, color=green];
m2_64 -> m2_70  [key=1, style=dashed, color=green, label=int];
m2_64 -> m2_72  [key=1, style=dashed, color=green, label=int];
m2_64 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_64 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m2_64 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m2_64 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_64 -> m2_10  [key=2, style=dotted];
m2_64 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m2_64 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m2_66 -> m2_70  [key=0, style=solid, color=green];
m2_66 -> m2_24  [key=2, style=dotted];
m2_66 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_11  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid, color=green];
m2_70 -> m2_72  [key=0, style=solid, color=green];
m2_70 -> m2_29  [key=2, style=dotted, color=green];
m2_70 -> m2_101  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_70 -> m2_58  [key=0, style=bold, color=blue];
m2_56 -> m2_72  [key=0, style=solid, color=green];
m2_56 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_67 -> m2_72  [key=1, style=dashed, color=green, label=int];
m2_67 -> m2_68  [key=0, style=solid, color=green];
m2_67 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_67 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_67 -> m2_11  [key=2, style=dotted];
m2_68 -> m2_72  [key=0, style=solid, color=green];
m2_68 -> m2_69  [key=0, style=solid, color=green];
m2_68 -> m2_29  [key=2, style=dotted, color=green];
m2_68 -> m2_101  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_68 -> m2_73  [key=2, style=dotted];
m2_69 -> m2_72  [key=0, style=solid, color=green];
m2_69 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_11  [key=2, style=dotted];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_71  [key=2, style=dotted];
m2_59 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m2_59 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m2_59 -> m2_63  [key=1, style=dashed, color=red, label=executorObject];
m2_59 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m2_62 -> m2_63  [key=0, style=solid, color=red];
m2_60 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_60 -> m2_61  [key=0, style=solid];
m2_63 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_63 -> m2_64  [key=0, style=solid, color=red];
m2_63 -> m2_9  [key=2, style=dotted, color=red];
m2_73 -> m2_34  [key=0, style=bold, color=blue];
m2_1235 -> m2_1236  [key=0, style=solid];
m2_1235 -> m2_1282  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m2_1236 -> m2_1237  [key=0, style=solid];
m2_1236 -> m2_237  [key=2, style=dotted];
m2_1237 -> m2_1235  [key=0, style=bold, color=blue];
m2_3214 -> m2_3215  [key=0, style=solid];
m2_3215 -> m2_3214  [key=0, style=bold, color=blue];
m2_1331 -> m2_1332  [key=0, style=solid];
m2_1331 -> m2_1333  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1331 -> m2_1334  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1331 -> m2_1335  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1331 -> m2_1336  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1331 -> m2_1337  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1331 -> m2_1338  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1331 -> m2_1339  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1331 -> m2_1340  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1331 -> m2_1341  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1331 -> m2_1342  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1331 -> m2_1343  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1331 -> m2_1344  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1331 -> m2_1345  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1331 -> m2_1346  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1331 -> m2_1347  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1331 -> m2_1348  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1331 -> m2_1349  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1332 -> m2_1333  [key=0, style=solid];
m2_1332 -> m2_1351  [key=2, style=dotted];
m2_1333 -> m2_1334  [key=0, style=solid];
m2_1333 -> m2_1352  [key=2, style=dotted];
m2_1334 -> m2_1335  [key=0, style=solid];
m2_1334 -> m2_1351  [key=2, style=dotted];
m2_1335 -> m2_1336  [key=0, style=solid];
m2_1335 -> m2_1351  [key=2, style=dotted];
m2_1336 -> m2_1337  [key=0, style=solid];
m2_1336 -> m2_1351  [key=2, style=dotted];
m2_1337 -> m2_1338  [key=0, style=solid];
m2_1337 -> m2_1351  [key=2, style=dotted];
m2_1338 -> m2_1339  [key=0, style=solid];
m2_1338 -> m2_1353  [key=2, style=dotted];
m2_1339 -> m2_1340  [key=0, style=solid];
m2_1339 -> m2_1354  [key=2, style=dotted];
m2_1340 -> m2_1341  [key=0, style=solid];
m2_1340 -> m2_1355  [key=2, style=dotted];
m2_1341 -> m2_1342  [key=0, style=solid];
m2_1341 -> m2_1356  [key=2, style=dotted];
m2_1342 -> m2_1343  [key=0, style=solid];
m2_1342 -> m2_1357  [key=2, style=dotted];
m2_1343 -> m2_1344  [key=0, style=solid];
m2_1343 -> m2_1358  [key=2, style=dotted];
m2_1344 -> m2_1345  [key=0, style=solid];
m2_1344 -> m2_1359  [key=2, style=dotted];
m2_1345 -> m2_1346  [key=0, style=solid];
m2_1345 -> m2_1360  [key=2, style=dotted];
m2_1346 -> m2_1347  [key=0, style=solid];
m2_1346 -> m2_1361  [key=2, style=dotted];
m2_1347 -> m2_1348  [key=0, style=solid];
m2_1347 -> m2_1362  [key=2, style=dotted];
m2_1348 -> m2_1349  [key=0, style=solid];
m2_1348 -> m2_1363  [key=2, style=dotted];
m2_1349 -> m2_1350  [key=0, style=solid];
m2_1349 -> m2_1364  [key=2, style=dotted];
m2_1350 -> m2_1331  [key=0, style=bold, color=blue];
m2_1077 -> m2_1078  [key=0, style=solid];
m2_1078 -> m2_1079  [key=0, style=solid];
m2_1078 -> m2_1090  [key=2, style=dotted];
m2_1078 -> m2_1080  [key=1, style=dashed, color=darkseagreen4, label=f];
m2_1078 -> m2_1081  [key=1, style=dashed, color=darkseagreen4, label=f];
m2_1078 -> m2_1082  [key=1, style=dashed, color=darkseagreen4, label=f];
m2_1079 -> m2_1080  [key=0, style=solid];
m2_1079 -> m2_1091  [key=2, style=dotted];
m2_1079 -> m2_158  [key=2, style=dotted];
m2_1080 -> m2_1081  [key=0, style=solid];
m2_1080 -> m2_1091  [key=2, style=dotted];
m2_1080 -> m2_158  [key=2, style=dotted];
m2_1081 -> m2_1082  [key=0, style=solid];
m2_1081 -> m2_1091  [key=2, style=dotted];
m2_1081 -> m2_158  [key=2, style=dotted];
m2_1082 -> m2_1083  [key=0, style=solid];
m2_1082 -> m2_338  [key=2, style=dotted];
m2_1082 -> m2_1084  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1083 -> m2_1084  [key=0, style=solid];
m2_1083 -> m2_11  [key=2, style=dotted];
m2_1084 -> m2_1085  [key=0, style=solid];
m2_1084 -> m2_93  [key=2, style=dotted];
m2_1084 -> m2_1086  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m2_1084 -> m2_1087  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m2_1084 -> m2_1088  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m2_1085 -> m2_1086  [key=0, style=solid];
m2_1085 -> m2_11  [key=2, style=dotted];
m2_1086 -> m2_1087  [key=0, style=solid];
m2_1086 -> m2_11  [key=2, style=dotted];
m2_1087 -> m2_1088  [key=0, style=solid];
m2_1087 -> m2_11  [key=2, style=dotted];
m2_1088 -> m2_1089  [key=0, style=solid];
m2_1088 -> m2_11  [key=2, style=dotted];
m2_1089 -> m2_1077  [key=0, style=bold, color=blue];
m2_145 -> m2_146  [key=0, style=solid];
m2_146 -> m2_147  [key=0, style=solid];
m2_146 -> m2_156  [key=2, style=dotted];
m2_146 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label=a1];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_156  [key=2, style=dotted];
m2_147 -> m2_150  [key=1, style=dashed, color=darkseagreen4, label=a2];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_158  [key=2, style=dotted];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_157  [key=2, style=dotted];
m2_148 -> m2_150  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m2_148 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m2_148 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m2_148 -> m2_154  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_158  [key=2, style=dotted];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_9  [key=2, style=dotted];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_11  [key=2, style=dotted];
m2_154 -> m2_155  [key=0, style=solid];
m2_154 -> m2_11  [key=2, style=dotted];
m2_152 -> m2_153  [key=0, style=solid];
m2_152 -> m2_93  [key=2, style=dotted];
m2_152 -> m2_154  [key=1, style=dashed, color=darkseagreen4, label=articles2];
m2_155 -> m2_145  [key=0, style=bold, color=blue];
m2_2233 -> m2_2234  [key=0, style=solid];
m2_2234 -> m2_2235  [key=0, style=solid];
m2_2234 -> m2_208  [key=2, style=dotted];
m2_2235 -> m2_2233  [key=0, style=bold, color=blue];
m2_555 -> m2_556  [key=0, style=solid];
m2_556 -> m2_557  [key=0, style=solid];
m2_556 -> m2_559  [key=1, style=dashed, color=darkseagreen4, label=boolRef];
m2_557 -> m2_558  [key=0, style=solid];
m2_557 -> m2_569  [key=2, style=dotted];
m2_559 -> m2_560  [key=0, style=solid];
m2_559 -> m2_11  [key=2, style=dotted];
m2_558 -> m2_559  [key=0, style=solid];
m2_558 -> m2_9  [key=2, style=dotted];
m2_558 -> m2_560  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_560 -> m2_561  [key=0, style=solid];
m2_560 -> m2_93  [key=2, style=dotted];
m2_561 -> m2_562  [key=0, style=solid];
m2_561 -> m2_11  [key=2, style=dotted];
m2_562 -> m2_563  [key=0, style=solid];
m2_562 -> m2_565  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializerTestRef];
m2_563 -> m2_564  [key=0, style=solid];
m2_563 -> m2_569  [key=2, style=dotted];
m2_565 -> m2_566  [key=0, style=solid];
m2_565 -> m2_11  [key=2, style=dotted];
m2_564 -> m2_565  [key=0, style=solid];
m2_564 -> m2_9  [key=2, style=dotted];
m2_564 -> m2_566  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_566 -> m2_567  [key=0, style=solid];
m2_566 -> m2_93  [key=2, style=dotted];
m2_567 -> m2_568  [key=0, style=solid];
m2_567 -> m2_11  [key=2, style=dotted];
m2_568 -> m2_555  [key=0, style=bold, color=blue];
m2_3062 -> m2_3063  [key=0, style=solid];
m2_3063 -> m2_3064  [key=0, style=solid];
m2_3063 -> m2_208  [key=2, style=dotted];
m2_3063 -> m2_209  [key=2, style=dotted];
m2_3063 -> m2_221  [key=2, style=dotted];
m2_3063 -> m2_222  [key=2, style=dotted];
m2_3063 -> m2_3067  [key=1, style=dashed, color=darkseagreen4, label=dates];
m2_3064 -> m2_3065  [key=0, style=solid];
m2_3064 -> m2_264  [key=2, style=dotted];
m2_3064 -> m2_3071  [key=1, style=dashed, color=darkseagreen4, label=sw];
m2_3067 -> m2_3068  [key=0, style=solid];
m2_3067 -> m2_2387  [key=2, style=dotted];
m2_3065 -> m2_3066  [key=0, style=solid];
m2_3065 -> m2_2303  [key=2, style=dotted];
m2_3065 -> m2_3067  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_3065 -> m2_3068  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_3065 -> m2_3069  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_3065 -> m2_3070  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_3071 -> m2_3072  [key=0, style=solid];
m2_3071 -> m2_2307  [key=2, style=dotted];
m2_3066 -> m2_3067  [key=0, style=solid];
m2_3066 -> m2_213  [key=2, style=dotted];
m2_3066 -> m2_3056  [key=2, style=dotted];
m2_3066 -> m2_2494  [key=2, style=dotted];
m2_3068 -> m2_3069  [key=0, style=solid];
m2_3068 -> m2_1499  [key=2, style=dotted];
m2_3069 -> m2_3070  [key=0, style=solid];
m2_3069 -> m2_11  [key=2, style=dotted];
m2_3070 -> m2_3071  [key=0, style=solid];
m2_3070 -> m2_11  [key=2, style=dotted];
m2_3072 -> m2_3073  [key=0, style=solid];
m2_3072 -> m2_11  [key=2, style=dotted];
m2_3073 -> m2_3062  [key=0, style=bold, color=blue];
m2_947 -> m2_948  [key=0, style=solid];
m2_948 -> m2_949  [key=0, style=solid];
m2_948 -> m2_952  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_948 -> m2_941  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_949 -> m2_950  [key=0, style=solid];
m2_949 -> m2_140  [key=2, style=dotted];
m2_949 -> m2_951  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_950 -> m2_947  [key=0, style=bold, color=blue];
m2_2160 -> m2_2161  [key=0, style=solid];
m2_2161 -> m2_2162  [key=0, style=solid];
m2_2161 -> m2_2156  [key=2, style=dotted];
m2_2161 -> m2_2163  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2161 -> m2_2164  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2161 -> m2_2167  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2161 -> m2_2168  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2162 -> m2_2163  [key=0, style=solid];
m2_2162 -> m2_2172  [key=2, style=dotted];
m2_2163 -> m2_2164  [key=0, style=solid];
m2_2163 -> m2_2172  [key=2, style=dotted];
m2_2164 -> m2_2165  [key=0, style=solid];
m2_2164 -> m2_338  [key=2, style=dotted];
m2_2164 -> m2_2166  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2167 -> m2_2168  [key=0, style=solid];
m2_2167 -> m2_11  [key=2, style=dotted];
m2_2168 -> m2_2169  [key=0, style=solid];
m2_2168 -> m2_11  [key=2, style=dotted];
m2_2165 -> m2_2166  [key=0, style=solid];
m2_2165 -> m2_11  [key=2, style=dotted];
m2_2166 -> m2_2167  [key=0, style=solid];
m2_2166 -> m2_93  [key=2, style=dotted];
m2_2166 -> m2_2168  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2166 -> m2_2169  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2166 -> m2_2170  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2169 -> m2_2170  [key=0, style=solid];
m2_2169 -> m2_11  [key=2, style=dotted];
m2_2170 -> m2_2171  [key=0, style=solid];
m2_2170 -> m2_11  [key=2, style=dotted];
m2_2171 -> m2_2160  [key=0, style=bold, color=blue];
m2_1427 -> m2_1428  [key=0, style=solid];
m2_1428 -> m2_1429  [key=0, style=solid];
m2_1428 -> m2_93  [key=2, style=dotted];
m2_1428 -> m2_1430  [key=1, style=dashed, color=darkseagreen4, label=myA];
m2_1428 -> m2_1431  [key=1, style=dashed, color=darkseagreen4, label=myA];
m2_1428 -> m2_1432  [key=1, style=dashed, color=darkseagreen4, label=myA];
m2_1428 -> m2_1433  [key=1, style=dashed, color=darkseagreen4, label=myA];
m2_1428 -> m2_1434  [key=1, style=dashed, color=darkseagreen4, label=myA];
m2_1428 -> m2_1435  [key=1, style=dashed, color=darkseagreen4, label=myA];
m2_1428 -> m2_1436  [key=1, style=dashed, color=darkseagreen4, label=myA];
m2_1429 -> m2_1430  [key=0, style=solid];
m2_1429 -> m2_1457  [key=2, style=dotted];
m2_1429 -> m2_1458  [key=2, style=dotted];
m2_1429 -> m2_11  [key=2, style=dotted];
m2_1430 -> m2_1431  [key=0, style=solid];
m2_1430 -> m2_1457  [key=2, style=dotted];
m2_1430 -> m2_1458  [key=2, style=dotted];
m2_1430 -> m2_11  [key=2, style=dotted];
m2_1431 -> m2_1432  [key=0, style=solid];
m2_1431 -> m2_1459  [key=2, style=dotted];
m2_1431 -> m2_1458  [key=2, style=dotted];
m2_1431 -> m2_11  [key=2, style=dotted];
m2_1432 -> m2_1433  [key=0, style=solid];
m2_1432 -> m2_1459  [key=2, style=dotted];
m2_1432 -> m2_1458  [key=2, style=dotted];
m2_1432 -> m2_11  [key=2, style=dotted];
m2_1433 -> m2_1434  [key=0, style=solid];
m2_1433 -> m2_1459  [key=2, style=dotted];
m2_1433 -> m2_1458  [key=2, style=dotted];
m2_1433 -> m2_11  [key=2, style=dotted];
m2_1434 -> m2_1435  [key=0, style=solid];
m2_1434 -> m2_1459  [key=2, style=dotted];
m2_1434 -> m2_1458  [key=2, style=dotted];
m2_1434 -> m2_11  [key=2, style=dotted];
m2_1435 -> m2_1436  [key=0, style=solid];
m2_1435 -> m2_1459  [key=2, style=dotted];
m2_1435 -> m2_1458  [key=2, style=dotted];
m2_1435 -> m2_11  [key=2, style=dotted];
m2_1436 -> m2_1437  [key=0, style=solid];
m2_1436 -> m2_1459  [key=2, style=dotted];
m2_1436 -> m2_1458  [key=2, style=dotted];
m2_1436 -> m2_11  [key=2, style=dotted];
m2_1437 -> m2_1438  [key=0, style=solid];
m2_1437 -> m2_93  [key=2, style=dotted];
m2_1437 -> m2_1439  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_1437 -> m2_1440  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_1437 -> m2_1441  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_1437 -> m2_1442  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_1437 -> m2_1443  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_1437 -> m2_1444  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_1437 -> m2_1445  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_1437 -> m2_1446  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_1437 -> m2_1447  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_1437 -> m2_1448  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_1437 -> m2_1449  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_1437 -> m2_1450  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_1437 -> m2_1451  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_1437 -> m2_1452  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_1437 -> m2_1453  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_1437 -> m2_1454  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_1437 -> m2_1455  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_1438 -> m2_1439  [key=0, style=solid];
m2_1438 -> m2_1457  [key=2, style=dotted];
m2_1438 -> m2_1458  [key=2, style=dotted];
m2_1438 -> m2_11  [key=2, style=dotted];
m2_1439 -> m2_1440  [key=0, style=solid];
m2_1439 -> m2_1457  [key=2, style=dotted];
m2_1439 -> m2_1458  [key=2, style=dotted];
m2_1439 -> m2_11  [key=2, style=dotted];
m2_1440 -> m2_1441  [key=0, style=solid];
m2_1440 -> m2_1459  [key=2, style=dotted];
m2_1440 -> m2_1458  [key=2, style=dotted];
m2_1440 -> m2_11  [key=2, style=dotted];
m2_1441 -> m2_1442  [key=0, style=solid];
m2_1441 -> m2_1459  [key=2, style=dotted];
m2_1441 -> m2_1458  [key=2, style=dotted];
m2_1441 -> m2_11  [key=2, style=dotted];
m2_1442 -> m2_1443  [key=0, style=solid];
m2_1442 -> m2_1459  [key=2, style=dotted];
m2_1442 -> m2_1458  [key=2, style=dotted];
m2_1442 -> m2_11  [key=2, style=dotted];
m2_1443 -> m2_1444  [key=0, style=solid];
m2_1443 -> m2_1459  [key=2, style=dotted];
m2_1443 -> m2_1458  [key=2, style=dotted];
m2_1443 -> m2_11  [key=2, style=dotted];
m2_1444 -> m2_1445  [key=0, style=solid];
m2_1444 -> m2_1459  [key=2, style=dotted];
m2_1444 -> m2_1458  [key=2, style=dotted];
m2_1444 -> m2_11  [key=2, style=dotted];
m2_1445 -> m2_1446  [key=0, style=solid];
m2_1445 -> m2_1459  [key=2, style=dotted];
m2_1445 -> m2_1458  [key=2, style=dotted];
m2_1445 -> m2_11  [key=2, style=dotted];
m2_1446 -> m2_1447  [key=0, style=solid];
m2_1446 -> m2_11  [key=2, style=dotted];
m2_1447 -> m2_1448  [key=0, style=solid];
m2_1447 -> m2_11  [key=2, style=dotted];
m2_1448 -> m2_1449  [key=0, style=solid];
m2_1448 -> m2_11  [key=2, style=dotted];
m2_1449 -> m2_1450  [key=0, style=solid];
m2_1449 -> m2_11  [key=2, style=dotted];
m2_1450 -> m2_1451  [key=0, style=solid];
m2_1450 -> m2_1459  [key=2, style=dotted];
m2_1450 -> m2_1458  [key=2, style=dotted];
m2_1450 -> m2_11  [key=2, style=dotted];
m2_1451 -> m2_1452  [key=0, style=solid];
m2_1451 -> m2_1459  [key=2, style=dotted];
m2_1451 -> m2_1458  [key=2, style=dotted];
m2_1451 -> m2_11  [key=2, style=dotted];
m2_1452 -> m2_1453  [key=0, style=solid];
m2_1452 -> m2_11  [key=2, style=dotted];
m2_1453 -> m2_1454  [key=0, style=solid];
m2_1453 -> m2_1459  [key=2, style=dotted];
m2_1453 -> m2_1458  [key=2, style=dotted];
m2_1453 -> m2_11  [key=2, style=dotted];
m2_1454 -> m2_1455  [key=0, style=solid];
m2_1454 -> m2_1459  [key=2, style=dotted];
m2_1454 -> m2_1458  [key=2, style=dotted];
m2_1454 -> m2_11  [key=2, style=dotted];
m2_1455 -> m2_1456  [key=0, style=solid];
m2_1455 -> m2_1459  [key=2, style=dotted];
m2_1455 -> m2_1458  [key=2, style=dotted];
m2_1455 -> m2_11  [key=2, style=dotted];
m2_1456 -> m2_1427  [key=0, style=bold, color=blue];
m2_1948 -> m2_1949  [key=0, style=solid];
m2_1949 -> m2_1948  [key=0, style=bold, color=blue];
m2_676 -> m2_677  [key=0, style=solid];
m2_677 -> m2_678  [key=0, style=solid];
m2_677 -> m2_677  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_678 -> m2_679  [key=0, style=solid];
m2_678 -> m2_93  [key=2, style=dotted];
m2_678 -> m2_680  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_678 -> m2_681  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_678 -> m2_682  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_678 -> m2_683  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_679 -> m2_680  [key=0, style=solid];
m2_679 -> m2_674  [key=2, style=dotted];
m2_680 -> m2_681  [key=0, style=solid];
m2_680 -> m2_11  [key=2, style=dotted];
m2_681 -> m2_682  [key=0, style=solid];
m2_681 -> m2_11  [key=2, style=dotted];
m2_682 -> m2_683  [key=0, style=solid];
m2_682 -> m2_11  [key=2, style=dotted];
m2_683 -> m2_684  [key=0, style=solid];
m2_683 -> m2_11  [key=2, style=dotted];
m2_684 -> m2_676  [key=0, style=bold, color=blue];
m2_300 -> m2_301  [key=0, style=solid];
m2_301 -> m2_302  [key=0, style=solid];
m2_301 -> m2_304  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_301 -> m2_291  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_302 -> m2_303  [key=0, style=solid];
m2_302 -> m2_263  [key=2, style=dotted];
m2_302 -> m2_304  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_304 -> m2_305  [key=0, style=solid];
m2_304 -> m2_269  [key=2, style=dotted];
m2_304 -> m2_308  [key=2, style=dotted];
m2_304 -> m2_306  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_303 -> m2_304  [key=0, style=solid];
m2_305 -> m2_306  [key=0, style=solid];
m2_305 -> m2_11  [key=2, style=dotted];
m2_306 -> m2_307  [key=0, style=solid];
m2_306 -> m2_11  [key=2, style=dotted];
m2_307 -> m2_300  [key=0, style=bold, color=blue];
m2_704 -> m2_705  [key=0, style=solid];
m2_705 -> m2_706  [key=0, style=solid];
m2_705 -> m2_715  [key=2, style=dotted];
m2_705 -> m2_707  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_705 -> m2_708  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_705 -> m2_709  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_705 -> m2_710  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_705 -> m2_712  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_706 -> m2_707  [key=0, style=solid];
m2_707 -> m2_708  [key=0, style=solid];
m2_708 -> m2_709  [key=0, style=solid];
m2_709 -> m2_710  [key=0, style=solid];
m2_710 -> m2_711  [key=0, style=solid];
m2_710 -> m2_338  [key=2, style=dotted];
m2_712 -> m2_713  [key=0, style=solid];
m2_712 -> m2_213  [key=2, style=dotted];
m2_712 -> m2_716  [key=2, style=dotted];
m2_711 -> m2_712  [key=0, style=solid];
m2_711 -> m2_11  [key=2, style=dotted];
m2_713 -> m2_714  [key=0, style=solid];
m2_713 -> m2_11  [key=2, style=dotted];
m2_714 -> m2_704  [key=0, style=bold, color=blue];
m2_2804 -> m2_2805  [key=0, style=solid];
m2_2805 -> m2_2806  [key=0, style=solid];
m2_2805 -> m2_93  [key=2, style=dotted];
m2_2805 -> m2_2807  [key=1, style=dashed, color=darkseagreen4, label=uris];
m2_2806 -> m2_2807  [key=0, style=solid];
m2_2806 -> m2_11  [key=2, style=dotted];
m2_2807 -> m2_2808  [key=0, style=solid];
m2_2807 -> m2_827  [key=2, style=dotted];
m2_2807 -> m2_11  [key=2, style=dotted];
m2_2808 -> m2_2809  [key=0, style=solid];
m2_2808 -> m2_93  [key=2, style=dotted];
m2_2809 -> m2_2810  [key=0, style=solid];
m2_2809 -> m2_674  [key=2, style=dotted];
m2_2810 -> m2_2811  [key=0, style=solid];
m2_2810 -> m2_2817  [key=2, style=dotted];
m2_2810 -> m2_2812  [key=1, style=dashed, color=darkseagreen4, label=i1];
m2_2811 -> m2_2812  [key=0, style=solid];
m2_2811 -> m2_827  [key=2, style=dotted];
m2_2812 -> m2_2813  [key=0, style=solid];
m2_2812 -> m2_11  [key=2, style=dotted];
m2_2813 -> m2_2814  [key=0, style=solid];
m2_2813 -> m2_93  [key=2, style=dotted];
m2_2813 -> m2_2815  [key=1, style=dashed, color=darkseagreen4, label=uri];
m2_2814 -> m2_2815  [key=0, style=solid];
m2_2814 -> m2_674  [key=2, style=dotted];
m2_2815 -> m2_2816  [key=0, style=solid];
m2_2815 -> m2_2817  [key=2, style=dotted];
m2_2815 -> m2_11  [key=2, style=dotted];
m2_2816 -> m2_2804  [key=0, style=bold, color=blue];
m2_238 -> m2_239  [key=0, style=solid];
m2_239 -> m2_240  [key=0, style=solid];
m2_239 -> m2_28  [key=2, style=dotted];
m2_239 -> m2_242  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m2_240 -> m2_241  [key=0, style=solid];
m2_240 -> m2_9  [key=2, style=dotted];
m2_240 -> m2_242  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_242 -> m2_243  [key=0, style=solid];
m2_242 -> m2_251  [key=2, style=dotted];
m2_242 -> m2_242  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m2_242 -> m2_244  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m2_242 -> m2_245  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m2_242 -> m2_246  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m2_242 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m2_242 -> m2_248  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m2_242 -> m2_249  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m2_241 -> m2_242  [key=0, style=solid];
m2_241 -> m2_11  [key=2, style=dotted];
m2_243 -> m2_244  [key=0, style=solid];
m2_243 -> m2_11  [key=2, style=dotted];
m2_244 -> m2_245  [key=0, style=solid];
m2_244 -> m2_11  [key=2, style=dotted];
m2_245 -> m2_246  [key=0, style=solid];
m2_245 -> m2_11  [key=2, style=dotted];
m2_246 -> m2_247  [key=0, style=solid];
m2_246 -> m2_11  [key=2, style=dotted];
m2_247 -> m2_248  [key=0, style=solid];
m2_247 -> m2_11  [key=2, style=dotted];
m2_248 -> m2_249  [key=0, style=solid];
m2_248 -> m2_11  [key=2, style=dotted];
m2_249 -> m2_250  [key=0, style=solid];
m2_249 -> m2_11  [key=2, style=dotted];
m2_250 -> m2_238  [key=0, style=bold, color=blue];
m2_1701 -> m2_1702  [key=0, style=solid];
m2_1702 -> m2_1703  [key=0, style=solid];
m2_1702 -> m2_1702  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1703 -> m2_1704  [key=0, style=solid];
m2_1703 -> m2_93  [key=2, style=dotted];
m2_1703 -> m2_1705  [key=1, style=dashed, color=darkseagreen4, label=cc];
m2_1703 -> m2_1706  [key=1, style=dashed, color=darkseagreen4, label=cc];
m2_1704 -> m2_1705  [key=0, style=solid];
m2_1704 -> m2_11  [key=2, style=dotted];
m2_1705 -> m2_1706  [key=0, style=solid];
m2_1705 -> m2_11  [key=2, style=dotted];
m2_1706 -> m2_1707  [key=0, style=solid];
m2_1706 -> m2_11  [key=2, style=dotted];
m2_1707 -> m2_1701  [key=0, style=bold, color=blue];
m2_2236 -> m2_2237  [key=0, style=solid];
m2_2237 -> m2_2238  [key=0, style=solid];
m2_2237 -> m2_2233  [key=2, style=dotted];
m2_2237 -> m2_2240  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m2_2237 -> m2_2241  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m2_2237 -> m2_2244  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m2_2238 -> m2_2241  [key=0, style=solid];
m2_2238 -> m2_1219  [key=2, style=dotted];
m2_2240 -> m2_2241  [key=0, style=solid];
m2_2240 -> m2_326  [key=2, style=dotted];
m2_2241 -> m2_2242  [key=0, style=solid];
m2_2241 -> m2_9  [key=2, style=dotted];
m2_2244 -> m2_2245  [key=0, style=solid];
m2_2244 -> m2_338  [key=2, style=dotted];
m2_2239 -> m2_2240  [key=0, style=solid];
m2_2242 -> m2_2243  [key=0, style=solid];
m2_2242 -> m2_93  [key=2, style=dotted];
m2_2243 -> m2_2244  [key=0, style=solid];
m2_2243 -> m2_2248  [key=2, style=dotted];
m2_2243 -> m2_11  [key=2, style=dotted];
m2_2245 -> m2_2246  [key=0, style=solid];
m2_2245 -> m2_93  [key=2, style=dotted];
m2_2246 -> m2_2247  [key=0, style=solid];
m2_2246 -> m2_2248  [key=2, style=dotted];
m2_2246 -> m2_11  [key=2, style=dotted];
m2_2247 -> m2_2236  [key=0, style=bold, color=blue];
m2_2227 -> m2_2228  [key=0, style=solid];
m2_2228 -> m2_2229  [key=0, style=solid];
m2_2228 -> m2_2232  [key=2, style=dotted];
m2_2229 -> m2_2230  [key=0, style=solid];
m2_2229 -> m2_338  [key=2, style=dotted];
m2_2230 -> m2_2231  [key=0, style=solid];
m2_2230 -> m2_11  [key=2, style=dotted];
m2_2231 -> m2_2227  [key=0, style=bold, color=blue];
m2_1500 -> m2_1501  [key=0, style=solid];
m2_1501 -> m2_1502  [key=0, style=solid];
m2_1501 -> m2_1511  [key=2, style=dotted];
m2_1501 -> m2_1504  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m2_1501 -> m2_1505  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m2_1501 -> m2_1509  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m2_1502 -> m2_1503  [key=0, style=solid];
m2_1502 -> m2_1512  [key=2, style=dotted];
m2_1502 -> m2_1504  [key=1, style=dashed, color=darkseagreen4, label=document];
m2_1504 -> m2_1505  [key=0, style=solid];
m2_1505 -> m2_1506  [key=0, style=solid];
m2_1505 -> m2_338  [key=2, style=dotted];
m2_1505 -> m2_1507  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1505 -> m2_1508  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1509 -> m2_1510  [key=0, style=solid];
m2_1509 -> m2_11  [key=2, style=dotted];
m2_1503 -> m2_1504  [key=0, style=solid];
m2_1503 -> m2_1513  [key=2, style=dotted];
m2_1506 -> m2_1507  [key=0, style=solid];
m2_1506 -> m2_1506  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m2_1507 -> m2_1508  [key=0, style=solid];
m2_1507 -> m2_11  [key=2, style=dotted];
m2_1508 -> m2_1509  [key=0, style=solid];
m2_1508 -> m2_93  [key=2, style=dotted];
m2_1510 -> m2_1500  [key=0, style=bold, color=blue];
m2_1254 -> m2_1255  [key=0, style=solid];
m2_1255 -> m2_1256  [key=0, style=solid];
m2_1255 -> m2_1257  [key=2, style=dotted];
m2_1256 -> m2_1254  [key=0, style=bold, color=blue];
m2_2735 -> m2_2736  [key=0, style=solid];
m2_2735 -> m2_2729  [key=3, color=darkorchid, style=bold, label="Parameter variable T obj"];
m2_2735 -> m2_2740  [key=3, color=darkorchid, style=bold, label="method methodReturn T SerializeAndDeserialize"];
m2_2736 -> m2_2737  [key=0, style=solid];
m2_2736 -> m2_2739  [key=2, style=dotted];
m2_2737 -> m2_2738  [key=0, style=solid];
m2_2737 -> m2_2740  [key=2, style=dotted];
m2_2738 -> m2_2735  [key=0, style=bold, color=blue];
m2_1937 -> m2_1938  [key=0, style=solid];
m2_1938 -> m2_1939  [key=0, style=solid];
m2_1938 -> m2_1946  [key=2, style=dotted];
m2_1938 -> m2_1940  [key=1, style=dashed, color=darkseagreen4, label=obj];
m2_1939 -> m2_1940  [key=0, style=solid];
m2_1939 -> m2_1947  [key=2, style=dotted];
m2_1940 -> m2_1941  [key=0, style=solid];
m2_1940 -> m2_9  [key=2, style=dotted];
m2_1941 -> m2_1942  [key=0, style=solid];
m2_1941 -> m2_93  [key=2, style=dotted];
m2_1941 -> m2_1943  [key=1, style=dashed, color=darkseagreen4, label=obj];
m2_1941 -> m2_1944  [key=1, style=dashed, color=darkseagreen4, label=obj];
m2_1942 -> m2_1943  [key=0, style=solid];
m2_1942 -> m2_11  [key=2, style=dotted];
m2_1943 -> m2_1944  [key=0, style=solid];
m2_1943 -> m2_11  [key=2, style=dotted];
m2_1944 -> m2_1945  [key=0, style=solid];
m2_1944 -> m2_11  [key=2, style=dotted];
m2_1945 -> m2_1937  [key=0, style=bold, color=blue];
m2_769 -> m2_770  [key=0, style=solid];
m2_770 -> m2_771  [key=0, style=solid];
m2_770 -> m2_760  [key=2, style=dotted];
m2_770 -> m2_772  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_771 -> m2_772  [key=0, style=solid];
m2_772 -> m2_773  [key=0, style=solid];
m2_772 -> m2_338  [key=2, style=dotted];
m2_772 -> m2_774  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_773 -> m2_774  [key=0, style=solid];
m2_773 -> m2_11  [key=2, style=dotted];
m2_774 -> m2_775  [key=0, style=solid];
m2_774 -> m2_93  [key=2, style=dotted];
m2_775 -> m2_776  [key=0, style=solid];
m2_775 -> m2_766  [key=2, style=dotted];
m2_775 -> m2_11  [key=2, style=dotted];
m2_776 -> m2_769  [key=0, style=bold, color=blue];
m2_2538 -> m2_2539  [key=0, style=solid];
m2_2539 -> m2_2540  [key=0, style=solid];
m2_2539 -> m2_140  [key=2, style=dotted];
m2_2539 -> m2_2541  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2540 -> m2_2538  [key=0, style=bold, color=blue];
m2_2202 -> m2_2203  [key=0, style=solid];
m2_2202 -> m2_2204  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_2202 -> m2_2205  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_2203 -> m2_2204  [key=0, style=solid];
m2_2204 -> m2_2205  [key=0, style=solid];
m2_2205 -> m2_2206  [key=0, style=solid];
m2_2206 -> m2_2202  [key=0, style=bold, color=blue];
m2_3042 -> m2_3043  [key=0, style=solid];
m2_3043 -> m2_3044  [key=0, style=solid];
m2_3043 -> m2_3045  [key=1, style=dashed, color=darkseagreen4, label=content];
m2_3043 -> m2_3043  [key=3, color=darkorchid, style=bold, label="Local variable string content"];
m2_3044 -> m2_3045  [key=0, style=solid];
m2_3044 -> m2_213  [key=2, style=dotted];
m2_3045 -> m2_3046  [key=0, style=solid];
m2_3045 -> m2_3041  [key=2, style=dotted];
m2_3046 -> m2_3047  [key=0, style=solid];
m2_3047 -> m2_3048  [key=0, style=solid];
m2_3047 -> m2_222  [key=2, style=dotted];
m2_3047 -> m2_11  [key=2, style=dotted];
m2_3047 -> m2_3047  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m2_3048 -> m2_3049  [key=0, style=solid];
m2_3048 -> m2_3050  [key=2, style=dotted];
m2_3048 -> m2_11  [key=2, style=dotted];
m2_3048 -> m2_3048  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m2_3049 -> m2_3042  [key=0, style=bold, color=blue];
m2_3211 -> m2_3212  [key=0, style=solid];
m2_3212 -> m2_3213  [key=0, style=solid];
m2_3213 -> m2_3211  [key=0, style=bold, color=blue];
m2_24 -> m2_19  [key=3, color=green, style=bold, label="Parameter variable char ch"];
m2_24 -> m2_94  [key=0, style=solid, color=green];
m2_24 -> m2_26  [key=3, color=darkorchid, style=bold, label="Parameter variable char ch"];
m2_24 -> m2_35  [key=3, color=darkorchid, style=bold, label="Parameter variable char ch"];
m2_24 -> m2_38  [key=3, color=darkorchid, style=bold, label="Parameter variable char ch"];
m2_24 -> m2_33  [key=3, color=darkorchid, style=bold, label="Parameter variable int start"];
m2_24 -> m2_34  [key=3, color=darkorchid, style=bold, label="Parameter variable int start"];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_11  [key=2, style=dotted];
m2_94 -> m2_95  [key=0, style=solid, color=green];
m2_95 -> m2_24  [key=0, style=bold, color=blue];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_99  [key=2, style=dotted];
m2_95 -> m2_9  [key=2, style=dotted];
m2_413 -> m2_414  [key=0, style=solid];
m2_414 -> m2_415  [key=0, style=solid];
m2_414 -> m2_420  [key=2, style=dotted];
m2_415 -> m2_416  [key=0, style=solid];
m2_415 -> m2_9  [key=2, style=dotted];
m2_415 -> m2_417  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_416 -> m2_417  [key=0, style=solid];
m2_416 -> m2_11  [key=2, style=dotted];
m2_417 -> m2_418  [key=0, style=solid];
m2_417 -> m2_93  [key=2, style=dotted];
m2_418 -> m2_419  [key=0, style=solid];
m2_418 -> m2_11  [key=2, style=dotted];
m2_419 -> m2_413  [key=0, style=bold, color=blue];
m2_717 -> m2_718  [key=0, style=solid];
m2_718 -> m2_719  [key=0, style=solid];
m2_718 -> m2_2022  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_719 -> m2_720  [key=0, style=solid];
m2_719 -> m2_93  [key=2, style=dotted];
m2_719 -> m2_721  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_719 -> m2_722  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_719 -> m2_723  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_720 -> m2_721  [key=0, style=solid];
m2_720 -> m2_11  [key=2, style=dotted];
m2_721 -> m2_722  [key=0, style=solid];
m2_721 -> m2_11  [key=2, style=dotted];
m2_722 -> m2_723  [key=0, style=solid];
m2_722 -> m2_11  [key=2, style=dotted];
m2_723 -> m2_724  [key=0, style=solid];
m2_723 -> m2_11  [key=2, style=dotted];
m2_724 -> m2_717  [key=0, style=bold, color=blue];
m2_2739 -> m2_2741  [key=0, style=solid];
m2_2739 -> m2_2744  [key=1, style=dashed, color=darkseagreen4, label=T];
m2_2739 -> m2_2735  [key=3, color=darkorchid, style=bold, label="Parameter variable T obj"];
m2_2741 -> m2_2742  [key=0, style=solid];
m2_2741 -> m2_264  [key=2, style=dotted];
m2_2741 -> m2_2744  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m2_2741 -> m2_2745  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m2_2744 -> m2_2745  [key=0, style=solid];
m2_2744 -> m2_265  [key=2, style=dotted];
m2_2742 -> m2_2743  [key=0, style=solid];
m2_2742 -> m2_263  [key=2, style=dotted];
m2_2742 -> m2_2744  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_2745 -> m2_2746  [key=0, style=solid];
m2_2745 -> m2_2307  [key=2, style=dotted];
m2_2743 -> m2_2744  [key=0, style=solid];
m2_2743 -> m2_2747  [key=2, style=dotted];
m2_2746 -> m2_2739  [key=0, style=bold, color=blue];
m2_2477 -> m2_2478  [key=0, style=solid];
m2_2478 -> m2_2479  [key=0, style=solid];
m2_2478 -> m2_2487  [key=2, style=dotted];
m2_2478 -> m2_356  [key=2, style=dotted];
m2_2478 -> m2_209  [key=2, style=dotted];
m2_2479 -> m2_2480  [key=0, style=solid];
m2_2479 -> m2_338  [key=2, style=dotted];
m2_2479 -> m2_2481  [key=1, style=dashed, color=darkseagreen4, label=jsonString];
m2_2480 -> m2_2481  [key=0, style=solid];
m2_2480 -> m2_11  [key=2, style=dotted];
m2_2481 -> m2_2482  [key=0, style=solid];
m2_2481 -> m2_93  [key=2, style=dotted];
m2_2481 -> m2_2483  [key=1, style=dashed, color=darkseagreen4, label=actual];
m2_2481 -> m2_2484  [key=1, style=dashed, color=darkseagreen4, label=actual];
m2_2482 -> m2_2483  [key=0, style=solid];
m2_2482 -> m2_356  [key=2, style=dotted];
m2_2482 -> m2_11  [key=2, style=dotted];
m2_2483 -> m2_2484  [key=0, style=solid];
m2_2483 -> m2_356  [key=2, style=dotted];
m2_2483 -> m2_11  [key=2, style=dotted];
m2_2484 -> m2_2485  [key=0, style=solid];
m2_2485 -> m2_2486  [key=0, style=solid];
m2_2485 -> m2_1125  [key=2, style=dotted];
m2_2485 -> m2_2390  [key=2, style=dotted];
m2_2486 -> m2_2477  [key=0, style=bold, color=blue];
m2_2770 -> m2_2771  [key=0, style=solid];
m2_2771 -> m2_2772  [key=0, style=solid];
m2_2771 -> m2_2774  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2771 -> m2_2779  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2771 -> m2_2782  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2771 -> m2_2771  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2772 -> m2_2773  [key=0, style=solid];
m2_2772 -> m2_213  [key=2, style=dotted];
m2_2772 -> m2_2777  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_2772 -> m2_2778  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_2774 -> m2_2775  [key=0, style=solid];
m2_2774 -> m2_268  [key=2, style=dotted];
m2_2774 -> m2_269  [key=2, style=dotted];
m2_2774 -> m2_2495  [key=2, style=dotted];
m2_2774 -> m2_2776  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_2779 -> m2_2780  [key=0, style=solid];
m2_2779 -> m2_140  [key=2, style=dotted];
m2_2779 -> m2_2781  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2773 -> m2_2774  [key=0, style=solid];
m2_2773 -> m2_2494  [key=2, style=dotted];
m2_2777 -> m2_2778  [key=0, style=solid];
m2_2778 -> m2_2779  [key=0, style=solid];
m2_2778 -> m2_2494  [key=2, style=dotted];
m2_2778 -> m2_2782  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_2775 -> m2_2776  [key=0, style=solid];
m2_2775 -> m2_674  [key=2, style=dotted];
m2_2776 -> m2_2777  [key=0, style=solid];
m2_2776 -> m2_11  [key=2, style=dotted];
m2_2780 -> m2_2770  [key=0, style=bold, color=blue];
m2_1417 -> m2_1418  [key=0, style=solid];
m2_1418 -> m2_1419  [key=0, style=solid];
m2_1418 -> m2_1425  [key=2, style=dotted];
m2_1419 -> m2_1420  [key=0, style=solid];
m2_1419 -> m2_338  [key=2, style=dotted];
m2_1420 -> m2_1421  [key=0, style=solid];
m2_1420 -> m2_11  [key=2, style=dotted];
m2_1421 -> m2_1422  [key=0, style=solid];
m2_1421 -> m2_1426  [key=2, style=dotted];
m2_1422 -> m2_1423  [key=0, style=solid];
m2_1422 -> m2_338  [key=2, style=dotted];
m2_1423 -> m2_1424  [key=0, style=solid];
m2_1423 -> m2_11  [key=2, style=dotted];
m2_1424 -> m2_1417  [key=0, style=bold, color=blue];
m2_1736 -> m2_1737  [key=0, style=solid];
m2_1737 -> m2_1738  [key=0, style=solid];
m2_1737 -> m2_1765  [key=2, style=dotted];
m2_1737 -> m2_1739  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1737 -> m2_1740  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1737 -> m2_1741  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1737 -> m2_1750  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1737 -> m2_1751  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1737 -> m2_1752  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1737 -> m2_1753  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1737 -> m2_1754  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1738 -> m2_1739  [key=0, style=solid];
m2_1739 -> m2_1740  [key=0, style=solid];
m2_1740 -> m2_1741  [key=0, style=solid];
m2_1741 -> m2_1742  [key=0, style=solid];
m2_1741 -> m2_338  [key=2, style=dotted];
m2_1741 -> m2_1743  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1750 -> m2_1751  [key=0, style=solid];
m2_1751 -> m2_1752  [key=0, style=solid];
m2_1752 -> m2_1753  [key=0, style=solid];
m2_1753 -> m2_1754  [key=0, style=solid];
m2_1754 -> m2_1755  [key=0, style=solid];
m2_1754 -> m2_338  [key=2, style=dotted];
m2_1754 -> m2_1756  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1742 -> m2_1743  [key=0, style=solid];
m2_1742 -> m2_11  [key=2, style=dotted];
m2_1743 -> m2_1744  [key=0, style=solid];
m2_1743 -> m2_93  [key=2, style=dotted];
m2_1743 -> m2_1745  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_1743 -> m2_1746  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_1743 -> m2_1747  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_1743 -> m2_1748  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_1743 -> m2_1749  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_1744 -> m2_1745  [key=0, style=solid];
m2_1744 -> m2_1499  [key=2, style=dotted];
m2_1745 -> m2_1746  [key=0, style=solid];
m2_1745 -> m2_1766  [key=2, style=dotted];
m2_1746 -> m2_1747  [key=0, style=solid];
m2_1746 -> m2_1766  [key=2, style=dotted];
m2_1747 -> m2_1748  [key=0, style=solid];
m2_1747 -> m2_1766  [key=2, style=dotted];
m2_1748 -> m2_1749  [key=0, style=solid];
m2_1748 -> m2_1766  [key=2, style=dotted];
m2_1749 -> m2_1750  [key=0, style=solid];
m2_1749 -> m2_11  [key=2, style=dotted];
m2_1755 -> m2_1756  [key=0, style=solid];
m2_1755 -> m2_11  [key=2, style=dotted];
m2_1756 -> m2_1757  [key=0, style=solid];
m2_1756 -> m2_93  [key=2, style=dotted];
m2_1756 -> m2_1758  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_1756 -> m2_1759  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_1756 -> m2_1760  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_1756 -> m2_1761  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_1756 -> m2_1762  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_1756 -> m2_1763  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_1757 -> m2_1758  [key=0, style=solid];
m2_1757 -> m2_11  [key=2, style=dotted];
m2_1758 -> m2_1759  [key=0, style=solid];
m2_1758 -> m2_1767  [key=2, style=dotted];
m2_1759 -> m2_1760  [key=0, style=solid];
m2_1759 -> m2_1767  [key=2, style=dotted];
m2_1760 -> m2_1761  [key=0, style=solid];
m2_1760 -> m2_1767  [key=2, style=dotted];
m2_1761 -> m2_1762  [key=0, style=solid];
m2_1761 -> m2_1767  [key=2, style=dotted];
m2_1762 -> m2_1763  [key=0, style=solid];
m2_1762 -> m2_11  [key=2, style=dotted];
m2_1763 -> m2_1764  [key=0, style=solid];
m2_1763 -> m2_11  [key=2, style=dotted];
m2_1764 -> m2_1736  [key=0, style=bold, color=blue];
m2_79 -> m2_82  [key=0, style=solid];
m2_79 -> m2_80  [key=0, style=solid];
m2_1990 -> m2_1991  [key=0, style=solid];
m2_1990 -> m2_1979  [key=3, color=darkorchid, style=bold, label="Parameter variable string serStr"];
m2_1991 -> m2_1992  [key=0, style=solid];
m2_1991 -> m2_213  [key=2, style=dotted];
m2_1991 -> m2_461  [key=2, style=dotted];
m2_1992 -> m2_1990  [key=0, style=bold, color=blue];
m2_2550 -> m2_2551  [key=0, style=solid];
m2_2551 -> m2_2552  [key=0, style=solid];
m2_2551 -> m2_140  [key=2, style=dotted];
m2_2551 -> m2_2553  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2552 -> m2_2550  [key=0, style=bold, color=blue];
m2_629 -> m2_630  [key=0, style=solid];
m2_630 -> m2_631  [key=0, style=solid];
m2_630 -> m2_630  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_631 -> m2_632  [key=0, style=solid];
m2_631 -> m2_93  [key=2, style=dotted];
m2_632 -> m2_629  [key=0, style=bold, color=blue];
m2_2173 -> m2_2174  [key=0, style=solid];
m2_2174 -> m2_2175  [key=0, style=solid];
m2_2174 -> m2_1536  [key=2, style=dotted];
m2_2175 -> m2_2173  [key=0, style=bold, color=blue];
m2_1144 -> m2_1145  [key=0, style=solid];
m2_1145 -> m2_1146  [key=0, style=solid];
m2_1145 -> m2_93  [key=2, style=dotted];
m2_1145 -> m2_1147  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1145 -> m2_1148  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1145 -> m2_1149  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1145 -> m2_1150  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1145 -> m2_1151  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1145 -> m2_1152  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1145 -> m2_1153  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1145 -> m2_1154  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1146 -> m2_1147  [key=0, style=solid];
m2_1146 -> m2_674  [key=2, style=dotted];
m2_1147 -> m2_1148  [key=0, style=solid];
m2_1147 -> m2_674  [key=2, style=dotted];
m2_1148 -> m2_1149  [key=0, style=solid];
m2_1148 -> m2_1156  [key=2, style=dotted];
m2_1148 -> m2_11  [key=2, style=dotted];
m2_1149 -> m2_1150  [key=0, style=solid];
m2_1149 -> m2_1156  [key=2, style=dotted];
m2_1149 -> m2_11  [key=2, style=dotted];
m2_1150 -> m2_1151  [key=0, style=solid];
m2_1150 -> m2_11  [key=2, style=dotted];
m2_1151 -> m2_1152  [key=0, style=solid];
m2_1151 -> m2_11  [key=2, style=dotted];
m2_1152 -> m2_1153  [key=0, style=solid];
m2_1152 -> m2_11  [key=2, style=dotted];
m2_1153 -> m2_1154  [key=0, style=solid];
m2_1153 -> m2_11  [key=2, style=dotted];
m2_1154 -> m2_1155  [key=0, style=solid];
m2_1154 -> m2_11  [key=2, style=dotted];
m2_1155 -> m2_1144  [key=0, style=bold, color=blue];
m2_37 -> m2_41  [key=1, style=dashed, color=green, label="ref int"];
m2_37 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label="ref int"];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_51  [key=1, style=dashed, color=darkseagreen4, label="ref int"];
m2_975 -> m2_976  [key=0, style=solid];
m2_976 -> m2_977  [key=0, style=solid];
m2_976 -> m2_980  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_976 -> m2_941  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_977 -> m2_978  [key=0, style=solid];
m2_977 -> m2_140  [key=2, style=dotted];
m2_977 -> m2_979  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_978 -> m2_975  [key=0, style=bold, color=blue];
m2_3157 -> m2_3158  [key=0, style=solid];
m2_3158 -> m2_3159  [key=0, style=solid];
m2_3159 -> m2_3157  [key=0, style=bold, color=blue];
m2_13 -> m2_14  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_28  [key=2, style=dotted];
m2_14 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label=product];
m2_14 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label=product];
m2_14 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label=product];
m2_14 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label=product];
m2_15 -> m2_16  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_29  [key=2, style=dotted];
m2_16 -> m2_18  [key=1, style=dashed, color=green, label=int];
m2_16 -> m2_19  [key=1, style=dashed, color=green, label=int];
m2_16 -> m2_20  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Parse"];
m2_16 -> m2_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Parse"];
m2_17 -> m2_18  [key=0, style=solid, color=green];
m2_17 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_18 -> m2_19  [key=0, style=solid, color=green];
m2_18 -> m2_96  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_19 -> m2_20  [key=0, style=solid, color=green];
m2_19 -> m2_9  [key=2, style=dotted];
m2_19 -> m2_21  [key=0, style=solid, color=green];
m2_19 -> m2_23  [key=2, style=dotted, color=green];
m2_19 -> m2_24  [key=2, style=dotted, color=green];
m2_19 -> m2_25  [key=2, style=dotted, color=green];
m2_19 -> m2_96  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_10  [key=2, style=dotted];
m2_20 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m2_20 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m2_20 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m2_20 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m2_20 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_11  [key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_29  [key=2, style=dotted];
m2_22 -> m2_11  [key=2, style=dotted];
m2_22 -> m2_16  [key=0, style=bold, color=blue];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_11  [key=2, style=dotted];
m2_23 -> m2_16  [key=3, color=darkorchid, style=bold, label="Parameter variable int start"];
m2_23 -> m2_26  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_11  [key=2, style=dotted];
m2_25 -> m2_31  [key=0, style=solid];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_11  [key=2, style=dotted];
m2_26 -> m2_24  [key=2, style=dotted];
m2_26 -> m2_29  [key=2, style=dotted];
m2_26 -> m2_28  [key=2, style=dotted];
m2_26 -> m2_30  [key=2, style=dotted];
m2_26 -> m2_98  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_27 -> m2_13  [key=0, style=bold, color=blue];
m2_27 -> m2_23  [key=0, style=bold, color=blue];
m2_1887 -> m2_1888  [key=0, style=solid];
m2_1888 -> m2_1889  [key=0, style=solid];
m2_1888 -> m2_1908  [key=2, style=dotted];
m2_1888 -> m2_1890  [key=1, style=dashed, color=darkseagreen4, label=expando];
m2_1888 -> m2_1891  [key=1, style=dashed, color=darkseagreen4, label=expando];
m2_1888 -> m2_1892  [key=1, style=dashed, color=darkseagreen4, label=expando];
m2_1888 -> m2_1893  [key=1, style=dashed, color=darkseagreen4, label=expando];
m2_1888 -> m2_1894  [key=1, style=dashed, color=darkseagreen4, label=expando];
m2_1888 -> m2_1898  [key=1, style=dashed, color=darkseagreen4, label=expando];
m2_1888 -> m2_1900  [key=1, style=dashed, color=darkseagreen4, label=expando];
m2_1888 -> m2_1904  [key=1, style=dashed, color=darkseagreen4, label=expando];
m2_1888 -> m2_1906  [key=1, style=dashed, color=darkseagreen4, label=expando];
m2_1889 -> m2_1890  [key=0, style=solid];
m2_1890 -> m2_1891  [key=0, style=solid];
m2_1891 -> m2_1892  [key=0, style=solid];
m2_1891 -> m2_1908  [key=2, style=dotted];
m2_1892 -> m2_1893  [key=0, style=solid];
m2_1893 -> m2_1894  [key=0, style=solid];
m2_1893 -> m2_209  [key=2, style=dotted];
m2_1894 -> m2_1895  [key=0, style=solid];
m2_1894 -> m2_1909  [key=2, style=dotted];
m2_1894 -> m2_1896  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1898 -> m2_1899  [key=0, style=solid];
m2_1898 -> m2_11  [key=2, style=dotted];
m2_1900 -> m2_1901  [key=0, style=solid];
m2_1900 -> m2_11  [key=2, style=dotted];
m2_1904 -> m2_1905  [key=0, style=solid];
m2_1904 -> m2_11  [key=2, style=dotted];
m2_1906 -> m2_1907  [key=0, style=solid];
m2_1906 -> m2_11  [key=2, style=dotted];
m2_1895 -> m2_1896  [key=0, style=solid];
m2_1895 -> m2_11  [key=2, style=dotted];
m2_1896 -> m2_1897  [key=0, style=solid];
m2_1896 -> m2_93  [key=2, style=dotted];
m2_1896 -> m2_1898  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m2_1896 -> m2_1899  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m2_1896 -> m2_1900  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m2_1896 -> m2_1901  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m2_1896 -> m2_1902  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m2_1897 -> m2_1898  [key=0, style=solid];
m2_1897 -> m2_879  [key=2, style=dotted];
m2_1899 -> m2_1900  [key=0, style=solid];
m2_1899 -> m2_879  [key=2, style=dotted];
m2_1901 -> m2_1902  [key=0, style=solid];
m2_1901 -> m2_879  [key=2, style=dotted];
m2_1902 -> m2_1903  [key=0, style=solid];
m2_1902 -> m2_1904  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1902 -> m2_1905  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1902 -> m2_1906  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1903 -> m2_1904  [key=0, style=solid];
m2_1903 -> m2_879  [key=2, style=dotted];
m2_1905 -> m2_1906  [key=0, style=solid];
m2_1905 -> m2_879  [key=2, style=dotted];
m2_1907 -> m2_1887  [key=0, style=bold, color=blue];
m2_2385 -> m2_3173  [key=0, style=solid];
m2_2385 -> m2_3174  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m2_3173 -> m2_3174  [key=0, style=solid];
m2_3174 -> m2_3175  [key=0, style=solid];
m2_3175 -> m2_2385  [key=0, style=bold, color=blue];
m2_1610 -> m2_1611  [key=0, style=solid];
m2_1610 -> m2_1613  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_1610 -> m2_1614  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_1610 -> m2_1615  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_1610 -> m2_1617  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_1610 -> m2_1612  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m2_1611 -> m2_1612  [key=0, style=solid];
m2_1613 -> m2_1614  [key=0, style=solid];
m2_1613 -> m2_1621  [key=2, style=dotted];
m2_1614 -> m2_1615  [key=0, style=solid];
m2_1614 -> m2_1618  [key=0, style=solid];
m2_1615 -> m2_1616  [key=0, style=solid];
m2_1617 -> m2_1614  [key=0, style=solid];
m2_1617 -> m2_1621  [key=2, style=dotted];
m2_1612 -> m2_1613  [key=0, style=solid];
m2_1612 -> m2_1620  [key=2, style=dotted];
m2_1612 -> m2_1616  [key=1, style=dashed, color=darkseagreen4, label=newStrings];
m2_1612 -> m2_1618  [key=1, style=dashed, color=darkseagreen4, label=newStrings];
m2_1616 -> m2_1617  [key=0, style=solid];
m2_1616 -> m2_158  [key=2, style=dotted];
m2_1618 -> m2_1619  [key=0, style=solid];
m2_1619 -> m2_1610  [key=0, style=bold, color=blue];
m2_1018 -> m2_1019  [key=0, style=solid];
m2_1019 -> m2_1020  [key=0, style=solid];
m2_1019 -> m2_1019  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1020 -> m2_1021  [key=0, style=solid];
m2_1020 -> m2_93  [key=2, style=dotted];
m2_1021 -> m2_1022  [key=0, style=solid];
m2_1021 -> m2_11  [key=2, style=dotted];
m2_1022 -> m2_1018  [key=0, style=bold, color=blue];
m2_2791 -> m2_2792  [key=0, style=solid];
m2_2792 -> m2_2793  [key=0, style=solid];
m2_2792 -> m2_140  [key=2, style=dotted];
m2_2792 -> m2_2794  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2792 -> m2_2792  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2793 -> m2_2791  [key=0, style=bold, color=blue];
m2_1065 -> m2_1066  [key=0, style=solid];
m2_1066 -> m2_1067  [key=0, style=solid];
m2_1066 -> m2_1076  [key=2, style=dotted];
m2_1066 -> m2_1071  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m2_1067 -> m2_1068  [key=0, style=solid];
m2_1067 -> m2_338  [key=2, style=dotted];
m2_1067 -> m2_1069  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1067 -> m2_1070  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1071 -> m2_1072  [key=0, style=solid];
m2_1071 -> m2_11  [key=2, style=dotted];
m2_1071 -> m2_1071  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m2_1071 -> m2_1073  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m2_1068 -> m2_1069  [key=0, style=solid];
m2_1068 -> m2_12  [key=2, style=dotted];
m2_1069 -> m2_1070  [key=0, style=solid];
m2_1069 -> m2_11  [key=2, style=dotted];
m2_1070 -> m2_1071  [key=0, style=solid];
m2_1070 -> m2_93  [key=2, style=dotted];
m2_1072 -> m2_1073  [key=0, style=solid];
m2_1072 -> m2_11  [key=2, style=dotted];
m2_1073 -> m2_1074  [key=0, style=solid];
m2_1073 -> m2_11  [key=2, style=dotted];
m2_1073 -> m2_1073  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m2_1074 -> m2_1075  [key=0, style=solid];
m2_1074 -> m2_11  [key=2, style=dotted];
m2_1075 -> m2_1065  [key=0, style=bold, color=blue];
m2_2455 -> m2_2456  [key=0, style=solid];
m2_2456 -> m2_2457  [key=0, style=solid];
m2_2456 -> m2_140  [key=2, style=dotted];
m2_2456 -> m2_2458  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2456 -> m2_2456  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2457 -> m2_2455  [key=0, style=bold, color=blue];
m2_252 -> m2_253  [key=0, style=solid];
m2_253 -> m2_254  [key=0, style=solid];
m2_253 -> m2_262  [key=2, style=dotted];
m2_253 -> m2_28  [key=2, style=dotted];
m2_253 -> m2_257  [key=1, style=dashed, color=darkseagreen4, label=collection];
m2_253 -> m2_260  [key=1, style=dashed, color=darkseagreen4, label=collection];
m2_254 -> m2_255  [key=0, style=solid];
m2_254 -> m2_263  [key=2, style=dotted];
m2_254 -> m2_257  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m2_254 -> m2_259  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m2_257 -> m2_258  [key=0, style=solid];
m2_257 -> m2_265  [key=2, style=dotted];
m2_260 -> m2_261  [key=0, style=solid];
m2_260 -> m2_11  [key=2, style=dotted];
m2_255 -> m2_256  [key=0, style=solid];
m2_259 -> m2_260  [key=0, style=solid];
m2_259 -> m2_268  [key=2, style=dotted];
m2_259 -> m2_269  [key=2, style=dotted];
m2_259 -> m2_266  [key=2, style=dotted];
m2_259 -> m2_267  [key=2, style=dotted];
m2_259 -> m2_270  [key=2, style=dotted];
m2_256 -> m2_257  [key=0, style=solid];
m2_256 -> m2_264  [key=2, style=dotted];
m2_256 -> m2_258  [key=1, style=dashed, color=darkseagreen4, label=sw];
m2_256 -> m2_259  [key=1, style=dashed, color=darkseagreen4, label=sw];
m2_258 -> m2_259  [key=0, style=solid];
m2_258 -> m2_266  [key=2, style=dotted];
m2_258 -> m2_267  [key=2, style=dotted];
m2_258 -> m2_11  [key=2, style=dotted];
m2_261 -> m2_252  [key=0, style=bold, color=blue];
m2_190 -> m2_191  [key=0, style=solid];
m2_191 -> m2_192  [key=0, style=solid];
m2_191 -> m2_195  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_191 -> m2_191  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_192 -> m2_193  [key=0, style=solid];
m2_192 -> m2_140  [key=2, style=dotted];
m2_192 -> m2_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_193 -> m2_190  [key=0, style=bold, color=blue];
m2_685 -> m2_686  [key=0, style=solid];
m2_686 -> m2_687  [key=0, style=solid];
m2_686 -> m2_694  [key=2, style=dotted];
m2_686 -> m2_688  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_687 -> m2_688  [key=0, style=solid];
m2_688 -> m2_689  [key=0, style=solid];
m2_688 -> m2_9  [key=2, style=dotted];
m2_688 -> m2_690  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_689 -> m2_690  [key=0, style=solid];
m2_689 -> m2_11  [key=2, style=dotted];
m2_690 -> m2_691  [key=0, style=solid];
m2_690 -> m2_93  [key=2, style=dotted];
m2_691 -> m2_692  [key=0, style=solid];
m2_691 -> m2_9  [key=2, style=dotted];
m2_692 -> m2_693  [key=0, style=solid];
m2_692 -> m2_11  [key=2, style=dotted];
m2_693 -> m2_685  [key=0, style=bold, color=blue];
m2_2258 -> m2_2259  [key=0, style=solid];
m2_2259 -> m2_2260  [key=0, style=solid];
m2_2259 -> m2_2269  [key=2, style=dotted];
m2_2259 -> m2_2263  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2259 -> m2_2264  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2259 -> m2_2265  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2259 -> m2_2266  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2259 -> m2_2267  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2260 -> m2_2261  [key=0, style=solid];
m2_2260 -> m2_338  [key=2, style=dotted];
m2_2260 -> m2_2262  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2263 -> m2_2264  [key=0, style=solid];
m2_2263 -> m2_11  [key=2, style=dotted];
m2_2264 -> m2_2265  [key=0, style=solid];
m2_2264 -> m2_11  [key=2, style=dotted];
m2_2265 -> m2_2266  [key=0, style=solid];
m2_2265 -> m2_11  [key=2, style=dotted];
m2_2266 -> m2_2267  [key=0, style=solid];
m2_2266 -> m2_11  [key=2, style=dotted];
m2_2267 -> m2_2268  [key=0, style=solid];
m2_2267 -> m2_11  [key=2, style=dotted];
m2_2261 -> m2_2262  [key=0, style=solid];
m2_2261 -> m2_11  [key=2, style=dotted];
m2_2262 -> m2_2263  [key=0, style=solid];
m2_2262 -> m2_93  [key=2, style=dotted];
m2_2262 -> m2_2264  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2262 -> m2_2265  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2262 -> m2_2266  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2262 -> m2_2267  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2268 -> m2_2258  [key=0, style=bold, color=blue];
m2_954 -> m2_955  [key=0, style=solid];
m2_955 -> m2_956  [key=0, style=solid];
m2_955 -> m2_959  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_955 -> m2_941  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_956 -> m2_957  [key=0, style=solid];
m2_956 -> m2_140  [key=2, style=dotted];
m2_956 -> m2_958  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_957 -> m2_954  [key=0, style=bold, color=blue];
m2_92 -> m2_93  [key=0, style=solid];
m2_3207 -> m2_3208  [key=0, style=solid];
m2_3208 -> m2_3209  [key=0, style=solid];
m2_3208 -> m2_3210  [key=2, style=dotted];
m2_3209 -> m2_3207  [key=0, style=bold, color=blue];
m2_2025 -> m2_2026  [key=0, style=solid];
m2_2026 -> m2_2027  [key=0, style=solid];
m2_2027 -> m2_2025  [key=0, style=bold, color=blue];
m2_996 -> m2_997  [key=0, style=solid];
m2_997 -> m2_998  [key=0, style=solid];
m2_997 -> m2_1001  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_997 -> m2_2022  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_998 -> m2_999  [key=0, style=solid];
m2_998 -> m2_140  [key=2, style=dotted];
m2_998 -> m2_1000  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_999 -> m2_996  [key=0, style=bold, color=blue];
m2_1958 -> m2_1959  [key=0, style=solid];
m2_1959 -> m2_1960  [key=0, style=solid];
m2_1959 -> m2_1950  [key=2, style=dotted];
m2_1959 -> m2_1961  [key=1, style=dashed, color=darkseagreen4, label=derived];
m2_1960 -> m2_1961  [key=0, style=solid];
m2_1960 -> m2_213  [key=2, style=dotted];
m2_1960 -> m2_1962  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_1961 -> m2_1962  [key=0, style=solid];
m2_1961 -> m2_716  [key=2, style=dotted];
m2_1962 -> m2_1963  [key=0, style=solid];
m2_1962 -> m2_461  [key=2, style=dotted];
m2_1962 -> m2_1964  [key=1, style=dashed, color=darkseagreen4, label=meh];
m2_1963 -> m2_1964  [key=0, style=solid];
m2_1963 -> m2_11  [key=2, style=dotted];
m2_1964 -> m2_1965  [key=0, style=solid];
m2_1964 -> m2_11  [key=2, style=dotted];
m2_1965 -> m2_1958  [key=0, style=bold, color=blue];
m2_982 -> m2_983  [key=0, style=solid];
m2_983 -> m2_984  [key=0, style=solid];
m2_983 -> m2_987  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_983 -> m2_983  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_984 -> m2_985  [key=0, style=solid];
m2_984 -> m2_140  [key=2, style=dotted];
m2_984 -> m2_986  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_985 -> m2_982  [key=0, style=bold, color=blue];
m2_1933 -> m2_1934  [key=0, style=solid];
m2_1934 -> m2_1935  [key=0, style=solid];
m2_1934 -> m2_1936  [key=2, style=dotted];
m2_1935 -> m2_1933  [key=0, style=bold, color=blue];
m2_1622 -> m2_1623  [key=0, style=solid];
m2_1623 -> m2_1624  [key=0, style=solid];
m2_1624 -> m2_1622  [key=0, style=bold, color=blue];
m2_2842 -> m2_2843  [key=0, style=solid];
m2_2843 -> m2_2844  [key=0, style=solid];
m2_2844 -> m2_2842  [key=0, style=bold, color=blue];
m2_2156 -> m2_2157  [key=0, style=solid];
m2_2157 -> m2_2158  [key=0, style=solid];
m2_2158 -> m2_2159  [key=0, style=solid];
m2_2158 -> m2_52  [key=2, style=dotted];
m2_2159 -> m2_2156  [key=0, style=bold, color=blue];
m2_1722 -> m2_1723  [key=0, style=solid];
m2_1723 -> m2_1724  [key=0, style=solid];
m2_1724 -> m2_1722  [key=0, style=bold, color=blue];
m2_1928 -> m2_1929  [key=0, style=solid];
m2_1929 -> m2_1930  [key=0, style=solid];
m2_1929 -> m2_1929  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1930 -> m2_1931  [key=0, style=solid];
m2_1930 -> m2_93  [key=2, style=dotted];
m2_1931 -> m2_1932  [key=0, style=solid];
m2_1931 -> m2_11  [key=2, style=dotted];
m2_1932 -> m2_1928  [key=0, style=bold, color=blue];
m2_2207 -> m2_2208  [key=0, style=solid];
m2_2208 -> m2_2209  [key=0, style=solid];
m2_2209 -> m2_2207  [key=0, style=bold, color=blue];
m2_364 -> m2_365  [key=0, style=solid];
m2_365 -> m2_366  [key=0, style=solid];
m2_365 -> m2_371  [key=2, style=dotted];
m2_365 -> m2_369  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_366 -> m2_367  [key=0, style=solid];
m2_366 -> m2_372  [key=2, style=dotted];
m2_366 -> m2_338  [key=2, style=dotted];
m2_366 -> m2_368  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_369 -> m2_370  [key=0, style=solid];
m2_369 -> m2_11  [key=2, style=dotted];
m2_367 -> m2_368  [key=0, style=solid];
m2_367 -> m2_11  [key=2, style=dotted];
m2_368 -> m2_369  [key=0, style=solid];
m2_368 -> m2_93  [key=2, style=dotted];
m2_370 -> m2_364  [key=0, style=bold, color=blue];
m2_2848 -> m2_2849  [key=0, style=solid];
m2_2849 -> m2_2850  [key=0, style=solid];
m2_2849 -> m2_2842  [key=2, style=dotted];
m2_2850 -> m2_2851  [key=0, style=solid];
m2_2850 -> m2_9  [key=2, style=dotted];
m2_2850 -> m2_2853  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2850 -> m2_2859  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2851 -> m2_2852  [key=0, style=solid];
m2_2851 -> m2_11  [key=2, style=dotted];
m2_2853 -> m2_2854  [key=0, style=solid];
m2_2853 -> m2_2853  [key=3, color=darkorchid, style=bold, label="Local variable System.Action doStuff"];
m2_2852 -> m2_2853  [key=0, style=solid];
m2_2852 -> m2_277  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<int> obj"];
m2_2854 -> m2_2855  [key=0, style=solid];
m2_2854 -> m2_2857  [key=2, style=dotted];
m2_2855 -> m2_2856  [key=0, style=solid];
m2_2855 -> m2_11  [key=2, style=dotted];
m2_2856 -> m2_2848  [key=0, style=bold, color=blue];
m2_1296 -> m2_1297  [key=0, style=solid];
m2_1296 -> m2_1298  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1296 -> m2_1299  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1296 -> m2_1300  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1296 -> m2_1301  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1296 -> m2_1302  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1296 -> m2_1303  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1296 -> m2_1304  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1296 -> m2_1305  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1296 -> m2_1306  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1296 -> m2_1307  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1296 -> m2_1308  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1296 -> m2_1309  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1296 -> m2_1310  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1296 -> m2_1311  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1296 -> m2_1312  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1296 -> m2_1313  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1296 -> m2_1314  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1297 -> m2_1298  [key=0, style=solid];
m2_1297 -> m2_1316  [key=2, style=dotted];
m2_1298 -> m2_1299  [key=0, style=solid];
m2_1298 -> m2_1317  [key=2, style=dotted];
m2_1299 -> m2_1300  [key=0, style=solid];
m2_1299 -> m2_1318  [key=2, style=dotted];
m2_1300 -> m2_1301  [key=0, style=solid];
m2_1300 -> m2_1318  [key=2, style=dotted];
m2_1301 -> m2_1302  [key=0, style=solid];
m2_1301 -> m2_1318  [key=2, style=dotted];
m2_1302 -> m2_1303  [key=0, style=solid];
m2_1302 -> m2_1318  [key=2, style=dotted];
m2_1303 -> m2_1304  [key=0, style=solid];
m2_1303 -> m2_1319  [key=2, style=dotted];
m2_1304 -> m2_1305  [key=0, style=solid];
m2_1304 -> m2_1320  [key=2, style=dotted];
m2_1305 -> m2_1306  [key=0, style=solid];
m2_1305 -> m2_1321  [key=2, style=dotted];
m2_1306 -> m2_1307  [key=0, style=solid];
m2_1306 -> m2_1322  [key=2, style=dotted];
m2_1307 -> m2_1308  [key=0, style=solid];
m2_1307 -> m2_1323  [key=2, style=dotted];
m2_1308 -> m2_1309  [key=0, style=solid];
m2_1308 -> m2_1324  [key=2, style=dotted];
m2_1309 -> m2_1310  [key=0, style=solid];
m2_1309 -> m2_1325  [key=2, style=dotted];
m2_1310 -> m2_1311  [key=0, style=solid];
m2_1310 -> m2_1326  [key=2, style=dotted];
m2_1311 -> m2_1312  [key=0, style=solid];
m2_1311 -> m2_1327  [key=2, style=dotted];
m2_1312 -> m2_1313  [key=0, style=solid];
m2_1312 -> m2_1328  [key=2, style=dotted];
m2_1313 -> m2_1314  [key=0, style=solid];
m2_1313 -> m2_1329  [key=2, style=dotted];
m2_1314 -> m2_1315  [key=0, style=solid];
m2_1314 -> m2_1330  [key=2, style=dotted];
m2_1315 -> m2_1296  [key=0, style=bold, color=blue];
m2_2488 -> m2_2489  [key=0, style=solid];
m2_2489 -> m2_2490  [key=0, style=solid];
m2_2489 -> m2_213  [key=2, style=dotted];
m2_2489 -> m2_2494  [key=2, style=dotted];
m2_2490 -> m2_2491  [key=0, style=solid];
m2_2490 -> m2_268  [key=2, style=dotted];
m2_2490 -> m2_269  [key=2, style=dotted];
m2_2490 -> m2_2495  [key=2, style=dotted];
m2_2490 -> m2_2492  [key=1, style=dashed, color=darkseagreen4, label=dict];
m2_2491 -> m2_2492  [key=0, style=solid];
m2_2491 -> m2_11  [key=2, style=dotted];
m2_2492 -> m2_2493  [key=0, style=solid];
m2_2492 -> m2_11  [key=2, style=dotted];
m2_2493 -> m2_2488  [key=0, style=bold, color=blue];
m2_2185 -> m2_2186  [key=0, style=solid];
m2_2186 -> m2_2187  [key=0, style=solid];
m2_2186 -> m2_1536  [key=2, style=dotted];
m2_2187 -> m2_2185  [key=0, style=bold, color=blue];
m2_2724 -> m2_2725  [key=0, style=solid];
m2_2725 -> m2_2726  [key=0, style=solid];
m2_2725 -> m2_263  [key=2, style=dotted];
m2_2725 -> m2_268  [key=2, style=dotted];
m2_2725 -> m2_269  [key=2, style=dotted];
m2_2725 -> m2_2389  [key=2, style=dotted];
m2_2726 -> m2_2727  [key=0, style=solid];
m2_2726 -> m2_11  [key=2, style=dotted];
m2_2727 -> m2_2724  [key=0, style=bold, color=blue];
m2_2832 -> m2_2833  [key=0, style=solid];
m2_2833 -> m2_2834  [key=0, style=solid];
m2_2833 -> m2_93  [key=2, style=dotted];
m2_2834 -> m2_2835  [key=0, style=solid];
m2_2834 -> m2_11  [key=2, style=dotted];
m2_2834 -> m2_2834  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_2835 -> m2_2836  [key=0, style=solid];
m2_2835 -> m2_11  [key=2, style=dotted];
m2_2835 -> m2_2835  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_2836 -> m2_2832  [key=0, style=bold, color=blue];
m2_1223 -> m2_1224  [key=0, style=solid];
m2_1224 -> m2_1223  [key=0, style=bold, color=blue];
m2_30 -> m2_31  [key=0, style=solid];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_31  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m2_31 -> m2_34  [key=2, style=dotted];
m2_31 -> m2_33  [key=2, style=dotted];
m2_31 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_10  [key=2, style=dotted];
m2_32 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label=p];
m2_32 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label=p];
m2_32 -> m2_25  [key=0, style=bold, color=blue];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_11  [key=2, style=dotted];
m2_33 -> m2_20  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseTime"];
m2_33 -> m2_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseTime"];
m2_33 -> m2_25  [key=3, color=darkorchid, style=bold, label="Parameter variable int start"];
m2_33 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label="ref int"];
m2_33 -> m2_35  [key=0, style=solid];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_11  [key=2, style=dotted];
m2_35 -> m2_24  [key=2, style=dotted];
m2_35 -> m2_37  [key=0, style=solid];
m2_35 -> m2_29  [key=2, style=dotted];
m2_35 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_36 -> m2_30  [key=0, style=bold, color=blue];
m2_36 -> m2_51  [key=0, style=solid];
m2_644 -> m2_645  [key=0, style=solid];
m2_645 -> m2_646  [key=0, style=solid];
m2_645 -> m2_648  [key=2, style=dotted];
m2_645 -> m2_209  [key=2, style=dotted];
m2_646 -> m2_647  [key=0, style=solid];
m2_647 -> m2_644  [key=0, style=bold, color=blue];
m2_2957 -> m2_2958  [key=0, style=solid];
m2_2958 -> m2_2959  [key=0, style=solid];
m2_2958 -> m2_2962  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2958 -> m2_2958  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2959 -> m2_2960  [key=0, style=solid];
m2_2959 -> m2_140  [key=2, style=dotted];
m2_2959 -> m2_2961  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2960 -> m2_2957  [key=0, style=bold, color=blue];
m2_99 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label="ref Newtonsoft.Json.Utilities.DateTimeParser"];
m2_3123 -> m2_3124  [key=0, style=solid];
m2_3124 -> m2_3125  [key=0, style=solid];
m2_3124 -> m2_3134  [key=2, style=dotted];
m2_3124 -> m2_3126  [key=1, style=dashed, color=darkseagreen4, label=joe];
m2_3124 -> m2_3130  [key=1, style=dashed, color=darkseagreen4, label=joe];
m2_3124 -> m2_3131  [key=1, style=dashed, color=darkseagreen4, label=joe];
m2_3125 -> m2_3126  [key=0, style=solid];
m2_3126 -> m2_3127  [key=0, style=solid];
m2_3130 -> m2_3131  [key=0, style=solid];
m2_3131 -> m2_3132  [key=0, style=solid];
m2_3131 -> m2_338  [key=2, style=dotted];
m2_3127 -> m2_3128  [key=0, style=solid];
m2_3127 -> m2_1735  [key=2, style=dotted];
m2_3127 -> m2_3129  [key=1, style=dashed, color=darkseagreen4, label=mike];
m2_3127 -> m2_3130  [key=1, style=dashed, color=darkseagreen4, label=mike];
m2_3128 -> m2_3129  [key=0, style=solid];
m2_3129 -> m2_3130  [key=0, style=solid];
m2_3132 -> m2_3133  [key=0, style=solid];
m2_3132 -> m2_11  [key=2, style=dotted];
m2_3133 -> m2_3123  [key=0, style=bold, color=blue];
m2_601 -> m2_602  [key=0, style=solid];
m2_602 -> m2_603  [key=0, style=solid];
m2_602 -> m2_140  [key=2, style=dotted];
m2_602 -> m2_604  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_602 -> m2_602  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_603 -> m2_601  [key=0, style=bold, color=blue];
m2_2014 -> m2_2015  [key=0, style=solid];
m2_2015 -> m2_2016  [key=0, style=solid];
m2_2016 -> m2_2014  [key=0, style=bold, color=blue];
m2_593 -> m2_594  [key=0, style=solid];
m2_594 -> m2_595  [key=0, style=solid];
m2_594 -> m2_140  [key=2, style=dotted];
m2_594 -> m2_596  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_595 -> m2_593  [key=0, style=bold, color=blue];
m2_2825 -> m2_2826  [key=0, style=solid];
m2_2826 -> m2_2827  [key=0, style=solid];
m2_2827 -> m2_2825  [key=0, style=bold, color=blue];
m2_1969 -> m2_1970  [key=0, style=solid];
m2_1970 -> m2_1971  [key=0, style=solid];
m2_1970 -> m2_1351  [key=2, style=dotted];
m2_1971 -> m2_1969  [key=0, style=bold, color=blue];
m2_1639 -> m2_1640  [key=0, style=solid];
m2_1639 -> m2_1641  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_1640 -> m2_1641  [key=0, style=solid];
m2_1641 -> m2_1642  [key=0, style=solid];
m2_1642 -> m2_1643  [key=0, style=solid];
m2_1643 -> m2_1639  [key=0, style=bold, color=blue];
m2_2604 -> m2_2605  [key=0, style=solid];
m2_2605 -> m2_2606  [key=0, style=solid];
m2_2605 -> m2_2612  [key=2, style=dotted];
m2_2605 -> m2_2607  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_2605 -> m2_2608  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_2605 -> m2_2610  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_2606 -> m2_2607  [key=0, style=solid];
m2_2607 -> m2_2608  [key=0, style=solid];
m2_2608 -> m2_2609  [key=0, style=solid];
m2_2608 -> m2_9  [key=2, style=dotted];
m2_2610 -> m2_2611  [key=0, style=solid];
m2_2610 -> m2_11  [key=2, style=dotted];
m2_2609 -> m2_2610  [key=0, style=solid];
m2_2609 -> m2_93  [key=2, style=dotted];
m2_2611 -> m2_2604  [key=0, style=bold, color=blue];
m2_799 -> m2_800  [key=0, style=solid];
m2_800 -> m2_801  [key=0, style=solid];
m2_800 -> m2_800  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_801 -> m2_802  [key=0, style=solid];
m2_801 -> m2_10  [key=2, style=dotted];
m2_801 -> m2_803  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m2_801 -> m2_804  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m2_801 -> m2_805  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m2_801 -> m2_806  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m2_801 -> m2_807  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m2_802 -> m2_803  [key=0, style=solid];
m2_802 -> m2_11  [key=2, style=dotted];
m2_803 -> m2_804  [key=0, style=solid];
m2_803 -> m2_209  [key=2, style=dotted];
m2_803 -> m2_11  [key=2, style=dotted];
m2_804 -> m2_805  [key=0, style=solid];
m2_804 -> m2_11  [key=2, style=dotted];
m2_805 -> m2_806  [key=0, style=solid];
m2_805 -> m2_11  [key=2, style=dotted];
m2_806 -> m2_807  [key=0, style=solid];
m2_806 -> m2_11  [key=2, style=dotted];
m2_807 -> m2_808  [key=0, style=solid];
m2_807 -> m2_11  [key=2, style=dotted];
m2_808 -> m2_799  [key=0, style=bold, color=blue];
m2_2997 -> m2_2998  [key=0, style=solid];
m2_2998 -> m2_2999  [key=0, style=solid];
m2_2998 -> m2_3002  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2998 -> m2_2998  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2999 -> m2_3000  [key=0, style=solid];
m2_2999 -> m2_140  [key=2, style=dotted];
m2_2999 -> m2_3001  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3000 -> m2_2997  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_3  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Parse"];
m2_0 -> m2_4  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Parse"];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_8  [key=2, style=dotted];
m2_1 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label=store];
m2_1 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=store];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_9  [key=2, style=dotted];
m2_2 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_11  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_11  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_10  [key=2, style=dotted];
m2_3 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=deserializedStore];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_12  [key=2, style=dotted];
m2_7 -> m2_0  [key=0, style=bold, color=blue];
m2_2753 -> m2_2754  [key=0, style=solid];
m2_2754 -> m2_2755  [key=0, style=solid];
m2_2754 -> m2_2758  [key=2, style=dotted];
m2_2754 -> m2_208  [key=2, style=dotted];
m2_2754 -> m2_2759  [key=2, style=dotted];
m2_2755 -> m2_2756  [key=0, style=solid];
m2_2755 -> m2_338  [key=2, style=dotted];
m2_2756 -> m2_2757  [key=0, style=solid];
m2_2756 -> m2_11  [key=2, style=dotted];
m2_2757 -> m2_2753  [key=0, style=bold, color=blue];
m2_2046 -> m2_2047  [key=0, style=solid];
m2_2047 -> m2_2048  [key=0, style=solid];
m2_2047 -> m2_93  [key=2, style=dotted];
m2_2047 -> m2_2049  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_2047 -> m2_2050  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_2048 -> m2_2049  [key=0, style=solid];
m2_2048 -> m2_11  [key=2, style=dotted];
m2_2049 -> m2_2050  [key=0, style=solid];
m2_2049 -> m2_11  [key=2, style=dotted];
m2_2050 -> m2_2051  [key=0, style=solid];
m2_2050 -> m2_11  [key=2, style=dotted];
m2_2051 -> m2_2046  [key=0, style=bold, color=blue];
m2_309 -> m2_310  [key=0, style=solid];
m2_310 -> m2_311  [key=0, style=solid];
m2_310 -> m2_325  [key=2, style=dotted];
m2_310 -> m2_312  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_310 -> m2_313  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_310 -> m2_314  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_310 -> m2_315  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_311 -> m2_312  [key=0, style=solid];
m2_312 -> m2_313  [key=0, style=solid];
m2_312 -> m2_326  [key=2, style=dotted];
m2_313 -> m2_314  [key=0, style=solid];
m2_313 -> m2_326  [key=2, style=dotted];
m2_314 -> m2_315  [key=0, style=solid];
m2_314 -> m2_326  [key=2, style=dotted];
m2_315 -> m2_316  [key=0, style=solid];
m2_315 -> m2_9  [key=2, style=dotted];
m2_316 -> m2_317  [key=0, style=solid];
m2_316 -> m2_93  [key=2, style=dotted];
m2_316 -> m2_318  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m2_316 -> m2_319  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m2_316 -> m2_320  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m2_316 -> m2_321  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m2_316 -> m2_322  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m2_316 -> m2_323  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m2_317 -> m2_318  [key=0, style=solid];
m2_317 -> m2_11  [key=2, style=dotted];
m2_318 -> m2_319  [key=0, style=solid];
m2_318 -> m2_11  [key=2, style=dotted];
m2_319 -> m2_320  [key=0, style=solid];
m2_319 -> m2_11  [key=2, style=dotted];
m2_320 -> m2_321  [key=0, style=solid];
m2_320 -> m2_11  [key=2, style=dotted];
m2_321 -> m2_322  [key=0, style=solid];
m2_321 -> m2_11  [key=2, style=dotted];
m2_322 -> m2_323  [key=0, style=solid];
m2_322 -> m2_11  [key=2, style=dotted];
m2_323 -> m2_324  [key=0, style=solid];
m2_323 -> m2_11  [key=2, style=dotted];
m2_324 -> m2_309  [key=0, style=bold, color=blue];
m2_1385 -> m2_1386  [key=0, style=solid];
m2_1386 -> m2_1387  [key=0, style=solid];
m2_1386 -> m2_648  [key=2, style=dotted];
m2_1386 -> m2_1388  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_1386 -> m2_1389  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_1386 -> m2_1390  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_1386 -> m2_1394  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_1387 -> m2_1388  [key=0, style=solid];
m2_1387 -> m2_209  [key=2, style=dotted];
m2_1388 -> m2_1389  [key=0, style=solid];
m2_1389 -> m2_1390  [key=0, style=solid];
m2_1390 -> m2_1391  [key=0, style=solid];
m2_1394 -> m2_1395  [key=0, style=solid];
m2_1394 -> m2_1289  [key=2, style=dotted];
m2_1391 -> m2_1392  [key=0, style=solid];
m2_1391 -> m2_221  [key=2, style=dotted];
m2_1391 -> m2_222  [key=2, style=dotted];
m2_1391 -> m2_1394  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m2_1391 -> m2_1400  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m2_1392 -> m2_1393  [key=0, style=solid];
m2_1400 -> m2_1401  [key=0, style=solid];
m2_1400 -> m2_11  [key=2, style=dotted];
m2_1393 -> m2_1394  [key=0, style=solid];
m2_1393 -> m2_1396  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m2_1396 -> m2_1397  [key=0, style=solid];
m2_1396 -> m2_11  [key=2, style=dotted];
m2_1395 -> m2_1396  [key=0, style=solid];
m2_1395 -> m2_213  [key=2, style=dotted];
m2_1395 -> m2_716  [key=2, style=dotted];
m2_1395 -> m2_1397  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1397 -> m2_1398  [key=0, style=solid];
m2_1397 -> m2_93  [key=2, style=dotted];
m2_1397 -> m2_1399  [key=1, style=dashed, color=darkseagreen4, label=o2];
m2_1397 -> m2_1400  [key=1, style=dashed, color=darkseagreen4, label=o2];
m2_1397 -> m2_1401  [key=1, style=dashed, color=darkseagreen4, label=o2];
m2_1397 -> m2_1402  [key=1, style=dashed, color=darkseagreen4, label=o2];
m2_1397 -> m2_1403  [key=1, style=dashed, color=darkseagreen4, label=o2];
m2_1398 -> m2_1399  [key=0, style=solid];
m2_1398 -> m2_11  [key=2, style=dotted];
m2_1399 -> m2_1400  [key=0, style=solid];
m2_1399 -> m2_11  [key=2, style=dotted];
m2_1401 -> m2_1402  [key=0, style=solid];
m2_1401 -> m2_11  [key=2, style=dotted];
m2_1402 -> m2_1403  [key=0, style=solid];
m2_1402 -> m2_11  [key=2, style=dotted];
m2_1403 -> m2_1404  [key=0, style=solid];
m2_1403 -> m2_11  [key=2, style=dotted];
m2_1404 -> m2_1385  [key=0, style=bold, color=blue];
m2_471 -> m2_472  [key=0, style=solid];
m2_472 -> m2_473  [key=0, style=solid];
m2_472 -> m2_440  [key=2, style=dotted];
m2_472 -> m2_477  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m2_472 -> m2_478  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m2_473 -> m2_474  [key=0, style=solid];
m2_473 -> m2_441  [key=2, style=dotted];
m2_477 -> m2_478  [key=0, style=solid];
m2_477 -> m2_11  [key=2, style=dotted];
m2_478 -> m2_479  [key=0, style=solid];
m2_478 -> m2_11  [key=2, style=dotted];
m2_474 -> m2_475  [key=0, style=solid];
m2_474 -> m2_480  [key=2, style=dotted];
m2_474 -> m2_429  [key=2, style=dotted];
m2_474 -> m2_476  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_475 -> m2_476  [key=0, style=solid];
m2_475 -> m2_11  [key=2, style=dotted];
m2_476 -> m2_477  [key=0, style=solid];
m2_476 -> m2_480  [key=2, style=dotted];
m2_476 -> m2_430  [key=2, style=dotted];
m2_476 -> m2_478  [key=1, style=dashed, color=darkseagreen4, label=m2];
m2_479 -> m2_471  [key=0, style=bold, color=blue];
m2_2469 -> m2_2470  [key=0, style=solid];
m2_2470 -> m2_2471  [key=0, style=solid];
m2_2470 -> m2_2470  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2471 -> m2_2472  [key=0, style=solid];
m2_2471 -> m2_93  [key=2, style=dotted];
m2_2472 -> m2_2473  [key=0, style=solid];
m2_2472 -> m2_11  [key=2, style=dotted];
m2_2473 -> m2_2474  [key=0, style=solid];
m2_2474 -> m2_2475  [key=0, style=solid];
m2_2474 -> m2_93  [key=2, style=dotted];
m2_2475 -> m2_2476  [key=0, style=solid];
m2_2475 -> m2_356  [key=2, style=dotted];
m2_2475 -> m2_11  [key=2, style=dotted];
m2_2476 -> m2_2469  [key=0, style=bold, color=blue];
m2_842 -> m2_843  [key=0, style=solid];
m2_843 -> m2_844  [key=0, style=solid];
m2_843 -> m2_843  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_844 -> m2_845  [key=0, style=solid];
m2_844 -> m2_93  [key=2, style=dotted];
m2_844 -> m2_846  [key=1, style=dashed, color=darkseagreen4, label=content];
m2_844 -> m2_847  [key=1, style=dashed, color=darkseagreen4, label=content];
m2_844 -> m2_848  [key=1, style=dashed, color=darkseagreen4, label=content];
m2_845 -> m2_846  [key=0, style=solid];
m2_845 -> m2_11  [key=2, style=dotted];
m2_846 -> m2_847  [key=0, style=solid];
m2_846 -> m2_11  [key=2, style=dotted];
m2_847 -> m2_848  [key=0, style=solid];
m2_847 -> m2_11  [key=2, style=dotted];
m2_848 -> m2_849  [key=0, style=solid];
m2_848 -> m2_11  [key=2, style=dotted];
m2_849 -> m2_842  [key=0, style=bold, color=blue];
m2_3001 -> m2_3002  [key=0, style=solid];
m2_141 -> m2_142  [key=0, style=solid];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_144  [key=2, style=dotted];
m2_142 -> m2_9  [key=2, style=dotted];
m2_143 -> m2_141  [key=0, style=bold, color=blue];
m2_195 -> m2_196  [key=0, style=solid];
m2_195 -> m2_93  [key=2, style=dotted];
m2_194 -> m2_195  [key=0, style=solid];
m2_196 -> m2_194  [key=0, style=bold, color=blue];
m2_459 -> m2_460  [key=0, style=solid];
m2_459 -> m2_213  [key=2, style=dotted];
m2_459 -> m2_461  [key=2, style=dotted];
m2_458 -> m2_459  [key=0, style=solid];
m2_460 -> m2_458  [key=0, style=bold, color=blue];
m2_503 -> m2_504  [key=0, style=solid];
m2_504 -> m2_505  [key=0, style=solid];
m2_504 -> m2_507  [key=2, style=dotted];
m2_505 -> m2_506  [key=0, style=solid];
m2_505 -> m2_9  [key=2, style=dotted];
m2_506 -> m2_503  [key=0, style=bold, color=blue];
m2_589 -> m2_590  [key=0, style=solid];
m2_590 -> m2_591  [key=0, style=solid];
m2_591 -> m2_592  [key=0, style=solid];
m2_591 -> m2_93  [key=2, style=dotted];
m2_592 -> m2_589  [key=0, style=bold, color=blue];
m2_596 -> m2_597  [key=0, style=solid];
m2_597 -> m2_598  [key=0, style=solid];
m2_597 -> m2_578  [key=2, style=dotted];
m2_597 -> m2_209  [key=2, style=dotted];
m2_598 -> m2_599  [key=0, style=solid];
m2_598 -> m2_9  [key=2, style=dotted];
m2_599 -> m2_600  [key=0, style=solid];
m2_599 -> m2_12  [key=2, style=dotted];
m2_600 -> m2_596  [key=0, style=bold, color=blue];
m2_604 -> m2_605  [key=0, style=solid];
m2_605 -> m2_606  [key=0, style=solid];
m2_606 -> m2_607  [key=0, style=solid];
m2_606 -> m2_93  [key=2, style=dotted];
m2_607 -> m2_604  [key=0, style=bold, color=blue];
m2_642 -> m2_643  [key=0, style=solid];
m2_642 -> m2_10  [key=2, style=dotted];
m2_641 -> m2_642  [key=0, style=solid];
m2_643 -> m2_641  [key=0, style=bold, color=blue];
m2_729 -> m2_730  [key=0, style=solid];
m2_730 -> m2_731  [key=0, style=solid];
m2_730 -> m2_715  [key=2, style=dotted];
m2_730 -> m2_732  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_731 -> m2_732  [key=0, style=solid];
m2_732 -> m2_733  [key=0, style=solid];
m2_732 -> m2_213  [key=2, style=dotted];
m2_732 -> m2_716  [key=2, style=dotted];
m2_733 -> m2_729  [key=0, style=bold, color=blue];
m2_918 -> m2_919  [key=0, style=solid];
m2_918 -> m2_93  [key=2, style=dotted];
m2_917 -> m2_918  [key=0, style=solid];
m2_919 -> m2_917  [key=0, style=bold, color=blue];
m2_945 -> m2_946  [key=0, style=solid];
m2_945 -> m2_93  [key=2, style=dotted];
m2_944 -> m2_945  [key=0, style=solid];
m2_946 -> m2_944  [key=0, style=bold, color=blue];
m2_952 -> m2_953  [key=0, style=solid];
m2_952 -> m2_93  [key=2, style=dotted];
m2_951 -> m2_952  [key=0, style=solid];
m2_953 -> m2_951  [key=0, style=bold, color=blue];
m2_959 -> m2_960  [key=0, style=solid];
m2_959 -> m2_93  [key=2, style=dotted];
m2_958 -> m2_959  [key=0, style=solid];
m2_960 -> m2_958  [key=0, style=bold, color=blue];
m2_966 -> m2_967  [key=0, style=solid];
m2_966 -> m2_93  [key=2, style=dotted];
m2_965 -> m2_966  [key=0, style=solid];
m2_967 -> m2_965  [key=0, style=bold, color=blue];
m2_973 -> m2_974  [key=0, style=solid];
m2_973 -> m2_93  [key=2, style=dotted];
m2_972 -> m2_973  [key=0, style=solid];
m2_974 -> m2_972  [key=0, style=bold, color=blue];
m2_980 -> m2_981  [key=0, style=solid];
m2_980 -> m2_93  [key=2, style=dotted];
m2_979 -> m2_980  [key=0, style=solid];
m2_981 -> m2_979  [key=0, style=bold, color=blue];
m2_987 -> m2_988  [key=0, style=solid];
m2_987 -> m2_93  [key=2, style=dotted];
m2_986 -> m2_987  [key=0, style=solid];
m2_988 -> m2_986  [key=0, style=bold, color=blue];
m2_994 -> m2_995  [key=0, style=solid];
m2_994 -> m2_93  [key=2, style=dotted];
m2_993 -> m2_994  [key=0, style=solid];
m2_995 -> m2_993  [key=0, style=bold, color=blue];
m2_1001 -> m2_1002  [key=0, style=solid];
m2_1001 -> m2_93  [key=2, style=dotted];
m2_1000 -> m2_1001  [key=0, style=solid];
m2_1002 -> m2_1000  [key=0, style=bold, color=blue];
m2_1008 -> m2_1009  [key=0, style=solid];
m2_1008 -> m2_648  [key=2, style=dotted];
m2_1008 -> m2_1010  [key=2, style=dotted];
m2_1007 -> m2_1008  [key=0, style=solid];
m2_1009 -> m2_1007  [key=0, style=bold, color=blue];
m2_1016 -> m2_1017  [key=0, style=solid];
m2_1016 -> m2_208  [key=2, style=dotted];
m2_1016 -> m2_1010  [key=2, style=dotted];
m2_1015 -> m2_1016  [key=0, style=solid];
m2_1017 -> m2_1015  [key=0, style=bold, color=blue];
m2_1026 -> m2_1027  [key=0, style=solid];
m2_1027 -> m2_1028  [key=0, style=solid];
m2_1027 -> m2_53  [key=2, style=dotted];
m2_1027 -> m2_213  [key=2, style=dotted];
m2_1027 -> m2_1029  [key=2, style=dotted];
m2_1027 -> m2_214  [key=2, style=dotted];
m2_1028 -> m2_1026  [key=0, style=bold, color=blue];
m2_1033 -> m2_1034  [key=0, style=solid];
m2_1034 -> m2_1035  [key=0, style=solid];
m2_1034 -> m2_213  [key=2, style=dotted];
m2_1034 -> m2_1029  [key=2, style=dotted];
m2_1034 -> m2_461  [key=2, style=dotted];
m2_1035 -> m2_1033  [key=0, style=bold, color=blue];
m2_1039 -> m2_1040  [key=0, style=solid];
m2_1040 -> m2_1041  [key=0, style=solid];
m2_1040 -> m2_213  [key=2, style=dotted];
m2_1040 -> m2_1029  [key=2, style=dotted];
m2_1040 -> m2_461  [key=2, style=dotted];
m2_1041 -> m2_1039  [key=0, style=bold, color=blue];
m2_1045 -> m2_1046  [key=0, style=solid];
m2_1046 -> m2_1047  [key=0, style=solid];
m2_1046 -> m2_213  [key=2, style=dotted];
m2_1046 -> m2_1029  [key=2, style=dotted];
m2_1046 -> m2_461  [key=2, style=dotted];
m2_1047 -> m2_1045  [key=0, style=bold, color=blue];
m2_1109 -> m2_1110  [key=0, style=solid];
m2_1110 -> m2_1111  [key=0, style=solid];
m2_1111 -> m2_1112  [key=0, style=solid];
m2_1111 -> m2_93  [key=2, style=dotted];
m2_1112 -> m2_1109  [key=0, style=bold, color=blue];
m2_1160 -> m2_1161  [key=0, style=solid];
m2_1161 -> m2_1162  [key=0, style=solid];
m2_1162 -> m2_1160  [key=0, style=bold, color=blue];
m2_1189 -> m2_1190  [key=0, style=solid];
m2_1189 -> m2_93  [key=2, style=dotted];
m2_1188 -> m2_1189  [key=0, style=solid];
m2_1190 -> m2_1188  [key=0, style=bold, color=blue];
m2_1666 -> m2_1667  [key=0, style=solid];
m2_1666 -> m2_93  [key=2, style=dotted];
m2_1665 -> m2_1666  [key=0, style=solid];
m2_1667 -> m2_1665  [key=0, style=bold, color=blue];
m2_1671 -> m2_1672  [key=0, style=solid];
m2_1672 -> m2_1673  [key=0, style=solid];
m2_1672 -> m2_52  [key=2, style=dotted];
m2_1672 -> m2_1674  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_1672 -> m2_1678  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_1673 -> m2_1674  [key=0, style=solid];
m2_1673 -> m2_237  [key=2, style=dotted];
m2_1674 -> m2_1675  [key=0, style=solid];
m2_1674 -> m2_237  [key=2, style=dotted];
m2_1678 -> m2_1679  [key=0, style=solid];
m2_1678 -> m2_237  [key=2, style=dotted];
m2_1675 -> m2_1676  [key=0, style=solid];
m2_1675 -> m2_52  [key=2, style=dotted];
m2_1675 -> m2_1677  [key=1, style=dashed, color=darkseagreen4, label=child];
m2_1675 -> m2_1678  [key=1, style=dashed, color=darkseagreen4, label=child];
m2_1675 -> m2_1679  [key=1, style=dashed, color=darkseagreen4, label=child];
m2_1676 -> m2_1677  [key=0, style=solid];
m2_1676 -> m2_237  [key=2, style=dotted];
m2_1677 -> m2_1678  [key=0, style=solid];
m2_1677 -> m2_237  [key=2, style=dotted];
m2_1679 -> m2_1680  [key=0, style=solid];
m2_1679 -> m2_338  [key=2, style=dotted];
m2_1680 -> m2_1681  [key=0, style=solid];
m2_1680 -> m2_93  [key=2, style=dotted];
m2_1681 -> m2_1671  [key=0, style=bold, color=blue];
m2_1848 -> m2_1849  [key=0, style=solid];
m2_1848 -> m2_93  [key=2, style=dotted];
m2_1847 -> m2_1848  [key=0, style=solid];
m2_1849 -> m2_1847  [key=0, style=bold, color=blue];
m2_2078 -> m2_2079  [key=0, style=solid];
m2_2079 -> m2_2080  [key=0, style=solid];
m2_2079 -> m2_10  [key=2, style=dotted];
m2_2080 -> m2_2078  [key=0, style=bold, color=blue];
m2_2353 -> m2_2354  [key=0, style=solid];
m2_2353 -> m2_93  [key=2, style=dotted];
m2_2352 -> m2_2353  [key=0, style=solid];
m2_2354 -> m2_2352  [key=0, style=bold, color=blue];
m2_2439 -> m2_2440  [key=0, style=solid];
m2_2439 -> m2_93  [key=2, style=dotted];
m2_2438 -> m2_2439  [key=0, style=solid];
m2_2440 -> m2_2438  [key=0, style=bold, color=blue];
m2_2458 -> m2_2459  [key=0, style=solid];
m2_2459 -> m2_2460  [key=0, style=solid];
m2_2460 -> m2_2461  [key=0, style=solid];
m2_2460 -> m2_93  [key=2, style=dotted];
m2_2461 -> m2_2458  [key=0, style=bold, color=blue];
m2_2465 -> m2_2466  [key=0, style=solid];
m2_2466 -> m2_2467  [key=0, style=solid];
m2_2467 -> m2_2468  [key=0, style=solid];
m2_2467 -> m2_93  [key=2, style=dotted];
m2_2468 -> m2_2465  [key=0, style=bold, color=blue];
m2_2541 -> m2_2542  [key=0, style=solid];
m2_2542 -> m2_2543  [key=0, style=solid];
m2_2542 -> m2_93  [key=2, style=dotted];
m2_2543 -> m2_2541  [key=0, style=bold, color=blue];
m2_2547 -> m2_2548  [key=0, style=solid];
m2_2548 -> m2_2549  [key=0, style=solid];
m2_2548 -> m2_93  [key=2, style=dotted];
m2_2549 -> m2_2547  [key=0, style=bold, color=blue];
m2_2553 -> m2_2554  [key=0, style=solid];
m2_2554 -> m2_2555  [key=0, style=solid];
m2_2554 -> m2_93  [key=2, style=dotted];
m2_2555 -> m2_2553  [key=0, style=bold, color=blue];
m2_2563 -> m2_2564  [key=0, style=solid];
m2_2564 -> m2_2565  [key=0, style=solid];
m2_2564 -> m2_93  [key=2, style=dotted];
m2_2565 -> m2_2563  [key=0, style=bold, color=blue];
m2_2569 -> m2_2570  [key=0, style=solid];
m2_2570 -> m2_2571  [key=0, style=solid];
m2_2570 -> m2_114  [key=2, style=dotted];
m2_2571 -> m2_2569  [key=0, style=bold, color=blue];
m2_2677 -> m2_2678  [key=0, style=solid];
m2_2677 -> m2_326  [key=2, style=dotted];
m2_2678 -> m2_2679  [key=0, style=solid];
m2_2676 -> m2_2677  [key=0, style=solid];
m2_2676 -> m2_2678  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m2_2679 -> m2_2676  [key=0, style=bold, color=blue];
m2_2692 -> m2_2693  [key=0, style=solid];
m2_2692 -> m2_326  [key=2, style=dotted];
m2_2693 -> m2_2694  [key=0, style=solid];
m2_2691 -> m2_2692  [key=0, style=solid];
m2_2691 -> m2_2693  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m2_2694 -> m2_2691  [key=0, style=bold, color=blue];
m2_2707 -> m2_2708  [key=0, style=solid];
m2_2707 -> m2_326  [key=2, style=dotted];
m2_2708 -> m2_2709  [key=0, style=solid];
m2_2706 -> m2_2707  [key=0, style=solid];
m2_2706 -> m2_2708  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m2_2709 -> m2_2706  [key=0, style=bold, color=blue];
m2_2782 -> m2_2783  [key=0, style=solid];
m2_2782 -> m2_268  [key=2, style=dotted];
m2_2782 -> m2_269  [key=2, style=dotted];
m2_2782 -> m2_2495  [key=2, style=dotted];
m2_2781 -> m2_2782  [key=0, style=solid];
m2_2783 -> m2_2781  [key=0, style=bold, color=blue];
m2_2794 -> m2_2795  [key=0, style=solid];
m2_2795 -> m2_2796  [key=0, style=solid];
m2_2795 -> m2_2798  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2796 -> m2_2797  [key=0, style=solid];
m2_2796 -> m2_263  [key=2, style=dotted];
m2_2796 -> m2_2801  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_2798 -> m2_2799  [key=0, style=solid];
m2_2798 -> m2_268  [key=2, style=dotted];
m2_2798 -> m2_269  [key=2, style=dotted];
m2_2798 -> m2_2800  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_2798 -> m2_2801  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_2797 -> m2_2798  [key=0, style=solid];
m2_2801 -> m2_2802  [key=0, style=solid];
m2_2801 -> m2_270  [key=2, style=dotted];
m2_2799 -> m2_2800  [key=0, style=solid];
m2_2799 -> m2_2803  [key=2, style=dotted];
m2_2800 -> m2_2801  [key=0, style=solid];
m2_2800 -> m2_2803  [key=2, style=dotted];
m2_2802 -> m2_2794  [key=0, style=bold, color=blue];
m2_2859 -> m2_2860  [key=0, style=solid];
m2_2859 -> m2_93  [key=2, style=dotted];
m2_2859 -> m2_2855  [key=1, style=dashed, color=darkseagreen4, label=obj];
m2_2858 -> m2_2859  [key=0, style=solid];
m2_2860 -> m2_2858  [key=0, style=bold, color=blue];
m2_2928 -> m2_2929  [key=0, style=solid];
m2_2928 -> m2_93  [key=2, style=dotted];
m2_2927 -> m2_2928  [key=0, style=solid];
m2_2929 -> m2_2927  [key=0, style=bold, color=blue];
m2_2935 -> m2_2936  [key=0, style=solid];
m2_2935 -> m2_93  [key=2, style=dotted];
m2_2934 -> m2_2935  [key=0, style=solid];
m2_2936 -> m2_2934  [key=0, style=bold, color=blue];
m2_2955 -> m2_2956  [key=0, style=solid];
m2_2955 -> m2_93  [key=2, style=dotted];
m2_2954 -> m2_2955  [key=0, style=solid];
m2_2956 -> m2_2954  [key=0, style=bold, color=blue];
m2_2962 -> m2_2963  [key=0, style=solid];
m2_2962 -> m2_93  [key=2, style=dotted];
m2_2961 -> m2_2962  [key=0, style=solid];
m2_2963 -> m2_2961  [key=0, style=bold, color=blue];
m2_2969 -> m2_2970  [key=0, style=solid];
m2_2969 -> m2_93  [key=2, style=dotted];
m2_2968 -> m2_2969  [key=0, style=solid];
m2_2970 -> m2_2968  [key=0, style=bold, color=blue];
m2_2995 -> m2_2996  [key=0, style=solid];
m2_2995 -> m2_93  [key=2, style=dotted];
m2_2994 -> m2_2995  [key=0, style=solid];
m2_2996 -> m2_2994  [key=0, style=bold, color=blue];
m2_3002 -> m2_3003  [key=0, style=solid];
m2_3002 -> m2_93  [key=2, style=dotted];
m2_3003 -> m2_3001  [key=0, style=bold, color=blue];
m2_1554 -> m2_1555  [key=0, style=solid];
m2_1555 -> m2_1556  [key=0, style=solid];
m2_1555 -> m2_1559  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_1555 -> m2_1562  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_1555 -> m2_1555  [key=3, color=darkorchid, style=bold, label="Local variable string s"];
m2_1556 -> m2_1557  [key=0, style=solid];
m2_1556 -> m2_9  [key=2, style=dotted];
m2_1559 -> m2_1560  [key=0, style=solid];
m2_1559 -> m2_237  [key=2, style=dotted];
m2_1562 -> m2_1563  [key=0, style=solid];
m2_1562 -> m2_237  [key=2, style=dotted];
m2_1557 -> m2_1558  [key=0, style=solid];
m2_1557 -> m2_11  [key=2, style=dotted];
m2_1558 -> m2_1559  [key=0, style=solid];
m2_1558 -> m2_52  [key=2, style=dotted];
m2_1558 -> m2_1560  [key=1, style=dashed, color=darkseagreen4, label=d1];
m2_1560 -> m2_1561  [key=0, style=solid];
m2_1560 -> m2_9  [key=2, style=dotted];
m2_1560 -> m2_11  [key=2, style=dotted];
m2_1561 -> m2_1562  [key=0, style=solid];
m2_1561 -> m2_52  [key=2, style=dotted];
m2_1561 -> m2_1563  [key=1, style=dashed, color=darkseagreen4, label=d2];
m2_1563 -> m2_1564  [key=0, style=solid];
m2_1563 -> m2_9  [key=2, style=dotted];
m2_1563 -> m2_11  [key=2, style=dotted];
m2_1564 -> m2_1554  [key=0, style=bold, color=blue];
m2_3146 -> m2_3147  [key=0, style=solid];
m2_3147 -> m2_3148  [key=0, style=solid];
m2_3147 -> m2_3149  [key=2, style=dotted];
m2_3147 -> m2_3150  [key=2, style=dotted];
m2_3147 -> m2_3151  [key=2, style=dotted];
m2_3147 -> m2_3147  [key=1, style=dashed, color=darkseagreen4, label=answer];
m2_3148 -> m2_3146  [key=0, style=bold, color=blue];
m2_481 -> m2_482  [key=0, style=solid];
m2_482 -> m2_483  [key=0, style=solid];
m2_482 -> m2_487  [key=2, style=dotted];
m2_482 -> m2_488  [key=2, style=dotted];
m2_483 -> m2_484  [key=0, style=solid];
m2_483 -> m2_441  [key=2, style=dotted];
m2_484 -> m2_485  [key=0, style=solid];
m2_484 -> m2_338  [key=2, style=dotted];
m2_485 -> m2_486  [key=0, style=solid];
m2_485 -> m2_12  [key=2, style=dotted];
m2_486 -> m2_481  [key=0, style=bold, color=blue];
m2_1036 -> m2_1037  [key=0, style=solid];
m2_1037 -> m2_1038  [key=0, style=solid];
m2_1037 -> m2_140  [key=2, style=dotted];
m2_1037 -> m2_1039  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1038 -> m2_1036  [key=0, style=bold, color=blue];
m2_3182 -> m2_3183  [key=0, style=solid];
m2_3183 -> m2_3182  [key=0, style=bold, color=blue];
m2_1409 -> m2_1410  [key=0, style=solid];
m2_1410 -> m2_1411  [key=0, style=solid];
m2_1410 -> m2_93  [key=2, style=dotted];
m2_1410 -> m2_1412  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m2_1410 -> m2_1413  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m2_1410 -> m2_1414  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m2_1410 -> m2_1415  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m2_1411 -> m2_1412  [key=0, style=solid];
m2_1411 -> m2_11  [key=2, style=dotted];
m2_1412 -> m2_1413  [key=0, style=solid];
m2_1412 -> m2_11  [key=2, style=dotted];
m2_1413 -> m2_1414  [key=0, style=solid];
m2_1413 -> m2_11  [key=2, style=dotted];
m2_1414 -> m2_1415  [key=0, style=solid];
m2_1414 -> m2_11  [key=2, style=dotted];
m2_1415 -> m2_1416  [key=0, style=solid];
m2_1415 -> m2_11  [key=2, style=dotted];
m2_1416 -> m2_1409  [key=0, style=bold, color=blue];
m2_1113 -> m2_1114  [key=0, style=solid];
m2_1114 -> m2_1115  [key=0, style=solid];
m2_1114 -> m2_1114  [key=3, color=darkorchid, style=bold, label="Local variable string googleSearchText"];
m2_1115 -> m2_1116  [key=0, style=solid];
m2_1115 -> m2_818  [key=2, style=dotted];
m2_1116 -> m2_1117  [key=0, style=solid];
m2_1116 -> m2_125  [key=2, style=dotted];
m2_1116 -> m2_1125  [key=2, style=dotted];
m2_1116 -> m2_1118  [key=1, style=dashed, color=darkseagreen4, label=results];
m2_1117 -> m2_1118  [key=0, style=solid];
m2_1117 -> m2_208  [key=2, style=dotted];
m2_1117 -> m2_1120  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m2_1117 -> m2_1121  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m2_1117 -> m2_1122  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m2_1117 -> m2_1123  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m2_1118 -> m2_1119  [key=0, style=solid];
m2_1118 -> m2_1121  [key=0, style=solid];
m2_1120 -> m2_1118  [key=0, style=solid];
m2_1120 -> m2_326  [key=2, style=dotted];
m2_1121 -> m2_1122  [key=0, style=solid];
m2_1121 -> m2_11  [key=2, style=dotted];
m2_1122 -> m2_1123  [key=0, style=solid];
m2_1122 -> m2_11  [key=2, style=dotted];
m2_1123 -> m2_1124  [key=0, style=solid];
m2_1123 -> m2_11  [key=2, style=dotted];
m2_1119 -> m2_1120  [key=0, style=solid];
m2_1119 -> m2_819  [key=2, style=dotted];
m2_1119 -> m2_93  [key=2, style=dotted];
m2_1124 -> m2_1113  [key=0, style=bold, color=blue];
m2_2828 -> m2_2829  [key=0, style=solid];
m2_2829 -> m2_2830  [key=0, style=solid];
m2_2829 -> m2_93  [key=2, style=dotted];
m2_2830 -> m2_2831  [key=0, style=solid];
m2_2830 -> m2_11  [key=2, style=dotted];
m2_2831 -> m2_2828  [key=0, style=bold, color=blue];
m2_633 -> m2_634  [key=0, style=solid];
m2_634 -> m2_635  [key=0, style=solid];
m2_634 -> m2_639  [key=2, style=dotted];
m2_634 -> m2_636  [key=1, style=dashed, color=darkseagreen4, label=testClass];
m2_635 -> m2_636  [key=0, style=solid];
m2_635 -> m2_640  [key=2, style=dotted];
m2_636 -> m2_637  [key=0, style=solid];
m2_636 -> m2_9  [key=2, style=dotted];
m2_636 -> m2_642  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m2_637 -> m2_638  [key=0, style=solid];
m2_637 -> m2_140  [key=2, style=dotted];
m2_637 -> m2_641  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_638 -> m2_633  [key=0, style=bold, color=blue];
m2_2560 -> m2_2561  [key=0, style=solid];
m2_2561 -> m2_2562  [key=0, style=solid];
m2_2561 -> m2_140  [key=2, style=dotted];
m2_2561 -> m2_2563  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2562 -> m2_2560  [key=0, style=bold, color=blue];
m2_1099 -> m2_1100  [key=0, style=solid];
m2_1100 -> m2_1101  [key=0, style=solid];
m2_1100 -> m2_52  [key=2, style=dotted];
m2_1100 -> m2_1102  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m2_1100 -> m2_1103  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m2_1101 -> m2_1102  [key=0, style=solid];
m2_1101 -> m2_648  [key=2, style=dotted];
m2_1101 -> m2_237  [key=2, style=dotted];
m2_1102 -> m2_1103  [key=0, style=solid];
m2_1102 -> m2_648  [key=2, style=dotted];
m2_1102 -> m2_237  [key=2, style=dotted];
m2_1103 -> m2_1104  [key=0, style=solid];
m2_1103 -> m2_338  [key=2, style=dotted];
m2_1104 -> m2_1105  [key=0, style=solid];
m2_1104 -> m2_11  [key=2, style=dotted];
m2_1105 -> m2_1099  [key=0, style=bold, color=blue];
m2_2008 -> m2_2009  [key=0, style=solid];
m2_2009 -> m2_2010  [key=0, style=solid];
m2_2009 -> m2_2005  [key=2, style=dotted];
m2_2010 -> m2_2011  [key=0, style=solid];
m2_2010 -> m2_9  [key=2, style=dotted];
m2_2011 -> m2_2012  [key=0, style=solid];
m2_2011 -> m2_93  [key=2, style=dotted];
m2_2012 -> m2_2013  [key=0, style=solid];
m2_2012 -> m2_11  [key=2, style=dotted];
m2_2013 -> m2_2008  [key=0, style=bold, color=blue];
m2_358 -> m2_359  [key=0, style=solid];
m2_359 -> m2_360  [key=0, style=solid];
m2_359 -> m2_9  [key=2, style=dotted];
m2_359 -> m2_361  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_360 -> m2_361  [key=0, style=solid];
m2_360 -> m2_11  [key=2, style=dotted];
m2_361 -> m2_362  [key=0, style=solid];
m2_361 -> m2_93  [key=2, style=dotted];
m2_362 -> m2_363  [key=0, style=solid];
m2_362 -> m2_11  [key=2, style=dotted];
m2_363 -> m2_358  [key=0, style=bold, color=blue];
m2_2522 -> m2_2523  [key=0, style=solid];
m2_2523 -> m2_2524  [key=0, style=solid];
m2_2523 -> m2_93  [key=2, style=dotted];
m2_2524 -> m2_2525  [key=0, style=solid];
m2_2524 -> m2_1499  [key=2, style=dotted];
m2_2525 -> m2_2526  [key=0, style=solid];
m2_2525 -> m2_93  [key=2, style=dotted];
m2_2526 -> m2_2527  [key=0, style=solid];
m2_2526 -> m2_1499  [key=2, style=dotted];
m2_2527 -> m2_2528  [key=0, style=solid];
m2_2527 -> m2_93  [key=2, style=dotted];
m2_2528 -> m2_2529  [key=0, style=solid];
m2_2528 -> m2_1499  [key=2, style=dotted];
m2_2529 -> m2_2530  [key=0, style=solid];
m2_2529 -> m2_93  [key=2, style=dotted];
m2_2530 -> m2_2531  [key=0, style=solid];
m2_2530 -> m2_1499  [key=2, style=dotted];
m2_2531 -> m2_2532  [key=0, style=solid];
m2_2531 -> m2_93  [key=2, style=dotted];
m2_2532 -> m2_2533  [key=0, style=solid];
m2_2532 -> m2_1499  [key=2, style=dotted];
m2_2533 -> m2_2534  [key=0, style=solid];
m2_2533 -> m2_93  [key=2, style=dotted];
m2_2534 -> m2_2535  [key=0, style=solid];
m2_2534 -> m2_1499  [key=2, style=dotted];
m2_2535 -> m2_2536  [key=0, style=solid];
m2_2535 -> m2_93  [key=2, style=dotted];
m2_2536 -> m2_2537  [key=0, style=solid];
m2_2536 -> m2_1499  [key=2, style=dotted];
m2_2537 -> m2_2522  [key=0, style=bold, color=blue];
m2_3102 -> m2_3103  [key=0, style=solid];
m2_3103 -> m2_3104  [key=0, style=solid];
m2_3103 -> m2_3103  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_3104 -> m2_3105  [key=0, style=solid];
m2_3104 -> m2_93  [key=2, style=dotted];
m2_3104 -> m2_3106  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_3104 -> m2_3107  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_3104 -> m2_3108  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_3104 -> m2_3109  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_3105 -> m2_3106  [key=0, style=solid];
m2_3105 -> m2_1499  [key=2, style=dotted];
m2_3106 -> m2_3107  [key=0, style=solid];
m2_3106 -> m2_1499  [key=2, style=dotted];
m2_3107 -> m2_3108  [key=0, style=solid];
m2_3107 -> m2_1499  [key=2, style=dotted];
m2_3108 -> m2_3109  [key=0, style=solid];
m2_3108 -> m2_1499  [key=2, style=dotted];
m2_3109 -> m2_3110  [key=0, style=solid];
m2_3109 -> m2_1499  [key=2, style=dotted];
m2_3110 -> m2_3102  [key=0, style=bold, color=blue];
m2_2441 -> m2_2442  [key=0, style=solid];
m2_2442 -> m2_2443  [key=0, style=solid];
m2_2442 -> m2_2446  [key=2, style=dotted];
m2_2442 -> m2_2447  [key=2, style=dotted];
m2_2443 -> m2_2444  [key=0, style=solid];
m2_2443 -> m2_9  [key=2, style=dotted];
m2_2444 -> m2_2445  [key=0, style=solid];
m2_2444 -> m2_11  [key=2, style=dotted];
m2_2445 -> m2_2441  [key=0, style=bold, color=blue];
m2_339 -> m2_340  [key=0, style=solid];
m2_340 -> m2_341  [key=0, style=solid];
m2_340 -> m2_347  [key=2, style=dotted];
m2_340 -> m2_342  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_340 -> m2_343  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_340 -> m2_344  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_341 -> m2_342  [key=0, style=solid];
m2_341 -> m2_348  [key=2, style=dotted];
m2_342 -> m2_343  [key=0, style=solid];
m2_342 -> m2_348  [key=2, style=dotted];
m2_343 -> m2_344  [key=0, style=solid];
m2_343 -> m2_348  [key=2, style=dotted];
m2_344 -> m2_345  [key=0, style=solid];
m2_344 -> m2_9  [key=2, style=dotted];
m2_345 -> m2_346  [key=0, style=solid];
m2_345 -> m2_11  [key=2, style=dotted];
m2_346 -> m2_339  [key=0, style=bold, color=blue];
m2_197 -> m2_198  [key=0, style=solid];
m2_198 -> m2_199  [key=0, style=solid];
m2_198 -> m2_208  [key=2, style=dotted];
m2_198 -> m2_209  [key=2, style=dotted];
m2_198 -> m2_201  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m2_198 -> m2_205  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m2_199 -> m2_200  [key=0, style=solid];
m2_199 -> m2_53  [key=2, style=dotted];
m2_199 -> m2_201  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_199 -> m2_202  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_199 -> m2_203  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_201 -> m2_202  [key=0, style=solid];
m2_201 -> m2_55  [key=2, style=dotted];
m2_205 -> m2_206  [key=0, style=solid];
m2_205 -> m2_213  [key=2, style=dotted];
m2_205 -> m2_214  [key=2, style=dotted];
m2_200 -> m2_201  [key=0, style=solid];
m2_200 -> m2_54  [key=2, style=dotted];
m2_202 -> m2_203  [key=0, style=solid];
m2_202 -> m2_210  [key=2, style=dotted];
m2_203 -> m2_204  [key=0, style=solid];
m2_203 -> m2_211  [key=2, style=dotted];
m2_204 -> m2_205  [key=0, style=solid];
m2_204 -> m2_212  [key=2, style=dotted];
m2_204 -> m2_206  [key=1, style=dashed, color=darkseagreen4, label=expected];
m2_206 -> m2_207  [key=0, style=solid];
m2_206 -> m2_11  [key=2, style=dotted];
m2_207 -> m2_197  [key=0, style=bold, color=blue];
m2_766 -> m2_767  [key=0, style=solid];
m2_767 -> m2_768  [key=0, style=solid];
m2_768 -> m2_766  [key=0, style=bold, color=blue];
m2_2369 -> m2_2370  [key=0, style=solid];
m2_2370 -> m2_2371  [key=0, style=solid];
m2_2370 -> m2_2385  [key=2, style=dotted];
m2_2370 -> m2_2376  [key=1, style=dashed, color=darkseagreen4, label=test];
m2_2371 -> m2_2372  [key=0, style=solid];
m2_2371 -> m2_263  [key=2, style=dotted];
m2_2371 -> m2_2376  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_2371 -> m2_2381  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_2376 -> m2_2377  [key=0, style=solid];
m2_2376 -> m2_2387  [key=2, style=dotted];
m2_2372 -> m2_2373  [key=0, style=solid];
m2_2381 -> m2_2382  [key=0, style=solid];
m2_2381 -> m2_2389  [key=2, style=dotted];
m2_2381 -> m2_2383  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m2_2373 -> m2_2374  [key=0, style=solid];
m2_2374 -> m2_2375  [key=0, style=solid];
m2_2374 -> m2_53  [key=2, style=dotted];
m2_2374 -> m2_2378  [key=1, style=dashed, color=darkseagreen4, label=bsonStream];
m2_2375 -> m2_2376  [key=0, style=solid];
m2_2375 -> m2_2303  [key=2, style=dotted];
m2_2375 -> m2_2386  [key=2, style=dotted];
m2_2375 -> m2_2377  [key=1, style=dashed, color=darkseagreen4, label=bsonWriter];
m2_2378 -> m2_2379  [key=0, style=solid];
m2_2378 -> m2_56  [key=2, style=dotted];
m2_2377 -> m2_2378  [key=0, style=solid];
m2_2377 -> m2_2388  [key=2, style=dotted];
m2_2379 -> m2_2380  [key=0, style=solid];
m2_2379 -> m2_174  [key=2, style=dotted];
m2_2380 -> m2_2381  [key=0, style=solid];
m2_2380 -> m2_268  [key=2, style=dotted];
m2_2380 -> m2_211  [key=2, style=dotted];
m2_2382 -> m2_2383  [key=0, style=solid];
m2_2382 -> m2_11  [key=2, style=dotted];
m2_2383 -> m2_2384  [key=0, style=solid];
m2_2383 -> m2_2390  [key=2, style=dotted];
m2_2384 -> m2_2369  [key=0, style=bold, color=blue];
m2_1242 -> m2_1243  [key=0, style=solid];
m2_1243 -> m2_1244  [key=0, style=solid];
m2_1243 -> m2_1245  [key=2, style=dotted];
m2_1244 -> m2_1242  [key=0, style=bold, color=blue];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_93  [key=2, style=dotted];
m2_96 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="ref Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_11  [key=2, style=dotted];
m2_97 -> m2_19  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_41  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_52  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_57  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_65  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_70  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_72  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_68  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_74  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_85  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_94  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_49  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_78  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_97 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_98 -> m2_94  [key=0, style=bold, color=blue];
m2_98 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="ref Newtonsoft.Json.Utilities.DateTimeParser"];
m2_93 -> m2_29  [key=0, style=bold, color=blue];
m2_2664 -> m2_2665  [key=0, style=solid];
m2_2665 -> m2_2666  [key=0, style=solid];
m2_2665 -> m2_2668  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2665 -> m2_2022  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2666 -> m2_2667  [key=0, style=solid];
m2_2666 -> m2_208  [key=2, style=dotted];
m2_2666 -> m2_2677  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_2666 -> m2_2670  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_2666 -> m2_2671  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_2666 -> m2_2672  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_2666 -> m2_2673  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_2666 -> m2_2674  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_2668 -> m2_2669  [key=0, style=solid];
m2_2668 -> m2_213  [key=2, style=dotted];
m2_2668 -> m2_461  [key=2, style=dotted];
m2_2667 -> m2_2668  [key=0, style=solid];
m2_2667 -> m2_2677  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m2_2667 -> m2_2678  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m2_2667 -> m2_2667  [key=3, color=darkorchid, style=bold, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error"];
m2_2670 -> m2_2671  [key=0, style=solid];
m2_2670 -> m2_11  [key=2, style=dotted];
m2_2671 -> m2_2672  [key=0, style=solid];
m2_2671 -> m2_11  [key=2, style=dotted];
m2_2672 -> m2_2673  [key=0, style=solid];
m2_2672 -> m2_11  [key=2, style=dotted];
m2_2673 -> m2_2674  [key=0, style=solid];
m2_2673 -> m2_11  [key=2, style=dotted];
m2_2674 -> m2_2675  [key=0, style=solid];
m2_2674 -> m2_11  [key=2, style=dotted];
m2_2669 -> m2_2670  [key=0, style=solid];
m2_2669 -> m2_674  [key=2, style=dotted];
m2_2675 -> m2_2664  [key=0, style=bold, color=blue];
m2_41 -> m2_41  [key=1, style=dashed, color=green, label="ref int"];
m2_41 -> m2_42  [key=0, style=solid, color=green];
m2_41 -> m2_46  [key=0, style=solid, color=green];
m2_41 -> m2_51  [key=1, style=dashed, color=green, label="ref int"];
m2_40 -> m2_41  [key=0, style=solid, color=green];
m2_40 -> m2_40  [key=3, color=darkorchid, style=bold, label="Local variable int numberOfDigits"];
m2_40 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m2_40 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label=numberOfDigits];
m2_40 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label=numberOfDigits];
m2_40 -> m2_49  [key=1, style=dashed, color=darkseagreen4, label=numberOfDigits];
m2_40 -> m2_52  [key=2, style=dotted];
m2_40 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m2_45 -> m2_41  [key=0, style=solid, color=green];
m2_45 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label=numberOfDigits];
m2_45 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label=numberOfDigits];
m2_45 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label=numberOfDigits];
m2_45 -> m2_49  [key=1, style=dashed, color=darkseagreen4, label=numberOfDigits];
m2_45 -> m2_55  [key=2, style=dotted];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label=digit];
m2_42 -> m2_9  [key=2, style=dotted];
m2_42 -> m2_48  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_50  [key=0, style=solid];
m2_46 -> m2_56  [key=2, style=dotted];
m2_38 -> m2_24  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_50  [key=0, style=solid];
m2_38 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_44 -> m2_54  [key=2, style=dotted];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.DateTimeParser"];
m2_39 -> m2_29  [key=2, style=dotted];
m2_39 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m2_39 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m2_47 -> m2_49  [key=0, style=solid];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_57  [key=2, style=dotted];
m2_43 -> m2_46  [key=0, style=solid];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_53  [key=2, style=dotted];
m2_43 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_11  [key=2, style=dotted];
m2_48 -> m2_51  [key=0, style=solid];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_10  [key=2, style=dotted];
m2_51 -> m2_33  [key=0, style=bold, color=blue];
m2_51 -> m2_38  [key=0, style=bold, color=blue];
m2_2191 -> m2_2192  [key=0, style=solid];
m2_2192 -> m2_2193  [key=0, style=solid];
m2_2192 -> m2_1536  [key=2, style=dotted];
m2_2193 -> m2_2191  [key=0, style=bold, color=blue];
m2_451 -> m2_452  [key=0, style=solid];
m2_452 -> m2_453  [key=0, style=solid];
m2_452 -> m2_440  [key=2, style=dotted];
m2_453 -> m2_454  [key=0, style=solid];
m2_453 -> m2_441  [key=2, style=dotted];
m2_454 -> m2_455  [key=0, style=solid];
m2_454 -> m2_213  [key=2, style=dotted];
m2_454 -> m2_214  [key=2, style=dotted];
m2_454 -> m2_456  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_454 -> m2_459  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_455 -> m2_456  [key=0, style=solid];
m2_455 -> m2_11  [key=2, style=dotted];
m2_456 -> m2_457  [key=0, style=solid];
m2_456 -> m2_140  [key=2, style=dotted];
m2_456 -> m2_458  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_457 -> m2_451  [key=0, style=bold, color=blue];
m2_3083 -> m2_3084  [key=0, style=solid];
m2_3084 -> m2_3085  [key=0, style=solid];
m2_3084 -> m2_3089  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3084 -> m2_3084  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_3085 -> m2_3086  [key=0, style=solid];
m2_3085 -> m2_93  [key=2, style=dotted];
m2_3085 -> m2_3087  [key=1, style=dashed, color=darkseagreen4, label=floats];
m2_3085 -> m2_3088  [key=1, style=dashed, color=darkseagreen4, label=floats];
m2_3089 -> m2_3090  [key=0, style=solid];
m2_3089 -> m2_93  [key=2, style=dotted];
m2_3089 -> m2_3091  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m2_3089 -> m2_3092  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m2_3086 -> m2_3087  [key=0, style=solid];
m2_3086 -> m2_11  [key=2, style=dotted];
m2_3087 -> m2_3088  [key=0, style=solid];
m2_3087 -> m2_11  [key=2, style=dotted];
m2_3088 -> m2_3089  [key=0, style=solid];
m2_3088 -> m2_11  [key=2, style=dotted];
m2_3090 -> m2_3091  [key=0, style=solid];
m2_3090 -> m2_11  [key=2, style=dotted];
m2_3091 -> m2_3092  [key=0, style=solid];
m2_3091 -> m2_11  [key=2, style=dotted];
m2_3092 -> m2_3093  [key=0, style=solid];
m2_3092 -> m2_11  [key=2, style=dotted];
m2_3093 -> m2_3083  [key=0, style=bold, color=blue];
m2_1268 -> m2_1269  [key=0, style=solid];
m2_1269 -> m2_1270  [key=0, style=solid];
m2_1269 -> m2_1271  [key=2, style=dotted];
m2_1270 -> m2_1268  [key=0, style=bold, color=blue];
m2_2062 -> m2_2063  [key=0, style=solid];
m2_2063 -> m2_2064  [key=0, style=solid];
m2_2063 -> m2_2067  [key=2, style=dotted];
m2_2064 -> m2_2065  [key=0, style=solid];
m2_2064 -> m2_338  [key=2, style=dotted];
m2_2065 -> m2_2066  [key=0, style=solid];
m2_2065 -> m2_11  [key=2, style=dotted];
m2_2066 -> m2_2062  [key=0, style=bold, color=blue];
m2_3184 -> m2_3185  [key=0, style=solid];
m2_3185 -> m2_3186  [key=0, style=solid];
m2_3185 -> m2_79  [key=2, style=dotted];
m2_3185 -> m2_3187  [key=2, style=dotted];
m2_3185 -> m2_2821  [key=2, style=dotted];
m2_3186 -> m2_3184  [key=0, style=bold, color=blue];
m2_961 -> m2_962  [key=0, style=solid];
m2_962 -> m2_963  [key=0, style=solid];
m2_962 -> m2_966  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_962 -> m2_941  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_963 -> m2_964  [key=0, style=solid];
m2_963 -> m2_140  [key=2, style=dotted];
m2_963 -> m2_965  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_964 -> m2_961  [key=0, style=bold, color=blue];
m2_2592 -> m2_2593  [key=0, style=solid];
m2_2593 -> m2_2594  [key=0, style=solid];
m2_2593 -> m2_213  [key=2, style=dotted];
m2_2593 -> m2_461  [key=2, style=dotted];
m2_2593 -> m2_2595  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_2593 -> m2_2596  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_2593 -> m2_2597  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_2594 -> m2_2595  [key=0, style=solid];
m2_2594 -> m2_2589  [key=2, style=dotted];
m2_2594 -> m2_2590  [key=2, style=dotted];
m2_2594 -> m2_11  [key=2, style=dotted];
m2_2595 -> m2_2596  [key=0, style=solid];
m2_2595 -> m2_2591  [key=2, style=dotted];
m2_2595 -> m2_11  [key=2, style=dotted];
m2_2596 -> m2_2597  [key=0, style=solid];
m2_2596 -> m2_11  [key=2, style=dotted];
m2_2597 -> m2_2598  [key=0, style=solid];
m2_2597 -> m2_11  [key=2, style=dotted];
m2_2598 -> m2_2599  [key=0, style=solid];
m2_2598 -> m2_93  [key=2, style=dotted];
m2_2598 -> m2_2600  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2598 -> m2_2601  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2598 -> m2_2602  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2599 -> m2_2600  [key=0, style=solid];
m2_2599 -> m2_11  [key=2, style=dotted];
m2_2600 -> m2_2601  [key=0, style=solid];
m2_2600 -> m2_11  [key=2, style=dotted];
m2_2601 -> m2_2602  [key=0, style=solid];
m2_2601 -> m2_11  [key=2, style=dotted];
m2_2602 -> m2_2603  [key=0, style=solid];
m2_2602 -> m2_11  [key=2, style=dotted];
m2_2603 -> m2_2592  [key=0, style=bold, color=blue];
m2_899 -> m2_900  [key=0, style=solid];
m2_900 -> m2_901  [key=0, style=solid];
m2_900 -> m2_900  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_901 -> m2_902  [key=0, style=solid];
m2_901 -> m2_93  [key=2, style=dotted];
m2_901 -> m2_903  [key=1, style=dashed, color=darkseagreen4, label=products];
m2_901 -> m2_905  [key=1, style=dashed, color=darkseagreen4, label=products];
m2_901 -> m2_906  [key=1, style=dashed, color=darkseagreen4, label=products];
m2_902 -> m2_903  [key=0, style=solid];
m2_902 -> m2_889  [key=2, style=dotted];
m2_903 -> m2_904  [key=0, style=solid];
m2_905 -> m2_906  [key=0, style=solid];
m2_905 -> m2_11  [key=2, style=dotted];
m2_906 -> m2_907  [key=0, style=solid];
m2_906 -> m2_11  [key=2, style=dotted];
m2_904 -> m2_905  [key=0, style=solid];
m2_904 -> m2_12  [key=2, style=dotted];
m2_907 -> m2_899  [key=0, style=bold, color=blue];
m2_3031 -> m2_3032  [key=0, style=solid];
m2_3032 -> m2_3033  [key=0, style=solid];
m2_3032 -> m2_2758  [key=2, style=dotted];
m2_3033 -> m2_3034  [key=0, style=solid];
m2_3034 -> m2_3035  [key=0, style=solid];
m2_3034 -> m2_208  [key=2, style=dotted];
m2_3035 -> m2_3036  [key=0, style=solid];
m2_3035 -> m2_213  [key=2, style=dotted];
m2_3035 -> m2_214  [key=2, style=dotted];
m2_3035 -> m2_3037  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3036 -> m2_3037  [key=0, style=solid];
m2_3036 -> m2_11  [key=2, style=dotted];
m2_3037 -> m2_3038  [key=0, style=solid];
m2_3037 -> m2_213  [key=2, style=dotted];
m2_3037 -> m2_3041  [key=2, style=dotted];
m2_3037 -> m2_3039  [key=1, style=dashed, color=darkseagreen4, label=values2];
m2_3038 -> m2_3039  [key=0, style=solid];
m2_3038 -> m2_11  [key=2, style=dotted];
m2_3039 -> m2_3040  [key=0, style=solid];
m2_3039 -> m2_11  [key=2, style=dotted];
m2_3040 -> m2_3031  [key=0, style=bold, color=blue];
m2_1533 -> m2_1534  [key=0, style=solid];
m2_1534 -> m2_1535  [key=0, style=solid];
m2_1534 -> m2_1536  [key=2, style=dotted];
m2_1535 -> m2_1533  [key=0, style=bold, color=blue];
m2_2950 -> m2_2951  [key=0, style=solid];
m2_2951 -> m2_2952  [key=0, style=solid];
m2_2951 -> m2_2955  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2951 -> m2_2951  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2952 -> m2_2953  [key=0, style=solid];
m2_2952 -> m2_140  [key=2, style=dotted];
m2_2952 -> m2_2954  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2953 -> m2_2950  [key=0, style=bold, color=blue];
m2_431 -> m2_432  [key=0, style=solid];
m2_432 -> m2_433  [key=0, style=solid];
m2_432 -> m2_440  [key=2, style=dotted];
m2_432 -> m2_437  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m2_432 -> m2_438  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m2_433 -> m2_434  [key=0, style=solid];
m2_433 -> m2_441  [key=2, style=dotted];
m2_437 -> m2_438  [key=0, style=solid];
m2_437 -> m2_11  [key=2, style=dotted];
m2_438 -> m2_439  [key=0, style=solid];
m2_438 -> m2_11  [key=2, style=dotted];
m2_434 -> m2_435  [key=0, style=solid];
m2_434 -> m2_9  [key=2, style=dotted];
m2_434 -> m2_436  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_435 -> m2_436  [key=0, style=solid];
m2_435 -> m2_11  [key=2, style=dotted];
m2_436 -> m2_437  [key=0, style=solid];
m2_436 -> m2_93  [key=2, style=dotted];
m2_436 -> m2_438  [key=1, style=dashed, color=darkseagreen4, label=m2];
m2_439 -> m2_431  [key=0, style=bold, color=blue];
m2_1246 -> m2_1247  [key=0, style=solid];
m2_1247 -> m2_1248  [key=0, style=solid];
m2_1247 -> m2_1249  [key=2, style=dotted];
m2_1248 -> m2_1246  [key=0, style=bold, color=blue];
m2_1524 -> m2_1525  [key=0, style=solid];
m2_1524 -> m2_1527  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_1524 -> m2_1528  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_1525 -> m2_1526  [key=0, style=solid];
m2_1525 -> m2_1527  [key=1, style=dashed, color=darkseagreen4, label=p];
m2_1527 -> m2_1529  [key=0, style=solid];
m2_1527 -> m2_1530  [key=2, style=dotted];
m2_1527 -> m2_1531  [key=2, style=dotted];
m2_1528 -> m2_1529  [key=0, style=solid];
m2_1528 -> m2_1532  [key=2, style=dotted];
m2_1526 -> m2_1527  [key=0, style=solid];
m2_1526 -> m2_1528  [key=0, style=solid];
m2_1529 -> m2_1524  [key=0, style=bold, color=blue];
m2_940 -> m2_941  [key=0, style=solid];
m2_941 -> m2_942  [key=0, style=solid];
m2_941 -> m2_945  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_941 -> m2_941  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_942 -> m2_943  [key=0, style=solid];
m2_942 -> m2_140  [key=2, style=dotted];
m2_942 -> m2_944  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_943 -> m2_940  [key=0, style=bold, color=blue];
m2_2680 -> m2_2681  [key=0, style=solid];
m2_2681 -> m2_2682  [key=0, style=solid];
m2_2681 -> m2_2684  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2681 -> m2_2681  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2682 -> m2_2683  [key=0, style=solid];
m2_2682 -> m2_208  [key=2, style=dotted];
m2_2682 -> m2_2692  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_2682 -> m2_2686  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_2682 -> m2_2687  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_2682 -> m2_2688  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_2682 -> m2_2689  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_2684 -> m2_2685  [key=0, style=solid];
m2_2684 -> m2_213  [key=2, style=dotted];
m2_2684 -> m2_461  [key=2, style=dotted];
m2_2683 -> m2_2684  [key=0, style=solid];
m2_2683 -> m2_2692  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m2_2683 -> m2_2693  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m2_2683 -> m2_2683  [key=3, color=darkorchid, style=bold, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error"];
m2_2686 -> m2_2687  [key=0, style=solid];
m2_2686 -> m2_11  [key=2, style=dotted];
m2_2687 -> m2_2688  [key=0, style=solid];
m2_2687 -> m2_11  [key=2, style=dotted];
m2_2688 -> m2_2689  [key=0, style=solid];
m2_2688 -> m2_11  [key=2, style=dotted];
m2_2689 -> m2_2690  [key=0, style=solid];
m2_2689 -> m2_11  [key=2, style=dotted];
m2_2685 -> m2_2686  [key=0, style=solid];
m2_2685 -> m2_674  [key=2, style=dotted];
m2_2690 -> m2_2680  [key=0, style=bold, color=blue];
m2_2728 -> m2_2729  [key=0, style=solid];
m2_2729 -> m2_2730  [key=0, style=solid];
m2_2729 -> m2_2734  [key=2, style=dotted];
m2_2729 -> m2_2731  [key=1, style=dashed, color=darkseagreen4, label=testObj];
m2_2730 -> m2_2731  [key=0, style=solid];
m2_2730 -> m2_2735  [key=2, style=dotted];
m2_2730 -> m2_2732  [key=1, style=dashed, color=darkseagreen4, label=objDeserialized];
m2_2731 -> m2_2732  [key=0, style=solid];
m2_2731 -> m2_11  [key=2, style=dotted];
m2_2732 -> m2_2733  [key=0, style=solid];
m2_2732 -> m2_11  [key=2, style=dotted];
m2_2733 -> m2_2728  [key=0, style=bold, color=blue];
m2_1140 -> m2_1141  [key=0, style=solid];
m2_1141 -> m2_1142  [key=0, style=solid];
m2_1141 -> m2_52  [key=2, style=dotted];
m2_1142 -> m2_1143  [key=0, style=solid];
m2_1142 -> m2_208  [key=2, style=dotted];
m2_1143 -> m2_1140  [key=0, style=bold, color=blue];
m2_2052 -> m2_2053  [key=0, style=solid];
m2_2053 -> m2_2054  [key=0, style=solid];
m2_2053 -> m2_2061  [key=2, style=dotted];
m2_2053 -> m2_208  [key=2, style=dotted];
m2_2054 -> m2_2055  [key=0, style=solid];
m2_2054 -> m2_338  [key=2, style=dotted];
m2_2054 -> m2_2056  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2055 -> m2_2056  [key=0, style=solid];
m2_2055 -> m2_11  [key=2, style=dotted];
m2_2056 -> m2_2057  [key=0, style=solid];
m2_2056 -> m2_93  [key=2, style=dotted];
m2_2056 -> m2_2058  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2056 -> m2_2059  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2057 -> m2_2058  [key=0, style=solid];
m2_2057 -> m2_798  [key=2, style=dotted];
m2_2057 -> m2_11  [key=2, style=dotted];
m2_2058 -> m2_2059  [key=0, style=solid];
m2_2058 -> m2_798  [key=2, style=dotted];
m2_2058 -> m2_11  [key=2, style=dotted];
m2_2059 -> m2_2060  [key=0, style=solid];
m2_2059 -> m2_798  [key=2, style=dotted];
m2_2059 -> m2_11  [key=2, style=dotted];
m2_2060 -> m2_2052  [key=0, style=bold, color=blue];
m2_1405 -> m2_1406  [key=0, style=solid];
m2_1405 -> m2_1407  [key=1, style=dashed, color=darkseagreen4, label=TValue];
m2_1406 -> m2_1407  [key=0, style=solid];
m2_1407 -> m2_1408  [key=0, style=solid];
m2_1408 -> m2_1405  [key=0, style=bold, color=blue];
m2_2448 -> m2_2449  [key=0, style=solid];
m2_2449 -> m2_2450  [key=0, style=solid];
m2_2449 -> m2_2449  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2450 -> m2_2451  [key=0, style=solid];
m2_2450 -> m2_93  [key=2, style=dotted];
m2_2450 -> m2_2452  [key=1, style=dashed, color=darkseagreen4, label=w];
m2_2450 -> m2_2453  [key=1, style=dashed, color=darkseagreen4, label=w];
m2_2451 -> m2_2452  [key=0, style=solid];
m2_2451 -> m2_2447  [key=2, style=dotted];
m2_2451 -> m2_11  [key=2, style=dotted];
m2_2452 -> m2_2453  [key=0, style=solid];
m2_2452 -> m2_2447  [key=2, style=dotted];
m2_2452 -> m2_11  [key=2, style=dotted];
m2_2453 -> m2_2454  [key=0, style=solid];
m2_2453 -> m2_11  [key=2, style=dotted];
m2_2454 -> m2_2448  [key=0, style=bold, color=blue];
m2_3153 -> m2_3154  [key=0, style=solid];
m2_3154 -> m2_3153  [key=0, style=bold, color=blue];
m2_442 -> m2_443  [key=0, style=solid];
m2_443 -> m2_444  [key=0, style=solid];
m2_443 -> m2_440  [key=2, style=dotted];
m2_443 -> m2_448  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m2_443 -> m2_449  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m2_444 -> m2_445  [key=0, style=solid];
m2_444 -> m2_441  [key=2, style=dotted];
m2_448 -> m2_449  [key=0, style=solid];
m2_448 -> m2_11  [key=2, style=dotted];
m2_449 -> m2_450  [key=0, style=solid];
m2_449 -> m2_11  [key=2, style=dotted];
m2_445 -> m2_446  [key=0, style=solid];
m2_445 -> m2_213  [key=2, style=dotted];
m2_445 -> m2_214  [key=2, style=dotted];
m2_445 -> m2_447  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_446 -> m2_447  [key=0, style=solid];
m2_446 -> m2_11  [key=2, style=dotted];
m2_447 -> m2_448  [key=0, style=solid];
m2_447 -> m2_93  [key=2, style=dotted];
m2_447 -> m2_449  [key=1, style=dashed, color=darkseagreen4, label=m2];
m2_450 -> m2_442  [key=0, style=bold, color=blue];
m2_2964 -> m2_2965  [key=0, style=solid];
m2_2965 -> m2_2966  [key=0, style=solid];
m2_2965 -> m2_2969  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2965 -> m2_2965  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2966 -> m2_2967  [key=0, style=solid];
m2_2966 -> m2_140  [key=2, style=dotted];
m2_2966 -> m2_2968  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2967 -> m2_2964  [key=0, style=bold, color=blue];
m2_2515 -> m2_2516  [key=0, style=solid];
m2_2516 -> m2_2517  [key=0, style=solid];
m2_2516 -> m2_213  [key=2, style=dotted];
m2_2516 -> m2_2494  [key=2, style=dotted];
m2_2516 -> m2_2519  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_2517 -> m2_2518  [key=0, style=solid];
m2_2517 -> m2_268  [key=2, style=dotted];
m2_2517 -> m2_269  [key=2, style=dotted];
m2_2517 -> m2_2495  [key=2, style=dotted];
m2_2517 -> m2_2520  [key=1, style=dashed, color=darkseagreen4, label=dict];
m2_2519 -> m2_2520  [key=0, style=solid];
m2_2519 -> m2_2495  [key=2, style=dotted];
m2_2518 -> m2_2519  [key=0, style=solid];
m2_2518 -> m2_268  [key=2, style=dotted];
m2_2518 -> m2_269  [key=2, style=dotted];
m2_2520 -> m2_2521  [key=0, style=solid];
m2_2520 -> m2_11  [key=2, style=dotted];
m2_2521 -> m2_2515  [key=0, style=bold, color=blue];
m2_2695 -> m2_2696  [key=0, style=solid];
m2_2696 -> m2_2697  [key=0, style=solid];
m2_2696 -> m2_208  [key=2, style=dotted];
m2_2696 -> m2_2707  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_2696 -> m2_2700  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_2696 -> m2_2701  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_2696 -> m2_2702  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_2696 -> m2_2703  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_2697 -> m2_2698  [key=0, style=solid];
m2_2697 -> m2_2707  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m2_2697 -> m2_2708  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m2_2697 -> m2_2697  [key=3, color=darkorchid, style=bold, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error"];
m2_2700 -> m2_2701  [key=0, style=solid];
m2_2700 -> m2_11  [key=2, style=dotted];
m2_2701 -> m2_2702  [key=0, style=solid];
m2_2701 -> m2_11  [key=2, style=dotted];
m2_2702 -> m2_2703  [key=0, style=solid];
m2_2702 -> m2_11  [key=2, style=dotted];
m2_2703 -> m2_2704  [key=0, style=solid];
m2_2703 -> m2_11  [key=2, style=dotted];
m2_2698 -> m2_2699  [key=0, style=solid];
m2_2698 -> m2_2705  [key=2, style=dotted];
m2_2698 -> m2_213  [key=2, style=dotted];
m2_2698 -> m2_214  [key=2, style=dotted];
m2_2699 -> m2_2700  [key=0, style=solid];
m2_2699 -> m2_11  [key=2, style=dotted];
m2_2704 -> m2_2695  [key=0, style=bold, color=blue];
m2_280 -> m2_281  [key=0, style=solid];
m2_281 -> m2_282  [key=0, style=solid];
m2_281 -> m2_281  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_282 -> m2_283  [key=0, style=solid];
m2_282 -> m2_93  [key=2, style=dotted];
m2_282 -> m2_284  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_282 -> m2_285  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_282 -> m2_286  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_282 -> m2_287  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_282 -> m2_288  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_283 -> m2_284  [key=0, style=solid];
m2_283 -> m2_11  [key=2, style=dotted];
m2_284 -> m2_285  [key=0, style=solid];
m2_284 -> m2_11  [key=2, style=dotted];
m2_285 -> m2_286  [key=0, style=solid];
m2_285 -> m2_11  [key=2, style=dotted];
m2_286 -> m2_287  [key=0, style=solid];
m2_286 -> m2_11  [key=2, style=dotted];
m2_287 -> m2_288  [key=0, style=solid];
m2_287 -> m2_11  [key=2, style=dotted];
m2_288 -> m2_289  [key=0, style=solid];
m2_288 -> m2_11  [key=2, style=dotted];
m2_289 -> m2_280  [key=0, style=bold, color=blue];
m2_2334 -> m2_2335  [key=0, style=solid];
m2_2335 -> m2_2336  [key=0, style=solid];
m2_2335 -> m2_2335  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2336 -> m2_2337  [key=0, style=solid];
m2_2336 -> m2_93  [key=2, style=dotted];
m2_2336 -> m2_2338  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_2336 -> m2_2339  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_2336 -> m2_2340  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_2336 -> m2_2341  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_2336 -> m2_2342  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_2336 -> m2_2343  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_2336 -> m2_2344  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_2336 -> m2_2345  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_2336 -> m2_2346  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_2337 -> m2_2338  [key=0, style=solid];
m2_2337 -> m2_11  [key=2, style=dotted];
m2_2338 -> m2_2339  [key=0, style=solid];
m2_2338 -> m2_11  [key=2, style=dotted];
m2_2339 -> m2_2340  [key=0, style=solid];
m2_2339 -> m2_11  [key=2, style=dotted];
m2_2340 -> m2_2341  [key=0, style=solid];
m2_2340 -> m2_11  [key=2, style=dotted];
m2_2341 -> m2_2342  [key=0, style=solid];
m2_2341 -> m2_11  [key=2, style=dotted];
m2_2342 -> m2_2343  [key=0, style=solid];
m2_2342 -> m2_11  [key=2, style=dotted];
m2_2343 -> m2_2344  [key=0, style=solid];
m2_2343 -> m2_11  [key=2, style=dotted];
m2_2344 -> m2_2345  [key=0, style=solid];
m2_2344 -> m2_11  [key=2, style=dotted];
m2_2345 -> m2_2346  [key=0, style=solid];
m2_2345 -> m2_11  [key=2, style=dotted];
m2_2346 -> m2_2347  [key=0, style=solid];
m2_2346 -> m2_11  [key=2, style=dotted];
m2_2347 -> m2_2334  [key=0, style=bold, color=blue];
m2_2282 -> m2_2283  [key=0, style=solid];
m2_2283 -> m2_2284  [key=0, style=solid];
m2_2283 -> m2_52  [key=2, style=dotted];
m2_2284 -> m2_2285  [key=0, style=solid];
m2_2284 -> m2_338  [key=2, style=dotted];
m2_2284 -> m2_2286  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2285 -> m2_2286  [key=0, style=solid];
m2_2285 -> m2_11  [key=2, style=dotted];
m2_2286 -> m2_2287  [key=0, style=solid];
m2_2286 -> m2_93  [key=2, style=dotted];
m2_2286 -> m2_2288  [key=1, style=dashed, color=darkseagreen4, label=v2];
m2_2286 -> m2_2289  [key=1, style=dashed, color=darkseagreen4, label=v2];
m2_2286 -> m2_2290  [key=1, style=dashed, color=darkseagreen4, label=v2];
m2_2287 -> m2_2288  [key=0, style=solid];
m2_2287 -> m2_11  [key=2, style=dotted];
m2_2288 -> m2_2289  [key=0, style=solid];
m2_2288 -> m2_11  [key=2, style=dotted];
m2_2289 -> m2_2290  [key=0, style=solid];
m2_2289 -> m2_11  [key=2, style=dotted];
m2_2290 -> m2_2291  [key=0, style=solid];
m2_2290 -> m2_11  [key=2, style=dotted];
m2_2291 -> m2_2282  [key=0, style=bold, color=blue];
m2_2017 -> m2_2018  [key=0, style=solid];
m2_2018 -> m2_2019  [key=0, style=solid];
m2_2019 -> m2_2020  [key=0, style=solid];
m2_2020 -> m2_2017  [key=0, style=bold, color=blue];
m2_228 -> m2_229  [key=0, style=solid];
m2_229 -> m2_230  [key=0, style=solid];
m2_229 -> m2_52  [key=2, style=dotted];
m2_229 -> m2_231  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_229 -> m2_232  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_229 -> m2_235  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_230 -> m2_231  [key=0, style=solid];
m2_230 -> m2_237  [key=2, style=dotted];
m2_231 -> m2_232  [key=0, style=solid];
m2_231 -> m2_237  [key=2, style=dotted];
m2_232 -> m2_233  [key=0, style=solid];
m2_232 -> m2_9  [key=2, style=dotted];
m2_232 -> m2_234  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_235 -> m2_236  [key=0, style=solid];
m2_235 -> m2_11  [key=2, style=dotted];
m2_233 -> m2_234  [key=0, style=solid];
m2_233 -> m2_11  [key=2, style=dotted];
m2_234 -> m2_235  [key=0, style=solid];
m2_234 -> m2_93  [key=2, style=dotted];
m2_236 -> m2_228  [key=0, style=bold, color=blue];
m2_1551 -> m2_1552  [key=0, style=solid];
m2_1552 -> m2_1553  [key=0, style=solid];
m2_1552 -> m2_1540  [key=2, style=dotted];
m2_1553 -> m2_1551  [key=0, style=bold, color=blue];
m2_1126 -> m2_1127  [key=0, style=solid];
m2_1127 -> m2_1128  [key=0, style=solid];
m2_1127 -> m2_1139  [key=2, style=dotted];
m2_1127 -> m2_1134  [key=1, style=dashed, color=darkseagreen4, label=personPropertyClass];
m2_1128 -> m2_1129  [key=0, style=solid];
m2_1128 -> m2_1130  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m2_1128 -> m2_1131  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m2_1128 -> m2_1132  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m2_1128 -> m2_1133  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m2_1128 -> m2_1137  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m2_1134 -> m2_1135  [key=0, style=solid];
m2_1134 -> m2_338  [key=2, style=dotted];
m2_1134 -> m2_1136  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1129 -> m2_1130  [key=0, style=solid];
m2_1129 -> m2_209  [key=2, style=dotted];
m2_1130 -> m2_1131  [key=0, style=solid];
m2_1131 -> m2_1132  [key=0, style=solid];
m2_1132 -> m2_1133  [key=0, style=solid];
m2_1132 -> m2_209  [key=2, style=dotted];
m2_1133 -> m2_1134  [key=0, style=solid];
m2_1137 -> m2_1138  [key=0, style=solid];
m2_1137 -> m2_11  [key=2, style=dotted];
m2_1135 -> m2_1136  [key=0, style=solid];
m2_1135 -> m2_11  [key=2, style=dotted];
m2_1136 -> m2_1137  [key=0, style=solid];
m2_1136 -> m2_93  [key=2, style=dotted];
m2_1138 -> m2_1126  [key=0, style=bold, color=blue];
m2_500 -> m2_501  [key=0, style=solid];
m2_501 -> m2_502  [key=0, style=solid];
m2_501 -> m2_140  [key=2, style=dotted];
m2_501 -> m2_503  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_502 -> m2_500  [key=0, style=bold, color=blue];
m2_115 -> m2_116  [key=0, style=solid];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_116  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_114  [key=2, style=dotted];
m2_117 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_123  [key=2, style=dotted];
m2_118 -> m2_124  [key=2, style=dotted];
m2_118 -> m2_11  [key=2, style=dotted];
m2_119 -> m2_120  [key=0, style=solid];
m2_120 -> m2_121  [key=0, style=solid];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_125  [key=2, style=dotted];
m2_121 -> m2_124  [key=2, style=dotted];
m2_121 -> m2_11  [key=2, style=dotted];
m2_122 -> m2_115  [key=0, style=bold, color=blue];
m2_857 -> m2_858  [key=0, style=solid];
m2_858 -> m2_859  [key=0, style=solid];
m2_858 -> m2_858  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_859 -> m2_860  [key=0, style=solid];
m2_859 -> m2_93  [key=2, style=dotted];
m2_859 -> m2_861  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_859 -> m2_862  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_859 -> m2_863  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_859 -> m2_864  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_860 -> m2_861  [key=0, style=solid];
m2_860 -> m2_11  [key=2, style=dotted];
m2_861 -> m2_862  [key=0, style=solid];
m2_861 -> m2_11  [key=2, style=dotted];
m2_862 -> m2_863  [key=0, style=solid];
m2_862 -> m2_11  [key=2, style=dotted];
m2_863 -> m2_864  [key=0, style=solid];
m2_863 -> m2_11  [key=2, style=dotted];
m2_864 -> m2_865  [key=0, style=solid];
m2_864 -> m2_11  [key=2, style=dotted];
m2_865 -> m2_857  [key=0, style=bold, color=blue];
m2_1644 -> m2_1645  [key=0, style=solid];
m2_1645 -> m2_1646  [key=0, style=solid];
m2_1646 -> m2_1644  [key=0, style=bold, color=blue];
m2_3188 -> m2_3189  [key=0, style=solid];
m2_3188 -> m2_277  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m2_3189 -> m2_3190  [key=0, style=solid];
m2_3189 -> m2_3192  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_3190 -> m2_3191  [key=0, style=solid];
m2_3190 -> m2_3192  [key=0, style=solid];
m2_3192 -> m2_3193  [key=0, style=solid];
m2_3192 -> m2_3194  [key=2, style=dotted];
m2_3192 -> m2_3195  [key=2, style=dotted];
m2_3191 -> m2_3193  [key=0, style=solid];
m2_3193 -> m2_3188  [key=0, style=bold, color=blue];
m2_695 -> m2_696  [key=0, style=solid];
m2_696 -> m2_697  [key=0, style=solid];
m2_696 -> m2_694  [key=2, style=dotted];
m2_696 -> m2_698  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_697 -> m2_698  [key=0, style=solid];
m2_698 -> m2_699  [key=0, style=solid];
m2_698 -> m2_213  [key=2, style=dotted];
m2_698 -> m2_214  [key=2, style=dotted];
m2_698 -> m2_700  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_699 -> m2_700  [key=0, style=solid];
m2_699 -> m2_11  [key=2, style=dotted];
m2_700 -> m2_701  [key=0, style=solid];
m2_700 -> m2_213  [key=2, style=dotted];
m2_700 -> m2_461  [key=2, style=dotted];
m2_701 -> m2_702  [key=0, style=solid];
m2_701 -> m2_213  [key=2, style=dotted];
m2_701 -> m2_214  [key=2, style=dotted];
m2_702 -> m2_703  [key=0, style=solid];
m2_702 -> m2_11  [key=2, style=dotted];
m2_703 -> m2_695  [key=0, style=bold, color=blue];
m2_2572 -> m2_2573  [key=0, style=solid];
m2_2573 -> m2_2574  [key=0, style=solid];
m2_2573 -> m2_2573  [key=3, color=darkorchid, style=bold, label="Local variable string jsonIsoText"];
m2_2574 -> m2_2575  [key=0, style=solid];
m2_2574 -> m2_659  [key=2, style=dotted];
m2_2574 -> m2_430  [key=2, style=dotted];
m2_2575 -> m2_2576  [key=0, style=solid];
m2_2575 -> m2_11  [key=2, style=dotted];
m2_2576 -> m2_2572  [key=0, style=bold, color=blue];
m2_2923 -> m2_2924  [key=0, style=solid];
m2_2924 -> m2_2925  [key=0, style=solid];
m2_2924 -> m2_2928  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2924 -> m2_2924  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2925 -> m2_2926  [key=0, style=solid];
m2_2925 -> m2_140  [key=2, style=dotted];
m2_2925 -> m2_2927  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2926 -> m2_2923  [key=0, style=bold, color=blue];
m2_381 -> m2_382  [key=0, style=solid];
m2_382 -> m2_383  [key=0, style=solid];
m2_382 -> m2_382  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m2_383 -> m2_384  [key=0, style=solid];
m2_383 -> m2_93  [key=2, style=dotted];
m2_383 -> m2_385  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_383 -> m2_386  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_384 -> m2_385  [key=0, style=solid];
m2_384 -> m2_11  [key=2, style=dotted];
m2_385 -> m2_386  [key=0, style=solid];
m2_385 -> m2_11  [key=2, style=dotted];
m2_386 -> m2_387  [key=0, style=solid];
m2_386 -> m2_11  [key=2, style=dotted];
m2_387 -> m2_381  [key=0, style=bold, color=blue];
m2_1993 -> m2_1994  [key=0, style=solid];
m2_1994 -> m2_1995  [key=0, style=solid];
m2_1994 -> m2_2000  [key=2, style=dotted];
m2_1994 -> m2_2001  [key=2, style=dotted];
m2_1994 -> m2_835  [key=2, style=dotted];
m2_1994 -> m2_1998  [key=1, style=dashed, color=darkseagreen4, label=response];
m2_1995 -> m2_1996  [key=0, style=solid];
m2_1995 -> m2_338  [key=2, style=dotted];
m2_1998 -> m2_1999  [key=0, style=solid];
m2_1998 -> m2_2002  [key=2, style=dotted];
m2_1998 -> m2_1767  [key=2, style=dotted];
m2_1996 -> m2_1997  [key=0, style=solid];
m2_1996 -> m2_93  [key=2, style=dotted];
m2_1996 -> m2_1998  [key=1, style=dashed, color=darkseagreen4, label=deserializedResponse];
m2_1997 -> m2_1998  [key=0, style=solid];
m2_1997 -> m2_11  [key=2, style=dotted];
m2_1999 -> m2_1993  [key=0, style=bold, color=blue];
m2_1966 -> m2_1967  [key=0, style=solid];
m2_1967 -> m2_1968  [key=0, style=solid];
m2_1967 -> m2_1316  [key=2, style=dotted];
m2_1967 -> m2_3254  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m2_1968 -> m2_1966  [key=0, style=bold, color=blue];
m2_1106 -> m2_1107  [key=0, style=solid];
m2_1107 -> m2_1108  [key=0, style=solid];
m2_1107 -> m2_140  [key=2, style=dotted];
m2_1107 -> m2_1109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1107 -> m2_1107  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1108 -> m2_1106  [key=0, style=bold, color=blue];
m2_3057 -> m2_3058  [key=0, style=solid];
m2_3058 -> m2_3059  [key=0, style=solid];
m2_3058 -> m2_208  [key=2, style=dotted];
m2_3058 -> m2_209  [key=2, style=dotted];
m2_3058 -> m2_221  [key=2, style=dotted];
m2_3058 -> m2_222  [key=2, style=dotted];
m2_3059 -> m2_3060  [key=0, style=solid];
m2_3059 -> m2_213  [key=2, style=dotted];
m2_3059 -> m2_716  [key=2, style=dotted];
m2_3060 -> m2_3061  [key=0, style=solid];
m2_3060 -> m2_11  [key=2, style=dotted];
m2_3061 -> m2_3057  [key=0, style=bold, color=blue];
m2_2032 -> m2_2033  [key=0, style=solid];
m2_2033 -> m2_2034  [key=0, style=solid];
m2_2033 -> m2_93  [key=2, style=dotted];
m2_2033 -> m2_2035  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_2034 -> m2_2035  [key=0, style=solid];
m2_2034 -> m2_11  [key=2, style=dotted];
m2_2035 -> m2_2036  [key=0, style=solid];
m2_2035 -> m2_11  [key=2, style=dotted];
m2_2036 -> m2_2032  [key=0, style=bold, color=blue];
m2_166 -> m2_167  [key=0, style=solid];
m2_167 -> m2_168  [key=0, style=solid];
m2_167 -> m2_169  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_167 -> m2_170  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_167 -> m2_167  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_168 -> m2_169  [key=0, style=solid];
m2_168 -> m2_54  [key=2, style=dotted];
m2_169 -> m2_170  [key=0, style=solid];
m2_169 -> m2_174  [key=2, style=dotted];
m2_169 -> m2_175  [key=2, style=dotted];
m2_169 -> m2_176  [key=2, style=dotted];
m2_169 -> m2_172  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m2_170 -> m2_171  [key=0, style=solid];
m2_170 -> m2_93  [key=2, style=dotted];
m2_170 -> m2_172  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m2_172 -> m2_173  [key=0, style=solid];
m2_172 -> m2_11  [key=2, style=dotted];
m2_171 -> m2_172  [key=0, style=solid];
m2_171 -> m2_11  [key=2, style=dotted];
m2_173 -> m2_166  [key=0, style=bold, color=blue];
m2_2134 -> m2_2135  [key=0, style=solid];
m2_2135 -> m2_2136  [key=0, style=solid];
m2_2135 -> m2_2139  [key=2, style=dotted];
m2_2135 -> m2_209  [key=2, style=dotted];
m2_2136 -> m2_2137  [key=0, style=solid];
m2_2136 -> m2_338  [key=2, style=dotted];
m2_2137 -> m2_2138  [key=0, style=solid];
m2_2137 -> m2_11  [key=2, style=dotted];
m2_2138 -> m2_2134  [key=0, style=bold, color=blue];
m2_2818 -> m2_2819  [key=0, style=solid];
m2_2819 -> m2_2820  [key=0, style=solid];
m2_2819 -> m2_2821  [key=2, style=dotted];
m2_2820 -> m2_2818  [key=0, style=bold, color=blue];
m2_2182 -> m2_2183  [key=0, style=solid];
m2_2183 -> m2_2184  [key=0, style=solid];
m2_2183 -> m2_1536  [key=2, style=dotted];
m2_2184 -> m2_2182  [key=0, style=bold, color=blue];
m2_1276 -> m2_1277  [key=0, style=solid];
m2_1277 -> m2_1278  [key=0, style=solid];
m2_1277 -> m2_1279  [key=2, style=dotted];
m2_1278 -> m2_1276  [key=0, style=bold, color=blue];
m2_784 -> m2_785  [key=0, style=solid];
m2_785 -> m2_786  [key=0, style=solid];
m2_785 -> m2_785  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_786 -> m2_787  [key=0, style=solid];
m2_786 -> m2_213  [key=2, style=dotted];
m2_786 -> m2_461  [key=2, style=dotted];
m2_786 -> m2_788  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_786 -> m2_789  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_786 -> m2_790  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_786 -> m2_791  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_786 -> m2_792  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_786 -> m2_793  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_786 -> m2_794  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_786 -> m2_795  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_786 -> m2_796  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_787 -> m2_788  [key=0, style=solid];
m2_787 -> m2_11  [key=2, style=dotted];
m2_788 -> m2_789  [key=0, style=solid];
m2_788 -> m2_11  [key=2, style=dotted];
m2_789 -> m2_790  [key=0, style=solid];
m2_789 -> m2_11  [key=2, style=dotted];
m2_790 -> m2_791  [key=0, style=solid];
m2_790 -> m2_11  [key=2, style=dotted];
m2_791 -> m2_792  [key=0, style=solid];
m2_791 -> m2_11  [key=2, style=dotted];
m2_792 -> m2_793  [key=0, style=solid];
m2_792 -> m2_798  [key=2, style=dotted];
m2_792 -> m2_11  [key=2, style=dotted];
m2_793 -> m2_794  [key=0, style=solid];
m2_793 -> m2_798  [key=2, style=dotted];
m2_793 -> m2_11  [key=2, style=dotted];
m2_794 -> m2_795  [key=0, style=solid];
m2_794 -> m2_11  [key=2, style=dotted];
m2_795 -> m2_796  [key=0, style=solid];
m2_795 -> m2_11  [key=2, style=dotted];
m2_796 -> m2_797  [key=0, style=solid];
m2_796 -> m2_674  [key=2, style=dotted];
m2_797 -> m2_784  [key=0, style=bold, color=blue];
m2_520 -> m2_521  [key=0, style=solid];
m2_521 -> m2_522  [key=0, style=solid];
m2_521 -> m2_526  [key=2, style=dotted];
m2_521 -> m2_527  [key=2, style=dotted];
m2_521 -> m2_523  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m2_522 -> m2_523  [key=0, style=solid];
m2_523 -> m2_524  [key=0, style=solid];
m2_523 -> m2_9  [key=2, style=dotted];
m2_524 -> m2_525  [key=0, style=solid];
m2_524 -> m2_11  [key=2, style=dotted];
m2_525 -> m2_520  [key=0, style=bold, color=blue];
m2_2845 -> m2_2846  [key=0, style=solid];
m2_2846 -> m2_2847  [key=0, style=solid];
m2_2847 -> m2_2845  [key=0, style=bold, color=blue];
m2_1541 -> m2_1542  [key=0, style=solid];
m2_1541 -> m2_1544  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_1541 -> m2_1545  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_1542 -> m2_1543  [key=0, style=solid];
m2_1542 -> m2_1544  [key=1, style=dashed, color=darkseagreen4, label=p];
m2_1544 -> m2_1546  [key=0, style=solid];
m2_1544 -> m2_1547  [key=2, style=dotted];
m2_1544 -> m2_1531  [key=2, style=dotted];
m2_1545 -> m2_1546  [key=0, style=solid];
m2_1545 -> m2_1532  [key=2, style=dotted];
m2_1543 -> m2_1544  [key=0, style=solid];
m2_1543 -> m2_1545  [key=0, style=solid];
m2_1546 -> m2_1541  [key=0, style=bold, color=blue];
m2_1250 -> m2_1251  [key=0, style=solid];
m2_1251 -> m2_1252  [key=0, style=solid];
m2_1251 -> m2_1253  [key=2, style=dotted];
m2_1252 -> m2_1250  [key=0, style=bold, color=blue];
m2_2348 -> m2_2349  [key=0, style=solid];
m2_2349 -> m2_2350  [key=0, style=solid];
m2_2349 -> m2_2353  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2349 -> m2_2349  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2350 -> m2_2351  [key=0, style=solid];
m2_2350 -> m2_140  [key=2, style=dotted];
m2_2350 -> m2_2352  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2351 -> m2_2348  [key=0, style=bold, color=blue];
m2_2760 -> m2_2761  [key=0, style=solid];
m2_2761 -> m2_2762  [key=0, style=solid];
m2_2761 -> m2_2768  [key=2, style=dotted];
m2_2762 -> m2_2763  [key=0, style=solid];
m2_2762 -> m2_338  [key=2, style=dotted];
m2_2763 -> m2_2764  [key=0, style=solid];
m2_2763 -> m2_11  [key=2, style=dotted];
m2_2764 -> m2_2765  [key=0, style=solid];
m2_2764 -> m2_2769  [key=2, style=dotted];
m2_2765 -> m2_2766  [key=0, style=solid];
m2_2765 -> m2_338  [key=2, style=dotted];
m2_2766 -> m2_2767  [key=0, style=solid];
m2_2766 -> m2_11  [key=2, style=dotted];
m2_2767 -> m2_2760  [key=0, style=bold, color=blue];
m2_1788 -> m2_1789  [key=0, style=solid];
m2_1789 -> m2_1790  [key=0, style=solid];
m2_1790 -> m2_1788  [key=0, style=bold, color=blue];
m2_1867 -> m2_1868  [key=0, style=solid];
m2_1868 -> m2_1869  [key=0, style=solid];
m2_1868 -> m2_93  [key=2, style=dotted];
m2_1869 -> m2_1870  [key=0, style=solid];
m2_1869 -> m2_1866  [key=2, style=dotted];
m2_1869 -> m2_29  [key=2, style=dotted];
m2_1869 -> m2_222  [key=2, style=dotted];
m2_1869 -> m2_11  [key=2, style=dotted];
m2_1870 -> m2_1867  [key=0, style=bold, color=blue];
m2_2091 -> m2_2092  [key=0, style=solid];
m2_2092 -> m2_2093  [key=0, style=solid];
m2_2092 -> m2_2092  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2093 -> m2_2094  [key=0, style=solid];
m2_2093 -> m2_93  [key=2, style=dotted];
m2_2093 -> m2_2095  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m2_2093 -> m2_2096  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m2_2094 -> m2_2095  [key=0, style=solid];
m2_2094 -> m2_11  [key=2, style=dotted];
m2_2095 -> m2_2096  [key=0, style=solid];
m2_2095 -> m2_11  [key=2, style=dotted];
m2_2096 -> m2_2097  [key=0, style=solid];
m2_2096 -> m2_11  [key=2, style=dotted];
m2_2097 -> m2_2091  [key=0, style=bold, color=blue];
m2_1460 -> m2_1461  [key=0, style=solid];
m2_1461 -> m2_1460  [key=0, style=bold, color=blue];
m2_908 -> m2_909  [key=0, style=solid];
m2_909 -> m2_910  [key=0, style=solid];
m2_909 -> m2_909  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_910 -> m2_911  [key=0, style=solid];
m2_910 -> m2_93  [key=2, style=dotted];
m2_911 -> m2_912  [key=0, style=solid];
m2_911 -> m2_11  [key=2, style=dotted];
m2_912 -> m2_908  [key=0, style=bold, color=blue];
m2_215 -> m2_216  [key=0, style=solid];
m2_216 -> m2_217  [key=0, style=solid];
m2_216 -> m2_208  [key=2, style=dotted];
m2_216 -> m2_220  [key=2, style=dotted];
m2_216 -> m2_209  [key=2, style=dotted];
m2_216 -> m2_221  [key=2, style=dotted];
m2_216 -> m2_222  [key=2, style=dotted];
m2_217 -> m2_218  [key=0, style=solid];
m2_217 -> m2_9  [key=2, style=dotted];
m2_218 -> m2_219  [key=0, style=solid];
m2_218 -> m2_11  [key=2, style=dotted];
m2_219 -> m2_215  [key=0, style=bold, color=blue];
m2_2544 -> m2_2545  [key=0, style=solid];
m2_2545 -> m2_2546  [key=0, style=solid];
m2_2545 -> m2_140  [key=2, style=dotted];
m2_2545 -> m2_2547  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2546 -> m2_2544  [key=0, style=bold, color=blue];
m2_2740 -> m2_2748  [key=0, style=solid];
m2_2740 -> m2_2736  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m2_2748 -> m2_2749  [key=0, style=solid];
m2_2748 -> m2_268  [key=2, style=dotted];
m2_2748 -> m2_269  [key=2, style=dotted];
m2_2748 -> m2_2751  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_2749 -> m2_2750  [key=0, style=solid];
m2_2749 -> m2_263  [key=2, style=dotted];
m2_2749 -> m2_2751  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_2751 -> m2_2752  [key=0, style=solid];
m2_2751 -> m2_270  [key=2, style=dotted];
m2_2750 -> m2_2751  [key=0, style=solid];
m2_2750 -> m2_2747  [key=2, style=dotted];
m2_2752 -> m2_2740  [key=0, style=bold, color=blue];
m2_2496 -> m2_2497  [key=0, style=solid];
m2_2497 -> m2_2498  [key=0, style=solid];
m2_2497 -> m2_2506  [key=2, style=dotted];
m2_2497 -> m2_9  [key=2, style=dotted];
m2_2497 -> m2_2499  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2498 -> m2_2499  [key=0, style=solid];
m2_2498 -> m2_11  [key=2, style=dotted];
m2_2499 -> m2_2500  [key=0, style=solid];
m2_2499 -> m2_93  [key=2, style=dotted];
m2_2500 -> m2_2501  [key=0, style=solid];
m2_2500 -> m2_11  [key=2, style=dotted];
m2_2501 -> m2_2502  [key=0, style=solid];
m2_2501 -> m2_2506  [key=2, style=dotted];
m2_2501 -> m2_9  [key=2, style=dotted];
m2_2501 -> m2_2503  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2502 -> m2_2503  [key=0, style=solid];
m2_2502 -> m2_11  [key=2, style=dotted];
m2_2503 -> m2_2504  [key=0, style=solid];
m2_2503 -> m2_93  [key=2, style=dotted];
m2_2504 -> m2_2505  [key=0, style=solid];
m2_2504 -> m2_11  [key=2, style=dotted];
m2_2505 -> m2_2496  [key=0, style=bold, color=blue];
m2_2003 -> m2_2004  [key=0, style=solid];
m2_2004 -> m2_2003  [key=0, style=bold, color=blue];
m2_223 -> m2_224  [key=0, style=solid];
m2_224 -> m2_225  [key=0, style=solid];
m2_224 -> m2_208  [key=2, style=dotted];
m2_224 -> m2_220  [key=2, style=dotted];
m2_224 -> m2_209  [key=2, style=dotted];
m2_224 -> m2_221  [key=2, style=dotted];
m2_224 -> m2_222  [key=2, style=dotted];
m2_225 -> m2_226  [key=0, style=solid];
m2_225 -> m2_213  [key=2, style=dotted];
m2_225 -> m2_214  [key=2, style=dotted];
m2_226 -> m2_227  [key=0, style=solid];
m2_226 -> m2_11  [key=2, style=dotted];
m2_227 -> m2_223  [key=0, style=bold, color=blue];
m2_3142 -> m2_3143  [key=0, style=solid];
m2_3143 -> m2_3144  [key=0, style=solid];
m2_3143 -> m2_3146  [key=2, style=dotted];
m2_3143 -> m2_213  [key=2, style=dotted];
m2_3143 -> m2_1029  [key=2, style=dotted];
m2_3143 -> m2_716  [key=2, style=dotted];
m2_3144 -> m2_3145  [key=0, style=solid];
m2_3144 -> m2_11  [key=2, style=dotted];
m2_3145 -> m2_3142  [key=0, style=bold, color=blue];
m2_2462 -> m2_2463  [key=0, style=solid];
m2_2463 -> m2_2464  [key=0, style=solid];
m2_2463 -> m2_140  [key=2, style=dotted];
m2_2463 -> m2_2465  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2463 -> m2_2463  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2464 -> m2_2462  [key=0, style=bold, color=blue];
m2_2075 -> m2_2076  [key=0, style=solid];
m2_2076 -> m2_2077  [key=0, style=solid];
m2_2076 -> m2_140  [key=2, style=dotted];
m2_2076 -> m2_2078  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2077 -> m2_2075  [key=0, style=bold, color=blue];
m2_1280 -> m2_1281  [key=0, style=solid];
m2_1281 -> m2_1282  [key=0, style=solid];
m2_1281 -> m2_1223  [key=2, style=dotted];
m2_1281 -> m2_1283  [key=1, style=dashed, color=darkseagreen4, label=modelStateDictionary];
m2_1282 -> m2_1283  [key=0, style=solid];
m2_1282 -> m2_1235  [key=2, style=dotted];
m2_1283 -> m2_1284  [key=0, style=solid];
m2_1283 -> m2_9  [key=2, style=dotted];
m2_1283 -> m2_1285  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1284 -> m2_1285  [key=0, style=solid];
m2_1284 -> m2_11  [key=2, style=dotted];
m2_1285 -> m2_1286  [key=0, style=solid];
m2_1285 -> m2_93  [key=2, style=dotted];
m2_1285 -> m2_1287  [key=1, style=dashed, color=darkseagreen4, label=newModelStateDictionary];
m2_1286 -> m2_1287  [key=0, style=solid];
m2_1286 -> m2_11  [key=2, style=dotted];
m2_1287 -> m2_1288  [key=0, style=solid];
m2_1287 -> m2_11  [key=2, style=dotted];
m2_1288 -> m2_1280  [key=0, style=bold, color=blue];
m2_74 -> m2_75  [key=0, style=solid, color=green];
m2_74 -> m2_82  [key=0, style=solid, color=green];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label=digit1];
m2_75 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label=digit1];
m2_75 -> m2_31  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label=digit2];
m2_76 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label=digit2];
m2_76 -> m2_10  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label=digit3];
m2_77 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label=digit3];
m2_77 -> m2_11  [key=2, style=dotted];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label=digit4];
m2_78 -> m2_74  [key=0, style=bold, color=blue];
m2_2254 -> m2_2255  [key=0, style=solid];
m2_2255 -> m2_2256  [key=0, style=solid];
m2_2255 -> m2_93  [key=2, style=dotted];
m2_2256 -> m2_2257  [key=0, style=solid];
m2_2256 -> m2_11  [key=2, style=dotted];
m2_2257 -> m2_2254  [key=0, style=bold, color=blue];
m2_1591 -> m2_1592  [key=0, style=solid];
m2_1592 -> m2_1593  [key=0, style=solid];
m2_1592 -> m2_209  [key=2, style=dotted];
m2_1592 -> m2_1594  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m2_1592 -> m2_1595  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m2_1593 -> m2_1594  [key=0, style=solid];
m2_1593 -> m2_208  [key=2, style=dotted];
m2_1593 -> m2_1595  [key=1, style=dashed, color=darkseagreen4, label=list];
m2_1593 -> m2_1596  [key=1, style=dashed, color=darkseagreen4, label=list];
m2_1594 -> m2_1595  [key=0, style=solid];
m2_1594 -> m2_1590  [key=2, style=dotted];
m2_1594 -> m2_1605  [key=2, style=dotted];
m2_1594 -> m2_158  [key=2, style=dotted];
m2_1595 -> m2_1596  [key=0, style=solid];
m2_1595 -> m2_1590  [key=2, style=dotted];
m2_1595 -> m2_1605  [key=2, style=dotted];
m2_1595 -> m2_158  [key=2, style=dotted];
m2_1596 -> m2_1597  [key=0, style=solid];
m2_1596 -> m2_338  [key=2, style=dotted];
m2_1596 -> m2_1598  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1597 -> m2_1598  [key=0, style=solid];
m2_1597 -> m2_11  [key=2, style=dotted];
m2_1598 -> m2_1599  [key=0, style=solid];
m2_1598 -> m2_93  [key=2, style=dotted];
m2_1598 -> m2_1600  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_1598 -> m2_1601  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_1598 -> m2_1602  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_1598 -> m2_1603  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_1599 -> m2_1600  [key=0, style=solid];
m2_1599 -> m2_11  [key=2, style=dotted];
m2_1600 -> m2_1601  [key=0, style=solid];
m2_1600 -> m2_11  [key=2, style=dotted];
m2_1601 -> m2_1602  [key=0, style=solid];
m2_1601 -> m2_11  [key=2, style=dotted];
m2_1602 -> m2_1603  [key=0, style=solid];
m2_1602 -> m2_11  [key=2, style=dotted];
m2_1603 -> m2_1604  [key=0, style=solid];
m2_1603 -> m2_11  [key=2, style=dotted];
m2_1604 -> m2_1591  [key=0, style=bold, color=blue];
m2_2911 -> m2_2912  [key=0, style=solid];
m2_2912 -> m2_2913  [key=0, style=solid];
m2_2912 -> m2_2921  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2912 -> m2_618  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2913 -> m2_2914  [key=0, style=solid];
m2_2913 -> m2_93  [key=2, style=dotted];
m2_2913 -> m2_2915  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2913 -> m2_2916  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2913 -> m2_2917  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2913 -> m2_2918  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2913 -> m2_2919  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2913 -> m2_2920  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2921 -> m2_2922  [key=0, style=solid];
m2_2921 -> m2_11  [key=2, style=dotted];
m2_2914 -> m2_2915  [key=0, style=solid];
m2_2914 -> m2_11  [key=2, style=dotted];
m2_2915 -> m2_2916  [key=0, style=solid];
m2_2915 -> m2_11  [key=2, style=dotted];
m2_2916 -> m2_2917  [key=0, style=solid];
m2_2916 -> m2_2910  [key=2, style=dotted];
m2_2916 -> m2_11  [key=2, style=dotted];
m2_2917 -> m2_2918  [key=0, style=solid];
m2_2917 -> m2_2910  [key=2, style=dotted];
m2_2917 -> m2_11  [key=2, style=dotted];
m2_2918 -> m2_2919  [key=0, style=solid];
m2_2918 -> m2_11  [key=2, style=dotted];
m2_2919 -> m2_2920  [key=0, style=solid];
m2_2919 -> m2_11  [key=2, style=dotted];
m2_2920 -> m2_2921  [key=0, style=solid];
m2_2920 -> m2_9  [key=2, style=dotted];
m2_2922 -> m2_2911  [key=0, style=bold, color=blue];
m2_2822 -> m2_2823  [key=0, style=solid];
m2_2822 -> m2_2819  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m2_2823 -> m2_2824  [key=0, style=solid];
m2_2824 -> m2_2822  [key=0, style=bold, color=blue];
m2_2122 -> m2_2123  [key=0, style=solid];
m2_2123 -> m2_2124  [key=0, style=solid];
m2_2123 -> m2_2127  [key=2, style=dotted];
m2_2124 -> m2_2125  [key=0, style=solid];
m2_2124 -> m2_9  [key=2, style=dotted];
m2_2125 -> m2_2126  [key=0, style=solid];
m2_2125 -> m2_11  [key=2, style=dotted];
m2_2126 -> m2_2122  [key=0, style=bold, color=blue];
m2_1048 -> m2_1049  [key=0, style=solid];
m2_1049 -> m2_1050  [key=0, style=solid];
m2_1049 -> m2_208  [key=2, style=dotted];
m2_1049 -> m2_1051  [key=1, style=dashed, color=darkseagreen4, label=strings];
m2_1049 -> m2_1052  [key=1, style=dashed, color=darkseagreen4, label=strings];
m2_1049 -> m2_1053  [key=1, style=dashed, color=darkseagreen4, label=strings];
m2_1050 -> m2_1051  [key=0, style=solid];
m2_1050 -> m2_158  [key=2, style=dotted];
m2_1051 -> m2_1052  [key=0, style=solid];
m2_1051 -> m2_158  [key=2, style=dotted];
m2_1052 -> m2_1053  [key=0, style=solid];
m2_1052 -> m2_158  [key=2, style=dotted];
m2_1053 -> m2_1054  [key=0, style=solid];
m2_1053 -> m2_9  [key=2, style=dotted];
m2_1054 -> m2_1055  [key=0, style=solid];
m2_1054 -> m2_11  [key=2, style=dotted];
m2_1055 -> m2_1048  [key=0, style=bold, color=blue];
m2_1056 -> m2_1057  [key=0, style=solid];
m2_1057 -> m2_1058  [key=0, style=solid];
m2_1057 -> m2_1064  [key=2, style=dotted];
m2_1058 -> m2_1059  [key=0, style=solid];
m2_1058 -> m2_338  [key=2, style=dotted];
m2_1058 -> m2_1060  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1059 -> m2_1060  [key=0, style=solid];
m2_1059 -> m2_11  [key=2, style=dotted];
m2_1060 -> m2_1061  [key=0, style=solid];
m2_1060 -> m2_93  [key=2, style=dotted];
m2_1060 -> m2_1062  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_1061 -> m2_1062  [key=0, style=solid];
m2_1061 -> m2_11  [key=2, style=dotted];
m2_1062 -> m2_1063  [key=0, style=solid];
m2_1062 -> m2_11  [key=2, style=dotted];
m2_1063 -> m2_1056  [key=0, style=bold, color=blue];
m2_2507 -> m2_2508  [key=0, style=solid];
m2_2508 -> m2_2509  [key=0, style=solid];
m2_2508 -> m2_2513  [key=2, style=dotted];
m2_2508 -> m2_2514  [key=2, style=dotted];
m2_2508 -> m2_9  [key=2, style=dotted];
m2_2509 -> m2_2510  [key=0, style=solid];
m2_2509 -> m2_11  [key=2, style=dotted];
m2_2510 -> m2_2511  [key=0, style=solid];
m2_2510 -> m2_93  [key=2, style=dotted];
m2_2511 -> m2_2512  [key=0, style=solid];
m2_2511 -> m2_2514  [key=2, style=dotted];
m2_2511 -> m2_11  [key=2, style=dotted];
m2_2512 -> m2_2507  [key=0, style=bold, color=blue];
m2_2710 -> m2_2711  [key=0, style=solid];
m2_2711 -> m2_2712  [key=0, style=solid];
m2_2711 -> m2_2718  [key=2, style=dotted];
m2_2712 -> m2_2713  [key=0, style=solid];
m2_2712 -> m2_93  [key=2, style=dotted];
m2_2712 -> m2_2714  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2712 -> m2_2715  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2712 -> m2_2716  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2713 -> m2_2714  [key=0, style=solid];
m2_2713 -> m2_674  [key=2, style=dotted];
m2_2714 -> m2_2715  [key=0, style=solid];
m2_2714 -> m2_11  [key=2, style=dotted];
m2_2715 -> m2_2716  [key=0, style=solid];
m2_2715 -> m2_11  [key=2, style=dotted];
m2_2716 -> m2_2717  [key=0, style=solid];
m2_2716 -> m2_11  [key=2, style=dotted];
m2_2717 -> m2_2710  [key=0, style=bold, color=blue];
m2_2577 -> m2_2578  [key=0, style=solid];
m2_2578 -> m2_2579  [key=0, style=solid];
m2_2578 -> m2_213  [key=2, style=dotted];
m2_2578 -> m2_461  [key=2, style=dotted];
m2_2578 -> m2_2580  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_2578 -> m2_2581  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_2578 -> m2_2582  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_2579 -> m2_2580  [key=0, style=solid];
m2_2579 -> m2_2589  [key=2, style=dotted];
m2_2579 -> m2_2590  [key=2, style=dotted];
m2_2579 -> m2_11  [key=2, style=dotted];
m2_2580 -> m2_2581  [key=0, style=solid];
m2_2580 -> m2_2591  [key=2, style=dotted];
m2_2580 -> m2_11  [key=2, style=dotted];
m2_2581 -> m2_2582  [key=0, style=solid];
m2_2581 -> m2_11  [key=2, style=dotted];
m2_2582 -> m2_2583  [key=0, style=solid];
m2_2582 -> m2_11  [key=2, style=dotted];
m2_2583 -> m2_2584  [key=0, style=solid];
m2_2583 -> m2_213  [key=2, style=dotted];
m2_2583 -> m2_461  [key=2, style=dotted];
m2_2583 -> m2_2585  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2583 -> m2_2586  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2583 -> m2_2587  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2584 -> m2_2585  [key=0, style=solid];
m2_2584 -> m2_2589  [key=2, style=dotted];
m2_2584 -> m2_2590  [key=2, style=dotted];
m2_2584 -> m2_11  [key=2, style=dotted];
m2_2585 -> m2_2586  [key=0, style=solid];
m2_2585 -> m2_2591  [key=2, style=dotted];
m2_2585 -> m2_11  [key=2, style=dotted];
m2_2586 -> m2_2587  [key=0, style=solid];
m2_2586 -> m2_11  [key=2, style=dotted];
m2_2587 -> m2_2588  [key=0, style=solid];
m2_2587 -> m2_11  [key=2, style=dotted];
m2_2588 -> m2_2577  [key=0, style=bold, color=blue];
m2_373 -> m2_374  [key=0, style=solid];
m2_374 -> m2_375  [key=0, style=solid];
m2_374 -> m2_380  [key=2, style=dotted];
m2_374 -> m2_9  [key=2, style=dotted];
m2_375 -> m2_376  [key=0, style=solid];
m2_375 -> m2_11  [key=2, style=dotted];
m2_376 -> m2_377  [key=0, style=solid];
m2_376 -> m2_93  [key=2, style=dotted];
m2_376 -> m2_378  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_377 -> m2_378  [key=0, style=solid];
m2_377 -> m2_11  [key=2, style=dotted];
m2_378 -> m2_379  [key=0, style=solid];
m2_378 -> m2_11  [key=2, style=dotted];
m2_379 -> m2_373  [key=0, style=bold, color=blue];
m2_2194 -> m2_2195  [key=0, style=solid];
m2_2195 -> m2_2196  [key=0, style=solid];
m2_2195 -> m2_2200  [key=2, style=dotted];
m2_2195 -> m2_338  [key=2, style=dotted];
m2_2196 -> m2_2197  [key=0, style=solid];
m2_2196 -> m2_11  [key=2, style=dotted];
m2_2197 -> m2_2198  [key=0, style=solid];
m2_2197 -> m2_2201  [key=2, style=dotted];
m2_2197 -> m2_338  [key=2, style=dotted];
m2_2198 -> m2_2199  [key=0, style=solid];
m2_2198 -> m2_11  [key=2, style=dotted];
m2_2199 -> m2_2194  [key=0, style=bold, color=blue];
m2_2098 -> m2_2099  [key=0, style=solid];
m2_2099 -> m2_2100  [key=0, style=solid];
m2_2100 -> m2_2101  [key=0, style=solid];
m2_2101 -> m2_2098  [key=0, style=bold, color=blue];
m2_2028 -> m2_2029  [key=0, style=solid];
m2_2029 -> m2_2030  [key=0, style=solid];
m2_2030 -> m2_2031  [key=0, style=solid];
m2_2031 -> m2_2028  [key=0, style=bold, color=blue];
m2_1003 -> m2_1004  [key=0, style=solid];
m2_1004 -> m2_1005  [key=0, style=solid];
m2_1004 -> m2_1008  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1004 -> m2_941  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1005 -> m2_1006  [key=0, style=solid];
m2_1005 -> m2_140  [key=2, style=dotted];
m2_1005 -> m2_1007  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1006 -> m2_1003  [key=0, style=bold, color=blue];
m2_2899 -> m2_2900  [key=0, style=solid];
m2_2900 -> m2_2901  [key=0, style=solid];
m2_2900 -> m2_2900  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2901 -> m2_2902  [key=0, style=solid];
m2_2901 -> m2_93  [key=2, style=dotted];
m2_2901 -> m2_2903  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2901 -> m2_2904  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2901 -> m2_2905  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2901 -> m2_2906  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2901 -> m2_2907  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2901 -> m2_2908  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2902 -> m2_2903  [key=0, style=solid];
m2_2902 -> m2_11  [key=2, style=dotted];
m2_2903 -> m2_2904  [key=0, style=solid];
m2_2903 -> m2_11  [key=2, style=dotted];
m2_2904 -> m2_2905  [key=0, style=solid];
m2_2904 -> m2_2910  [key=2, style=dotted];
m2_2904 -> m2_11  [key=2, style=dotted];
m2_2905 -> m2_2906  [key=0, style=solid];
m2_2905 -> m2_2910  [key=2, style=dotted];
m2_2905 -> m2_11  [key=2, style=dotted];
m2_2906 -> m2_2907  [key=0, style=solid];
m2_2906 -> m2_2910  [key=2, style=dotted];
m2_2906 -> m2_11  [key=2, style=dotted];
m2_2907 -> m2_2908  [key=0, style=solid];
m2_2907 -> m2_11  [key=2, style=dotted];
m2_2908 -> m2_2909  [key=0, style=solid];
m2_2908 -> m2_11  [key=2, style=dotted];
m2_2909 -> m2_2899  [key=0, style=bold, color=blue];
m2_880 -> m2_881  [key=0, style=solid];
m2_881 -> m2_882  [key=0, style=solid];
m2_881 -> m2_881  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_882 -> m2_883  [key=0, style=solid];
m2_882 -> m2_93  [key=2, style=dotted];
m2_882 -> m2_884  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_882 -> m2_885  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_882 -> m2_886  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_882 -> m2_887  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_883 -> m2_884  [key=0, style=solid];
m2_883 -> m2_889  [key=2, style=dotted];
m2_884 -> m2_885  [key=0, style=solid];
m2_884 -> m2_12  [key=2, style=dotted];
m2_885 -> m2_886  [key=0, style=solid];
m2_885 -> m2_11  [key=2, style=dotted];
m2_886 -> m2_887  [key=0, style=solid];
m2_886 -> m2_11  [key=2, style=dotted];
m2_887 -> m2_888  [key=0, style=solid];
m2_887 -> m2_11  [key=2, style=dotted];
m2_888 -> m2_880  [key=0, style=bold, color=blue];
m2_1163 -> m2_1164  [key=0, style=solid];
m2_1164 -> m2_1165  [key=0, style=solid];
m2_1164 -> m2_338  [key=2, style=dotted];
m2_1165 -> m2_1163  [key=0, style=bold, color=blue];
m2_2734 -> m2_3152  [key=0, style=solid];
m2_3152 -> m2_2734  [key=0, style=bold, color=blue];
m2_1923 -> m2_1924  [key=0, style=solid];
m2_1924 -> m2_1925  [key=0, style=solid];
m2_1924 -> m2_1924  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1925 -> m2_1926  [key=0, style=solid];
m2_1925 -> m2_93  [key=2, style=dotted];
m2_1926 -> m2_1927  [key=0, style=solid];
m2_1926 -> m2_11  [key=2, style=dotted];
m2_1927 -> m2_1923  [key=0, style=bold, color=blue];
m2_2318 -> m2_3179  [key=0, style=solid];
m2_3179 -> m2_2318  [key=0, style=bold, color=blue];
m2_929 -> m2_930  [key=0, style=solid];
m2_930 -> m2_931  [key=0, style=solid];
m2_930 -> m2_930  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_931 -> m2_932  [key=0, style=solid];
m2_931 -> m2_93  [key=2, style=dotted];
m2_932 -> m2_929  [key=0, style=bold, color=blue];
m2_2308 -> m2_2309  [key=0, style=solid];
m2_2309 -> m2_2310  [key=0, style=solid];
m2_2309 -> m2_52  [key=2, style=dotted];
m2_2309 -> m2_2318  [key=2, style=dotted];
m2_2310 -> m2_2311  [key=0, style=solid];
m2_2310 -> m2_2319  [key=2, style=dotted];
m2_2310 -> m2_2320  [key=2, style=dotted];
m2_2311 -> m2_2312  [key=0, style=solid];
m2_2311 -> m2_338  [key=2, style=dotted];
m2_2311 -> m2_2313  [key=1, style=dashed, color=darkseagreen4, label=originalJson];
m2_2312 -> m2_2313  [key=0, style=solid];
m2_2312 -> m2_11  [key=2, style=dotted];
m2_2313 -> m2_2314  [key=0, style=solid];
m2_2313 -> m2_93  [key=2, style=dotted];
m2_2313 -> m2_2315  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m2_2313 -> m2_2316  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m2_2314 -> m2_2315  [key=0, style=solid];
m2_2314 -> m2_11  [key=2, style=dotted];
m2_2315 -> m2_2316  [key=0, style=solid];
m2_2315 -> m2_11  [key=2, style=dotted];
m2_2316 -> m2_2317  [key=0, style=solid];
m2_2316 -> m2_11  [key=2, style=dotted];
m2_2317 -> m2_2308  [key=0, style=bold, color=blue];
m2_421 -> m2_422  [key=0, style=solid];
m2_422 -> m2_423  [key=0, style=solid];
m2_422 -> m2_420  [key=2, style=dotted];
m2_423 -> m2_424  [key=0, style=solid];
m2_423 -> m2_428  [key=2, style=dotted];
m2_423 -> m2_429  [key=2, style=dotted];
m2_423 -> m2_425  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_424 -> m2_425  [key=0, style=solid];
m2_424 -> m2_11  [key=2, style=dotted];
m2_425 -> m2_426  [key=0, style=solid];
m2_425 -> m2_428  [key=2, style=dotted];
m2_425 -> m2_430  [key=2, style=dotted];
m2_426 -> m2_427  [key=0, style=solid];
m2_426 -> m2_11  [key=2, style=dotted];
m2_427 -> m2_421  [key=0, style=bold, color=blue];
m2_2861 -> m2_2862  [key=0, style=solid];
m2_2862 -> m2_2863  [key=0, style=solid];
m2_2862 -> m2_2868  [key=2, style=dotted];
m2_2863 -> m2_2864  [key=0, style=solid];
m2_2863 -> m2_213  [key=2, style=dotted];
m2_2863 -> m2_2869  [key=2, style=dotted];
m2_2863 -> m2_214  [key=2, style=dotted];
m2_2863 -> m2_2865  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2864 -> m2_2865  [key=0, style=solid];
m2_2864 -> m2_11  [key=2, style=dotted];
m2_2865 -> m2_2866  [key=0, style=solid];
m2_2865 -> m2_213  [key=2, style=dotted];
m2_2865 -> m2_2869  [key=2, style=dotted];
m2_2865 -> m2_461  [key=2, style=dotted];
m2_2866 -> m2_2867  [key=0, style=solid];
m2_2866 -> m2_11  [key=2, style=dotted];
m2_2867 -> m2_2861  [key=0, style=bold, color=blue];
m2_536 -> m2_537  [key=0, style=solid];
m2_537 -> m2_538  [key=0, style=solid];
m2_537 -> m2_549  [key=2, style=dotted];
m2_537 -> m2_356  [key=2, style=dotted];
m2_538 -> m2_539  [key=0, style=solid];
m2_538 -> m2_9  [key=2, style=dotted];
m2_538 -> m2_540  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_539 -> m2_540  [key=0, style=solid];
m2_539 -> m2_11  [key=2, style=dotted];
m2_540 -> m2_541  [key=0, style=solid];
m2_540 -> m2_93  [key=2, style=dotted];
m2_540 -> m2_542  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m2_540 -> m2_543  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m2_540 -> m2_544  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m2_540 -> m2_545  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m2_540 -> m2_546  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m2_540 -> m2_547  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m2_541 -> m2_542  [key=0, style=solid];
m2_541 -> m2_356  [key=2, style=dotted];
m2_541 -> m2_11  [key=2, style=dotted];
m2_542 -> m2_543  [key=0, style=solid];
m2_542 -> m2_11  [key=2, style=dotted];
m2_543 -> m2_544  [key=0, style=solid];
m2_543 -> m2_11  [key=2, style=dotted];
m2_544 -> m2_545  [key=0, style=solid];
m2_544 -> m2_11  [key=2, style=dotted];
m2_545 -> m2_546  [key=0, style=solid];
m2_545 -> m2_11  [key=2, style=dotted];
m2_546 -> m2_547  [key=0, style=solid];
m2_546 -> m2_11  [key=2, style=dotted];
m2_547 -> m2_548  [key=0, style=solid];
m2_547 -> m2_11  [key=2, style=dotted];
m2_548 -> m2_536  [key=0, style=bold, color=blue];
m2_1042 -> m2_1043  [key=0, style=solid];
m2_1043 -> m2_1044  [key=0, style=solid];
m2_1043 -> m2_140  [key=2, style=dotted];
m2_1043 -> m2_1045  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1044 -> m2_1042  [key=0, style=bold, color=blue];
m2_2213 -> m2_2214  [key=0, style=solid];
m2_2214 -> m2_2215  [key=0, style=solid];
m2_2214 -> m2_2202  [key=2, style=dotted];
m2_2215 -> m2_2216  [key=0, style=solid];
m2_2215 -> m2_338  [key=2, style=dotted];
m2_2215 -> m2_2217  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2216 -> m2_2217  [key=0, style=solid];
m2_2216 -> m2_11  [key=2, style=dotted];
m2_2217 -> m2_2218  [key=0, style=solid];
m2_2217 -> m2_93  [key=2, style=dotted];
m2_2218 -> m2_2219  [key=0, style=solid];
m2_2218 -> m2_2210  [key=2, style=dotted];
m2_2218 -> m2_11  [key=2, style=dotted];
m2_2219 -> m2_2213  [key=0, style=bold, color=blue];
m2_3074 -> m2_3075  [key=0, style=solid];
m2_3075 -> m2_3076  [key=0, style=solid];
m2_3075 -> m2_264  [key=2, style=dotted];
m2_3075 -> m2_3080  [key=1, style=dashed, color=darkseagreen4, label=sw];
m2_3076 -> m2_3077  [key=0, style=solid];
m2_3076 -> m2_2303  [key=2, style=dotted];
m2_3076 -> m2_3078  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_3076 -> m2_3079  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_3080 -> m2_3081  [key=0, style=solid];
m2_3080 -> m2_2307  [key=2, style=dotted];
m2_3077 -> m2_3078  [key=0, style=solid];
m2_3077 -> m2_213  [key=2, style=dotted];
m2_3077 -> m2_2494  [key=2, style=dotted];
m2_3078 -> m2_3079  [key=0, style=solid];
m2_3078 -> m2_2387  [key=2, style=dotted];
m2_3079 -> m2_3080  [key=0, style=solid];
m2_3079 -> m2_11  [key=2, style=dotted];
m2_3081 -> m2_3082  [key=0, style=solid];
m2_3081 -> m2_11  [key=2, style=dotted];
m2_3082 -> m2_3074  [key=0, style=bold, color=blue];
m2_989 -> m2_990  [key=0, style=solid];
m2_990 -> m2_991  [key=0, style=solid];
m2_990 -> m2_994  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_990 -> m2_990  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_991 -> m2_992  [key=0, style=solid];
m2_991 -> m2_140  [key=2, style=dotted];
m2_991 -> m2_993  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_992 -> m2_989  [key=0, style=bold, color=blue];
m2_745 -> m2_746  [key=0, style=solid];
m2_746 -> m2_747  [key=0, style=solid];
m2_746 -> m2_757  [key=2, style=dotted];
m2_746 -> m2_748  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m2_746 -> m2_749  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m2_746 -> m2_750  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m2_747 -> m2_748  [key=0, style=solid];
m2_748 -> m2_749  [key=0, style=solid];
m2_749 -> m2_750  [key=0, style=solid];
m2_750 -> m2_751  [key=0, style=solid];
m2_750 -> m2_338  [key=2, style=dotted];
m2_751 -> m2_752  [key=0, style=solid];
m2_751 -> m2_11  [key=2, style=dotted];
m2_752 -> m2_753  [key=0, style=solid];
m2_752 -> m2_93  [key=2, style=dotted];
m2_752 -> m2_754  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m2_752 -> m2_755  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m2_753 -> m2_754  [key=0, style=solid];
m2_753 -> m2_11  [key=2, style=dotted];
m2_754 -> m2_755  [key=0, style=solid];
m2_754 -> m2_11  [key=2, style=dotted];
m2_755 -> m2_756  [key=0, style=solid];
m2_755 -> m2_11  [key=2, style=dotted];
m2_756 -> m2_745  [key=0, style=bold, color=blue];
m2_650 -> m2_651  [key=0, style=solid];
m2_650 -> m2_658  [key=2, style=dotted];
m2_650 -> m2_209  [key=2, style=dotted];
m2_650 -> m2_652  [key=1, style=dashed, color=darkseagreen4, label=entry];
m2_650 -> m2_653  [key=1, style=dashed, color=darkseagreen4, label=entry];
m2_649 -> m2_650  [key=0, style=solid];
m2_651 -> m2_652  [key=0, style=solid];
m2_651 -> m2_9  [key=2, style=dotted];
m2_651 -> m2_654  [key=1, style=dashed, color=darkseagreen4, label=defaultJson];
m2_652 -> m2_653  [key=0, style=solid];
m2_652 -> m2_659  [key=2, style=dotted];
m2_652 -> m2_429  [key=2, style=dotted];
m2_652 -> m2_655  [key=1, style=dashed, color=darkseagreen4, label=isoJson];
m2_653 -> m2_654  [key=0, style=solid];
m2_653 -> m2_480  [key=2, style=dotted];
m2_653 -> m2_429  [key=2, style=dotted];
m2_653 -> m2_656  [key=1, style=dashed, color=darkseagreen4, label=javascriptJson];
m2_654 -> m2_655  [key=0, style=solid];
m2_654 -> m2_12  [key=2, style=dotted];
m2_655 -> m2_656  [key=0, style=solid];
m2_655 -> m2_12  [key=2, style=dotted];
m2_656 -> m2_657  [key=0, style=solid];
m2_656 -> m2_12  [key=2, style=dotted];
m2_657 -> m2_649  [key=0, style=bold, color=blue];
m2_2629 -> m2_2630  [key=0, style=solid];
m2_2629 -> m2_2632  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_2630 -> m2_2631  [key=0, style=solid];
m2_2632 -> m2_2633  [key=0, style=solid];
m2_2632 -> m2_2634  [key=2, style=dotted];
m2_2632 -> m2_1498  [key=2, style=dotted];
m2_2632 -> m2_2635  [key=2, style=dotted];
m2_2632 -> m2_2636  [key=2, style=dotted];
m2_2631 -> m2_2632  [key=0, style=solid];
m2_2633 -> m2_2629  [key=0, style=bold, color=blue];
m2_1850 -> m2_1851  [key=0, style=solid];
m2_1851 -> m2_1852  [key=0, style=solid];
m2_1851 -> m2_1857  [key=2, style=dotted];
m2_1852 -> m2_1853  [key=0, style=solid];
m2_1852 -> m2_338  [key=2, style=dotted];
m2_1852 -> m2_1854  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1853 -> m2_1854  [key=0, style=solid];
m2_1853 -> m2_11  [key=2, style=dotted];
m2_1854 -> m2_1855  [key=0, style=solid];
m2_1854 -> m2_93  [key=2, style=dotted];
m2_1855 -> m2_1856  [key=0, style=solid];
m2_1855 -> m2_11  [key=2, style=dotted];
m2_1855 -> m2_1855  [key=1, style=dashed, color=darkseagreen4, label=newStruct];
m2_1856 -> m2_1850  [key=0, style=bold, color=blue];
m2_2081 -> m2_2082  [key=0, style=solid];
m2_2082 -> m2_2083  [key=0, style=solid];
m2_2082 -> m2_10  [key=2, style=dotted];
m2_2083 -> m2_2084  [key=0, style=solid];
m2_2083 -> m2_1499  [key=2, style=dotted];
m2_2084 -> m2_2081  [key=0, style=bold, color=blue];
m2_2409 -> m2_2410  [key=0, style=solid];
m2_2410 -> m2_2411  [key=0, style=solid];
m2_2410 -> m2_208  [key=2, style=dotted];
m2_2410 -> m2_2413  [key=1, style=dashed, color=darkseagreen4, label=d1];
m2_2410 -> m2_2414  [key=1, style=dashed, color=darkseagreen4, label=d1];
m2_2411 -> m2_2412  [key=0, style=solid];
m2_2411 -> m2_9  [key=2, style=dotted];
m2_2413 -> m2_2414  [key=0, style=solid];
m2_2413 -> m2_11  [key=2, style=dotted];
m2_2414 -> m2_2415  [key=0, style=solid];
m2_2414 -> m2_11  [key=2, style=dotted];
m2_2412 -> m2_2413  [key=0, style=solid];
m2_2412 -> m2_93  [key=2, style=dotted];
m2_2412 -> m2_2414  [key=1, style=dashed, color=darkseagreen4, label=d2];
m2_2415 -> m2_2409  [key=0, style=bold, color=blue];
m2_1871 -> m2_1872  [key=0, style=solid];
m2_1872 -> m2_1873  [key=0, style=solid];
m2_1872 -> m2_1865  [key=2, style=dotted];
m2_1872 -> m2_1866  [key=2, style=dotted];
m2_1872 -> m2_29  [key=2, style=dotted];
m2_1872 -> m2_222  [key=2, style=dotted];
m2_1872 -> m2_213  [key=2, style=dotted];
m2_1872 -> m2_716  [key=2, style=dotted];
m2_1872 -> m2_1874  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m2_1873 -> m2_1874  [key=0, style=solid];
m2_1873 -> m2_11  [key=2, style=dotted];
m2_1874 -> m2_1875  [key=0, style=solid];
m2_1874 -> m2_93  [key=2, style=dotted];
m2_1874 -> m2_1876  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m2_1875 -> m2_1876  [key=0, style=solid];
m2_1875 -> m2_222  [key=2, style=dotted];
m2_1875 -> m2_11  [key=2, style=dotted];
m2_1876 -> m2_1877  [key=0, style=solid];
m2_1876 -> m2_29  [key=2, style=dotted];
m2_1876 -> m2_11  [key=2, style=dotted];
m2_1877 -> m2_1871  [key=0, style=bold, color=blue];
m2_528 -> m2_529  [key=0, style=solid];
m2_529 -> m2_530  [key=0, style=solid];
m2_529 -> m2_529  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_530 -> m2_531  [key=0, style=solid];
m2_530 -> m2_93  [key=2, style=dotted];
m2_530 -> m2_532  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m2_530 -> m2_533  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m2_531 -> m2_532  [key=0, style=solid];
m2_531 -> m2_11  [key=2, style=dotted];
m2_532 -> m2_533  [key=0, style=solid];
m2_532 -> m2_535  [key=2, style=dotted];
m2_532 -> m2_11  [key=2, style=dotted];
m2_533 -> m2_534  [key=0, style=solid];
m2_533 -> m2_11  [key=2, style=dotted];
m2_534 -> m2_528  [key=0, style=bold, color=blue];
m2_1425 -> m2_1462  [key=0, style=solid];
m2_1425 -> m2_1463  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1425 -> m2_1464  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1425 -> m2_1465  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1425 -> m2_1466  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1425 -> m2_1467  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1425 -> m2_1468  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1425 -> m2_1469  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1462 -> m2_1463  [key=0, style=solid];
m2_1463 -> m2_1464  [key=0, style=solid];
m2_1464 -> m2_1465  [key=0, style=solid];
m2_1465 -> m2_1466  [key=0, style=solid];
m2_1466 -> m2_1467  [key=0, style=solid];
m2_1467 -> m2_1468  [key=0, style=solid];
m2_1468 -> m2_1469  [key=0, style=solid];
m2_1469 -> m2_1470  [key=0, style=solid];
m2_1470 -> m2_1425  [key=0, style=bold, color=blue];
m2_1804 -> m2_1805  [key=0, style=solid];
m2_1805 -> m2_1806  [key=0, style=solid];
m2_1805 -> m2_338  [key=2, style=dotted];
m2_1805 -> m2_1807  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m2_1806 -> m2_1807  [key=0, style=solid];
m2_1806 -> m2_11  [key=2, style=dotted];
m2_1807 -> m2_1808  [key=0, style=solid];
m2_1807 -> m2_10  [key=2, style=dotted];
m2_1807 -> m2_1809  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1807 -> m2_1810  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1807 -> m2_1811  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1808 -> m2_1809  [key=0, style=solid];
m2_1808 -> m2_11  [key=2, style=dotted];
m2_1809 -> m2_1810  [key=0, style=solid];
m2_1809 -> m2_11  [key=2, style=dotted];
m2_1810 -> m2_1811  [key=0, style=solid];
m2_1810 -> m2_11  [key=2, style=dotted];
m2_1811 -> m2_1812  [key=0, style=solid];
m2_1811 -> m2_11  [key=2, style=dotted];
m2_1812 -> m2_1804  [key=0, style=bold, color=blue];
m2_2979 -> m2_2980  [key=0, style=solid];
m2_2980 -> m2_2981  [key=0, style=solid];
m2_2980 -> m2_2988  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2980 -> m2_2980  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2981 -> m2_2982  [key=0, style=solid];
m2_2981 -> m2_93  [key=2, style=dotted];
m2_2981 -> m2_2983  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2981 -> m2_2984  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2981 -> m2_2985  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2981 -> m2_2986  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2981 -> m2_2987  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2988 -> m2_2989  [key=0, style=solid];
m2_2988 -> m2_11  [key=2, style=dotted];
m2_2982 -> m2_2983  [key=0, style=solid];
m2_2982 -> m2_11  [key=2, style=dotted];
m2_2983 -> m2_2984  [key=0, style=solid];
m2_2983 -> m2_11  [key=2, style=dotted];
m2_2984 -> m2_2985  [key=0, style=solid];
m2_2984 -> m2_2910  [key=2, style=dotted];
m2_2984 -> m2_11  [key=2, style=dotted];
m2_2985 -> m2_2986  [key=0, style=solid];
m2_2985 -> m2_2910  [key=2, style=dotted];
m2_2985 -> m2_11  [key=2, style=dotted];
m2_2986 -> m2_2987  [key=0, style=solid];
m2_2986 -> m2_2910  [key=2, style=dotted];
m2_2986 -> m2_11  [key=2, style=dotted];
m2_2987 -> m2_2988  [key=0, style=solid];
m2_2987 -> m2_9  [key=2, style=dotted];
m2_2989 -> m2_2979  [key=0, style=bold, color=blue];
m2_404 -> m2_405  [key=0, style=solid];
m2_405 -> m2_406  [key=0, style=solid];
m2_405 -> m2_412  [key=2, style=dotted];
m2_406 -> m2_407  [key=0, style=solid];
m2_406 -> m2_9  [key=2, style=dotted];
m2_407 -> m2_408  [key=0, style=solid];
m2_407 -> m2_93  [key=2, style=dotted];
m2_407 -> m2_409  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_407 -> m2_410  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_408 -> m2_409  [key=0, style=solid];
m2_408 -> m2_11  [key=2, style=dotted];
m2_409 -> m2_410  [key=0, style=solid];
m2_409 -> m2_11  [key=2, style=dotted];
m2_410 -> m2_411  [key=0, style=solid];
m2_410 -> m2_11  [key=2, style=dotted];
m2_411 -> m2_404  [key=0, style=bold, color=blue];
m2_1839 -> m2_1840  [key=0, style=solid];
m2_1840 -> m2_1841  [key=0, style=solid];
m2_1840 -> m2_1843  [key=1, style=dashed, color=darkseagreen4, label=classRef];
m2_1841 -> m2_1842  [key=0, style=solid];
m2_1841 -> m2_1845  [key=2, style=dotted];
m2_1841 -> m2_1846  [key=2, style=dotted];
m2_1843 -> m2_1844  [key=0, style=solid];
m2_1843 -> m2_140  [key=2, style=dotted];
m2_1843 -> m2_1847  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1842 -> m2_1843  [key=0, style=solid];
m2_1842 -> m2_338  [key=2, style=dotted];
m2_1842 -> m2_1848  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1844 -> m2_1839  [key=0, style=bold, color=blue];
m2_349 -> m2_350  [key=0, style=solid];
m2_350 -> m2_351  [key=0, style=solid];
m2_350 -> m2_356  [key=2, style=dotted];
m2_350 -> m2_354  [key=1, style=dashed, color=darkseagreen4, label=guid];
m2_351 -> m2_352  [key=0, style=solid];
m2_351 -> m2_357  [key=2, style=dotted];
m2_351 -> m2_9  [key=2, style=dotted];
m2_351 -> m2_353  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_354 -> m2_355  [key=0, style=solid];
m2_354 -> m2_11  [key=2, style=dotted];
m2_352 -> m2_353  [key=0, style=solid];
m2_352 -> m2_11  [key=2, style=dotted];
m2_353 -> m2_354  [key=0, style=solid];
m2_353 -> m2_93  [key=2, style=dotted];
m2_355 -> m2_349  [key=0, style=bold, color=blue];
m2_1950 -> m2_1951  [key=0, style=solid];
m2_1951 -> m2_1952  [key=0, style=solid];
m2_1952 -> m2_1950  [key=0, style=bold, color=blue];
m2_2566 -> m2_2567  [key=0, style=solid];
m2_2567 -> m2_2568  [key=0, style=solid];
m2_2567 -> m2_140  [key=2, style=dotted];
m2_2567 -> m2_2569  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2568 -> m2_2566  [key=0, style=bold, color=blue];
m2_271 -> m2_272  [key=0, style=solid];
m2_272 -> m2_273  [key=0, style=solid];
m2_272 -> m2_275  [key=2, style=dotted];
m2_272 -> m2_9  [key=2, style=dotted];
m2_273 -> m2_274  [key=0, style=solid];
m2_273 -> m2_11  [key=2, style=dotted];
m2_274 -> m2_271  [key=0, style=bold, color=blue];
m2_1791 -> m2_1792  [key=0, style=solid];
m2_1792 -> m2_1793  [key=0, style=solid];
m2_1792 -> m2_1794  [key=2, style=dotted];
m2_1793 -> m2_1791  [key=0, style=bold, color=blue];
m2_2116 -> m2_2117  [key=0, style=solid];
m2_2117 -> m2_2118  [key=0, style=solid];
m2_2117 -> m2_2121  [key=2, style=dotted];
m2_2118 -> m2_2119  [key=0, style=solid];
m2_2118 -> m2_9  [key=2, style=dotted];
m2_2119 -> m2_2120  [key=0, style=solid];
m2_2119 -> m2_11  [key=2, style=dotted];
m2_2120 -> m2_2116  [key=0, style=bold, color=blue];
m2_2037 -> m2_2038  [key=0, style=solid];
m2_2038 -> m2_2039  [key=0, style=solid];
m2_2039 -> m2_2040  [key=0, style=solid];
m2_2040 -> m2_2037  [key=0, style=bold, color=blue];
m2_327 -> m2_328  [key=0, style=solid];
m2_328 -> m2_329  [key=0, style=solid];
m2_328 -> m2_337  [key=2, style=dotted];
m2_328 -> m2_338  [key=2, style=dotted];
m2_328 -> m2_331  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_328 -> m2_332  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_329 -> m2_330  [key=0, style=solid];
m2_329 -> m2_277  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m2_331 -> m2_332  [key=0, style=solid];
m2_331 -> m2_11  [key=2, style=dotted];
m2_332 -> m2_333  [key=0, style=solid];
m2_332 -> m2_93  [key=2, style=dotted];
m2_332 -> m2_334  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_332 -> m2_335  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_330 -> m2_331  [key=0, style=solid];
m2_333 -> m2_334  [key=0, style=solid];
m2_333 -> m2_11  [key=2, style=dotted];
m2_334 -> m2_335  [key=0, style=solid];
m2_334 -> m2_11  [key=2, style=dotted];
m2_335 -> m2_336  [key=0, style=solid];
m2_335 -> m2_11  [key=2, style=dotted];
m2_336 -> m2_327  [key=0, style=bold, color=blue];
m2_1827 -> m2_1828  [key=0, style=solid];
m2_1828 -> m2_1829  [key=0, style=solid];
m2_1828 -> m2_263  [key=2, style=dotted];
m2_1828 -> m2_1830  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m2_1828 -> m2_1833  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m2_1829 -> m2_1830  [key=0, style=solid];
m2_1829 -> m2_659  [key=2, style=dotted];
m2_1829 -> m2_1838  [key=2, style=dotted];
m2_1830 -> m2_1831  [key=0, style=solid];
m2_1833 -> m2_1834  [key=0, style=solid];
m2_1833 -> m2_270  [key=2, style=dotted];
m2_1833 -> m2_1835  [key=1, style=dashed, color=darkseagreen4, label=z];
m2_1833 -> m2_1836  [key=1, style=dashed, color=darkseagreen4, label=z];
m2_1831 -> m2_1832  [key=0, style=solid];
m2_1831 -> m2_1831  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1832 -> m2_1833  [key=0, style=solid];
m2_1832 -> m2_268  [key=2, style=dotted];
m2_1832 -> m2_269  [key=2, style=dotted];
m2_1834 -> m2_1835  [key=0, style=solid];
m2_1834 -> m2_11  [key=2, style=dotted];
m2_1835 -> m2_1836  [key=0, style=solid];
m2_1835 -> m2_11  [key=2, style=dotted];
m2_1836 -> m2_1837  [key=0, style=solid];
m2_1836 -> m2_11  [key=2, style=dotted];
m2_1837 -> m2_1827  [key=0, style=bold, color=blue];
m2_809 -> m2_810  [key=0, style=solid];
m2_810 -> m2_811  [key=0, style=solid];
m2_810 -> m2_810  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_811 -> m2_812  [key=0, style=solid];
m2_811 -> m2_818  [key=2, style=dotted];
m2_812 -> m2_813  [key=0, style=solid];
m2_812 -> m2_819  [key=2, style=dotted];
m2_812 -> m2_93  [key=2, style=dotted];
m2_812 -> m2_814  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_812 -> m2_815  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_812 -> m2_816  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_813 -> m2_814  [key=0, style=solid];
m2_813 -> m2_674  [key=2, style=dotted];
m2_814 -> m2_815  [key=0, style=solid];
m2_814 -> m2_11  [key=2, style=dotted];
m2_815 -> m2_816  [key=0, style=solid];
m2_815 -> m2_11  [key=2, style=dotted];
m2_816 -> m2_817  [key=0, style=solid];
m2_816 -> m2_11  [key=2, style=dotted];
m2_817 -> m2_809  [key=0, style=bold, color=blue];
m2_2391 -> m2_2392  [key=0, style=solid];
m2_2392 -> m2_2393  [key=0, style=solid];
m2_2393 -> m2_2394  [key=0, style=solid];
m2_2393 -> m2_2401  [key=2, style=dotted];
m2_2393 -> m2_2395  [key=1, style=dashed, color=darkseagreen4, label=testCulture];
m2_2394 -> m2_2395  [key=0, style=solid];
m2_2395 -> m2_2396  [key=0, style=solid];
m2_2396 -> m2_2397  [key=0, style=solid];
m2_2396 -> m2_2396  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2397 -> m2_2398  [key=0, style=solid];
m2_2397 -> m2_93  [key=2, style=dotted];
m2_2397 -> m2_2399  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_2398 -> m2_2399  [key=0, style=solid];
m2_2398 -> m2_11  [key=2, style=dotted];
m2_2399 -> m2_2400  [key=0, style=solid];
m2_2399 -> m2_11  [key=2, style=dotted];
m2_2400 -> m2_2391  [key=0, style=bold, color=blue];
m2_660 -> m2_661  [key=0, style=solid];
m2_661 -> m2_662  [key=0, style=solid];
m2_661 -> m2_673  [key=2, style=dotted];
m2_661 -> m2_663  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_661 -> m2_664  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_661 -> m2_665  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_661 -> m2_669  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_661 -> m2_670  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_661 -> m2_671  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_662 -> m2_663  [key=0, style=solid];
m2_662 -> m2_52  [key=2, style=dotted];
m2_663 -> m2_664  [key=0, style=solid];
m2_663 -> m2_208  [key=2, style=dotted];
m2_664 -> m2_665  [key=0, style=solid];
m2_664 -> m2_208  [key=2, style=dotted];
m2_665 -> m2_666  [key=0, style=solid];
m2_665 -> m2_338  [key=2, style=dotted];
m2_665 -> m2_667  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_669 -> m2_670  [key=0, style=solid];
m2_669 -> m2_675  [key=2, style=dotted];
m2_669 -> m2_11  [key=2, style=dotted];
m2_670 -> m2_671  [key=0, style=solid];
m2_670 -> m2_675  [key=2, style=dotted];
m2_670 -> m2_11  [key=2, style=dotted];
m2_671 -> m2_672  [key=0, style=solid];
m2_671 -> m2_675  [key=2, style=dotted];
m2_671 -> m2_11  [key=2, style=dotted];
m2_666 -> m2_667  [key=0, style=solid];
m2_666 -> m2_11  [key=2, style=dotted];
m2_667 -> m2_668  [key=0, style=solid];
m2_667 -> m2_93  [key=2, style=dotted];
m2_667 -> m2_669  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m2_667 -> m2_670  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m2_667 -> m2_671  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m2_668 -> m2_669  [key=0, style=solid];
m2_668 -> m2_674  [key=2, style=dotted];
m2_672 -> m2_660  [key=0, style=bold, color=blue];
m2_2355 -> m2_2356  [key=0, style=solid];
m2_2356 -> m2_2357  [key=0, style=solid];
m2_2356 -> m2_2356  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m2_2357 -> m2_2358  [key=0, style=solid];
m2_2357 -> m2_827  [key=2, style=dotted];
m2_2357 -> m2_2360  [key=1, style=dashed, color=darkseagreen4, label=uri];
m2_2358 -> m2_2359  [key=0, style=solid];
m2_2358 -> m2_9  [key=2, style=dotted];
m2_2360 -> m2_2361  [key=0, style=solid];
m2_2360 -> m2_11  [key=2, style=dotted];
m2_2359 -> m2_2360  [key=0, style=solid];
m2_2359 -> m2_93  [key=2, style=dotted];
m2_2361 -> m2_2355  [key=0, style=bold, color=blue];
m2_734 -> m2_735  [key=0, style=solid];
m2_735 -> m2_736  [key=0, style=solid];
m2_735 -> m2_738  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_735 -> m2_735  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_736 -> m2_737  [key=0, style=solid];
m2_736 -> m2_93  [key=2, style=dotted];
m2_738 -> m2_739  [key=0, style=solid];
m2_738 -> m2_93  [key=2, style=dotted];
m2_738 -> m2_740  [key=1, style=dashed, color=darkseagreen4, label=n];
m2_738 -> m2_741  [key=1, style=dashed, color=darkseagreen4, label=n];
m2_738 -> m2_742  [key=1, style=dashed, color=darkseagreen4, label=n];
m2_738 -> m2_743  [key=1, style=dashed, color=darkseagreen4, label=n];
m2_737 -> m2_738  [key=0, style=solid];
m2_737 -> m2_11  [key=2, style=dotted];
m2_739 -> m2_740  [key=0, style=solid];
m2_739 -> m2_356  [key=2, style=dotted];
m2_739 -> m2_11  [key=2, style=dotted];
m2_740 -> m2_741  [key=0, style=solid];
m2_740 -> m2_356  [key=2, style=dotted];
m2_740 -> m2_11  [key=2, style=dotted];
m2_741 -> m2_742  [key=0, style=solid];
m2_741 -> m2_11  [key=2, style=dotted];
m2_742 -> m2_743  [key=0, style=solid];
m2_742 -> m2_11  [key=2, style=dotted];
m2_743 -> m2_744  [key=0, style=solid];
m2_743 -> m2_11  [key=2, style=dotted];
m2_744 -> m2_734  [key=0, style=bold, color=blue];
m2_1972 -> m2_1973  [key=0, style=solid];
m2_1973 -> m2_1974  [key=0, style=solid];
m2_1973 -> m2_1988  [key=2, style=dotted];
m2_1973 -> m2_1975  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m2_1973 -> m2_1979  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m2_1974 -> m2_1975  [key=0, style=solid];
m2_1974 -> m2_1989  [key=2, style=dotted];
m2_1975 -> m2_1976  [key=0, style=solid];
m2_1975 -> m2_1989  [key=2, style=dotted];
m2_1979 -> m2_1980  [key=0, style=solid];
m2_1979 -> m2_9  [key=2, style=dotted];
m2_1976 -> m2_1977  [key=0, style=solid];
m2_1976 -> m2_1988  [key=2, style=dotted];
m2_1976 -> m2_1978  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m2_1976 -> m2_1983  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m2_1977 -> m2_1978  [key=0, style=solid];
m2_1977 -> m2_1989  [key=2, style=dotted];
m2_1978 -> m2_1979  [key=0, style=solid];
m2_1983 -> m2_1984  [key=0, style=solid];
m2_1983 -> m2_9  [key=2, style=dotted];
m2_1980 -> m2_1981  [key=0, style=solid];
m2_1980 -> m2_1990  [key=2, style=dotted];
m2_1980 -> m2_1982  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_1981 -> m2_1982  [key=0, style=solid];
m2_1981 -> m2_11  [key=2, style=dotted];
m2_1982 -> m2_1983  [key=0, style=solid];
m2_1982 -> m2_11  [key=2, style=dotted];
m2_1984 -> m2_1985  [key=0, style=solid];
m2_1984 -> m2_1990  [key=2, style=dotted];
m2_1984 -> m2_1986  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_1985 -> m2_1986  [key=0, style=solid];
m2_1985 -> m2_11  [key=2, style=dotted];
m2_1986 -> m2_1987  [key=0, style=solid];
m2_1986 -> m2_11  [key=2, style=dotted];
m2_1987 -> m2_1972  [key=0, style=bold, color=blue];
m2_550 -> m2_551  [key=0, style=solid];
m2_551 -> m2_552  [key=0, style=solid];
m2_551 -> m2_551  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_552 -> m2_553  [key=0, style=solid];
m2_552 -> m2_93  [key=2, style=dotted];
m2_553 -> m2_554  [key=0, style=solid];
m2_553 -> m2_11  [key=2, style=dotted];
m2_554 -> m2_550  [key=0, style=bold, color=blue];
m2_1577 -> m2_1578  [key=0, style=solid];
m2_1578 -> m2_1579  [key=0, style=solid];
m2_1578 -> m2_208  [key=2, style=dotted];
m2_1578 -> m2_1580  [key=1, style=dashed, color=darkseagreen4, label=list];
m2_1578 -> m2_1581  [key=1, style=dashed, color=darkseagreen4, label=list];
m2_1579 -> m2_1580  [key=0, style=solid];
m2_1579 -> m2_1590  [key=2, style=dotted];
m2_1579 -> m2_158  [key=2, style=dotted];
m2_1580 -> m2_1581  [key=0, style=solid];
m2_1580 -> m2_1590  [key=2, style=dotted];
m2_1580 -> m2_158  [key=2, style=dotted];
m2_1581 -> m2_1582  [key=0, style=solid];
m2_1581 -> m2_9  [key=2, style=dotted];
m2_1581 -> m2_1583  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1582 -> m2_1583  [key=0, style=solid];
m2_1582 -> m2_11  [key=2, style=dotted];
m2_1583 -> m2_1584  [key=0, style=solid];
m2_1583 -> m2_93  [key=2, style=dotted];
m2_1583 -> m2_1585  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_1583 -> m2_1586  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_1583 -> m2_1587  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_1583 -> m2_1588  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_1584 -> m2_1585  [key=0, style=solid];
m2_1584 -> m2_11  [key=2, style=dotted];
m2_1585 -> m2_1586  [key=0, style=solid];
m2_1585 -> m2_11  [key=2, style=dotted];
m2_1586 -> m2_1587  [key=0, style=solid];
m2_1586 -> m2_11  [key=2, style=dotted];
m2_1587 -> m2_1588  [key=0, style=solid];
m2_1587 -> m2_11  [key=2, style=dotted];
m2_1588 -> m2_1589  [key=0, style=solid];
m2_1588 -> m2_11  [key=2, style=dotted];
m2_1589 -> m2_1577  [key=0, style=bold, color=blue];
m2_3216 -> m2_3217  [key=0, style=solid];
m2_3217 -> m2_3218  [key=0, style=solid];
m2_3218 -> m2_3216  [key=0, style=bold, color=blue];
m2_1514 -> m2_1515  [key=0, style=solid];
m2_1515 -> m2_1516  [key=0, style=solid];
m2_1515 -> m2_1519  [key=2, style=dotted];
m2_1515 -> m2_1520  [key=2, style=dotted];
m2_1515 -> m2_1521  [key=2, style=dotted];
m2_1516 -> m2_1517  [key=0, style=solid];
m2_1516 -> m2_1522  [key=2, style=dotted];
m2_1516 -> m2_1523  [key=2, style=dotted];
m2_1516 -> m2_429  [key=2, style=dotted];
m2_1517 -> m2_1518  [key=0, style=solid];
m2_1517 -> m2_11  [key=2, style=dotted];
m2_1518 -> m2_1514  [key=0, style=bold, color=blue];
m2_2188 -> m2_2189  [key=0, style=solid];
m2_2189 -> m2_2190  [key=0, style=solid];
m2_2189 -> m2_1536  [key=2, style=dotted];
m2_2190 -> m2_2188  [key=0, style=bold, color=blue];
m2_1636 -> m2_1637  [key=0, style=solid];
m2_1637 -> m2_1638  [key=0, style=solid];
m2_1637 -> m2_1609  [key=2, style=dotted];
m2_1638 -> m2_1636  [key=0, style=bold, color=blue];
m2_2292 -> m2_2293  [key=0, style=solid];
m2_2293 -> m2_2294  [key=0, style=solid];
m2_2294 -> m2_2295  [key=0, style=solid];
m2_2294 -> m2_2302  [key=2, style=dotted];
m2_2294 -> m2_2297  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2295 -> m2_2296  [key=0, style=solid];
m2_2295 -> m2_264  [key=2, style=dotted];
m2_2295 -> m2_2299  [key=1, style=dashed, color=darkseagreen4, label=sw];
m2_2297 -> m2_2298  [key=0, style=solid];
m2_2297 -> m2_2304  [key=2, style=dotted];
m2_2297 -> m2_2305  [key=2, style=dotted];
m2_2296 -> m2_2297  [key=0, style=solid];
m2_2296 -> m2_2303  [key=2, style=dotted];
m2_2296 -> m2_2298  [key=1, style=dashed, color=darkseagreen4, label=jw];
m2_2299 -> m2_2300  [key=0, style=solid];
m2_2299 -> m2_2307  [key=2, style=dotted];
m2_2298 -> m2_2299  [key=0, style=solid];
m2_2298 -> m2_2306  [key=2, style=dotted];
m2_2300 -> m2_2301  [key=0, style=solid];
m2_2300 -> m2_11  [key=2, style=dotted];
m2_2301 -> m2_2292  [key=0, style=bold, color=blue];
m2_159 -> m2_160  [key=0, style=solid];
m2_160 -> m2_161  [key=0, style=solid];
m2_160 -> m2_165  [key=2, style=dotted];
m2_160 -> m2_163  [key=1, style=dashed, color=darkseagreen4, label=r1];
m2_161 -> m2_162  [key=0, style=solid];
m2_161 -> m2_9  [key=2, style=dotted];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_11  [key=2, style=dotted];
m2_162 -> m2_163  [key=0, style=solid];
m2_162 -> m2_93  [key=2, style=dotted];
m2_164 -> m2_159  [key=0, style=bold, color=blue];
m2_1824 -> m2_1825  [key=0, style=solid];
m2_1825 -> m2_1826  [key=0, style=solid];
m2_1826 -> m2_1824  [key=0, style=bold, color=blue];
m2_2041 -> m2_2042  [key=0, style=solid];
m2_2041 -> m2_2043  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_2042 -> m2_2043  [key=0, style=solid];
m2_2043 -> m2_2044  [key=0, style=solid];
m2_2044 -> m2_2045  [key=0, style=solid];
m2_2045 -> m2_2041  [key=0, style=bold, color=blue];
m2_758 -> m2_759  [key=0, style=solid];
m2_759 -> m2_758  [key=0, style=bold, color=blue];
m2_1258 -> m2_1259  [key=0, style=solid];
m2_1258 -> m2_1261  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_1259 -> m2_1260  [key=0, style=solid];
m2_1259 -> m2_1261  [key=0, style=solid];
m2_1261 -> m2_1262  [key=0, style=solid];
m2_1261 -> m2_1263  [key=0, style=solid];
m2_1260 -> m2_1263  [key=0, style=solid];
m2_1262 -> m2_1261  [key=0, style=solid];
m2_1262 -> m2_1262  [key=1, style=dashed, color=darkseagreen4, label=entry];
m2_1263 -> m2_1258  [key=0, style=bold, color=blue];
m2_1882 -> m2_1883  [key=0, style=solid];
m2_1883 -> m2_1884  [key=0, style=solid];
m2_1883 -> m2_1886  [key=2, style=dotted];
m2_1883 -> m2_338  [key=2, style=dotted];
m2_1884 -> m2_1885  [key=0, style=solid];
m2_1884 -> m2_11  [key=2, style=dotted];
m2_1885 -> m2_1882  [key=0, style=bold, color=blue];
m2_290 -> m2_291  [key=0, style=solid];
m2_291 -> m2_292  [key=0, style=solid];
m2_291 -> m2_291  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_292 -> m2_293  [key=0, style=solid];
m2_292 -> m2_93  [key=2, style=dotted];
m2_292 -> m2_294  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_292 -> m2_295  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_292 -> m2_296  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_292 -> m2_297  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_292 -> m2_298  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_293 -> m2_294  [key=0, style=solid];
m2_293 -> m2_11  [key=2, style=dotted];
m2_294 -> m2_295  [key=0, style=solid];
m2_294 -> m2_11  [key=2, style=dotted];
m2_295 -> m2_296  [key=0, style=solid];
m2_295 -> m2_11  [key=2, style=dotted];
m2_296 -> m2_297  [key=0, style=solid];
m2_296 -> m2_11  [key=2, style=dotted];
m2_297 -> m2_298  [key=0, style=solid];
m2_297 -> m2_11  [key=2, style=dotted];
m2_298 -> m2_299  [key=0, style=solid];
m2_298 -> m2_11  [key=2, style=dotted];
m2_299 -> m2_290  [key=0, style=bold, color=blue];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_51  [key=1, style=dashed, color=darkseagreen4, label="ref Newtonsoft.Json.Utilities.DateTimeParser"];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_107  [key=2, style=dotted];
m2_101 -> m2_9  [key=2, style=dotted];
m2_101 -> m2_73  [key=1, style=dashed, color=darkseagreen4, label="ref Newtonsoft.Json.Utilities.DateTimeParser"];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_11  [key=2, style=dotted];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_93  [key=2, style=dotted];
m2_103 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_11  [key=2, style=dotted];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_11  [key=2, style=dotted];
m2_106 -> m2_100  [key=0, style=bold, color=blue];
m2_177 -> m2_178  [key=0, style=solid];
m2_178 -> m2_179  [key=0, style=solid];
m2_178 -> m2_180  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_178 -> m2_182  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_178 -> m2_183  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_178 -> m2_178  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_179 -> m2_180  [key=0, style=solid];
m2_179 -> m2_188  [key=2, style=dotted];
m2_180 -> m2_181  [key=0, style=solid];
m2_180 -> m2_189  [key=2, style=dotted];
m2_180 -> m2_186  [key=1, style=dashed, color=darkseagreen4, label=javaScriptSerializerResult];
m2_182 -> m2_183  [key=0, style=solid];
m2_182 -> m2_174  [key=2, style=dotted];
m2_182 -> m2_175  [key=2, style=dotted];
m2_182 -> m2_176  [key=2, style=dotted];
m2_182 -> m2_185  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_93  [key=2, style=dotted];
m2_183 -> m2_185  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m2_183 -> m2_186  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m2_181 -> m2_182  [key=0, style=solid];
m2_181 -> m2_54  [key=2, style=dotted];
m2_186 -> m2_187  [key=0, style=solid];
m2_186 -> m2_11  [key=2, style=dotted];
m2_185 -> m2_186  [key=0, style=solid];
m2_185 -> m2_11  [key=2, style=dotted];
m2_184 -> m2_185  [key=0, style=solid];
m2_184 -> m2_11  [key=2, style=dotted];
m2_187 -> m2_177  [key=0, style=bold, color=blue];
m2_137 -> m2_138  [key=0, style=solid];
m2_138 -> m2_139  [key=0, style=solid];
m2_138 -> m2_140  [key=2, style=dotted];
m2_138 -> m2_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_139 -> m2_137  [key=0, style=bold, color=blue];
m2_29 -> m2_85  [key=0, style=solid, color=green];
m2_29 -> m2_20  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Parse2Digit"];
m2_29 -> m2_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Parse2Digit"];
m2_29 -> m2_34  [key=3, color=darkorchid, style=bold, label="Parameter variable int start"];
m2_29 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_29 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_29 -> m2_33  [key=3, color=darkorchid, style=bold, label="Parameter variable int start"];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_88  [key=1, style=dashed, color=darkseagreen4, label=digit1];
m2_86 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label=digit1];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label="out int"];
m2_91 -> m2_86  [key=0, style=bold, color=blue];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label=digit2];
m2_87 -> m2_92  [key=2, style=dotted];
m2_87 -> m2_9  [key=2, style=dotted];
m2_88 -> m2_91  [key=0, style=solid];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_93  [key=2, style=dotted];
m2_88 -> m2_90  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_11  [key=2, style=dotted];
m2_90 -> m2_93  [key=0, style=solid];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_11  [key=2, style=dotted];
m2_90 -> m2_2657  [key=3, color=darkorchid, style=bold, label="Parameter variable int num"];
m2_90 -> m2_34  [key=3, color=darkorchid, style=bold, label="Parameter variable int start"];
m2_90 -> m2_3  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Parse2Digit"];
m2_90 -> m2_4  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Parse2Digit"];
m2_2637 -> m2_2638  [key=0, style=solid];
m2_2638 -> m2_2639  [key=0, style=solid];
m2_2638 -> m2_79  [key=2, style=dotted];
m2_2638 -> m2_2640  [key=2, style=dotted];
m2_2639 -> m2_2637  [key=0, style=bold, color=blue];
m2_1955 -> m2_1956  [key=0, style=solid];
m2_1956 -> m2_1957  [key=0, style=solid];
m2_1957 -> m2_1955  [key=0, style=bold, color=blue];
m2_2872 -> m2_2873  [key=0, style=solid];
m2_2873 -> m2_2874  [key=0, style=solid];
m2_2873 -> m2_2880  [key=2, style=dotted];
m2_2873 -> m2_2875  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2873 -> m2_2876  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2873 -> m2_2877  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_2874 -> m2_2875  [key=0, style=solid];
m2_2875 -> m2_2876  [key=0, style=solid];
m2_2876 -> m2_2877  [key=0, style=solid];
m2_2877 -> m2_2878  [key=0, style=solid];
m2_2877 -> m2_9  [key=2, style=dotted];
m2_2878 -> m2_2879  [key=0, style=solid];
m2_2878 -> m2_11  [key=2, style=dotted];
m2_2879 -> m2_2872  [key=0, style=bold, color=blue];
m2_2270 -> m2_2271  [key=0, style=solid];
m2_2271 -> m2_2272  [key=0, style=solid];
m2_2271 -> m2_2269  [key=2, style=dotted];
m2_2271 -> m2_356  [key=2, style=dotted];
m2_2271 -> m2_2281  [key=2, style=dotted];
m2_2271 -> m2_222  [key=2, style=dotted];
m2_2271 -> m2_827  [key=2, style=dotted];
m2_2271 -> m2_2275  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2271 -> m2_2276  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2271 -> m2_2277  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2271 -> m2_2278  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2271 -> m2_2279  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2272 -> m2_2273  [key=0, style=solid];
m2_2272 -> m2_338  [key=2, style=dotted];
m2_2272 -> m2_2274  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2275 -> m2_2276  [key=0, style=solid];
m2_2275 -> m2_11  [key=2, style=dotted];
m2_2276 -> m2_2277  [key=0, style=solid];
m2_2276 -> m2_11  [key=2, style=dotted];
m2_2277 -> m2_2278  [key=0, style=solid];
m2_2277 -> m2_11  [key=2, style=dotted];
m2_2278 -> m2_2279  [key=0, style=solid];
m2_2278 -> m2_11  [key=2, style=dotted];
m2_2279 -> m2_2280  [key=0, style=solid];
m2_2279 -> m2_11  [key=2, style=dotted];
m2_2273 -> m2_2274  [key=0, style=solid];
m2_2273 -> m2_11  [key=2, style=dotted];
m2_2274 -> m2_2275  [key=0, style=solid];
m2_2274 -> m2_93  [key=2, style=dotted];
m2_2274 -> m2_2276  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2274 -> m2_2277  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2274 -> m2_2278  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2274 -> m2_2279  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2280 -> m2_2270  [key=0, style=bold, color=blue];
m2_1471 -> m2_1472  [key=0, style=solid];
m2_1472 -> m2_1471  [key=0, style=bold, color=blue];
m2_1697 -> m2_1698  [key=0, style=solid];
m2_1697 -> m2_1699  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1698 -> m2_1699  [key=0, style=solid];
m2_1699 -> m2_1700  [key=0, style=solid];
m2_1700 -> m2_1697  [key=0, style=bold, color=blue];
m2_2176 -> m2_2177  [key=0, style=solid];
m2_2177 -> m2_2178  [key=0, style=solid];
m2_2177 -> m2_1536  [key=2, style=dotted];
m2_2178 -> m2_2176  [key=0, style=bold, color=blue];
m2_2144 -> m2_2145  [key=0, style=solid];
m2_2145 -> m2_2146  [key=0, style=solid];
m2_2145 -> m2_2140  [key=2, style=dotted];
m2_2145 -> m2_2147  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2145 -> m2_2148  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2145 -> m2_2151  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2145 -> m2_2152  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2146 -> m2_2147  [key=0, style=solid];
m2_2146 -> m2_326  [key=2, style=dotted];
m2_2147 -> m2_2148  [key=0, style=solid];
m2_2147 -> m2_326  [key=2, style=dotted];
m2_2148 -> m2_2149  [key=0, style=solid];
m2_2148 -> m2_338  [key=2, style=dotted];
m2_2148 -> m2_2150  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2151 -> m2_2152  [key=0, style=solid];
m2_2151 -> m2_11  [key=2, style=dotted];
m2_2152 -> m2_2153  [key=0, style=solid];
m2_2152 -> m2_11  [key=2, style=dotted];
m2_2149 -> m2_2150  [key=0, style=solid];
m2_2149 -> m2_11  [key=2, style=dotted];
m2_2150 -> m2_2151  [key=0, style=solid];
m2_2150 -> m2_93  [key=2, style=dotted];
m2_2150 -> m2_2152  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2150 -> m2_2153  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2150 -> m2_2154  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2153 -> m2_2154  [key=0, style=solid];
m2_2153 -> m2_11  [key=2, style=dotted];
m2_2154 -> m2_2155  [key=0, style=solid];
m2_2154 -> m2_11  [key=2, style=dotted];
m2_2155 -> m2_2144  [key=0, style=bold, color=blue];
m2_777 -> m2_778  [key=0, style=solid];
m2_778 -> m2_779  [key=0, style=solid];
m2_778 -> m2_778  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_779 -> m2_780  [key=0, style=solid];
m2_779 -> m2_213  [key=2, style=dotted];
m2_779 -> m2_461  [key=2, style=dotted];
m2_779 -> m2_781  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_779 -> m2_782  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_780 -> m2_781  [key=0, style=solid];
m2_780 -> m2_11  [key=2, style=dotted];
m2_781 -> m2_782  [key=0, style=solid];
m2_781 -> m2_11  [key=2, style=dotted];
m2_782 -> m2_783  [key=0, style=solid];
m2_782 -> m2_11  [key=2, style=dotted];
m2_783 -> m2_777  [key=0, style=bold, color=blue];
m2_920 -> m2_921  [key=0, style=solid];
m2_921 -> m2_922  [key=0, style=solid];
m2_921 -> m2_921  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_922 -> m2_923  [key=0, style=solid];
m2_922 -> m2_93  [key=2, style=dotted];
m2_923 -> m2_924  [key=0, style=solid];
m2_923 -> m2_928  [key=2, style=dotted];
m2_923 -> m2_925  [key=1, style=dashed, color=darkseagreen4, label=a];
m2_923 -> m2_926  [key=1, style=dashed, color=darkseagreen4, label=a];
m2_924 -> m2_925  [key=0, style=solid];
m2_924 -> m2_11  [key=2, style=dotted];
m2_925 -> m2_926  [key=0, style=solid];
m2_925 -> m2_11  [key=2, style=dotted];
m2_926 -> m2_927  [key=0, style=solid];
m2_926 -> m2_11  [key=2, style=dotted];
m2_927 -> m2_920  [key=0, style=bold, color=blue];
m2_1201 -> m2_1202  [key=0, style=solid];
m2_1202 -> m2_1203  [key=0, style=solid];
m2_1202 -> m2_1202  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1203 -> m2_1204  [key=0, style=solid];
m2_1203 -> m2_93  [key=2, style=dotted];
m2_1204 -> m2_1205  [key=0, style=solid];
m2_1204 -> m2_11  [key=2, style=dotted];
m2_1205 -> m2_1201  [key=0, style=bold, color=blue];
m2_1011 -> m2_1012  [key=0, style=solid];
m2_1012 -> m2_1013  [key=0, style=solid];
m2_1012 -> m2_1016  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1012 -> m2_2022  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_1013 -> m2_1014  [key=0, style=solid];
m2_1013 -> m2_140  [key=2, style=dotted];
m2_1013 -> m2_1015  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1014 -> m2_1011  [key=0, style=bold, color=blue];
m2_2990 -> m2_2991  [key=0, style=solid];
m2_2991 -> m2_2992  [key=0, style=solid];
m2_2991 -> m2_2995  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2991 -> m2_2991  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2992 -> m2_2993  [key=0, style=solid];
m2_2992 -> m2_140  [key=2, style=dotted];
m2_2992 -> m2_2994  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2993 -> m2_2990  [key=0, style=bold, color=blue];
m2_1206 -> m2_1207  [key=0, style=solid];
m2_1207 -> m2_1208  [key=0, style=solid];
m2_1207 -> m2_1219  [key=2, style=dotted];
m2_1207 -> m2_1212  [key=1, style=dashed, color=darkseagreen4, label=ex];
m2_1208 -> m2_1209  [key=0, style=solid];
m2_1208 -> m2_1220  [key=2, style=dotted];
m2_1208 -> m2_1210  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1208 -> m2_1211  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1208 -> m2_1212  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1208 -> m2_1215  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1212 -> m2_1213  [key=0, style=solid];
m2_1209 -> m2_1210  [key=0, style=solid];
m2_1209 -> m2_1221  [key=2, style=dotted];
m2_1210 -> m2_1211  [key=0, style=solid];
m2_1210 -> m2_356  [key=2, style=dotted];
m2_1211 -> m2_1212  [key=0, style=solid];
m2_1211 -> m2_1222  [key=2, style=dotted];
m2_1215 -> m2_1216  [key=0, style=solid];
m2_1215 -> m2_55  [key=2, style=dotted];
m2_1213 -> m2_1214  [key=0, style=solid];
m2_1213 -> m2_53  [key=2, style=dotted];
m2_1213 -> m2_1215  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_1213 -> m2_1216  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_1214 -> m2_1215  [key=0, style=solid];
m2_1214 -> m2_54  [key=2, style=dotted];
m2_1216 -> m2_1217  [key=0, style=solid];
m2_1216 -> m2_56  [key=2, style=dotted];
m2_1217 -> m2_1218  [key=0, style=solid];
m2_1217 -> m2_57  [key=2, style=dotted];
m2_1218 -> m2_1206  [key=0, style=bold, color=blue];
m2_3135 -> m2_3136  [key=0, style=solid];
m2_3136 -> m2_3137  [key=0, style=solid];
m2_3136 -> m2_268  [key=2, style=dotted];
m2_3136 -> m2_269  [key=2, style=dotted];
m2_3136 -> m2_3139  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_3137 -> m2_3138  [key=0, style=solid];
m2_3137 -> m2_213  [key=2, style=dotted];
m2_3139 -> m2_3140  [key=0, style=solid];
m2_3139 -> m2_2495  [key=2, style=dotted];
m2_3138 -> m2_3139  [key=0, style=solid];
m2_3138 -> m2_2494  [key=2, style=dotted];
m2_3140 -> m2_3141  [key=0, style=solid];
m2_3140 -> m2_11  [key=2, style=dotted];
m2_3141 -> m2_3135  [key=0, style=bold, color=blue];
m2_1092 -> m2_1093  [key=0, style=solid];
m2_1093 -> m2_1094  [key=0, style=solid];
m2_1093 -> m2_52  [key=2, style=dotted];
m2_1093 -> m2_1095  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m2_1093 -> m2_1096  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m2_1094 -> m2_1095  [key=0, style=solid];
m2_1094 -> m2_356  [key=2, style=dotted];
m2_1094 -> m2_237  [key=2, style=dotted];
m2_1095 -> m2_1096  [key=0, style=solid];
m2_1095 -> m2_356  [key=2, style=dotted];
m2_1095 -> m2_237  [key=2, style=dotted];
m2_1096 -> m2_1097  [key=0, style=solid];
m2_1096 -> m2_338  [key=2, style=dotted];
m2_1097 -> m2_1098  [key=0, style=solid];
m2_1097 -> m2_11  [key=2, style=dotted];
m2_1098 -> m2_1092  [key=0, style=bold, color=blue];
m2_1914 -> m2_1915  [key=0, style=solid];
m2_1915 -> m2_1916  [key=0, style=solid];
m2_1915 -> m2_93  [key=2, style=dotted];
m2_1916 -> m2_1917  [key=0, style=solid];
m2_1916 -> m2_11  [key=2, style=dotted];
m2_1917 -> m2_1914  [key=0, style=bold, color=blue];
m2_1813 -> m2_1814  [key=0, style=solid];
m2_1814 -> m2_1815  [key=0, style=solid];
m2_1814 -> m2_1822  [key=2, style=dotted];
m2_1814 -> m2_338  [key=2, style=dotted];
m2_1814 -> m2_1816  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m2_1815 -> m2_1816  [key=0, style=solid];
m2_1815 -> m2_11  [key=2, style=dotted];
m2_1816 -> m2_1817  [key=0, style=solid];
m2_1816 -> m2_93  [key=2, style=dotted];
m2_1816 -> m2_1818  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1816 -> m2_1819  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1816 -> m2_1820  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1817 -> m2_1818  [key=0, style=solid];
m2_1817 -> m2_11  [key=2, style=dotted];
m2_1818 -> m2_1819  [key=0, style=solid];
m2_1818 -> m2_1823  [key=2, style=dotted];
m2_1818 -> m2_1767  [key=2, style=dotted];
m2_1819 -> m2_1820  [key=0, style=solid];
m2_1819 -> m2_1823  [key=2, style=dotted];
m2_1819 -> m2_1767  [key=2, style=dotted];
m2_1820 -> m2_1821  [key=0, style=solid];
m2_1820 -> m2_1823  [key=2, style=dotted];
m2_1820 -> m2_1767  [key=2, style=dotted];
m2_1821 -> m2_1813  [key=0, style=bold, color=blue];
m2_820 -> m2_821  [key=0, style=solid];
m2_821 -> m2_822  [key=0, style=solid];
m2_821 -> m2_827  [key=2, style=dotted];
m2_821 -> m2_823  [key=1, style=dashed, color=darkseagreen4, label=uri];
m2_821 -> m2_825  [key=1, style=dashed, color=darkseagreen4, label=uri];
m2_822 -> m2_823  [key=0, style=solid];
m2_822 -> m2_9  [key=2, style=dotted];
m2_822 -> m2_824  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_823 -> m2_824  [key=0, style=solid];
m2_823 -> m2_828  [key=2, style=dotted];
m2_823 -> m2_11  [key=2, style=dotted];
m2_825 -> m2_826  [key=0, style=solid];
m2_825 -> m2_11  [key=2, style=dotted];
m2_824 -> m2_825  [key=0, style=solid];
m2_824 -> m2_93  [key=2, style=dotted];
m2_826 -> m2_820  [key=0, style=bold, color=blue];
m2_1654 -> m2_1655  [key=0, style=solid];
m2_1655 -> m2_1656  [key=0, style=solid];
m2_1655 -> m2_52  [key=2, style=dotted];
m2_1655 -> m2_1657  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_1655 -> m2_1661  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_1656 -> m2_1657  [key=0, style=solid];
m2_1656 -> m2_237  [key=2, style=dotted];
m2_1657 -> m2_1658  [key=0, style=solid];
m2_1657 -> m2_237  [key=2, style=dotted];
m2_1661 -> m2_1662  [key=0, style=solid];
m2_1661 -> m2_237  [key=2, style=dotted];
m2_1658 -> m2_1659  [key=0, style=solid];
m2_1658 -> m2_52  [key=2, style=dotted];
m2_1658 -> m2_1660  [key=1, style=dashed, color=darkseagreen4, label=child];
m2_1658 -> m2_1661  [key=1, style=dashed, color=darkseagreen4, label=child];
m2_1658 -> m2_1662  [key=1, style=dashed, color=darkseagreen4, label=child];
m2_1659 -> m2_1660  [key=0, style=solid];
m2_1659 -> m2_237  [key=2, style=dotted];
m2_1660 -> m2_1661  [key=0, style=solid];
m2_1660 -> m2_237  [key=2, style=dotted];
m2_1662 -> m2_1663  [key=0, style=solid];
m2_1662 -> m2_338  [key=2, style=dotted];
m2_1662 -> m2_1666  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1663 -> m2_1664  [key=0, style=solid];
m2_1663 -> m2_140  [key=2, style=dotted];
m2_1663 -> m2_1665  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1664 -> m2_1654  [key=0, style=bold, color=blue];
m2_2719 -> m2_2720  [key=0, style=solid];
m2_2720 -> m2_2721  [key=0, style=solid];
m2_2720 -> m2_2718  [key=2, style=dotted];
m2_2721 -> m2_2722  [key=0, style=solid];
m2_2721 -> m2_9  [key=2, style=dotted];
m2_2722 -> m2_2723  [key=0, style=solid];
m2_2722 -> m2_11  [key=2, style=dotted];
m2_2723 -> m2_2719  [key=0, style=bold, color=blue];
m2_2434 -> m2_2435  [key=0, style=solid];
m2_2435 -> m2_2436  [key=0, style=solid];
m2_2435 -> m2_2439  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2435 -> m2_2435  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2436 -> m2_2437  [key=0, style=solid];
m2_2436 -> m2_140  [key=2, style=dotted];
m2_2436 -> m2_2438  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2437 -> m2_2434  [key=0, style=bold, color=blue];
m2_3165 -> m2_3166  [key=0, style=solid];
m2_3165 -> m2_3168  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_3165 -> m2_277  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m2_3166 -> m2_3167  [key=0, style=solid];
m2_3166 -> m2_3168  [key=0, style=solid];
m2_3168 -> m2_3169  [key=0, style=solid];
m2_3168 -> m2_2514  [key=2, style=dotted];
m2_3168 -> m2_79  [key=2, style=dotted];
m2_3168 -> m2_3170  [key=2, style=dotted];
m2_3167 -> m2_3169  [key=0, style=solid];
m2_3169 -> m2_3165  [key=0, style=bold, color=blue];
m2_3111 -> m2_3112  [key=0, style=solid];
m2_3112 -> m2_3113  [key=0, style=solid];
m2_3112 -> m2_3119  [key=2, style=dotted];
m2_3112 -> m2_3115  [key=1, style=dashed, color=darkseagreen4, label=s1];
m2_3112 -> m2_3116  [key=1, style=dashed, color=darkseagreen4, label=s1];
m2_3113 -> m2_3114  [key=0, style=solid];
m2_3113 -> m2_9  [key=2, style=dotted];
m2_3115 -> m2_3116  [key=0, style=solid];
m2_3115 -> m2_11  [key=2, style=dotted];
m2_3116 -> m2_3117  [key=0, style=solid];
m2_3116 -> m2_3118  [key=0, style=solid];
m2_3114 -> m2_3115  [key=0, style=solid];
m2_3114 -> m2_93  [key=2, style=dotted];
m2_3114 -> m2_3117  [key=1, style=dashed, color=darkseagreen4, label=s2];
m2_3117 -> m2_3116  [key=0, style=solid];
m2_3117 -> m2_1245  [key=2, style=dotted];
m2_3117 -> m2_1767  [key=2, style=dotted];
m2_3118 -> m2_3111  [key=0, style=bold, color=blue];
m2_108 -> m2_109  [key=0, style=solid];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_109  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_114  [key=2, style=dotted];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_111  [key=3, color=darkorchid, style=bold, label="Local variable string s"];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_113 -> m2_108  [key=0, style=bold, color=blue];
m2_1537 -> m2_1538  [key=0, style=solid];
m2_1538 -> m2_1539  [key=0, style=solid];
m2_1538 -> m2_1540  [key=2, style=dotted];
m2_1539 -> m2_1537  [key=0, style=bold, color=blue];
m2_890 -> m2_891  [key=0, style=solid];
m2_891 -> m2_892  [key=0, style=solid];
m2_891 -> m2_28  [key=2, style=dotted];
m2_891 -> m2_209  [key=2, style=dotted];
m2_891 -> m2_894  [key=1, style=dashed, color=darkseagreen4, label=p1];
m2_892 -> m2_893  [key=0, style=solid];
m2_892 -> m2_28  [key=2, style=dotted];
m2_892 -> m2_209  [key=2, style=dotted];
m2_892 -> m2_895  [key=1, style=dashed, color=darkseagreen4, label=p2];
m2_894 -> m2_895  [key=0, style=solid];
m2_894 -> m2_158  [key=2, style=dotted];
m2_893 -> m2_894  [key=0, style=solid];
m2_893 -> m2_208  [key=2, style=dotted];
m2_893 -> m2_895  [key=1, style=dashed, color=darkseagreen4, label=products];
m2_893 -> m2_896  [key=1, style=dashed, color=darkseagreen4, label=products];
m2_895 -> m2_896  [key=0, style=solid];
m2_895 -> m2_158  [key=2, style=dotted];
m2_896 -> m2_897  [key=0, style=solid];
m2_896 -> m2_338  [key=2, style=dotted];
m2_897 -> m2_898  [key=0, style=solid];
m2_897 -> m2_11  [key=2, style=dotted];
m2_898 -> m2_890  [key=0, style=bold, color=blue];
m2_3160 -> m2_3161  [key=0, style=solid];
m2_3160 -> m2_3162  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_3161 -> m2_3162  [key=0, style=solid];
m2_3162 -> m2_3163  [key=0, style=solid];
m2_3162 -> m2_3164  [key=2, style=dotted];
m2_3162 -> m2_2821  [key=2, style=dotted];
m2_3162 -> m2_3162  [key=1, style=dashed, color=darkseagreen4, label=id];
m2_3163 -> m2_3160  [key=0, style=bold, color=blue];
m2_1178 -> m2_1179  [key=0, style=solid];
m2_1179 -> m2_1180  [key=0, style=solid];
m2_1179 -> m2_93  [key=2, style=dotted];
m2_1180 -> m2_1181  [key=0, style=solid];
m2_1180 -> m2_535  [key=2, style=dotted];
m2_1180 -> m2_11  [key=2, style=dotted];
m2_1181 -> m2_1182  [key=0, style=solid];
m2_1181 -> m2_93  [key=2, style=dotted];
m2_1182 -> m2_1183  [key=0, style=solid];
m2_1182 -> m2_535  [key=2, style=dotted];
m2_1182 -> m2_11  [key=2, style=dotted];
m2_1183 -> m2_1178  [key=0, style=bold, color=blue];
m2_2319 -> m2_3176  [key=0, style=solid];
m2_3176 -> m2_3177  [key=0, style=solid];
m2_3176 -> m2_3178  [key=2, style=dotted];
m2_3177 -> m2_2319  [key=0, style=bold, color=blue];
m2_3094 -> m2_3095  [key=0, style=solid];
m2_3095 -> m2_3096  [key=0, style=solid];
m2_3095 -> m2_52  [key=2, style=dotted];
m2_3095 -> m2_209  [key=2, style=dotted];
m2_3095 -> m2_221  [key=2, style=dotted];
m2_3095 -> m2_222  [key=2, style=dotted];
m2_3095 -> m2_3098  [key=1, style=dashed, color=darkseagreen4, label=dates];
m2_3096 -> m2_3097  [key=0, style=solid];
m2_3096 -> m2_338  [key=2, style=dotted];
m2_3096 -> m2_3099  [key=1, style=dashed, color=darkseagreen4, label=expected];
m2_3096 -> m2_3100  [key=1, style=dashed, color=darkseagreen4, label=expected];
m2_3098 -> m2_3099  [key=0, style=solid];
m2_3098 -> m2_213  [key=2, style=dotted];
m2_3098 -> m2_716  [key=2, style=dotted];
m2_3098 -> m2_3100  [key=1, style=dashed, color=darkseagreen4, label=actual];
m2_3097 -> m2_3098  [key=0, style=solid];
m2_3097 -> m2_12  [key=2, style=dotted];
m2_3099 -> m2_3100  [key=0, style=solid];
m2_3099 -> m2_12  [key=2, style=dotted];
m2_3100 -> m2_3101  [key=0, style=solid];
m2_3100 -> m2_11  [key=2, style=dotted];
m2_3101 -> m2_3094  [key=0, style=bold, color=blue];
m2_2105 -> m2_2106  [key=0, style=solid];
m2_2106 -> m2_2107  [key=0, style=solid];
m2_2106 -> m2_2108  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2106 -> m2_2106  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2107 -> m2_2108  [key=0, style=solid];
m2_2107 -> m2_93  [key=2, style=dotted];
m2_2107 -> m2_2109  [key=1, style=dashed, color=darkseagreen4, label=withoutParameterisedConstructor];
m2_2108 -> m2_2109  [key=0, style=solid];
m2_2108 -> m2_93  [key=2, style=dotted];
m2_2109 -> m2_2110  [key=0, style=solid];
m2_2109 -> m2_11  [key=2, style=dotted];
m2_2110 -> m2_2105  [key=0, style=bold, color=blue];
m2_2784 -> m2_2785  [key=0, style=solid];
m2_2785 -> m2_2786  [key=0, style=solid];
m2_2785 -> m2_2785  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_2786 -> m2_2787  [key=0, style=solid];
m2_2786 -> m2_93  [key=2, style=dotted];
m2_2786 -> m2_2788  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_2786 -> m2_2789  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_2787 -> m2_2788  [key=0, style=solid];
m2_2787 -> m2_674  [key=2, style=dotted];
m2_2788 -> m2_2789  [key=0, style=solid];
m2_2788 -> m2_879  [key=2, style=dotted];
m2_2789 -> m2_2790  [key=0, style=solid];
m2_2789 -> m2_11  [key=2, style=dotted];
m2_2790 -> m2_2784  [key=0, style=bold, color=blue];
m2_1625 -> m2_1626  [key=0, style=solid];
m2_1626 -> m2_1627  [key=0, style=solid];
m2_1626 -> m2_1633  [key=2, style=dotted];
m2_1626 -> m2_1628  [key=1, style=dashed, color=darkseagreen4, label=p];
m2_1626 -> m2_1629  [key=1, style=dashed, color=darkseagreen4, label=p];
m2_1626 -> m2_1630  [key=1, style=dashed, color=darkseagreen4, label=p];
m2_1626 -> m2_1631  [key=1, style=dashed, color=darkseagreen4, label=p];
m2_1627 -> m2_1628  [key=0, style=solid];
m2_1627 -> m2_208  [key=2, style=dotted];
m2_1628 -> m2_1629  [key=0, style=solid];
m2_1628 -> m2_213  [key=2, style=dotted];
m2_1628 -> m2_208  [key=2, style=dotted];
m2_1628 -> m2_1634  [key=2, style=dotted];
m2_1628 -> m2_1635  [key=2, style=dotted];
m2_1629 -> m2_1630  [key=0, style=solid];
m2_1629 -> m2_11  [key=2, style=dotted];
m2_1630 -> m2_1631  [key=0, style=solid];
m2_1630 -> m2_11  [key=2, style=dotted];
m2_1631 -> m2_1632  [key=0, style=solid];
m2_1631 -> m2_11  [key=2, style=dotted];
m2_1632 -> m2_1625  [key=0, style=bold, color=blue];
m2_1166 -> m2_1167  [key=0, style=solid];
m2_1167 -> m2_1168  [key=0, style=solid];
m2_1167 -> m2_1176  [key=2, style=dotted];
m2_1167 -> m2_1169  [key=1, style=dashed, color=darkseagreen4, label=g];
m2_1167 -> m2_1170  [key=1, style=dashed, color=darkseagreen4, label=g];
m2_1167 -> m2_1171  [key=1, style=dashed, color=darkseagreen4, label=g];
m2_1168 -> m2_1169  [key=0, style=solid];
m2_1168 -> m2_1177  [key=2, style=dotted];
m2_1168 -> m2_1157  [key=2, style=dotted];
m2_1169 -> m2_1170  [key=0, style=solid];
m2_1169 -> m2_1177  [key=2, style=dotted];
m2_1169 -> m2_1157  [key=2, style=dotted];
m2_1170 -> m2_1171  [key=0, style=solid];
m2_1171 -> m2_1172  [key=0, style=solid];
m2_1171 -> m2_1163  [key=2, style=dotted];
m2_1171 -> m2_1173  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1172 -> m2_1173  [key=0, style=solid];
m2_1172 -> m2_11  [key=2, style=dotted];
m2_1173 -> m2_1174  [key=0, style=solid];
m2_1173 -> m2_93  [key=2, style=dotted];
m2_1174 -> m2_1175  [key=0, style=solid];
m2_1174 -> m2_11  [key=2, style=dotted];
m2_1175 -> m2_1166  [key=0, style=bold, color=blue];
m2_508 -> m2_509  [key=0, style=solid];
m2_509 -> m2_510  [key=0, style=solid];
m2_509 -> m2_512  [key=2, style=dotted];
m2_509 -> m2_9  [key=2, style=dotted];
m2_510 -> m2_511  [key=0, style=solid];
m2_510 -> m2_11  [key=2, style=dotted];
m2_511 -> m2_508  [key=0, style=bold, color=blue];
m2_3202 -> m2_3203  [key=0, style=solid];
m2_3203 -> m2_3204  [key=0, style=solid];
m2_3203 -> m2_3205  [key=2, style=dotted];
m2_3203 -> m2_3206  [key=2, style=dotted];
m2_3204 -> m2_3202  [key=0, style=bold, color=blue];
m2_1023 -> m2_1024  [key=0, style=solid];
m2_1024 -> m2_1025  [key=0, style=solid];
m2_1024 -> m2_140  [key=2, style=dotted];
m2_1024 -> m2_1026  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1025 -> m2_1023  [key=0, style=bold, color=blue];
m2_126 -> m2_127  [key=0, style=solid];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_136  [key=2, style=dotted];
m2_127 -> m2_129  [key=1, style=dashed, color=darkseagreen4, label=test];
m2_127 -> m2_130  [key=1, style=dashed, color=darkseagreen4, label=test];
m2_127 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label=test];
m2_127 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=test];
m2_128 -> m2_129  [key=0, style=solid];
m2_129 -> m2_130  [key=0, style=solid];
m2_130 -> m2_131  [key=0, style=solid];
m2_130 -> m2_9  [key=2, style=dotted];
m2_130 -> m2_132  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_11  [key=2, style=dotted];
m2_134 -> m2_135  [key=0, style=solid];
m2_134 -> m2_11  [key=2, style=dotted];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_11  [key=2, style=dotted];
m2_132 -> m2_133  [key=0, style=solid];
m2_132 -> m2_93  [key=2, style=dotted];
m2_132 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=test2];
m2_135 -> m2_126  [key=0, style=bold, color=blue];
m2_2556 -> m2_2557  [key=0, style=solid];
m2_2557 -> m2_2558  [key=0, style=solid];
m2_2557 -> m2_93  [key=2, style=dotted];
m2_2558 -> m2_2559  [key=0, style=solid];
m2_2558 -> m2_1499  [key=2, style=dotted];
m2_2559 -> m2_2556  [key=0, style=bold, color=blue];
m2_2128 -> m2_2129  [key=0, style=solid];
m2_2129 -> m2_2130  [key=0, style=solid];
m2_2129 -> m2_2133  [key=2, style=dotted];
m2_2130 -> m2_2131  [key=0, style=solid];
m2_2130 -> m2_9  [key=2, style=dotted];
m2_2131 -> m2_2132  [key=0, style=solid];
m2_2131 -> m2_11  [key=2, style=dotted];
m2_2132 -> m2_2128  [key=0, style=bold, color=blue];
m2_2220 -> m2_2221  [key=0, style=solid];
m2_2221 -> m2_2222  [key=0, style=solid];
m2_2221 -> m2_93  [key=2, style=dotted];
m2_2221 -> m2_2223  [key=1, style=dashed, color=darkseagreen4, label=r];
m2_2221 -> m2_2224  [key=1, style=dashed, color=darkseagreen4, label=r];
m2_2221 -> m2_2225  [key=1, style=dashed, color=darkseagreen4, label=r];
m2_2222 -> m2_2223  [key=0, style=solid];
m2_2222 -> m2_124  [key=2, style=dotted];
m2_2222 -> m2_11  [key=2, style=dotted];
m2_2223 -> m2_2224  [key=0, style=solid];
m2_2223 -> m2_798  [key=2, style=dotted];
m2_2223 -> m2_674  [key=2, style=dotted];
m2_2224 -> m2_2225  [key=0, style=solid];
m2_2224 -> m2_798  [key=2, style=dotted];
m2_2224 -> m2_674  [key=2, style=dotted];
m2_2225 -> m2_2226  [key=0, style=solid];
m2_2225 -> m2_798  [key=2, style=dotted];
m2_2225 -> m2_1499  [key=2, style=dotted];
m2_2226 -> m2_2220  [key=0, style=bold, color=blue];
m2_866 -> m2_867  [key=0, style=solid];
m2_867 -> m2_868  [key=0, style=solid];
m2_867 -> m2_867  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m2_868 -> m2_869  [key=0, style=solid];
m2_868 -> m2_93  [key=2, style=dotted];
m2_868 -> m2_870  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_868 -> m2_871  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_868 -> m2_872  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_868 -> m2_873  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_868 -> m2_874  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_868 -> m2_875  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_868 -> m2_876  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_868 -> m2_877  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_869 -> m2_870  [key=0, style=solid];
m2_869 -> m2_11  [key=2, style=dotted];
m2_870 -> m2_871  [key=0, style=solid];
m2_870 -> m2_11  [key=2, style=dotted];
m2_871 -> m2_872  [key=0, style=solid];
m2_871 -> m2_11  [key=2, style=dotted];
m2_872 -> m2_873  [key=0, style=solid];
m2_872 -> m2_11  [key=2, style=dotted];
m2_873 -> m2_874  [key=0, style=solid];
m2_873 -> m2_879  [key=2, style=dotted];
m2_874 -> m2_875  [key=0, style=solid];
m2_874 -> m2_11  [key=2, style=dotted];
m2_875 -> m2_876  [key=0, style=solid];
m2_875 -> m2_879  [key=2, style=dotted];
m2_876 -> m2_877  [key=0, style=solid];
m2_876 -> m2_11  [key=2, style=dotted];
m2_877 -> m2_878  [key=0, style=solid];
m2_877 -> m2_11  [key=2, style=dotted];
m2_878 -> m2_866  [key=0, style=bold, color=blue];
m2_3219 -> m2_195  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3220 -> m2_459  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3221 -> m2_642  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m2_3222 -> m2_761  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m2_3222 -> m2_762  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m2_3222 -> m2_763  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m2_3222 -> m2_764  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m2_3222 -> m2_767  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m2_3223 -> m2_918  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3224 -> m2_945  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3225 -> m2_952  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3226 -> m2_959  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3227 -> m2_966  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3228 -> m2_973  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3229 -> m2_980  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3230 -> m2_987  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3231 -> m2_994  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3232 -> m2_1001  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3233 -> m2_1008  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3234 -> m2_1016  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3235 -> m2_1141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m2_3235 -> m2_1142  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m2_3236 -> m2_1158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m2_3236 -> m2_1161  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m2_3236 -> m2_1164  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m2_3237 -> m2_1189  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3238 -> m2_1193  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor"];
m2_3239 -> m2_1229  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3239 -> m2_1233  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3239 -> m2_1236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3239 -> m2_1239  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3239 -> m2_1243  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3239 -> m2_1247  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3239 -> m2_1251  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3239 -> m2_1255  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3239 -> m2_1262  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3239 -> m2_1265  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3239 -> m2_1269  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3239 -> m2_1273  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3239 -> m2_1277  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3240 -> m2_1290  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1291  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1292  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1293  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1294  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1297  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1298  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1300  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1301  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1302  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1303  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1304  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1305  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1306  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1307  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1308  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1309  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1311  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1312  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1313  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1332  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1333  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1334  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1335  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1336  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1338  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1339  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1340  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1341  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1342  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1343  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1344  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1345  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1346  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1347  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1348  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3240 -> m2_1349  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3241 -> m2_1406  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>"];
m2_3241 -> m2_1407  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>"];
m2_3242 -> m2_1462  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m2_3242 -> m2_1463  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m2_3242 -> m2_1464  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m2_3242 -> m2_1465  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m2_3242 -> m2_1466  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m2_3242 -> m2_1467  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m2_3242 -> m2_1468  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m2_3242 -> m2_1469  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m2_3243 -> m2_1473  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m2_3243 -> m2_1474  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m2_3243 -> m2_1475  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m2_3243 -> m2_1476  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m2_3243 -> m2_1477  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m2_3243 -> m2_1478  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m2_3243 -> m2_1479  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m2_3243 -> m2_1480  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m2_3243 -> m2_1481  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m2_3243 -> m2_1482  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m2_3244 -> m2_1566  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass"];
m2_3245 -> m2_1666  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3246 -> m2_1698  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty"];
m2_3246 -> m2_1699  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty"];
m2_3247 -> m2_1723  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee"];
m2_3248 -> m2_1789  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey"];
m2_3249 -> m2_1825  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass"];
m2_3250 -> m2_1848  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3251 -> m2_1934  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector"];
m2_3252 -> m2_1951  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived"];
m2_3253 -> m2_1956  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base"];
m2_3255 -> m2_1970  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m2_3256 -> m2_2006  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest"];
m2_3257 -> m2_2015  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor"];
m2_3257 -> m2_2018  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor"];
m2_3257 -> m2_2019  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor"];
m2_3258 -> m2_2026  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor"];
m2_3258 -> m2_2029  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor"];
m2_3258 -> m2_2030  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor"];
m2_3259 -> m2_2038  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor"];
m2_3259 -> m2_2039  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor"];
m2_3259 -> m2_2042  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor"];
m2_3259 -> m2_2043  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor"];
m2_3259 -> m2_2044  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor"];
m2_3260 -> m2_2099  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor"];
m2_3260 -> m2_2100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor"];
m2_3261 -> m2_2103  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor"];
m2_3262 -> m2_2141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m2_3262 -> m2_2142  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m2_3263 -> m2_2157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m2_3263 -> m2_2158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m2_3264 -> m2_2203  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m2_3264 -> m2_2204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m2_3264 -> m2_2205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m2_3264 -> m2_2208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m2_3264 -> m2_2211  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m2_3265 -> m2_2234  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException"];
m2_3266 -> m2_2353  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3267 -> m2_2439  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3268 -> m2_2677  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_3269 -> m2_2692  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_3270 -> m2_2707  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_3271 -> m2_2730  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m2_3271 -> m2_2736  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m2_3271 -> m2_2737  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m2_3272 -> m2_2782  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3273 -> m2_2782  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_3274 -> m2_2843  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>"];
m2_3275 -> m2_2846  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>"];
m2_3276 -> m2_2859  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3277 -> m2_2870  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver"];
m2_3278 -> m2_2928  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3279 -> m2_2935  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3280 -> m2_2955  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3281 -> m2_2962  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3282 -> m2_2969  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3283 -> m2_2995  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3284 -> m2_3002  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3285 -> m2_3147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel"];
m2_3286 -> m2_3173  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TestObject"];
m2_3286 -> m2_3174  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TestObject"];
m2_3287 -> m2_3176  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.GameObject"];
m2_3288 -> m2_3217  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass"];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_5  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_6  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_7  [key=2, style=dotted];
m6_4 -> m6_0  [key=0, style=bold, color=blue];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_19  [key=1, style=dashed, color=darkseagreen4, label=char];
m7_16 -> m7_107  [key=3, color=darkorchid, style=bold, label="Parameter variable char quoteChar"];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_19  [key=0, style=solid];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_21  [key=0, style=solid];
m7_18 -> m7_22  [key=0, style=solid];
m7_20 -> m7_22  [key=0, style=solid];
m7_21 -> m7_22  [key=0, style=solid];
m7_22 -> m7_16  [key=0, style=bold, color=blue];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_23 -> m7_27  [key=1, style=dashed, color=darkseagreen4, label="bool[]"];
m7_23 -> m7_25  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldEscapeJavaScriptString"];
m7_23 -> m7_28  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldEscapeJavaScriptString"];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_26  [key=0, style=solid];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_29  [key=0, style=solid];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_26  [key=0, style=solid];
m7_25 -> m7_30  [key=0, style=solid];
m7_29 -> m7_30  [key=0, style=solid];
m7_28 -> m7_30  [key=0, style=solid];
m7_30 -> m7_23  [key=0, style=bold, color=blue];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_33  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m7_31 -> m7_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_31 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_31 -> m7_38  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_31 -> m7_39  [key=1, style=dashed, color=darkseagreen4, label="bool[]"];
m7_31 -> m7_60  [key=1, style=dashed, color=darkseagreen4, label="bool[]"];
m7_31 -> m7_61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.StringEscapeHandling"];
m7_31 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.StringEscapeHandling"];
m7_31 -> m7_65  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_31 -> m7_67  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_31 -> m7_75  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_31 -> m7_78  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_31 -> m7_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_31 -> m7_81  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m7_31 -> m7_84  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m7_31 -> m7_85  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m7_31 -> m7_88  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m7_31 -> m7_89  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_31 -> m7_90  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_31 -> m7_92  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_31 -> m7_93  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m7_31 -> m7_94  [key=1, style=dashed, color=darkseagreen4, label=bool];
m7_31 -> m7_95  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m7_31 -> m7_96  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_31 -> m7_109  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IO.TextWriter writer"];
m7_31 -> m7_107  [key=3, color=darkorchid, style=bold, label="Parameter variable bool appendDelimiters"];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_34  [key=0, style=solid];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_97  [key=2, style=dotted];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_94  [key=0, style=solid];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_87  [key=0, style=solid];
m7_37 -> m7_2  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_41  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_38 -> m7_60  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_38 -> m7_61  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_38 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_38 -> m7_67  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_37  [key=0, style=solid];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_69  [key=0, style=solid];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_63  [key=0, style=solid];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_65  [key=0, style=solid];
m7_65 -> m7_66  [key=0, style=solid, color=red];
m7_65 -> m7_67  [key=0, style=solid];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_98  [key=2, style=dotted];
m7_75 -> m7_76  [key=0, style=solid, color=red];
m7_75 -> m7_80  [key=0, style=solid];
m7_78 -> m7_79  [key=0, style=solid];
m7_78 -> m7_100  [key=2, style=dotted];
m7_80 -> m7_81  [key=0, style=solid];
m7_80 -> m7_101  [key=2, style=dotted];
m7_81 -> m7_82  [key=0, style=solid];
m7_81 -> m7_102  [key=2, style=dotted];
m7_84 -> m7_86  [key=0, style=solid];
m7_84 -> m7_103  [key=2, style=dotted];
m7_85 -> m7_86  [key=0, style=solid];
m7_85 -> m7_102  [key=2, style=dotted];
m7_88 -> m7_94  [key=0, style=solid];
m7_88 -> m7_103  [key=2, style=dotted];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_91  [key=1, style=dashed, color=darkseagreen4, label=length];
m7_89 -> m7_92  [key=1, style=dashed, color=darkseagreen4, label=length];
m7_89 -> m7_93  [key=1, style=dashed, color=darkseagreen4, label=length];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_92  [key=0, style=solid];
m7_92 -> m7_93  [key=0, style=solid];
m7_92 -> m7_101  [key=2, style=dotted];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_102  [key=2, style=dotted];
m7_94 -> m7_95  [key=0, style=solid];
m7_94 -> m7_96  [key=0, style=solid];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_97  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_72  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m7_35 -> m7_73  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m7_35 -> m7_80  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m7_35 -> m7_87  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m7_35 -> m7_89  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m7_35 -> m7_92  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m7_35 -> m7_2  [key=3, color=darkorchid, style=bold, label="Local variable int lastWritePosition"];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_38  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_36 -> m7_72  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_36 -> m7_73  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_36 -> m7_82  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_36 -> m7_86  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_72 -> m7_73  [key=0, style=solid];
m7_72 -> m7_82  [key=0, style=solid];
m7_73 -> m7_74  [key=0, style=solid];
m7_73 -> m7_75  [key=1, style=dashed, color=darkseagreen4, label=length];
m7_73 -> m7_76  [key=1, style=dashed, color=red, label=length];
m7_73 -> m7_80  [key=1, style=dashed, color=darkseagreen4, label=length];
m7_73 -> m7_81  [key=1, style=dashed, color=darkseagreen4, label=length];
m7_87 -> m7_88  [key=0, style=solid];
m7_87 -> m7_89  [key=0, style=solid];
m7_82 -> m7_83  [key=0, style=solid];
m7_82 -> m7_87  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m7_82 -> m7_89  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m7_82 -> m7_92  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m7_86 -> m7_37  [key=0, style=solid];
m7_86 -> m7_86  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_44  [key=0, style=solid];
m7_41 -> m7_46  [key=0, style=solid];
m7_41 -> m7_48  [key=0, style=solid];
m7_41 -> m7_50  [key=0, style=solid];
m7_41 -> m7_52  [key=0, style=solid];
m7_41 -> m7_54  [key=0, style=solid];
m7_41 -> m7_56  [key=0, style=solid];
m7_41 -> m7_58  [key=0, style=solid];
m7_41 -> m7_60  [key=0, style=solid];
m7_40 -> m7_41  [key=0, style=solid];
m7_42 -> m7_43  [key=0, style=solid];
m7_44 -> m7_45  [key=0, style=solid];
m7_46 -> m7_47  [key=0, style=solid];
m7_48 -> m7_49  [key=0, style=solid];
m7_50 -> m7_51  [key=0, style=solid];
m7_52 -> m7_53  [key=0, style=solid];
m7_54 -> m7_55  [key=0, style=solid];
m7_56 -> m7_57  [key=0, style=solid];
m7_58 -> m7_59  [key=0, style=solid];
m7_43 -> m7_70  [key=0, style=solid];
m7_45 -> m7_70  [key=0, style=solid];
m7_47 -> m7_70  [key=0, style=solid];
m7_49 -> m7_70  [key=0, style=solid];
m7_51 -> m7_70  [key=0, style=solid];
m7_53 -> m7_70  [key=0, style=solid];
m7_55 -> m7_70  [key=0, style=solid];
m7_57 -> m7_70  [key=0, style=solid];
m7_59 -> m7_70  [key=0, style=solid];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_71  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m7_69 -> m7_84  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m7_62 -> m7_70  [key=0, style=solid];
m7_62 -> m7_71  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m7_62 -> m7_84  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m7_64 -> m7_70  [key=0, style=solid];
m7_64 -> m7_71  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m7_64 -> m7_84  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m7_66 -> m7_67  [key=0, style=solid, color=red];
m7_66 -> m7_75  [key=1, style=dashed, color=red, label="ref char[]"];
m7_66 -> m7_78  [key=1, style=dashed, color=red, label="ref char[]"];
m7_66 -> m7_80  [key=1, style=dashed, color=red, label="ref char[]"];
m7_66 -> m7_81  [key=1, style=dashed, color=red, label="ref char[]"];
m7_66 -> m7_85  [key=1, style=dashed, color=red, label="ref char[]"];
m7_66 -> m7_90  [key=1, style=dashed, color=red, label="ref char[]"];
m7_66 -> m7_92  [key=1, style=dashed, color=red, label="ref char[]"];
m7_66 -> m7_93  [key=1, style=dashed, color=red, label="ref char[]"];
m7_66 -> m7_96  [key=1, style=dashed, color=red, label="ref char[]"];
m7_68 -> m7_70  [key=0, style=solid];
m7_68 -> m7_71  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m7_68 -> m7_84  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_37  [key=0, style=solid];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_99  [key=2, style=dotted];
m7_71 -> m7_73  [key=1, style=dashed, color=darkseagreen4, label=isEscapedUnicodeText];
m7_71 -> m7_74  [key=1, style=dashed, color=darkseagreen4, label=isEscapedUnicodeText];
m7_71 -> m7_77  [key=1, style=dashed, color=darkseagreen4, label=isEscapedUnicodeText];
m7_71 -> m7_83  [key=1, style=dashed, color=darkseagreen4, label=isEscapedUnicodeText];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_80  [key=1, style=dashed, color=darkseagreen4, label=start];
m7_74 -> m7_81  [key=1, style=dashed, color=darkseagreen4, label=start];
m7_77 -> m7_78  [key=0, style=solid];
m7_77 -> m7_79  [key=0, style=solid];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_85  [key=0, style=solid];
m7_76 -> m7_77  [key=0, style=solid, color=red];
m7_76 -> m7_78  [key=1, style=dashed, color=red, label=newBuffer];
m7_76 -> m7_79  [key=1, style=dashed, color=red, label=newBuffer];
m7_79 -> m7_80  [key=0, style=solid];
m7_79 -> m7_81  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_79 -> m7_85  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_79 -> m7_90  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_79 -> m7_92  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_79 -> m7_93  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_79 -> m7_96  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_91 -> m7_92  [key=0, style=solid];
m7_91 -> m7_93  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_91 -> m7_96  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_96 -> m7_31  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_13  [key=2, style=dotted];
m7_1 -> m7_4  [key=1, style=dashed, color=darkseagreen4, label=escapeChars];
m7_1 -> m7_6  [key=1, style=dashed, color=darkseagreen4, label=escapeChars];
m7_1 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label=escapeChars];
m7_1 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label=escapeChars];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_4  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_2 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_2 -> m7_2  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_14  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_8  [key=0, style=solid];
m7_6 -> m7_15  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_10  [key=0, style=solid];
m7_8 -> m7_15  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_12  [key=0, style=solid];
m7_10 -> m7_15  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_6  [key=0, style=solid];
m7_5 -> m7_3  [key=0, style=solid];
m7_5 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_7 -> m7_6  [key=0, style=solid];
m7_9 -> m7_8  [key=0, style=solid];
m7_11 -> m7_10  [key=0, style=solid];
m7_12 -> m7_0  [key=0, style=bold, color=blue];
m7_107 -> m7_108  [key=0, style=solid];
m7_107 -> m7_109  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_107 -> m7_111  [key=1, style=dashed, color=red, label=string];
m7_107 -> m7_104  [key=3, color=darkorchid, style=bold, label="Parameter variable bool appendDelimiters"];
m7_107 -> m7_2  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.StringEscapeHandling stringEscapeHandling"];
m7_108 -> m7_109  [key=0, style=solid];
m7_108 -> m7_16  [key=2, style=dotted];
m7_108 -> m7_111  [key=1, style=dashed, color=red, label=charEscapeFlags];
m7_109 -> m7_110  [key=0, style=solid];
m7_109 -> m7_114  [key=2, style=dotted];
m7_109 -> m7_115  [key=2, style=dotted];
m7_109 -> m7_111  [key=1, style=dashed, color=red, label=w];
m7_109 -> m7_112  [key=1, style=dashed, color=darkseagreen4, label=w];
m7_111 -> m7_112  [key=0, style=solid, color=red];
m7_111 -> m7_31  [key=2, style=dotted, color=red];
m7_111 -> m7_111  [key=1, style=dashed, color=red, label=buffer];
m7_110 -> m7_111  [key=0, style=solid, color=red];
m7_110 -> m7_110  [key=3, color=darkorchid, style=bold, label="Local variable char[] buffer"];
m7_112 -> m7_113  [key=0, style=solid];
m7_112 -> m7_116  [key=2, style=dotted];
m7_113 -> m7_107  [key=0, style=bold, color=blue];
m7_104 -> m7_105  [key=0, style=solid];
m7_104 -> m7_107  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToEscapedJavaScriptString"];
m7_105 -> m7_106  [key=0, style=solid];
m7_105 -> m7_107  [key=2, style=dotted];
m7_106 -> m7_104  [key=0, style=bold, color=blue];
m8_16 -> m8_23  [key=0, style=solid];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m8_8 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m8_8 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m8_8 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m8_8 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m8_8 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m8_8 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_25  [key=0, style=solid];
m8_9 -> m8_27  [key=2, style=dotted];
m8_9 -> m8_18  [key=2, style=dotted];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label=existingProperty];
m8_12 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label=existingProperty];
m8_12 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label=existingProperty];
m8_12 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label=existingProperty];
m8_12 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label=existingProperty];
m8_12 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label=existingProperty];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_28  [key=2, style=dotted];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_28  [key=2, style=dotted];
m8_24 -> m8_26  [key=0, style=solid];
m8_24 -> m8_32  [key=2, style=dotted];
m8_24 -> m8_33  [key=2, style=dotted];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_34  [key=2, style=dotted];
m8_10 -> m8_12  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_0  [key=0, style=bold, color=blue];
m8_13 -> m8_13  [key=3, color=darkorchid, style=bold, label="Local variable bool duplicateProperty"];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label=duplicateProperty];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_17  [key=0, style=solid];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_23  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_21  [key=0, style=solid];
m8_18 -> m8_29  [key=2, style=dotted];
m8_18 -> m8_30  [key=2, style=dotted];
m8_18 -> m8_31  [key=2, style=dotted];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_23  [key=0, style=solid];
m8_21 -> m8_29  [key=2, style=dotted];
m8_21 -> m8_30  [key=2, style=dotted];
m8_21 -> m8_31  [key=2, style=dotted];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label=duplicateProperty];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_25  [key=0, style=solid];
m8_11 -> m8_26  [key=0, style=solid];
m8_22 -> m8_26  [key=0, style=solid];
m8_26 -> m8_8  [key=0, style=bold, color=blue];
m8_42 -> m8_45  [key=3, color=green, style=bold, label="method methodReturn bool TryGetValue"];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_46  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_42 -> m8_41  [key=3, color=darkorchid, style=bold, label="Parameter variable string key"];
m8_42 -> m8_50  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty item"];
m8_45 -> m8_47  [key=0, style=solid, color=green];
m8_44 -> m8_45  [key=0, style=solid, color=green];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_46  [key=0, style=solid];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_48  [key=2, style=dotted];
m8_47 -> m8_42  [key=0, style=bold, color=blue];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_36 -> m8_41  [key=2, style=dotted];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_39  [key=1, style=dashed, color=darkseagreen4, label=property];
m8_38 -> m8_41  [key=2, style=dotted];
m8_38 -> m8_39  [key=0, style=solid];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_39  [key=0, style=solid];
m8_39 -> m8_40  [key=0, style=solid];
m8_40 -> m8_35  [key=0, style=bold, color=blue];
m8_41 -> m8_51  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_41 -> m8_49  [key=0, style=solid];
m8_41 -> m8_55  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_41 -> m8_35  [key=3, color=darkorchid, style=bold, label="Parameter variable string propertyName"];
m8_41 -> m8_36  [key=3, color=darkorchid, style=bold, label="Parameter variable System.StringComparison comparisonType"];
m8_41 -> m8_38  [key=3, color=darkorchid, style=bold, label="Parameter variable System.StringComparison comparisonType"];
m8_41 -> m8_50  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonProperty GetProperty"];
m8_41 -> m8_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonProperty GetProperty"];
m8_41 -> m8_54  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonProperty GetProperty"];
m8_51 -> m8_42  [key=2, style=dotted];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_53  [key=0, style=solid];
m8_50 -> m8_51  [key=0, style=solid];
m8_52 -> m8_58  [key=0, style=solid];
m8_53 -> m8_58  [key=0, style=solid];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_54  [key=0, style=solid];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_54  [key=0, style=solid];
m8_55 -> m8_59  [key=2, style=dotted];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_57  [key=0, style=solid];
m8_54 -> m8_56  [key=1, style=dashed, color=darkseagreen4, label=property];
m8_57 -> m8_58  [key=0, style=solid];
m8_56 -> m8_58  [key=0, style=solid];
m8_58 -> m8_41  [key=0, style=bold, color=blue];
m8_0 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_1  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_12  [key=2, style=dotted];
m8_2 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label=text];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_4  [key=2, style=dotted];
m8_1 -> m8_11  [key=2, style=dotted];
m8_1 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label=array];
m8_1 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label=array];
m8_3 -> m8_0  [key=0, style=bold, color=blue];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_13  [key=2, style=dotted];
m8_3 -> m8_14  [key=2, style=dotted];
m8_3 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label=date];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_15  [key=2, style=dotted];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_15  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_16  [key=2, style=dotted];
m8_6 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_60 -> m8_51  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m8_60 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m8_60 -> m8_46  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m8_60 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m8_60 -> m8_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m8_60 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m8_60 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m8_60 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m8_60 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m8_60 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m8_60 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m8_60 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m8_60 -> m8_54  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m9_55 -> m9_56  [key=0, style=solid];
m9_58 -> m9_59  [key=0, style=solid, color=green];
m9_58 -> m9_10  [key=2, style=dotted, color=green];
m9_58 -> m9_36  [key=3, color=green, style=bold, label="Property variable Newtonsoft.Json.DateTimeZoneHandling DateTimeZoneHandling"];
m9_57 -> m9_58  [key=0, style=solid, color=green];
m9_57 -> m9_9  [key=2, style=dotted];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_7  [key=2, style=dotted];
m9_56 -> m9_8  [key=2, style=dotted];
m9_59 -> m9_55  [key=0, style=bold, color=blue];
m9_35 -> m9_36  [key=0, style=solid];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_7  [key=2, style=dotted];
m9_36 -> m9_8  [key=2, style=dotted];
m9_36 -> m9_4  [key=3, color=darkorchid, style=bold, label="Field variable Newtonsoft.Json.JsonReader.State _currentState"];
m9_36 -> m9_13  [key=3, color=darkorchid, style=bold, label="Field variable Newtonsoft.Json.JsonReader.State _currentState"];
m9_36 -> m9_3  [key=3, color=darkorchid, style=bold, label="Field variable Newtonsoft.Json.JsonReader.State _currentState"];
m9_36 -> m9_23  [key=3, color=darkorchid, style=bold, label="Field variable Newtonsoft.Json.JsonReader.State _currentState"];
m9_36 -> m9_12  [key=3, color=darkorchid, style=bold, label="Field variable Newtonsoft.Json.JsonReader.State _currentState"];
m9_36 -> m9_15  [key=3, color=darkorchid, style=bold, label="Field variable Newtonsoft.Json.JsonReader.State _currentState"];
m9_38 -> m9_10  [key=2, style=dotted];
m9_38 -> m9_39  [key=0, style=solid];
m9_37 -> m9_38  [key=0, style=solid];
m9_37 -> m9_9  [key=2, style=dotted];
m9_39 -> m9_35  [key=0, style=bold, color=blue];
m9_144 -> m9_145  [key=0, style=solid];
m9_147 -> m9_21  [key=2, style=dotted];
m9_147 -> m9_148  [key=0, style=solid];
m9_147 -> m9_68  [key=2, style=dotted];
m9_146 -> m9_20  [key=2, style=dotted];
m9_146 -> m9_147  [key=0, style=solid];
m9_146 -> m9_148  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_146 -> m9_149  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_146 -> m9_150  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_148 -> m9_149  [key=0, style=solid];
m9_148 -> m9_152  [key=2, style=dotted];
m9_148 -> m9_110  [key=2, style=dotted];
m9_145 -> m9_146  [key=0, style=solid];
m9_149 -> m9_150  [key=0, style=solid];
m9_149 -> m9_152  [key=2, style=dotted];
m9_149 -> m9_110  [key=2, style=dotted];
m9_150 -> m9_151  [key=0, style=solid];
m9_150 -> m9_152  [key=2, style=dotted];
m9_150 -> m9_110  [key=2, style=dotted];
m9_151 -> m9_144  [key=0, style=bold, color=blue];
m9_48 -> m9_49  [key=0, style=solid];
m9_49 -> m9_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_51  [key=2, style=dotted];
m9_50 -> m9_48  [key=0, style=bold, color=blue];
m9_60 -> m9_61  [key=0, style=solid, color=green];
m9_61 -> m9_62  [key=0, style=solid, color=green];
m9_62 -> m9_65  [key=1, style=dashed, color=green, label=l];
m9_62 -> m9_66  [key=1, style=dashed, color=green, label=l];
m9_62 -> m9_63  [key=0, style=solid];
m9_62 -> m9_20  [key=2, style=dotted];
m9_62 -> m9_64  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_65 -> m9_66  [key=0, style=solid, color=green];
m9_65 -> m9_69  [key=2, style=dotted, color=green];
m9_65 -> m9_21  [key=2, style=dotted, color=green];
m9_64 -> m9_65  [key=0, style=solid, color=green];
m9_64 -> m9_69  [key=2, style=dotted];
m9_64 -> m9_21  [key=2, style=dotted];
m9_66 -> m9_67  [key=0, style=solid, color=green];
m9_66 -> m9_69  [key=2, style=dotted, color=green];
m9_66 -> m9_21  [key=2, style=dotted, color=green];
m9_63 -> m9_64  [key=0, style=solid];
m9_63 -> m9_21  [key=2, style=dotted];
m9_63 -> m9_38  [key=3, color=darkorchid, style=bold, label="Property variable Newtonsoft.Json.FloatParseHandling FloatParseHandling"];
m9_63 -> m9_68  [key=2, style=dotted];
m9_67 -> m9_60  [key=0, style=bold, color=blue];
m9_139 -> m9_140  [key=0, style=solid];
m9_142 -> m9_10  [key=2, style=dotted];
m9_142 -> m9_36  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.JsonPosition oldPosition"];
m9_142 -> m9_143  [key=0, style=solid];
m9_140 -> m9_7  [key=2, style=dotted];
m9_140 -> m9_8  [key=2, style=dotted];
m9_140 -> m9_141  [key=0, style=solid];
m9_141 -> m9_9  [key=2, style=dotted];
m9_141 -> m9_142  [key=0, style=solid];
m9_143 -> m9_139  [key=0, style=bold, color=blue];
m9_186 -> m9_187  [key=0, style=solid];
m9_189 -> m9_21  [key=2, style=dotted];
m9_189 -> m9_190  [key=0, style=solid];
m9_190 -> m9_21  [key=2, style=dotted];
m9_190 -> m9_191  [key=0, style=solid];
m9_191 -> m9_21  [key=2, style=dotted];
m9_191 -> m9_192  [key=0, style=solid];
m9_192 -> m9_21  [key=2, style=dotted];
m9_192 -> m9_193  [key=0, style=solid];
m9_188 -> m9_20  [key=2, style=dotted];
m9_188 -> m9_189  [key=0, style=solid];
m9_188 -> m9_190  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_188 -> m9_191  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_188 -> m9_192  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_187 -> m9_188  [key=0, style=solid];
m9_193 -> m9_186  [key=0, style=bold, color=blue];
m9_164 -> m9_165  [key=0, style=solid];
m9_167 -> m9_21  [key=2, style=dotted];
m9_167 -> m9_168  [key=0, style=solid];
m9_168 -> m9_21  [key=2, style=dotted];
m9_168 -> m9_169  [key=0, style=solid];
m9_169 -> m9_21  [key=2, style=dotted];
m9_169 -> m9_170  [key=0, style=solid];
m9_170 -> m9_21  [key=2, style=dotted];
m9_170 -> m9_171  [key=0, style=solid];
m9_166 -> m9_20  [key=2, style=dotted];
m9_166 -> m9_167  [key=0, style=solid];
m9_166 -> m9_168  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_166 -> m9_169  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_166 -> m9_170  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_165 -> m9_166  [key=0, style=solid];
m9_171 -> m9_164  [key=0, style=bold, color=blue];
m9_99 -> m9_100  [key=0, style=solid];
m9_103 -> m9_21  [key=2, style=dotted];
m9_103 -> m9_104  [key=0, style=solid];
m9_100 -> m9_7  [key=2, style=dotted];
m9_100 -> m9_8  [key=2, style=dotted];
m9_100 -> m9_101  [key=0, style=solid];
m9_101 -> m9_9  [key=2, style=dotted];
m9_101 -> m9_102  [key=0, style=solid];
m9_102 -> m9_103  [key=0, style=solid];
m9_102 -> m9_108  [key=2, style=dotted];
m9_102 -> m9_104  [key=1, style=dashed, color=darkseagreen4, label=a];
m9_102 -> m9_105  [key=1, style=dashed, color=darkseagreen4, label=a];
m9_102 -> m9_106  [key=1, style=dashed, color=darkseagreen4, label=a];
m9_104 -> m9_105  [key=0, style=solid];
m9_104 -> m9_109  [key=2, style=dotted];
m9_104 -> m9_110  [key=2, style=dotted];
m9_104 -> m9_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_105 -> m9_106  [key=0, style=solid];
m9_105 -> m9_109  [key=2, style=dotted];
m9_105 -> m9_110  [key=2, style=dotted];
m9_105 -> m9_115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_106 -> m9_107  [key=0, style=solid];
m9_106 -> m9_109  [key=2, style=dotted];
m9_106 -> m9_110  [key=2, style=dotted];
m9_106 -> m9_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_107 -> m9_99  [key=0, style=bold, color=blue];
m9_130 -> m9_131  [key=0, style=solid];
m9_133 -> m9_21  [key=2, style=dotted];
m9_133 -> m9_134  [key=0, style=solid];
m9_133 -> m9_68  [key=2, style=dotted];
m9_132 -> m9_20  [key=2, style=dotted];
m9_132 -> m9_133  [key=0, style=solid];
m9_132 -> m9_134  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_132 -> m9_135  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_132 -> m9_136  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_134 -> m9_135  [key=0, style=solid];
m9_134 -> m9_138  [key=2, style=dotted];
m9_134 -> m9_110  [key=2, style=dotted];
m9_131 -> m9_132  [key=0, style=solid];
m9_135 -> m9_136  [key=0, style=solid];
m9_135 -> m9_138  [key=2, style=dotted];
m9_135 -> m9_110  [key=2, style=dotted];
m9_136 -> m9_137  [key=0, style=solid];
m9_136 -> m9_138  [key=2, style=dotted];
m9_136 -> m9_110  [key=2, style=dotted];
m9_137 -> m9_130  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_3 -> m9_10  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_11  [key=2, style=dotted];
m9_1 -> m9_7  [key=2, style=dotted];
m9_1 -> m9_8  [key=2, style=dotted];
m9_1 -> m9_2  [key=0, style=solid];
m9_2 -> m9_9  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_11  [key=2, style=dotted];
m9_6 -> m9_0  [key=0, style=bold, color=blue];
m9_180 -> m9_181  [key=0, style=solid];
m9_183 -> m9_10  [key=2, style=dotted];
m9_183 -> m9_184  [key=0, style=solid];
m9_181 -> m9_8  [key=2, style=dotted];
m9_181 -> m9_182  [key=0, style=solid];
m9_181 -> m9_185  [key=2, style=dotted];
m9_182 -> m9_9  [key=2, style=dotted];
m9_182 -> m9_183  [key=0, style=solid];
m9_184 -> m9_180  [key=0, style=bold, color=blue];
m9_40 -> m9_41  [key=0, style=solid];
m9_43 -> m9_21  [key=2, style=dotted];
m9_43 -> m9_44  [key=0, style=solid];
m9_44 -> m9_21  [key=2, style=dotted];
m9_44 -> m9_45  [key=0, style=solid];
m9_45 -> m9_21  [key=2, style=dotted];
m9_45 -> m9_46  [key=0, style=solid];
m9_46 -> m9_21  [key=2, style=dotted];
m9_46 -> m9_47  [key=0, style=solid];
m9_42 -> m9_20  [key=2, style=dotted];
m9_42 -> m9_43  [key=0, style=solid];
m9_42 -> m9_44  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_42 -> m9_45  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_42 -> m9_46  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_41 -> m9_42  [key=0, style=solid];
m9_47 -> m9_40  [key=0, style=bold, color=blue];
m9_172 -> m9_173  [key=0, style=solid];
m9_175 -> m9_21  [key=2, style=dotted];
m9_175 -> m9_176  [key=0, style=solid];
m9_176 -> m9_21  [key=2, style=dotted];
m9_176 -> m9_177  [key=0, style=solid];
m9_177 -> m9_21  [key=2, style=dotted];
m9_177 -> m9_178  [key=0, style=solid];
m9_178 -> m9_21  [key=2, style=dotted];
m9_178 -> m9_179  [key=0, style=solid];
m9_174 -> m9_20  [key=2, style=dotted];
m9_174 -> m9_175  [key=0, style=solid];
m9_174 -> m9_176  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_174 -> m9_177  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_174 -> m9_178  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_173 -> m9_174  [key=0, style=solid];
m9_179 -> m9_172  [key=0, style=bold, color=blue];
m9_121 -> m9_122  [key=0, style=solid];
m9_122 -> m9_36  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.JsonPosition GetPosition"];
m9_122 -> m9_123  [key=0, style=solid];
m9_124 -> m9_21  [key=2, style=dotted];
m9_124 -> m9_125  [key=0, style=solid];
m9_124 -> m9_68  [key=2, style=dotted];
m9_123 -> m9_20  [key=2, style=dotted];
m9_123 -> m9_124  [key=0, style=solid];
m9_123 -> m9_125  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_123 -> m9_126  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_123 -> m9_127  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_125 -> m9_126  [key=0, style=solid];
m9_125 -> m9_129  [key=2, style=dotted];
m9_125 -> m9_110  [key=2, style=dotted];
m9_126 -> m9_127  [key=0, style=solid];
m9_126 -> m9_129  [key=2, style=dotted];
m9_126 -> m9_110  [key=2, style=dotted];
m9_127 -> m9_128  [key=0, style=solid];
m9_127 -> m9_129  [key=2, style=dotted];
m9_127 -> m9_110  [key=2, style=dotted];
m9_128 -> m9_121  [key=0, style=bold, color=blue];
m9_22 -> m9_23  [key=0, style=solid];
m9_23 -> m9_24  [key=0, style=solid];
m9_26 -> m9_21  [key=2, style=dotted];
m9_26 -> m9_27  [key=0, style=solid];
m9_27 -> m9_21  [key=2, style=dotted];
m9_27 -> m9_28  [key=0, style=solid];
m9_28 -> m9_21  [key=2, style=dotted];
m9_28 -> m9_29  [key=0, style=solid];
m9_29 -> m9_21  [key=2, style=dotted];
m9_29 -> m9_30  [key=0, style=solid];
m9_24 -> m9_20  [key=2, style=dotted];
m9_24 -> m9_26  [key=1, style=dashed, color=darkseagreen4, label=champions];
m9_24 -> m9_27  [key=1, style=dashed, color=darkseagreen4, label=champions];
m9_24 -> m9_28  [key=1, style=dashed, color=darkseagreen4, label=champions];
m9_24 -> m9_29  [key=1, style=dashed, color=darkseagreen4, label=champions];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_31  [key=1, style=dashed, color=darkseagreen4, label=champions];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_33  [key=2, style=dotted];
m9_30 -> m9_11  [key=2, style=dotted];
m9_30 -> m9_31  [key=0, style=solid];
m9_31 -> m9_11  [key=2, style=dotted];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_34  [key=2, style=dotted];
m9_32 -> m9_22  [key=0, style=bold, color=blue];
m9_70 -> m9_71  [key=0, style=solid, color=green];
m9_71 -> m9_72  [key=0, style=solid, color=green];
m9_71 -> m9_38  [key=3, color=green, style=bold, label="Property variable string DateFormatString"];
m9_72 -> m9_73  [key=0, style=solid, color=green];
m9_72 -> m9_20  [key=2, style=dotted, color=green];
m9_72 -> m9_74  [key=1, style=dashed, color=green, label=l];
m9_72 -> m9_75  [key=1, style=dashed, color=green, label=l];
m9_72 -> m9_76  [key=1, style=dashed, color=green, label=l];
m9_73 -> m9_21  [key=2, style=dotted];
m9_73 -> m9_74  [key=0, style=solid];
m9_73 -> m9_68  [key=2, style=dotted];
m9_74 -> m9_69  [key=2, style=dotted];
m9_74 -> m9_21  [key=2, style=dotted];
m9_74 -> m9_75  [key=0, style=solid];
m9_75 -> m9_69  [key=2, style=dotted];
m9_75 -> m9_21  [key=2, style=dotted];
m9_75 -> m9_76  [key=0, style=solid];
m9_76 -> m9_69  [key=2, style=dotted];
m9_76 -> m9_21  [key=2, style=dotted];
m9_76 -> m9_77  [key=0, style=solid];
m9_77 -> m9_70  [key=0, style=bold, color=blue];
m9_78 -> m9_79  [key=0, style=solid, color=green];
m9_79 -> m9_80  [key=0, style=solid, color=green];
m9_79 -> m9_7  [key=2, style=dotted, color=green];
m9_79 -> m9_8  [key=2, style=dotted, color=green];
m9_79 -> m9_35  [key=3, color=green, style=bold, label="Property variable Newtonsoft.Json.JsonToken TokenType"];
m9_80 -> m9_81  [key=0, style=solid];
m9_80 -> m9_9  [key=2, style=dotted];
m9_81 -> m9_10  [key=2, style=dotted];
m9_81 -> m9_82  [key=0, style=solid];
m9_82 -> m9_78  [key=0, style=bold, color=blue];
m9_12 -> m9_13  [key=0, style=solid];
m9_13 -> m9_14  [key=0, style=solid];
m9_15 -> m9_21  [key=2, style=dotted];
m9_15 -> m9_16  [key=0, style=solid];
m9_16 -> m9_21  [key=2, style=dotted];
m9_16 -> m9_17  [key=0, style=solid];
m9_17 -> m9_21  [key=2, style=dotted];
m9_17 -> m9_18  [key=0, style=solid];
m9_18 -> m9_21  [key=2, style=dotted];
m9_18 -> m9_19  [key=0, style=solid];
m9_14 -> m9_20  [key=2, style=dotted];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_14 -> m9_17  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_14 -> m9_18  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_19 -> m9_12  [key=0, style=bold, color=blue];
m9_118 -> m9_119  [key=0, style=solid];
m9_53 -> m9_9  [key=2, style=dotted];
m9_53 -> m9_54  [key=0, style=solid];
m9_52 -> m9_53  [key=0, style=solid];
m9_54 -> m9_52  [key=0, style=bold, color=blue];
m9_111 -> m9_112  [key=0, style=solid];
m9_115 -> m9_116  [key=0, style=solid];
m9_113 -> m9_111  [key=0, style=bold, color=blue];
m9_112 -> m9_113  [key=0, style=solid];
m9_112 -> m9_114  [key=2, style=dotted];
m9_117 -> m9_115  [key=0, style=bold, color=blue];
m9_116 -> m9_117  [key=0, style=solid];
m9_116 -> m9_114  [key=2, style=dotted];
m9_119 -> m9_120  [key=0, style=solid];
m9_119 -> m9_114  [key=2, style=dotted];
m9_120 -> m9_118  [key=0, style=bold, color=blue];
m9_153 -> m9_154  [key=0, style=solid];
m9_157 -> m9_21  [key=2, style=dotted];
m9_157 -> m9_158  [key=0, style=solid];
m9_158 -> m9_21  [key=2, style=dotted];
m9_158 -> m9_159  [key=0, style=solid];
m9_159 -> m9_21  [key=2, style=dotted];
m9_159 -> m9_160  [key=0, style=solid];
m9_160 -> m9_21  [key=2, style=dotted];
m9_160 -> m9_161  [key=0, style=solid];
m9_154 -> m9_8  [key=2, style=dotted];
m9_154 -> m9_155  [key=0, style=solid];
m9_154 -> m9_162  [key=2, style=dotted];
m9_155 -> m9_9  [key=2, style=dotted];
m9_155 -> m9_156  [key=0, style=solid];
m9_156 -> m9_157  [key=0, style=solid];
m9_156 -> m9_158  [key=1, style=dashed, color=darkseagreen4, label=a];
m9_156 -> m9_159  [key=1, style=dashed, color=darkseagreen4, label=a];
m9_156 -> m9_160  [key=1, style=dashed, color=darkseagreen4, label=a];
m9_156 -> m9_163  [key=2, style=dotted];
m9_161 -> m9_153  [key=0, style=bold, color=blue];
m9_83 -> m9_84  [key=0, style=solid];
m9_87 -> m9_69  [key=2, style=dotted];
m9_87 -> m9_21  [key=2, style=dotted];
m9_87 -> m9_88  [key=0, style=solid];
m9_88 -> m9_69  [key=2, style=dotted];
m9_88 -> m9_21  [key=2, style=dotted];
m9_88 -> m9_89  [key=0, style=solid];
m9_89 -> m9_69  [key=2, style=dotted];
m9_89 -> m9_21  [key=2, style=dotted];
m9_89 -> m9_90  [key=0, style=solid];
m9_86 -> m9_21  [key=2, style=dotted];
m9_86 -> m9_87  [key=0, style=solid];
m9_86 -> m9_68  [key=2, style=dotted];
m9_85 -> m9_20  [key=2, style=dotted];
m9_85 -> m9_87  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_85 -> m9_88  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_85 -> m9_89  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_85 -> m9_86  [key=0, style=solid];
m9_84 -> m9_85  [key=0, style=solid];
m9_90 -> m9_83  [key=0, style=bold, color=blue];
m9_91 -> m9_92  [key=0, style=solid];
m9_95 -> m9_69  [key=2, style=dotted];
m9_95 -> m9_21  [key=2, style=dotted];
m9_95 -> m9_96  [key=0, style=solid];
m9_96 -> m9_69  [key=2, style=dotted];
m9_96 -> m9_21  [key=2, style=dotted];
m9_96 -> m9_97  [key=0, style=solid];
m9_97 -> m9_69  [key=2, style=dotted];
m9_97 -> m9_21  [key=2, style=dotted];
m9_97 -> m9_98  [key=0, style=solid];
m9_94 -> m9_21  [key=2, style=dotted];
m9_94 -> m9_95  [key=0, style=solid];
m9_94 -> m9_68  [key=2, style=dotted];
m9_93 -> m9_20  [key=2, style=dotted];
m9_93 -> m9_95  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_93 -> m9_96  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_93 -> m9_97  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_93 -> m9_94  [key=0, style=solid];
m9_92 -> m9_93  [key=0, style=solid];
m9_98 -> m9_91  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_1  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_5  [key=0, style=solid];
m10_2 -> m10_6  [key=2, style=dotted];
m10_2 -> m10_7  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_8  [key=2, style=dotted];
m10_5 -> m10_0  [key=0, style=bold, color=blue];
m11_5 -> m11_6  [key=0, style=solid];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_4  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_3 -> m11_0  [key=0, style=bold, color=blue];
m11_6 -> m11_7  [key=0, style=solid];
m11_7 -> m11_8  [key=0, style=solid];
m11_8 -> m11_9  [key=0, style=solid];
m11_9 -> m11_10  [key=0, style=solid];
m11_10 -> m11_11  [key=0, style=solid];
m11_11 -> m11_12  [key=0, style=solid];
m11_12 -> m11_13  [key=0, style=solid];
m11_13 -> m11_14  [key=0, style=solid];
m11_14 -> m11_15  [key=0, style=solid];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_17  [key=2, style=dotted];
m11_15 -> m11_13  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CheckForCircularReference"];
m11_16 -> m11_5  [key=0, style=bold, color=blue];
m11_18 -> m11_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m11_18 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m11_18 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m11_18 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m11_18 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m11_18 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m11_18 -> m11_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m11_18 -> m11_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m11_18 -> m11_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m11_18 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m12_8 -> m12_9  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_7  [key=2, style=dotted];
m12_5 -> m12_6  [key=0, style=solid];
m12_6 -> m12_3  [key=0, style=bold, color=blue];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_11  [key=2, style=dotted];
m12_10 -> m12_8  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid, color=green];
m12_1 -> m12_2  [key=0, style=solid, color=green];
m12_2 -> m12_0  [key=0, style=bold, color=blue];
m12_12 -> m12_1  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonSerializerSettings"];
m12_12 -> m12_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m13_8 -> m13_9  [key=0, style=solid];
m13_8 -> m13_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_12  [key=2, style=dotted];
m13_10 -> m13_11  [key=0, style=solid];
m13_11 -> m13_8  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_4  [key=2, style=dotted];
m13_1 -> m13_9  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_5  [key=2, style=dotted];
m13_2 -> m13_6  [key=2, style=dotted];
m13_2 -> m13_7  [key=2, style=dotted];
m13_2 -> m13_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_2 -> m13_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_3 -> m13_0  [key=0, style=bold, color=blue];
m13_13 -> m13_9  [key=1, style=dashed, color=darkseagreen4, label=errors];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_5  [key=2, style=dotted];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_6  [key=2, style=dotted];
m14_3 -> m14_7  [key=2, style=dotted];
m14_4 -> m14_0  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_9  [key=2, style=dotted];
m15_1 -> m15_4  [key=1, style=dashed, color=darkseagreen4, label=o];
m15_1 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label=o];
m15_2 -> m15_3  [key=0, style=solid];
m15_2 -> m15_10  [key=2, style=dotted];
m15_2 -> m15_11  [key=2, style=dotted];
m15_2 -> m15_12  [key=2, style=dotted];
m15_2 -> m15_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_11  [key=2, style=dotted];
m15_4 -> m15_15  [key=2, style=dotted];
m15_4 -> m15_12  [key=2, style=dotted];
m15_4 -> m15_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_4 -> m15_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_16  [key=2, style=dotted];
m15_6 -> m15_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_13  [key=2, style=dotted];
m15_3 -> m15_14  [key=2, style=dotted];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_13  [key=2, style=dotted];
m15_5 -> m15_14  [key=2, style=dotted];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_17  [key=2, style=dotted];
m15_8 -> m15_0  [key=0, style=bold, color=blue];
m15_27 -> m15_28  [key=0, style=solid];
m15_18 -> m15_19  [key=0, style=solid];
m15_21 -> m15_22  [key=0, style=solid];
m15_24 -> m15_25  [key=0, style=solid];
m15_19 -> m15_20  [key=0, style=solid];
m15_20 -> m15_18  [key=0, style=bold, color=blue];
m15_22 -> m15_23  [key=0, style=solid];
m15_22 -> m15_10  [key=2, style=dotted];
m15_23 -> m15_21  [key=0, style=bold, color=blue];
m15_25 -> m15_26  [key=0, style=solid];
m15_26 -> m15_24  [key=0, style=bold, color=blue];
m15_28 -> m15_29  [key=0, style=solid];
m15_28 -> m15_10  [key=2, style=dotted];
m15_29 -> m15_27  [key=0, style=bold, color=blue];
m16_145 -> m16_146  [key=0, style=solid];
m16_146 -> m16_147  [key=0, style=solid];
m16_146 -> m16_28  [key=2, style=dotted];
m16_147 -> m16_145  [key=0, style=bold, color=blue];
m16_661 -> m16_662  [key=0, style=solid];
m16_662 -> m16_663  [key=0, style=solid];
m16_662 -> m16_655  [key=2, style=dotted];
m16_663 -> m16_661  [key=0, style=bold, color=blue];
m16_85 -> m16_86  [key=0, style=solid];
m16_87 -> m16_20  [key=2, style=dotted];
m16_87 -> m16_88  [key=0, style=solid];
m16_89 -> m16_20  [key=2, style=dotted];
m16_89 -> m16_90  [key=0, style=solid];
m16_86 -> m16_87  [key=0, style=solid];
m16_86 -> m16_89  [key=1, style=dashed, color=darkseagreen4, label=d];
m16_86 -> m16_17  [key=2, style=dotted];
m16_88 -> m16_89  [key=0, style=solid];
m16_88 -> m16_91  [key=2, style=dotted];
m16_90 -> m16_85  [key=0, style=bold, color=blue];
m16_120 -> m16_121  [key=0, style=solid];
m16_122 -> m16_20  [key=2, style=dotted];
m16_122 -> m16_123  [key=0, style=solid];
m16_123 -> m16_20  [key=2, style=dotted];
m16_123 -> m16_124  [key=0, style=solid];
m16_124 -> m16_20  [key=2, style=dotted];
m16_124 -> m16_125  [key=0, style=solid];
m16_121 -> m16_122  [key=0, style=solid];
m16_121 -> m16_123  [key=1, style=dashed, color=darkseagreen4, label=dic];
m16_121 -> m16_124  [key=1, style=dashed, color=darkseagreen4, label=dic];
m16_121 -> m16_17  [key=2, style=dotted];
m16_121 -> m16_125  [key=1, style=dashed, color=darkseagreen4, label=dic];
m16_125 -> m16_126  [key=0, style=solid];
m16_125 -> m16_127  [key=2, style=dotted];
m16_126 -> m16_120  [key=0, style=bold, color=blue];
m16_46 -> m16_47  [key=0, style=solid];
m16_47 -> m16_48  [key=0, style=solid];
m16_47 -> m16_28  [key=2, style=dotted];
m16_48 -> m16_46  [key=0, style=bold, color=blue];
m16_74 -> m16_75  [key=0, style=solid];
m16_75 -> m16_77  [key=2, style=dotted];
m16_75 -> m16_76  [key=0, style=solid];
m16_76 -> m16_74  [key=0, style=bold, color=blue];
m16_25 -> m16_26  [key=0, style=solid];
m16_26 -> m16_28  [key=2, style=dotted];
m16_26 -> m16_27  [key=0, style=solid];
m16_27 -> m16_25  [key=0, style=bold, color=blue];
m16_189 -> m16_190  [key=0, style=solid];
m16_195 -> m16_20  [key=2, style=dotted];
m16_195 -> m16_196  [key=0, style=solid];
m16_196 -> m16_20  [key=2, style=dotted];
m16_196 -> m16_197  [key=0, style=solid];
m16_196 -> m16_98  [key=2, style=dotted];
m16_194 -> m16_195  [key=0, style=solid];
m16_194 -> m16_196  [key=1, style=dashed, color=darkseagreen4, label=newValue];
m16_194 -> m16_17  [key=2, style=dotted];
m16_193 -> m16_194  [key=0, style=solid];
m16_193 -> m16_14  [key=2, style=dotted];
m16_190 -> m16_193  [key=1, style=dashed, color=darkseagreen4, label=c];
m16_190 -> m16_191  [key=0, style=solid];
m16_190 -> m16_186  [key=2, style=dotted];
m16_190 -> m16_192  [key=1, style=dashed, color=darkseagreen4, label=c];
m16_192 -> m16_193  [key=0, style=solid];
m16_192 -> m16_77  [key=2, style=dotted];
m16_191 -> m16_77  [key=2, style=dotted];
m16_191 -> m16_192  [key=0, style=solid];
m16_197 -> m16_189  [key=0, style=bold, color=blue];
m16_158 -> m16_159  [key=0, style=solid];
m16_159 -> m16_160  [key=0, style=solid];
m16_160 -> m16_158  [key=0, style=bold, color=blue];
m16_49 -> m16_50  [key=0, style=solid];
m16_50 -> m16_51  [key=0, style=solid];
m16_50 -> m16_46  [key=2, style=dotted];
m16_51 -> m16_49  [key=0, style=bold, color=blue];
m16_459 -> m16_460  [key=0, style=solid];
m16_460 -> m16_464  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_460 -> m16_461  [key=0, style=solid];
m16_461 -> m16_56  [key=2, style=dotted];
m16_461 -> m16_463  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_461 -> m16_462  [key=0, style=solid];
m16_462 -> m16_459  [key=0, style=bold, color=blue];
m16_290 -> m16_291  [key=0, style=solid];
m16_293 -> m16_20  [key=2, style=dotted];
m16_293 -> m16_294  [key=0, style=solid];
m16_294 -> m16_20  [key=2, style=dotted];
m16_294 -> m16_295  [key=0, style=solid];
m16_295 -> m16_20  [key=2, style=dotted];
m16_295 -> m16_296  [key=0, style=solid];
m16_296 -> m16_20  [key=2, style=dotted];
m16_296 -> m16_297  [key=0, style=solid];
m16_297 -> m16_20  [key=2, style=dotted];
m16_297 -> m16_298  [key=0, style=solid];
m16_298 -> m16_20  [key=2, style=dotted];
m16_298 -> m16_299  [key=0, style=solid];
m16_299 -> m16_20  [key=2, style=dotted];
m16_299 -> m16_300  [key=0, style=solid];
m16_300 -> m16_20  [key=2, style=dotted];
m16_300 -> m16_301  [key=0, style=solid];
m16_301 -> m16_20  [key=2, style=dotted];
m16_301 -> m16_302  [key=0, style=solid];
m16_302 -> m16_20  [key=2, style=dotted];
m16_302 -> m16_303  [key=0, style=solid];
m16_292 -> m16_293  [key=0, style=solid];
m16_292 -> m16_294  [key=1, style=dashed, color=darkseagreen4, label=values];
m16_292 -> m16_295  [key=1, style=dashed, color=darkseagreen4, label=values];
m16_292 -> m16_296  [key=1, style=dashed, color=darkseagreen4, label=values];
m16_292 -> m16_297  [key=1, style=dashed, color=darkseagreen4, label=values];
m16_292 -> m16_298  [key=1, style=dashed, color=darkseagreen4, label=values];
m16_292 -> m16_299  [key=1, style=dashed, color=darkseagreen4, label=values];
m16_292 -> m16_300  [key=1, style=dashed, color=darkseagreen4, label=values];
m16_292 -> m16_301  [key=1, style=dashed, color=darkseagreen4, label=values];
m16_292 -> m16_302  [key=1, style=dashed, color=darkseagreen4, label=values];
m16_292 -> m16_17  [key=2, style=dotted];
m16_291 -> m16_292  [key=0, style=solid];
m16_303 -> m16_290  [key=0, style=bold, color=blue];
m16_92 -> m16_93  [key=0, style=solid];
m16_94 -> m16_20  [key=2, style=dotted];
m16_94 -> m16_95  [key=0, style=solid];
m16_94 -> m16_98  [key=2, style=dotted];
m16_95 -> m16_20  [key=2, style=dotted];
m16_95 -> m16_96  [key=0, style=solid];
m16_96 -> m16_20  [key=2, style=dotted];
m16_96 -> m16_97  [key=0, style=solid];
m16_93 -> m16_94  [key=0, style=solid];
m16_93 -> m16_95  [key=1, style=dashed, color=darkseagreen4, label=l];
m16_93 -> m16_96  [key=1, style=dashed, color=darkseagreen4, label=l];
m16_93 -> m16_17  [key=2, style=dotted];
m16_97 -> m16_92  [key=0, style=bold, color=blue];
m16_325 -> m16_326  [key=0, style=solid];
m16_327 -> m16_14  [key=2, style=dotted];
m16_327 -> m16_328  [key=0, style=solid];
m16_326 -> m16_311  [key=2, style=dotted];
m16_326 -> m16_327  [key=0, style=solid];
m16_328 -> m16_15  [key=2, style=dotted];
m16_328 -> m16_329  [key=0, style=solid];
m16_329 -> m16_325  [key=0, style=bold, color=blue];
m16_359 -> m16_360  [key=0, style=solid];
m16_364 -> m16_14  [key=2, style=dotted];
m16_364 -> m16_365  [key=0, style=solid];
m16_365 -> m16_15  [key=2, style=dotted];
m16_365 -> m16_366  [key=0, style=solid];
m16_360 -> m16_364  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_360 -> m16_361  [key=0, style=solid];
m16_360 -> m16_367  [key=2, style=dotted];
m16_360 -> m16_362  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_360 -> m16_363  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_363 -> m16_364  [key=0, style=solid];
m16_361 -> m16_362  [key=0, style=solid];
m16_362 -> m16_363  [key=0, style=solid];
m16_366 -> m16_359  [key=0, style=bold, color=blue];
m16_493 -> m16_494  [key=0, style=solid];
m16_496 -> m16_45  [key=2, style=dotted];
m16_496 -> m16_497  [key=0, style=solid];
m16_497 -> m16_67  [key=2, style=dotted];
m16_497 -> m16_498  [key=0, style=solid];
m16_497 -> m16_501  [key=2, style=dotted];
m16_498 -> m16_15  [key=2, style=dotted];
m16_498 -> m16_499  [key=0, style=solid];
m16_495 -> m16_496  [key=0, style=solid];
m16_494 -> m16_495  [key=0, style=solid];
m16_494 -> m16_500  [key=2, style=dotted];
m16_499 -> m16_493  [key=0, style=bold, color=blue];
m16_99 -> m16_100  [key=0, style=solid];
m16_101 -> m16_20  [key=2, style=dotted];
m16_101 -> m16_102  [key=0, style=solid];
m16_102 -> m16_20  [key=2, style=dotted];
m16_102 -> m16_103  [key=0, style=solid];
m16_103 -> m16_20  [key=2, style=dotted];
m16_103 -> m16_104  [key=0, style=solid];
m16_104 -> m16_20  [key=2, style=dotted];
m16_104 -> m16_105  [key=0, style=solid];
m16_100 -> m16_101  [key=0, style=solid];
m16_100 -> m16_102  [key=1, style=dashed, color=darkseagreen4, label=list];
m16_100 -> m16_103  [key=1, style=dashed, color=darkseagreen4, label=list];
m16_100 -> m16_104  [key=1, style=dashed, color=darkseagreen4, label=list];
m16_100 -> m16_17  [key=2, style=dotted];
m16_105 -> m16_99  [key=0, style=bold, color=blue];
m16_542 -> m16_543  [key=0, style=solid];
m16_551 -> m16_20  [key=2, style=dotted];
m16_551 -> m16_552  [key=0, style=solid];
m16_552 -> m16_20  [key=2, style=dotted];
m16_552 -> m16_553  [key=0, style=solid];
m16_553 -> m16_20  [key=2, style=dotted];
m16_553 -> m16_554  [key=0, style=solid];
m16_554 -> m16_20  [key=2, style=dotted];
m16_554 -> m16_555  [key=0, style=solid];
m16_550 -> m16_551  [key=0, style=solid];
m16_550 -> m16_552  [key=1, style=dashed, color=darkseagreen4, label=newName];
m16_550 -> m16_553  [key=1, style=dashed, color=darkseagreen4, label=newName];
m16_550 -> m16_554  [key=1, style=dashed, color=darkseagreen4, label=newName];
m16_550 -> m16_17  [key=2, style=dotted];
m16_548 -> m16_550  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_548 -> m16_14  [key=2, style=dotted];
m16_548 -> m16_549  [key=0, style=solid];
m16_549 -> m16_550  [key=0, style=solid];
m16_549 -> m16_15  [key=2, style=dotted];
m16_543 -> m16_548  [key=1, style=dashed, color=darkseagreen4, label=name];
m16_543 -> m16_544  [key=0, style=solid];
m16_543 -> m16_556  [key=2, style=dotted];
m16_543 -> m16_546  [key=1, style=dashed, color=darkseagreen4, label=name];
m16_543 -> m16_547  [key=1, style=dashed, color=darkseagreen4, label=name];
m16_547 -> m16_548  [key=0, style=solid];
m16_547 -> m16_77  [key=2, style=dotted];
m16_546 -> m16_77  [key=2, style=dotted];
m16_546 -> m16_547  [key=0, style=solid];
m16_544 -> m16_546  [key=1, style=dashed, color=darkseagreen4, label=p1];
m16_544 -> m16_545  [key=0, style=solid];
m16_544 -> m16_557  [key=2, style=dotted];
m16_545 -> m16_547  [key=1, style=dashed, color=darkseagreen4, label=p2];
m16_545 -> m16_546  [key=0, style=solid];
m16_545 -> m16_557  [key=2, style=dotted];
m16_555 -> m16_542  [key=0, style=bold, color=blue];
m16_482 -> m16_483  [key=0, style=solid];
m16_491 -> m16_20  [key=2, style=dotted];
m16_491 -> m16_492  [key=0, style=solid];
m16_485 -> m16_20  [key=2, style=dotted];
m16_485 -> m16_486  [key=0, style=solid];
m16_486 -> m16_20  [key=2, style=dotted];
m16_486 -> m16_487  [key=0, style=solid];
m16_487 -> m16_20  [key=2, style=dotted];
m16_487 -> m16_488  [key=0, style=solid];
m16_487 -> m16_379  [key=2, style=dotted];
m16_488 -> m16_20  [key=2, style=dotted];
m16_488 -> m16_489  [key=0, style=solid];
m16_488 -> m16_379  [key=2, style=dotted];
m16_489 -> m16_20  [key=2, style=dotted];
m16_489 -> m16_490  [key=0, style=solid];
m16_489 -> m16_379  [key=2, style=dotted];
m16_490 -> m16_184  [key=2, style=dotted];
m16_490 -> m16_491  [key=0, style=solid];
m16_483 -> m16_491  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_483 -> m16_484  [key=0, style=solid];
m16_484 -> m16_485  [key=0, style=solid];
m16_484 -> m16_486  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_484 -> m16_487  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_484 -> m16_488  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_484 -> m16_489  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_484 -> m16_490  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_484 -> m16_17  [key=2, style=dotted];
m16_492 -> m16_482  [key=0, style=bold, color=blue];
m16_535 -> m16_536  [key=0, style=solid];
m16_538 -> m16_20  [key=2, style=dotted];
m16_538 -> m16_539  [key=0, style=solid];
m16_539 -> m16_20  [key=2, style=dotted];
m16_539 -> m16_540  [key=0, style=solid];
m16_540 -> m16_20  [key=2, style=dotted];
m16_540 -> m16_541  [key=0, style=solid];
m16_537 -> m16_538  [key=0, style=solid];
m16_537 -> m16_539  [key=1, style=dashed, color=darkseagreen4, label=o];
m16_537 -> m16_540  [key=1, style=dashed, color=darkseagreen4, label=o];
m16_537 -> m16_17  [key=2, style=dotted];
m16_536 -> m16_537  [key=0, style=solid];
m16_541 -> m16_535  [key=0, style=bold, color=blue];
m16_173 -> m16_174  [key=0, style=solid];
m16_177 -> m16_178  [key=0, style=solid, color=green];
m16_177 -> m16_157  [key=2, style=dotted, color=green];
m16_177 -> m16_179  [key=1, style=dashed, color=green, label=d1];
m16_176 -> m16_177  [key=0, style=solid, color=green];
m16_176 -> m16_20  [key=2, style=dotted];
m16_178 -> m16_179  [key=0, style=solid];
m16_178 -> m16_185  [key=2, style=dotted];
m16_179 -> m16_180  [key=0, style=solid];
m16_179 -> m16_184  [key=2, style=dotted];
m16_179 -> m16_20  [key=2, style=dotted];
m16_175 -> m16_176  [key=0, style=solid];
m16_175 -> m16_184  [key=2, style=dotted];
m16_174 -> m16_178  [key=1, style=dashed, color=darkseagreen4, label=s];
m16_174 -> m16_175  [key=0, style=solid];
m16_174 -> m16_181  [key=1, style=dashed, color=darkseagreen4, label=s];
m16_180 -> m16_157  [key=2, style=dotted];
m16_180 -> m16_181  [key=0, style=solid];
m16_180 -> m16_182  [key=1, style=dashed, color=darkseagreen4, label=d2];
m16_182 -> m16_20  [key=2, style=dotted];
m16_182 -> m16_184  [key=2, style=dotted];
m16_182 -> m16_183  [key=0, style=solid];
m16_181 -> m16_185  [key=2, style=dotted];
m16_181 -> m16_182  [key=0, style=solid];
m16_183 -> m16_173  [key=0, style=bold, color=blue];
m16_406 -> m16_407  [key=0, style=solid];
m16_417 -> m16_20  [key=2, style=dotted];
m16_417 -> m16_418  [key=0, style=solid];
m16_409 -> m16_20  [key=2, style=dotted];
m16_409 -> m16_410  [key=0, style=solid];
m16_410 -> m16_20  [key=2, style=dotted];
m16_410 -> m16_411  [key=0, style=solid];
m16_411 -> m16_20  [key=2, style=dotted];
m16_411 -> m16_412  [key=0, style=solid];
m16_411 -> m16_379  [key=2, style=dotted];
m16_412 -> m16_20  [key=2, style=dotted];
m16_412 -> m16_413  [key=0, style=solid];
m16_412 -> m16_379  [key=2, style=dotted];
m16_413 -> m16_20  [key=2, style=dotted];
m16_413 -> m16_414  [key=0, style=solid];
m16_413 -> m16_379  [key=2, style=dotted];
m16_414 -> m16_20  [key=2, style=dotted];
m16_414 -> m16_415  [key=0, style=solid];
m16_415 -> m16_20  [key=2, style=dotted];
m16_415 -> m16_416  [key=0, style=solid];
m16_416 -> m16_184  [key=2, style=dotted];
m16_416 -> m16_417  [key=0, style=solid];
m16_407 -> m16_417  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_407 -> m16_408  [key=0, style=solid];
m16_408 -> m16_409  [key=0, style=solid];
m16_408 -> m16_410  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_408 -> m16_411  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_408 -> m16_412  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_408 -> m16_413  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_408 -> m16_414  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_408 -> m16_415  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_408 -> m16_416  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_408 -> m16_17  [key=2, style=dotted];
m16_418 -> m16_406  [key=0, style=bold, color=blue];
m16_198 -> m16_199  [key=0, style=solid];
m16_203 -> m16_20  [key=2, style=dotted];
m16_203 -> m16_204  [key=0, style=solid];
m16_205 -> m16_20  [key=2, style=dotted];
m16_205 -> m16_206  [key=0, style=solid];
m16_206 -> m16_20  [key=2, style=dotted];
m16_206 -> m16_207  [key=0, style=solid];
m16_207 -> m16_20  [key=2, style=dotted];
m16_207 -> m16_208  [key=0, style=solid];
m16_208 -> m16_20  [key=2, style=dotted];
m16_208 -> m16_209  [key=0, style=solid];
m16_209 -> m16_20  [key=2, style=dotted];
m16_209 -> m16_210  [key=0, style=solid];
m16_202 -> m16_184  [key=2, style=dotted];
m16_202 -> m16_203  [key=0, style=solid];
m16_202 -> m16_204  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_204 -> m16_205  [key=0, style=solid];
m16_204 -> m16_206  [key=1, style=dashed, color=darkseagreen4, label=result];
m16_204 -> m16_207  [key=1, style=dashed, color=darkseagreen4, label=result];
m16_204 -> m16_208  [key=1, style=dashed, color=darkseagreen4, label=result];
m16_204 -> m16_209  [key=1, style=dashed, color=darkseagreen4, label=result];
m16_204 -> m16_17  [key=2, style=dotted];
m16_199 -> m16_202  [key=1, style=dashed, color=darkseagreen4, label=list];
m16_199 -> m16_45  [key=2, style=dotted];
m16_199 -> m16_200  [key=0, style=solid];
m16_199 -> m16_201  [key=1, style=dashed, color=darkseagreen4, label=list];
m16_201 -> m16_202  [key=0, style=solid];
m16_201 -> m16_13  [key=2, style=dotted];
m16_201 -> m16_77  [key=2, style=dotted];
m16_200 -> m16_201  [key=0, style=solid];
m16_200 -> m16_13  [key=2, style=dotted];
m16_200 -> m16_77  [key=2, style=dotted];
m16_210 -> m16_198  [key=0, style=bold, color=blue];
m16_598 -> m16_599  [key=0, style=solid];
m16_606 -> m16_20  [key=2, style=dotted];
m16_606 -> m16_607  [key=0, style=solid];
m16_607 -> m16_20  [key=2, style=dotted];
m16_607 -> m16_608  [key=0, style=solid];
m16_604 -> m16_184  [key=2, style=dotted];
m16_604 -> m16_605  [key=0, style=solid];
m16_601 -> m16_606  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m16_601 -> m16_607  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m16_601 -> m16_604  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m16_601 -> m16_602  [key=0, style=solid];
m16_601 -> m16_610  [key=2, style=dotted];
m16_601 -> m16_603  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m16_605 -> m16_606  [key=0, style=solid];
m16_605 -> m16_607  [key=1, style=dashed, color=darkseagreen4, label=articles2];
m16_605 -> m16_17  [key=2, style=dotted];
m16_603 -> m16_604  [key=0, style=solid];
m16_603 -> m16_77  [key=2, style=dotted];
m16_600 -> m16_601  [key=0, style=solid];
m16_600 -> m16_603  [key=1, style=dashed, color=darkseagreen4, label=a2];
m16_600 -> m16_609  [key=2, style=dotted];
m16_602 -> m16_603  [key=0, style=solid];
m16_602 -> m16_77  [key=2, style=dotted];
m16_599 -> m16_600  [key=0, style=solid];
m16_599 -> m16_602  [key=1, style=dashed, color=darkseagreen4, label=a1];
m16_599 -> m16_609  [key=2, style=dotted];
m16_608 -> m16_598  [key=0, style=bold, color=blue];
m16_254 -> m16_255  [key=0, style=solid];
m16_255 -> m16_157  [key=2, style=dotted];
m16_255 -> m16_256  [key=0, style=solid];
m16_259 -> m16_20  [key=2, style=dotted];
m16_259 -> m16_260  [key=0, style=solid];
m16_260 -> m16_20  [key=2, style=dotted];
m16_260 -> m16_261  [key=0, style=solid];
m16_261 -> m16_20  [key=2, style=dotted];
m16_261 -> m16_262  [key=0, style=solid];
m16_262 -> m16_20  [key=2, style=dotted];
m16_262 -> m16_263  [key=0, style=solid];
m16_256 -> m16_257  [key=0, style=solid];
m16_256 -> m16_14  [key=2, style=dotted];
m16_256 -> m16_258  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_258 -> m16_259  [key=0, style=solid];
m16_258 -> m16_260  [key=1, style=dashed, color=darkseagreen4, label=v2];
m16_258 -> m16_261  [key=1, style=dashed, color=darkseagreen4, label=v2];
m16_258 -> m16_262  [key=1, style=dashed, color=darkseagreen4, label=v2];
m16_258 -> m16_17  [key=2, style=dotted];
m16_257 -> m16_258  [key=0, style=solid];
m16_257 -> m16_15  [key=2, style=dotted];
m16_263 -> m16_254  [key=0, style=bold, color=blue];
m16_426 -> m16_427  [key=0, style=solid];
m16_427 -> m16_431  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_427 -> m16_428  [key=0, style=solid];
m16_428 -> m16_56  [key=2, style=dotted];
m16_428 -> m16_430  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_428 -> m16_429  [key=0, style=solid];
m16_429 -> m16_426  [key=0, style=bold, color=blue];
m16_618 -> m16_619  [key=0, style=solid];
m16_624 -> m16_14  [key=2, style=dotted];
m16_624 -> m16_625  [key=0, style=solid];
m16_621 -> m16_45  [key=2, style=dotted];
m16_621 -> m16_624  [key=1, style=dashed, color=darkseagreen4, label=products];
m16_621 -> m16_622  [key=0, style=solid];
m16_621 -> m16_623  [key=1, style=dashed, color=darkseagreen4, label=products];
m16_619 -> m16_569  [key=2, style=dotted];
m16_619 -> m16_620  [key=0, style=solid];
m16_619 -> m16_225  [key=2, style=dotted];
m16_619 -> m16_622  [key=1, style=dashed, color=darkseagreen4, label=p1];
m16_620 -> m16_569  [key=2, style=dotted];
m16_620 -> m16_621  [key=0, style=solid];
m16_620 -> m16_225  [key=2, style=dotted];
m16_620 -> m16_623  [key=1, style=dashed, color=darkseagreen4, label=p2];
m16_625 -> m16_15  [key=2, style=dotted];
m16_625 -> m16_626  [key=0, style=solid];
m16_623 -> m16_624  [key=0, style=solid];
m16_623 -> m16_77  [key=2, style=dotted];
m16_622 -> m16_77  [key=2, style=dotted];
m16_622 -> m16_623  [key=0, style=solid];
m16_626 -> m16_618  [key=0, style=bold, color=blue];
m16_433 -> m16_434  [key=0, style=solid];
m16_434 -> m16_438  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_434 -> m16_435  [key=0, style=solid];
m16_435 -> m16_56  [key=2, style=dotted];
m16_435 -> m16_437  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_435 -> m16_436  [key=0, style=solid];
m16_436 -> m16_433  [key=0, style=bold, color=blue];
m16_29 -> m16_30  [key=0, style=solid];
m16_30 -> m16_25  [key=2, style=dotted];
m16_30 -> m16_31  [key=0, style=solid];
m16_31 -> m16_29  [key=0, style=bold, color=blue];
m16_250 -> m16_251  [key=0, style=solid];
m16_252 -> m16_20  [key=2, style=dotted];
m16_252 -> m16_253  [key=0, style=solid];
m16_251 -> m16_252  [key=0, style=solid];
m16_251 -> m16_17  [key=2, style=dotted];
m16_253 -> m16_250  [key=0, style=bold, color=blue];
m16_62 -> m16_63  [key=0, style=solid];
m16_65 -> m16_20  [key=2, style=dotted];
m16_65 -> m16_66  [key=0, style=solid];
m16_64 -> m16_65  [key=0, style=solid];
m16_64 -> m16_67  [key=2, style=dotted];
m16_64 -> m16_68  [key=2, style=dotted];
m16_63 -> m16_64  [key=0, style=solid];
m16_63 -> m16_56  [key=2, style=dotted];
m16_63 -> m16_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_66 -> m16_62  [key=0, style=bold, color=blue];
m16_52 -> m16_53  [key=0, style=solid];
m16_53 -> m16_58  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_53 -> m16_54  [key=0, style=solid];
m16_54 -> m16_56  [key=2, style=dotted];
m16_54 -> m16_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_54 -> m16_55  [key=0, style=solid];
m16_55 -> m16_52  [key=0, style=bold, color=blue];
m16_341 -> m16_342  [key=0, style=solid];
m16_347 -> m16_20  [key=2, style=dotted];
m16_347 -> m16_348  [key=0, style=solid];
m16_346 -> m16_184  [key=2, style=dotted];
m16_346 -> m16_347  [key=0, style=solid];
m16_342 -> m16_346  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_342 -> m16_343  [key=0, style=solid];
m16_342 -> m16_349  [key=2, style=dotted];
m16_342 -> m16_344  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_342 -> m16_345  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_345 -> m16_346  [key=0, style=solid];
m16_343 -> m16_344  [key=0, style=solid];
m16_344 -> m16_345  [key=0, style=solid];
m16_348 -> m16_341  [key=0, style=bold, color=blue];
m16_151 -> m16_152  [key=0, style=solid];
m16_152 -> m16_157  [key=2, style=dotted];
m16_152 -> m16_153  [key=0, style=solid];
m16_153 -> m16_154  [key=0, style=solid];
m16_153 -> m16_134  [key=2, style=dotted];
m16_154 -> m16_155  [key=0, style=solid];
m16_154 -> m16_14  [key=2, style=dotted];
m16_155 -> m16_156  [key=0, style=solid];
m16_155 -> m16_15  [key=2, style=dotted];
m16_156 -> m16_151  [key=0, style=bold, color=blue];
m16_137 -> m16_138  [key=0, style=solid];
m16_138 -> m16_139  [key=0, style=solid];
m16_138 -> m16_140  [key=2, style=dotted];
m16_139 -> m16_137  [key=0, style=bold, color=blue];
m16_350 -> m16_351  [key=0, style=solid];
m16_356 -> m16_20  [key=2, style=dotted];
m16_356 -> m16_357  [key=0, style=solid];
m16_355 -> m16_184  [key=2, style=dotted];
m16_355 -> m16_356  [key=0, style=solid];
m16_351 -> m16_355  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_351 -> m16_352  [key=0, style=solid];
m16_351 -> m16_358  [key=2, style=dotted];
m16_351 -> m16_353  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_351 -> m16_354  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_354 -> m16_355  [key=0, style=solid];
m16_352 -> m16_353  [key=0, style=solid];
m16_353 -> m16_354  [key=0, style=solid];
m16_357 -> m16_350  [key=0, style=bold, color=blue];
m16_113 -> m16_114  [key=0, style=solid];
m16_115 -> m16_20  [key=2, style=dotted];
m16_115 -> m16_116  [key=0, style=solid];
m16_116 -> m16_20  [key=2, style=dotted];
m16_116 -> m16_117  [key=0, style=solid];
m16_117 -> m16_20  [key=2, style=dotted];
m16_117 -> m16_118  [key=0, style=solid];
m16_118 -> m16_20  [key=2, style=dotted];
m16_118 -> m16_119  [key=0, style=solid];
m16_114 -> m16_115  [key=0, style=solid];
m16_114 -> m16_116  [key=1, style=dashed, color=darkseagreen4, label=list];
m16_114 -> m16_117  [key=1, style=dashed, color=darkseagreen4, label=list];
m16_114 -> m16_118  [key=1, style=dashed, color=darkseagreen4, label=list];
m16_114 -> m16_17  [key=2, style=dotted];
m16_119 -> m16_113  [key=0, style=bold, color=blue];
m16_161 -> m16_162  [key=0, style=solid];
m16_162 -> m16_28  [key=2, style=dotted];
m16_162 -> m16_163  [key=0, style=solid];
m16_163 -> m16_161  [key=0, style=bold, color=blue];
m16_21 -> m16_22  [key=0, style=solid];
m16_22 -> m16_24  [key=2, style=dotted];
m16_22 -> m16_23  [key=0, style=solid];
m16_23 -> m16_21  [key=0, style=bold, color=blue];
m16_245 -> m16_246  [key=0, style=solid];
m16_247 -> m16_20  [key=2, style=dotted];
m16_247 -> m16_248  [key=0, style=solid];
m16_248 -> m16_20  [key=2, style=dotted];
m16_248 -> m16_249  [key=0, style=solid];
m16_246 -> m16_247  [key=0, style=solid];
m16_246 -> m16_248  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m16_246 -> m16_17  [key=2, style=dotted];
m16_249 -> m16_245  [key=0, style=bold, color=blue];
m16_578 -> m16_579  [key=0, style=solid];
m16_583 -> m16_20  [key=2, style=dotted];
m16_583 -> m16_584  [key=0, style=solid];
m16_587 -> m16_20  [key=2, style=dotted];
m16_587 -> m16_588  [key=0, style=solid];
m16_591 -> m16_20  [key=2, style=dotted];
m16_591 -> m16_592  [key=0, style=solid];
m16_582 -> m16_184  [key=2, style=dotted];
m16_582 -> m16_583  [key=0, style=solid];
m16_586 -> m16_184  [key=2, style=dotted];
m16_586 -> m16_587  [key=0, style=solid];
m16_590 -> m16_184  [key=2, style=dotted];
m16_590 -> m16_591  [key=0, style=solid];
m16_584 -> m16_586  [key=1, style=dashed, color=darkseagreen4, label=foo2];
m16_584 -> m16_585  [key=0, style=solid];
m16_584 -> m16_593  [key=2, style=dotted];
m16_588 -> m16_590  [key=1, style=dashed, color=darkseagreen4, label=foo3];
m16_588 -> m16_589  [key=0, style=solid];
m16_588 -> m16_597  [key=2, style=dotted];
m16_580 -> m16_582  [key=1, style=dashed, color=darkseagreen4, label=foo1];
m16_580 -> m16_581  [key=0, style=solid];
m16_580 -> m16_593  [key=2, style=dotted];
m16_581 -> m16_582  [key=0, style=solid];
m16_581 -> m16_594  [key=2, style=dotted];
m16_581 -> m16_595  [key=2, style=dotted];
m16_585 -> m16_586  [key=0, style=solid];
m16_585 -> m16_596  [key=2, style=dotted];
m16_585 -> m16_595  [key=2, style=dotted];
m16_589 -> m16_590  [key=0, style=solid];
m16_589 -> m16_596  [key=2, style=dotted];
m16_589 -> m16_595  [key=2, style=dotted];
m16_579 -> m16_580  [key=0, style=solid];
m16_592 -> m16_578  [key=0, style=bold, color=blue];
m16_522 -> m16_523  [key=0, style=solid];
m16_525 -> m16_20  [key=2, style=dotted];
m16_525 -> m16_526  [key=0, style=solid];
m16_526 -> m16_20  [key=2, style=dotted];
m16_526 -> m16_527  [key=0, style=solid];
m16_527 -> m16_20  [key=2, style=dotted];
m16_527 -> m16_528  [key=0, style=solid];
m16_528 -> m16_20  [key=2, style=dotted];
m16_528 -> m16_529  [key=0, style=solid];
m16_530 -> m16_20  [key=2, style=dotted];
m16_530 -> m16_531  [key=0, style=solid];
m16_532 -> m16_20  [key=2, style=dotted];
m16_532 -> m16_533  [key=0, style=solid];
m16_533 -> m16_20  [key=2, style=dotted];
m16_533 -> m16_534  [key=0, style=solid];
m16_524 -> m16_525  [key=0, style=solid];
m16_524 -> m16_526  [key=1, style=dashed, color=darkseagreen4, label=o];
m16_524 -> m16_527  [key=1, style=dashed, color=darkseagreen4, label=o];
m16_524 -> m16_528  [key=1, style=dashed, color=darkseagreen4, label=o];
m16_524 -> m16_530  [key=1, style=dashed, color=darkseagreen4, label=o];
m16_524 -> m16_532  [key=1, style=dashed, color=darkseagreen4, label=o];
m16_524 -> m16_533  [key=1, style=dashed, color=darkseagreen4, label=o];
m16_524 -> m16_17  [key=2, style=dotted];
m16_524 -> m16_529  [key=1, style=dashed, color=darkseagreen4, label=o];
m16_524 -> m16_531  [key=1, style=dashed, color=darkseagreen4, label=o];
m16_529 -> m16_530  [key=0, style=solid];
m16_529 -> m16_127  [key=2, style=dotted];
m16_531 -> m16_532  [key=0, style=solid];
m16_531 -> m16_127  [key=2, style=dotted];
m16_523 -> m16_524  [key=0, style=solid];
m16_534 -> m16_522  [key=0, style=bold, color=blue];
m16_32 -> m16_33  [key=0, style=solid];
m16_35 -> m16_20  [key=2, style=dotted];
m16_35 -> m16_36  [key=0, style=solid];
m16_35 -> m16_40  [key=2, style=dotted];
m16_36 -> m16_20  [key=2, style=dotted];
m16_36 -> m16_37  [key=0, style=solid];
m16_36 -> m16_41  [key=2, style=dotted];
m16_37 -> m16_20  [key=2, style=dotted];
m16_37 -> m16_38  [key=0, style=solid];
m16_37 -> m16_41  [key=2, style=dotted];
m16_38 -> m16_20  [key=2, style=dotted];
m16_38 -> m16_39  [key=0, style=solid];
m16_38 -> m16_41  [key=2, style=dotted];
m16_34 -> m16_35  [key=0, style=solid];
m16_34 -> m16_36  [key=1, style=dashed, color=darkseagreen4, label=result];
m16_34 -> m16_37  [key=1, style=dashed, color=darkseagreen4, label=result];
m16_34 -> m16_38  [key=1, style=dashed, color=darkseagreen4, label=result];
m16_34 -> m16_17  [key=2, style=dotted];
m16_33 -> m16_34  [key=0, style=solid];
m16_39 -> m16_32  [key=0, style=bold, color=blue];
m16_380 -> m16_381  [key=0, style=solid];
m16_390 -> m16_20  [key=2, style=dotted];
m16_390 -> m16_391  [key=0, style=solid];
m16_383 -> m16_20  [key=2, style=dotted];
m16_383 -> m16_384  [key=0, style=solid];
m16_384 -> m16_20  [key=2, style=dotted];
m16_384 -> m16_385  [key=0, style=solid];
m16_385 -> m16_20  [key=2, style=dotted];
m16_385 -> m16_386  [key=0, style=solid];
m16_385 -> m16_379  [key=2, style=dotted];
m16_386 -> m16_20  [key=2, style=dotted];
m16_386 -> m16_387  [key=0, style=solid];
m16_386 -> m16_379  [key=2, style=dotted];
m16_387 -> m16_20  [key=2, style=dotted];
m16_387 -> m16_388  [key=0, style=solid];
m16_388 -> m16_20  [key=2, style=dotted];
m16_388 -> m16_389  [key=0, style=solid];
m16_389 -> m16_184  [key=2, style=dotted];
m16_389 -> m16_390  [key=0, style=solid];
m16_381 -> m16_390  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_381 -> m16_382  [key=0, style=solid];
m16_382 -> m16_383  [key=0, style=solid];
m16_382 -> m16_384  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_382 -> m16_385  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_382 -> m16_386  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_382 -> m16_387  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_382 -> m16_388  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_382 -> m16_389  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_382 -> m16_17  [key=2, style=dotted];
m16_391 -> m16_380  [key=0, style=bold, color=blue];
m16_164 -> m16_165  [key=0, style=solid];
m16_165 -> m16_28  [key=2, style=dotted];
m16_165 -> m16_166  [key=0, style=solid];
m16_166 -> m16_164  [key=0, style=bold, color=blue];
m16_106 -> m16_107  [key=0, style=solid];
m16_108 -> m16_20  [key=2, style=dotted];
m16_108 -> m16_109  [key=0, style=solid];
m16_109 -> m16_20  [key=2, style=dotted];
m16_109 -> m16_110  [key=0, style=solid];
m16_109 -> m16_41  [key=2, style=dotted];
m16_110 -> m16_20  [key=2, style=dotted];
m16_110 -> m16_111  [key=0, style=solid];
m16_110 -> m16_41  [key=2, style=dotted];
m16_111 -> m16_20  [key=2, style=dotted];
m16_111 -> m16_112  [key=0, style=solid];
m16_111 -> m16_41  [key=2, style=dotted];
m16_107 -> m16_108  [key=0, style=solid];
m16_107 -> m16_109  [key=1, style=dashed, color=darkseagreen4, label=list];
m16_107 -> m16_110  [key=1, style=dashed, color=darkseagreen4, label=list];
m16_107 -> m16_111  [key=1, style=dashed, color=darkseagreen4, label=list];
m16_107 -> m16_17  [key=2, style=dotted];
m16_112 -> m16_106  [key=0, style=bold, color=blue];
m16_227 -> m16_228  [key=0, style=solid];
m16_231 -> m16_20  [key=2, style=dotted];
m16_231 -> m16_232  [key=0, style=solid];
m16_232 -> m16_20  [key=2, style=dotted];
m16_232 -> m16_233  [key=0, style=solid];
m16_233 -> m16_20  [key=2, style=dotted];
m16_233 -> m16_234  [key=0, style=solid];
m16_228 -> m16_231  [key=1, style=dashed, color=darkseagreen4, label=p];
m16_228 -> m16_232  [key=1, style=dashed, color=darkseagreen4, label=p];
m16_228 -> m16_233  [key=1, style=dashed, color=darkseagreen4, label=p];
m16_228 -> m16_229  [key=0, style=solid];
m16_228 -> m16_235  [key=2, style=dotted];
m16_228 -> m16_230  [key=1, style=dashed, color=darkseagreen4, label=p];
m16_230 -> m16_231  [key=0, style=solid];
m16_230 -> m16_67  [key=2, style=dotted];
m16_230 -> m16_45  [key=2, style=dotted];
m16_230 -> m16_236  [key=2, style=dotted];
m16_230 -> m16_237  [key=2, style=dotted];
m16_229 -> m16_230  [key=0, style=solid];
m16_229 -> m16_45  [key=2, style=dotted];
m16_234 -> m16_227  [key=0, style=bold, color=blue];
m16_238 -> m16_239  [key=0, style=solid];
m16_242 -> m16_20  [key=2, style=dotted];
m16_242 -> m16_243  [key=0, style=solid];
m16_239 -> m16_242  [key=1, style=dashed, color=darkseagreen4, label=p];
m16_239 -> m16_240  [key=0, style=solid];
m16_239 -> m16_235  [key=2, style=dotted];
m16_239 -> m16_241  [key=1, style=dashed, color=darkseagreen4, label=p];
m16_241 -> m16_242  [key=0, style=solid];
m16_241 -> m16_67  [key=2, style=dotted];
m16_241 -> m16_45  [key=2, style=dotted];
m16_241 -> m16_244  [key=2, style=dotted];
m16_241 -> m16_237  [key=2, style=dotted];
m16_240 -> m16_241  [key=0, style=solid];
m16_243 -> m16_238  [key=0, style=bold, color=blue];
m16_502 -> m16_503  [key=0, style=solid];
m16_509 -> m16_20  [key=2, style=dotted];
m16_509 -> m16_510  [key=0, style=solid];
m16_510 -> m16_20  [key=2, style=dotted];
m16_510 -> m16_511  [key=0, style=solid];
m16_508 -> m16_509  [key=0, style=solid];
m16_508 -> m16_510  [key=1, style=dashed, color=darkseagreen4, label=values2];
m16_508 -> m16_67  [key=2, style=dotted];
m16_508 -> m16_512  [key=2, style=dotted];
m16_506 -> m16_508  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_506 -> m16_67  [key=2, style=dotted];
m16_506 -> m16_507  [key=0, style=solid];
m16_506 -> m16_501  [key=2, style=dotted];
m16_507 -> m16_508  [key=0, style=solid];
m16_507 -> m16_15  [key=2, style=dotted];
m16_505 -> m16_45  [key=2, style=dotted];
m16_505 -> m16_506  [key=0, style=solid];
m16_503 -> m16_504  [key=0, style=solid];
m16_503 -> m16_500  [key=2, style=dotted];
m16_504 -> m16_505  [key=0, style=solid];
m16_511 -> m16_502  [key=0, style=bold, color=blue];
m16_558 -> m16_559  [key=0, style=solid];
m16_566 -> m16_20  [key=2, style=dotted];
m16_566 -> m16_567  [key=0, style=solid];
m16_564 -> m16_20  [key=2, style=dotted];
m16_564 -> m16_565  [key=0, style=solid];
m16_564 -> m16_573  [key=2, style=dotted];
m16_564 -> m16_574  [key=2, style=dotted];
m16_559 -> m16_566  [key=1, style=dashed, color=darkseagreen4, label=collection];
m16_559 -> m16_560  [key=0, style=solid];
m16_559 -> m16_568  [key=2, style=dotted];
m16_559 -> m16_569  [key=2, style=dotted];
m16_559 -> m16_563  [key=1, style=dashed, color=darkseagreen4, label=collection];
m16_565 -> m16_566  [key=0, style=solid];
m16_565 -> m16_575  [key=2, style=dotted];
m16_565 -> m16_576  [key=2, style=dotted];
m16_565 -> m16_573  [key=2, style=dotted];
m16_565 -> m16_574  [key=2, style=dotted];
m16_565 -> m16_577  [key=2, style=dotted];
m16_563 -> m16_564  [key=0, style=solid];
m16_563 -> m16_572  [key=2, style=dotted];
m16_562 -> m16_564  [key=1, style=dashed, color=darkseagreen4, label=sw];
m16_562 -> m16_565  [key=1, style=dashed, color=darkseagreen4, label=sw];
m16_562 -> m16_563  [key=0, style=solid];
m16_562 -> m16_571  [key=2, style=dotted];
m16_560 -> m16_565  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m16_560 -> m16_563  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m16_560 -> m16_561  [key=0, style=solid];
m16_560 -> m16_570  [key=2, style=dotted];
m16_561 -> m16_562  [key=0, style=solid];
m16_567 -> m16_558  [key=0, style=bold, color=blue];
m16_148 -> m16_149  [key=0, style=solid];
m16_149 -> m16_150  [key=0, style=solid];
m16_149 -> m16_28  [key=2, style=dotted];
m16_150 -> m16_148  [key=0, style=bold, color=blue];
m16_440 -> m16_441  [key=0, style=solid];
m16_446 -> m16_20  [key=2, style=dotted];
m16_446 -> m16_447  [key=0, style=solid];
m16_445 -> m16_184  [key=2, style=dotted];
m16_445 -> m16_446  [key=0, style=solid];
m16_441 -> m16_445  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_441 -> m16_442  [key=0, style=solid];
m16_441 -> m16_358  [key=2, style=dotted];
m16_441 -> m16_443  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_441 -> m16_444  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_444 -> m16_445  [key=0, style=solid];
m16_442 -> m16_443  [key=0, style=solid];
m16_443 -> m16_444  [key=0, style=solid];
m16_447 -> m16_440  [key=0, style=bold, color=blue];
m16_368 -> m16_369  [key=0, style=solid];
m16_371 -> m16_20  [key=2, style=dotted];
m16_371 -> m16_372  [key=0, style=solid];
m16_372 -> m16_20  [key=2, style=dotted];
m16_372 -> m16_373  [key=0, style=solid];
m16_373 -> m16_20  [key=2, style=dotted];
m16_373 -> m16_374  [key=0, style=solid];
m16_373 -> m16_379  [key=2, style=dotted];
m16_374 -> m16_20  [key=2, style=dotted];
m16_374 -> m16_375  [key=0, style=solid];
m16_374 -> m16_379  [key=2, style=dotted];
m16_375 -> m16_20  [key=2, style=dotted];
m16_375 -> m16_376  [key=0, style=solid];
m16_375 -> m16_379  [key=2, style=dotted];
m16_376 -> m16_20  [key=2, style=dotted];
m16_376 -> m16_377  [key=0, style=solid];
m16_377 -> m16_20  [key=2, style=dotted];
m16_377 -> m16_378  [key=0, style=solid];
m16_370 -> m16_371  [key=0, style=solid];
m16_370 -> m16_372  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_370 -> m16_373  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_370 -> m16_374  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_370 -> m16_375  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_370 -> m16_376  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_370 -> m16_377  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_370 -> m16_17  [key=2, style=dotted];
m16_369 -> m16_370  [key=0, style=solid];
m16_378 -> m16_368  [key=0, style=bold, color=blue];
m16_264 -> m16_265  [key=0, style=solid];
m16_265 -> m16_157  [key=2, style=dotted];
m16_265 -> m16_266  [key=0, style=solid];
m16_265 -> m16_274  [key=2, style=dotted];
m16_270 -> m16_20  [key=2, style=dotted];
m16_270 -> m16_271  [key=0, style=solid];
m16_271 -> m16_20  [key=2, style=dotted];
m16_271 -> m16_272  [key=0, style=solid];
m16_272 -> m16_20  [key=2, style=dotted];
m16_272 -> m16_273  [key=0, style=solid];
m16_266 -> m16_267  [key=0, style=solid];
m16_266 -> m16_275  [key=2, style=dotted];
m16_266 -> m16_276  [key=2, style=dotted];
m16_269 -> m16_270  [key=0, style=solid];
m16_269 -> m16_271  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m16_269 -> m16_272  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m16_269 -> m16_17  [key=2, style=dotted];
m16_267 -> m16_269  [key=1, style=dashed, color=darkseagreen4, label=originalJson];
m16_267 -> m16_14  [key=2, style=dotted];
m16_267 -> m16_268  [key=0, style=solid];
m16_268 -> m16_269  [key=0, style=solid];
m16_268 -> m16_15  [key=2, style=dotted];
m16_273 -> m16_264  [key=0, style=bold, color=blue];
m16_134 -> m16_135  [key=0, style=solid];
m16_135 -> m16_136  [key=0, style=solid];
m16_136 -> m16_134  [key=0, style=bold, color=blue];
m16_311 -> m16_312  [key=0, style=solid];
m16_313 -> m16_157  [key=2, style=dotted];
m16_313 -> m16_314  [key=0, style=solid];
m16_316 -> m16_157  [key=2, style=dotted];
m16_316 -> m16_317  [key=0, style=solid];
m16_316 -> m16_324  [key=2, style=dotted];
m16_320 -> m16_157  [key=2, style=dotted];
m16_320 -> m16_321  [key=0, style=solid];
m16_320 -> m16_324  [key=2, style=dotted];
m16_321 -> m16_157  [key=2, style=dotted];
m16_321 -> m16_322  [key=0, style=solid];
m16_321 -> m16_324  [key=2, style=dotted];
m16_312 -> m16_313  [key=0, style=solid];
m16_312 -> m16_45  [key=2, style=dotted];
m16_314 -> m16_315  [key=0, style=solid];
m16_315 -> m16_316  [key=0, style=solid];
m16_315 -> m16_323  [key=2, style=dotted];
m16_317 -> m16_318  [key=0, style=solid];
m16_317 -> m16_323  [key=2, style=dotted];
m16_319 -> m16_320  [key=0, style=solid];
m16_319 -> m16_323  [key=2, style=dotted];
m16_318 -> m16_319  [key=0, style=solid];
m16_318 -> m16_323  [key=2, style=dotted];
m16_322 -> m16_311  [key=0, style=bold, color=blue];
m16_399 -> m16_400  [key=0, style=solid];
m16_400 -> m16_404  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_400 -> m16_401  [key=0, style=solid];
m16_401 -> m16_56  [key=2, style=dotted];
m16_401 -> m16_403  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_401 -> m16_402  [key=0, style=solid];
m16_402 -> m16_399  [key=0, style=bold, color=blue];
m16_211 -> m16_212  [key=0, style=solid];
m16_219 -> m16_20  [key=2, style=dotted];
m16_219 -> m16_220  [key=0, style=solid];
m16_220 -> m16_20  [key=2, style=dotted];
m16_220 -> m16_221  [key=0, style=solid];
m16_221 -> m16_20  [key=2, style=dotted];
m16_221 -> m16_222  [key=0, style=solid];
m16_222 -> m16_20  [key=2, style=dotted];
m16_222 -> m16_223  [key=0, style=solid];
m16_223 -> m16_20  [key=2, style=dotted];
m16_223 -> m16_224  [key=0, style=solid];
m16_218 -> m16_219  [key=0, style=solid];
m16_218 -> m16_220  [key=1, style=dashed, color=darkseagreen4, label=result];
m16_218 -> m16_221  [key=1, style=dashed, color=darkseagreen4, label=result];
m16_218 -> m16_222  [key=1, style=dashed, color=darkseagreen4, label=result];
m16_218 -> m16_223  [key=1, style=dashed, color=darkseagreen4, label=result];
m16_218 -> m16_17  [key=2, style=dotted];
m16_216 -> m16_218  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_216 -> m16_14  [key=2, style=dotted];
m16_216 -> m16_217  [key=0, style=solid];
m16_217 -> m16_218  [key=0, style=solid];
m16_217 -> m16_15  [key=2, style=dotted];
m16_213 -> m16_45  [key=2, style=dotted];
m16_213 -> m16_216  [key=1, style=dashed, color=darkseagreen4, label=list];
m16_213 -> m16_214  [key=0, style=solid];
m16_213 -> m16_215  [key=1, style=dashed, color=darkseagreen4, label=list];
m16_215 -> m16_216  [key=0, style=solid];
m16_215 -> m16_13  [key=2, style=dotted];
m16_215 -> m16_77  [key=2, style=dotted];
m16_215 -> m16_226  [key=2, style=dotted];
m16_212 -> m16_213  [key=0, style=solid];
m16_212 -> m16_215  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m16_212 -> m16_225  [key=2, style=dotted];
m16_212 -> m16_214  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m16_214 -> m16_13  [key=2, style=dotted];
m16_214 -> m16_77  [key=2, style=dotted];
m16_214 -> m16_215  [key=0, style=solid];
m16_214 -> m16_226  [key=2, style=dotted];
m16_224 -> m16_211  [key=0, style=bold, color=blue];
m16_78 -> m16_79  [key=0, style=solid];
m16_80 -> m16_20  [key=2, style=dotted];
m16_80 -> m16_81  [key=0, style=solid];
m16_81 -> m16_20  [key=2, style=dotted];
m16_81 -> m16_82  [key=0, style=solid];
m16_82 -> m16_20  [key=2, style=dotted];
m16_82 -> m16_83  [key=0, style=solid];
m16_83 -> m16_20  [key=2, style=dotted];
m16_83 -> m16_84  [key=0, style=solid];
m16_79 -> m16_80  [key=0, style=solid];
m16_79 -> m16_81  [key=1, style=dashed, color=darkseagreen4, label=list];
m16_79 -> m16_82  [key=1, style=dashed, color=darkseagreen4, label=list];
m16_79 -> m16_83  [key=1, style=dashed, color=darkseagreen4, label=list];
m16_79 -> m16_17  [key=2, style=dotted];
m16_84 -> m16_78  [key=0, style=bold, color=blue];
m16_627 -> m16_628  [key=0, style=solid];
m16_633 -> m16_20  [key=2, style=dotted];
m16_633 -> m16_634  [key=0, style=solid];
m16_634 -> m16_20  [key=2, style=dotted];
m16_634 -> m16_635  [key=0, style=solid];
m16_629 -> m16_633  [key=1, style=dashed, color=darkseagreen4, label=products];
m16_629 -> m16_634  [key=1, style=dashed, color=darkseagreen4, label=products];
m16_629 -> m16_630  [key=0, style=solid];
m16_629 -> m16_17  [key=2, style=dotted];
m16_629 -> m16_631  [key=1, style=dashed, color=darkseagreen4, label=products];
m16_632 -> m16_633  [key=0, style=solid];
m16_632 -> m16_637  [key=2, style=dotted];
m16_628 -> m16_629  [key=0, style=solid];
m16_630 -> m16_631  [key=0, style=solid];
m16_630 -> m16_636  [key=2, style=dotted];
m16_631 -> m16_632  [key=0, style=solid];
m16_635 -> m16_627  [key=0, style=bold, color=blue];
m16_638 -> m16_639  [key=0, style=solid];
m16_640 -> m16_14  [key=2, style=dotted];
m16_640 -> m16_641  [key=0, style=solid];
m16_639 -> m16_45  [key=2, style=dotted];
m16_639 -> m16_640  [key=0, style=solid];
m16_639 -> m16_643  [key=2, style=dotted];
m16_641 -> m16_15  [key=2, style=dotted];
m16_641 -> m16_642  [key=0, style=solid];
m16_642 -> m16_638  [key=0, style=bold, color=blue];
m16_448 -> m16_449  [key=0, style=solid];
m16_457 -> m16_20  [key=2, style=dotted];
m16_457 -> m16_458  [key=0, style=solid];
m16_451 -> m16_20  [key=2, style=dotted];
m16_451 -> m16_452  [key=0, style=solid];
m16_452 -> m16_20  [key=2, style=dotted];
m16_452 -> m16_453  [key=0, style=solid];
m16_453 -> m16_20  [key=2, style=dotted];
m16_453 -> m16_454  [key=0, style=solid];
m16_453 -> m16_379  [key=2, style=dotted];
m16_454 -> m16_20  [key=2, style=dotted];
m16_454 -> m16_455  [key=0, style=solid];
m16_454 -> m16_379  [key=2, style=dotted];
m16_455 -> m16_20  [key=2, style=dotted];
m16_455 -> m16_456  [key=0, style=solid];
m16_455 -> m16_379  [key=2, style=dotted];
m16_456 -> m16_184  [key=2, style=dotted];
m16_456 -> m16_457  [key=0, style=solid];
m16_449 -> m16_457  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_449 -> m16_450  [key=0, style=solid];
m16_450 -> m16_451  [key=0, style=solid];
m16_450 -> m16_452  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_450 -> m16_453  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_450 -> m16_454  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_450 -> m16_455  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_450 -> m16_456  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_450 -> m16_17  [key=2, style=dotted];
m16_458 -> m16_448  [key=0, style=bold, color=blue];
m16_141 -> m16_142  [key=0, style=solid];
m16_142 -> m16_143  [key=0, style=solid];
m16_142 -> m16_144  [key=2, style=dotted];
m16_143 -> m16_141  [key=0, style=bold, color=blue];
m16_419 -> m16_420  [key=0, style=solid];
m16_420 -> m16_424  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_420 -> m16_421  [key=0, style=solid];
m16_421 -> m16_56  [key=2, style=dotted];
m16_421 -> m16_423  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_421 -> m16_422  [key=0, style=solid];
m16_422 -> m16_419  [key=0, style=bold, color=blue];
m16_167 -> m16_168  [key=0, style=solid];
m16_170 -> m16_14  [key=2, style=dotted];
m16_170 -> m16_171  [key=0, style=solid];
m16_168 -> m16_45  [key=2, style=dotted];
m16_168 -> m16_169  [key=0, style=solid];
m16_171 -> m16_15  [key=2, style=dotted];
m16_171 -> m16_172  [key=0, style=solid];
m16_169 -> m16_170  [key=0, style=solid];
m16_169 -> m16_158  [key=2, style=dotted];
m16_172 -> m16_167  [key=0, style=bold, color=blue];
m16_330 -> m16_331  [key=0, style=solid];
m16_333 -> m16_20  [key=2, style=dotted];
m16_333 -> m16_334  [key=0, style=solid];
m16_334 -> m16_20  [key=2, style=dotted];
m16_334 -> m16_335  [key=0, style=solid];
m16_335 -> m16_20  [key=2, style=dotted];
m16_335 -> m16_336  [key=0, style=solid];
m16_336 -> m16_20  [key=2, style=dotted];
m16_336 -> m16_337  [key=0, style=solid];
m16_337 -> m16_20  [key=2, style=dotted];
m16_337 -> m16_338  [key=0, style=solid];
m16_338 -> m16_20  [key=2, style=dotted];
m16_338 -> m16_339  [key=0, style=solid];
m16_339 -> m16_20  [key=2, style=dotted];
m16_339 -> m16_340  [key=0, style=solid];
m16_332 -> m16_333  [key=0, style=solid];
m16_332 -> m16_334  [key=1, style=dashed, color=darkseagreen4, label=c2];
m16_332 -> m16_335  [key=1, style=dashed, color=darkseagreen4, label=c2];
m16_332 -> m16_336  [key=1, style=dashed, color=darkseagreen4, label=c2];
m16_332 -> m16_337  [key=1, style=dashed, color=darkseagreen4, label=c2];
m16_332 -> m16_338  [key=1, style=dashed, color=darkseagreen4, label=c2];
m16_332 -> m16_339  [key=1, style=dashed, color=darkseagreen4, label=c2];
m16_332 -> m16_17  [key=2, style=dotted];
m16_331 -> m16_332  [key=0, style=solid];
m16_340 -> m16_330  [key=0, style=bold, color=blue];
m16_470 -> m16_471  [key=0, style=solid];
m16_58 -> m16_17  [key=2, style=dotted];
m16_58 -> m16_59  [key=0, style=solid];
m16_70 -> m16_17  [key=2, style=dotted];
m16_70 -> m16_71  [key=0, style=solid];
m16_309 -> m16_17  [key=2, style=dotted];
m16_309 -> m16_310  [key=0, style=solid];
m16_397 -> m16_17  [key=2, style=dotted];
m16_397 -> m16_398  [key=0, style=solid];
m16_404 -> m16_17  [key=2, style=dotted];
m16_404 -> m16_405  [key=0, style=solid];
m16_424 -> m16_17  [key=2, style=dotted];
m16_424 -> m16_425  [key=0, style=solid];
m16_431 -> m16_17  [key=2, style=dotted];
m16_431 -> m16_432  [key=0, style=solid];
m16_438 -> m16_17  [key=2, style=dotted];
m16_438 -> m16_439  [key=0, style=solid];
m16_464 -> m16_17  [key=2, style=dotted];
m16_464 -> m16_465  [key=0, style=solid];
m16_471 -> m16_17  [key=2, style=dotted];
m16_471 -> m16_472  [key=0, style=solid];
m16_69 -> m16_70  [key=0, style=solid];
m16_57 -> m16_58  [key=0, style=solid];
m16_59 -> m16_57  [key=0, style=bold, color=blue];
m16_71 -> m16_69  [key=0, style=bold, color=blue];
m16_308 -> m16_309  [key=0, style=solid];
m16_310 -> m16_308  [key=0, style=bold, color=blue];
m16_396 -> m16_397  [key=0, style=solid];
m16_398 -> m16_396  [key=0, style=bold, color=blue];
m16_403 -> m16_404  [key=0, style=solid];
m16_405 -> m16_403  [key=0, style=bold, color=blue];
m16_423 -> m16_424  [key=0, style=solid];
m16_425 -> m16_423  [key=0, style=bold, color=blue];
m16_430 -> m16_431  [key=0, style=solid];
m16_432 -> m16_430  [key=0, style=bold, color=blue];
m16_437 -> m16_438  [key=0, style=solid];
m16_439 -> m16_437  [key=0, style=bold, color=blue];
m16_463 -> m16_464  [key=0, style=solid];
m16_465 -> m16_463  [key=0, style=bold, color=blue];
m16_472 -> m16_470  [key=0, style=bold, color=blue];
m16_643 -> m16_644  [key=0, style=solid];
m16_644 -> m16_645  [key=0, style=solid];
m16_645 -> m16_643  [key=0, style=bold, color=blue];
m16_392 -> m16_393  [key=0, style=solid];
m16_393 -> m16_397  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_393 -> m16_394  [key=0, style=solid];
m16_394 -> m16_56  [key=2, style=dotted];
m16_394 -> m16_396  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_394 -> m16_395  [key=0, style=solid];
m16_395 -> m16_392  [key=0, style=bold, color=blue];
m16_128 -> m16_129  [key=0, style=solid];
m16_130 -> m16_20  [key=2, style=dotted];
m16_130 -> m16_131  [key=0, style=solid];
m16_131 -> m16_20  [key=2, style=dotted];
m16_131 -> m16_132  [key=0, style=solid];
m16_132 -> m16_20  [key=2, style=dotted];
m16_132 -> m16_133  [key=0, style=solid];
m16_129 -> m16_130  [key=0, style=solid];
m16_129 -> m16_131  [key=1, style=dashed, color=darkseagreen4, label=dic];
m16_129 -> m16_132  [key=1, style=dashed, color=darkseagreen4, label=dic];
m16_129 -> m16_17  [key=2, style=dotted];
m16_133 -> m16_128  [key=0, style=bold, color=blue];
m16_186 -> m16_187  [key=0, style=solid];
m16_187 -> m16_45  [key=2, style=dotted];
m16_187 -> m16_188  [key=0, style=solid];
m16_188 -> m16_186  [key=0, style=bold, color=blue];
m16_277 -> m16_278  [key=0, style=solid];
m16_280 -> m16_20  [key=2, style=dotted];
m16_280 -> m16_281  [key=0, style=solid];
m16_281 -> m16_20  [key=2, style=dotted];
m16_281 -> m16_282  [key=0, style=solid];
m16_282 -> m16_20  [key=2, style=dotted];
m16_282 -> m16_283  [key=0, style=solid];
m16_283 -> m16_20  [key=2, style=dotted];
m16_283 -> m16_284  [key=0, style=solid];
m16_284 -> m16_20  [key=2, style=dotted];
m16_284 -> m16_285  [key=0, style=solid];
m16_285 -> m16_20  [key=2, style=dotted];
m16_285 -> m16_286  [key=0, style=solid];
m16_286 -> m16_20  [key=2, style=dotted];
m16_286 -> m16_287  [key=0, style=solid];
m16_287 -> m16_20  [key=2, style=dotted];
m16_287 -> m16_288  [key=0, style=solid];
m16_288 -> m16_20  [key=2, style=dotted];
m16_288 -> m16_289  [key=0, style=solid];
m16_279 -> m16_280  [key=0, style=solid];
m16_279 -> m16_281  [key=1, style=dashed, color=darkseagreen4, label=values];
m16_279 -> m16_282  [key=1, style=dashed, color=darkseagreen4, label=values];
m16_279 -> m16_283  [key=1, style=dashed, color=darkseagreen4, label=values];
m16_279 -> m16_284  [key=1, style=dashed, color=darkseagreen4, label=values];
m16_279 -> m16_285  [key=1, style=dashed, color=darkseagreen4, label=values];
m16_279 -> m16_286  [key=1, style=dashed, color=darkseagreen4, label=values];
m16_279 -> m16_287  [key=1, style=dashed, color=darkseagreen4, label=values];
m16_279 -> m16_288  [key=1, style=dashed, color=darkseagreen4, label=values];
m16_279 -> m16_17  [key=2, style=dotted];
m16_278 -> m16_279  [key=0, style=solid];
m16_289 -> m16_277  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_7 -> m16_20  [key=2, style=dotted];
m16_7 -> m16_8  [key=0, style=solid];
m16_8 -> m16_20  [key=2, style=dotted];
m16_8 -> m16_9  [key=0, style=solid];
m16_9 -> m16_20  [key=2, style=dotted];
m16_9 -> m16_10  [key=0, style=solid];
m16_10 -> m16_20  [key=2, style=dotted];
m16_10 -> m16_11  [key=0, style=solid];
m16_11 -> m16_20  [key=2, style=dotted];
m16_11 -> m16_12  [key=0, style=solid];
m16_5 -> m16_7  [key=1, style=dashed, color=darkseagreen4, label=myOtherResult];
m16_5 -> m16_8  [key=1, style=dashed, color=darkseagreen4, label=myOtherResult];
m16_5 -> m16_9  [key=1, style=dashed, color=darkseagreen4, label=myOtherResult];
m16_5 -> m16_10  [key=1, style=dashed, color=darkseagreen4, label=myOtherResult];
m16_5 -> m16_11  [key=1, style=dashed, color=darkseagreen4, label=myOtherResult];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_17  [key=2, style=dotted];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_18  [key=2, style=dotted];
m16_6 -> m16_19  [key=2, style=dotted];
m16_2 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label=myOtherArrayAsString];
m16_2 -> m16_14  [key=2, style=dotted];
m16_2 -> m16_3  [key=0, style=solid];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_6  [key=1, style=dashed, color=darkseagreen4, label=o];
m16_4 -> m16_16  [key=2, style=dotted];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_13  [key=2, style=dotted];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_15  [key=2, style=dotted];
m16_12 -> m16_0  [key=0, style=bold, color=blue];
m16_304 -> m16_305  [key=0, style=solid];
m16_305 -> m16_309  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_305 -> m16_306  [key=0, style=solid];
m16_306 -> m16_56  [key=2, style=dotted];
m16_306 -> m16_308  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_306 -> m16_307  [key=0, style=solid];
m16_307 -> m16_304  [key=0, style=bold, color=blue];
m16_42 -> m16_43  [key=0, style=solid];
m16_43 -> m16_45  [key=2, style=dotted];
m16_43 -> m16_44  [key=0, style=solid];
m16_44 -> m16_42  [key=0, style=bold, color=blue];
m16_513 -> m16_514  [key=0, style=solid];
m16_516 -> m16_20  [key=2, style=dotted];
m16_516 -> m16_517  [key=0, style=solid];
m16_517 -> m16_20  [key=2, style=dotted];
m16_517 -> m16_518  [key=0, style=solid];
m16_518 -> m16_20  [key=2, style=dotted];
m16_518 -> m16_519  [key=0, style=solid];
m16_519 -> m16_20  [key=2, style=dotted];
m16_519 -> m16_520  [key=0, style=solid];
m16_520 -> m16_20  [key=2, style=dotted];
m16_520 -> m16_521  [key=0, style=solid];
m16_515 -> m16_516  [key=0, style=solid];
m16_515 -> m16_517  [key=1, style=dashed, color=darkseagreen4, label=o];
m16_515 -> m16_518  [key=1, style=dashed, color=darkseagreen4, label=o];
m16_515 -> m16_519  [key=1, style=dashed, color=darkseagreen4, label=o];
m16_515 -> m16_520  [key=1, style=dashed, color=darkseagreen4, label=o];
m16_515 -> m16_17  [key=2, style=dotted];
m16_514 -> m16_515  [key=0, style=solid];
m16_521 -> m16_513  [key=0, style=bold, color=blue];
m16_473 -> m16_474  [key=0, style=solid];
m16_480 -> m16_20  [key=2, style=dotted];
m16_480 -> m16_481  [key=0, style=solid];
m16_476 -> m16_20  [key=2, style=dotted];
m16_476 -> m16_477  [key=0, style=solid];
m16_477 -> m16_20  [key=2, style=dotted];
m16_477 -> m16_478  [key=0, style=solid];
m16_478 -> m16_20  [key=2, style=dotted];
m16_478 -> m16_479  [key=0, style=solid];
m16_479 -> m16_184  [key=2, style=dotted];
m16_479 -> m16_480  [key=0, style=solid];
m16_474 -> m16_480  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_474 -> m16_475  [key=0, style=solid];
m16_475 -> m16_476  [key=0, style=solid];
m16_475 -> m16_477  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_475 -> m16_478  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_475 -> m16_479  [key=1, style=dashed, color=darkseagreen4, label=aa];
m16_475 -> m16_17  [key=2, style=dotted];
m16_481 -> m16_473  [key=0, style=bold, color=blue];
m16_668 -> m16_673  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m16_668 -> m16_675  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m16_668 -> m16_669  [key=0, style=solid];
m16_668 -> m16_671  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m16_668 -> m16_672  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m16_674 -> m16_77  [key=2, style=dotted];
m16_674 -> m16_675  [key=0, style=solid];
m16_673 -> m16_674  [key=0, style=solid];
m16_670 -> m16_674  [key=1, style=dashed, color=darkseagreen4, label=newStrings];
m16_670 -> m16_671  [key=0, style=solid];
m16_670 -> m16_24  [key=2, style=dotted];
m16_670 -> m16_676  [key=1, style=dashed, color=darkseagreen4, label=newStrings];
m16_675 -> m16_672  [key=0, style=solid];
m16_675 -> m16_678  [key=2, style=dotted];
m16_672 -> m16_673  [key=0, style=solid];
m16_672 -> m16_676  [key=0, style=solid];
m16_669 -> m16_670  [key=0, style=solid];
m16_671 -> m16_672  [key=0, style=solid];
m16_671 -> m16_678  [key=2, style=dotted];
m16_676 -> m16_677  [key=0, style=solid];
m16_677 -> m16_668  [key=0, style=bold, color=blue];
m16_466 -> m16_467  [key=0, style=solid];
m16_467 -> m16_471  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_467 -> m16_468  [key=0, style=solid];
m16_468 -> m16_56  [key=2, style=dotted];
m16_468 -> m16_470  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_468 -> m16_469  [key=0, style=solid];
m16_469 -> m16_466  [key=0, style=bold, color=blue];
m16_655 -> m16_656  [key=0, style=solid];
m16_655 -> m16_658  [key=0, style=bold, color=crimson];
m16_655 -> m16_659  [key=0, style=bold, color=crimson];
m16_656 -> m16_657  [key=0, style=solid];
m16_656 -> m16_659  [key=0, style=solid];
m16_657 -> m16_658  [key=0, style=solid];
m16_657 -> m16_660  [key=0, style=solid];
m16_659 -> m16_660  [key=0, style=solid];
m16_658 -> m16_657  [key=0, style=solid];
m16_660 -> m16_655  [key=0, style=bold, color=blue];
m16_650 -> m16_651  [key=0, style=solid];
m16_651 -> m16_652  [key=0, style=solid];
m16_651 -> m16_646  [key=2, style=dotted];
m16_652 -> m16_650  [key=0, style=bold, color=blue];
m16_593 -> m16_653  [key=0, style=solid];
m16_653 -> m16_45  [key=2, style=dotted];
m16_653 -> m16_654  [key=0, style=solid];
m16_654 -> m16_593  [key=0, style=bold, color=blue];
m16_611 -> m16_612  [key=0, style=solid];
m16_616 -> m16_20  [key=2, style=dotted];
m16_616 -> m16_617  [key=0, style=solid];
m16_614 -> m16_20  [key=2, style=dotted];
m16_614 -> m16_615  [key=0, style=solid];
m16_613 -> m16_184  [key=2, style=dotted];
m16_613 -> m16_614  [key=0, style=solid];
m16_613 -> m16_615  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m16_612 -> m16_616  [key=1, style=dashed, color=darkseagreen4, label=r1];
m16_612 -> m16_613  [key=0, style=solid];
m16_612 -> m16_323  [key=2, style=dotted];
m16_615 -> m16_616  [key=0, style=solid];
m16_615 -> m16_17  [key=2, style=dotted];
m16_617 -> m16_611  [key=0, style=bold, color=blue];
m16_646 -> m16_647  [key=0, style=solid];
m16_647 -> m16_648  [key=0, style=solid];
m16_647 -> m16_649  [key=2, style=dotted];
m16_648 -> m16_646  [key=0, style=bold, color=blue];
m16_701 -> m16_313  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass"];
m16_701 -> m16_316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass"];
m16_701 -> m16_320  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass"];
m16_701 -> m16_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass"];
m16_701 -> m16_312  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass"];
m16_701 -> m16_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass"];
m16_701 -> m16_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass"];
m16_701 -> m16_317  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass"];
m16_701 -> m16_318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass"];
m16_701 -> m16_319  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass"];
m16_697 -> m16_135  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>"];
m16_697 -> m16_138  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>"];
m16_697 -> m16_142  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>"];
m16_697 -> m16_146  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>"];
m16_697 -> m16_149  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>"];
m16_694 -> m16_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>"];
m16_694 -> m16_47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>"];
m16_694 -> m16_50  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>"];
m16_699 -> m16_187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass"];
m16_710 -> m16_653  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>"];
m16_710 -> m16_656  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>"];
m16_710 -> m16_657  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>"];
m16_710 -> m16_662  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>"];
m16_695 -> m16_58  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_700 -> m16_309  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_702 -> m16_397  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_703 -> m16_404  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_704 -> m16_424  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_705 -> m16_431  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_706 -> m16_438  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_707 -> m16_464  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_708 -> m16_471  [key=1, style=dashed, color=darkseagreen4, label=json];
m16_696 -> m16_75  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>"];
m16_709 -> m16_644  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList"];
m16_709 -> m16_647  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList"];
m16_709 -> m16_651  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList"];
m16_698 -> m16_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>"];
m16_698 -> m16_162  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>"];
m16_698 -> m16_165  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>"];
m16_693 -> m16_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>"];
m16_693 -> m16_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>"];
m16_693 -> m16_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>"];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_1  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m17_2 -> m17_3  [key=0, style=solid];
m17_2 -> m17_5  [key=2, style=dotted];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_6  [key=2, style=dotted];
m17_3 -> m17_7  [key=2, style=dotted];
m17_4 -> m17_0  [key=0, style=bold, color=blue];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_12  [key=2, style=dotted];
m18_2 -> m18_3  [key=0, style=solid];
m18_2 -> m18_13  [key=2, style=dotted];
m18_3 -> m18_4  [key=0, style=solid];
m18_3 -> m18_12  [key=2, style=dotted];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_14  [key=2, style=dotted];
m18_5 -> m18_6  [key=0, style=solid];
m18_5 -> m18_12  [key=2, style=dotted];
m18_6 -> m18_7  [key=0, style=solid];
m18_6 -> m18_15  [key=2, style=dotted];
m18_7 -> m18_8  [key=0, style=solid];
m18_7 -> m18_16  [key=2, style=dotted];
m18_8 -> m18_9  [key=0, style=solid];
m18_8 -> m18_12  [key=2, style=dotted];
m18_9 -> m18_10  [key=0, style=solid];
m18_9 -> m18_12  [key=2, style=dotted];
m18_10 -> m18_11  [key=0, style=solid];
m18_10 -> m18_14  [key=2, style=dotted];
m18_11 -> m18_0  [key=0, style=bold, color=blue];
m18_34 -> m18_35  [key=0, style=solid];
m18_35 -> m18_36  [key=0, style=solid];
m18_35 -> m18_39  [key=2, style=dotted];
m18_35 -> m18_37  [key=1, style=dashed, color=darkseagreen4, label=t];
m18_36 -> m18_37  [key=0, style=solid];
m18_37 -> m18_38  [key=0, style=solid];
m18_37 -> m18_40  [key=2, style=dotted];
m18_38 -> m18_34  [key=0, style=bold, color=blue];
m18_46 -> m18_47  [key=0, style=solid];
m18_47 -> m18_48  [key=0, style=solid];
m18_47 -> m18_64  [key=2, style=dotted];
m18_48 -> m18_49  [key=0, style=solid];
m18_48 -> m18_65  [key=2, style=dotted];
m18_48 -> m18_59  [key=1, style=dashed, color=darkseagreen4, label=o];
m18_49 -> m18_50  [key=0, style=solid];
m18_49 -> m18_12  [key=2, style=dotted];
m18_59 -> m18_60  [key=0, style=solid];
m18_59 -> m18_70  [key=2, style=dotted];
m18_50 -> m18_51  [key=0, style=solid];
m18_50 -> m18_14  [key=2, style=dotted];
m18_51 -> m18_52  [key=0, style=solid];
m18_51 -> m18_12  [key=2, style=dotted];
m18_52 -> m18_53  [key=0, style=solid];
m18_52 -> m18_66  [key=2, style=dotted];
m18_52 -> m18_61  [key=1, style=dashed, color=darkseagreen4, label=sw];
m18_52 -> m18_62  [key=1, style=dashed, color=darkseagreen4, label=sw];
m18_53 -> m18_54  [key=0, style=solid];
m18_53 -> m18_67  [key=2, style=dotted];
m18_61 -> m18_62  [key=0, style=solid];
m18_61 -> m18_71  [key=2, style=dotted];
m18_62 -> m18_63  [key=0, style=solid];
m18_62 -> m18_12  [key=2, style=dotted];
m18_54 -> m18_55  [key=0, style=solid];
m18_54 -> m18_60  [key=1, style=dashed, color=darkseagreen4, label=i];
m18_54 -> m18_18  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m18_55 -> m18_56  [key=0, style=solid];
m18_55 -> m18_61  [key=0, style=solid];
m18_60 -> m18_55  [key=0, style=solid];
m18_60 -> m18_60  [key=1, style=dashed, color=darkseagreen4, label=i];
m18_56 -> m18_57  [key=0, style=solid];
m18_56 -> m18_68  [key=2, style=dotted];
m18_56 -> m18_59  [key=1, style=dashed, color=darkseagreen4, label=file];
m18_57 -> m18_58  [key=0, style=solid];
m18_57 -> m18_69  [key=2, style=dotted];
m18_57 -> m18_59  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m18_58 -> m18_59  [key=0, style=solid];
m18_63 -> m18_46  [key=0, style=bold, color=blue];
m18_95 -> m18_96  [key=0, style=solid];
m18_96 -> m18_97  [key=0, style=solid];
m18_96 -> m18_64  [key=2, style=dotted];
m18_96 -> m18_99  [key=1, style=dashed, color=darkseagreen4, label=json];
m18_97 -> m18_98  [key=0, style=solid];
m18_97 -> m18_115  [key=2, style=dotted];
m18_99 -> m18_100  [key=0, style=solid];
m18_99 -> m18_116  [key=2, style=dotted];
m18_98 -> m18_99  [key=0, style=solid];
m18_98 -> m18_98  [key=1, style=dashed, color=darkseagreen4, label=s];
m18_100 -> m18_101  [key=0, style=solid];
m18_100 -> m18_12  [key=2, style=dotted];
m18_101 -> m18_102  [key=0, style=solid];
m18_101 -> m18_14  [key=2, style=dotted];
m18_102 -> m18_103  [key=0, style=solid];
m18_102 -> m18_12  [key=2, style=dotted];
m18_103 -> m18_104  [key=0, style=solid];
m18_103 -> m18_66  [key=2, style=dotted];
m18_103 -> m18_112  [key=1, style=dashed, color=darkseagreen4, label=sw];
m18_103 -> m18_113  [key=1, style=dashed, color=darkseagreen4, label=sw];
m18_104 -> m18_105  [key=0, style=solid];
m18_104 -> m18_67  [key=2, style=dotted];
m18_112 -> m18_113  [key=0, style=solid];
m18_112 -> m18_71  [key=2, style=dotted];
m18_113 -> m18_114  [key=0, style=solid];
m18_113 -> m18_12  [key=2, style=dotted];
m18_105 -> m18_106  [key=0, style=solid];
m18_105 -> m18_111  [key=1, style=dashed, color=darkseagreen4, label=i];
m18_105 -> m18_18  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m18_106 -> m18_107  [key=0, style=solid];
m18_106 -> m18_112  [key=0, style=solid];
m18_111 -> m18_106  [key=0, style=solid];
m18_111 -> m18_111  [key=1, style=dashed, color=darkseagreen4, label=i];
m18_107 -> m18_108  [key=0, style=solid];
m18_107 -> m18_64  [key=2, style=dotted];
m18_107 -> m18_110  [key=1, style=dashed, color=darkseagreen4, label=json];
m18_108 -> m18_109  [key=0, style=solid];
m18_108 -> m18_115  [key=2, style=dotted];
m18_110 -> m18_111  [key=0, style=solid];
m18_110 -> m18_116  [key=2, style=dotted];
m18_109 -> m18_110  [key=0, style=solid];
m18_109 -> m18_109  [key=1, style=dashed, color=darkseagreen4, label=s];
m18_114 -> m18_95  [key=0, style=bold, color=blue];
m18_41 -> m18_42  [key=0, style=solid];
m18_42 -> m18_43  [key=0, style=solid];
m18_42 -> m18_39  [key=2, style=dotted];
m18_43 -> m18_44  [key=0, style=solid];
m18_43 -> m18_45  [key=2, style=dotted];
m18_44 -> m18_41  [key=0, style=bold, color=blue];
m18_72 -> m18_73  [key=0, style=solid];
m18_73 -> m18_74  [key=0, style=solid];
m18_73 -> m18_92  [key=2, style=dotted];
m18_74 -> m18_75  [key=0, style=solid];
m18_74 -> m18_93  [key=2, style=dotted];
m18_74 -> m18_76  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m18_75 -> m18_76  [key=0, style=solid];
m18_75 -> m18_69  [key=2, style=dotted];
m18_76 -> m18_77  [key=0, style=solid];
m18_76 -> m18_94  [key=2, style=dotted];
m18_77 -> m18_78  [key=0, style=solid];
m18_77 -> m18_12  [key=2, style=dotted];
m18_78 -> m18_79  [key=0, style=solid];
m18_78 -> m18_14  [key=2, style=dotted];
m18_79 -> m18_80  [key=0, style=solid];
m18_79 -> m18_12  [key=2, style=dotted];
m18_80 -> m18_81  [key=0, style=solid];
m18_80 -> m18_66  [key=2, style=dotted];
m18_80 -> m18_89  [key=1, style=dashed, color=darkseagreen4, label=sw];
m18_80 -> m18_90  [key=1, style=dashed, color=darkseagreen4, label=sw];
m18_81 -> m18_82  [key=0, style=solid];
m18_81 -> m18_67  [key=2, style=dotted];
m18_89 -> m18_90  [key=0, style=solid];
m18_89 -> m18_71  [key=2, style=dotted];
m18_90 -> m18_91  [key=0, style=solid];
m18_90 -> m18_12  [key=2, style=dotted];
m18_82 -> m18_83  [key=0, style=solid];
m18_82 -> m18_88  [key=1, style=dashed, color=darkseagreen4, label=i];
m18_82 -> m18_18  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m18_83 -> m18_84  [key=0, style=solid];
m18_83 -> m18_89  [key=0, style=solid];
m18_88 -> m18_83  [key=0, style=solid];
m18_88 -> m18_88  [key=1, style=dashed, color=darkseagreen4, label=i];
m18_84 -> m18_85  [key=0, style=solid];
m18_84 -> m18_92  [key=2, style=dotted];
m18_85 -> m18_86  [key=0, style=solid];
m18_85 -> m18_93  [key=2, style=dotted];
m18_85 -> m18_87  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m18_86 -> m18_87  [key=0, style=solid];
m18_86 -> m18_69  [key=2, style=dotted];
m18_87 -> m18_88  [key=0, style=solid];
m18_87 -> m18_94  [key=2, style=dotted];
m18_91 -> m18_72  [key=0, style=bold, color=blue];
m18_15 -> m18_17  [key=0, style=solid];
m18_17 -> m18_18  [key=0, style=solid];
m18_17 -> m18_32  [key=2, style=dotted];
m18_17 -> m18_20  [key=1, style=dashed, color=darkseagreen4, label=a];
m18_17 -> m18_22  [key=1, style=dashed, color=darkseagreen4, label=a];
m18_18 -> m18_19  [key=0, style=solid];
m18_18 -> m18_20  [key=1, style=dashed, color=darkseagreen4, label=i];
m18_18 -> m18_21  [key=1, style=dashed, color=darkseagreen4, label=i];
m18_18 -> m18_18  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m18_20 -> m18_21  [key=0, style=solid];
m18_20 -> m18_33  [key=2, style=dotted];
m18_22 -> m18_23  [key=0, style=solid];
m18_22 -> m18_29  [key=1, style=dashed, color=darkseagreen4, label=last];
m18_19 -> m18_20  [key=0, style=solid];
m18_19 -> m18_22  [key=0, style=solid];
m18_21 -> m18_19  [key=0, style=solid];
m18_21 -> m18_21  [key=1, style=dashed, color=darkseagreen4, label=i];
m18_23 -> m18_24  [key=0, style=solid];
m18_23 -> m18_28  [key=1, style=dashed, color=darkseagreen4, label=interations];
m18_23 -> m18_23  [key=3, color=darkorchid, style=bold, label="Local variable int interations"];
m18_29 -> m18_30  [key=0, style=solid];
m18_24 -> m18_25  [key=0, style=solid];
m18_24 -> m18_12  [key=2, style=dotted];
m18_28 -> m18_29  [key=0, style=solid];
m18_28 -> m18_31  [key=0, style=solid];
m18_28 -> m18_18  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m18_25 -> m18_26  [key=0, style=solid];
m18_25 -> m18_14  [key=2, style=dotted];
m18_26 -> m18_27  [key=0, style=solid];
m18_26 -> m18_26  [key=3, color=darkorchid, style=bold, label="Local variable string p"];
m18_27 -> m18_28  [key=0, style=solid];
m18_27 -> m18_30  [key=1, style=dashed, color=darkseagreen4, label=i];
m18_30 -> m18_28  [key=0, style=solid];
m18_30 -> m18_30  [key=1, style=dashed, color=darkseagreen4, label=i];
m18_31 -> m18_15  [key=0, style=bold, color=blue];
m19_20 -> m19_21  [key=0, style=solid];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_0  [key=0, style=bold, color=blue];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_8  [key=1, style=dashed, color=darkseagreen4, label=ms];
m19_1 -> m19_12  [key=2, style=dotted];
m19_160 -> m19_161  [key=0, style=solid];
m19_169 -> m19_22  [key=2, style=dotted];
m19_169 -> m19_170  [key=0, style=solid];
m19_162 -> m19_15  [key=2, style=dotted];
m19_162 -> m19_163  [key=0, style=solid];
m19_162 -> m19_164  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_162 -> m19_165  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_162 -> m19_166  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_167 -> m19_169  [key=1, style=dashed, color=darkseagreen4, label=json];
m19_167 -> m19_64  [key=2, style=dotted];
m19_167 -> m19_168  [key=0, style=solid];
m19_168 -> m19_169  [key=0, style=solid];
m19_161 -> m19_162  [key=0, style=solid];
m19_161 -> m19_167  [key=1, style=dashed, color=darkseagreen4, label=sw];
m19_161 -> m19_61  [key=2, style=dotted];
m19_163 -> m19_164  [key=0, style=solid];
m19_163 -> m19_165  [key=1, style=dashed, color=darkseagreen4, label=value];
m19_164 -> m19_165  [key=0, style=solid];
m19_164 -> m19_142  [key=2, style=dotted];
m19_165 -> m19_166  [key=0, style=solid];
m19_165 -> m19_63  [key=2, style=dotted];
m19_166 -> m19_167  [key=0, style=solid];
m19_166 -> m19_100  [key=2, style=dotted];
m19_170 -> m19_160  [key=0, style=bold, color=blue];
m19_16 -> m19_17  [key=0, style=solid];
m19_18 -> m19_16  [key=0, style=bold, color=blue];
m19_2 -> m19_3  [key=0, style=solid];
m19_2 -> m19_4  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEqualityComparer<TSecond>"];
m19_2 -> m19_13  [key=2, style=dotted];
m19_2 -> m19_14  [key=2, style=dotted];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_6  [key=2, style=dotted];
m19_3 -> m19_15  [key=2, style=dotted];
m19_3 -> m19_5  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_3 -> m19_7  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_4 -> m19_5  [key=0, style=solid];
m19_4 -> m19_6  [key=2, style=dotted];
m19_4 -> m19_16  [key=2, style=dotted];
m19_5 -> m19_2  [key=0, style=bold, color=blue];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_17  [key=2, style=dotted];
m19_247 -> m19_248  [key=0, style=solid];
m19_265 -> m19_22  [key=2, style=dotted];
m19_265 -> m19_266  [key=0, style=solid];
m19_250 -> m19_15  [key=2, style=dotted];
m19_250 -> m19_265  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_250 -> m19_251  [key=0, style=solid];
m19_250 -> m19_252  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_250 -> m19_253  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_250 -> m19_254  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_250 -> m19_255  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_250 -> m19_256  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_250 -> m19_257  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_250 -> m19_258  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_250 -> m19_259  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_250 -> m19_260  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_250 -> m19_261  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_250 -> m19_262  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_250 -> m19_263  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_250 -> m19_264  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_254 -> m19_92  [key=2, style=dotted];
m19_254 -> m19_255  [key=0, style=solid];
m19_256 -> m19_92  [key=2, style=dotted];
m19_256 -> m19_257  [key=0, style=solid];
m19_259 -> m19_92  [key=2, style=dotted];
m19_259 -> m19_260  [key=0, style=solid];
m19_261 -> m19_92  [key=2, style=dotted];
m19_261 -> m19_262  [key=0, style=solid];
m19_262 -> m19_92  [key=2, style=dotted];
m19_262 -> m19_263  [key=0, style=solid];
m19_264 -> m19_265  [key=0, style=solid];
m19_264 -> m19_19  [key=2, style=dotted];
m19_266 -> m19_267  [key=0, style=solid];
m19_266 -> m19_268  [key=1, style=dashed, color=darkseagreen4, label=expected];
m19_249 -> m19_35  [key=2, style=dotted];
m19_249 -> m19_250  [key=0, style=solid];
m19_251 -> m19_252  [key=0, style=solid];
m19_252 -> m19_221  [key=2, style=dotted];
m19_252 -> m19_253  [key=0, style=solid];
m19_253 -> m19_222  [key=2, style=dotted];
m19_253 -> m19_254  [key=0, style=solid];
m19_255 -> m19_222  [key=2, style=dotted];
m19_255 -> m19_256  [key=0, style=solid];
m19_257 -> m19_222  [key=2, style=dotted];
m19_257 -> m19_258  [key=0, style=solid];
m19_258 -> m19_90  [key=2, style=dotted];
m19_258 -> m19_259  [key=0, style=solid];
m19_260 -> m19_261  [key=0, style=solid];
m19_260 -> m19_223  [key=2, style=dotted];
m19_263 -> m19_270  [key=2, style=dotted];
m19_263 -> m19_264  [key=0, style=solid];
m19_267 -> m19_38  [key=2, style=dotted];
m19_267 -> m19_268  [key=0, style=solid];
m19_268 -> m19_269  [key=0, style=solid];
m19_268 -> m19_224  [key=2, style=dotted];
m19_248 -> m19_34  [key=2, style=dotted];
m19_248 -> m19_249  [key=0, style=solid];
m19_248 -> m19_267  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_269 -> m19_247  [key=0, style=bold, color=blue];
m19_687 -> m19_688  [key=0, style=solid];
m19_695 -> m19_22  [key=2, style=dotted];
m19_695 -> m19_696  [key=0, style=solid];
m19_695 -> m19_697  [key=2, style=dotted];
m19_693 -> m19_22  [key=2, style=dotted];
m19_693 -> m19_694  [key=0, style=solid];
m19_689 -> m19_15  [key=2, style=dotted];
m19_689 -> m19_690  [key=0, style=solid];
m19_689 -> m19_691  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_690 -> m19_695  [key=1, style=dashed, color=darkseagreen4, label=script];
m19_690 -> m19_691  [key=0, style=solid];
m19_694 -> m19_695  [key=0, style=solid];
m19_694 -> m19_443  [key=2, style=dotted];
m19_694 -> m19_444  [key=2, style=dotted];
m19_692 -> m19_693  [key=0, style=solid];
m19_692 -> m19_64  [key=2, style=dotted];
m19_692 -> m19_694  [key=1, style=dashed, color=darkseagreen4, label=json];
m19_688 -> m19_689  [key=0, style=solid];
m19_688 -> m19_692  [key=1, style=dashed, color=darkseagreen4, label=sw];
m19_688 -> m19_61  [key=2, style=dotted];
m19_691 -> m19_692  [key=0, style=solid];
m19_691 -> m19_36  [key=2, style=dotted];
m19_696 -> m19_687  [key=0, style=bold, color=blue];
m19_62 -> m19_926  [key=0, style=solid];
m19_926 -> m19_927  [key=0, style=solid];
m19_926 -> m19_983  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.ConvertibleInt"];
m19_927 -> m19_62  [key=0, style=bold, color=blue];
m19_21 -> m19_22  [key=0, style=solid];
m19_21 -> m19_19  [key=2, style=dotted];
m19_503 -> m19_504  [key=0, style=solid];
m19_506 -> m19_15  [key=2, style=dotted];
m19_506 -> m19_507  [key=0, style=solid];
m19_506 -> m19_508  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_506 -> m19_509  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_506 -> m19_510  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_506 -> m19_511  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_506 -> m19_512  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_506 -> m19_513  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_506 -> m19_514  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_506 -> m19_515  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_506 -> m19_516  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_506 -> m19_517  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_506 -> m19_518  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_505 -> m19_35  [key=2, style=dotted];
m19_505 -> m19_506  [key=0, style=solid];
m19_507 -> m19_90  [key=2, style=dotted];
m19_507 -> m19_508  [key=0, style=solid];
m19_508 -> m19_509  [key=0, style=solid];
m19_508 -> m19_94  [key=2, style=dotted];
m19_509 -> m19_510  [key=0, style=solid];
m19_509 -> m19_94  [key=2, style=dotted];
m19_510 -> m19_511  [key=0, style=solid];
m19_510 -> m19_94  [key=2, style=dotted];
m19_511 -> m19_512  [key=0, style=solid];
m19_511 -> m19_94  [key=2, style=dotted];
m19_512 -> m19_513  [key=0, style=solid];
m19_512 -> m19_522  [key=2, style=dotted];
m19_513 -> m19_514  [key=0, style=solid];
m19_513 -> m19_523  [key=2, style=dotted];
m19_514 -> m19_515  [key=0, style=solid];
m19_514 -> m19_522  [key=2, style=dotted];
m19_515 -> m19_516  [key=0, style=solid];
m19_515 -> m19_522  [key=2, style=dotted];
m19_516 -> m19_517  [key=0, style=solid];
m19_516 -> m19_523  [key=2, style=dotted];
m19_517 -> m19_518  [key=0, style=solid];
m19_517 -> m19_523  [key=2, style=dotted];
m19_518 -> m19_519  [key=0, style=solid];
m19_518 -> m19_100  [key=2, style=dotted];
m19_519 -> m19_38  [key=2, style=dotted];
m19_519 -> m19_520  [key=0, style=solid];
m19_519 -> m19_101  [key=2, style=dotted];
m19_520 -> m19_38  [key=2, style=dotted];
m19_520 -> m19_521  [key=0, style=solid];
m19_520 -> m19_224  [key=2, style=dotted];
m19_504 -> m19_34  [key=2, style=dotted];
m19_504 -> m19_505  [key=0, style=solid];
m19_504 -> m19_519  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_504 -> m19_520  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_521 -> m19_503  [key=0, style=bold, color=blue];
m19_870 -> m19_918  [key=0, style=solid];
m19_918 -> m19_919  [key=0, style=solid];
m19_918 -> m19_908  [key=2, style=dotted];
m19_919 -> m19_870  [key=0, style=bold, color=blue];
m19_22 -> m19_20  [key=0, style=bold, color=blue];
m19_10 -> m19_22  [key=2, style=dotted];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_15  [key=2, style=dotted];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_21  [key=2, style=dotted];
m19_9 -> m19_12  [key=0, style=solid];
m19_9 -> m19_14  [key=2, style=dotted];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_18  [key=2, style=dotted];
m19_7 -> m19_19  [key=2, style=dotted];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_10  [key=1, style=dashed, color=darkseagreen4, label=TFirst];
m19_7 -> m19_11  [key=1, style=dashed, color=darkseagreen4, label=TFirst];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_20  [key=2, style=dotted];
m19_8 -> m19_10  [key=0, style=solid];
m19_8 -> m19_13  [key=2, style=dotted];
m19_11 -> m19_0  [key=0, style=bold, color=blue];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_15  [key=2, style=dotted];
m19_55 -> m19_56  [key=0, style=solid];
m19_59 -> m19_22  [key=2, style=dotted];
m19_59 -> m19_60  [key=0, style=solid];
m19_59 -> m19_64  [key=2, style=dotted];
m19_57 -> m19_15  [key=2, style=dotted];
m19_57 -> m19_58  [key=0, style=solid];
m19_56 -> m19_59  [key=1, style=dashed, color=darkseagreen4, label=sw];
m19_56 -> m19_57  [key=0, style=solid];
m19_56 -> m19_61  [key=2, style=dotted];
m19_58 -> m19_59  [key=0, style=solid];
m19_58 -> m19_62  [key=2, style=dotted];
m19_58 -> m19_63  [key=2, style=dotted];
m19_60 -> m19_55  [key=0, style=bold, color=blue];
m19_867 -> m19_915  [key=0, style=solid];
m19_915 -> m19_916  [key=0, style=solid];
m19_915 -> m19_908  [key=2, style=dotted];
m19_916 -> m19_917  [key=0, style=solid];
m19_916 -> m19_850  [key=2, style=dotted];
m19_917 -> m19_867  [key=0, style=bold, color=blue];
m19_750 -> m19_751  [key=0, style=solid];
m19_752 -> m19_15  [key=2, style=dotted];
m19_752 -> m19_753  [key=0, style=solid];
m19_752 -> m19_754  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_752 -> m19_755  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_752 -> m19_756  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_752 -> m19_757  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_752 -> m19_758  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_752 -> m19_759  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_752 -> m19_760  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_751 -> m19_752  [key=0, style=solid];
m19_751 -> m19_61  [key=2, style=dotted];
m19_751 -> m19_761  [key=1, style=dashed, color=darkseagreen4, label=sw];
m19_753 -> m19_754  [key=0, style=solid];
m19_754 -> m19_755  [key=0, style=solid];
m19_755 -> m19_756  [key=0, style=solid];
m19_755 -> m19_763  [key=2, style=dotted];
m19_756 -> m19_757  [key=0, style=solid];
m19_757 -> m19_758  [key=0, style=solid];
m19_757 -> m19_142  [key=2, style=dotted];
m19_758 -> m19_759  [key=0, style=solid];
m19_758 -> m19_685  [key=2, style=dotted];
m19_758 -> m19_686  [key=2, style=dotted];
m19_759 -> m19_760  [key=0, style=solid];
m19_759 -> m19_745  [key=2, style=dotted];
m19_759 -> m19_746  [key=2, style=dotted];
m19_760 -> m19_270  [key=2, style=dotted];
m19_760 -> m19_761  [key=0, style=solid];
m19_761 -> m19_64  [key=2, style=dotted];
m19_761 -> m19_762  [key=0, style=solid];
m19_761 -> m19_224  [key=2, style=dotted];
m19_762 -> m19_750  [key=0, style=bold, color=blue];
m19_348 -> m19_349  [key=0, style=solid];
m19_351 -> m19_15  [key=2, style=dotted];
m19_351 -> m19_352  [key=0, style=solid];
m19_351 -> m19_353  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_351 -> m19_354  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_351 -> m19_355  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_351 -> m19_356  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_351 -> m19_357  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_351 -> m19_358  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_351 -> m19_359  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_351 -> m19_360  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_351 -> m19_361  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_351 -> m19_362  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_350 -> m19_35  [key=2, style=dotted];
m19_350 -> m19_351  [key=0, style=solid];
m19_352 -> m19_353  [key=0, style=solid];
m19_353 -> m19_354  [key=0, style=solid];
m19_354 -> m19_90  [key=2, style=dotted];
m19_354 -> m19_355  [key=0, style=solid];
m19_355 -> m19_356  [key=0, style=solid];
m19_355 -> m19_95  [key=2, style=dotted];
m19_356 -> m19_357  [key=0, style=solid];
m19_356 -> m19_95  [key=2, style=dotted];
m19_357 -> m19_358  [key=0, style=solid];
m19_357 -> m19_95  [key=2, style=dotted];
m19_358 -> m19_359  [key=0, style=solid];
m19_358 -> m19_319  [key=2, style=dotted];
m19_359 -> m19_360  [key=0, style=solid];
m19_359 -> m19_319  [key=2, style=dotted];
m19_360 -> m19_361  [key=0, style=solid];
m19_360 -> m19_319  [key=2, style=dotted];
m19_361 -> m19_362  [key=0, style=solid];
m19_361 -> m19_100  [key=2, style=dotted];
m19_362 -> m19_363  [key=0, style=solid];
m19_362 -> m19_320  [key=2, style=dotted];
m19_364 -> m19_38  [key=2, style=dotted];
m19_364 -> m19_365  [key=0, style=solid];
m19_349 -> m19_34  [key=2, style=dotted];
m19_349 -> m19_350  [key=0, style=solid];
m19_349 -> m19_364  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_363 -> m19_364  [key=0, style=solid];
m19_363 -> m19_365  [key=1, style=dashed, color=darkseagreen4, label=expected];
m19_365 -> m19_224  [key=2, style=dotted];
m19_365 -> m19_366  [key=0, style=solid];
m19_366 -> m19_348  [key=0, style=bold, color=blue];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_19  [key=2, style=dotted];
m19_183 -> m19_184  [key=0, style=solid];
m19_197 -> m19_22  [key=2, style=dotted];
m19_197 -> m19_198  [key=0, style=solid];
m19_186 -> m19_15  [key=2, style=dotted];
m19_186 -> m19_187  [key=0, style=solid];
m19_186 -> m19_188  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_186 -> m19_189  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_186 -> m19_190  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_186 -> m19_191  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_186 -> m19_192  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_188 -> m19_92  [key=2, style=dotted];
m19_188 -> m19_189  [key=0, style=solid];
m19_189 -> m19_92  [key=2, style=dotted];
m19_189 -> m19_190  [key=0, style=solid];
m19_190 -> m19_92  [key=2, style=dotted];
m19_190 -> m19_191  [key=0, style=solid];
m19_191 -> m19_92  [key=2, style=dotted];
m19_191 -> m19_192  [key=0, style=solid];
m19_194 -> m19_197  [key=1, style=dashed, color=darkseagreen4, label=result];
m19_194 -> m19_38  [key=2, style=dotted];
m19_194 -> m19_195  [key=0, style=solid];
m19_194 -> m19_196  [key=1, style=dashed, color=darkseagreen4, label=result];
m19_193 -> m19_197  [key=1, style=dashed, color=darkseagreen4, label=expected];
m19_193 -> m19_194  [key=0, style=solid];
m19_196 -> m19_197  [key=0, style=solid];
m19_196 -> m19_101  [key=2, style=dotted];
m19_185 -> m19_35  [key=2, style=dotted];
m19_185 -> m19_186  [key=0, style=solid];
m19_187 -> m19_90  [key=2, style=dotted];
m19_187 -> m19_188  [key=0, style=solid];
m19_192 -> m19_193  [key=0, style=solid];
m19_192 -> m19_100  [key=2, style=dotted];
m19_184 -> m19_194  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_184 -> m19_34  [key=2, style=dotted];
m19_184 -> m19_185  [key=0, style=solid];
m19_195 -> m19_196  [key=0, style=solid];
m19_195 -> m19_101  [key=2, style=dotted];
m19_198 -> m19_183  [key=0, style=bold, color=blue];
m19_422 -> m19_423  [key=0, style=solid];
m19_432 -> m19_22  [key=2, style=dotted];
m19_432 -> m19_433  [key=0, style=solid];
m19_425 -> m19_15  [key=2, style=dotted];
m19_425 -> m19_426  [key=0, style=solid];
m19_425 -> m19_427  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_425 -> m19_428  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_425 -> m19_429  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_431 -> m19_432  [key=0, style=solid];
m19_431 -> m19_38  [key=2, style=dotted];
m19_430 -> m19_432  [key=1, style=dashed, color=darkseagreen4, label=expected];
m19_430 -> m19_431  [key=0, style=solid];
m19_424 -> m19_35  [key=2, style=dotted];
m19_424 -> m19_425  [key=0, style=solid];
m19_426 -> m19_427  [key=0, style=solid];
m19_427 -> m19_221  [key=2, style=dotted];
m19_427 -> m19_428  [key=0, style=solid];
m19_428 -> m19_429  [key=0, style=solid];
m19_428 -> m19_404  [key=2, style=dotted];
m19_429 -> m19_270  [key=2, style=dotted];
m19_429 -> m19_430  [key=0, style=solid];
m19_423 -> m19_431  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_423 -> m19_34  [key=2, style=dotted];
m19_423 -> m19_424  [key=0, style=solid];
m19_433 -> m19_422  [key=0, style=bold, color=blue];
m19_764 -> m19_765  [key=0, style=solid];
m19_774 -> m19_64  [key=2, style=dotted];
m19_774 -> m19_775  [key=0, style=solid];
m19_774 -> m19_776  [key=1, style=dashed, color=darkseagreen4, label=newText];
m19_774 -> m19_777  [key=1, style=dashed, color=darkseagreen4, label=newText];
m19_775 -> m19_64  [key=2, style=dotted];
m19_775 -> m19_776  [key=0, style=solid];
m19_775 -> m19_777  [key=1, style=dashed, color=darkseagreen4, label=oldText];
m19_769 -> m19_61  [key=2, style=dotted];
m19_769 -> m19_774  [key=1, style=dashed, color=darkseagreen4, label=swNew];
m19_769 -> m19_770  [key=0, style=solid];
m19_769 -> m19_771  [key=1, style=dashed, color=darkseagreen4, label=swNew];
m19_772 -> m19_61  [key=2, style=dotted];
m19_772 -> m19_775  [key=1, style=dashed, color=darkseagreen4, label=swOld];
m19_772 -> m19_773  [key=0, style=solid];
m19_773 -> m19_774  [key=0, style=solid];
m19_773 -> m19_782  [key=2, style=dotted];
m19_773 -> m19_784  [key=2, style=dotted];
m19_776 -> m19_777  [key=0, style=solid];
m19_776 -> m19_778  [key=0, style=solid];
m19_777 -> m19_781  [key=0, style=solid];
m19_777 -> m19_785  [key=2, style=dotted];
m19_777 -> m19_786  [key=2, style=dotted];
m19_765 -> m19_101  [key=2, style=dotted];
m19_765 -> m19_766  [key=0, style=solid];
m19_768 -> m19_101  [key=2, style=dotted];
m19_768 -> m19_769  [key=0, style=solid];
m19_780 -> m19_101  [key=2, style=dotted];
m19_780 -> m19_781  [key=0, style=solid];
m19_767 -> m19_769  [key=0, style=solid];
m19_767 -> m19_768  [key=0, style=solid];
m19_770 -> m19_771  [key=0, style=solid];
m19_771 -> m19_772  [key=0, style=solid];
m19_771 -> m19_771  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m19_771 -> m19_782  [key=2, style=dotted];
m19_771 -> m19_783  [key=2, style=dotted];
m19_766 -> m19_773  [key=1, style=dashed, color=darkseagreen4, label=c];
m19_766 -> m19_777  [key=1, style=dashed, color=darkseagreen4, label=c];
m19_766 -> m19_768  [key=1, style=dashed, color=darkseagreen4, label=c];
m19_766 -> m19_767  [key=0, style=solid];
m19_766 -> m19_771  [key=1, style=dashed, color=darkseagreen4, label=c];
m19_766 -> m19_778  [key=1, style=dashed, color=darkseagreen4, label=c];
m19_778 -> m19_778  [key=1, style=dashed, color=darkseagreen4, label=c];
m19_778 -> m19_779  [key=0, style=solid];
m19_779 -> m19_780  [key=0, style=solid];
m19_779 -> m19_766  [key=0, style=solid];
m19_781 -> m19_764  [key=0, style=bold, color=blue];
m19_102 -> m19_103  [key=0, style=solid];
m19_140 -> m19_22  [key=2, style=dotted];
m19_140 -> m19_141  [key=0, style=solid];
m19_104 -> m19_15  [key=2, style=dotted];
m19_104 -> m19_105  [key=0, style=solid];
m19_104 -> m19_106  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_107  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_108  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_109  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_110  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_111  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_112  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_113  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_114  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_115  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_116  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_117  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_118  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_119  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_120  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_121  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_122  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_123  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_124  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_125  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_126  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_127  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_128  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_129  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_130  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_131  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_132  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_133  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_134  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_135  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_104 -> m19_136  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_137 -> m19_140  [key=1, style=dashed, color=darkseagreen4, label=json];
m19_137 -> m19_64  [key=2, style=dotted];
m19_137 -> m19_138  [key=0, style=solid];
m19_139 -> m19_140  [key=0, style=solid];
m19_103 -> m19_104  [key=0, style=solid];
m19_103 -> m19_137  [key=1, style=dashed, color=darkseagreen4, label=sw];
m19_103 -> m19_61  [key=2, style=dotted];
m19_105 -> m19_106  [key=0, style=solid];
m19_105 -> m19_142  [key=2, style=dotted];
m19_106 -> m19_107  [key=0, style=solid];
m19_106 -> m19_143  [key=2, style=dotted];
m19_107 -> m19_108  [key=0, style=solid];
m19_107 -> m19_143  [key=2, style=dotted];
m19_108 -> m19_109  [key=0, style=solid];
m19_108 -> m19_144  [key=2, style=dotted];
m19_109 -> m19_110  [key=0, style=solid];
m19_109 -> m19_144  [key=2, style=dotted];
m19_110 -> m19_111  [key=0, style=solid];
m19_110 -> m19_145  [key=2, style=dotted];
m19_111 -> m19_112  [key=0, style=solid];
m19_111 -> m19_145  [key=2, style=dotted];
m19_112 -> m19_113  [key=0, style=solid];
m19_112 -> m19_146  [key=2, style=dotted];
m19_113 -> m19_114  [key=0, style=solid];
m19_113 -> m19_146  [key=2, style=dotted];
m19_114 -> m19_115  [key=0, style=solid];
m19_114 -> m19_147  [key=2, style=dotted];
m19_115 -> m19_116  [key=0, style=solid];
m19_115 -> m19_147  [key=2, style=dotted];
m19_116 -> m19_117  [key=0, style=solid];
m19_116 -> m19_148  [key=2, style=dotted];
m19_117 -> m19_118  [key=0, style=solid];
m19_117 -> m19_148  [key=2, style=dotted];
m19_118 -> m19_119  [key=0, style=solid];
m19_118 -> m19_149  [key=2, style=dotted];
m19_119 -> m19_120  [key=0, style=solid];
m19_119 -> m19_149  [key=2, style=dotted];
m19_120 -> m19_121  [key=0, style=solid];
m19_120 -> m19_150  [key=2, style=dotted];
m19_121 -> m19_122  [key=0, style=solid];
m19_121 -> m19_150  [key=2, style=dotted];
m19_122 -> m19_123  [key=0, style=solid];
m19_122 -> m19_151  [key=2, style=dotted];
m19_123 -> m19_124  [key=0, style=solid];
m19_123 -> m19_151  [key=2, style=dotted];
m19_124 -> m19_125  [key=0, style=solid];
m19_124 -> m19_152  [key=2, style=dotted];
m19_125 -> m19_126  [key=0, style=solid];
m19_125 -> m19_152  [key=2, style=dotted];
m19_126 -> m19_127  [key=0, style=solid];
m19_126 -> m19_153  [key=2, style=dotted];
m19_127 -> m19_128  [key=0, style=solid];
m19_127 -> m19_153  [key=2, style=dotted];
m19_128 -> m19_129  [key=0, style=solid];
m19_128 -> m19_154  [key=2, style=dotted];
m19_129 -> m19_130  [key=0, style=solid];
m19_129 -> m19_154  [key=2, style=dotted];
m19_130 -> m19_131  [key=0, style=solid];
m19_130 -> m19_155  [key=2, style=dotted];
m19_131 -> m19_132  [key=0, style=solid];
m19_131 -> m19_155  [key=2, style=dotted];
m19_132 -> m19_133  [key=0, style=solid];
m19_132 -> m19_156  [key=2, style=dotted];
m19_133 -> m19_134  [key=0, style=solid];
m19_133 -> m19_157  [key=2, style=dotted];
m19_133 -> m19_156  [key=2, style=dotted];
m19_134 -> m19_135  [key=0, style=solid];
m19_134 -> m19_158  [key=2, style=dotted];
m19_135 -> m19_136  [key=0, style=solid];
m19_135 -> m19_159  [key=2, style=dotted];
m19_135 -> m19_158  [key=2, style=dotted];
m19_136 -> m19_137  [key=0, style=solid];
m19_136 -> m19_100  [key=2, style=dotted];
m19_138 -> m19_139  [key=0, style=solid];
m19_141 -> m19_102  [key=0, style=bold, color=blue];
m19_595 -> m19_596  [key=0, style=solid];
m19_602 -> m19_22  [key=2, style=dotted];
m19_602 -> m19_603  [key=0, style=solid];
m19_600 -> m19_15  [key=2, style=dotted];
m19_600 -> m19_602  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_600 -> m19_601  [key=0, style=solid];
m19_600 -> m19_603  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_600 -> m19_604  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_600 -> m19_605  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_600 -> m19_606  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_600 -> m19_607  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_600 -> m19_608  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_600 -> m19_609  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_601 -> m19_602  [key=0, style=solid];
m19_603 -> m19_604  [key=0, style=solid];
m19_603 -> m19_142  [key=2, style=dotted];
m19_597 -> m19_35  [key=2, style=dotted];
m19_597 -> m19_600  [key=1, style=dashed, color=darkseagreen4, label=sw];
m19_597 -> m19_598  [key=0, style=solid];
m19_599 -> m19_600  [key=0, style=solid];
m19_599 -> m19_591  [key=2, style=dotted];
m19_599 -> m19_604  [key=1, style=dashed, color=darkseagreen4, label=data];
m19_599 -> m19_605  [key=1, style=dashed, color=darkseagreen4, label=data];
m19_599 -> m19_606  [key=1, style=dashed, color=darkseagreen4, label=data];
m19_604 -> m19_605  [key=0, style=solid];
m19_604 -> m19_592  [key=2, style=dotted];
m19_605 -> m19_606  [key=0, style=solid];
m19_605 -> m19_592  [key=2, style=dotted];
m19_606 -> m19_607  [key=0, style=solid];
m19_606 -> m19_63  [key=2, style=dotted];
m19_607 -> m19_608  [key=0, style=solid];
m19_607 -> m19_592  [key=2, style=dotted];
m19_608 -> m19_609  [key=0, style=solid];
m19_608 -> m19_614  [key=2, style=dotted];
m19_609 -> m19_610  [key=0, style=solid];
m19_609 -> m19_100  [key=2, style=dotted];
m19_611 -> m19_38  [key=2, style=dotted];
m19_611 -> m19_612  [key=0, style=solid];
m19_596 -> m19_34  [key=2, style=dotted];
m19_596 -> m19_597  [key=0, style=solid];
m19_596 -> m19_611  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_598 -> m19_599  [key=0, style=solid];
m19_610 -> m19_611  [key=0, style=solid];
m19_610 -> m19_612  [key=1, style=dashed, color=darkseagreen4, label=expected];
m19_612 -> m19_224  [key=2, style=dotted];
m19_612 -> m19_613  [key=0, style=solid];
m19_613 -> m19_595  [key=0, style=bold, color=blue];
m19_12 -> m19_7  [key=0, style=bold, color=blue];
m19_546 -> m19_547  [key=0, style=solid];
m19_552 -> m19_22  [key=2, style=dotted];
m19_552 -> m19_553  [key=0, style=solid];
m19_554 -> m19_22  [key=2, style=dotted];
m19_554 -> m19_555  [key=0, style=solid];
m19_556 -> m19_22  [key=2, style=dotted];
m19_556 -> m19_557  [key=0, style=solid];
m19_558 -> m19_22  [key=2, style=dotted];
m19_558 -> m19_559  [key=0, style=solid];
m19_560 -> m19_22  [key=2, style=dotted];
m19_560 -> m19_561  [key=0, style=solid];
m19_565 -> m19_22  [key=2, style=dotted];
m19_565 -> m19_566  [key=0, style=solid];
m19_567 -> m19_22  [key=2, style=dotted];
m19_567 -> m19_568  [key=0, style=solid];
m19_549 -> m19_15  [key=2, style=dotted];
m19_549 -> m19_552  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_549 -> m19_554  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_549 -> m19_556  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_549 -> m19_558  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_549 -> m19_560  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_549 -> m19_565  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_549 -> m19_567  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_549 -> m19_550  [key=0, style=solid];
m19_549 -> m19_551  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_549 -> m19_553  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_549 -> m19_555  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_549 -> m19_557  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_549 -> m19_559  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_549 -> m19_561  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_549 -> m19_562  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_549 -> m19_563  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_549 -> m19_564  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_549 -> m19_566  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_549 -> m19_568  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_549 -> m19_569  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_549 -> m19_570  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_551 -> m19_552  [key=0, style=solid];
m19_553 -> m19_554  [key=0, style=solid];
m19_555 -> m19_556  [key=0, style=solid];
m19_557 -> m19_558  [key=0, style=solid];
m19_559 -> m19_560  [key=0, style=solid];
m19_561 -> m19_562  [key=0, style=solid];
m19_561 -> m19_16  [key=2, style=dotted];
m19_564 -> m19_565  [key=0, style=solid];
m19_566 -> m19_567  [key=0, style=solid];
m19_568 -> m19_569  [key=0, style=solid];
m19_568 -> m19_17  [key=2, style=dotted];
m19_548 -> m19_35  [key=2, style=dotted];
m19_548 -> m19_549  [key=0, style=solid];
m19_550 -> m19_551  [key=0, style=solid];
m19_562 -> m19_563  [key=0, style=solid];
m19_562 -> m19_17  [key=2, style=dotted];
m19_563 -> m19_564  [key=0, style=solid];
m19_563 -> m19_387  [key=2, style=dotted];
m19_569 -> m19_570  [key=0, style=solid];
m19_569 -> m19_575  [key=2, style=dotted];
m19_570 -> m19_19  [key=2, style=dotted];
m19_570 -> m19_571  [key=0, style=solid];
m19_572 -> m19_38  [key=2, style=dotted];
m19_572 -> m19_573  [key=0, style=solid];
m19_547 -> m19_34  [key=2, style=dotted];
m19_547 -> m19_548  [key=0, style=solid];
m19_547 -> m19_572  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_571 -> m19_572  [key=0, style=solid];
m19_571 -> m19_573  [key=1, style=dashed, color=darkseagreen4, label=expected];
m19_573 -> m19_224  [key=2, style=dotted];
m19_573 -> m19_574  [key=0, style=solid];
m19_574 -> m19_546  [key=0, style=bold, color=blue];
m19_367 -> m19_368  [key=0, style=solid];
m19_370 -> m19_15  [key=2, style=dotted];
m19_370 -> m19_371  [key=0, style=solid];
m19_370 -> m19_372  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_370 -> m19_373  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_370 -> m19_374  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_370 -> m19_375  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_370 -> m19_376  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_370 -> m19_377  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_370 -> m19_378  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_370 -> m19_379  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_370 -> m19_380  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_370 -> m19_381  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_370 -> m19_382  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_369 -> m19_35  [key=2, style=dotted];
m19_369 -> m19_370  [key=0, style=solid];
m19_371 -> m19_372  [key=0, style=solid];
m19_372 -> m19_373  [key=0, style=solid];
m19_373 -> m19_374  [key=0, style=solid];
m19_374 -> m19_375  [key=0, style=solid];
m19_374 -> m19_142  [key=2, style=dotted];
m19_375 -> m19_376  [key=0, style=solid];
m19_375 -> m19_387  [key=2, style=dotted];
m19_376 -> m19_377  [key=0, style=solid];
m19_376 -> m19_387  [key=2, style=dotted];
m19_377 -> m19_378  [key=0, style=solid];
m19_377 -> m19_387  [key=2, style=dotted];
m19_378 -> m19_379  [key=0, style=solid];
m19_378 -> m19_388  [key=2, style=dotted];
m19_379 -> m19_380  [key=0, style=solid];
m19_379 -> m19_388  [key=2, style=dotted];
m19_380 -> m19_381  [key=0, style=solid];
m19_380 -> m19_388  [key=2, style=dotted];
m19_381 -> m19_382  [key=0, style=solid];
m19_381 -> m19_100  [key=2, style=dotted];
m19_382 -> m19_383  [key=0, style=solid];
m19_382 -> m19_37  [key=2, style=dotted];
m19_384 -> m19_38  [key=2, style=dotted];
m19_384 -> m19_385  [key=0, style=solid];
m19_368 -> m19_34  [key=2, style=dotted];
m19_368 -> m19_369  [key=0, style=solid];
m19_368 -> m19_384  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_383 -> m19_384  [key=0, style=solid];
m19_383 -> m19_385  [key=1, style=dashed, color=darkseagreen4, label=expected];
m19_385 -> m19_224  [key=2, style=dotted];
m19_385 -> m19_386  [key=0, style=solid];
m19_386 -> m19_367  [key=0, style=bold, color=blue];
m19_784 -> m19_787  [key=0, style=solid];
m19_784 -> m19_788  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m19_784 -> m19_789  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_784 -> m19_794  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_784 -> m19_795  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_784 -> m19_796  [key=1, style=dashed, color=darkseagreen4, label=char];
m19_784 -> m19_830  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_784 -> m19_831  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m19_784 -> m19_834  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m19_784 -> m19_835  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m19_784 -> m19_838  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m19_784 -> m19_840  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_784 -> m19_841  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m19_784 -> m19_842  [key=1, style=dashed, color=darkseagreen4, label=bool];
m19_784 -> m19_843  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m19_787 -> m19_788  [key=0, style=solid];
m19_787 -> m19_789  [key=0, style=solid];
m19_788 -> m19_789  [key=0, style=solid];
m19_788 -> m19_845  [key=2, style=dotted];
m19_789 -> m19_790  [key=0, style=solid];
m19_789 -> m19_842  [key=0, style=solid];
m19_794 -> m19_795  [key=0, style=solid];
m19_794 -> m19_837  [key=0, style=solid];
m19_795 -> m19_796  [key=0, style=solid];
m19_795 -> m19_798  [key=1, style=dashed, color=darkseagreen4, label=c];
m19_795 -> m19_821  [key=1, style=dashed, color=darkseagreen4, label=c];
m19_795 -> m19_824  [key=1, style=dashed, color=darkseagreen4, label=c];
m19_796 -> m19_794  [key=0, style=solid];
m19_796 -> m19_797  [key=0, style=solid];
m19_830 -> m19_831  [key=0, style=solid];
m19_830 -> m19_847  [key=2, style=dotted];
m19_830 -> m19_839  [key=1, style=dashed, color=darkseagreen4, label=chars];
m19_830 -> m19_841  [key=1, style=dashed, color=darkseagreen4, label=chars];
m19_831 -> m19_832  [key=0, style=solid];
m19_831 -> m19_848  [key=2, style=dotted];
m19_834 -> m19_836  [key=0, style=solid];
m19_834 -> m19_850  [key=2, style=dotted];
m19_835 -> m19_836  [key=0, style=solid];
m19_835 -> m19_851  [key=2, style=dotted];
m19_838 -> m19_842  [key=0, style=solid];
m19_838 -> m19_850  [key=2, style=dotted];
m19_840 -> m19_841  [key=0, style=solid];
m19_840 -> m19_847  [key=2, style=dotted];
m19_841 -> m19_842  [key=0, style=solid];
m19_841 -> m19_848  [key=2, style=dotted];
m19_842 -> m19_844  [key=0, style=solid];
m19_842 -> m19_843  [key=0, style=solid];
m19_843 -> m19_844  [key=0, style=solid];
m19_843 -> m19_845  [key=2, style=dotted];
m19_790 -> m19_831  [key=1, style=dashed, color=darkseagreen4, label=chars];
m19_790 -> m19_841  [key=1, style=dashed, color=darkseagreen4, label=chars];
m19_790 -> m19_791  [key=0, style=solid];
m19_790 -> m19_829  [key=1, style=dashed, color=darkseagreen4, label=chars];
m19_790 -> m19_839  [key=1, style=dashed, color=darkseagreen4, label=chars];
m19_793 -> m19_794  [key=0, style=solid];
m19_793 -> m19_795  [key=1, style=dashed, color=darkseagreen4, label=i];
m19_793 -> m19_831  [key=1, style=dashed, color=darkseagreen4, label=i];
m19_793 -> m19_828  [key=1, style=dashed, color=darkseagreen4, label=i];
m19_793 -> m19_832  [key=1, style=dashed, color=darkseagreen4, label=i];
m19_793 -> m19_836  [key=1, style=dashed, color=darkseagreen4, label=i];
m19_836 -> m19_794  [key=0, style=solid];
m19_836 -> m19_836  [key=1, style=dashed, color=darkseagreen4, label=i];
m19_827 -> m19_794  [key=0, style=solid];
m19_827 -> m19_828  [key=0, style=solid];
m19_837 -> m19_838  [key=0, style=solid];
m19_837 -> m19_839  [key=0, style=solid];
m19_798 -> m19_799  [key=0, style=solid];
m19_798 -> m19_801  [key=0, style=solid];
m19_798 -> m19_803  [key=0, style=solid];
m19_798 -> m19_805  [key=0, style=solid];
m19_798 -> m19_807  [key=0, style=solid];
m19_798 -> m19_809  [key=0, style=solid];
m19_798 -> m19_811  [key=0, style=solid];
m19_798 -> m19_813  [key=0, style=solid];
m19_798 -> m19_815  [key=0, style=solid];
m19_798 -> m19_817  [key=0, style=solid];
m19_798 -> m19_819  [key=0, style=solid];
m19_798 -> m19_821  [key=0, style=solid];
m19_821 -> m19_822  [key=0, style=solid];
m19_821 -> m19_826  [key=0, style=solid];
m19_824 -> m19_825  [key=0, style=solid];
m19_824 -> m19_846  [key=2, style=dotted];
m19_797 -> m19_798  [key=0, style=solid];
m19_829 -> m19_830  [key=0, style=solid];
m19_829 -> m19_831  [key=0, style=solid];
m19_839 -> m19_840  [key=0, style=solid];
m19_839 -> m19_841  [key=0, style=solid];
m19_792 -> m19_831  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m19_792 -> m19_841  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m19_792 -> m19_793  [key=0, style=solid];
m19_792 -> m19_837  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m19_792 -> m19_828  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m19_832 -> m19_841  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m19_832 -> m19_837  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m19_832 -> m19_833  [key=0, style=solid];
m19_826 -> m19_834  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m19_826 -> m19_827  [key=0, style=solid];
m19_826 -> m19_833  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m19_825 -> m19_834  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m19_825 -> m19_827  [key=0, style=solid];
m19_825 -> m19_833  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m19_833 -> m19_834  [key=0, style=solid];
m19_833 -> m19_835  [key=0, style=solid];
m19_833 -> m19_849  [key=2, style=dotted];
m19_791 -> m19_835  [key=1, style=dashed, color=darkseagreen4, label=unicodeBuffer];
m19_791 -> m19_824  [key=1, style=dashed, color=darkseagreen4, label=unicodeBuffer];
m19_791 -> m19_792  [key=0, style=solid];
m19_791 -> m19_822  [key=1, style=dashed, color=darkseagreen4, label=unicodeBuffer];
m19_823 -> m19_835  [key=1, style=dashed, color=darkseagreen4, label=unicodeBuffer];
m19_823 -> m19_824  [key=0, style=solid];
m19_828 -> m19_829  [key=0, style=solid];
m19_828 -> m19_832  [key=0, style=solid];
m19_800 -> m19_827  [key=0, style=solid];
m19_802 -> m19_827  [key=0, style=solid];
m19_804 -> m19_827  [key=0, style=solid];
m19_806 -> m19_827  [key=0, style=solid];
m19_808 -> m19_827  [key=0, style=solid];
m19_810 -> m19_827  [key=0, style=solid];
m19_812 -> m19_827  [key=0, style=solid];
m19_814 -> m19_827  [key=0, style=solid];
m19_816 -> m19_827  [key=0, style=solid];
m19_818 -> m19_827  [key=0, style=solid];
m19_820 -> m19_827  [key=0, style=solid];
m19_799 -> m19_800  [key=0, style=solid];
m19_801 -> m19_802  [key=0, style=solid];
m19_803 -> m19_804  [key=0, style=solid];
m19_805 -> m19_806  [key=0, style=solid];
m19_807 -> m19_808  [key=0, style=solid];
m19_809 -> m19_810  [key=0, style=solid];
m19_811 -> m19_812  [key=0, style=solid];
m19_813 -> m19_814  [key=0, style=solid];
m19_815 -> m19_816  [key=0, style=solid];
m19_817 -> m19_818  [key=0, style=solid];
m19_819 -> m19_820  [key=0, style=solid];
m19_822 -> m19_824  [key=0, style=solid];
m19_822 -> m19_823  [key=0, style=solid];
m19_844 -> m19_784  [key=0, style=bold, color=blue];
m19_300 -> m19_301  [key=0, style=solid];
m19_303 -> m19_15  [key=2, style=dotted];
m19_303 -> m19_304  [key=0, style=solid];
m19_303 -> m19_305  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_303 -> m19_306  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_303 -> m19_307  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_303 -> m19_308  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_303 -> m19_309  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_303 -> m19_310  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_303 -> m19_311  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_303 -> m19_312  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_303 -> m19_313  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_303 -> m19_314  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_302 -> m19_35  [key=2, style=dotted];
m19_302 -> m19_303  [key=0, style=solid];
m19_304 -> m19_305  [key=0, style=solid];
m19_305 -> m19_306  [key=0, style=solid];
m19_306 -> m19_90  [key=2, style=dotted];
m19_306 -> m19_307  [key=0, style=solid];
m19_307 -> m19_308  [key=0, style=solid];
m19_307 -> m19_95  [key=2, style=dotted];
m19_308 -> m19_309  [key=0, style=solid];
m19_308 -> m19_95  [key=2, style=dotted];
m19_309 -> m19_310  [key=0, style=solid];
m19_309 -> m19_95  [key=2, style=dotted];
m19_310 -> m19_311  [key=0, style=solid];
m19_310 -> m19_319  [key=2, style=dotted];
m19_311 -> m19_312  [key=0, style=solid];
m19_311 -> m19_319  [key=2, style=dotted];
m19_312 -> m19_313  [key=0, style=solid];
m19_312 -> m19_319  [key=2, style=dotted];
m19_313 -> m19_314  [key=0, style=solid];
m19_313 -> m19_100  [key=2, style=dotted];
m19_314 -> m19_315  [key=0, style=solid];
m19_314 -> m19_320  [key=2, style=dotted];
m19_316 -> m19_38  [key=2, style=dotted];
m19_316 -> m19_317  [key=0, style=solid];
m19_301 -> m19_34  [key=2, style=dotted];
m19_301 -> m19_302  [key=0, style=solid];
m19_301 -> m19_316  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_315 -> m19_316  [key=0, style=solid];
m19_315 -> m19_317  [key=1, style=dashed, color=darkseagreen4, label=expected];
m19_317 -> m19_224  [key=2, style=dotted];
m19_317 -> m19_318  [key=0, style=solid];
m19_318 -> m19_300  [key=0, style=bold, color=blue];
m19_715 -> m19_716  [key=0, style=solid];
m19_722 -> m19_22  [key=2, style=dotted];
m19_722 -> m19_723  [key=0, style=solid];
m19_722 -> m19_64  [key=2, style=dotted];
m19_717 -> m19_15  [key=2, style=dotted];
m19_717 -> m19_718  [key=0, style=solid];
m19_717 -> m19_719  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_717 -> m19_720  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_717 -> m19_721  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_716 -> m19_722  [key=1, style=dashed, color=darkseagreen4, label=sw];
m19_716 -> m19_717  [key=0, style=solid];
m19_716 -> m19_61  [key=2, style=dotted];
m19_721 -> m19_722  [key=0, style=solid];
m19_721 -> m19_270  [key=2, style=dotted];
m19_718 -> m19_719  [key=0, style=solid];
m19_719 -> m19_720  [key=0, style=solid];
m19_719 -> m19_16  [key=2, style=dotted];
m19_720 -> m19_721  [key=0, style=solid];
m19_720 -> m19_17  [key=2, style=dotted];
m19_723 -> m19_715  [key=0, style=bold, color=blue];
m19_899 -> m19_900  [key=0, style=solid];
m19_899 -> m19_903  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_900 -> m19_908  [key=2, style=dotted];
m19_900 -> m19_901  [key=0, style=solid];
m19_901 -> m19_902  [key=0, style=solid];
m19_901 -> m19_903  [key=0, style=solid];
m19_902 -> m19_903  [key=0, style=solid];
m19_902 -> m19_845  [key=2, style=dotted];
m19_903 -> m19_904  [key=0, style=solid];
m19_903 -> m19_909  [key=2, style=dotted];
m19_903 -> m19_847  [key=2, style=dotted];
m19_903 -> m19_910  [key=2, style=dotted];
m19_903 -> m19_911  [key=2, style=dotted];
m19_903 -> m19_850  [key=2, style=dotted];
m19_904 -> m19_905  [key=0, style=solid];
m19_904 -> m19_906  [key=0, style=solid];
m19_905 -> m19_906  [key=0, style=solid];
m19_905 -> m19_845  [key=2, style=dotted];
m19_906 -> m19_907  [key=0, style=solid];
m19_906 -> m19_845  [key=2, style=dotted];
m19_907 -> m19_899  [key=0, style=bold, color=blue];
m19_866 -> m19_895  [key=0, style=solid];
m19_895 -> m19_896  [key=0, style=solid];
m19_896 -> m19_866  [key=0, style=bold, color=blue];
m19_23 -> m19_24  [key=0, style=solid];
m19_23 -> m19_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>"];
m19_23 -> m19_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>"];
m19_23 -> m19_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>"];
m19_23 -> m19_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>"];
m19_23 -> m19_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>"];
m19_23 -> m19_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>"];
m19_23 -> m19_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>"];
m19_32 -> m19_22  [key=2, style=dotted];
m19_32 -> m19_33  [key=0, style=solid];
m19_32 -> m19_38  [key=2, style=dotted];
m19_26 -> m19_15  [key=2, style=dotted];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_28  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_26 -> m19_29  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_26 -> m19_30  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_26 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_24 -> m19_32  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_24 -> m19_25  [key=0, style=solid];
m19_24 -> m19_34  [key=2, style=dotted];
m19_31 -> m19_32  [key=0, style=solid];
m19_31 -> m19_37  [key=2, style=dotted];
m19_25 -> m19_35  [key=2, style=dotted];
m19_25 -> m19_26  [key=0, style=solid];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_16  [key=2, style=dotted];
m19_28 -> m19_29  [key=0, style=solid];
m19_28 -> m19_17  [key=2, style=dotted];
m19_29 -> m19_30  [key=0, style=solid];
m19_29 -> m19_36  [key=2, style=dotted];
m19_30 -> m19_19  [key=2, style=dotted];
m19_30 -> m19_31  [key=0, style=solid];
m19_33 -> m19_23  [key=0, style=bold, color=blue];
m19_479 -> m19_480  [key=0, style=solid];
m19_501 -> m19_22  [key=2, style=dotted];
m19_501 -> m19_502  [key=0, style=solid];
m19_501 -> m19_38  [key=2, style=dotted];
m19_482 -> m19_15  [key=2, style=dotted];
m19_482 -> m19_483  [key=0, style=solid];
m19_482 -> m19_484  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_482 -> m19_485  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_482 -> m19_486  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_482 -> m19_487  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_482 -> m19_488  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_482 -> m19_489  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_482 -> m19_490  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_482 -> m19_491  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_482 -> m19_492  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_482 -> m19_493  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_482 -> m19_494  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_482 -> m19_495  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_482 -> m19_496  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_482 -> m19_497  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_482 -> m19_498  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_482 -> m19_499  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_482 -> m19_500  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_480 -> m19_501  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_480 -> m19_481  [key=0, style=solid];
m19_480 -> m19_34  [key=2, style=dotted];
m19_500 -> m19_501  [key=0, style=solid];
m19_500 -> m19_100  [key=2, style=dotted];
m19_481 -> m19_35  [key=2, style=dotted];
m19_481 -> m19_482  [key=0, style=solid];
m19_483 -> m19_484  [key=0, style=solid];
m19_484 -> m19_90  [key=2, style=dotted];
m19_484 -> m19_485  [key=0, style=solid];
m19_485 -> m19_486  [key=0, style=solid];
m19_485 -> m19_95  [key=2, style=dotted];
m19_486 -> m19_487  [key=0, style=solid];
m19_486 -> m19_319  [key=2, style=dotted];
m19_487 -> m19_488  [key=0, style=solid];
m19_487 -> m19_95  [key=2, style=dotted];
m19_488 -> m19_489  [key=0, style=solid];
m19_488 -> m19_95  [key=2, style=dotted];
m19_489 -> m19_490  [key=0, style=solid];
m19_489 -> m19_95  [key=2, style=dotted];
m19_490 -> m19_491  [key=0, style=solid];
m19_490 -> m19_95  [key=2, style=dotted];
m19_491 -> m19_492  [key=0, style=solid];
m19_491 -> m19_95  [key=2, style=dotted];
m19_492 -> m19_493  [key=0, style=solid];
m19_492 -> m19_95  [key=2, style=dotted];
m19_493 -> m19_494  [key=0, style=solid];
m19_493 -> m19_95  [key=2, style=dotted];
m19_494 -> m19_495  [key=0, style=solid];
m19_494 -> m19_95  [key=2, style=dotted];
m19_495 -> m19_496  [key=0, style=solid];
m19_495 -> m19_95  [key=2, style=dotted];
m19_496 -> m19_497  [key=0, style=solid];
m19_496 -> m19_95  [key=2, style=dotted];
m19_497 -> m19_498  [key=0, style=solid];
m19_497 -> m19_319  [key=2, style=dotted];
m19_498 -> m19_499  [key=0, style=solid];
m19_498 -> m19_319  [key=2, style=dotted];
m19_499 -> m19_500  [key=0, style=solid];
m19_499 -> m19_319  [key=2, style=dotted];
m19_502 -> m19_479  [key=0, style=bold, color=blue];
m19_920 -> m19_923  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonToken"];
m19_920 -> m19_921  [key=0, style=solid];
m19_922 -> m19_924  [key=0, style=solid];
m19_922 -> m19_850  [key=2, style=dotted];
m19_923 -> m19_924  [key=0, style=solid];
m19_923 -> m19_925  [key=2, style=dotted];
m19_921 -> m19_922  [key=0, style=solid];
m19_921 -> m19_923  [key=0, style=solid];
m19_924 -> m19_920  [key=0, style=bold, color=blue];
m19_871 -> m19_872  [key=0, style=solid];
m19_876 -> m19_15  [key=2, style=dotted];
m19_876 -> m19_877  [key=0, style=solid];
m19_876 -> m19_878  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_875 -> m19_876  [key=0, style=solid];
m19_875 -> m19_61  [key=2, style=dotted];
m19_875 -> m19_879  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m19_877 -> m19_878  [key=0, style=solid];
m19_877 -> m19_884  [key=2, style=dotted];
m19_878 -> m19_879  [key=0, style=solid];
m19_878 -> m19_53  [key=2, style=dotted];
m19_879 -> m19_64  [key=2, style=dotted];
m19_879 -> m19_880  [key=0, style=solid];
m19_879 -> m19_224  [key=2, style=dotted];
m19_874 -> m19_875  [key=0, style=solid];
m19_874 -> m19_877  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m19_874 -> m19_883  [key=2, style=dotted];
m19_872 -> m19_877  [key=1, style=dashed, color=darkseagreen4, label=d];
m19_872 -> m19_873  [key=0, style=solid];
m19_872 -> m19_881  [key=2, style=dotted];
m19_873 -> m19_874  [key=0, style=solid];
m19_873 -> m19_882  [key=2, style=dotted];
m19_880 -> m19_871  [key=0, style=bold, color=blue];
m19_536 -> m19_537  [key=0, style=solid];
m19_537 -> m19_539  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_537 -> m19_538  [key=0, style=solid];
m19_537 -> m19_174  [key=2, style=dotted];
m19_538 -> m19_536  [key=0, style=bold, color=blue];
m19_869 -> m19_912  [key=0, style=solid];
m19_912 -> m19_913  [key=0, style=solid];
m19_912 -> m19_908  [key=2, style=dotted];
m19_913 -> m19_914  [key=0, style=solid];
m19_913 -> m19_850  [key=2, style=dotted];
m19_914 -> m19_869  [key=0, style=bold, color=blue];
m19_539 -> m19_540  [key=0, style=solid];
m19_177 -> m19_15  [key=2, style=dotted];
m19_177 -> m19_178  [key=0, style=solid];
m19_177 -> m19_179  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_177 -> m19_180  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_530 -> m19_15  [key=2, style=dotted];
m19_530 -> m19_531  [key=0, style=solid];
m19_530 -> m19_532  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_530 -> m19_533  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_530 -> m19_534  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_542 -> m19_15  [key=2, style=dotted];
m19_542 -> m19_543  [key=0, style=solid];
m19_542 -> m19_544  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_529 -> m19_35  [key=2, style=dotted];
m19_529 -> m19_530  [key=0, style=solid];
m19_541 -> m19_35  [key=2, style=dotted];
m19_541 -> m19_542  [key=0, style=solid];
m19_176 -> m19_177  [key=0, style=solid];
m19_176 -> m19_61  [key=2, style=dotted];
m19_178 -> m19_179  [key=0, style=solid];
m19_178 -> m19_142  [key=2, style=dotted];
m19_179 -> m19_180  [key=0, style=solid];
m19_179 -> m19_182  [key=2, style=dotted];
m19_179 -> m19_63  [key=2, style=dotted];
m19_180 -> m19_181  [key=0, style=solid];
m19_180 -> m19_100  [key=2, style=dotted];
m19_531 -> m19_90  [key=2, style=dotted];
m19_531 -> m19_532  [key=0, style=solid];
m19_532 -> m19_533  [key=0, style=solid];
m19_532 -> m19_95  [key=2, style=dotted];
m19_533 -> m19_534  [key=0, style=solid];
m19_533 -> m19_100  [key=2, style=dotted];
m19_534 -> m19_535  [key=0, style=solid];
m19_534 -> m19_100  [key=2, style=dotted];
m19_543 -> m19_544  [key=0, style=solid];
m19_544 -> m19_545  [key=0, style=solid];
m19_528 -> m19_34  [key=2, style=dotted];
m19_528 -> m19_529  [key=0, style=solid];
m19_540 -> m19_34  [key=2, style=dotted];
m19_540 -> m19_541  [key=0, style=solid];
m19_175 -> m19_176  [key=0, style=solid];
m19_181 -> m19_175  [key=0, style=bold, color=blue];
m19_535 -> m19_527  [key=0, style=bold, color=blue];
m19_527 -> m19_528  [key=0, style=solid];
m19_545 -> m19_539  [key=0, style=bold, color=blue];
m19_868 -> m19_897  [key=0, style=solid];
m19_897 -> m19_898  [key=0, style=solid];
m19_897 -> m19_899  [key=2, style=dotted];
m19_898 -> m19_868  [key=0, style=bold, color=blue];
m19_321 -> m19_322  [key=0, style=solid];
m19_324 -> m19_15  [key=2, style=dotted];
m19_324 -> m19_325  [key=0, style=solid];
m19_324 -> m19_326  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_324 -> m19_327  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_324 -> m19_328  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_324 -> m19_329  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_324 -> m19_330  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_324 -> m19_331  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_324 -> m19_332  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_324 -> m19_333  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_324 -> m19_334  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_324 -> m19_335  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_324 -> m19_336  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_324 -> m19_337  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_324 -> m19_338  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_324 -> m19_339  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_324 -> m19_340  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_324 -> m19_341  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_323 -> m19_35  [key=2, style=dotted];
m19_323 -> m19_324  [key=0, style=solid];
m19_325 -> m19_326  [key=0, style=solid];
m19_326 -> m19_327  [key=0, style=solid];
m19_327 -> m19_90  [key=2, style=dotted];
m19_327 -> m19_328  [key=0, style=solid];
m19_328 -> m19_329  [key=0, style=solid];
m19_328 -> m19_95  [key=2, style=dotted];
m19_329 -> m19_330  [key=0, style=solid];
m19_329 -> m19_95  [key=2, style=dotted];
m19_330 -> m19_331  [key=0, style=solid];
m19_330 -> m19_95  [key=2, style=dotted];
m19_331 -> m19_332  [key=0, style=solid];
m19_331 -> m19_319  [key=2, style=dotted];
m19_332 -> m19_333  [key=0, style=solid];
m19_332 -> m19_319  [key=2, style=dotted];
m19_333 -> m19_334  [key=0, style=solid];
m19_333 -> m19_319  [key=2, style=dotted];
m19_334 -> m19_335  [key=0, style=solid];
m19_334 -> m19_346  [key=2, style=dotted];
m19_335 -> m19_336  [key=0, style=solid];
m19_335 -> m19_346  [key=2, style=dotted];
m19_336 -> m19_337  [key=0, style=solid];
m19_336 -> m19_346  [key=2, style=dotted];
m19_337 -> m19_338  [key=0, style=solid];
m19_337 -> m19_347  [key=2, style=dotted];
m19_338 -> m19_339  [key=0, style=solid];
m19_338 -> m19_347  [key=2, style=dotted];
m19_339 -> m19_340  [key=0, style=solid];
m19_339 -> m19_347  [key=2, style=dotted];
m19_340 -> m19_341  [key=0, style=solid];
m19_340 -> m19_100  [key=2, style=dotted];
m19_341 -> m19_342  [key=0, style=solid];
m19_341 -> m19_320  [key=2, style=dotted];
m19_343 -> m19_38  [key=2, style=dotted];
m19_343 -> m19_344  [key=0, style=solid];
m19_322 -> m19_34  [key=2, style=dotted];
m19_322 -> m19_323  [key=0, style=solid];
m19_322 -> m19_343  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_342 -> m19_343  [key=0, style=solid];
m19_342 -> m19_344  [key=1, style=dashed, color=darkseagreen4, label=expected];
m19_344 -> m19_224  [key=2, style=dotted];
m19_344 -> m19_345  [key=0, style=solid];
m19_345 -> m19_321  [key=0, style=bold, color=blue];
m19_406 -> m19_407  [key=0, style=solid];
m19_409 -> m19_15  [key=2, style=dotted];
m19_409 -> m19_410  [key=0, style=solid];
m19_409 -> m19_411  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_409 -> m19_412  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_409 -> m19_413  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_409 -> m19_414  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_409 -> m19_415  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_409 -> m19_416  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_409 -> m19_417  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_408 -> m19_35  [key=2, style=dotted];
m19_408 -> m19_409  [key=0, style=solid];
m19_410 -> m19_411  [key=0, style=solid];
m19_411 -> m19_412  [key=0, style=solid];
m19_412 -> m19_90  [key=2, style=dotted];
m19_412 -> m19_413  [key=0, style=solid];
m19_413 -> m19_414  [key=0, style=solid];
m19_413 -> m19_95  [key=2, style=dotted];
m19_414 -> m19_415  [key=0, style=solid];
m19_414 -> m19_404  [key=2, style=dotted];
m19_415 -> m19_416  [key=0, style=solid];
m19_415 -> m19_404  [key=2, style=dotted];
m19_416 -> m19_417  [key=0, style=solid];
m19_416 -> m19_319  [key=2, style=dotted];
m19_417 -> m19_418  [key=0, style=solid];
m19_417 -> m19_100  [key=2, style=dotted];
m19_419 -> m19_38  [key=2, style=dotted];
m19_419 -> m19_420  [key=0, style=solid];
m19_407 -> m19_34  [key=2, style=dotted];
m19_407 -> m19_408  [key=0, style=solid];
m19_407 -> m19_419  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_418 -> m19_419  [key=0, style=solid];
m19_418 -> m19_420  [key=1, style=dashed, color=darkseagreen4, label=expected];
m19_420 -> m19_224  [key=2, style=dotted];
m19_420 -> m19_421  [key=0, style=solid];
m19_421 -> m19_406  [key=0, style=bold, color=blue];
m19_225 -> m19_226  [key=0, style=solid];
m19_228 -> m19_15  [key=2, style=dotted];
m19_228 -> m19_229  [key=0, style=solid];
m19_228 -> m19_230  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_228 -> m19_231  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_228 -> m19_232  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_228 -> m19_233  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_228 -> m19_234  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_228 -> m19_235  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_228 -> m19_236  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_228 -> m19_237  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_228 -> m19_238  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_228 -> m19_239  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_228 -> m19_240  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_228 -> m19_241  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_232 -> m19_92  [key=2, style=dotted];
m19_232 -> m19_233  [key=0, style=solid];
m19_234 -> m19_92  [key=2, style=dotted];
m19_234 -> m19_235  [key=0, style=solid];
m19_237 -> m19_92  [key=2, style=dotted];
m19_237 -> m19_238  [key=0, style=solid];
m19_239 -> m19_92  [key=2, style=dotted];
m19_239 -> m19_240  [key=0, style=solid];
m19_240 -> m19_92  [key=2, style=dotted];
m19_240 -> m19_241  [key=0, style=solid];
m19_227 -> m19_35  [key=2, style=dotted];
m19_227 -> m19_228  [key=0, style=solid];
m19_229 -> m19_230  [key=0, style=solid];
m19_230 -> m19_221  [key=2, style=dotted];
m19_230 -> m19_231  [key=0, style=solid];
m19_231 -> m19_222  [key=2, style=dotted];
m19_231 -> m19_232  [key=0, style=solid];
m19_233 -> m19_222  [key=2, style=dotted];
m19_233 -> m19_234  [key=0, style=solid];
m19_235 -> m19_222  [key=2, style=dotted];
m19_235 -> m19_236  [key=0, style=solid];
m19_236 -> m19_90  [key=2, style=dotted];
m19_236 -> m19_237  [key=0, style=solid];
m19_238 -> m19_239  [key=0, style=solid];
m19_238 -> m19_223  [key=2, style=dotted];
m19_241 -> m19_242  [key=0, style=solid];
m19_241 -> m19_246  [key=2, style=dotted];
m19_243 -> m19_38  [key=2, style=dotted];
m19_243 -> m19_244  [key=0, style=solid];
m19_226 -> m19_34  [key=2, style=dotted];
m19_226 -> m19_227  [key=0, style=solid];
m19_226 -> m19_243  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_242 -> m19_243  [key=0, style=solid];
m19_242 -> m19_244  [key=1, style=dashed, color=darkseagreen4, label=expected];
m19_244 -> m19_224  [key=2, style=dotted];
m19_244 -> m19_245  [key=0, style=solid];
m19_245 -> m19_225  [key=0, style=bold, color=blue];
m19_724 -> m19_725  [key=0, style=solid];
m19_726 -> m19_15  [key=2, style=dotted];
m19_726 -> m19_727  [key=0, style=solid];
m19_726 -> m19_728  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_726 -> m19_729  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_726 -> m19_730  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_726 -> m19_731  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_726 -> m19_732  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_726 -> m19_733  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_726 -> m19_734  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_726 -> m19_735  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_726 -> m19_736  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_726 -> m19_737  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_726 -> m19_738  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_726 -> m19_739  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_726 -> m19_740  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_726 -> m19_741  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_726 -> m19_742  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_725 -> m19_726  [key=0, style=solid];
m19_725 -> m19_61  [key=2, style=dotted];
m19_725 -> m19_743  [key=1, style=dashed, color=darkseagreen4, label=sw];
m19_727 -> m19_728  [key=0, style=solid];
m19_728 -> m19_729  [key=0, style=solid];
m19_729 -> m19_730  [key=0, style=solid];
m19_729 -> m19_142  [key=2, style=dotted];
m19_730 -> m19_731  [key=0, style=solid];
m19_730 -> m19_685  [key=2, style=dotted];
m19_730 -> m19_686  [key=2, style=dotted];
m19_731 -> m19_732  [key=0, style=solid];
m19_731 -> m19_745  [key=2, style=dotted];
m19_731 -> m19_746  [key=2, style=dotted];
m19_732 -> m19_733  [key=0, style=solid];
m19_733 -> m19_734  [key=0, style=solid];
m19_733 -> m19_685  [key=2, style=dotted];
m19_733 -> m19_686  [key=2, style=dotted];
m19_734 -> m19_735  [key=0, style=solid];
m19_734 -> m19_745  [key=2, style=dotted];
m19_734 -> m19_746  [key=2, style=dotted];
m19_735 -> m19_736  [key=0, style=solid];
m19_736 -> m19_737  [key=0, style=solid];
m19_736 -> m19_685  [key=2, style=dotted];
m19_736 -> m19_686  [key=2, style=dotted];
m19_737 -> m19_738  [key=0, style=solid];
m19_737 -> m19_745  [key=2, style=dotted];
m19_737 -> m19_746  [key=2, style=dotted];
m19_738 -> m19_739  [key=0, style=solid];
m19_738 -> m19_592  [key=2, style=dotted];
m19_739 -> m19_740  [key=0, style=solid];
m19_739 -> m19_747  [key=2, style=dotted];
m19_740 -> m19_741  [key=0, style=solid];
m19_740 -> m19_748  [key=2, style=dotted];
m19_740 -> m19_614  [key=2, style=dotted];
m19_741 -> m19_742  [key=0, style=solid];
m19_741 -> m19_749  [key=2, style=dotted];
m19_742 -> m19_270  [key=2, style=dotted];
m19_742 -> m19_743  [key=0, style=solid];
m19_743 -> m19_64  [key=2, style=dotted];
m19_743 -> m19_744  [key=0, style=solid];
m19_743 -> m19_224  [key=2, style=dotted];
m19_744 -> m19_724  [key=0, style=bold, color=blue];
m19_389 -> m19_390  [key=0, style=solid];
m19_392 -> m19_15  [key=2, style=dotted];
m19_392 -> m19_393  [key=0, style=solid];
m19_392 -> m19_394  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_392 -> m19_395  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_392 -> m19_396  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_392 -> m19_397  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_392 -> m19_398  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_392 -> m19_399  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_391 -> m19_35  [key=2, style=dotted];
m19_391 -> m19_392  [key=0, style=solid];
m19_393 -> m19_394  [key=0, style=solid];
m19_394 -> m19_395  [key=0, style=solid];
m19_395 -> m19_396  [key=0, style=solid];
m19_395 -> m19_404  [key=2, style=dotted];
m19_396 -> m19_397  [key=0, style=solid];
m19_396 -> m19_405  [key=2, style=dotted];
m19_397 -> m19_90  [key=2, style=dotted];
m19_397 -> m19_398  [key=0, style=solid];
m19_398 -> m19_399  [key=0, style=solid];
m19_398 -> m19_95  [key=2, style=dotted];
m19_399 -> m19_400  [key=0, style=solid];
m19_399 -> m19_100  [key=2, style=dotted];
m19_401 -> m19_38  [key=2, style=dotted];
m19_401 -> m19_402  [key=0, style=solid];
m19_390 -> m19_34  [key=2, style=dotted];
m19_390 -> m19_391  [key=0, style=solid];
m19_390 -> m19_401  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_400 -> m19_401  [key=0, style=solid];
m19_400 -> m19_402  [key=1, style=dashed, color=darkseagreen4, label=expected];
m19_402 -> m19_224  [key=2, style=dotted];
m19_402 -> m19_403  [key=0, style=solid];
m19_403 -> m19_389  [key=0, style=bold, color=blue];
m19_65 -> m19_66  [key=0, style=solid];
m19_88 -> m19_22  [key=2, style=dotted];
m19_88 -> m19_89  [key=0, style=solid];
m19_68 -> m19_15  [key=2, style=dotted];
m19_68 -> m19_69  [key=0, style=solid];
m19_68 -> m19_70  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_68 -> m19_71  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_68 -> m19_72  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_68 -> m19_73  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_68 -> m19_74  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_68 -> m19_75  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_68 -> m19_76  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_68 -> m19_77  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_68 -> m19_78  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_68 -> m19_79  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_68 -> m19_80  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_68 -> m19_81  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_68 -> m19_82  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_68 -> m19_83  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_71 -> m19_92  [key=2, style=dotted];
m19_71 -> m19_72  [key=0, style=solid];
m19_78 -> m19_92  [key=2, style=dotted];
m19_78 -> m19_79  [key=0, style=solid];
m19_80 -> m19_92  [key=2, style=dotted];
m19_80 -> m19_81  [key=0, style=solid];
m19_85 -> m19_88  [key=1, style=dashed, color=darkseagreen4, label=result];
m19_85 -> m19_38  [key=2, style=dotted];
m19_85 -> m19_86  [key=0, style=solid];
m19_85 -> m19_87  [key=1, style=dashed, color=darkseagreen4, label=result];
m19_84 -> m19_88  [key=1, style=dashed, color=darkseagreen4, label=expected];
m19_84 -> m19_85  [key=0, style=solid];
m19_87 -> m19_88  [key=0, style=solid];
m19_87 -> m19_101  [key=2, style=dotted];
m19_67 -> m19_35  [key=2, style=dotted];
m19_67 -> m19_68  [key=0, style=solid];
m19_69 -> m19_90  [key=2, style=dotted];
m19_69 -> m19_70  [key=0, style=solid];
m19_70 -> m19_71  [key=0, style=solid];
m19_70 -> m19_91  [key=2, style=dotted];
m19_72 -> m19_73  [key=0, style=solid];
m19_72 -> m19_93  [key=2, style=dotted];
m19_73 -> m19_74  [key=0, style=solid];
m19_73 -> m19_94  [key=2, style=dotted];
m19_74 -> m19_75  [key=0, style=solid];
m19_74 -> m19_95  [key=2, style=dotted];
m19_75 -> m19_76  [key=0, style=solid];
m19_75 -> m19_95  [key=2, style=dotted];
m19_76 -> m19_77  [key=0, style=solid];
m19_76 -> m19_95  [key=2, style=dotted];
m19_77 -> m19_78  [key=0, style=solid];
m19_77 -> m19_96  [key=2, style=dotted];
m19_79 -> m19_80  [key=0, style=solid];
m19_79 -> m19_97  [key=2, style=dotted];
m19_81 -> m19_82  [key=0, style=solid];
m19_81 -> m19_98  [key=2, style=dotted];
m19_82 -> m19_83  [key=0, style=solid];
m19_82 -> m19_99  [key=2, style=dotted];
m19_83 -> m19_84  [key=0, style=solid];
m19_83 -> m19_100  [key=2, style=dotted];
m19_66 -> m19_85  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_66 -> m19_34  [key=2, style=dotted];
m19_66 -> m19_67  [key=0, style=solid];
m19_86 -> m19_87  [key=0, style=solid];
m19_86 -> m19_101  [key=2, style=dotted];
m19_89 -> m19_65  [key=0, style=bold, color=blue];
m19_271 -> m19_272  [key=0, style=solid];
m19_283 -> m19_284  [key=0, style=solid, color=green];
m19_283 -> m19_22  [key=2, style=dotted, color=green];
m19_274 -> m19_283  [key=1, style=dashed, color=green, label=jsonWriter];
m19_274 -> m19_275  [key=0, style=solid];
m19_274 -> m19_15  [key=2, style=dotted];
m19_274 -> m19_276  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_274 -> m19_277  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_274 -> m19_278  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_274 -> m19_279  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_274 -> m19_280  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_274 -> m19_281  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_274 -> m19_282  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_274 -> m19_284  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_274 -> m19_285  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_274 -> m19_286  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_274 -> m19_287  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_274 -> m19_288  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_274 -> m19_289  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_274 -> m19_290  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_274 -> m19_291  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_274 -> m19_292  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_274 -> m19_293  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_274 -> m19_294  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_274 -> m19_295  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_274 -> m19_296  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_274 -> m19_297  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_274 -> m19_298  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_282 -> m19_283  [key=0, style=solid, color=green];
m19_282 -> m19_92  [key=2, style=dotted];
m19_284 -> m19_285  [key=0, style=solid];
m19_284 -> m19_22  [key=2, style=dotted];
m19_273 -> m19_274  [key=0, style=solid];
m19_273 -> m19_35  [key=2, style=dotted];
m19_275 -> m19_22  [key=2, style=dotted];
m19_275 -> m19_276  [key=0, style=solid];
m19_276 -> m19_277  [key=0, style=solid];
m19_276 -> m19_221  [key=2, style=dotted];
m19_277 -> m19_22  [key=2, style=dotted];
m19_277 -> m19_278  [key=0, style=solid];
m19_278 -> m19_22  [key=2, style=dotted];
m19_278 -> m19_279  [key=0, style=solid];
m19_279 -> m19_280  [key=0, style=solid];
m19_279 -> m19_222  [key=2, style=dotted];
m19_280 -> m19_22  [key=2, style=dotted];
m19_280 -> m19_281  [key=0, style=solid];
m19_281 -> m19_282  [key=0, style=solid];
m19_281 -> m19_22  [key=2, style=dotted];
m19_285 -> m19_286  [key=0, style=solid];
m19_285 -> m19_222  [key=2, style=dotted];
m19_286 -> m19_22  [key=2, style=dotted];
m19_286 -> m19_287  [key=0, style=solid];
m19_287 -> m19_22  [key=2, style=dotted];
m19_287 -> m19_288  [key=0, style=solid];
m19_288 -> m19_289  [key=0, style=solid];
m19_288 -> m19_90  [key=2, style=dotted];
m19_289 -> m19_22  [key=2, style=dotted];
m19_289 -> m19_290  [key=0, style=solid];
m19_290 -> m19_291  [key=0, style=solid];
m19_290 -> m19_92  [key=2, style=dotted];
m19_291 -> m19_22  [key=2, style=dotted];
m19_291 -> m19_292  [key=0, style=solid];
m19_292 -> m19_22  [key=2, style=dotted];
m19_292 -> m19_293  [key=0, style=solid];
m19_293 -> m19_294  [key=0, style=solid];
m19_293 -> m19_270  [key=2, style=dotted];
m19_294 -> m19_22  [key=2, style=dotted];
m19_294 -> m19_295  [key=0, style=solid];
m19_295 -> m19_22  [key=2, style=dotted];
m19_295 -> m19_296  [key=0, style=solid];
m19_296 -> m19_297  [key=0, style=solid];
m19_296 -> m19_19  [key=2, style=dotted];
m19_297 -> m19_22  [key=2, style=dotted];
m19_297 -> m19_298  [key=0, style=solid];
m19_298 -> m19_22  [key=2, style=dotted];
m19_298 -> m19_299  [key=0, style=solid];
m19_272 -> m19_273  [key=0, style=solid];
m19_272 -> m19_34  [key=2, style=dotted];
m19_299 -> m19_271  [key=0, style=bold, color=blue];
m19_679 -> m19_680  [key=0, style=solid];
m19_683 -> m19_22  [key=2, style=dotted];
m19_683 -> m19_684  [key=0, style=solid];
m19_683 -> m19_64  [key=2, style=dotted];
m19_681 -> m19_15  [key=2, style=dotted];
m19_681 -> m19_682  [key=0, style=solid];
m19_680 -> m19_683  [key=1, style=dashed, color=darkseagreen4, label=sw];
m19_680 -> m19_681  [key=0, style=solid];
m19_680 -> m19_61  [key=2, style=dotted];
m19_682 -> m19_683  [key=0, style=solid];
m19_682 -> m19_685  [key=2, style=dotted];
m19_682 -> m19_686  [key=2, style=dotted];
m19_684 -> m19_679  [key=0, style=bold, color=blue];
m19_576 -> m19_577  [key=0, style=solid];
m19_589 -> m19_22  [key=2, style=dotted];
m19_589 -> m19_590  [key=0, style=solid];
m19_589 -> m19_21  [key=2, style=dotted];
m19_583 -> m19_22  [key=2, style=dotted];
m19_583 -> m19_584  [key=0, style=solid];
m19_587 -> m19_22  [key=2, style=dotted];
m19_587 -> m19_588  [key=0, style=solid];
m19_581 -> m19_15  [key=2, style=dotted];
m19_581 -> m19_583  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_581 -> m19_582  [key=0, style=solid];
m19_581 -> m19_584  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_579 -> m19_589  [key=1, style=dashed, color=darkseagreen4, label=text];
m19_579 -> m19_580  [key=0, style=solid];
m19_588 -> m19_589  [key=0, style=solid];
m19_588 -> m19_593  [key=2, style=dotted];
m19_588 -> m19_594  [key=2, style=dotted];
m19_582 -> m19_583  [key=0, style=solid];
m19_584 -> m19_585  [key=0, style=solid];
m19_584 -> m19_592  [key=2, style=dotted];
m19_586 -> m19_587  [key=0, style=solid];
m19_586 -> m19_38  [key=2, style=dotted];
m19_586 -> m19_588  [key=1, style=dashed, color=darkseagreen4, label=result];
m19_585 -> m19_587  [key=1, style=dashed, color=darkseagreen4, label=expected];
m19_585 -> m19_586  [key=0, style=solid];
m19_578 -> m19_35  [key=2, style=dotted];
m19_578 -> m19_581  [key=1, style=dashed, color=darkseagreen4, label=sw];
m19_578 -> m19_579  [key=0, style=solid];
m19_580 -> m19_581  [key=0, style=solid];
m19_580 -> m19_584  [key=1, style=dashed, color=darkseagreen4, label=data];
m19_580 -> m19_591  [key=2, style=dotted];
m19_577 -> m19_586  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_577 -> m19_34  [key=2, style=dotted];
m19_577 -> m19_578  [key=0, style=solid];
m19_590 -> m19_576  [key=0, style=bold, color=blue];
m19_662 -> m19_663  [key=0, style=solid];
m19_675 -> m19_22  [key=2, style=dotted];
m19_675 -> m19_665  [key=0, style=solid];
m19_663 -> m19_675  [key=1, style=dashed, color=darkseagreen4, label=stateArray];
m19_663 -> m19_664  [key=0, style=solid];
m19_663 -> m19_677  [key=2, style=dotted];
m19_664 -> m19_675  [key=1, style=dashed, color=darkseagreen4, label=valueStates];
m19_664 -> m19_665  [key=0, style=solid];
m19_665 -> m19_675  [key=1, style=dashed, color=darkseagreen4, label=valueToken];
m19_665 -> m19_666  [key=0, style=solid];
m19_665 -> m19_676  [key=0, style=solid];
m19_665 -> m19_678  [key=2, style=dotted];
m19_674 -> m19_675  [key=0, style=solid];
m19_666 -> m19_667  [key=0, style=solid];
m19_673 -> m19_674  [key=0, style=solid];
m19_667 -> m19_668  [key=0, style=solid];
m19_672 -> m19_673  [key=0, style=solid];
m19_668 -> m19_669  [key=0, style=solid];
m19_671 -> m19_672  [key=0, style=solid];
m19_669 -> m19_670  [key=0, style=solid];
m19_670 -> m19_671  [key=0, style=solid];
m19_676 -> m19_662  [key=0, style=bold, color=blue];
m19_852 -> m19_853  [key=0, style=solid];
m19_856 -> m19_22  [key=2, style=dotted];
m19_856 -> m19_857  [key=0, style=solid];
m19_858 -> m19_22  [key=2, style=dotted];
m19_858 -> m19_859  [key=0, style=solid];
m19_859 -> m19_22  [key=2, style=dotted];
m19_859 -> m19_860  [key=0, style=solid];
m19_861 -> m19_22  [key=2, style=dotted];
m19_861 -> m19_862  [key=0, style=solid];
m19_863 -> m19_22  [key=2, style=dotted];
m19_863 -> m19_864  [key=0, style=solid];
m19_854 -> m19_856  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_854 -> m19_858  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_854 -> m19_859  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_854 -> m19_861  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_854 -> m19_863  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_854 -> m19_855  [key=0, style=solid];
m19_854 -> m19_866  [key=2, style=dotted];
m19_854 -> m19_857  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_854 -> m19_860  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_854 -> m19_862  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_855 -> m19_856  [key=0, style=solid];
m19_855 -> m19_867  [key=2, style=dotted];
m19_857 -> m19_858  [key=0, style=solid];
m19_857 -> m19_868  [key=2, style=dotted];
m19_860 -> m19_861  [key=0, style=solid];
m19_860 -> m19_869  [key=2, style=dotted];
m19_862 -> m19_863  [key=0, style=solid];
m19_862 -> m19_870  [key=2, style=dotted];
m19_864 -> m19_64  [key=2, style=dotted];
m19_864 -> m19_865  [key=0, style=solid];
m19_864 -> m19_224  [key=2, style=dotted];
m19_853 -> m19_854  [key=0, style=solid];
m19_853 -> m19_864  [key=1, style=dashed, color=darkseagreen4, label=sw];
m19_853 -> m19_61  [key=2, style=dotted];
m19_865 -> m19_852  [key=0, style=bold, color=blue];
m19_885 -> m19_886  [key=0, style=solid];
m19_889 -> m19_15  [key=2, style=dotted];
m19_889 -> m19_890  [key=0, style=solid];
m19_889 -> m19_891  [key=1, style=dashed, color=darkseagreen4, label=w];
m19_888 -> m19_889  [key=0, style=solid];
m19_888 -> m19_61  [key=2, style=dotted];
m19_888 -> m19_892  [key=1, style=dashed, color=darkseagreen4, label=sw];
m19_890 -> m19_891  [key=0, style=solid];
m19_891 -> m19_892  [key=0, style=solid];
m19_891 -> m19_894  [key=2, style=dotted];
m19_892 -> m19_64  [key=2, style=dotted];
m19_892 -> m19_893  [key=0, style=solid];
m19_892 -> m19_224  [key=2, style=dotted];
m19_887 -> m19_888  [key=0, style=solid];
m19_887 -> m19_891  [key=1, style=dashed, color=darkseagreen4, label=r];
m19_887 -> m19_443  [key=2, style=dotted];
m19_887 -> m19_444  [key=2, style=dotted];
m19_886 -> m19_887  [key=0, style=solid];
m19_893 -> m19_885  [key=0, style=bold, color=blue];
m19_447 -> m19_448  [key=0, style=solid];
m19_459 -> m19_22  [key=2, style=dotted];
m19_459 -> m19_460  [key=0, style=solid];
m19_459 -> m19_38  [key=2, style=dotted];
m19_450 -> m19_15  [key=2, style=dotted];
m19_450 -> m19_451  [key=0, style=solid];
m19_450 -> m19_453  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_450 -> m19_455  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_450 -> m19_456  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_450 -> m19_458  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_448 -> m19_459  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_448 -> m19_449  [key=0, style=solid];
m19_448 -> m19_34  [key=2, style=dotted];
m19_458 -> m19_459  [key=0, style=solid];
m19_458 -> m19_19  [key=2, style=dotted];
m19_449 -> m19_35  [key=2, style=dotted];
m19_449 -> m19_450  [key=0, style=solid];
m19_451 -> m19_452  [key=0, style=solid];
m19_451 -> m19_454  [key=1, style=dashed, color=darkseagreen4, label=i];
m19_451 -> m19_455  [key=1, style=dashed, color=darkseagreen4, label=i];
m19_451 -> m19_457  [key=1, style=dashed, color=darkseagreen4, label=i];
m19_453 -> m19_221  [key=2, style=dotted];
m19_453 -> m19_454  [key=0, style=solid];
m19_455 -> m19_222  [key=2, style=dotted];
m19_455 -> m19_456  [key=0, style=solid];
m19_456 -> m19_457  [key=0, style=solid];
m19_456 -> m19_461  [key=2, style=dotted];
m19_454 -> m19_458  [key=0, style=solid];
m19_454 -> m19_455  [key=0, style=solid];
m19_452 -> m19_453  [key=0, style=solid];
m19_452 -> m19_456  [key=1, style=dashed, color=darkseagreen4, label=rawJson];
m19_457 -> m19_454  [key=0, style=solid];
m19_457 -> m19_457  [key=1, style=dashed, color=darkseagreen4, label=i];
m19_460 -> m19_447  [key=0, style=bold, color=blue];
m19_968 -> m19_971  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m19_968 -> m19_969  [key=0, style=solid];
m19_971 -> m19_785  [key=2, style=dotted];
m19_971 -> m19_972  [key=0, style=solid];
m19_969 -> m19_971  [key=0, style=solid];
m19_969 -> m19_970  [key=0, style=solid];
m19_970 -> m19_972  [key=0, style=solid];
m19_972 -> m19_968  [key=0, style=bold, color=blue];
m19_698 -> m19_699  [key=0, style=solid];
m19_707 -> m19_22  [key=2, style=dotted];
m19_707 -> m19_708  [key=0, style=solid];
m19_707 -> m19_697  [key=2, style=dotted];
m19_704 -> m19_22  [key=2, style=dotted];
m19_704 -> m19_705  [key=0, style=solid];
m19_705 -> m19_22  [key=2, style=dotted];
m19_705 -> m19_706  [key=0, style=solid];
m19_712 -> m19_22  [key=2, style=dotted];
m19_712 -> m19_713  [key=0, style=solid];
m19_713 -> m19_22  [key=2, style=dotted];
m19_713 -> m19_714  [key=0, style=solid];
m19_700 -> m19_15  [key=2, style=dotted];
m19_700 -> m19_701  [key=0, style=solid];
m19_700 -> m19_702  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_709 -> m19_15  [key=2, style=dotted];
m19_709 -> m19_710  [key=0, style=solid];
m19_701 -> m19_707  [key=1, style=dashed, color=darkseagreen4, label=unicode];
m19_701 -> m19_702  [key=0, style=solid];
m19_701 -> m19_710  [key=1, style=dashed, color=darkseagreen4, label=unicode];
m19_706 -> m19_707  [key=0, style=solid];
m19_706 -> m19_443  [key=2, style=dotted];
m19_706 -> m19_444  [key=2, style=dotted];
m19_708 -> m19_709  [key=0, style=solid];
m19_708 -> m19_61  [key=2, style=dotted];
m19_708 -> m19_711  [key=1, style=dashed, color=darkseagreen4, label=sw];
m19_703 -> m19_704  [key=0, style=solid];
m19_703 -> m19_705  [key=1, style=dashed, color=darkseagreen4, label=json];
m19_703 -> m19_64  [key=2, style=dotted];
m19_703 -> m19_706  [key=1, style=dashed, color=darkseagreen4, label=json];
m19_711 -> m19_712  [key=0, style=solid];
m19_711 -> m19_713  [key=1, style=dashed, color=darkseagreen4, label=json];
m19_711 -> m19_64  [key=2, style=dotted];
m19_699 -> m19_700  [key=0, style=solid];
m19_699 -> m19_703  [key=1, style=dashed, color=darkseagreen4, label=sw];
m19_699 -> m19_61  [key=2, style=dotted];
m19_702 -> m19_703  [key=0, style=solid];
m19_702 -> m19_36  [key=2, style=dotted];
m19_710 -> m19_711  [key=0, style=solid];
m19_710 -> m19_36  [key=2, style=dotted];
m19_714 -> m19_698  [key=0, style=bold, color=blue];
m19_434 -> m19_435  [key=0, style=solid];
m19_441 -> m19_22  [key=2, style=dotted];
m19_441 -> m19_442  [key=0, style=solid];
m19_441 -> m19_64  [key=2, style=dotted];
m19_439 -> m19_15  [key=2, style=dotted];
m19_439 -> m19_440  [key=0, style=solid];
m19_440 -> m19_441  [key=0, style=solid];
m19_440 -> m19_446  [key=2, style=dotted];
m19_438 -> m19_441  [key=1, style=dashed, color=darkseagreen4, label=sw];
m19_438 -> m19_439  [key=0, style=solid];
m19_438 -> m19_61  [key=2, style=dotted];
m19_435 -> m19_440  [key=1, style=dashed, color=darkseagreen4, label=reader];
m19_435 -> m19_436  [key=0, style=solid];
m19_435 -> m19_443  [key=2, style=dotted];
m19_435 -> m19_444  [key=2, style=dotted];
m19_435 -> m19_437  [key=1, style=dashed, color=darkseagreen4, label=reader];
m19_437 -> m19_438  [key=0, style=solid];
m19_437 -> m19_445  [key=2, style=dotted];
m19_436 -> m19_437  [key=0, style=solid];
m19_436 -> m19_445  [key=2, style=dotted];
m19_442 -> m19_434  [key=0, style=bold, color=blue];
m19_171 -> m19_172  [key=0, style=solid];
m19_172 -> m19_175  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_172 -> m19_173  [key=0, style=solid];
m19_172 -> m19_174  [key=2, style=dotted];
m19_173 -> m19_171  [key=0, style=bold, color=blue];
m19_39 -> m19_40  [key=0, style=solid];
m19_41 -> m19_15  [key=2, style=dotted];
m19_41 -> m19_42  [key=0, style=solid];
m19_41 -> m19_51  [key=2, style=dotted];
m19_41 -> m19_43  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_46 -> m19_15  [key=2, style=dotted];
m19_46 -> m19_47  [key=0, style=solid];
m19_46 -> m19_51  [key=2, style=dotted];
m19_46 -> m19_48  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_40 -> m19_41  [key=0, style=solid];
m19_40 -> m19_12  [key=2, style=dotted];
m19_40 -> m19_42  [key=1, style=dashed, color=darkseagreen4, label=ms];
m19_40 -> m19_44  [key=1, style=dashed, color=darkseagreen4, label=ms];
m19_42 -> m19_43  [key=0, style=solid];
m19_42 -> m19_52  [key=2, style=dotted];
m19_43 -> m19_44  [key=0, style=solid];
m19_43 -> m19_53  [key=2, style=dotted];
m19_45 -> m19_46  [key=0, style=solid];
m19_45 -> m19_12  [key=2, style=dotted];
m19_45 -> m19_47  [key=1, style=dashed, color=darkseagreen4, label=ms];
m19_45 -> m19_49  [key=1, style=dashed, color=darkseagreen4, label=ms];
m19_47 -> m19_48  [key=0, style=solid];
m19_47 -> m19_52  [key=2, style=dotted];
m19_48 -> m19_49  [key=0, style=solid];
m19_48 -> m19_53  [key=2, style=dotted];
m19_44 -> m19_45  [key=0, style=solid];
m19_44 -> m19_54  [key=2, style=dotted];
m19_49 -> m19_52  [key=2, style=dotted];
m19_49 -> m19_50  [key=0, style=solid];
m19_50 -> m19_39  [key=0, style=bold, color=blue];
m19_524 -> m19_525  [key=0, style=solid];
m19_525 -> m19_527  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_525 -> m19_526  [key=0, style=solid];
m19_525 -> m19_174  [key=2, style=dotted];
m19_526 -> m19_524  [key=0, style=bold, color=blue];
m19_615 -> m19_616  [key=0, style=solid];
m19_623 -> m19_22  [key=2, style=dotted];
m19_623 -> m19_624  [key=0, style=solid];
m19_625 -> m19_22  [key=2, style=dotted];
m19_625 -> m19_626  [key=0, style=solid];
m19_627 -> m19_22  [key=2, style=dotted];
m19_627 -> m19_628  [key=0, style=solid];
m19_629 -> m19_22  [key=2, style=dotted];
m19_629 -> m19_630  [key=0, style=solid];
m19_631 -> m19_22  [key=2, style=dotted];
m19_631 -> m19_632  [key=0, style=solid];
m19_633 -> m19_22  [key=2, style=dotted];
m19_633 -> m19_634  [key=0, style=solid];
m19_635 -> m19_22  [key=2, style=dotted];
m19_635 -> m19_636  [key=0, style=solid];
m19_637 -> m19_22  [key=2, style=dotted];
m19_637 -> m19_638  [key=0, style=solid];
m19_639 -> m19_22  [key=2, style=dotted];
m19_639 -> m19_640  [key=0, style=solid];
m19_641 -> m19_22  [key=2, style=dotted];
m19_641 -> m19_642  [key=0, style=solid];
m19_643 -> m19_22  [key=2, style=dotted];
m19_643 -> m19_644  [key=0, style=solid];
m19_645 -> m19_22  [key=2, style=dotted];
m19_645 -> m19_646  [key=0, style=solid];
m19_647 -> m19_22  [key=2, style=dotted];
m19_647 -> m19_648  [key=0, style=solid];
m19_649 -> m19_22  [key=2, style=dotted];
m19_649 -> m19_650  [key=0, style=solid];
m19_651 -> m19_22  [key=2, style=dotted];
m19_651 -> m19_652  [key=0, style=solid];
m19_653 -> m19_22  [key=2, style=dotted];
m19_653 -> m19_654  [key=0, style=solid];
m19_655 -> m19_22  [key=2, style=dotted];
m19_655 -> m19_656  [key=0, style=solid];
m19_657 -> m19_22  [key=2, style=dotted];
m19_657 -> m19_658  [key=0, style=solid];
m19_620 -> m19_15  [key=2, style=dotted];
m19_620 -> m19_623  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_625  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_627  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_629  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_631  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_633  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_635  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_637  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_639  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_641  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_643  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_645  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_647  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_649  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_651  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_653  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_655  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_657  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_621  [key=0, style=solid];
m19_620 -> m19_622  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_624  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_626  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_628  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_630  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_632  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_634  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_636  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_638  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_640  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_642  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_644  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_646  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_648  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_650  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_652  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_654  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_620 -> m19_656  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_622 -> m19_623  [key=0, style=solid];
m19_622 -> m19_142  [key=2, style=dotted];
m19_624 -> m19_625  [key=0, style=solid];
m19_624 -> m19_16  [key=2, style=dotted];
m19_626 -> m19_627  [key=0, style=solid];
m19_626 -> m19_17  [key=2, style=dotted];
m19_628 -> m19_629  [key=0, style=solid];
m19_628 -> m19_142  [key=2, style=dotted];
m19_630 -> m19_631  [key=0, style=solid];
m19_630 -> m19_575  [key=2, style=dotted];
m19_632 -> m19_633  [key=0, style=solid];
m19_632 -> m19_142  [key=2, style=dotted];
m19_634 -> m19_635  [key=0, style=solid];
m19_634 -> m19_142  [key=2, style=dotted];
m19_636 -> m19_637  [key=0, style=solid];
m19_636 -> m19_142  [key=2, style=dotted];
m19_638 -> m19_639  [key=0, style=solid];
m19_638 -> m19_19  [key=2, style=dotted];
m19_640 -> m19_641  [key=0, style=solid];
m19_640 -> m19_16  [key=2, style=dotted];
m19_642 -> m19_643  [key=0, style=solid];
m19_642 -> m19_17  [key=2, style=dotted];
m19_644 -> m19_645  [key=0, style=solid];
m19_644 -> m19_660  [key=2, style=dotted];
m19_646 -> m19_647  [key=0, style=solid];
m19_646 -> m19_661  [key=2, style=dotted];
m19_648 -> m19_649  [key=0, style=solid];
m19_648 -> m19_142  [key=2, style=dotted];
m19_650 -> m19_651  [key=0, style=solid];
m19_650 -> m19_575  [key=2, style=dotted];
m19_652 -> m19_653  [key=0, style=solid];
m19_652 -> m19_270  [key=2, style=dotted];
m19_654 -> m19_655  [key=0, style=solid];
m19_654 -> m19_19  [key=2, style=dotted];
m19_656 -> m19_657  [key=0, style=solid];
m19_656 -> m19_100  [key=2, style=dotted];
m19_658 -> m19_38  [key=2, style=dotted];
m19_658 -> m19_659  [key=0, style=solid];
m19_658 -> m19_224  [key=2, style=dotted];
m19_617 -> m19_35  [key=2, style=dotted];
m19_617 -> m19_620  [key=1, style=dashed, color=darkseagreen4, label=sw];
m19_617 -> m19_618  [key=0, style=solid];
m19_619 -> m19_620  [key=0, style=solid];
m19_619 -> m19_591  [key=2, style=dotted];
m19_621 -> m19_622  [key=0, style=solid];
m19_616 -> m19_658  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_616 -> m19_34  [key=2, style=dotted];
m19_616 -> m19_617  [key=0, style=solid];
m19_618 -> m19_619  [key=0, style=solid];
m19_659 -> m19_615  [key=0, style=bold, color=blue];
m19_199 -> m19_200  [key=0, style=solid];
m19_216 -> m19_22  [key=2, style=dotted];
m19_216 -> m19_217  [key=0, style=solid];
m19_202 -> m19_15  [key=2, style=dotted];
m19_202 -> m19_216  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_202 -> m19_203  [key=0, style=solid];
m19_202 -> m19_204  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_202 -> m19_205  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_202 -> m19_206  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_202 -> m19_207  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_202 -> m19_208  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_202 -> m19_209  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_202 -> m19_210  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_202 -> m19_211  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_202 -> m19_212  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_202 -> m19_213  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_202 -> m19_214  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_202 -> m19_215  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_206 -> m19_92  [key=2, style=dotted];
m19_206 -> m19_207  [key=0, style=solid];
m19_208 -> m19_92  [key=2, style=dotted];
m19_208 -> m19_209  [key=0, style=solid];
m19_211 -> m19_92  [key=2, style=dotted];
m19_211 -> m19_212  [key=0, style=solid];
m19_213 -> m19_92  [key=2, style=dotted];
m19_213 -> m19_214  [key=0, style=solid];
m19_214 -> m19_92  [key=2, style=dotted];
m19_214 -> m19_215  [key=0, style=solid];
m19_215 -> m19_216  [key=0, style=solid];
m19_215 -> m19_19  [key=2, style=dotted];
m19_217 -> m19_218  [key=0, style=solid];
m19_217 -> m19_219  [key=1, style=dashed, color=darkseagreen4, label=expected];
m19_201 -> m19_35  [key=2, style=dotted];
m19_201 -> m19_202  [key=0, style=solid];
m19_203 -> m19_204  [key=0, style=solid];
m19_204 -> m19_221  [key=2, style=dotted];
m19_204 -> m19_205  [key=0, style=solid];
m19_205 -> m19_222  [key=2, style=dotted];
m19_205 -> m19_206  [key=0, style=solid];
m19_207 -> m19_222  [key=2, style=dotted];
m19_207 -> m19_208  [key=0, style=solid];
m19_209 -> m19_222  [key=2, style=dotted];
m19_209 -> m19_210  [key=0, style=solid];
m19_210 -> m19_90  [key=2, style=dotted];
m19_210 -> m19_211  [key=0, style=solid];
m19_212 -> m19_213  [key=0, style=solid];
m19_212 -> m19_223  [key=2, style=dotted];
m19_218 -> m19_38  [key=2, style=dotted];
m19_218 -> m19_219  [key=0, style=solid];
m19_219 -> m19_220  [key=0, style=solid];
m19_219 -> m19_224  [key=2, style=dotted];
m19_200 -> m19_34  [key=2, style=dotted];
m19_200 -> m19_201  [key=0, style=solid];
m19_200 -> m19_218  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_220 -> m19_199  [key=0, style=bold, color=blue];
m19_462 -> m19_463  [key=0, style=solid];
m19_475 -> m19_22  [key=2, style=dotted];
m19_475 -> m19_476  [key=0, style=solid];
m19_475 -> m19_38  [key=2, style=dotted];
m19_465 -> m19_15  [key=2, style=dotted];
m19_465 -> m19_466  [key=0, style=solid];
m19_465 -> m19_467  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_465 -> m19_468  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_465 -> m19_469  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_465 -> m19_470  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_465 -> m19_471  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_465 -> m19_472  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_465 -> m19_473  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_465 -> m19_474  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m19_471 -> m19_92  [key=2, style=dotted];
m19_471 -> m19_472  [key=0, style=solid];
m19_463 -> m19_475  [key=1, style=dashed, color=darkseagreen4, label=sb];
m19_463 -> m19_464  [key=0, style=solid];
m19_463 -> m19_34  [key=2, style=dotted];
m19_474 -> m19_475  [key=0, style=solid];
m19_474 -> m19_19  [key=2, style=dotted];
m19_464 -> m19_35  [key=2, style=dotted];
m19_464 -> m19_465  [key=0, style=solid];
m19_466 -> m19_221  [key=2, style=dotted];
m19_466 -> m19_467  [key=0, style=solid];
m19_467 -> m19_222  [key=2, style=dotted];
m19_467 -> m19_468  [key=0, style=solid];
m19_468 -> m19_469  [key=0, style=solid];
m19_468 -> m19_477  [key=2, style=dotted];
m19_469 -> m19_221  [key=2, style=dotted];
m19_469 -> m19_470  [key=0, style=solid];
m19_470 -> m19_222  [key=2, style=dotted];
m19_470 -> m19_471  [key=0, style=solid];
m19_472 -> m19_19  [key=2, style=dotted];
m19_472 -> m19_473  [key=0, style=solid];
m19_473 -> m19_474  [key=0, style=solid];
m19_473 -> m19_478  [key=2, style=dotted];
m19_476 -> m19_462  [key=0, style=bold, color=blue];
m19_982 -> m19_895  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.CustomJsonTextWriter"];
m19_982 -> m19_915  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.CustomJsonTextWriter"];
m19_982 -> m19_897  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.CustomJsonTextWriter"];
m19_982 -> m19_912  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.CustomJsonTextWriter"];
m19_982 -> m19_918  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.CustomJsonTextWriter"];
m19_982 -> m19_900  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.CustomJsonTextWriter"];
m19_982 -> m19_901  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.CustomJsonTextWriter"];
m19_982 -> m19_902  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.CustomJsonTextWriter"];
m19_982 -> m19_903  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.CustomJsonTextWriter"];
m19_982 -> m19_904  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.CustomJsonTextWriter"];
m19_982 -> m19_905  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.CustomJsonTextWriter"];
m19_982 -> m19_906  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.CustomJsonTextWriter"];
m19_982 -> m19_913  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.CustomJsonTextWriter"];
m19_982 -> m19_916  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.CustomJsonTextWriter"];
m19_982 -> m19_922  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.CustomJsonTextWriter"];
m19_982 -> m19_923  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.CustomJsonTextWriter"];
m19_984 -> m19_970  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.ConvertibleInt"];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_14  [key=2, style=dotted];
m20_2 -> m20_3  [key=0, style=solid];
m20_2 -> m20_15  [key=2, style=dotted];
m20_3 -> m20_4  [key=0, style=solid];
m20_3 -> m20_14  [key=2, style=dotted];
m20_4 -> m20_5  [key=0, style=solid];
m20_4 -> m20_16  [key=2, style=dotted];
m20_5 -> m20_6  [key=0, style=solid, color=red];
m20_5 -> m20_14  [key=2, style=dotted];
m20_6 -> m20_7  [key=0, style=solid, color=red];
m20_6 -> m20_17  [key=2, style=dotted, color=red];
m20_6 -> m20_8  [key=1, style=dashed, color=red, label=t];
m20_7 -> m20_8  [key=0, style=solid, color=red];
m20_7 -> m20_18  [key=2, style=dotted, color=red];
m20_8 -> m20_9  [key=0, style=solid, color=red];
m20_8 -> m20_19  [key=2, style=dotted, color=red];
m20_9 -> m20_10  [key=0, style=solid];
m20_9 -> m20_20  [key=2, style=dotted];
m20_10 -> m20_11  [key=0, style=solid];
m20_10 -> m20_14  [key=2, style=dotted];
m20_11 -> m20_12  [key=0, style=solid];
m20_11 -> m20_14  [key=2, style=dotted];
m20_12 -> m20_13  [key=0, style=solid];
m20_12 -> m20_16  [key=2, style=dotted];
m20_13 -> m20_0  [key=0, style=bold, color=blue];
m20_21 -> m20_22  [key=0, style=solid];
m20_22 -> m20_23  [key=0, style=solid];
m20_22 -> m20_26  [key=2, style=dotted];
m20_22 -> m20_24  [key=1, style=dashed, color=darkseagreen4, label=t];
m20_23 -> m20_24  [key=0, style=solid];
m20_24 -> m20_25  [key=0, style=solid];
m20_24 -> m20_27  [key=2, style=dotted];
m20_25 -> m20_21  [key=0, style=bold, color=blue];
m20_33 -> m20_34  [key=0, style=solid];
m20_34 -> m20_35  [key=0, style=solid];
m20_34 -> m20_51  [key=2, style=dotted];
m20_35 -> m20_36  [key=0, style=solid];
m20_35 -> m20_52  [key=2, style=dotted];
m20_35 -> m20_46  [key=1, style=dashed, color=darkseagreen4, label=o];
m20_36 -> m20_37  [key=0, style=solid];
m20_36 -> m20_14  [key=2, style=dotted];
m20_46 -> m20_47  [key=0, style=solid];
m20_46 -> m20_57  [key=2, style=dotted];
m20_37 -> m20_38  [key=0, style=solid];
m20_37 -> m20_16  [key=2, style=dotted];
m20_38 -> m20_39  [key=0, style=solid];
m20_38 -> m20_14  [key=2, style=dotted];
m20_39 -> m20_40  [key=0, style=solid];
m20_39 -> m20_53  [key=2, style=dotted];
m20_39 -> m20_48  [key=1, style=dashed, color=darkseagreen4, label=sw];
m20_39 -> m20_49  [key=1, style=dashed, color=darkseagreen4, label=sw];
m20_40 -> m20_41  [key=0, style=solid];
m20_40 -> m20_54  [key=2, style=dotted];
m20_48 -> m20_49  [key=0, style=solid];
m20_48 -> m20_58  [key=2, style=dotted];
m20_49 -> m20_50  [key=0, style=solid];
m20_49 -> m20_14  [key=2, style=dotted];
m20_41 -> m20_42  [key=0, style=solid];
m20_41 -> m20_47  [key=1, style=dashed, color=darkseagreen4, label=i];
m20_41 -> m20_41  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m20_42 -> m20_43  [key=0, style=solid];
m20_42 -> m20_48  [key=0, style=solid];
m20_47 -> m20_42  [key=0, style=solid];
m20_47 -> m20_47  [key=1, style=dashed, color=darkseagreen4, label=i];
m20_43 -> m20_44  [key=0, style=solid];
m20_43 -> m20_55  [key=2, style=dotted];
m20_43 -> m20_46  [key=1, style=dashed, color=darkseagreen4, label=file];
m20_44 -> m20_45  [key=0, style=solid];
m20_44 -> m20_56  [key=2, style=dotted];
m20_44 -> m20_46  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m20_45 -> m20_46  [key=0, style=solid];
m20_50 -> m20_33  [key=0, style=bold, color=blue];
m20_82 -> m20_83  [key=0, style=solid];
m20_83 -> m20_84  [key=0, style=solid];
m20_83 -> m20_51  [key=2, style=dotted];
m20_83 -> m20_86  [key=1, style=dashed, color=darkseagreen4, label=json];
m20_84 -> m20_85  [key=0, style=solid];
m20_84 -> m20_102  [key=2, style=dotted];
m20_86 -> m20_87  [key=0, style=solid];
m20_86 -> m20_103  [key=2, style=dotted];
m20_85 -> m20_86  [key=0, style=solid];
m20_85 -> m20_85  [key=1, style=dashed, color=darkseagreen4, label=s];
m20_87 -> m20_88  [key=0, style=solid];
m20_87 -> m20_14  [key=2, style=dotted];
m20_88 -> m20_89  [key=0, style=solid];
m20_88 -> m20_16  [key=2, style=dotted];
m20_89 -> m20_90  [key=0, style=solid];
m20_89 -> m20_14  [key=2, style=dotted];
m20_90 -> m20_91  [key=0, style=solid];
m20_90 -> m20_53  [key=2, style=dotted];
m20_90 -> m20_99  [key=1, style=dashed, color=darkseagreen4, label=sw];
m20_90 -> m20_100  [key=1, style=dashed, color=darkseagreen4, label=sw];
m20_91 -> m20_92  [key=0, style=solid];
m20_91 -> m20_54  [key=2, style=dotted];
m20_99 -> m20_100  [key=0, style=solid];
m20_99 -> m20_58  [key=2, style=dotted];
m20_100 -> m20_101  [key=0, style=solid];
m20_100 -> m20_14  [key=2, style=dotted];
m20_92 -> m20_93  [key=0, style=solid];
m20_92 -> m20_98  [key=1, style=dashed, color=darkseagreen4, label=i];
m20_92 -> m20_41  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m20_93 -> m20_94  [key=0, style=solid];
m20_93 -> m20_99  [key=0, style=solid];
m20_98 -> m20_93  [key=0, style=solid];
m20_98 -> m20_98  [key=1, style=dashed, color=darkseagreen4, label=i];
m20_94 -> m20_95  [key=0, style=solid];
m20_94 -> m20_51  [key=2, style=dotted];
m20_94 -> m20_97  [key=1, style=dashed, color=darkseagreen4, label=json];
m20_95 -> m20_96  [key=0, style=solid];
m20_95 -> m20_102  [key=2, style=dotted];
m20_97 -> m20_98  [key=0, style=solid];
m20_97 -> m20_103  [key=2, style=dotted];
m20_96 -> m20_97  [key=0, style=solid];
m20_96 -> m20_96  [key=1, style=dashed, color=darkseagreen4, label=s];
m20_101 -> m20_82  [key=0, style=bold, color=blue];
m20_28 -> m20_29  [key=0, style=solid];
m20_29 -> m20_30  [key=0, style=solid];
m20_29 -> m20_26  [key=2, style=dotted];
m20_30 -> m20_31  [key=0, style=solid];
m20_30 -> m20_32  [key=2, style=dotted];
m20_31 -> m20_28  [key=0, style=bold, color=blue];
m20_59 -> m20_60  [key=0, style=solid];
m20_60 -> m20_61  [key=0, style=solid];
m20_60 -> m20_79  [key=2, style=dotted];
m20_61 -> m20_62  [key=0, style=solid];
m20_61 -> m20_80  [key=2, style=dotted];
m20_61 -> m20_63  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m20_62 -> m20_63  [key=0, style=solid];
m20_62 -> m20_56  [key=2, style=dotted];
m20_63 -> m20_64  [key=0, style=solid];
m20_63 -> m20_81  [key=2, style=dotted];
m20_64 -> m20_65  [key=0, style=solid];
m20_64 -> m20_14  [key=2, style=dotted];
m20_65 -> m20_66  [key=0, style=solid];
m20_65 -> m20_16  [key=2, style=dotted];
m20_66 -> m20_67  [key=0, style=solid];
m20_66 -> m20_14  [key=2, style=dotted];
m20_67 -> m20_68  [key=0, style=solid];
m20_67 -> m20_53  [key=2, style=dotted];
m20_67 -> m20_76  [key=1, style=dashed, color=darkseagreen4, label=sw];
m20_67 -> m20_77  [key=1, style=dashed, color=darkseagreen4, label=sw];
m20_68 -> m20_69  [key=0, style=solid];
m20_68 -> m20_54  [key=2, style=dotted];
m20_76 -> m20_77  [key=0, style=solid];
m20_76 -> m20_58  [key=2, style=dotted];
m20_77 -> m20_78  [key=0, style=solid];
m20_77 -> m20_14  [key=2, style=dotted];
m20_69 -> m20_70  [key=0, style=solid];
m20_69 -> m20_75  [key=1, style=dashed, color=darkseagreen4, label=i];
m20_69 -> m20_41  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m20_70 -> m20_71  [key=0, style=solid];
m20_70 -> m20_76  [key=0, style=solid];
m20_75 -> m20_70  [key=0, style=solid];
m20_75 -> m20_75  [key=1, style=dashed, color=darkseagreen4, label=i];
m20_71 -> m20_72  [key=0, style=solid];
m20_71 -> m20_79  [key=2, style=dotted];
m20_72 -> m20_73  [key=0, style=solid];
m20_72 -> m20_80  [key=2, style=dotted];
m20_72 -> m20_74  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m20_73 -> m20_74  [key=0, style=solid];
m20_73 -> m20_56  [key=2, style=dotted];
m20_74 -> m20_75  [key=0, style=solid];
m20_74 -> m20_81  [key=2, style=dotted];
m20_78 -> m20_59  [key=0, style=bold, color=blue];
m22_12 -> m22_10  [key=3, color=green, style=bold, label="Parameter variable int length"];
m22_12 -> m22_13  [key=0, style=solid, color=green];
m22_12 -> m22_15  [key=3, color=green, style=bold, label="method methodReturn int IndexOf"];
m22_12 -> m22_9  [key=3, color=darkorchid, style=bold, label="Parameter variable char c"];
m22_13 -> m22_13  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.StringReference"];
m22_13 -> m22_14  [key=0, style=solid, color=green];
m22_13 -> m22_18  [key=2, style=dotted, color=green];
m22_13 -> m22_16  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.StringReference"];
m22_14 -> m22_15  [key=0, style=solid, color=green];
m22_14 -> m22_16  [key=0, style=solid, color=green];
m22_16 -> m22_16  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.StringReference"];
m22_16 -> m22_17  [key=0, style=solid, color=green];
m22_15 -> m22_17  [key=0, style=solid, color=green];
m22_17 -> m22_12  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid];
m22_0 -> m22_2  [key=1, style=dashed, color=darkseagreen4, label=int];
m22_0 -> m22_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.StringReference"];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.StringReference"];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.StringReference"];
m22_4 -> m22_0  [key=0, style=bold, color=blue];
m22_9 -> m22_10  [key=0, style=solid, color=green];
m22_9 -> m22_12  [key=3, color=darkorchid, style=bold, label="method methodReturn int IndexOf"];
m22_10 -> m22_11  [key=0, style=solid, color=green];
m22_10 -> m22_12  [key=2, style=dotted, color=green];
m22_10 -> m22_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.StringReference"];
m22_11 -> m22_9  [key=0, style=bold, color=blue];
m22_19 -> m22_20  [key=0, style=solid, color=green];
m22_19 -> m22_24  [key=1, style=dashed, color=green, label=string];
m22_19 -> m22_25  [key=1, style=dashed, color=green, label=string];
m22_19 -> m22_21  [key=3, color=green, style=bold, label="method methodReturn bool StartsWith"];
m22_19 -> m22_28  [key=3, color=green, style=bold, label="method methodReturn bool StartsWith"];
m22_24 -> m22_10  [key=3, color=green, style=bold, label="Local variable int i"];
m22_24 -> m22_25  [key=0, style=solid, color=green];
m22_24 -> m22_28  [key=0, style=solid, color=green];
m22_20 -> m22_20  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.StringReference"];
m22_20 -> m22_21  [key=0, style=solid, color=green];
m22_20 -> m22_22  [key=0, style=solid, color=green];
m22_21 -> m22_29  [key=0, style=solid, color=green];
m22_22 -> m22_25  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.StringReference"];
m22_22 -> m22_22  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.StringReference"];
m22_22 -> m22_23  [key=0, style=solid, color=green];
m22_23 -> m22_24  [key=0, style=solid, color=green];
m22_23 -> m22_25  [key=1, style=dashed, color=green, label=i];
m22_23 -> m22_27  [key=1, style=dashed, color=green, label=i];
m22_27 -> m22_24  [key=0, style=solid, color=green];
m22_27 -> m22_27  [key=1, style=dashed, color=green, label=i];
m22_25 -> m22_25  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.StringReference"];
m22_25 -> m22_26  [key=0, style=solid, color=green];
m22_25 -> m22_27  [key=0, style=solid, color=green];
m22_28 -> m22_29  [key=0, style=solid, color=green];
m22_26 -> m22_29  [key=0, style=solid, color=green];
m22_29 -> m22_19  [key=0, style=bold, color=blue];
m22_5 -> m22_6  [key=0, style=solid];
m22_6 -> m22_7  [key=0, style=solid];
m22_6 -> m22_8  [key=2, style=dotted];
m22_7 -> m22_5  [key=0, style=bold, color=blue];
m22_30 -> m22_21  [key=3, color=green, style=bold, label="method methodReturn bool EndsWith"];
m22_30 -> m22_28  [key=3, color=green, style=bold, label="method methodReturn bool EndsWith"];
m22_30 -> m22_31  [key=0, style=solid, color=green];
m22_30 -> m22_34  [key=1, style=dashed, color=green, label=string];
m22_30 -> m22_36  [key=1, style=dashed, color=green, label=string];
m22_30 -> m22_37  [key=1, style=dashed, color=green, label=string];
m22_36 -> m22_10  [key=3, color=green, style=bold, label="Local variable int i"];
m22_36 -> m22_37  [key=0, style=solid, color=green];
m22_36 -> m22_40  [key=0, style=solid, color=green];
m22_31 -> m22_31  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.StringReference"];
m22_31 -> m22_32  [key=0, style=solid, color=green];
m22_31 -> m22_33  [key=0, style=solid, color=green];
m22_32 -> m22_41  [key=0, style=solid, color=green];
m22_33 -> m22_34  [key=0, style=solid, color=green];
m22_33 -> m22_37  [key=1, style=dashed, color=green, label=chars];
m22_33 -> m22_33  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.StringReference"];
m22_34 -> m22_34  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.StringReference"];
m22_34 -> m22_35  [key=0, style=solid, color=green];
m22_34 -> m22_37  [key=1, style=dashed, color=green, label=start];
m22_35 -> m22_36  [key=0, style=solid, color=green];
m22_35 -> m22_37  [key=1, style=dashed, color=green, label=i];
m22_35 -> m22_39  [key=1, style=dashed, color=green, label=i];
m22_37 -> m22_38  [key=0, style=solid, color=green];
m22_37 -> m22_39  [key=0, style=solid, color=green];
m22_39 -> m22_36  [key=0, style=solid, color=green];
m22_39 -> m22_39  [key=1, style=dashed, color=green, label=i];
m22_40 -> m22_41  [key=0, style=solid, color=green];
m22_38 -> m22_41  [key=0, style=solid, color=green];
m22_41 -> m22_30  [key=0, style=bold, color=blue];
}
