digraph  {
n336 [label="out Newtonsoft.Json.Serialization.ResolverContractKey", span=""];
n337 [label="Newtonsoft.Json.Serialization.ResolverContractKey", span=""];
n338 [label="ref Newtonsoft.Json.Serialization.ResolverContractKey", span=""];
n339 [label="Newtonsoft.Json.Serialization.DefaultContractResolver", span=""];
n340 [label=methodCall, span=""];
n0 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="45-45"];
n1 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", label="_resolverType = resolverType", span="47-47"];
n2 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", label="_contractType = contractType", span="48-48"];
n3 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="45-45"];
n4 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", span="51-51"];
n5 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", label="return _resolverType.GetHashCode() ^ _contractType.GetHashCode();", span="53-53"];
n6 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", span="51-51"];
n7 [cluster="System.Type.GetHashCode()", label="Entry System.Type.GetHashCode()", span="0-0"];
n8 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", span="56-56"];
n9 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", label="!(obj is ResolverContractKey)", span="58-58"];
n11 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", label="return Equals((ResolverContractKey) obj);", span="61-61"];
n10 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", label="return false;", span="59-59"];
n12 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", span="56-56"];
n13 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", span="64-64"];
n14 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", label="return (_resolverType == other._resolverType && _contractType == other._contractType);", span="66-66"];
n15 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", span="64-64"];
n16 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="118-118"];
n17 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="118-118"];
n18 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", span="130-130"];
n19 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", label="DefaultMembersSearchFlags = BindingFlags.Public | BindingFlags.Instance", span="132-132"];
n20 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", label="_sharedCache = shareCache", span="133-133"];
n21 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", span="130-130"];
n22 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", span="136-136"];
n23 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", label=_sharedCache, span="138-138"];
n24 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", label="return _sharedContractCache;", span="139-139"];
n25 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", label="return _instanceContractCache;", span="141-141"];
n26 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", span="136-136"];
n27 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", span="144-144"];
n28 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", label=_sharedCache, span="146-146"];
n29 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", label="_sharedContractCache = cache", span="147-147"];
n30 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", label="_instanceContractCache = cache", span="149-149"];
n31 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", span="144-144"];
n32 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="157-157"];
n33 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", label="type == null", span="159-159"];
n36 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", label="ResolverContractKey key = new ResolverContractKey(GetType(), type)", span="163-163"];
n39 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", label="contract = CreateContract(type)", span="167-167"];
n34 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", label="throw new ArgumentNullException(''type'');", span="160-160"];
n35 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", label="JsonContract contract", span="162-162"];
n37 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", label="Dictionary<ResolverContractKey, JsonContract> cache = GetCache()", span="164-164"];
n48 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n38 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", label="cache == null || !cache.TryGetValue(key, out contract)", span="165-165"];
n43 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", label="updatedCache[key] = contract", span="177-177"];
n45 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", label="return contract;", span="183-183"];
n49 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
n40 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", label=_typeContractCacheLock, span="170-170"];
n50 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="448-448"];
n41 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", label="cache = GetCache()", span="172-172"];
n42 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", label="Dictionary<ResolverContractKey, JsonContract> updatedCache =\r\n            (cache != null)\r\n              ? new Dictionary<ResolverContractKey, JsonContract>(cache)\r\n              : new Dictionary<ResolverContractKey, JsonContract>()", span="173-176"];
n51 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
n52 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n44 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", label="UpdateCache(updatedCache)", span="179-179"];
n46 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="157-157"];
n47 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n53 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", span="191-191"];
n54 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(objectType)", span="194-194"];
n55 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="List<MemberInfo> defaultMembers = ReflectionUtils.GetFieldsAndProperties(objectType, DefaultMembersSearchFlags)\r\n        .Where(m => !ReflectionUtils.IsIndexedProperty(m)).ToList()", span="197-198"];
n56 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="List<MemberInfo> allMembers = ReflectionUtils.GetFieldsAndProperties(objectType, BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static)\r\n        .Where(m => !ReflectionUtils.IsIndexedProperty(m)).ToList()", span="199-200"];
n66 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="objectType.AssignableToTypeName(''System.Data.Objects.DataClasses.EntityObject'', out match)", span="225-225"];
n70 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", span="92-92"];
n63 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="dataContractAttribute != null && JsonTypeReflector.GetAttribute<DataMemberAttribute>(member) != null", span="216-216"];
n71 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="560-560"];
n72 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
n73 [cluster="Unk.ToList", label="Entry Unk.ToList", span=""];
n79 [cluster="lambda expression", label="Entry lambda expression", span="198-198"];
n59 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="defaultMembers.Contains(member)", span="205-205"];
n57 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="List<MemberInfo> serializableMembers = new List<MemberInfo>()", span="202-202"];
n83 [cluster="lambda expression", label="Entry lambda expression", span="200-200"];
n58 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label=allMembers, span="203-203"];
n74 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n60 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="serializableMembers.Add(member)", span="208-208"];
n62 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="serializableMembers.Add(member)", span="214-214"];
n64 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="serializableMembers.Add(member)", span="217-217"];
n67 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="serializableMembers = serializableMembers.Where(ShouldSerializeEntityMember).ToList()", span="226-226"];
n68 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="return serializableMembers;", span="229-229"];
n65 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="Type match", span="223-223"];
n61 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(member) != null", span="213-213"];
n75 [cluster="System.Collections.Generic.List<T>.Contains(T)", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
n77 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", span="236-236"];
n76 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n78 [cluster="System.Type.AssignableToTypeName(string, out System.Type)", label="Entry System.Type.AssignableToTypeName(string, out System.Type)", span="190-190"];
n69 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", span="191-191"];
n80 [cluster="lambda expression", label="!ReflectionUtils.IsIndexedProperty(m)", span="198-198"];
n81 [cluster="lambda expression", label="Exit lambda expression", span="198-198"];
n82 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="408-408"];
n84 [cluster="lambda expression", label="!ReflectionUtils.IsIndexedProperty(m)", span="200-200"];
n85 [cluster="lambda expression", label="Exit lambda expression", span="200-200"];
n86 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", span="233-233"];
n87 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", label="PropertyInfo propertyInfo = memberInfo as PropertyInfo", span="235-235"];
n88 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", label="propertyInfo != null", span="236-236"];
n89 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", label="propertyInfo.PropertyType.IsGenericType && propertyInfo.PropertyType.GetGenericTypeDefinition().FullName == ''System.Data.Objects.DataClasses.EntityReference`1''", span="238-238"];
n91 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", label="return true;", span="242-242"];
n90 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", label="return false;", span="239-239"];
n93 [cluster="System.Type.GetGenericTypeDefinition()", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
n92 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", span="233-233"];
n94 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="251-251"];
n95 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="JsonObjectContract contract = new JsonObjectContract(objectType)", span="253-253"];
n97 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="contract.MemberSerialization = JsonTypeReflector.GetObjectMemberSerialization(objectType)", span="256-256"];
n100 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="contract.ParametrizedConstructor = GetParametrizedConstructor(objectType)", span="259-259"];
n96 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="InitializeContract(contract)", span="254-254"];
n103 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="57-57"];
n98 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="contract.Properties.AddRange(CreateProperties(contract))", span="257-257"];
n99 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="contract.DefaultCreator == null || contract.DefaultCreatorNonPublic", span="258-258"];
n101 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="return contract;", span="261-261"];
n104 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="289-289"];
n105 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", span="98-98"];
n106 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", span="556-556"];
n107 [cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="194-194"];
n108 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", span="264-264"];
n102 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="251-251"];
n109 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", label="ConstructorInfo[] constructors = objectType.GetConstructors(BindingFlags.Public | BindingFlags.Instance)", span="266-266"];
n110 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", label="constructors.Length == 1", span="268-268"];
n114 [cluster="System.Type.GetConstructors(System.Reflection.BindingFlags)", label="Entry System.Type.GetConstructors(System.Reflection.BindingFlags)", span="0-0"];
n111 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", label="return constructors[0];", span="269-269"];
n112 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", label="return null;", span="271-271"];
n113 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", span="264-264"];
n115 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="279-279"];
n116 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", label="return JsonTypeReflector.GetJsonConverter(objectType, objectType);", span="281-281"];
n117 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="279-279"];
n118 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(System.Reflection.ICustomAttributeProvider, System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(System.Reflection.ICustomAttributeProvider, System.Type)", span="130-130"];
n119 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="284-284"];
n120 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", label="return JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor(createdType);", span="286-286"];
n121 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="284-284"];
n122 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor(System.Type)", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor(System.Type)", span="60-60"];
n123 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetJsonContainerAttribute(contract.UnderlyingType)", span="291-291"];
n125 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="contract.IsReference = containerAttribute._isReference", span="294-294"];
n126 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(contract.UnderlyingType)", span="299-299"];
n128 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="contract.IsReference = true", span="302-302"];
n129 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="contract.Converter = ResolveContractConverter(contract.UnderlyingType)", span="306-306"];
n130 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="contract.InternalConverter = JsonSerializer.GetMatchingConverter(BuiltInConverters, contract.UnderlyingType)", span="309-309"];
n131 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="ReflectionUtils.HasDefaultConstructor(contract.CreatedType, true)\r\n        || contract.CreatedType.IsValueType", span="311-312"];
n132 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="contract.DefaultCreator = GetDefaultCreator(contract.CreatedType)", span="314-314"];
n133 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="contract.DefaultCreatorNonPublic = (!contract.CreatedType.IsValueType &&\r\n                                            ReflectionUtils.GetDefaultConstructor(contract.CreatedType) == null)", span="316-317"];
n134 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="contract.UnderlyingType.GetMethods(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)", span="320-320"];
n138 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="IsValidCallback(method, parameters, typeof(OnSerializingAttribute), contract.OnSerializing, ref prevAttributeType)", span="331-331"];
n139 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="contract.OnSerializing = method", span="333-333"];
n140 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="IsValidCallback(method, parameters, typeof(OnSerializedAttribute), contract.OnSerialized, ref prevAttributeType)", span="335-335"];
n141 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="contract.OnSerialized = method", span="337-337"];
n142 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="IsValidCallback(method, parameters, typeof(OnDeserializingAttribute), contract.OnDeserializing, ref prevAttributeType)", span="339-339"];
n143 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="contract.OnDeserializing = method", span="341-341"];
n144 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="IsValidCallback(method, parameters, typeof(OnDeserializedAttribute), contract.OnDeserialized, ref prevAttributeType)", span="343-343"];
n145 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="contract.OnDeserialized = method", span="345-345"];
n146 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="IsValidCallback(method, parameters, typeof(OnErrorAttribute), contract.OnError, ref prevAttributeType)", span="348-348"];
n147 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="contract.OnError = method", span="350-350"];
n124 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="containerAttribute != null", span="292-292"];
n149 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", span="76-76"];
n127 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="dataContractAttribute != null && dataContractAttribute.IsReference", span="301-301"];
n150 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="439-439"];
n151 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="59-59"];
n152 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="69-69"];
n135 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="method.ContainsGenericParameters", span="324-324"];
n148 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="289-289"];
n153 [cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0"];
n137 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="ParameterInfo[] parameters = method.GetParameters()", span="328-328"];
n136 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", label="Type prevAttributeType = null", span="327-327"];
n154 [cluster="System.Reflection.MethodBase.GetParameters()", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
n155 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="510-510"];
n156 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="360-360"];
n157 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="JsonDictionaryContract contract = new JsonDictionaryContract(objectType)", span="362-362"];
n158 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="InitializeContract(contract)", span="363-363"];
n161 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", span="49-49"];
n159 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="return contract;", span="365-365"];
n160 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="360-360"];
n162 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="373-373"];
n163 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", label="JsonArrayContract contract = new JsonArrayContract(objectType)", span="375-375"];
n164 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", label="InitializeContract(contract)", span="376-376"];
n167 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="49-49"];
n165 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", label="return contract;", span="378-378"];
n166 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="373-373"];
n168 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="386-386"];
n169 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", label="JsonPrimitiveContract contract = new JsonPrimitiveContract(objectType)", span="388-388"];
n170 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", label="InitializeContract(contract)", span="389-389"];
n173 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="38-38"];
n171 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", label="return contract;", span="391-391"];
n172 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="386-386"];
n174 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="399-399"];
n175 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", label="JsonLinqContract contract = new JsonLinqContract(objectType)", span="401-401"];
n176 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", label="InitializeContract(contract)", span="402-402"];
n179 [cluster="Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", span="16-16"];
n177 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", label="return contract;", span="404-404"];
n178 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="399-399"];
n180 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", span="413-413"];
n181 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", label="JsonISerializableContract contract = new JsonISerializableContract(objectType)", span="415-415"];
n183 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", label="ConstructorInfo constructorInfo = objectType.GetConstructor(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance, null, new [] {typeof (SerializationInfo), typeof (StreamingContext)}, null)", span="418-418"];
n182 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", label="InitializeContract(contract)", span="416-416"];
n189 [cluster="Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", span="49-49"];
n186 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", label="contract.ISerializableCreator = (args => methodCall(null, args))", span="423-423"];
n187 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", label="return contract;", span="426-426"];
n184 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", label="constructorInfo != null", span="419-419"];
n190 [cluster="System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", label="Entry System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", span="0-0"];
n185 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", label="MethodCall<object> methodCall = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall(constructorInfo)", span="421-421"];
n191 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall(System.Reflection.MethodBase)", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall(System.Reflection.MethodBase)", span="59-59"];
n193 [cluster="lambda expression", label="methodCall(null, args)", span="423-423"];
n188 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", span="413-413"];
n192 [cluster="lambda expression", label="Entry lambda expression", span="423-423"];
n194 [cluster="lambda expression", label="Exit lambda expression", span="423-423"];
n195 [cluster="Newtonsoft.Json.Utilities.MethodCall<T>.Invoke(T, params object[])", label="Entry Newtonsoft.Json.Utilities.MethodCall<T>.Invoke(T, params object[])", span="27-27"];
n196 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="435-435"];
n197 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", label="JsonStringContract contract = new JsonStringContract(objectType)", span="437-437"];
n198 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", label="InitializeContract(contract)", span="438-438"];
n201 [cluster="Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", span="41-41"];
n199 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", label="return contract;", span="440-440"];
n200 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="435-435"];
n202 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="JsonConvert.IsJsonPrimitiveType(objectType)", span="450-450"];
n203 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="return CreatePrimitiveContract(objectType);", span="451-451"];
n204 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="JsonTypeReflector.GetJsonObjectAttribute(objectType) != null", span="453-453"];
n205 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="return CreateObjectContract(objectType);", span="454-454"];
n206 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="JsonTypeReflector.GetJsonArrayAttribute(objectType) != null", span="456-456"];
n207 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="return CreateArrayContract(objectType);", span="457-457"];
n208 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="objectType.IsSubclassOf(typeof(JToken))", span="459-459"];
n209 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="return CreateLinqContract(objectType);", span="460-460"];
n210 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="bool canConvertToString = CanConvertToString(objectType)", span="462-462"];
n211 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="typeof(ISerializable).IsAssignableFrom(objectType) && !canConvertToString", span="465-465"];
n212 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="return CreateISerializableContract(objectType);", span="466-466"];
n213 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="CollectionUtils.IsDictionaryType(objectType)", span="469-469"];
n214 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="return CreateDictionaryContract(objectType);", span="470-470"];
n215 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="typeof(IEnumerable).IsAssignableFrom(objectType)", span="472-472"];
n216 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="return CreateArrayContract(objectType);", span="473-473"];
n218 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="return CreateStringContract(objectType);", span="476-476"];
n219 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="return CreateObjectContract(objectType);", span="478-478"];
n221 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitiveType(System.Type)", label="Entry Newtonsoft.Json.JsonConvert.IsJsonPrimitiveType(System.Type)", span="475-475"];
n222 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonObjectAttribute(System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonObjectAttribute(System.Type)", span="81-81"];
n223 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonArrayAttribute(System.Type)", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonArrayAttribute(System.Type)", span="86-86"];
n224 [cluster="System.Type.IsSubclassOf(System.Type)", label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0"];
n225 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="481-481"];
n217 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label=canConvertToString, span="475-475"];
n226 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
n227 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="379-379"];
n220 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="448-448"];
n228 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", label="TypeConverter converter = ConvertUtils.GetConverter(type)", span="484-484"];
n232 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", label="type == typeof(Type) || type.IsSubclassOf(typeof(Type))", span="499-499"];
n229 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", label="converter != null\r\n#if !SILVERLIGHT\r\n && !(converter is ComponentConverter)\r\n && !(converter is ReferenceConverter)\r\n#endif\r\n && converter.GetType() != typeof(TypeConverter)", span="487-492"];
n236 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="418-418"];
n230 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", label="converter.CanConvertTo(typeof(string))", span="494-494"];
n231 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", label="return true;", span="495-495"];
n237 [cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", span="0-0"];
n233 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", label="return true;", span="500-500"];
n234 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", label="return false;", span="507-507"];
n235 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="481-481"];
n238 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="!method.IsDefined(attributeType, false)", span="512-512"];
n240 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="currentCallback != null", span="515-515"];
n241 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="throw new Exception(''Invalid attribute. Both '{0}' and '{1}' in type '{2}' have '{3}'.''.FormatWith(CultureInfo.InvariantCulture, method, currentCallback, GetClrTypeFullName(method.DeclaringType), attributeType));", span="516-516"];
n242 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="prevAttributeType != null", span="518-518"];
n243 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="throw new Exception(''Invalid Callback. Method '{3}' in type '{2}' has both '{0}' and '{1}'.''.FormatWith(CultureInfo.InvariantCulture, prevAttributeType, attributeType, GetClrTypeFullName(method.DeclaringType), method));", span="519-519"];
n244 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="method.IsVirtual", span="521-521"];
n245 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="throw new Exception(''Virtual Method '{0}' of type '{1}' cannot be marked with '{2}' attribute.''.FormatWith(CultureInfo.InvariantCulture, method, GetClrTypeFullName(method.DeclaringType), attributeType));", span="522-522"];
n246 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="method.ReturnType != typeof(void)", span="524-524"];
n247 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="throw new Exception(''Serialization Callback '{1}' in type '{0}' must return void.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method));", span="525-525"];
n248 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="attributeType == typeof(OnErrorAttribute)", span="527-527"];
n249 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="parameters == null || parameters.Length != 2 || parameters[0].ParameterType != typeof(StreamingContext) || parameters[1].ParameterType != typeof(ErrorContext)", span="529-529"];
n250 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="throw new Exception(''Serialization Error Callback '{1}' in type '{0}' must have two parameters of type '{2}' and '{3}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof (StreamingContext), typeof(ErrorContext)));", span="530-530"];
n251 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="parameters == null || parameters.Length != 1 || parameters[0].ParameterType != typeof(StreamingContext)", span="534-534"];
n252 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="throw new Exception(''Serialization Callback '{1}' in type '{0}' must have a single parameter of type '{2}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext)));", span="535-535"];
n253 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="prevAttributeType = attributeType", span="538-538"];
n239 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="return false;", span="513-513"];
n256 [cluster="System.Reflection.MemberInfo.IsDefined(System.Type, bool)", label="Entry System.Reflection.MemberInfo.IsDefined(System.Type, bool)", span="0-0"];
n254 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="return true;", span="540-540"];
n255 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="510-510"];
n257 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
n258 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="543-543"];
n259 [cluster="string.FormatWith(System.IFormatProvider, params object[])", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48"];
n260 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", label="type.IsGenericTypeDefinition || !type.ContainsGenericParameters", span="545-545"];
n261 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", label="return type.FullName;", span="546-546"];
n262 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", label="return string.Format(CultureInfo.InvariantCulture, ''{0}.{1}'', new object[] { type.Namespace, type.Name });", span="548-548"];
n263 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="543-543"];
n264 [cluster="string.Format(System.IFormatProvider, string, params object[])", label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0"];
n265 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", label="List<MemberInfo> members = GetSerializableMembers(contract.UnderlyingType)", span="558-558"];
n268 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", label="JsonPropertyCollection properties = new JsonPropertyCollection(contract)", span="562-562"];
n270 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", label="JsonProperty property = CreateProperty(contract, member)", span="566-566"];
n266 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", label="members == null", span="559-559"];
n269 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", label=members, span="564-564"];
n267 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", label="throw new JsonSerializationException(''Null collection of seralizable members returned.'');", span="560-560"];
n276 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(Newtonsoft.Json.Serialization.JsonObjectContract)", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(Newtonsoft.Json.Serialization.JsonObjectContract)", span="45-45"];
n272 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", label="properties.AddProperty(property)", span="569-569"];
n273 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", label="return properties;", span="572-572"];
n271 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", label="property != null", span="568-568"];
n277 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", span="596-596"];
n278 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="65-65"];
n274 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", span="556-556"];
n275 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="48-48"];
n279 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="580-580"];
n280 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", label=DynamicCodeGeneration, span="583-583"];
n281 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", label="return new DynamicValueProvider(member);", span="584-584"];
n282 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", label="return new ReflectionValueProvider(member);", span="587-587"];
n283 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="580-580"];
n284 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", label="Entry Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", span="49-49"];
n285 [cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="46-46"];
n286 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="JsonProperty property = new JsonProperty()", span="598-598"];
n287 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="property.PropertyType = ReflectionUtils.GetMemberUnderlyingType(member)", span="599-599"];
n288 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="property.ValueProvider = CreateMemberValueProvider(member)", span="600-600"];
n289 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="property.Converter = JsonTypeReflector.GetJsonConverter(member, property.PropertyType)", span="604-604"];
n290 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(member.DeclaringType)", span="607-607"];
n293 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="dataMemberAttribute = JsonTypeReflector.GetAttribute<DataMemberAttribute>(member)", span="611-611"];
n295 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="JsonPropertyAttribute propertyAttribute = JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(member)", span="616-616"];
n296 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="bool hasIgnoreAttribute = (JsonTypeReflector.GetAttribute<JsonIgnoreAttribute>(member) != null)", span="617-617"];
n302 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="mappedName = member.Name", span="627-627"];
n309 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="property.Ignored = (hasIgnoreAttribute ||\r\n                      (contract.MemberSerialization == MemberSerialization.OptIn\r\n                       && propertyAttribute == null\r\n#if !PocketPC && !NET20\r\n                       && dataMemberAttribute == null\r\n#endif\r\n))", span="640-646"];
n317 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="property.Readable = ReflectionUtils.CanReadMemberValue(member, allowNonPublicAccess)", span="658-658"];
n318 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="property.Writable = ReflectionUtils.CanSetMemberValue(member, allowNonPublicAccess)", span="659-659"];
n319 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="property.MemberConverter = JsonTypeReflector.GetJsonConverter(member, ReflectionUtils.GetMemberUnderlyingType(member))", span="661-661"];
n320 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="DefaultValueAttribute defaultValueAttribute = JsonTypeReflector.GetAttribute<DefaultValueAttribute>(member)", span="663-663"];
n329 [cluster="Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", label="Entry Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", span="32-32"];
n303 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="property.PropertyName = ResolvePropertyName(mappedName)", span="629-629"];
n305 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="property.Required = propertyAttribute.Required", span="632-632"];
n307 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="property.Required = (dataMemberAttribute.IsRequired) ? Required.AllowNull : Required.Default", span="635-635"];
n308 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="property.Required = Required.Default", span="638-638"];
n321 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="property.DefaultValue = (defaultValueAttribute != null) ? defaultValueAttribute.Value : null", span="664-664"];
n322 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="property.NullValueHandling = (propertyAttribute != null) ? propertyAttribute._nullValueHandling : null", span="666-666"];
n323 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="property.DefaultValueHandling = (propertyAttribute != null) ? propertyAttribute._defaultValueHandling : null", span="667-667"];
n324 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="property.ReferenceLoopHandling = (propertyAttribute != null) ? propertyAttribute._referenceLoopHandling : null", span="668-668"];
n325 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="property.ObjectCreationHandling = (propertyAttribute != null) ? propertyAttribute._objectCreationHandling : null", span="669-669"];
n326 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="property.IsReference = (propertyAttribute != null) ? propertyAttribute._isReference : null", span="670-670"];
n327 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="return property;", span="672-672"];
n330 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="384-384"];
n291 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="DataMemberAttribute dataMemberAttribute", span="609-609"];
n292 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="dataContractAttribute != null", span="610-610"];
n294 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="dataMemberAttribute = null", span="613-613"];
n300 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="dataMemberAttribute != null && dataMemberAttribute.Name != null", span="623-623"];
n301 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="mappedName = dataMemberAttribute.Name", span="624-624"];
n306 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="dataMemberAttribute != null", span="634-634"];
n315 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="dataMemberAttribute != null", span="654-654"];
n298 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="propertyAttribute != null && propertyAttribute.PropertyName != null", span="620-620"];
n299 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="mappedName = propertyAttribute.PropertyName", span="621-621"];
n304 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="propertyAttribute != null", span="631-631"];
n313 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="propertyAttribute != null", span="651-651"];
n297 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="string mappedName", span="619-619"];
n331 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="680-680"];
n310 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="bool allowNonPublicAccess = false", span="648-648"];
n311 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="(DefaultMembersSearchFlags & BindingFlags.NonPublic) == BindingFlags.NonPublic", span="649-649"];
n312 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="allowNonPublicAccess = true", span="650-650"];
n314 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="allowNonPublicAccess = true", span="652-652"];
n316 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="allowNonPublicAccess = true", span="655-655"];
n332 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="495-495"];
n333 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", span="528-528"];
n328 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", span="596-596"];
n334 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", label="return propertyName;", span="682-682"];
n335 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="680-680"];
m1_347 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="BsonReader.cs", label="Assert.AreEqual(JTokenType.Integer, t.Type)", span="564-564"];
m1_261 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArraySlice()", span="408-408"];
m1_385 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.MultipleQueries()", file="BsonReader.cs", label="JArray a = new JArray(1, 2, 3, 4, 5, 6, 7, 8, 9)", span="629-629"];
m1_268 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="BsonReader.cs", label="Assert.AreEqual(2, (int)t[1])", span="464-464"];
m1_461 [cluster="System.Guid.Guid(string)", file="BsonReader.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m1_158 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="SetToken(JsonToken.PropertyName, ReadElement())", span="386-386"];
m1_159 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="return true;", span="387-387"];
m1_160 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="context.Position == lengthMinusEnd", span="390-390"];
m1_161 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="ReadByte() != 0", span="392-392"];
m1_418 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", span="690-690"];
m1_419 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="BsonReader.cs", label="JArray a = new JArray(\r\n                new JObject(\r\n                    new JProperty(''name'', ''Bad Boys''),\r\n                    new JProperty(''cast'', new JArray(\r\n                        new JObject(new JProperty(''name'', ''Will Smith''))))),\r\n                new JObject(\r\n                    new JProperty(''name'', ''Independence Day''),\r\n                    new JProperty(''cast'', new JArray(\r\n                        new JObject(new JProperty(''name'', ''Will Smith''))))),\r\n                new JObject(\r\n                    new JProperty(''name'', ''The Rock''),\r\n                    new JProperty(''cast'', new JArray(\r\n                        new JObject(new JProperty(''name'', ''Nick Cage'')))))\r\n                )", span="692-705"];
m1_420 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="BsonReader.cs", label="IList<JToken> t = a.SelectTokens(''[?(@.cast[?(@.name=='Will Smith')])].name'').ToList()", span="707-707"];
m1_421 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="BsonReader.cs", label="Assert.IsNotNull(t)", span="708-708"];
m1_422 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="BsonReader.cs", label="Assert.AreEqual(2, t.Count)", span="709-709"];
m1_423 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="BsonReader.cs", label="Assert.AreEqual(''Bad Boys'', (string)t[0])", span="710-710"];
m1_424 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="BsonReader.cs", label="Assert.AreEqual(''Independence Day'', (string)t[1])", span="711-711"];
m1_425 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NestedQuery()", span="690-690"];
m1_217 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="object value = (binaryType != BsonBinaryType.Uuid)\r\n                        ? data\r\n                        : (object)new Guid(data)", span="493-495"];
m1_219 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Undefined", span="499-499"];
m1_218 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Bytes, value)", span="497-497"];
m1_220 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Undefined)", span="500-500"];
m1_221 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Oid", span="502-502"];
m1_222 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="byte[] oid = ReadBytes(12)", span="503-503"];
m1_223 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Bytes, oid)", span="504-504"];
m1_62 [cluster="Newtonsoft.Json.Bson.BsonReader.Close()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.Close()", span="228-228"];
m1_25 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", span="120-120"];
m1_26 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", span="2302-2302"];
m1_27 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", span="131-131"];
m1_28 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", file="BsonReader.cs", label="JObject o = new JObject(\r\n                new JProperty('''', 1))", span="133-134"];
m1_29 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", file="BsonReader.cs", label="JToken t = o.SelectToken(''['']'')", span="136-136"];
m1_503 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", span="906-906"];
m1_507 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="BsonReader.cs", label="Assert.AreEqual(4, result.Count)", span="937-937"];
m1_509 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="BsonReader.cs", label="Assert.AreEqual(4, result.Count)", span="940-940"];
m1_511 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="BsonReader.cs", label="Assert.AreEqual(4, result.Count)", span="943-943"];
m1_513 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="BsonReader.cs", label="Assert.AreEqual(3, result.Count)", span="946-946"];
m1_515 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="BsonReader.cs", label="Assert.AreEqual(4, result.Count)", span="949-949"];
m1_506 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="BsonReader.cs", label="List<JToken> result = a.SelectTokens(''$.[?(@.value!=1)]'').ToList()", span="936-936"];
m1_508 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="BsonReader.cs", label="result = a.SelectTokens(''$.[?(@.value!='2000-12-05T05:07:59-10:00')]'').ToList()", span="939-939"];
m1_510 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="BsonReader.cs", label="result = a.SelectTokens(''$.[?(@.value!=null)]'').ToList()", span="942-942"];
m1_512 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="BsonReader.cs", label="result = a.SelectTokens(''$.[?(@.value!=123)]'').ToList()", span="945-945"];
m1_514 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="BsonReader.cs", label="result = a.SelectTokens(''$.[?(@.value)]'').ToList()", span="948-948"];
m1_505 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="BsonReader.cs", label="JArray a = JArray.Parse(json)", span="934-934"];
m1_504 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="BsonReader.cs", label="string json = @''[\r\n  {\r\n    ''''name'''': ''''string'''',\r\n    ''''value'''': ''''aString''''\r\n  },\r\n  {\r\n    ''''name'''': ''''number'''',\r\n    ''''value'''': 123\r\n  },\r\n  {\r\n    ''''name'''': ''''array'''',\r\n    ''''value'''': [\r\n      1,\r\n      2,\r\n      3,\r\n      4\r\n    ]\r\n  },\r\n  {\r\n    ''''name'''': ''''object'''',\r\n    ''''value'''': {\r\n      ''''1'''': 1\r\n    }\r\n  }\r\n]''", span="908-932"];
m1_516 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NotEqualsAndNonPrimativeValues()", span="906-906"];
m1_30 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyPropertyIndexer()", file="BsonReader.cs", label="Assert.AreEqual(1, (int)t)", span="137-137"];
m1_390 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", span="640-640"];
m1_391 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", file="BsonReader.cs", label="JArray a = new JArray(\r\n                new JObject(new JProperty(''hi'', 1)),\r\n                new JObject(new JProperty(''hi'', 2)),\r\n                new JObject(new JProperty(''hi'', 3)))", span="642-645"];
m1_392 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", file="BsonReader.cs", label="IList<JToken> t = a.SelectTokens(''[ ?( @.hi > 1 ) ]'').ToList()", span="647-647"];
m1_154 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="context.Type == BsonType.Array", span="378-378"];
m1_156 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="ReadType(_currentElementType)", span="381-381"];
m1_155 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="ReadElement()", span="380-380"];
m1_157 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="return true;", span="382-382"];
m1_100 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateIndexerOnObjectWithError()", file="BsonReader.cs", label="ExceptionAssert.Throws<JsonException>(() => { o.SelectToken(''[1]'', true); }, @''Index 1 not valid on JObject.'')", span="257-257"];
m1_102 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369"];
m1_312 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="BsonReader.cs", label="JObject o3 = new JObject { { ''Name'', new JObject { { ''Name'', new JArray(3) } } } }", span="518-518"];
m1_313 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="BsonReader.cs", label="JArray a = new JArray(o1, o2, o3)", span="519-519"];
m1_314 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="BsonReader.cs", label="IList<JToken> t = a.SelectTokens(''$..Name'').ToList()", span="521-521"];
m1_315 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="BsonReader.cs", label="Assert.IsNotNull(t)", span="522-522"];
m1_316 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="BsonReader.cs", label="Assert.AreEqual(4, t.Count)", span="523-523"];
m1_317 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="BsonReader.cs", label="Assert.AreEqual(1, (int)t[0])", span="524-524"];
m1_92 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.CodeWScopeScopeEnd", span="278-278"];
m1_384 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadInt32()", span="798-798"];
m1_388 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadInt64()", span="804-804"];
m1_386 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", file="BsonReader.cs", label="MovePosition(8)", span="806-806"];
m1_387 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", file="BsonReader.cs", label="return _reader.ReadInt64();", span="807-807"];
m1_389 [cluster="System.IO.BinaryReader.ReadInt64()", file="BsonReader.cs", label="Entry System.IO.BinaryReader.ReadInt64()", span="0-0"];
m1_67 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", file="BsonReader.cs", label="Assert.AreEqual(JTokenType.Integer, t.Type)", span="201-201"];
m1_308 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="BsonReader.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m1_10 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="BsonReader.cs", label="_stack = new List<ContainerContext>()", span="149-149"];
m1_9 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="BsonReader.cs", label="_reader = new BinaryReader(stream)", span="148-148"];
m1_18 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.SelectTokenAfterEmptyContainer()", file="BsonReader.cs", label="Assert.AreEqual(''no one will find me'', (string)results[0])", span="116-116"];
m1_19 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.SelectTokenAfterEmptyContainer()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.SelectTokenAfterEmptyContainer()", span="104-104"];
m1_20 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", span="120-120"];
m1_22 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", file="BsonReader.cs", label="JObject o = JObject.Parse(json)", span="123-123"];
m1_23 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", file="BsonReader.cs", label="string bookId = (string)o.SelectToken(''bookId'', true)", span="125-125"];
m1_21 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", file="BsonReader.cs", label="string json = ''{\''bookId\'':\''1000\''}''", span="122-122"];
m1_24 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyWithRequired()", file="BsonReader.cs", label="Assert.AreEqual(''1000'', bookId)", span="127-127"];
m1_98 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="throw new ArgumentOutOfRangeException();", span="287-287"];
m1_99 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", span="242-242"];
m1_101 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadInt32()", span="798-798"];
m1_426 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", span="715-715"];
m1_428 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", file="BsonReader.cs", label="JValue v = (JValue)a.SelectToken(''[1].Property2[1][0]'')", span="738-738"];
m1_427 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", file="BsonReader.cs", label="JArray a = JArray.Parse(@''[\r\n  {\r\n    ''''Property1'''': [\r\n      1,\r\n      [\r\n        [\r\n          []\r\n        ]\r\n      ]\r\n    ]\r\n  },\r\n  {\r\n    ''''Property2'''': new Constructor1(\r\n      null,\r\n      [\r\n        1\r\n      ]\r\n    )\r\n  }\r\n]'')", span="717-736"];
m1_429 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", file="BsonReader.cs", label="Assert.AreEqual(1L, v.Value)", span="739-739"];
m1_430 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.PathWithConstructor()", span="715-715"];
m1_369 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="return 0;", span="776-776"];
m1_370 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", span="758-758"];
m1_374 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs", label="int charBufferSize = Encoding.UTF8.GetMaxCharCount(MaxCharBytesSize)", span="787-787"];
m1_371 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs", label="_byteBuffer == null", span="781-781"];
m1_373 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs", label="_charBuffer == null", span="785-785"];
m1_372 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs", label="_byteBuffer = new byte[MaxCharBytesSize]", span="783-783"];
m1_375 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs", label="_charBuffer = new char[charBufferSize]", span="788-788"];
m1_323 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="int totalBytesRead = 0", span="667-667"];
m1_327 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="byteCount == 0", span="679-679"];
m1_332 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="int charCount = Encoding.UTF8.GetChars(_byteBuffer, 0, byteCount, _charBuffer, 0)", span="694-694"];
m1_334 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="int lastFullCharStop = GetLastFullCharStop(byteCount - 1)", span="699-699"];
m1_336 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="builder = new StringBuilder(length)", span="703-703"];
m1_331 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="byteCount == length", span="690-690"];
m1_337 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="int charCount = Encoding.UTF8.GetChars(_byteBuffer, 0, lastFullCharStop + 1, _charBuffer, 0)", span="706-706"];
m1_338 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="builder.Append(_charBuffer, 0, charCount)", span="707-707"];
m1_326 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="int byteCount = _reader.Read(_byteBuffer, offset, count)", span="677-677"];
m1_330 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="byteCount += offset", span="688-688"];
m1_333 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="return new string(_charBuffer, 0, charCount);", span="695-695"];
m1_335 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="builder == null", span="701-701"];
m1_339 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="lastFullCharStop < byteCount - 1", span="709-709"];
m1_324 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="int offset = 0", span="670-670"];
m1_325 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="int count = ((length - totalBytesRead) > MaxCharBytesSize - offset)\r\n                    ? MaxCharBytesSize - offset\r\n                    : length - totalBytesRead", span="673-675"];
m1_328 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="throw new EndOfStreamException(''Unable to read beyond the end of the stream.'');", span="681-681"];
m1_329 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="totalBytesRead += byteCount", span="684-684"];
m1_340 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="offset = byteCount - lastFullCharStop - 1", span="711-711"];
m1_265 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="BsonReader.cs", label="Assert.IsNotNull(t)", span="461-461"];
m1_493 [cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", file="BsonReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", span="0-0"];
m1_350 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="lookbackPos >= 0", span="729-729"];
m1_352 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="bis == 0", span="732-732"];
m1_351 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="bis = BytesInSequence(_byteBuffer[lookbackPos])", span="731-731"];
m1_353 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="lookbackPos--", span="734-734"];
m1_354 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="bis == 1", span="737-737"];
m1_184 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", file="BsonReader.cs", label="_currentContext = _stack[_stack.Count - 1]", span="435-435"];
m1_185 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.PopContext()", span="426-426"];
m1_186 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="BsonReader.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m1_187 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", file="BsonReader.cs", label="_stack.Add(newContext)", span="441-441"];
m1_188 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", file="BsonReader.cs", label="_currentContext = newContext", span="442-442"];
m1_190 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BsonReader.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_189 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", span="439-439"];
m1_191 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", file="BsonReader.cs", label="MovePosition(1)", span="447-447"];
m1_444 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", span="789-789"];
m1_446 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="BsonReader.cs", label="JObject o = new JObject(\r\n                new JProperty(''prop'',\r\n                    new JArray(\r\n                        values.Select(v => new JObject(new JProperty(''childProp'', v)))\r\n                        )\r\n                    )\r\n                )", span="809-815"];
m1_445 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="BsonReader.cs", label="IList<object> values = new List<object>\r\n            {\r\n                ''ff2dc672-6e15-4aa2-afb0-18f4f69596ad'',\r\n                new Guid(''ff2dc672-6e15-4aa2-afb0-18f4f69596ad''),\r\n                ''http://localhost'',\r\n                new Uri(''http://localhost''),\r\n                ''2000-12-05T05:07:59Z'',\r\n                new DateTime(2000, 12, 5, 5, 7, 59, DateTimeKind.Utc),\r\n#if !NET20\r\n                ''2000-12-05T05:07:59-10:00'',\r\n                new DateTimeOffset(2000, 12, 5, 5, 7, 59, -TimeSpan.FromHours(10)),\r\n#endif\r\n                ''SGVsbG8gd29ybGQ='',\r\n                Encoding.UTF8.GetBytes(''Hello world''),\r\n                ''365.23:59:59'',\r\n                new TimeSpan(365, 23, 59, 59)\r\n            }", span="791-807"];
m1_447 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="BsonReader.cs", label="IList<JToken> t = o.SelectTokens(''$.prop[?(@.childProp =='ff2dc672-6e15-4aa2-afb0-18f4f69596ad')]'').ToList()", span="817-817"];
m1_449 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="BsonReader.cs", label="t = o.SelectTokens(''$.prop[?(@.childProp =='http://localhost')]'').ToList()", span="820-820"];
m1_451 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="BsonReader.cs", label="t = o.SelectTokens(''$.prop[?(@.childProp =='2000-12-05T05:07:59Z')]'').ToList()", span="823-823"];
m1_453 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="BsonReader.cs", label="t = o.SelectTokens(''$.prop[?(@.childProp =='2000-12-05T05:07:59-10:00')]'').ToList()", span="827-827"];
m1_455 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="BsonReader.cs", label="t = o.SelectTokens(''$.prop[?(@.childProp =='SGVsbG8gd29ybGQ=')]'').ToList()", span="831-831"];
m1_457 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="BsonReader.cs", label="t = o.SelectTokens(''$.prop[?(@.childProp =='365.23:59:59')]'').ToList()", span="834-834"];
m1_448 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="BsonReader.cs", label="Assert.AreEqual(2, t.Count)", span="818-818"];
m1_450 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="BsonReader.cs", label="Assert.AreEqual(2, t.Count)", span="821-821"];
m1_452 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="BsonReader.cs", label="Assert.AreEqual(2, t.Count)", span="824-824"];
m1_454 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="BsonReader.cs", label="Assert.AreEqual(2, t.Count)", span="828-828"];
m1_456 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="BsonReader.cs", label="Assert.AreEqual(2, t.Count)", span="832-832"];
m1_458 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="BsonReader.cs", label="Assert.AreEqual(2, t.Count)", span="835-835"];
m1_459 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.QueryAgainstNonStringValues()", span="789-789"];
m1_125 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.Normal", span="329-329"];
m1_126 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="return true;", span="330-330"];
m1_127 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state when reading BSON reference: '' + _bsonReaderState);", span="334-334"];
m1_128 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state when reading BSON reference: '' + CurrentState);", span="338-338"];
m1_431 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="157-157"];
m1_79 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeScope", span="257-257"];
m1_355 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="lookbackPos--", span="743-743"];
m1_356 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="bis == start - lookbackPos", span="747-747"];
m1_360 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", span="758-758"];
m1_357 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="return start;", span="750-750"];
m1_359 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", span="725-725"];
m1_358 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="return lookbackPos;", span="754-754"];
m1_361 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="b <= SeqRange1[1]", span="760-760"];
m1_264 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="BsonReader.cs", label="List<JToken> t = a.SelectTokens(''[*]'').ToList()", span="460-460"];
m1_47 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}''.FormatWith(CultureInfo.InvariantCulture, _bsonReaderState));", span="206-206"];
m1_48 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="!success", span="209-209"];
m1_49 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="SetToken(JsonToken.None)", span="211-211"];
m1_50 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="return false;", span="212-212"];
m1_51 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="return true;", span="215-215"];
m1_310 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateScanNestResults()", file="BsonReader.cs", label="JObject o1 = new JObject { { ''Name'', 1 } }", span="516-516"];
m1_15 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.SelectTokenAfterEmptyContainer()", file="BsonReader.cs", label="JObject o = JObject.Parse(json)", span="111-111"];
m1_93 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="return result;", span="281-281"];
m1_94 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeScopeEnd", span="282-282"];
m1_95 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="SetToken(JsonToken.EndObject)", span="283-283"];
m1_96 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.Normal", span="284-284"];
m1_97 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="return true;", span="285-285"];
m1_473 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", span="839-839"];
m1_475 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="BsonReader.cs", label="string name = (string)o.SelectToken(''Manufacturers[0].Name'')", span="872-872"];
m1_476 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="BsonReader.cs", label="decimal productPrice = (decimal)o.SelectToken(''Manufacturers[0].Products[0].Price'')", span="875-875"];
m1_477 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="BsonReader.cs", label="string productName = (string)o.SelectToken(''Manufacturers[1].Products[0].Name'')", span="878-878"];
m1_481 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="BsonReader.cs", label="IList<string> storeNames = o.SelectToken(''Stores'').Select(s => (string)s).ToList()", span="885-885"];
m1_474 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="BsonReader.cs", label="JObject o = JObject.Parse(@''{\r\n        ''''Stores'''': [\r\n          ''''Lambton Quay'''',\r\n          ''''Willis Street''''\r\n        ],\r\n        ''''Manufacturers'''': [\r\n          {\r\n            ''''Name'''': ''''Acme Co'''',\r\n            ''''Products'''': [\r\n              {\r\n                ''''Name'''': ''''Anvil'''',\r\n                ''''Price'''': 50\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            ''''Name'''': ''''Contoso'''',\r\n            ''''Products'''': [\r\n              {\r\n                ''''Name'''': ''''Elbow Grease'''',\r\n                ''''Price'''': 99.95\r\n              },\r\n              {\r\n                ''''Name'''': ''''Headlight Fluid'''',\r\n                ''''Price'''': 4\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }'')", span="841-870"];
m1_478 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="BsonReader.cs", label="Assert.AreEqual(''Acme Co'', name)", span="881-881"];
m1_479 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="BsonReader.cs", label="Assert.AreEqual(50m, productPrice)", span="882-882"];
m1_480 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="BsonReader.cs", label="Assert.AreEqual(''Elbow Grease'', productName)", span="883-883"];
m1_482 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="BsonReader.cs", label="IList<string> firstProductNames = o[''Manufacturers''].Select(m => (string)m.SelectToken(''Products[1].Name'')).ToList()", span="889-889"];
m1_484 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="BsonReader.cs", label="Assert.AreEqual(2, storeNames.Count)", span="896-896"];
m1_485 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="BsonReader.cs", label="Assert.AreEqual(''Lambton Quay'', storeNames[0])", span="897-897"];
m1_486 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="BsonReader.cs", label="Assert.AreEqual(''Willis Street'', storeNames[1])", span="898-898"];
m1_483 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="BsonReader.cs", label="decimal totalPrice = o[''Manufacturers''].Sum(m => (decimal)m.SelectToken(''Products[0].Price''))", span="893-893"];
m1_487 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="BsonReader.cs", label="Assert.AreEqual(2, firstProductNames.Count)", span="899-899"];
m1_488 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="BsonReader.cs", label="Assert.AreEqual(null, firstProductNames[0])", span="900-900"];
m1_489 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="BsonReader.cs", label="Assert.AreEqual(''Headlight Fluid'', firstProductNames[1])", span="901-901"];
m1_490 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="BsonReader.cs", label="Assert.AreEqual(149.95m, totalPrice)", span="902-902"];
m1_491 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.Example()", span="839-839"];
m1_32 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.Read()", span="182-182"];
m1_283 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="count < MaxCharBytesSize && (b = _reader.ReadByte()) > 0", span="593-593"];
m1_286 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="totalBytesRead += byteCount", span="598-598"];
m1_289 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="MovePosition(totalBytesRead + 1)", span="606-606"];
m1_290 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="return new string(_charBuffer, 0, length);", span="607-607"];
m1_291 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="int lastFullCharStop = GetLastFullCharStop(count - 1)", span="612-612"];
m1_284 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="_byteBuffer[count++] = b", span="595-595"];
m1_285 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="int byteCount = count - offset", span="597-597"];
m1_287 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="count < MaxCharBytesSize && builder == null", span="600-600"];
m1_288 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="int length = Encoding.UTF8.GetChars(_byteBuffer, 0, byteCount, _charBuffer, 0)", span="604-604"];
m1_292 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="int charCount = Encoding.UTF8.GetChars(_byteBuffer, 0, lastFullCharStop + 1, _charBuffer, 0)", span="614-614"];
m1_224 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Boolean", span="506-506"];
m1_225 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="bool b = Convert.ToBoolean(ReadByte())", span="507-507"];
m1_228 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="long ticks = ReadInt64()", span="511-511"];
m1_229 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="DateTime utcDateTime = DateTimeUtils.ConvertJavaScriptTicksToDateTime(ticks)", span="512-512"];
m1_230 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="DateTime dateTime", span="514-514"];
m1_231 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label=DateTimeKindHandling, span="515-515"];
m1_233 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="dateTime = DateTime.SpecifyKind(utcDateTime, DateTimeKind.Unspecified)", span="518-518"];
m1_234 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="DateTimeKind.Local", span="520-520"];
m1_236 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="dateTime = utcDateTime", span="524-524"];
m1_237 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Date, dateTime)", span="528-528"];
m1_239 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Null)", span="531-531"];
m1_241 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="string expression = ReadString()", span="534-534"];
m1_242 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="string modifiers = ReadString()", span="535-535"];
m1_244 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.String, regex)", span="538-538"];
m1_245 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Reference", span="540-540"];
m1_246 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.StartObject)", span="541-541"];
m1_247 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.ReferenceStart", span="542-542"];
m1_248 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Code", span="544-544"];
m1_249 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.String, ReadLengthString())", span="545-545"];
m1_250 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.CodeWScope", span="547-547"];
m1_251 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.StartObject)", span="548-548"];
m1_252 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.CodeWScopeStart", span="549-549"];
m1_253 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Integer", span="551-551"];
m1_255 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.TimeStamp", span="554-554"];
m1_256 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Long", span="555-555"];
m1_257 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Integer, ReadInt64())", span="556-556"];
m1_258 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="throw new ArgumentOutOfRangeException(nameof(type), ''Unexpected BsonType value: '' + type);", span="559-559"];
m1_259 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", span="451-451"];
m1_260 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadDouble()", span="792-792"];
m1_226 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Boolean, b)", span="508-508"];
m1_227 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Date", span="510-510"];
m1_232 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="DateTimeKind.Unspecified", span="517-517"];
m1_235 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="dateTime = utcDateTime.ToLocalTime()", span="521-521"];
m1_238 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Null", span="530-530"];
m1_240 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Regex", span="533-533"];
m1_243 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="string regex = @''/'' + expression + @''/'' + modifiers", span="537-537"];
m1_254 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Integer, (long)ReadInt32())", span="552-552"];
m1_462 [cluster="System.Uri.Uri(string)", file="BsonReader.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m1_71 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="SetToken(JsonToken.PropertyName, ''$code'')", span="247-247"];
m1_72 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.CodeWScopeCode", span="248-248"];
m1_73 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="return true;", span="249-249"];
m1_74 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeCode", span="250-250"];
m1_75 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="ReadInt32()", span="252-252"];
m1_76 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="SetToken(JsonToken.String, ReadLengthString())", span="254-254"];
m1_77 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.CodeWScopeScope", span="255-255"];
m1_78 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="return true;", span="256-256"];
m1_309 [cluster="System.Text.StringBuilder.Append(char[], int, int)", file="BsonReader.cs", label="Entry System.Text.StringBuilder.Append(char[], int, int)", span="0-0"];
m1_319 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="length == 0", span="658-658"];
m1_320 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="return string.Empty;", span="660-660"];
m1_318 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.GetString(int)", span="656-656"];
m1_311 [cluster="System.Text.StringBuilder.ToString()", file="BsonReader.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m1_321 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="EnsureBuffers()", span="663-663"];
m1_263 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="BsonReader.cs", label="JArray a = new JArray(1, 2, 3, 4)", span="458-458"];
m1_0 [cluster="Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", span="80-80"];
m1_4 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125"];
m1_5 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", span="134-134"];
m1_6 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", span="134-134"];
m1_7 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", span="145-145"];
m1_3 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125"];
m1_2 [cluster="Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", span="80-80"];
m1_1 [cluster="Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="Type = type", span="82-82"];
m1_8 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="BsonReader.cs", label="ValidationUtils.ArgumentNotNull(stream, nameof(stream))", span="147-147"];
m1_293 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="builder == null", span="616-616"];
m1_267 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="BsonReader.cs", label="Assert.AreEqual(1, (int)t[0])", span="463-463"];
m1_281 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="int count = offset", span="591-591"];
m1_393 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQuery()", file="BsonReader.cs", label="Assert.IsNotNull(t)", span="648-648"];
m1_210 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.StartArray)", span="482-482"];
m1_211 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="ContainerContext newContext = new ContainerContext(BsonType.Array)", span="484-484"];
m1_212 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="PushContext(newContext)", span="485-485"];
m1_213 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="newContext.Length = ReadInt32()", span="486-486"];
m1_205 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.StartObject)", span="473-473"];
m1_207 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="PushContext(newContext)", span="476-476"];
m1_208 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="newContext.Length = ReadInt32()", span="477-477"];
m1_206 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="ContainerContext newContext = new ContainerContext(BsonType.Object)", span="475-475"];
m1_209 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Array", span="480-480"];
m1_468 [cluster="JArray.cstr", file="BsonReader.cs", label="Entry JArray.cstr", span=""];
m1_61 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateDollarTypeString()", span="184-184"];
m1_80 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="CurrentState == State.PostValue", span="258-258"];
m1_81 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="SetToken(JsonToken.PropertyName, ''$scope'')", span="260-260"];
m1_82 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="return true;", span="261-261"];
m1_83 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="SetToken(JsonToken.StartObject)", span="265-265"];
m1_84 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.CodeWScopeScopeObject", span="266-266"];
m1_85 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="ContainerContext newContext = new ContainerContext(BsonType.Object)", span="268-268"];
m1_86 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="PushContext(newContext)", span="269-269"];
m1_363 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", file="BsonReader.cs", label="JArray a = new JArray(\r\n                new JObject(new JProperty(''hi'', ''ho'')),\r\n                new JObject(new JProperty(''hi'', ''ha'')))", span="591-593"];
m1_365 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", file="BsonReader.cs", label="Assert.IsNotNull(t)", span="596-596"];
m1_367 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", file="BsonReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', ''ha'')), t[0]))", span="598-598"];
m1_362 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", span="589-589"];
m1_364 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", file="BsonReader.cs", label="IList<JToken> t = a.SelectTokens(''[ ?( @.['hi'] == 'ha' ) ]'').ToList()", span="595-595"];
m1_366 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", file="BsonReader.cs", label="Assert.AreEqual(1, t.Count)", span="597-597"];
m1_368 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsQuery()", span="589-589"];
m1_432 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", span="743-743"];
m1_436 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="BsonReader.cs", label="Assert.AreEqual(''Sort system'', (string)tokens[i++][''text''])", span="779-779"];
m1_437 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="BsonReader.cs", label="Assert.AreEqual(''TSP-1'', (string)tokens[i++][''text''])", span="780-780"];
m1_438 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="BsonReader.cs", label="Assert.AreEqual(''Passenger 15'', (string)tokens[i++][''text''])", span="781-781"];
m1_439 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="BsonReader.cs", label="Assert.AreEqual(''Yard 11'', (string)tokens[i++][''text''])", span="782-782"];
m1_440 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="BsonReader.cs", label="Assert.AreEqual(''Sort yard 12'', (string)tokens[i++][''text''])", span="783-783"];
m1_441 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="BsonReader.cs", label="Assert.AreEqual(''Yard 13'', (string)tokens[i++][''text''])", span="784-784"];
m1_442 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="BsonReader.cs", label="Assert.AreEqual(6, tokens.Count)", span="785-785"];
m1_434 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="BsonReader.cs", label="IList<JToken> tokens = o.SelectTokens(''$..*[?(@.text)]'').ToList()", span="777-777"];
m1_433 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="BsonReader.cs", label="JObject o = JObject.Parse(@''{\r\n    ''''station'''': 92000041000001, \r\n    ''''containers'''': [\r\n        {\r\n            ''''id'''': 1,\r\n            ''''text'''': ''''Sort system'''',\r\n            ''''containers'''': [\r\n                {\r\n                    ''''id'''': ''''2'''',\r\n                    ''''text'''': ''''Yard 11''''\r\n                },\r\n                {\r\n                    ''''id'''': ''''92000020100006'''',\r\n                    ''''text'''': ''''Sort yard 12''''\r\n                },\r\n                {\r\n                    ''''id'''': ''''92000020100005'''',\r\n                    ''''text'''': ''''Yard 13''''\r\n                } \r\n            ]\r\n        }, \r\n        {\r\n            ''''id'''': ''''92000020100011'''',\r\n            ''''text'''': ''''TSP-1''''\r\n        }, \r\n        {\r\n            ''''id'''':''''92000020100007'''',\r\n            ''''text'''': ''''Passenger 15''''\r\n        }\r\n    ]\r\n}'')", span="745-775"];
m1_435 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="BsonReader.cs", label="int i = 0", span="778-778"];
m1_443 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.WildcardWithProperty()", span="743-743"];
m1_14 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.SelectTokenAfterEmptyContainer()", file="BsonReader.cs", label="string json = @''{\r\n    'cont': [],\r\n    'test': 'no one will find me'\r\n}''", span="106-109"];
m1_33 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="bool success", span="186-186"];
m1_170 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.ConstructorStart", span="411-411"];
m1_171 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.Constructor", span="413-413"];
m1_172 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.Error", span="415-415"];
m1_173 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.Finished", span="417-417"];
m1_262 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", span="456-456"];
m1_270 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="BsonReader.cs", label="Assert.AreEqual(4, (int)t[3])", span="466-466"];
m1_271 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardArray()", span="456-456"];
m1_274 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="BsonReader.cs", label="IEnumerable<JToken> t = a.SelectTokens(''[1,2,0]'')", span="474-474"];
m1_272 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", span="470-470"];
m1_273 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="BsonReader.cs", label="JArray a = new JArray(1, 2, 3, 4)", span="472-472"];
m1_275 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="BsonReader.cs", label="Assert.IsNotNull(t)", span="475-475"];
m1_63 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", span="194-194"];
m1_66 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSingleProperty()", file="BsonReader.cs", label="Assert.IsNotNull(t)", span="200-200"];
m1_42 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeCode", span="199-199"];
m1_43 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeScope", span="200-200"];
m1_44 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeScopeObject", span="201-201"];
m1_45 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeScopeEnd", span="202-202"];
m1_46 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="success = ReadCodeWScope()", span="203-203"];
m1_381 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", file="BsonReader.cs", label="Assert.AreEqual(2, (int)t[0])", span="622-622"];
m1_282 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="byte b", span="592-592"];
m1_103 [cluster="lambda expression", file="BsonReader.cs", label="Entry lambda expression", span="257-257"];
m1_68 [cluster="System.IO.BinaryReader.Close()", file="BsonReader.cs", label="Entry System.IO.BinaryReader.Close()", span="0-0"];
m1_69 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label=_bsonReaderState, span="244-244"];
m1_294 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="builder = new StringBuilder(MaxCharBytesSize * 2)", span="618-618"];
m1_297 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="offset = byteCount - lastFullCharStop - 1", span="625-625"];
m1_302 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="offset = 0", span="638-638"];
m1_304 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", span="779-779"];
m1_301 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="return builder.ToString();", span="635-635"];
m1_300 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="MovePosition(totalBytesRead + 1)", span="634-634"];
m1_303 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadString()", span="580-580"];
m1_305 [cluster="System.Text.Encoding.GetChars(byte[], int, int, char[], int)", file="BsonReader.cs", label="Entry System.Text.Encoding.GetChars(byte[], int, int, char[], int)", span="0-0"];
m1_295 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="builder.Append(_charBuffer, 0, charCount)", span="621-621"];
m1_296 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="lastFullCharStop < byteCount - 1", span="623-623"];
m1_298 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="Array.Copy(_byteBuffer, lastFullCharStop + 1, _byteBuffer, 0, offset)", span="627-627"];
m1_299 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="count < MaxCharBytesSize", span="632-632"];
m1_306 [cluster="string.String(char[], int, int)", file="BsonReader.cs", label="Entry string.String(char[], int, int)", span="0-0"];
m1_377 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.NoPathQuery()", file="BsonReader.cs", label="JArray a = new JArray(1, 2, 3)", span="617-617"];
m1_398 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", span="821-821"];
m1_399 [cluster="System.IO.BinaryReader.ReadBytes(int)", file="BsonReader.cs", label="Entry System.IO.BinaryReader.ReadBytes(int)", span="0-0"];
m1_403 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="BsonReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 2)), t[0]))", span="666-666"];
m1_404 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="BsonReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 3)), t[1]))", span="667-667"];
m1_400 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="BsonReader.cs", label="Newtonsoft.Json.Bson.BsonReader.ContainerContext", span=""];
m1_402 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="BsonReader.cs", label="Assert.AreEqual(2, t.Count)", span="665-665"];
m1_401 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="BsonReader.cs", label="Newtonsoft.Json.Bson.BsonReader", span=""];
m1_405 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterQueryBigInteger()", span="656-656"];
m1_346 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="BsonReader.cs", label="t = o.SelectToken(''Blah[2]'')", span="563-563"];
m1_322 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="StringBuilder builder = null", span="665-665"];
m1_57 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadReference()", span="291-291"];
m1_58 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", span="242-242"];
m1_59 [cluster="string.FormatWith(System.IFormatProvider, object)", file="BsonReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m1_60 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="BsonReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m1_179 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", file="BsonReader.cs", label="ExceptionAssert.Throws<JsonException>(() => { a.SelectToken(''['Missing','Missing2']'', true); }, ''Properties 'Missing', 'Missing2' not valid on JArray.'')", span="360-360"];
m1_181 [cluster="lambda expression", file="BsonReader.cs", label="Entry lambda expression", span="360-360"];
m1_182 [cluster="lambda expression", file="BsonReader.cs", label="a.SelectToken(''['Missing','Missing2']'', true)", span="360-360"];
m1_183 [cluster="lambda expression", file="BsonReader.cs", label="Exit lambda expression", span="360-360"];
m1_266 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="205-205"];
m1_269 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="BsonReader.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m1_165 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="MovePosition(context.Length)", span="400-400"];
m1_166 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="JsonToken endToken = (context.Type == BsonType.Object) ? JsonToken.EndObject : JsonToken.EndArray", span="403-403"];
m1_167 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="SetToken(endToken)", span="404-404"];
m1_168 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="return true;", span="405-405"];
m1_169 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="throw JsonReaderException.Create(this, ''Read past end of current container context.'');", span="409-409"];
m1_343 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="BsonReader.cs", label="JToken t = o.SelectToken(''Blah'')", span="559-559"];
m1_344 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="BsonReader.cs", label="Assert.IsNotNull(t)", span="560-560"];
m1_341 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", span="554-554"];
m1_342 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="BsonReader.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', new[] { 1, 2, 3 }))", span="556-557"];
m1_345 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSinglePropertyReturningArray()", file="BsonReader.cs", label="Assert.AreEqual(JTokenType.Array, t.Type)", span="561-561"];
m1_146 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.ObjectStart", span="365-365"];
m1_148 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.PostValue", span="367-367"];
m1_147 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.ArrayStart", span="366-366"];
m1_149 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="ContainerContext context = _currentContext", span="368-368"];
m1_348 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="int lookbackPos = start", span="727-727"];
m1_349 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="int bis = 0", span="728-728"];
m1_395 [cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", span="816-816"];
m1_396 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", file="BsonReader.cs", label="MovePosition(count)", span="823-823"];
m1_394 [cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", file="BsonReader.cs", label="_currentContext.Position += count", span="818-818"];
m1_397 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", file="BsonReader.cs", label="return _reader.ReadBytes(count);", span="824-824"];
m1_150 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="context == null", span="369-369"];
m1_469 [cluster="Unk.Select", file="BsonReader.cs", label="Entry Unk.Select", span=""];
m1_13 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", span="145-145"];
m1_17 [cluster="System.Collections.Generic.List<T>.List()", file="BsonReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_16 [cluster="System.IO.BinaryReader.BinaryReader(System.IO.Stream)", file="BsonReader.cs", label="Entry System.IO.BinaryReader.BinaryReader(System.IO.Stream)", span="0-0"];
m1_52 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label=EndOfStreamException, span="217-217"];
m1_53 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="SetToken(JsonToken.None)", span="219-219"];
m1_54 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="return false;", span="220-220"];
m1_55 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.Read()", span="182-182"];
m1_56 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadNormal()", span="342-342"];
m1_87 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="newContext.Length = ReadInt32()", span="270-270"];
m1_88 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", color=green, community=0, file="BsonReader.cs", label="return true;", prediction=0, span="272-272"];
m1_89 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", color=green, community=0, file="BsonReader.cs", label="BsonReaderState.CodeWScopeScopeObject", prediction=1, span="274-274"];
m1_90 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="bool result = ReadNormal()", span="275-275"];
m1_91 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="result && TokenType == JsonToken.EndObject", span="276-276"];
m1_34 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label=_bsonReaderState, span="188-188"];
m1_139 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="return true;", span="355-355"];
m1_140 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.Complete", span="357-357"];
m1_141 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.Closed", span="358-358"];
m1_142 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="return false;", span="359-359"];
m1_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="BsonReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m1_12 [cluster="Unk.AreEqual", file="BsonReader.cs", label="Entry Unk.AreEqual", span=""];
m1_180 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", span="356-356"];
m1_35 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", span="141-141"];
m1_37 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", file="BsonReader.cs", label="JToken t = o.SelectToken('''')", span="146-146"];
m1_41 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", span="141-141"];
m1_36 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", file="BsonReader.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="143-144"];
m1_38 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", file="BsonReader.cs", label="Assert.AreEqual(o, t)", span="147-147"];
m1_39 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", file="BsonReader.cs", label="t = o.SelectToken(''['']'')", span="149-149"];
m1_40 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateEmptyString()", file="BsonReader.cs", label="Assert.AreEqual(null, t)", span="150-150"];
m1_408 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", span="672-672"];
m1_409 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="BsonReader.cs", label="JArray a = new JArray(\r\n                new JObject(new JProperty(''hi'', 1)),\r\n                new JObject(new JProperty(''hi'', 2)),\r\n                new JObject(new JProperty(''hi'', 2.0)),\r\n                new JObject(new JProperty(''hi'', 3)))", span="674-678"];
m1_413 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="BsonReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 1)), t[0]))", span="683-683"];
m1_414 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="BsonReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 2)), t[1]))", span="684-684"];
m1_415 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="BsonReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 2.0)), t[2]))", span="685-685"];
m1_416 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="BsonReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''hi'', 3)), t[3]))", span="686-686"];
m1_410 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="BsonReader.cs", label="IList<JToken> t = a.SelectTokens(''[ ?( @.hi >= 1 ) ]'').ToList()", span="680-680"];
m1_412 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="BsonReader.cs", label="Assert.AreEqual(4, t.Count)", span="682-682"];
m1_411 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="BsonReader.cs", label="Assert.IsNotNull(t)", span="681-681"];
m1_417 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.GreaterOrEqualQuery()", span="672-672"];
m1_31 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadString()", span="580-580"];
m1_131 [cluster="lambda expression", file="BsonReader.cs", label="Exit lambda expression", span="292-292"];
m1_132 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", span="296-296"];
m1_143 [cluster="lambda expression", file="BsonReader.cs", label="Entry lambda expression", span="308-308"];
m1_174 [cluster="lambda expression", file="BsonReader.cs", label="Entry lambda expression", span="352-352"];
m1_133 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", file="BsonReader.cs", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="298-298"];
m1_134 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", file="BsonReader.cs", label="ExceptionAssert.Throws<JsonException>(() => { a.SelectToken(''BlahBlah'', true); }, @''Property 'BlahBlah' not valid on JArray.'')", span="300-300"];
m1_135 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArrayWithError()", span="296-296"];
m1_136 [cluster="lambda expression", file="BsonReader.cs", label="Entry lambda expression", span="300-300"];
m1_137 [cluster="lambda expression", file="BsonReader.cs", label="a.SelectToken(''BlahBlah'', true)", span="300-300"];
m1_138 [cluster="lambda expression", file="BsonReader.cs", label="Exit lambda expression", span="300-300"];
m1_144 [cluster="lambda expression", file="BsonReader.cs", label="a.SelectToken(''[9,10]'', true)", span="308-308"];
m1_145 [cluster="lambda expression", file="BsonReader.cs", label="Exit lambda expression", span="308-308"];
m1_152 [cluster="lambda expression", file="BsonReader.cs", label="c.SelectToken(''[1]'', true)", span="316-316"];
m1_153 [cluster="lambda expression", file="BsonReader.cs", label="Exit lambda expression", span="316-316"];
m1_151 [cluster="lambda expression", file="BsonReader.cs", label="Entry lambda expression", span="316-316"];
m1_162 [cluster="lambda expression", file="BsonReader.cs", label="Entry lambda expression", span="333-333"];
m1_163 [cluster="lambda expression", file="BsonReader.cs", label="o.SelectToken(''Missing'', true)", span="333-333"];
m1_164 [cluster="lambda expression", file="BsonReader.cs", label="Exit lambda expression", span="333-333"];
m1_175 [cluster="lambda expression", file="BsonReader.cs", label="o.SelectToken(''['Missing','Missing2']'', true)", span="352-352"];
m1_176 [cluster="lambda expression", file="BsonReader.cs", label="Exit lambda expression", span="352-352"];
m1_70 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeStart", span="246-246"];
m1_105 [cluster="lambda expression", file="BsonReader.cs", label="Exit lambda expression", span="257-257"];
m1_106 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", span="261-261"];
m1_110 [cluster="lambda expression", file="BsonReader.cs", label="Entry lambda expression", span="266-266"];
m1_118 [cluster="lambda expression", file="BsonReader.cs", label="o.SelectToken(''[:]'', true)", span="275-275"];
m1_107 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", file="BsonReader.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="263-264"];
m1_108 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", file="BsonReader.cs", label="ExceptionAssert.Throws<JsonException>(() => { o.SelectToken(''[*]'', true); }, @''Index * not valid on JObject.'')", span="266-266"];
m1_109 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateWildcardIndexOnObjectWithError()", span="261-261"];
m1_111 [cluster="lambda expression", file="BsonReader.cs", label="o.SelectToken(''[*]'', true)", span="266-266"];
m1_112 [cluster="lambda expression", file="BsonReader.cs", label="Exit lambda expression", span="266-266"];
m1_114 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", file="BsonReader.cs", label="JObject o = new JObject(\r\n                new JProperty(''Blah'', 1))", span="272-273"];
m1_113 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", span="270-270"];
m1_115 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", file="BsonReader.cs", label="ExceptionAssert.Throws<JsonException>(() => { o.SelectToken(''[:]'', true); }, @''Array slice is not valid on JObject.'')", span="275-275"];
m1_117 [cluster="lambda expression", file="BsonReader.cs", label="Entry lambda expression", span="275-275"];
m1_116 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateSliceOnObjectWithError()", span="270-270"];
m1_119 [cluster="lambda expression", file="BsonReader.cs", label="Exit lambda expression", span="275-275"];
m1_120 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", span="279-279"];
m1_123 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", file="BsonReader.cs", label="Assert.IsNull(t)", span="284-284"];
m1_121 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", file="BsonReader.cs", label="JArray a = new JArray(1, 2, 3, 4, 5)", span="281-281"];
m1_122 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", file="BsonReader.cs", label="JToken t = a.SelectToken(''BlahBlah'')", span="283-283"];
m1_124 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluatePropertyOnArray()", span="279-279"];
m1_129 [cluster="lambda expression", file="BsonReader.cs", label="Entry lambda expression", span="292-292"];
m1_464 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="BsonReader.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m1_276 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="BsonReader.cs", label="Assert.AreEqual(3, t.Count())", span="476-476"];
m1_277 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="BsonReader.cs", label="Assert.AreEqual(2, (int)t.ElementAt(0))", span="477-477"];
m1_278 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="BsonReader.cs", label="Assert.AreEqual(3, (int)t.ElementAt(1))", span="478-478"];
m1_279 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="BsonReader.cs", label="Assert.AreEqual(1, (int)t.ElementAt(2))", span="479-479"];
m1_280 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateArrayMultipleIndexes()", span="470-470"];
m1_376 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", span="779-779"];
m1_380 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadDouble()", span="792-792"];
m1_382 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", file="BsonReader.cs", label="MovePosition(4)", span="800-800"];
m1_378 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", file="BsonReader.cs", label="MovePosition(8)", span="794-794"];
m1_379 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", file="BsonReader.cs", label="return _reader.ReadDouble();", span="795-795"];
m1_383 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", file="BsonReader.cs", label="return _reader.ReadInt32();", span="801-801"];
m1_202 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Symbol", span="468-468"];
m1_471 [cluster="lambda expression", file="BsonReader.cs", label="new JObject(new JProperty(''childProp'', v))", span="812-812"];
m1_130 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", span="821-821"];
m1_498 [cluster="lambda expression", file="BsonReader.cs", label="(string)m.SelectToken(''Products[1].Name'')", span="889-889"];
m1_501 [cluster="lambda expression", file="BsonReader.cs", label="(decimal)m.SelectToken(''Products[0].Price'')", span="893-893"];
m1_104 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="BsonReader.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m1_470 [cluster="lambda expression", file="BsonReader.cs", label="Entry lambda expression", span="812-812"];
m1_472 [cluster="lambda expression", file="BsonReader.cs", label="Exit lambda expression", span="812-812"];
m1_494 [cluster="lambda expression", file="BsonReader.cs", label="Entry lambda expression", span="885-885"];
m1_497 [cluster="lambda expression", file="BsonReader.cs", label="Entry lambda expression", span="889-889"];
m1_499 [cluster="lambda expression", file="BsonReader.cs", label="Exit lambda expression", span="889-889"];
m1_500 [cluster="lambda expression", file="BsonReader.cs", label="Entry lambda expression", span="893-893"];
m1_502 [cluster="lambda expression", file="BsonReader.cs", label="Exit lambda expression", span="893-893"];
m1_496 [cluster="lambda expression", file="BsonReader.cs", label="Exit lambda expression", span="885-885"];
m1_495 [cluster="lambda expression", file="BsonReader.cs", label="(string)s", span="885-885"];
m1_194 [cluster="System.IO.BinaryReader.ReadByte()", file="BsonReader.cs", label="Entry System.IO.BinaryReader.ReadByte()", span="0-0"];
m1_197 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="double d = ReadDouble()", span="456-456"];
m1_200 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Float, d)", span="464-464"];
m1_215 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonBinaryType binaryType", span="490-490"];
m1_203 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.String, ReadLengthString())", span="469-469"];
m1_193 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadByte()", span="445-445"];
m1_195 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label=type, span="453-453"];
m1_196 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Number", span="455-455"];
m1_198 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="_floatParseHandling == FloatParseHandling.Decimal", span="458-458"];
m1_199 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Float, Convert.ToDecimal(d, CultureInfo.InvariantCulture))", span="460-460"];
m1_201 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.String", span="467-467"];
m1_214 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Binary", span="489-489"];
m1_216 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="byte[] data = ReadBinary(out binaryType)", span="491-491"];
m1_204 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Object", span="471-471"];
m1_192 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", file="BsonReader.cs", label="return _reader.ReadByte();", span="448-448"];
m1_307 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="155-155"];
m1_467 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="BsonReader.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m1_406 [cluster="JProperty.cstr", file="BsonReader.cs", label="Entry JProperty.cstr", span=""];
m1_177 [cluster="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EvaluateMultiPropertyIndexOnArrayWithError()", span="356-356"];
m1_460 [cluster="System.Collections.Generic.List<T>.List()", file="BsonReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_465 [cluster="System.TimeSpan.FromHours(double)", file="BsonReader.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m1_407 [cluster="BigInteger.cstr", file="BsonReader.cs", label="Entry BigInteger.cstr", span=""];
m1_178 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadByte()", span="445-445"];
m1_463 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="BsonReader.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m1_466 [cluster="System.Text.Encoding.GetBytes(string)", file="BsonReader.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m1_520 [file="BsonReader.cs", label=a, span=""];
m1_517 [file="BsonReader.cs", label=o, span=""];
m1_518 [file="BsonReader.cs", label=o, span=""];
m1_519 [file="BsonReader.cs", label=o, span=""];
m1_524 [file="BsonReader.cs", label=o, span=""];
m1_525 [file="BsonReader.cs", label=o, span=""];
m1_521 [file="BsonReader.cs", label=a, span=""];
m1_522 [file="BsonReader.cs", label=a, span=""];
m1_526 [file="BsonReader.cs", label=a, span=""];
m1_527 [file="BsonReader.cs", label=a, span=""];
m1_528 [file="BsonReader.cs", label=a, span=""];
m1_523 [file="BsonReader.cs", label=c, span=""];
m2_71 [cluster="System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)", file="CollectionUtils.cs", label="Entry System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)", span="0-0"];
m2_54 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", span="160-160"];
m2_55 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="CollectionUtils.cs", label="list.ContainsValue(value, comparer)", span="162-162"];
m2_57 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="CollectionUtils.cs", label="list.Add(value)", span="167-167"];
m2_56 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="CollectionUtils.cs", label="return false;", span="164-164"];
m2_58 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="CollectionUtils.cs", label="return true;", span="168-168"];
m2_59 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", span="160-160"];
m2_34 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", span="121-121"];
m2_35 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", file="CollectionUtils.cs", label="Type genericEnumerable = typeof(IEnumerable<>).MakeGenericType(collectionItemType)", span="123-123"];
m2_37 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", file="CollectionUtils.cs", label="collectionType.GetConstructors(BindingFlags.Public | BindingFlags.Instance)", span="126-126"];
m2_44 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", file="CollectionUtils.cs", label="parameterType.IsAssignableFrom(constructorArgumentType)", span="144-144"];
m2_36 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", file="CollectionUtils.cs", label="ConstructorInfo match = null", span="124-124"];
m2_41 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", file="CollectionUtils.cs", label="genericEnumerable == parameterType", span="134-134"];
m2_43 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", file="CollectionUtils.cs", label="match == null", span="142-142"];
m2_46 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", file="CollectionUtils.cs", label="return match;", span="152-152"];
m2_38 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", file="CollectionUtils.cs", label="IList<ParameterInfo> parameters = constructor.GetParameters()", span="128-128"];
m2_42 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", file="CollectionUtils.cs", label="match = constructor", span="137-137"];
m2_45 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", file="CollectionUtils.cs", label="match = constructor", span="146-146"];
m2_39 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", file="CollectionUtils.cs", label="parameters.Count == 1", span="130-130"];
m2_40 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", file="CollectionUtils.cs", label="Type parameterType = parameters[0].ParameterType", span="132-132"];
m2_47 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", span="121-121"];
m2_88 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", span="225-225"];
m2_89 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", file="CollectionUtils.cs", label="int i = 0", span="227-227"];
m2_90 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", file="CollectionUtils.cs", label="i < list.Count", span="227-227"];
m2_91 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", file="CollectionUtils.cs", label="comparer.Equals(value, list[i])", span="229-229"];
m2_93 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", file="CollectionUtils.cs", label="i++", span="227-227"];
m2_94 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", file="CollectionUtils.cs", label="return false;", span="234-234"];
m2_92 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", file="CollectionUtils.cs", label="return true;", span="231-231"];
m2_95 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", span="225-225"];
m2_33 [cluster="System.Type.MakeGenericType(params System.Type[])", file="CollectionUtils.cs", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
m2_142 [cluster="System.Array.GetLength(int)", file="CollectionUtils.cs", label="Entry System.Array.GetLength(int)", span="0-0"];
m2_87 [cluster="System.Func<T, TResult>.Invoke(T)", file="CollectionUtils.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_118 [cluster="System.Collections.Generic.List<T>.List()", file="CollectionUtils.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_162 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="CollectionUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m2_29 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", span="114-114"];
m2_30 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="CollectionUtils.cs", label="Type genericConstructorArgument = typeof(IList<>).MakeGenericType(collectionItemType)", span="116-116"];
m2_31 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="CollectionUtils.cs", label="return ResolveEnumerableCollectionConstructor(collectionType, collectionItemType, genericConstructorArgument);", span="118-118"];
m2_32 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", span="114-114"];
m2_16 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="92-92"];
m2_17 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="CollectionUtils.cs", label="ValidationUtils.ArgumentNotNull(type, nameof(type))", span="94-94"];
m2_18 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="CollectionUtils.cs", label="typeof(IDictionary).IsAssignableFrom(type)", span="96-96"];
m2_20 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="CollectionUtils.cs", label="ReflectionUtils.ImplementsGenericDefinition(type, typeof(IDictionary<,>))", span="100-100"];
m2_22 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="CollectionUtils.cs", label="ReflectionUtils.ImplementsGenericDefinition(type, typeof(IReadOnlyDictionary<,>))", span="105-105"];
m2_19 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="CollectionUtils.cs", label="return true;", span="98-98"];
m2_21 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="CollectionUtils.cs", label="return true;", span="102-102"];
m2_23 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="CollectionUtils.cs", label="return true;", span="107-107"];
m2_24 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="CollectionUtils.cs", label="return false;", span="111-111"];
m2_25 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="92-92"];
m2_119 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", span="283-283"];
m2_120 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="CollectionUtils.cs", label="int dimension = indices.Length", span="285-285"];
m2_121 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="CollectionUtils.cs", label="dimension == multidimensionalArray.Rank", span="286-286"];
m2_122 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="CollectionUtils.cs", label="multidimensionalArray.SetValue(JaggedArrayGetValue(values, indices), indices)", span="288-288"];
m2_124 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="CollectionUtils.cs", label="int dimensionLength = multidimensionalArray.GetLength(dimension)", span="292-292"];
m2_125 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="CollectionUtils.cs", label="IList list = (IList)JaggedArrayGetValue(values, indices)", span="293-293"];
m2_132 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="CollectionUtils.cs", label="newIndices[i] = indices[i]", span="303-303"];
m2_135 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="CollectionUtils.cs", label="i < multidimensionalArray.GetLength(dimension)", span="306-306"];
m2_137 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="CollectionUtils.cs", label="CopyFromJaggedToMultidimensionalArray(values, multidimensionalArray, newIndices)", span="309-309"];
m2_129 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="CollectionUtils.cs", label="int[] newIndices = new int[dimension + 1]", span="300-300"];
m2_131 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="CollectionUtils.cs", label="i < dimension", span="301-301"];
m2_136 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="CollectionUtils.cs", label="newIndices[dimension] = i", span="308-308"];
m2_123 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="CollectionUtils.cs", label="return;", span="289-289"];
m2_127 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="CollectionUtils.cs", label="currentValuesLength != dimensionLength", span="295-295"];
m2_126 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="CollectionUtils.cs", label="int currentValuesLength = list.Count", span="294-294"];
m2_128 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="CollectionUtils.cs", label="throw new Exception(''Cannot deserialize non-cubical array as multidimensional array.'');", span="297-297"];
m2_130 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="CollectionUtils.cs", label="int i = 0", span="301-301"];
m2_133 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="CollectionUtils.cs", label="i++", span="301-301"];
m2_134 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="CollectionUtils.cs", label="int i = 0", span="306-306"];
m2_138 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="CollectionUtils.cs", label="i++", span="306-306"];
m2_139 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", span="283-283"];
m2_49 [cluster="System.Reflection.MethodBase.GetParameters()", file="CollectionUtils.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m2_60 [cluster="System.Collections.Generic.IEnumerable<TSource>.ContainsValue<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="CollectionUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ContainsValue<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="172-172"];
m2_48 [cluster="System.Type.GetConstructors(System.Reflection.BindingFlags)", file="CollectionUtils.cs", label="Entry System.Type.GetConstructors(System.Reflection.BindingFlags)", span="0-0"];
m2_14 [cluster="Unk.nameof", file="CollectionUtils.cs", label="Entry Unk.nameof", span=""];
m2_96 [cluster="System.Collections.IEqualityComparer.Equals(object, object)", file="CollectionUtils.cs", label="Entry System.Collections.IEqualityComparer.Equals(object, object)", span="0-0"];
m2_28 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", span="298-298"];
m2_105 [cluster="object.ReferenceEquals(object, object)", file="CollectionUtils.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m2_154 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", span="331-331"];
m2_155 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="CollectionUtils.cs", label="IList<int> dimensions = GetDimensions(values, rank)", span="333-333"];
m2_156 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="CollectionUtils.cs", label="dimensions.Count < rank", span="335-335"];
m2_158 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="CollectionUtils.cs", label="Array multidimensionalArray = Array.CreateInstance(type, dimensions.ToArray())", span="340-340"];
m2_159 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="CollectionUtils.cs", label="CopyFromJaggedToMultidimensionalArray(values, multidimensionalArray, new int[0])", span="341-341"];
m2_157 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="CollectionUtils.cs", label="dimensions.Add(0)", span="337-337"];
m2_160 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="CollectionUtils.cs", label="return multidimensionalArray;", span="343-343"];
m2_161 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", span="331-331"];
m2_140 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", span="313-313"];
m2_144 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="CollectionUtils.cs", label="IList currentList = values", span="315-315"];
m2_146 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="CollectionUtils.cs", label="i < indices.Length", span="316-316"];
m2_147 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="CollectionUtils.cs", label="int index = indices[i]", span="318-318"];
m2_148 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="CollectionUtils.cs", label="i == indices.Length - 1", span="319-319"];
m2_145 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="CollectionUtils.cs", label="int i = 0", span="316-316"];
m2_149 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="CollectionUtils.cs", label="return currentList[index];", span="321-321"];
m2_150 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="CollectionUtils.cs", label="currentList = (IList)currentList[index]", span="325-325"];
m2_152 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="CollectionUtils.cs", label="return currentList;", span="328-328"];
m2_151 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="CollectionUtils.cs", label="i++", span="316-316"];
m2_153 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", span="313-313"];
m2_163 [cluster="System.Array.CreateInstance(System.Type, params int[])", file="CollectionUtils.cs", label="Entry System.Array.CreateInstance(System.Type, params int[])", span="0-0"];
m2_15 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="CollectionUtils.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m2_106 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", span="249-249"];
m2_107 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", file="CollectionUtils.cs", label="IList<int> dimensions = new List<int>()", span="251-251"];
m2_108 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", file="CollectionUtils.cs", label="IList currentArray = values", span="253-253"];
m2_111 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", file="CollectionUtils.cs", label="dimensions.Count == dimensionsCount", span="259-259"];
m2_110 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", file="CollectionUtils.cs", label="dimensions.Add(currentArray.Count)", span="256-256"];
m2_116 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", file="CollectionUtils.cs", label="return dimensions;", span="280-280"];
m2_109 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", file="CollectionUtils.cs", label=true, span="254-254"];
m2_112 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", file="CollectionUtils.cs", label="currentArray.Count == 0", span="264-264"];
m2_113 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", file="CollectionUtils.cs", label="object v = currentArray[0]", span="269-269"];
m2_117 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", span="249-249"];
m2_79 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", span="209-209"];
m2_80 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="CollectionUtils.cs", label="int index = 0", span="211-211"];
m2_81 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="CollectionUtils.cs", label=collection, span="212-212"];
m2_82 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="CollectionUtils.cs", label="predicate(value)", span="214-214"];
m2_83 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="CollectionUtils.cs", label="return index;", span="216-216"];
m2_84 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="CollectionUtils.cs", label="index++", span="219-219"];
m2_85 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="CollectionUtils.cs", label="return -1;", span="222-222"];
m2_86 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", span="209-209"];
m2_72 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", span="195-195"];
m2_73 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="CollectionUtils.cs", label="bool allAdded = true", span="197-197"];
m2_74 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="CollectionUtils.cs", label=values, span="198-198"];
m2_75 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="CollectionUtils.cs", label="!list.AddDistinct(value, comparer)", span="200-200"];
m2_77 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="CollectionUtils.cs", label="return allAdded;", span="206-206"];
m2_76 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="CollectionUtils.cs", label="allAdded = false", span="202-202"];
m2_78 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", span="195-195"];
m2_50 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", span="155-155"];
m2_51 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", file="CollectionUtils.cs", label="return list.AddDistinct(value, EqualityComparer<T>.Default);", span="157-157"];
m2_52 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", span="155-155"];
m2_26 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m2_27 [cluster="System.Type.IsAssignableFrom(System.Type)", file="CollectionUtils.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m2_5 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", span="64-64"];
m2_6 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="CollectionUtils.cs", label="initial == null", span="66-66"];
m2_7 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="CollectionUtils.cs", label="throw new ArgumentNullException(nameof(initial));", span="68-68"];
m2_8 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="CollectionUtils.cs", label="collection == null", span="71-71"];
m2_10 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="CollectionUtils.cs", label=collection, span="76-76"];
m2_11 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="CollectionUtils.cs", label="initial.Add(value)", span="78-78"];
m2_9 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="CollectionUtils.cs", label="return;", span="73-73"];
m2_12 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", span="64-64"];
m2_0 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="50-50"];
m2_1 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="CollectionUtils.cs", label="collection != null", span="52-52"];
m2_2 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="CollectionUtils.cs", label="return (collection.Count == 0);", span="54-54"];
m2_3 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="CollectionUtils.cs", label="return true;", span="56-56"];
m2_4 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="50-50"];
m2_97 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", span="237-237"];
m2_98 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", file="CollectionUtils.cs", label="int i = 0", span="239-239"];
m2_99 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", file="CollectionUtils.cs", label="i < list.Count", span="239-239"];
m2_100 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", file="CollectionUtils.cs", label="ReferenceEquals(item, list[i])", span="241-241"];
m2_101 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", file="CollectionUtils.cs", label="return i;", span="243-243"];
m2_102 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", file="CollectionUtils.cs", label="i++", span="239-239"];
m2_103 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", file="CollectionUtils.cs", label="return -1;", span="246-246"];
m2_104 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", span="237-237"];
m2_141 [cluster="System.Array.SetValue(object, params int[])", file="CollectionUtils.cs", label="Entry System.Array.SetValue(object, params int[])", span="0-0"];
m2_143 [cluster="System.Exception.Exception(string)", file="CollectionUtils.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m2_53 [cluster="System.Collections.Generic.IList<T>.AddDistinct<T>(T, System.Collections.Generic.IEqualityComparer<T>)", file="CollectionUtils.cs", label="Entry System.Collections.Generic.IList<T>.AddDistinct<T>(T, System.Collections.Generic.IEqualityComparer<T>)", span="160-160"];
m2_61 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="172-172"];
m2_62 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="CollectionUtils.cs", label="comparer == null", span="174-174"];
m2_64 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="CollectionUtils.cs", label="source == null", span="179-179"];
m2_65 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="CollectionUtils.cs", label="throw new ArgumentNullException(nameof(source));", span="181-181"];
m2_66 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="CollectionUtils.cs", label=source, span="184-184"];
m2_67 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="CollectionUtils.cs", label="comparer.Equals(local, value)", span="186-186"];
m2_63 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="CollectionUtils.cs", label="comparer = EqualityComparer<TSource>.Default", span="176-176"];
m2_69 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="CollectionUtils.cs", label="return false;", span="192-192"];
m2_68 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="CollectionUtils.cs", label="return true;", span="188-188"];
m2_70 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="172-172"];
m3_91 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Insert(int, object)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Insert(int, object)", span="234-234"];
m3_92 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Insert(int, object)", file="CollectionWrapper.cs", label="_genericCollection != null", span="236-236"];
m3_95 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Insert(int, object)", file="CollectionWrapper.cs", label="_list.Insert(index, (T)value)", span="242-242"];
m3_93 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Insert(int, object)", file="CollectionWrapper.cs", label="throw new InvalidOperationException(''Wrapped ICollection<T> does not support Insert.'');", span="238-238"];
m3_94 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Insert(int, object)", file="CollectionWrapper.cs", label="VerifyValueType(value)", span="241-241"];
m3_96 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Insert(int, object)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Insert(int, object)", span="234-234"];
m3_40 [cluster="System.Collections.ICollection.CopyTo(System.Array, int)", file="CollectionWrapper.cs", label="Entry System.Collections.ICollection.CopyTo(System.Array, int)", span="0-0"];
m3_57 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="CollectionWrapper.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m3_115 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="273-273"];
m3_69 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.VerifyValueType(object)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.VerifyValueType(object)", span="315-315"];
m3_106 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.VerifyValueType(object)", file="CollectionWrapper.cs", label="throw new ArgumentException(''The value '{0}' is not of type '{1}' and cannot be used in this generic collection.''.FormatWith(CultureInfo.InvariantCulture, value, typeof(T)), nameof(value));", span="319-319"];
m3_105 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.VerifyValueType(object)", file="CollectionWrapper.cs", label="!IsCompatibleObject(value)", span="317-317"];
m3_107 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.VerifyValueType(object)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.VerifyValueType(object)", span="315-315"];
m3_39 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="CollectionWrapper.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m3_32 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="CollectionWrapper.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m3_13 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Add(T)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.Add(T)", span="72-72"];
m3_14 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Add(T)", file="CollectionWrapper.cs", label="_genericCollection != null", span="74-74"];
m3_15 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Add(T)", file="CollectionWrapper.cs", label="_genericCollection.Add(item)", span="76-76"];
m3_16 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Add(T)", file="CollectionWrapper.cs", label="_list.Add(item)", span="80-80"];
m3_17 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Add(T)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.Add(T)", span="72-72"];
m3_97 [cluster="System.Collections.IList.Insert(int, object)", file="CollectionWrapper.cs", label="Entry System.Collections.IList.Insert(int, object)", span="0-0"];
m3_34 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CopyTo(T[], int)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.CopyTo(T[], int)", span="108-108"];
m3_35 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CopyTo(T[], int)", file="CollectionWrapper.cs", label="_genericCollection != null", span="110-110"];
m3_36 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CopyTo(T[], int)", file="CollectionWrapper.cs", label="_genericCollection.CopyTo(array, arrayIndex)", span="112-112"];
m3_37 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CopyTo(T[], int)", file="CollectionWrapper.cs", label="_list.CopyTo(array, arrayIndex)", span="116-116"];
m3_38 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CopyTo(T[], int)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.CopyTo(T[], int)", span="108-108"];
m3_0 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", span="50-50"];
m3_2 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", color=green, community=0, file="CollectionWrapper.cs", label="ICollection<T> collection = list as ICollection<T>", prediction=2, span="54-54"];
m3_1 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", file="CollectionWrapper.cs", label="ValidationUtils.ArgumentNotNull(list, nameof(list))", span="52-52"];
m3_3 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", color=green, community=0, file="CollectionWrapper.cs", label="collection != null", prediction=3, span="55-55"];
m3_4 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", color=green, community=0, file="CollectionWrapper.cs", label="_genericCollection = collection", prediction=4, span="57-57"];
m3_5 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", file="CollectionWrapper.cs", label="_list = list", span="61-61"];
m3_6 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", span="50-50"];
m3_51 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.GetEnumerator()", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.GetEnumerator()", span="169-169"];
m3_52 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.GetEnumerator()", file="CollectionWrapper.cs", label="_genericCollection != null", span="171-171"];
m3_53 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.GetEnumerator()", file="CollectionWrapper.cs", label="return _genericCollection.GetEnumerator();", span="173-173"];
m3_54 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.GetEnumerator()", file="CollectionWrapper.cs", label="return _list.Cast<T>().GetEnumerator();", span="176-176"];
m3_55 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.GetEnumerator()", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.GetEnumerator()", span="169-169"];
m3_70 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Contains(object)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Contains(object)", span="199-199"];
m3_72 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Contains(object)", file="CollectionWrapper.cs", label="return Contains((T)value);", span="203-203"];
m3_71 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Contains(object)", file="CollectionWrapper.cs", label="IsCompatibleObject(value)", span="201-201"];
m3_73 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Contains(object)", file="CollectionWrapper.cs", label="return false;", span="206-206"];
m3_74 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Contains(object)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Contains(object)", span="199-199"];
m3_85 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.RemoveAt(int)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.RemoveAt(int)", span="224-224"];
m3_86 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.RemoveAt(int)", file="CollectionWrapper.cs", label="_genericCollection != null", span="226-226"];
m3_88 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.RemoveAt(int)", file="CollectionWrapper.cs", label="_list.RemoveAt(index)", span="231-231"];
m3_87 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.RemoveAt(int)", file="CollectionWrapper.cs", label="throw new InvalidOperationException(''Wrapped ICollection<T> does not support RemoveAt.'');", span="228-228"];
m3_89 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.RemoveAt(int)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.RemoveAt(int)", span="224-224"];
m3_84 [cluster="System.Collections.IList.IndexOf(object)", file="CollectionWrapper.cs", label="Entry System.Collections.IList.IndexOf(object)", span="0-0"];
m3_102 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.ICollection.CopyTo(System.Array, int)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.ICollection.CopyTo(System.Array, int)", span="292-292"];
m3_103 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.ICollection.CopyTo(System.Array, int)", file="CollectionWrapper.cs", label="CopyTo((T[])array, arrayIndex)", span="294-294"];
m3_104 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.ICollection.CopyTo(System.Array, int)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.ICollection.CopyTo(System.Array, int)", span="292-292"];
m3_98 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Remove(object)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Remove(object)", span="261-261"];
m3_100 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Remove(object)", file="CollectionWrapper.cs", label="Remove((T)value)", span="265-265"];
m3_99 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Remove(object)", file="CollectionWrapper.cs", label="IsCompatibleObject(value)", span="263-263"];
m3_101 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Remove(object)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Remove(object)", span="261-261"];
m3_49 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="CollectionWrapper.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
m3_26 [cluster="System.Collections.IList.Clear()", file="CollectionWrapper.cs", label="Entry System.Collections.IList.Clear()", span="0-0"];
m3_7 [cluster="Unk.nameof", file="CollectionWrapper.cs", label="Entry Unk.nameof", span=""];
m3_33 [cluster="System.Collections.IList.Contains(object)", file="CollectionWrapper.cs", label="Entry System.Collections.IList.Contains(object)", span="0-0"];
m3_83 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="CollectionWrapper.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m3_114 [cluster="System.Type.IsValueType()", file="CollectionWrapper.cs", label="Entry System.Type.IsValueType()", span="535-535"];
m3_90 [cluster="System.Collections.IList.RemoveAt(int)", file="CollectionWrapper.cs", label="Entry System.Collections.IList.RemoveAt(int)", span="0-0"];
m3_20 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Clear()", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.Clear()", span="84-84"];
m3_21 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Clear()", file="CollectionWrapper.cs", label="_genericCollection != null", span="86-86"];
m3_22 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Clear()", file="CollectionWrapper.cs", label="_genericCollection.Clear()", span="88-88"];
m3_23 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Clear()", file="CollectionWrapper.cs", label="_list.Clear()", span="92-92"];
m3_24 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Clear()", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.Clear()", span="84-84"];
m3_27 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Contains(T)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.Contains(T)", span="96-96"];
m3_28 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Contains(T)", file="CollectionWrapper.cs", label="_genericCollection != null", span="98-98"];
m3_29 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Contains(T)", file="CollectionWrapper.cs", label="return _genericCollection.Contains(item);", span="100-100"];
m3_30 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Contains(T)", file="CollectionWrapper.cs", label="return _list.Contains(item);", span="104-104"];
m3_31 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Contains(T)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.Contains(T)", span="96-96"];
m3_41 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Remove(T)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.Remove(T)", span="150-150"];
m3_42 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Remove(T)", file="CollectionWrapper.cs", label="_genericCollection != null", span="152-152"];
m3_43 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Remove(T)", file="CollectionWrapper.cs", label="return _genericCollection.Remove(item);", span="154-154"];
m3_44 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Remove(T)", file="CollectionWrapper.cs", label="bool contains = _list.Contains(item)", span="158-158"];
m3_46 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Remove(T)", file="CollectionWrapper.cs", label="_list.Remove(item)", span="162-162"];
m3_45 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Remove(T)", file="CollectionWrapper.cs", label=contains, span="160-160"];
m3_47 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Remove(T)", file="CollectionWrapper.cs", label="return contains;", span="165-165"];
m3_48 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Remove(T)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.Remove(T)", span="150-150"];
m3_18 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="CollectionWrapper.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m3_50 [cluster="System.Collections.IList.Remove(object)", file="CollectionWrapper.cs", label="Entry System.Collections.IList.Remove(object)", span="0-0"];
m3_25 [cluster="System.Collections.Generic.ICollection<T>.Clear()", file="CollectionWrapper.cs", label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0"];
m3_108 [cluster="System.ArgumentException.ArgumentException(string, string)", file="CollectionWrapper.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m3_76 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.IndexOf(object)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.IndexOf(object)", span="209-209"];
m3_77 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.IndexOf(object)", file="CollectionWrapper.cs", label="_genericCollection != null", span="211-211"];
m3_80 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.IndexOf(object)", file="CollectionWrapper.cs", label="return _list.IndexOf((T)value);", span="218-218"];
m3_78 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.IndexOf(object)", file="CollectionWrapper.cs", label="throw new InvalidOperationException(''Wrapped ICollection<T> does not support IndexOf.'');", span="213-213"];
m3_79 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.IndexOf(object)", file="CollectionWrapper.cs", label="IsCompatibleObject(value)", span="216-216"];
m3_81 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.IndexOf(object)", file="CollectionWrapper.cs", label="return -1;", span="221-221"];
m3_82 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.IndexOf(object)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.IndexOf(object)", span="209-209"];
m3_63 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="CollectionWrapper.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m3_8 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m3_64 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Add(object)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Add(object)", span="191-191"];
m3_66 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Add(object)", file="CollectionWrapper.cs", label="Add((T)value)", span="194-194"];
m3_67 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Add(object)", file="CollectionWrapper.cs", label="return (Count - 1);", span="196-196"];
m3_65 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Add(object)", file="CollectionWrapper.cs", label="VerifyValueType(value)", span="193-193"];
m3_68 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Add(object)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Add(object)", span="191-191"];
m3_58 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IEnumerable.GetEnumerator()", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IEnumerable.GetEnumerator()", span="179-179"];
m3_59 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IEnumerable.GetEnumerator()", file="CollectionWrapper.cs", label="_genericCollection != null", span="181-181"];
m3_60 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IEnumerable.GetEnumerator()", file="CollectionWrapper.cs", label="return _genericCollection.GetEnumerator();", span="183-183"];
m3_61 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IEnumerable.GetEnumerator()", file="CollectionWrapper.cs", label="return _list.GetEnumerator();", span="187-187"];
m3_62 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IEnumerable.GetEnumerator()", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IEnumerable.GetEnumerator()", span="179-179"];
m3_9 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.Generic.ICollection<T>)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.Generic.ICollection<T>)", span="65-65"];
m3_11 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.Generic.ICollection<T>)", file="CollectionWrapper.cs", label="_genericCollection = list", span="69-69"];
m3_10 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.Generic.ICollection<T>)", file="CollectionWrapper.cs", label="ValidationUtils.ArgumentNotNull(list, nameof(list))", span="67-67"];
m3_12 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.Generic.ICollection<T>)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.Generic.ICollection<T>)", span="65-65"];
m3_19 [cluster="System.Collections.IList.Add(object)", file="CollectionWrapper.cs", label="Entry System.Collections.IList.Add(object)", span="0-0"];
m3_109 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="CollectionWrapper.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m3_75 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.IsCompatibleObject(object)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.IsCompatibleObject(object)", span="323-323"];
m3_110 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.IsCompatibleObject(object)", file="CollectionWrapper.cs", label="!(value is T) && (value != null || (typeof(T).IsValueType() && !ReflectionUtils.IsNullableType(typeof(T))))", span="325-325"];
m3_112 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.IsCompatibleObject(object)", file="CollectionWrapper.cs", label="return true;", span="330-330"];
m3_111 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.IsCompatibleObject(object)", file="CollectionWrapper.cs", label="return false;", span="327-327"];
m3_113 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.IsCompatibleObject(object)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.IsCompatibleObject(object)", span="323-323"];
m3_56 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="CollectionWrapper.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m3_116 [file="CollectionWrapper.cs", label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", span=""];
m5_725 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", span="91-91"];
m5_48 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="1132-1132"];
m5_528 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreatePrimitiveContract(objectType);", span="1136-1136"];
m5_532 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateObjectContract(objectType);", span="1144-1144"];
m5_534 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateArrayContract(objectType);", span="1149-1149"];
m5_536 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateDictionaryContract(objectType);", span="1154-1154"];
m5_538 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateLinqContract(objectType);", span="1159-1159"];
m5_540 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateDictionaryContract(objectType);", span="1164-1164"];
m5_542 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateArrayContract(objectType);", span="1169-1169"];
m5_544 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateStringContract(objectType);", span="1174-1174"];
m5_545 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="!IgnoreSerializableInterface && typeof(ISerializable).IsAssignableFrom(t)", span="1178-1178"];
m5_546 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateISerializableContract(objectType);", span="1180-1180"];
m5_548 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateDynamicContract(objectType);", span="1187-1187"];
m5_550 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreatePrimitiveContract(t);", span="1195-1195"];
m5_551 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateObjectContract(objectType);", span="1199-1199"];
m5_541 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="typeof(IEnumerable).IsAssignableFrom(t)", span="1167-1167"];
m5_547 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="typeof(IDynamicMetaObjectProvider).IsAssignableFrom(t)", span="1185-1185"];
m5_527 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="IsJsonPrimitiveType(objectType)", span="1134-1134"];
m5_531 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="containerAttribute is JsonObjectAttribute", span="1142-1142"];
m5_533 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="containerAttribute is JsonArrayAttribute", span="1147-1147"];
m5_535 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="containerAttribute is JsonDictionaryAttribute", span="1152-1152"];
m5_537 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="t == typeof(JToken) || t.IsSubclassOf(typeof(JToken))", span="1157-1157"];
m5_539 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="CollectionUtils.IsDictionaryType(t)", span="1162-1162"];
m5_543 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="CanConvertToString(t)", span="1172-1172"];
m5_529 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="Type t = ReflectionUtils.EnsureNotNullableType(objectType)", span="1139-1139"];
m5_549 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="IsIConvertible(t)", span="1193-1193"];
m5_530 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetCachedAttribute<JsonContainerAttribute>(t)", span="1140-1140"];
m5_552 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="1132-1132"];
m5_506 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", span="1092-1092"];
m5_514 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="contract.Properties.AddRange(CreateProperties(objectType, MemberSerialization.OptOut))", span="1108-1108"];
m5_507 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="JsonDynamicContract contract = new JsonDynamicContract(objectType)", span="1094-1094"];
m5_512 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="contract.PropertyNameResolver = s => namingStrategy.GetDictionaryKey(s)", span="1101-1101"];
m5_513 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="contract.PropertyNameResolver = ResolveDictionaryKey", span="1105-1105"];
m5_515 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="1110-1110"];
m5_509 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetAttribute<JsonContainerAttribute>(objectType)", span="1097-1097"];
m5_508 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="1095-1095"];
m5_511 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="NamingStrategy namingStrategy = JsonTypeReflector.GetContainerNamingStrategy(containerAttribute)", span="1100-1100"];
m5_510 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="containerAttribute?.NamingStrategyType != null", span="1098-1098"];
m5_516 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", span="1092-1092"];
m5_237 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m5_197 [cluster="System.Type.GetGenericArguments()", file="DefaultContractResolver.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m5_173 [cluster="System.Type.GetFields(System.Reflection.BindingFlags)", file="DefaultContractResolver.cs", label="Entry System.Type.GetFields(System.Reflection.BindingFlags)", span="0-0"];
m5_191 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="568-568"];
m5_604 [cluster="System.Type.ContainsGenericParameters()", file="DefaultContractResolver.cs", label="Entry System.Type.ContainsGenericParameters()", span="135-135"];
m5_234 [cluster="System.Type.GetMethod(string, System.Type[])", file="DefaultContractResolver.cs", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
m5_84 [cluster="Unk.ToList", file="DefaultContractResolver.cs", label="Entry Unk.ToList", span=""];
m5_356 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="1160-1160"];
m5_87 [cluster="System.Reflection.MemberInfo.IsDefined(System.Type, bool)", file="DefaultContractResolver.cs", label="Entry System.Reflection.MemberInfo.IsDefined(System.Type, bool)", span="0-0"];
m5_147 [cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="64-64"];
m5_20 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", span="216-216"];
m5_21 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="DefaultContractResolver.cs", label="_sharedCache = shareCache", span="219-219"];
m5_22 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", span="216-216"];
m5_283 [cluster="System.Type.GetConstructors(System.Reflection.BindingFlags)", file="DefaultContractResolver.cs", label="Entry System.Type.GetConstructors(System.Reflection.BindingFlags)", span="0-0"];
m5_23 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetState()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetState()", span="222-222"];
m5_24 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetState()", file="DefaultContractResolver.cs", label=_sharedCache, span="224-224"];
m5_26 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetState()", file="DefaultContractResolver.cs", label="return _instanceState;", span="230-230"];
m5_25 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetState()", file="DefaultContractResolver.cs", label="return _sharedState;", span="226-226"];
m5_27 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetState()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetState()", span="222-222"];
m5_358 [cluster="System.Type.IsValueType()", file="DefaultContractResolver.cs", label="Entry System.Type.IsValueType()", span="535-535"];
m5_90 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", span="368-368"];
m5_151 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="665-665"];
m5_301 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="JsonProperty property = CreatePropertyFromConstructorParameter(matchingMemberProperty, parameterInfo)", span="687-687"];
m5_297 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="JsonProperty matchingMemberProperty = (parameterInfo.Name != null) ? memberProperties.GetClosestMatchProperty(parameterInfo.Name) : null", span="675-675"];
m5_296 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label=constructorParameters, span="671-671"];
m5_295 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="JsonPropertyCollection parameterCollection = new JsonPropertyCollection(constructor.DeclaringType)", span="669-669"];
m5_300 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="matchingMemberProperty != null || parameterInfo.Name != null", span="685-685"];
m5_299 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="matchingMemberProperty = null", span="680-680"];
m5_302 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="property != null", span="689-689"];
m5_303 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="parameterCollection.AddProperty(property)", span="691-691"];
m5_298 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="matchingMemberProperty != null && matchingMemberProperty.PropertyType != parameterInfo.ParameterType", span="678-678"];
m5_294 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="ParameterInfo[] constructorParameters = constructor.GetParameters()", span="667-667"];
m5_304 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="return parameterCollection;", span="696-696"];
m5_305 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="665-665"];
m5_504 [cluster="Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", span="46-46"];
m5_16 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="195-195"];
m5_17 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DefaultContractResolver.cs", label="IgnoreSerializableAttribute = true", span="198-198"];
m5_18 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DefaultContractResolver.cs", label="DefaultMembersSearchFlags = BindingFlags.Instance | BindingFlags.Public", span="202-202"];
m5_19 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="195-195"];
m5_4 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", span="66-66"];
m5_5 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", file="DefaultContractResolver.cs", label="return _resolverType.GetHashCode() ^ _contractType.GetHashCode();", span="68-68"];
m5_6 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", span="66-66"];
m5_558 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", span="1210-1210"];
m5_563 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", file="DefaultContractResolver.cs", label="typeof(IConvertible).IsAssignableFrom(t)\r\n                || (ReflectionUtils.IsNullableType(t) && typeof(IConvertible).IsAssignableFrom(Nullable.GetUnderlyingType(t)))", span="1212-1213"];
m5_564 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", file="DefaultContractResolver.cs", label="return !typeof(JToken).IsAssignableFrom(t);", span="1215-1215"];
m5_565 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", file="DefaultContractResolver.cs", label="return false;", span="1218-1218"];
m5_566 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", span="1210-1210"];
m5_360 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="795-795"];
m5_366 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="GetCallbackMethodsForType(t, out onSerializing, out onSerialized, out onDeserializing, out onDeserialized, out onError)", span="803-803"];
m5_368 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="contract.OnSerializingCallbacks.AddRange(onSerializing)", span="807-807"];
m5_370 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="contract.OnSerializedCallbacks.AddRange(onSerialized)", span="812-812"];
m5_372 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="contract.OnDeserializingCallbacks.AddRange(onDeserializing)", span="817-817"];
m5_374 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="contract.OnDeserializedCallbacks.AddRange(onDeserialized)", span="822-822"];
m5_376 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="contract.OnErrorCallbacks.AddRange(onError)", span="827-827"];
m5_365 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="List<SerializationErrorCallback> onError", span="801-801"];
m5_367 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="onSerializing != null", span="805-805"];
m5_369 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="onSerialized != null", span="810-810"];
m5_371 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="onDeserializing != null", span="815-815"];
m5_373 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="onDeserialized != null", span="820-820"];
m5_375 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="onError != null", span="825-825"];
m5_361 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="List<SerializationCallback> onSerializing", span="797-797"];
m5_364 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="List<SerializationCallback> onDeserialized", span="800-800"];
m5_362 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="List<SerializationCallback> onSerialized", span="798-798"];
m5_363 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="List<SerializationCallback> onDeserializing", span="799-799"];
m5_377 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="795-795"];
m5_238 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="73-73"];
m5_148 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", span="66-66"];
m5_562 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="185-185"];
m5_260 [cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31"];
m5_652 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", span="1582-1582"];
m5_739 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="MemberInfo specifiedMember = member.DeclaringType.GetProperty(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="1584-1584"];
m5_741 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="specifiedMember = member.DeclaringType.GetField(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="1587-1587"];
m5_745 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="property.GetIsSpecified = o => (bool)specifiedPropertyGet(o)", span="1597-1597"];
m5_746 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="ReflectionUtils.CanSetMemberValue(specifiedMember, allowNonPublicAccess, false)", span="1599-1599"];
m5_747 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="property.SetIsSpecified = JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(specifiedMember)", span="1601-1601"];
m5_743 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="return;", span="1592-1592"];
m5_740 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="specifiedMember == null", span="1585-1585"];
m5_742 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="specifiedMember == null || ReflectionUtils.GetMemberUnderlyingType(specifiedMember) != typeof(bool)", span="1590-1590"];
m5_744 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="Func<object, object> specifiedPropertyGet = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(specifiedMember)", span="1595-1595"];
m5_748 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", span="1582-1582"];
m5_309 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", span="705-705"];
m5_315 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="SetPropertySettingsFromAttributes(property, parameterInfo, parameterInfo.Name, parameterInfo.Member.DeclaringType, MemberSerialization.OptOut, out allowNonPublicAccess)", span="712-712"];
m5_311 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="JsonProperty property = new JsonProperty()", span="707-707"];
m5_314 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="bool allowNonPublicAccess", span="711-711"];
m5_316 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.Readable = false", span="714-714"];
m5_312 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.PropertyType = parameterInfo.ParameterType", span="708-708"];
m5_313 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.AttributeProvider = new ReflectionAttributeProvider(parameterInfo)", span="709-709"];
m5_317 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.Writable = true", span="715-715"];
m5_319 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.PropertyName = (property.PropertyName != parameterInfo.Name) ? property.PropertyName : matchingMemberProperty.PropertyName", span="720-720"];
m5_320 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.Converter = property.Converter ?? matchingMemberProperty.Converter", span="721-721"];
m5_321 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.MemberConverter = property.MemberConverter ?? matchingMemberProperty.MemberConverter", span="722-722"];
m5_322 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="!property._hasExplicitDefaultValue && matchingMemberProperty._hasExplicitDefaultValue", span="724-724"];
m5_323 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.DefaultValue = matchingMemberProperty.DefaultValue", span="726-726"];
m5_324 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property._required = property._required ?? matchingMemberProperty._required", span="729-729"];
m5_325 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.IsReference = property.IsReference ?? matchingMemberProperty.IsReference", span="730-730"];
m5_326 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.NullValueHandling = property.NullValueHandling ?? matchingMemberProperty.NullValueHandling", span="731-731"];
m5_327 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.DefaultValueHandling = property.DefaultValueHandling ?? matchingMemberProperty.DefaultValueHandling", span="732-732"];
m5_328 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.ReferenceLoopHandling = property.ReferenceLoopHandling ?? matchingMemberProperty.ReferenceLoopHandling", span="733-733"];
m5_329 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.ObjectCreationHandling = property.ObjectCreationHandling ?? matchingMemberProperty.ObjectCreationHandling", span="734-734"];
m5_330 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.TypeNameHandling = property.TypeNameHandling ?? matchingMemberProperty.TypeNameHandling", span="735-735"];
m5_331 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="return property;", span="738-738"];
m5_318 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="matchingMemberProperty != null", span="718-718"];
m5_332 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", span="705-705"];
m5_422 [cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)", span="386-386"];
m5_145 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="759-759"];
m5_349 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.Converter = ResolveContractConverter(contract.NonNullableUnderlyingType)", span="778-778"];
m5_352 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.DefaultCreator = GetDefaultCreator(contract.CreatedType)", span="786-786"];
m5_354 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="ResolveCallbackMethods(contract, contract.NonNullableUnderlyingType)", span="792-792"];
m5_346 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(contract.NonNullableUnderlyingType)", span="769-769"];
m5_345 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.IsReference = containerAttribute._isReference", span="764-764"];
m5_348 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.IsReference = true", span="773-773"];
m5_347 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="dataContractAttribute != null && dataContractAttribute.IsReference", span="771-771"];
m5_350 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.InternalConverter = JsonSerializer.GetMatchingConverter(BuiltInConverters, contract.NonNullableUnderlyingType)", span="781-781"];
m5_351 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.IsInstantiable\r\n                && (ReflectionUtils.HasDefaultConstructor(contract.CreatedType, true) || contract.CreatedType.IsValueType())", span="783-784"];
m5_353 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.DefaultCreatorNonPublic = (!contract.CreatedType.IsValueType() &&\r\n                                                    ReflectionUtils.GetDefaultConstructor(contract.CreatedType) == null)", span="788-789"];
m5_344 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="containerAttribute != null", span="762-762"];
m5_343 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetCachedAttribute<JsonContainerAttribute>(contract.NonNullableUnderlyingType)", span="761-761"];
m5_355 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="759-759"];
m5_265 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m5_165 [cluster="Unk.LastOrDefault", file="DefaultContractResolver.cs", label="Entry Unk.LastOrDefault", span=""];
m5_634 [cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="43-43"];
m5_83 [cluster="Unk.Where", file="DefaultContractResolver.cs", label="Entry Unk.Where", span=""];
m5_8 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", span="71-71"];
m5_10 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="DefaultContractResolver.cs", label="return false;", span="75-75"];
m5_9 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="DefaultContractResolver.cs", label="!(obj is ResolverContractKey)", span="73-73"];
m5_11 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="DefaultContractResolver.cs", label="return Equals((ResolverContractKey)obj);", span="78-78"];
m5_12 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", span="71-71"];
m5_194 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="DefaultContractResolver.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m5_357 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="233-233"];
m5_82 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="651-651"];
m5_333 [cluster="Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", span="38-38"];
m5_109 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="385-385"];
m5_115 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.Properties.AddRange(CreateProperties(contract.NonNullableUnderlyingType, contract.MemberSerialization))", span="398-398"];
m5_111 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="388-388"];
m5_113 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="ignoreSerializableAttribute = IgnoreSerializableAttribute", span="392-392"];
m5_124 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="extensionDataNameResolver = ResolveExtensionDataName", span="415-415"];
m5_127 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="422-422"];
m5_130 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.CreatorParameters.AddRange(CreateConstructorParameters(overrideConstructor, contract.Properties))", span="430-430"];
m5_135 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="ConstructorInfo constructor = GetParameterizedConstructor(contract.NonNullableUnderlyingType)", span="445-445"];
m5_138 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.CreatorParameters.AddRange(CreateConstructorParameters(constructor, contract.Properties))", span="451-451"];
m5_139 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="MemberInfo extensionDataMember = GetExtensionDataMemberForType(contract.NonNullableUnderlyingType)", span="456-456"];
m5_110 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="JsonObjectContract contract = new JsonObjectContract(objectType)", span="387-387"];
m5_114 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.MemberSerialization = JsonTypeReflector.GetObjectMemberSerialization(contract.NonNullableUnderlyingType, ignoreSerializableAttribute)", span="397-397"];
m5_116 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="Func<string, string> extensionDataNameResolver = null", span="400-400"];
m5_141 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="SetExtensionDataDelegates(contract, extensionDataMember)", span="459-459"];
m5_112 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="bool ignoreSerializableAttribute", span="390-390"];
m5_123 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="extensionDataNameResolver == null", span="413-413"];
m5_125 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.ExtensionDataNameResolver = extensionDataNameResolver", span="418-418"];
m5_126 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.IsInstantiable", span="420-420"];
m5_128 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="overrideConstructor != null", span="425-425"];
m5_129 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.OverrideConstructor = overrideConstructor", span="428-428"];
m5_134 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.DefaultCreator == null || contract.DefaultCreatorNonPublic", span="443-443"];
m5_136 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="constructor != null", span="446-446"];
m5_137 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.ParametrizedConstructor = constructor", span="449-449"];
m5_133 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.DefaultCreator = contract.GetUninitializedObject", span="439-439"];
m5_132 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="JsonTypeReflector.FullyTrusted", span="437-437"];
m5_140 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="extensionDataMember != null", span="457-457"];
m5_117 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="JsonObjectAttribute attribute = JsonTypeReflector.GetCachedAttribute<JsonObjectAttribute>(contract.NonNullableUnderlyingType)", span="402-402"];
m5_119 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.ItemRequired = attribute._itemRequired", span="405-405"];
m5_131 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.MemberSerialization == MemberSerialization.Fields", span="432-432"];
m5_142 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="462-462"];
m5_122 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="extensionDataNameResolver = s => namingStrategy.GetDictionaryKey(s)", span="409-409"];
m5_121 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="NamingStrategy namingStrategy = JsonTypeReflector.GetContainerNamingStrategy(attribute)", span="408-408"];
m5_118 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="attribute != null", span="403-403"];
m5_120 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="attribute.NamingStrategyType != null", span="406-406"];
m5_143 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="385-385"];
m5_81 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", span="127-127"];
m5_253 [cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27"];
m5_567 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="273-273"];
m5_310 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="70-70"];
m5_763 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetExtensionDataName(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetExtensionDataName(string)", span="47-47"];
m5_229 [cluster="System.Type.MakeGenericType(params System.Type[])", file="DefaultContractResolver.cs", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
m5_494 [cluster="Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", span="38-38"];
m5_489 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="1055-1055"];
m5_491 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="1058-1058"];
m5_490 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs", label="JsonLinqContract contract = new JsonLinqContract(objectType)", span="1057-1057"];
m5_492 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="1060-1060"];
m5_493 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="1055-1055"];
m5_248 [cluster="System.Func<T, TResult>.Invoke(T)", file="DefaultContractResolver.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m5_495 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", span="1069-1069"];
m5_497 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="1072-1072"];
m5_496 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="JsonISerializableContract contract = new JsonISerializableContract(objectType)", span="1071-1071"];
m5_498 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="ConstructorInfo constructorInfo = contract.NonNullableUnderlyingType.GetConstructor(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance, null, new[] { typeof(SerializationInfo), typeof(StreamingContext) }, null)", span="1074-1074"];
m5_501 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="contract.ISerializableCreator = creator", span="1079-1079"];
m5_502 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="1082-1082"];
m5_499 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="constructorInfo != null", span="1075-1075"];
m5_500 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="ObjectConstructor<object> creator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructorInfo)", span="1077-1077"];
m5_503 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", span="1069-1069"];
m5_44 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DefaultContractResolver.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m5_51 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", span="276-276"];
m5_68 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="dataContractAttribute != null && JsonTypeReflector.GetAttribute<DataMemberAttribute>(member) != null", span="326-326"];
m5_64 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(member) != null", span="317-317"];
m5_66 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="JsonTypeReflector.GetAttribute<JsonRequiredAttribute>(member) != null", span="321-321"];
m5_53 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="ignoreSerializableAttribute = IgnoreSerializableAttribute", span="280-280"];
m5_59 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="List<MemberInfo> defaultMembers = ReflectionUtils.GetFieldsAndProperties(objectType, DefaultMembersSearchFlags)\r\n                    .Where(m => !ReflectionUtils.IsIndexedProperty(m)).ToList()", span="299-300"];
m5_61 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="SerializeCompilerGeneratedMembers || !member.IsDefined(typeof(CompilerGeneratedAttribute), true)", span="306-306"];
m5_74 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers = serializableMembers.Where(ShouldSerializeEntityMember).ToList()", span="344-344"];
m5_52 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="bool ignoreSerializableAttribute", span="278-278"];
m5_54 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="MemberSerialization memberSerialization = JsonTypeReflector.GetObjectMemberSerialization(objectType, ignoreSerializableAttribute)", span="285-285"];
m5_55 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="List<MemberInfo> allMembers = ReflectionUtils.GetFieldsAndProperties(objectType, BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static)\r\n                .Where(m => !ReflectionUtils.IsIndexedProperty(m)).ToList()", span="287-288"];
m5_58 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(objectType)", span="295-295"];
m5_73 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="objectType.AssignableToTypeName(''System.Data.Objects.DataClasses.EntityObject'', out match)", span="342-342"];
m5_56 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="List<MemberInfo> serializableMembers = new List<MemberInfo>()", span="290-290"];
m5_60 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label=allMembers, span="303-303"];
m5_69 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers.Add(member)", span="328-328"];
m5_70 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="memberSerialization == MemberSerialization.Fields && member.MemberType() == MemberTypes.Field", span="331-331"];
m5_62 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="defaultMembers.Contains(member)", span="308-308"];
m5_65 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers.Add(member)", span="319-319"];
m5_67 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers.Add(member)", span="323-323"];
m5_79 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="return serializableMembers;", span="361-361"];
m5_57 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="memberSerialization != MemberSerialization.Fields", span="292-292"];
m5_75 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label=allMembers, span="351-351"];
m5_72 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="Type match", span="340-340"];
m5_63 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers.Add(member)", span="311-311"];
m5_71 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers.Add(member)", span="333-333"];
m5_78 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers.Add(member)", span="356-356"];
m5_77 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="field != null && !field.IsStatic", span="354-354"];
m5_76 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="FieldInfo field = member as FieldInfo", span="353-353"];
m5_80 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", span="276-276"];
m5_526 [cluster="Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", span="38-38"];
m5_153 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", span="465-465"];
m5_160 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", file="DefaultContractResolver.cs", label="MemberInfo extensionDataMember = members.LastOrDefault(m =>\r\n            {\r\n                MemberTypes memberType = m.MemberType();\r\n                if (memberType != MemberTypes.Property && memberType != MemberTypes.Field)\r\n                {\r\n                    return false;\r\n                }\r\n\r\n                // last instance of attribute wins on type if there are multiple\r\n                if (!m.IsDefined(typeof(JsonExtensionDataAttribute), false))\r\n                {\r\n                    return false;\r\n                }\r\n\r\n                if (!ReflectionUtils.CanReadMemberValue(m, true))\r\n                {\r\n                    throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' must have a getter.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));\r\n                }\r\n\r\n                Type t = ReflectionUtils.GetMemberUnderlyingType(m);\r\n\r\n                Type dictionaryType;\r\n                if (ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out dictionaryType))\r\n                {\r\n                    Type keyType = dictionaryType.GetGenericArguments()[0];\r\n                    Type valueType = dictionaryType.GetGenericArguments()[1];\r\n\r\n                    if (keyType.IsAssignableFrom(typeof(string)) && valueType.IsAssignableFrom(typeof(JToken)))\r\n                    {\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' type must implement IDictionary<string, JToken>.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));\r\n            })", span="476-510"];
m5_159 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", file="DefaultContractResolver.cs", label="IEnumerable<MemberInfo> members = GetClassHierarchyForType(type).SelectMany(baseType =>\r\n            {\r\n                IList<MemberInfo> m = new List<MemberInfo>();\r\n                m.AddRange(baseType.GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));\r\n                m.AddRange(baseType.GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));\r\n\r\n                return m;\r\n            })", span="467-474"];
m5_161 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", file="DefaultContractResolver.cs", label="return extensionDataMember;", span="512-512"];
m5_162 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", span="465-465"];
m5_152 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", span="645-645"];
m5_288 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="DefaultContractResolver.cs", label="IList<ConstructorInfo> constructors = objectType.GetConstructors(BindingFlags.Public | BindingFlags.Instance).ToList()", span="647-647"];
m5_289 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="DefaultContractResolver.cs", label="constructors.Count == 1", span="649-649"];
m5_290 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="DefaultContractResolver.cs", label="return constructors[0];", span="651-651"];
m5_291 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="DefaultContractResolver.cs", label="return null;", span="655-655"];
m5_292 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", span="645-645"];
m5_578 [cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", file="DefaultContractResolver.cs", label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", span="0-0"];
m5_729 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", span="180-180"];
m5_554 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="280-280"];
m5_28 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="239-239"];
m5_31 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="DefaultContractResolverState state = GetState()", span="246-246"];
m5_33 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="ResolverContractKey key = new ResolverContractKey(GetType(), type)", span="249-249"];
m5_36 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="contract = CreateContract(type)", span="253-253"];
m5_29 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="type == null", span="241-241"];
m5_32 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="JsonContract contract", span="248-248"];
m5_34 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="Dictionary<ResolverContractKey, JsonContract> cache = state.ContractCache", span="250-250"];
m5_38 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="cache = state.ContractCache", span="258-258"];
m5_41 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="state.ContractCache = updatedCache", span="264-264"];
m5_35 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="cache == null || !cache.TryGetValue(key, out contract)", span="251-251"];
m5_40 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="updatedCache[key] = contract", span="262-262"];
m5_37 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label=TypeContractCacheLock, span="256-256"];
m5_42 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="268-268"];
m5_30 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="throw new ArgumentNullException(nameof(type));", span="243-243"];
m5_39 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="Dictionary<ResolverContractKey, JsonContract> updatedCache = (cache != null)\r\n                        ? new Dictionary<ResolverContractKey, JsonContract>(cache)\r\n                        : new Dictionary<ResolverContractKey, JsonContract>()", span="259-261"];
m5_43 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="239-239"];
m5_45 [cluster="Unk.nameof", file="DefaultContractResolver.cs", label="Entry Unk.nameof", span=""];
m5_443 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="955-955"];
m5_446 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetAttribute<JsonContainerAttribute>(objectType)", span="960-960"];
m5_459 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Constructor for '{0}' must have no parameters or a single parameter that implements '{1}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType, expectedParameterType));", span="990-990"];
m5_445 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="958-958"];
m5_450 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="contract.DictionaryKeyResolver = ResolveDictionaryKey", span="968-968"];
m5_451 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="971-971"];
m5_447 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="containerAttribute?.NamingStrategyType != null", span="961-961"];
m5_448 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="NamingStrategy namingStrategy = JsonTypeReflector.GetContainerNamingStrategy(containerAttribute)", span="963-963"];
m5_444 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="JsonDictionaryContract contract = new JsonDictionaryContract(objectType)", span="957-957"];
m5_454 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="Type expectedParameterType = (contract.DictionaryKeyType != null && contract.DictionaryValueType != null)\r\n                    ? typeof(IEnumerable<>).MakeGenericType(typeof(KeyValuePair<,>).MakeGenericType(contract.DictionaryKeyType, contract.DictionaryValueType))\r\n                    : typeof(IDictionary)", span="976-978"];
m5_457 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="parameters.Length == 1 && expectedParameterType.IsAssignableFrom(parameters[0].ParameterType)", span="984-984"];
m5_449 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="contract.DictionaryKeyResolver = s => namingStrategy.GetDictionaryKey(s)", span="964-964"];
m5_452 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="overrideConstructor != null", span="973-973"];
m5_453 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="ParameterInfo[] parameters = overrideConstructor.GetParameters()", span="975-975"];
m5_460 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="993-993"];
m5_456 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="contract.HasParameterizedCreator = false", span="982-982"];
m5_458 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="contract.HasParameterizedCreator = true", span="986-986"];
m5_461 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="996-996"];
m5_455 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="parameters.Length == 0", span="980-980"];
m5_462 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="955-955"];
m5_107 [cluster="System.Type.IsGenericType()", file="DefaultContractResolver.cs", label="Entry System.Type.IsGenericType()", span="153-153"];
m5_236 [cluster="System.Type.GetConstructors()", file="DefaultContractResolver.cs", label="Entry System.Type.GetConstructors()", span="0-0"];
m5_249 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m5_417 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", span="916-916"];
m5_429 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", file="DefaultContractResolver.cs", label="t.Name == FSharpUtils.FSharpSetTypeName || t.Name == FSharpUtils.FSharpMapTypeName", span="919-919"];
m5_430 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", file="DefaultContractResolver.cs", label="return true;", span="921-921"];
m5_431 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", file="DefaultContractResolver.cs", label="return false;", span="931-931"];
m5_432 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", span="916-916"];
m5_149 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", span="192-192"];
m5_521 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="1119-1119"];
m5_523 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="1122-1122"];
m5_522 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs", label="JsonStringContract contract = new JsonStringContract(objectType)", span="1121-1121"];
m5_524 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="1124-1124"];
m5_525 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="1119-1119"];
m5_86 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", span="72-72"];
m5_252 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="DefaultContractResolver.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m5_620 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="1377-1377"];
m5_641 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="SetPropertySettingsFromAttributes(property, member, member.Name, member.DeclaringType, memberSerialization, out allowNonPublicAccess)", span="1386-1386"];
m5_635 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="JsonProperty property = new JsonProperty()", span="1379-1379"];
m5_640 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="bool allowNonPublicAccess", span="1385-1385"];
m5_642 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="memberSerialization != MemberSerialization.Fields", span="1388-1388"];
m5_643 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.Readable = ReflectionUtils.CanReadMemberValue(member, allowNonPublicAccess)", span="1390-1390"];
m5_644 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.Writable = ReflectionUtils.CanSetMemberValue(member, allowNonPublicAccess, property.HasMemberAttribute)", span="1391-1391"];
m5_648 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="SetIsSpecifiedActions(property, member, allowNonPublicAccess)", span="1401-1401"];
m5_636 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.PropertyType = ReflectionUtils.GetMemberUnderlyingType(member)", span="1380-1380"];
m5_637 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.DeclaringType = member.DeclaringType", span="1381-1381"];
m5_638 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.ValueProvider = CreateMemberValueProvider(member)", span="1382-1382"];
m5_639 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.AttributeProvider = new ReflectionAttributeProvider(member)", span="1383-1383"];
m5_645 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.Readable = true", span="1396-1396"];
m5_646 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.Writable = true", span="1397-1397"];
m5_647 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.ShouldSerialize = CreateShouldSerializeTest(member)", span="1399-1399"];
m5_649 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="return property;", span="1403-1403"];
m5_650 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="1377-1377"];
m5_307 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="46-46"];
m5_227 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", span="735-735"];
m5_96 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="477-477"];
m5_232 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", span="55-55"];
m5_517 [cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.JsonDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.JsonDynamicContract(System.Type)", span="77-77"];
m5_340 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="751-751"];
m5_341 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="DefaultContractResolver.cs", label="return JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType);", span="753-753"];
m5_342 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="751-751"];
m5_230 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", span="38-38"];
m5_266 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", span="609-609"];
m5_267 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="DefaultContractResolver.cs", label=_e, span="611-611"];
m5_268 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="DefaultContractResolver.cs", label="yield return new KeyValuePair<object, object>(item.Key, item.Value);", span="613-613"];
m5_269 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", span="609-609"];
m5_442 [cluster="System.Collections.Generic.List<T>.Reverse()", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.List<T>.Reverse()", span="0-0"];
m5_727 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)", span="32-32"];
m5_577 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="710-710"];
m5_250 [cluster="string.FormatWith(System.IFormatProvider, object)", file="DefaultContractResolver.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m5_193 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="1295-1295"];
m5_601 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", color=green, community=0, file="DefaultContractResolver.cs", label="return string.Format(CultureInfo.InvariantCulture, ''{0}.{1}'', new object[] { type.Namespace, type.Name });", prediction=5, span="1302-1302"];
m5_599 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs", label="type.IsGenericTypeDefinition() || !type.ContainsGenericParameters()", span="1297-1297"];
m5_600 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs", label="return type.FullName;", span="1299-1299"];
m5_602 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="1295-1295"];
m5_13 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", span="81-81"];
m5_14 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", file="DefaultContractResolver.cs", label="return (_resolverType == other._resolverType && _contractType == other._contractType);", span="83-83"];
m5_15 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", span="81-81"];
m5_359 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="245-245"];
m5_154 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", span="515-515"];
m5_199 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="JsonExtensionDataAttribute extensionDataAttribute = ReflectionUtils.GetAttribute<JsonExtensionDataAttribute>(member)", span="517-517"];
m5_202 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Type t = ReflectionUtils.GetMemberUnderlyingType(member)", span="523-523"];
m5_211 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Func<object, object> getExtensionDataDictionary = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(member)", span="543-543"];
m5_213 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Action<object, object> setExtensionDataDictionary = (ReflectionUtils.CanSetMemberValue(member, true, false))\r\n                 ? JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(member)\r\n                 : null", span="547-549"];
m5_217 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="ExtensionDataSetter extensionDataSetter = (o, key, value) =>\r\n                {\r\n                    object dictionary = getExtensionDataDictionary(o);\r\n                    if (dictionary == null)\r\n                    {\r\n                        if (setExtensionDataDictionary == null)\r\n                        {\r\n                            throw new JsonSerializationException(''Cannot set value onto extension data member '{0}'. The extension data collection is null and it cannot be set.''.FormatWith(CultureInfo.InvariantCulture, member.Name));\r\n                        }\r\n\r\n                        dictionary = createExtensionDataDictionary();\r\n                        setExtensionDataDictionary(o, dictionary);\r\n                    }\r\n\r\n                    setExtensionDataDictionaryValue(dictionary, key, value);\r\n                }", span="554-569"];
m5_218 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="contract.ExtensionDataSetter = extensionDataSetter", span="571-571"];
m5_224 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="contract.ExtensionDataGetter = extensionDataGetter", span="591-591"];
m5_225 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="contract.ExtensionDataValueType = valueType", span="594-594"];
m5_204 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out dictionaryType)", span="526-526"];
m5_223 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="ExtensionDataGetter extensionDataGetter = o =>\r\n                {\r\n                    object dictionary = getExtensionDataDictionary(o);\r\n                    if (dictionary == null)\r\n                    {\r\n                        return null;\r\n                    }\r\n\r\n                    return (IEnumerable<KeyValuePair<object, object>>)createEnumerableWrapper(dictionary);\r\n                }", span="580-589"];
m5_201 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="return;", span="520-520"];
m5_200 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="extensionDataAttribute == null", span="518-518"];
m5_212 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="extensionDataAttribute.ReadData", span="545-545"];
m5_219 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="extensionDataAttribute.WriteData", span="574-574"];
m5_207 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Type createdType", span="531-531"];
m5_203 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Type dictionaryType", span="525-525"];
m5_208 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="ReflectionUtils.IsGenericDefinition(t, typeof(IDictionary<,>))", span="534-534"];
m5_210 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="createdType = t", span="540-540"];
m5_215 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="MethodInfo addMethod = t.GetMethod(''Add'', new[] { keyType, valueType })", span="551-551"];
m5_209 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="createdType = typeof(Dictionary<,>).MakeGenericType(keyType, valueType)", span="536-536"];
m5_214 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Func<object> createExtensionDataDictionary = JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType)", span="550-550"];
m5_216 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="MethodCall<object, object> setExtensionDataDictionaryValue = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(addMethod)", span="552-552"];
m5_206 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Type valueType = dictionaryType.GetGenericArguments()[1]", span="529-529"];
m5_205 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Type keyType = dictionaryType.GetGenericArguments()[0]", span="528-528"];
m5_222 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="ObjectConstructor<object> createEnumerableWrapper = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructors)", span="578-578"];
m5_220 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Type enumerableWrapper = typeof(EnumerableDictionaryWrapper<,>).MakeGenericType(keyType, valueType)", span="576-576"];
m5_221 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="ConstructorInfo constructors = enumerableWrapper.GetConstructors().First()", span="577-577"];
m5_226 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", span="515-515"];
m5_651 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1567-1567"];
m5_730 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="MethodInfo shouldSerializeMethod = member.DeclaringType.GetMethod(JsonTypeReflector.ShouldSerializePrefix + member.Name, ReflectionUtils.EmptyTypes)", span="1569-1569"];
m5_734 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="return o => (bool)shouldSerializeCall(o);", span="1579-1579"];
m5_732 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="return null;", span="1573-1573"];
m5_731 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="shouldSerializeMethod == null || shouldSerializeMethod.ReturnType != typeof(bool)", span="1571-1571"];
m5_733 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="MethodCall<object, object> shouldSerializeCall =\r\n                JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(shouldSerializeMethod)", span="1576-1577"];
m5_735 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1567-1567"];
m5_378 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="831-831"];
m5_396 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="!skipSerializing && IsValidCallback(method, parameters, typeof(OnSerializingAttribute), currentOnSerializing, ref prevAttributeType)", span="863-863"];
m5_400 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="IsValidCallback(method, parameters, typeof(OnSerializedAttribute), currentOnSerialized, ref prevAttributeType)", span="869-869"];
m5_404 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="IsValidCallback(method, parameters, typeof(OnDeserializingAttribute), currentOnDeserializing, ref prevAttributeType)", span="875-875"];
m5_408 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="!skipDeserialized && IsValidCallback(method, parameters, typeof(OnDeserializedAttribute), currentOnDeserialized, ref prevAttributeType)", span="881-881"];
m5_412 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="IsValidCallback(method, parameters, typeof(OnErrorAttribute), currentOnError, ref prevAttributeType)", span="887-887"];
m5_392 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="baseType.GetMethods(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)", span="851-851"];
m5_395 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="ParameterInfo[] parameters = method.GetParameters()", span="861-861"];
m5_385 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="MethodInfo currentOnSerializing = null", span="842-842"];
m5_386 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="MethodInfo currentOnSerialized = null", span="843-843"];
m5_387 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="MethodInfo currentOnDeserializing = null", span="844-844"];
m5_388 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="MethodInfo currentOnDeserialized = null", span="845-845"];
m5_389 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="MethodInfo currentOnError = null", span="846-846"];
m5_394 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="Type prevAttributeType = null", span="860-860"];
m5_384 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="GetClassHierarchyForType(type)", span="839-839"];
m5_390 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="bool skipSerializing = ShouldSkipSerializing(baseType)", span="848-848"];
m5_397 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onSerializing = onSerializing ?? new List<SerializationCallback>()", span="865-865"];
m5_399 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="currentOnSerializing = method", span="867-867"];
m5_401 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onSerialized = onSerialized ?? new List<SerializationCallback>()", span="871-871"];
m5_403 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="currentOnSerialized = method", span="873-873"];
m5_405 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onDeserializing = onDeserializing ?? new List<SerializationCallback>()", span="877-877"];
m5_391 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="bool skipDeserialized = ShouldSkipDeserialized(baseType)", span="849-849"];
m5_407 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="currentOnDeserializing = method", span="879-879"];
m5_409 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onDeserialized = onDeserialized ?? new List<SerializationCallback>()", span="883-883"];
m5_411 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="currentOnDeserialized = method", span="885-885"];
m5_413 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onError = onError ?? new List<SerializationErrorCallback>()", span="889-889"];
m5_393 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="method.ContainsGenericParameters", span="855-855"];
m5_415 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="currentOnError = method", span="891-891"];
m5_398 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onSerializing.Add(JsonContract.CreateSerializationCallback(method))", span="866-866"];
m5_402 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onSerialized.Add(JsonContract.CreateSerializationCallback(method))", span="872-872"];
m5_406 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onDeserializing.Add(JsonContract.CreateSerializationCallback(method))", span="878-878"];
m5_410 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onDeserialized.Add(JsonContract.CreateSerializationCallback(method))", span="884-884"];
m5_414 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onError.Add(JsonContract.CreateSerializationErrorCallback(method))", span="890-890"];
m5_383 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onError = null", span="837-837"];
m5_379 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onSerializing = null", span="833-833"];
m5_380 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onSerialized = null", span="834-834"];
m5_381 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onDeserializing = null", span="835-835"];
m5_382 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="onDeserialized = null", span="836-836"];
m5_416 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="831-831"];
m5_144 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="208-208"];
m5_231 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", span="610-610"];
m5_568 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="DefaultContractResolver.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m5_769 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1655-1655"];
m5_770 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="DefaultContractResolver.cs", label="return ResolvePropertyName(propertyName);", span="1659-1659"];
m5_771 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1655-1655"];
m5_306 [cluster="System.Reflection.MethodBase.GetParameters()", file="DefaultContractResolver.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m5_100 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", span="365-365"];
m5_105 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="return true;", span="376-376"];
m5_102 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="propertyInfo != null", span="368-368"];
m5_103 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="propertyInfo.PropertyType.IsGenericType() && propertyInfo.PropertyType.GetGenericTypeDefinition().FullName == ''System.Data.Objects.DataClasses.EntityReference`1''", span="370-370"];
m5_101 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="PropertyInfo propertyInfo = memberInfo as PropertyInfo", span="367-367"];
m5_104 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="return false;", span="372-372"];
m5_106 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", span="365-365"];
m5_89 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_603 [cluster="System.Type.IsGenericTypeDefinition()", file="DefaultContractResolver.cs", label="Entry System.Type.IsGenericTypeDefinition()", span="162-162"];
m5_150 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="623-623"];
m5_276 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Multiple constructors with the JsonConstructorAttribute.'');", span="629-629"];
m5_275 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="markedConstructors.Count > 1", span="627-627"];
m5_274 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="IList<ConstructorInfo> markedConstructors = objectType.GetConstructors(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).Where(c => c.IsDefined(typeof(JsonConstructorAttribute), true)).ToList()", span="625-625"];
m5_277 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="markedConstructors.Count == 1", span="631-631"];
m5_280 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="return objectType.GetConstructor(new[] { typeof(int), typeof(int), typeof(int), typeof(int) });", span="639-639"];
m5_278 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="return markedConstructors[0];", span="633-633"];
m5_281 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="return null;", span="642-642"];
m5_279 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="objectType == typeof(Version)", span="637-637"];
m5_282 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="623-623"];
m5_50 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m5_467 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="1004-1004"];
m5_478 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Constructor for '{0}' must have no parameters or a single parameter that implements '{1}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType, expectedParameterType));", span="1028-1028"];
m5_469 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="1007-1007"];
m5_470 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="1009-1009"];
m5_468 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="JsonArrayContract contract = new JsonArrayContract(objectType)", span="1006-1006"];
m5_473 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="Type expectedParameterType = (contract.CollectionItemType != null)\r\n                    ? typeof(IEnumerable<>).MakeGenericType(contract.CollectionItemType)\r\n                    : typeof(IEnumerable)", span="1014-1016"];
m5_476 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="parameters.Length == 1 && expectedParameterType.IsAssignableFrom(parameters[0].ParameterType)", span="1022-1022"];
m5_471 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="overrideConstructor != null", span="1011-1011"];
m5_472 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="ParameterInfo[] parameters = overrideConstructor.GetParameters()", span="1013-1013"];
m5_479 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="1031-1031"];
m5_475 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="contract.HasParameterizedCreator = false", span="1020-1020"];
m5_477 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="contract.HasParameterizedCreator = true", span="1024-1024"];
m5_480 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="1034-1034"];
m5_474 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="parameters.Length == 0", span="1018-1018"];
m5_481 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="1004-1004"];
m5_334 [cluster="Newtonsoft.Json.Serialization.ReflectionAttributeProvider.ReflectionAttributeProvider(object)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.ReflectionAttributeProvider.ReflectionAttributeProvider(object)", span="43-43"];
m5_235 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="72-72"];
m5_284 [cluster="System.Type.GetConstructor(System.Type[])", file="DefaultContractResolver.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m5_172 [cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="DefaultContractResolver.cs", label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0"];
m5_728 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1610-1610"];
m5_754 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DefaultContractResolver.cs", label="NamingStrategy != null", span="1612-1612"];
m5_755 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DefaultContractResolver.cs", label="return NamingStrategy.GetPropertyName(propertyName, false);", span="1614-1614"];
m5_756 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DefaultContractResolver.cs", label="return propertyName;", span="1617-1617"];
m5_757 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1610-1610"];
m5_198 [cluster="System.Type.IsAssignableFrom(System.Type)", file="DefaultContractResolver.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m5_764 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", span="1640-1640"];
m5_765 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="DefaultContractResolver.cs", label="NamingStrategy != null", span="1642-1642"];
m5_766 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="DefaultContractResolver.cs", label="return NamingStrategy.GetDictionaryKey(dictionaryKey);", span="1644-1644"];
m5_767 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="DefaultContractResolver.cs", label="return ResolvePropertyName(dictionaryKey);", span="1647-1647"];
m5_768 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", span="1640-1640"];
m5_622 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m5_196 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="304-304"];
m5_505 [cluster="System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", file="DefaultContractResolver.cs", label="Entry System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", span="0-0"];
m5_155 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="409-409"];
m5_181 [cluster="lambda expression", file="DefaultContractResolver.cs", label="throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' must have a getter.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));", span="492-492"];
m5_189 [cluster="lambda expression", file="DefaultContractResolver.cs", label="throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' type must implement IDictionary<string, JToken>.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));", span="509-509"];
m5_243 [cluster="lambda expression", file="DefaultContractResolver.cs", label="throw new JsonSerializationException(''Cannot set value onto extension data member '{0}'. The extension data collection is null and it cannot be set.''.FormatWith(CultureInfo.InvariantCulture, member.Name));", span="561-561"];
m5_174 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="476-510"];
m5_180 [cluster="lambda expression", file="DefaultContractResolver.cs", label="!ReflectionUtils.CanReadMemberValue(m, true)", span="490-490"];
m5_190 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="476-510"];
m5_184 [cluster="lambda expression", file="DefaultContractResolver.cs", label="ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out dictionaryType)", span="498-498"];
m5_187 [cluster="lambda expression", file="DefaultContractResolver.cs", label="keyType.IsAssignableFrom(typeof(string)) && valueType.IsAssignableFrom(typeof(JToken))", span="503-503"];
m5_242 [cluster="lambda expression", file="DefaultContractResolver.cs", label="setExtensionDataDictionary == null", span="559-559"];
m5_247 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="554-569"];
m5_175 [cluster="lambda expression", file="DefaultContractResolver.cs", label="MemberTypes memberType = m.MemberType()", span="478-478"];
m5_178 [cluster="lambda expression", file="DefaultContractResolver.cs", label="!m.IsDefined(typeof(JsonExtensionDataAttribute), false)", span="485-485"];
m5_182 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Type t = ReflectionUtils.GetMemberUnderlyingType(m)", span="495-495"];
m5_177 [cluster="lambda expression", file="DefaultContractResolver.cs", label="return false;", span="481-481"];
m5_179 [cluster="lambda expression", file="DefaultContractResolver.cs", label="return false;", span="487-487"];
m5_188 [cluster="lambda expression", file="DefaultContractResolver.cs", label="return true;", span="505-505"];
m5_183 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Type dictionaryType", span="497-497"];
m5_185 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Type keyType = dictionaryType.GetGenericArguments()[0]", span="500-500"];
m5_186 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Type valueType = dictionaryType.GetGenericArguments()[1]", span="501-501"];
m5_623 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1339-1339"];
m5_241 [cluster="lambda expression", file="DefaultContractResolver.cs", label="dictionary == null", span="557-557"];
m5_244 [cluster="lambda expression", file="DefaultContractResolver.cs", label="dictionary = createExtensionDataDictionary()", span="564-564"];
m5_246 [cluster="lambda expression", file="DefaultContractResolver.cs", label="setExtensionDataDictionaryValue(dictionary, key, value)", span="568-568"];
m5_239 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="554-569"];
m5_519 [cluster="lambda expression", file="DefaultContractResolver.cs", label="namingStrategy.GetDictionaryKey(s)", span="1101-1101"];
m5_168 [cluster="lambda expression", file="DefaultContractResolver.cs", label="m.AddRange(baseType.GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly))", span="470-470"];
m5_169 [cluster="lambda expression", file="DefaultContractResolver.cs", label="m.AddRange(baseType.GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly))", span="471-471"];
m5_176 [cluster="lambda expression", file="DefaultContractResolver.cs", label="memberType != MemberTypes.Property && memberType != MemberTypes.Field", span="479-479"];
m5_97 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="300-300"];
m5_166 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="467-474"];
m5_93 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="288-288"];
m5_625 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1339-1339"];
m5_624 [cluster="lambda expression", file="DefaultContractResolver.cs", label="p.Order ?? -1", span="1339-1339"];
m5_240 [cluster="lambda expression", file="DefaultContractResolver.cs", label="object dictionary = getExtensionDataDictionary(o)", span="556-556"];
m5_255 [cluster="lambda expression", file="DefaultContractResolver.cs", label="object dictionary = getExtensionDataDictionary(o)", span="582-582"];
m5_245 [cluster="lambda expression", file="DefaultContractResolver.cs", label="setExtensionDataDictionary(o, dictionary)", span="565-565"];
m5_752 [cluster="lambda expression", file="DefaultContractResolver.cs", label="(bool)specifiedPropertyGet(o)", span="1597-1597"];
m5_737 [cluster="lambda expression", file="DefaultContractResolver.cs", label="(bool)shouldSerializeCall(o)", span="1579-1579"];
m5_518 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1101-1101"];
m5_520 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1101-1101"];
m5_167 [cluster="lambda expression", file="DefaultContractResolver.cs", label="IList<MemberInfo> m = new List<MemberInfo>()", span="469-469"];
m5_170 [cluster="lambda expression", file="DefaultContractResolver.cs", label="return m;", span="473-473"];
m5_465 [cluster="lambda expression", file="DefaultContractResolver.cs", label="namingStrategy.GetDictionaryKey(s)", span="964-964"];
m5_286 [cluster="lambda expression", file="DefaultContractResolver.cs", label="c.IsDefined(typeof(JsonConstructorAttribute), true)", span="625-625"];
m5_99 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="300-300"];
m5_98 [cluster="lambda expression", file="DefaultContractResolver.cs", label="!ReflectionUtils.IsIndexedProperty(m)", span="300-300"];
m5_171 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="467-474"];
m5_156 [cluster="lambda expression", file="DefaultContractResolver.cs", label="namingStrategy.GetDictionaryKey(s)", span="409-409"];
m5_95 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="288-288"];
m5_94 [cluster="lambda expression", file="DefaultContractResolver.cs", label="!ReflectionUtils.IsIndexedProperty(m)", span="288-288"];
m5_254 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="580-589"];
m5_256 [cluster="lambda expression", file="DefaultContractResolver.cs", label="dictionary == null", span="583-583"];
m5_258 [cluster="lambda expression", file="DefaultContractResolver.cs", label="return (IEnumerable<KeyValuePair<object, object>>)createEnumerableWrapper(dictionary);", span="588-588"];
m5_751 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1597-1597"];
m5_753 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1597-1597"];
m5_736 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="1579-1579"];
m5_738 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="1579-1579"];
m5_464 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="964-964"];
m5_466 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="964-964"];
m5_285 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="625-625"];
m5_287 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="625-625"];
m5_157 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="409-409"];
m5_257 [cluster="lambda expression", file="DefaultContractResolver.cs", label="return null;", span="585-585"];
m5_259 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="580-589"];
m5_335 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1406-1406"];
m5_714 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", color=green, community=0, file="DefaultContractResolver.cs", label="property.ItemConverter =\r\n                (propertyAttribute != null && propertyAttribute.ItemConverterType != null)\r\n                    ? JsonTypeReflector.CreateJsonConverterInstance(propertyAttribute.ItemConverterType, propertyAttribute.ItemConverterParameters)\r\n                    : null", prediction=6, span="1543-1546"];
m5_659 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="JsonPropertyAttribute propertyAttribute = JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(attributeProvider)", span="1424-1424"];
m5_713 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.ItemIsReference = (propertyAttribute != null) ? propertyAttribute._itemIsReference : null", span="1542-1542"];
m5_715 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.ItemReferenceLoopHandling = (propertyAttribute != null) ? propertyAttribute._itemReferenceLoopHandling : null", span="1547-1547"];
m5_666 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", color=green, community=0, file="DefaultContractResolver.cs", label="dataMemberAttribute != null && dataMemberAttribute.Name != null", prediction=7, span="1435-1435"];
m5_657 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="dataMemberAttribute = JsonTypeReflector.GetDataMemberAttribute((MemberInfo)memberInfo)", span="1416-1416"];
m5_658 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="dataMemberAttribute = null", span="1420-1420"];
m5_663 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", color=green, community=0, file="DefaultContractResolver.cs", label="propertyAttribute != null && propertyAttribute.PropertyName != null", prediction=6, span="1429-1429"];
m5_667 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="mappedName = dataMemberAttribute.Name", span="1437-1437"];
m5_669 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="mappedName = name", span="1443-1443"];
m5_662 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="bool hasSpecifiedName", span="1428-1428"];
m5_664 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="mappedName = propertyAttribute.PropertyName", span="1431-1431"];
m5_661 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="string mappedName", span="1427-1427"];
m5_653 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(declaringType)", span="1409-1409"];
m5_654 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="MemberInfo memberInfo = attributeProvider as MemberInfo", span="1411-1411"];
m5_660 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="JsonRequiredAttribute requiredAttribute = JsonTypeReflector.GetAttribute<JsonRequiredAttribute>(attributeProvider)", span="1425-1425"];
m5_671 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetAttribute<JsonContainerAttribute>(declaringType)", span="1447-1447"];
m5_679 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.PropertyName = namingStrategy.GetPropertyName(mappedName, hasSpecifiedName)", span="1465-1465"];
m5_680 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.PropertyName = ResolvePropertyName(mappedName)", span="1469-1469"];
m5_681 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.UnderlyingName = name", span="1472-1472"];
m5_684 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property._required = propertyAttribute._required", span="1477-1477"];
m5_685 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.Order = propertyAttribute._order", span="1478-1478"];
m5_686 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.DefaultValueHandling = propertyAttribute._defaultValueHandling", span="1479-1479"];
m5_689 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property._required = (dataMemberAttribute.IsRequired) ? Required.AllowNull : Required.Default", span="1485-1485"];
m5_690 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.Order = (dataMemberAttribute.Order != -1) ? (int?)dataMemberAttribute.Order : null", span="1486-1486"];
m5_691 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.DefaultValueHandling = (!dataMemberAttribute.EmitDefaultValue) ? (DefaultValueHandling?)DefaultValueHandling.Ignore : null", span="1487-1487"];
m5_694 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property._required = Required.Always", span="1493-1493"];
m5_696 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.HasMemberAttribute = hasMemberAttribute", span="1497-1497"];
m5_697 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="bool hasJsonIgnoreAttribute =\r\n                JsonTypeReflector.GetAttribute<JsonIgnoreAttribute>(attributeProvider) != null\r\n                    // automatically ignore extension data dictionary property if it is public\r\n                || JsonTypeReflector.GetAttribute<JsonExtensionDataAttribute>(attributeProvider) != null\r\n#if !(DOTNET || PORTABLE40 || PORTABLE)\r\n                || JsonTypeReflector.GetAttribute<NonSerializedAttribute>(attributeProvider) != null", span="1499-1504"];
m5_698 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="memberSerialization != MemberSerialization.OptIn", span="1508-1508"];
m5_700 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="hasIgnoreDataMemberAttribute = (JsonTypeReflector.GetAttribute<IgnoreDataMemberAttribute>(attributeProvider) != null)", span="1513-1513"];
m5_701 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.Ignored = (hasJsonIgnoreAttribute || hasIgnoreDataMemberAttribute)", span="1517-1517"];
m5_702 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.Ignored = (hasJsonIgnoreAttribute || !hasMemberAttribute)", span="1522-1522"];
m5_703 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.Converter = JsonTypeReflector.GetJsonConverter(attributeProvider)", span="1527-1527"];
m5_704 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.MemberConverter = JsonTypeReflector.GetJsonConverter(attributeProvider)", span="1528-1528"];
m5_705 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="DefaultValueAttribute defaultValueAttribute = JsonTypeReflector.GetAttribute<DefaultValueAttribute>(attributeProvider)", span="1530-1530"];
m5_707 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.DefaultValue = defaultValueAttribute.Value", span="1533-1533"];
m5_708 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.NullValueHandling = (propertyAttribute != null) ? propertyAttribute._nullValueHandling : null", span="1536-1536"];
m5_709 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.ReferenceLoopHandling = (propertyAttribute != null) ? propertyAttribute._referenceLoopHandling : null", span="1537-1537"];
m5_710 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.ObjectCreationHandling = (propertyAttribute != null) ? propertyAttribute._objectCreationHandling : null", span="1538-1538"];
m5_711 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.TypeNameHandling = (propertyAttribute != null) ? propertyAttribute._typeNameHandling : null", span="1539-1539"];
m5_712 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.IsReference = (propertyAttribute != null) ? propertyAttribute._isReference : null", span="1540-1540"];
m5_716 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="property.ItemTypeNameHandling = (propertyAttribute != null) ? propertyAttribute._itemTypeNameHandling : null", span="1548-1548"];
m5_722 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="memberSerialization == MemberSerialization.Fields", span="1561-1561"];
m5_673 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="propertyAttribute?.NamingStrategyType != null", span="1450-1450"];
m5_674 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="namingStrategy = JsonTypeReflector.CreateNamingStrategyInstance(propertyAttribute.NamingStrategyType, propertyAttribute.NamingStrategyParameters)", span="1452-1452"];
m5_683 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="propertyAttribute != null", span="1475-1475"];
m5_656 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="dataContractAttribute != null && memberInfo != null", span="1414-1414"];
m5_688 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="dataMemberAttribute != null", span="1483-1483"];
m5_668 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="hasSpecifiedName = true", span="1438-1438"];
m5_670 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="hasSpecifiedName = false", span="1444-1444"];
m5_665 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="hasSpecifiedName = true", span="1432-1432"];
m5_717 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="allowNonPublicAccess = false", span="1550-1550"];
m5_719 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="allowNonPublicAccess = true", span="1554-1554"];
m5_721 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="allowNonPublicAccess = true", span="1559-1559"];
m5_723 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="allowNonPublicAccess = true", span="1563-1563"];
m5_655 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="DataMemberAttribute dataMemberAttribute", span="1413-1413"];
m5_693 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="requiredAttribute != null", span="1491-1491"];
m5_672 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="NamingStrategy namingStrategy", span="1449-1449"];
m5_675 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="containerAttribute?.NamingStrategyType != null", span="1454-1454"];
m5_676 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="namingStrategy = JsonTypeReflector.GetContainerNamingStrategy(containerAttribute)", span="1456-1456"];
m5_677 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="namingStrategy = NamingStrategy", span="1460-1460"];
m5_678 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="namingStrategy != null", span="1463-1463"];
m5_682 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="bool hasMemberAttribute = false", span="1474-1474"];
m5_687 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="hasMemberAttribute = true", span="1480-1480"];
m5_692 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="hasMemberAttribute = true", span="1488-1488"];
m5_695 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="hasMemberAttribute = true", span="1494-1494"];
m5_699 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="bool hasIgnoreDataMemberAttribute = false", span="1510-1510"];
m5_706 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="defaultValueAttribute != null", span="1531-1531"];
m5_720 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label=hasMemberAttribute, span="1557-1557"];
m5_718 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="(DefaultMembersSearchFlags & BindingFlags.NonPublic) == BindingFlags.NonPublic", span="1552-1552"];
m5_724 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1406-1406"];
m5_46 [cluster="object.GetType()", file="DefaultContractResolver.cs", label="Entry object.GetType()", span="0-0"];
m5_441 [cluster="System.Type.BaseType()", file="DefaultContractResolver.cs", label="Entry System.Type.BaseType()", span="171-171"];
m5_92 [cluster="System.Type.AssignableToTypeName(string, out System.Type)", file="DefaultContractResolver.cs", label="Entry System.Type.AssignableToTypeName(string, out System.Type)", span="553-553"];
m5_293 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m5_108 [cluster="System.Type.GetGenericTypeDefinition()", file="DefaultContractResolver.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m5_251 [cluster="System.Func<TResult>.Invoke()", file="DefaultContractResolver.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m5_482 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="117-117"];
m5_421 [cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", span="381-381"];
m5_47 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m5_91 [cluster="System.Reflection.MemberInfo.MemberType()", file="DefaultContractResolver.cs", label="Entry System.Reflection.MemberInfo.MemberType()", span="107-107"];
m5_164 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m5_750 [cluster="System.Type.GetField(string)", file="DefaultContractResolver.cs", label="Entry System.Type.GetField(string)", span="0-0"];
m5_192 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m5_483 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="1042-1042"];
m5_485 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="1045-1045"];
m5_484 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs", label="JsonPrimitiveContract contract = new JsonPrimitiveContract(objectType)", span="1044-1044"];
m5_486 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="1047-1047"];
m5_487 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="1042-1042"];
m5_85 [cluster="System.Collections.Generic.List<T>.List()", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_233 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="74-74"];
m5_556 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="92-92"];
m5_557 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="1222-1222"];
m5_569 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="TypeConverter converter = ConvertUtils.GetConverter(type)", span="1225-1225"];
m5_573 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="type == typeof(Type) || type.IsSubclassOf(typeof(Type))", span="1240-1240"];
m5_570 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="converter != null\r\n                && !(converter is ComponentConverter)\r\n                && !(converter is ReferenceConverter)\r\n                && converter.GetType() != typeof(TypeConverter)", span="1228-1231"];
m5_572 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="return true;", span="1235-1235"];
m5_574 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="return true;", span="1242-1242"];
m5_575 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="return false;", span="1245-1245"];
m5_571 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="converter.CanConvertTo(typeof(string))", span="1233-1233"];
m5_576 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="1222-1222"];
m5_308 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="125-125"];
m5_555 [cluster="System.Type.IsSubclassOf(System.Type)", file="DefaultContractResolver.cs", label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0"];
m5_420 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="1248-1248"];
m5_582 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Invalid attribute. Both '{0}' and '{1}' in type '{2}' have '{3}'.''.FormatWith(CultureInfo.InvariantCulture, method, currentCallback, GetClrTypeFullName(method.DeclaringType), attributeType));", span="1257-1257"];
m5_584 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Invalid Callback. Method '{3}' in type '{2}' has both '{0}' and '{1}'.''.FormatWith(CultureInfo.InvariantCulture, prevAttributeType, attributeType, GetClrTypeFullName(method.DeclaringType), method));", span="1262-1262"];
m5_586 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Virtual Method '{0}' of type '{1}' cannot be marked with '{2}' attribute.''.FormatWith(CultureInfo.InvariantCulture, method, GetClrTypeFullName(method.DeclaringType), attributeType));", span="1267-1267"];
m5_588 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must return void.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method));", span="1272-1272"];
m5_591 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Serialization Error Callback '{1}' in type '{0}' must have two parameters of type '{2}' and '{3}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext), typeof(ErrorContext)));", span="1279-1279"];
m5_593 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must have a single parameter of type '{2}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext)));", span="1286-1286"];
m5_581 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="currentCallback != null", span="1255-1255"];
m5_583 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="prevAttributeType != null", span="1260-1260"];
m5_585 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="method.IsVirtual", span="1265-1265"];
m5_587 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="method.ReturnType != typeof(void)", span="1270-1270"];
m5_590 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="parameters == null || parameters.Length != 2 || parameters[0].ParameterType != typeof(StreamingContext) || parameters[1].ParameterType != typeof(ErrorContext)", span="1277-1277"];
m5_592 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="parameters == null || parameters.Length != 1 || parameters[0].ParameterType != typeof(StreamingContext)", span="1284-1284"];
m5_579 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="!method.IsDefined(attributeType, false)", span="1250-1250"];
m5_589 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="attributeType == typeof(OnErrorAttribute)", span="1275-1275"];
m5_594 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="prevAttributeType = attributeType", span="1290-1290"];
m5_580 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="return false;", span="1252-1252"];
m5_595 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="return true;", span="1292-1292"];
m5_596 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="1248-1248"];
m5_553 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", span="1202-1202"];
m5_559 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="DefaultContractResolver.cs", label="PrimitiveTypeCode typeCode = ConvertUtils.GetTypeCode(t)", span="1204-1204"];
m5_560 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="DefaultContractResolver.cs", label="return (typeCode != PrimitiveTypeCode.Empty && typeCode != PrimitiveTypeCode.Object);", span="1206-1206"];
m5_561 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", span="1202-1202"];
m5_597 [cluster="string.FormatWith(System.IFormatProvider, object, object, object, object)", file="DefaultContractResolver.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object, object, object)", span="62-62"];
m5_0 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="60-60"];
m5_1 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DefaultContractResolver.cs", label="_resolverType = resolverType", span="62-62"];
m5_2 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DefaultContractResolver.cs", label="_contractType = contractType", span="63-63"];
m5_3 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="60-60"];
m5_336 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="746-746"];
m5_337 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DefaultContractResolver.cs", label="return JsonTypeReflector.GetJsonConverter(objectType);", span="748-748"];
m5_338 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="746-746"];
m5_158 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)", span="62-62"];
m5_419 [cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", file="DefaultContractResolver.cs", label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0"];
m5_633 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", span="51-51"];
m5_339 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", span="158-158"];
m5_626 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="1348-1348"];
m5_628 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label=DynamicCodeGeneration, span="1354-1354"];
m5_627 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="IValueProvider valueProvider", span="1351-1351"];
m5_629 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="valueProvider = new DynamicValueProvider(member)", span="1356-1356"];
m5_630 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="valueProvider = new ReflectionValueProvider(member)", span="1360-1360"];
m5_631 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="return valueProvider;", span="1368-1368"];
m5_632 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="1348-1348"];
m5_488 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="42-42"];
m5_270 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m5_726 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", span="186-186"];
m5_758 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", span="1625-1625"];
m5_759 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", file="DefaultContractResolver.cs", label="NamingStrategy != null", span="1627-1627"];
m5_760 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", file="DefaultContractResolver.cs", label="return NamingStrategy.GetExtensionDataName(extensionDataName);", span="1629-1629"];
m5_761 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", file="DefaultContractResolver.cs", label="return extensionDataName;", span="1632-1632"];
m5_762 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", span="1625-1625"];
m5_605 [cluster="string.Format(System.IFormatProvider, string, params object[])", file="DefaultContractResolver.cs", label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0"];
m5_195 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="451-451"];
m5_163 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="934-934"];
m5_434 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs", label="Type current = type", span="938-938"];
m5_433 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs", label="List<Type> ret = new List<Type>()", span="936-936"];
m5_436 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs", label="ret.Add(current)", span="941-941"];
m5_435 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs", label="current != null && current != typeof(object)", span="939-939"];
m5_437 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs", label="current = current.BaseType()", span="942-942"];
m5_439 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs", label="return ret;", span="947-947"];
m5_438 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs", label="ret.Reverse()", span="946-946"];
m5_440 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="934-934"];
m5_621 [cluster="Newtonsoft.Json.Utilities.PropertyNameTable.Add(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.PropertyNameTable.Add(string)", span="76-76"];
m5_749 [cluster="System.Type.GetProperty(string)", file="DefaultContractResolver.cs", label="Entry System.Type.GetProperty(string)", span="0-0"];
m5_88 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m5_418 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", span="897-897"];
m5_423 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="DefaultContractResolver.cs", label="t.IsGenericType() && t.GetGenericTypeDefinition() == typeof(ConcurrentDictionary<,>)", span="901-901"];
m5_425 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="DefaultContractResolver.cs", label="t.Name == FSharpUtils.FSharpSetTypeName || t.Name == FSharpUtils.FSharpMapTypeName", span="907-907"];
m5_424 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="DefaultContractResolver.cs", label="return true;", span="903-903"];
m5_426 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="DefaultContractResolver.cs", label="return true;", span="909-909"];
m5_427 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="DefaultContractResolver.cs", label="return false;", span="913-913"];
m5_428 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", span="897-897"];
m5_271 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", span="617-617"];
m5_272 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", file="DefaultContractResolver.cs", label="return GetEnumerator();", span="619-619"];
m5_273 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", span="617-617"];
m5_7 [cluster="System.Type.GetHashCode()", file="DefaultContractResolver.cs", label="Entry System.Type.GetHashCode()", span="0-0"];
m5_598 [cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="DefaultContractResolver.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57"];
m5_146 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1311-1311"];
m5_608 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", color=green, community=0, file="DefaultContractResolver.cs", label="throw new JsonSerializationException(''Null collection of seralizable members returned.'');", prediction=9, span="1316-1316"];
m5_607 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="members == null", span="1314-1314"];
m5_606 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="List<MemberInfo> members = GetSerializableMembers(type)", span="1313-1313"];
m5_609 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="JsonPropertyCollection properties = new JsonPropertyCollection(type)", span="1319-1319"];
m5_618 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="return orderedProperties;", span="1340-1340"];
m5_610 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label=members, span="1321-1321"];
m5_616 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="properties.AddProperty(property)", span="1335-1335"];
m5_617 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="IList<JsonProperty> orderedProperties = properties.OrderBy(p => p.Order ?? -1).ToList()", span="1339-1339"];
m5_611 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="JsonProperty property = CreateProperty(member, memberSerialization)", span="1323-1323"];
m5_613 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="DefaultContractResolverState state = GetState()", span="1327-1327"];
m5_612 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property != null", span="1325-1325"];
m5_615 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.PropertyName = state.NameTable.Add(property.PropertyName)", span="1332-1332"];
m5_614 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="state.NameTable", span="1330-1330"];
m5_619 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1311-1311"];
m5_49 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m5_228 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="287-287"];
m5_261 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", span="603-603"];
m5_262 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="DefaultContractResolver.cs", label="ValidationUtils.ArgumentNotNull(e, nameof(e))", span="605-605"];
m5_263 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="DefaultContractResolver.cs", label="_e = e", span="606-606"];
m5_264 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", span="603-603"];
m5_775 [file="DefaultContractResolver.cs", label="Newtonsoft.Json.Serialization.DefaultContractResolver", span=""];
m5_779 [file="DefaultContractResolver.cs", label="System.Reflection.MemberInfo", span=""];
m5_778 [file="DefaultContractResolver.cs", label=setExtensionDataDictionary, span=""];
m5_780 [file="DefaultContractResolver.cs", label=createExtensionDataDictionary, span=""];
m5_781 [file="DefaultContractResolver.cs", label=setExtensionDataDictionaryValue, span=""];
m5_785 [file="DefaultContractResolver.cs", label=namingStrategy, span=""];
m5_774 [file="DefaultContractResolver.cs", label="ref Newtonsoft.Json.Serialization.ResolverContractKey", span=""];
m5_772 [file="DefaultContractResolver.cs", label="out Newtonsoft.Json.Serialization.ResolverContractKey", span=""];
m5_777 [file="DefaultContractResolver.cs", label=getExtensionDataDictionary, span=""];
m5_787 [file="DefaultContractResolver.cs", label=specifiedPropertyGet, span=""];
m5_786 [file="DefaultContractResolver.cs", label=shouldSerializeCall, span=""];
m5_784 [file="DefaultContractResolver.cs", label=namingStrategy, span=""];
m5_773 [file="DefaultContractResolver.cs", label="Newtonsoft.Json.Serialization.ResolverContractKey", span=""];
m5_776 [file="DefaultContractResolver.cs", label=namingStrategy, span=""];
m5_782 [file="DefaultContractResolver.cs", label=createEnumerableWrapper, span=""];
m5_783 [file="DefaultContractResolver.cs", label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", span=""];
m6_28 [cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.Set(TFirst, TSecond)", file="DefaultReferenceResolver.cs", label="Entry Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.Set(TFirst, TSecond)", span="61-61"];
m6_26 [cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetBySecond(TSecond, out TFirst)", file="DefaultReferenceResolver.cs", label="Entry Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetBySecond(TSecond, out TFirst)", span="91-91"];
m6_17 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.GetReference(object, object)", file="DefaultReferenceResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultReferenceResolver.GetReference(object, object)", span="62-62"];
m6_18 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.GetReference(object, object)", file="DefaultReferenceResolver.cs", label="BidirectionalDictionary<string, object> mappings = GetMappings(context)", span="64-64"];
m6_20 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.GetReference(object, object)", file="DefaultReferenceResolver.cs", label="!mappings.TryGetBySecond(value, out reference)", span="67-67"];
m6_23 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.GetReference(object, object)", file="DefaultReferenceResolver.cs", label="mappings.Set(reference, value)", span="71-71"];
m6_19 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.GetReference(object, object)", file="DefaultReferenceResolver.cs", label="string reference", span="66-66"];
m6_21 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.GetReference(object, object)", file="DefaultReferenceResolver.cs", label="_referenceCount++", span="69-69"];
m6_24 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.GetReference(object, object)", file="DefaultReferenceResolver.cs", label="return reference;", span="74-74"];
m6_22 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.GetReference(object, object)", file="DefaultReferenceResolver.cs", label="reference = _referenceCount.ToString(CultureInfo.InvariantCulture)", span="70-70"];
m6_25 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.GetReference(object, object)", file="DefaultReferenceResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultReferenceResolver.GetReference(object, object)", span="62-62"];
m6_29 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.AddReference(object, string, object)", file="DefaultReferenceResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultReferenceResolver.AddReference(object, string, object)", span="77-77"];
m6_30 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.AddReference(object, string, object)", file="DefaultReferenceResolver.cs", label="GetMappings(context).Set(reference, value)", span="79-79"];
m6_31 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.AddReference(object, string, object)", file="DefaultReferenceResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultReferenceResolver.AddReference(object, string, object)", span="77-77"];
m6_27 [cluster="int.ToString(System.IFormatProvider)", file="DefaultReferenceResolver.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m6_16 [cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetByFirst(TFirst, out TSecond)", file="DefaultReferenceResolver.cs", label="Entry Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetByFirst(TFirst, out TSecond)", span="86-86"];
m6_32 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.IsReferenced(object, object)", file="DefaultReferenceResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultReferenceResolver.IsReferenced(object, object)", span="82-82"];
m6_33 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.IsReferenced(object, object)", file="DefaultReferenceResolver.cs", label="string reference", span="84-84"];
m6_34 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.IsReferenced(object, object)", file="DefaultReferenceResolver.cs", label="return GetMappings(context).TryGetBySecond(value, out reference);", span="85-85"];
m6_35 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.IsReferenced(object, object)", file="DefaultReferenceResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultReferenceResolver.IsReferenced(object, object)", span="82-82"];
m6_11 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.ResolveReference(object, string)", file="DefaultReferenceResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultReferenceResolver.ResolveReference(object, string)", span="55-55"];
m6_12 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.ResolveReference(object, string)", file="DefaultReferenceResolver.cs", label="object value", span="57-57"];
m6_13 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.ResolveReference(object, string)", file="DefaultReferenceResolver.cs", label="GetMappings(context).TryGetByFirst(reference, out value)", span="58-58"];
m6_14 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.ResolveReference(object, string)", file="DefaultReferenceResolver.cs", label="return value;", span="59-59"];
m6_15 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.ResolveReference(object, string)", file="DefaultReferenceResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultReferenceResolver.ResolveReference(object, string)", span="55-55"];
m6_10 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="DefaultReferenceResolver.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m6_0 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.GetMappings(object)", file="DefaultReferenceResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultReferenceResolver.GetMappings(object)", span="35-35"];
m6_7 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.GetMappings(object)", file="DefaultReferenceResolver.cs", label="return internalSerializer.DefaultReferenceMappings;", span="52-52"];
m6_8 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.GetMappings(object)", file="DefaultReferenceResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultReferenceResolver.GetMappings(object)", span="35-35"];
m6_9 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.GetInternalSerializer()", file="DefaultReferenceResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.GetInternalSerializer()", span="227-227"];
m6_36 [file="DefaultReferenceResolver.cs", label="Newtonsoft.Json.Serialization.DefaultReferenceResolver", span=""];
m7_9 [cluster="Unk.AreEqual", file="DictionaryWrapper.cs", label="Entry Unk.AreEqual", span=""];
m7_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertJsonToXml.Example()", file="DictionaryWrapper.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertJsonToXml.Example()", span="38-38"];
m7_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertJsonToXml.Example()", file="DictionaryWrapper.cs", label="string json = @''{\r\n              '@Id': 1,\r\n              'Email': 'james@example.com',\r\n              'Active': true,\r\n              'CreatedDate': '2013-01-20T00:00:00Z',\r\n              'Roles': [\r\n                'User',\r\n                'Admin'\r\n              ],\r\n              'Team': {\r\n                '@Id': 2,\r\n                'Name': 'Software Developers',\r\n                'Description': 'Creators of fine software products and services.'\r\n              }\r\n            }''", span="41-55"];
m7_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertJsonToXml.Example()", file="DictionaryWrapper.cs", label="XNode node = JsonConvert.DeserializeXNode(json, ''Root'')", span="57-57"];
m7_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertJsonToXml.Example()", file="DictionaryWrapper.cs", label="Console.WriteLine(node.ToString())", span="59-59"];
m7_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertJsonToXml.Example()", file="DictionaryWrapper.cs", label="Assert.AreEqual(@''<Root Id=''''1''''>\r\n  <Email>james@example.com</Email>\r\n  <Active>true</Active>\r\n  <CreatedDate>2013-01-20T00:00:00Z</CreatedDate>\r\n  <Roles>User</Roles>\r\n  <Roles>Admin</Roles>\r\n  <Team Id=''''2''''>\r\n    <Name>Software Developers</Name>\r\n    <Description>Creators of fine software products and services.</Description>\r\n  </Team>\r\n</Root>'', node.ToString())", span="73-83"];
m7_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertJsonToXml.Example()", file="DictionaryWrapper.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertJsonToXml.Example()", span="38-38"];
m7_7 [cluster="Unk.ToString", file="DictionaryWrapper.cs", label="Entry Unk.ToString", span=""];
m7_6 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", file="DictionaryWrapper.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", span="1103-1103"];
m7_8 [cluster="Unk.WriteLine", file="DictionaryWrapper.cs", label="Entry Unk.WriteLine", span=""];
m8_15 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m8_126 [cluster="Newtonsoft.Json.Utilities.EnumUtils.TryResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string, out string)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.TryResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string, out string)", span="269-269"];
m8_152 [cluster="Newtonsoft.Json.Utilities.EnumUtils.TryResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string, out string)", file="EnumUtils.cs", label="map.TryGetBySecond(enumText, out resolvedEnumName)", span="271-271"];
m8_155 [cluster="Newtonsoft.Json.Utilities.EnumUtils.TryResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string, out string)", file="EnumUtils.cs", label="return false;", span="277-277"];
m8_153 [cluster="Newtonsoft.Json.Utilities.EnumUtils.TryResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string, out string)", file="EnumUtils.cs", label="return true;", span="273-273"];
m8_154 [cluster="Newtonsoft.Json.Utilities.EnumUtils.TryResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string, out string)", file="EnumUtils.cs", label="resolvedEnumName = null", span="276-276"];
m8_156 [cluster="Newtonsoft.Json.Utilities.EnumUtils.TryResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string, out string)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Utilities.EnumUtils.TryResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string, out string)", span="269-269"];
m8_16 [cluster="Unk.Select", file="EnumUtils.cs", label="Entry Unk.Select", span=""];
m8_25 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.GetHashCode()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.GetHashCode()", span="87-87"];
m8_28 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", file="EnumUtils.cs", label="!(obj is TypeNameKey)", span="94-94"];
m8_29 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", file="EnumUtils.cs", label="return false;", span="95-95"];
m8_30 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", file="EnumUtils.cs", label="return Equals((TypeNameKey)obj);", span="97-97"];
m8_31 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", span="92-92"];
m8_26 [cluster="string.GetHashCode()", file="EnumUtils.cs", label="Entry string.GetHashCode()", span="0-0"];
m8_27 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", span="92-92"];
m8_35 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(string, string)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(string, string)", span="114-114"];
m8_34 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", span="100-100"];
m8_32 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", span="100-100"];
m8_33 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="EnumUtils.cs", label="return (AssemblyName == other.AssemblyName && TypeName == other.TypeName);", span="102-102"];
m8_36 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(string, string)", file="EnumUtils.cs", label="return _typeCache.Get(new TypeNameKey(assemblyName, typeName));", span="116-116"];
m8_38 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="19-19"];
m8_37 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(string, string)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(string, string)", span="114-114"];
m8_39 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", span="126-126"];
m8_48 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="EnumUtils.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m8_77 [cluster="Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", span="42-42"];
m8_97 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", span="188-188"];
m8_122 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="throw new FormatException(''Integer string '{0}' is not allowed.''.FormatWith(CultureInfo.InvariantCulture, enumText));", span="235-235"];
m8_121 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label=isNumber, span="233-233"];
m8_107 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="int i = 0", span="206-206"];
m8_117 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="i < finalEnumText.Length", span="224-224"];
m8_100 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="string finalEnumText", span="195-195"];
m8_98 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="enumText == string.Empty && isNullable", span="190-190"];
m8_101 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="BidirectionalDictionary<string, string> map = EnumMemberNamesPerType.Get(t)", span="197-197"];
m8_103 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="TryResolvedEnumName(map, enumText, out resolvedEnumName)", span="199-199"];
m8_105 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="enumText.IndexOf(',') != -1", span="203-203"];
m8_106 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="string[] names = enumText.Split(',')", span="205-205"];
m8_113 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="finalEnumText = enumText", span="219-219"];
m8_114 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label=disallowValue, span="221-221"];
m8_123 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="return Enum.Parse(t, finalEnumText, true);", span="240-240"];
m8_99 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="return null;", span="192-192"];
m8_115 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="bool isNumber = true", span="223-223"];
m8_119 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="isNumber = false", span="228-228"];
m8_108 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="i < names.Length", span="206-206"];
m8_109 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="string name = names[i].Trim()", span="208-208"];
m8_110 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="names[i] = TryResolvedEnumName(map, name, out resolvedEnumName)\r\n                        ? resolvedEnumName\r\n                        : name", span="210-212"];
m8_111 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="i++", span="206-206"];
m8_116 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="int i = 0", span="224-224"];
m8_120 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="i++", span="224-224"];
m8_118 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="!char.IsNumber(finalEnumText[i])", span="226-226"];
m8_102 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="string resolvedEnumName", span="198-198"];
m8_104 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="finalEnumText = resolvedEnumName", span="201-201"];
m8_112 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="finalEnumText = string.Join('', '', names)", span="215-215"];
m8_124 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, bool, System.Type)", span="188-188"];
m8_13 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", span="42-42"];
m8_71 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="EnumUtils.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m8_47 [cluster="System.Collections.Generic.List<T>.List()", file="EnumUtils.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m8_0 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", span="42-42"];
m8_2 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="EnumUtils.cs", label="string typeName = typeNameKey.TypeName", span="45-45"];
m8_1 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="EnumUtils.cs", label="string assemblyName = typeNameKey.AssemblyName", span="44-44"];
m8_9 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="EnumUtils.cs", label="type == null", span="65-65"];
m8_3 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="EnumUtils.cs", label="assemblyName != null", span="47-47"];
m8_10 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="EnumUtils.cs", label="throw new JsonSerializationException(''Could not find type '{0}' in assembly '{1}'.''.FormatWith(CultureInfo.InvariantCulture, typeName, assembly.FullName));", span="66-66"];
m8_5 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="EnumUtils.cs", label="assembly = Assembly.LoadWithPartialName(assemblyName)", span="55-55"];
m8_8 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="EnumUtils.cs", label="Type type = assembly.GetType(typeName)", span="64-64"];
m8_7 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="EnumUtils.cs", label="throw new JsonSerializationException(''Could not load assembly '{0}'.''.FormatWith(CultureInfo.InvariantCulture, assemblyName));", span="62-62"];
m8_4 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="EnumUtils.cs", label="Assembly assembly", span="49-49"];
m8_6 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="EnumUtils.cs", label="assembly == null", span="61-61"];
m8_11 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="EnumUtils.cs", label="return type;", span="68-68"];
m8_12 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="EnumUtils.cs", label="return Type.GetType(typeName);", span="72-72"];
m8_18 [cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetBySecond(TSecond, out TFirst)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetBySecond(TSecond, out TFirst)", span="91-91"];
m8_130 [cluster="string.Join(string, params string[])", file="EnumUtils.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m8_41 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", file="EnumUtils.cs", label="typeName = serializedType.FullName", span="130-130"];
m8_79 [cluster="string.Format(System.IFormatProvider, string, object, object, object)", file="EnumUtils.cs", label="Entry string.Format(System.IFormatProvider, string, object, object, object)", span="0-0"];
m8_127 [cluster="string.IndexOf(char)", file="EnumUtils.cs", label="Entry string.IndexOf(char)", span="0-0"];
m8_40 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", file="EnumUtils.cs", label="assemblyName = serializedType.Assembly.FullName", span="129-129"];
m8_129 [cluster="string.Trim()", file="EnumUtils.cs", label="Entry string.Trim()", span="0-0"];
m8_131 [cluster="char.IsNumber(char)", file="EnumUtils.cs", label="Entry char.IsNumber(char)", span="0-0"];
m8_17 [cluster="Unk.SingleOrDefault", file="EnumUtils.cs", label="Entry Unk.SingleOrDefault", span=""];
m8_19 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="EnumUtils.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m8_20 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="EnumUtils.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m8_21 [cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.Set(TFirst, TSecond)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.Set(TFirst, TSecond)", span="61-61"];
m8_22 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="56-56"];
m8_132 [cluster="System.FormatException.FormatException(string)", file="EnumUtils.cs", label="Entry System.FormatException.FormatException(string)", span="0-0"];
m8_72 [cluster="Unk.nameof", file="EnumUtils.cs", label="Entry Unk.nameof", span=""];
m8_89 [cluster="System.Collections.Generic.List<T>.Add(T)", file="EnumUtils.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m8_133 [cluster="System.Enum.Parse(System.Type, string, bool)", file="EnumUtils.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m8_88 [cluster="System.Reflection.FieldInfo.GetValue(object)", file="EnumUtils.cs", label="Entry System.Reflection.FieldInfo.GetValue(object)", span="0-0"];
m8_128 [cluster="string.Split(params char[])", file="EnumUtils.cs", label="Entry string.Split(params char[])", span="0-0"];
m8_46 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<T>()", file="EnumUtils.cs", label="Newtonsoft.Json.Serialization.DefaultSerializationBinder", span=""];
m8_53 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<T>()", file="EnumUtils.cs", label="return GetNamesAndValues<ulong>(typeof(T));", span="111-111"];
m8_54 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<T>()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<T>()", span="109-109"];
m8_73 [cluster="System.Type.IsEnum()", file="EnumUtils.cs", label="Entry System.Type.IsEnum()", span="189-189"];
m8_125 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="52-52"];
m8_42 [cluster="string.FormatWith(System.IFormatProvider, object)", file="EnumUtils.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m8_44 [cluster="System.Enum.GetUnderlyingType(System.Type)", file="EnumUtils.cs", label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", span=""];
m8_150 [cluster="Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetByFirst(TFirst, out TSecond)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Utilities.BidirectionalDictionary<TFirst, TSecond>.TryGetByFirst(TFirst, out TSecond)", span="86-86"];
m8_151 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", span="148-148"];
m8_14 [cluster="System.Reflection.Assembly.LoadWithPartialName(string)", file="EnumUtils.cs", label="Entry System.Reflection.Assembly.LoadWithPartialName(string)", span="0-0"];
m8_134 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", span="243-243"];
m8_137 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="EnumUtils.cs", label="int i = 0", span="248-248"];
m8_136 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="EnumUtils.cs", label="string[] names = enumText.Split(',')", span="247-247"];
m8_138 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="EnumUtils.cs", label="i < names.Length", span="248-248"];
m8_139 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="EnumUtils.cs", label="string name = names[i].Trim()", span="250-250"];
m8_145 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="EnumUtils.cs", label="names[i] = resolvedEnumName", span="261-261"];
m8_146 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="EnumUtils.cs", label="i++", span="248-248"];
m8_135 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="EnumUtils.cs", label="BidirectionalDictionary<string, string> map = EnumMemberNamesPerType.Get(enumType)", span="245-245"];
m8_147 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="EnumUtils.cs", label="string finalName = string.Join('', '', names)", span="264-264"];
m8_140 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="EnumUtils.cs", label="string resolvedEnumName", span="252-252"];
m8_141 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="EnumUtils.cs", label="map.TryGetByFirst(name, out resolvedEnumName)", span="253-253"];
m8_142 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="EnumUtils.cs", label="resolvedEnumName = resolvedEnumName ?? name", span="254-254"];
m8_143 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="EnumUtils.cs", label=camelCaseText, span="256-256"];
m8_144 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="EnumUtils.cs", label="resolvedEnumName = StringUtils.ToCamelCase(resolvedEnumName)", span="258-258"];
m8_148 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="EnumUtils.cs", label="return finalName;", span="266-266"];
m8_149 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", span="243-243"];
m8_49 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="EnumUtils.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m8_74 [cluster="System.ArgumentException.ArgumentException(string, string)", file="EnumUtils.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m8_55 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", span="119-119"];
m8_59 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", color=green, community=0, file="EnumUtils.cs", label="throw new ArgumentException(''Type {0} is not an Enum.''.FormatWith(CultureInfo.InvariantCulture, enumType), nameof(enumType));", prediction=10, span="128-128"];
m8_58 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="EnumUtils.cs", label="!enumType.IsEnum()", span="126-126"];
m8_67 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", color=green, community=0, file="EnumUtils.cs", label="throw new InvalidOperationException(\r\n                        string.Format(CultureInfo.InvariantCulture, ''Value from enum with the underlying type of {0} cannot be added to dictionary with a value type of {1}. Value was too large: {2}'',\r\n                            Enum.GetUnderlyingType(enumType), typeof(TUnderlyingType), Convert.ToUInt64(enumValues[i], CultureInfo.InvariantCulture)), e);", prediction=10, span="144-146"];
m8_60 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="EnumUtils.cs", label="IList<object> enumValues = GetValues(enumType)", span="131-131"];
m8_63 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="EnumUtils.cs", label="int i = 0", span="136-136"];
m8_66 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="EnumUtils.cs", label=OverflowException, span="142-142"];
m8_56 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="EnumUtils.cs", label="enumType == null", span="121-121"];
m8_57 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="EnumUtils.cs", label="throw new ArgumentNullException(nameof(enumType));", span="123-123"];
m8_61 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="EnumUtils.cs", label="IList<string> enumNames = GetNames(enumType)", span="132-132"];
m8_62 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="EnumUtils.cs", label="IList<EnumValue<TUnderlyingType>> nameValues = new List<EnumValue<TUnderlyingType>>()", span="134-134"];
m8_69 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="EnumUtils.cs", label="return nameValues;", span="150-150"];
m8_64 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="EnumUtils.cs", label="i < enumValues.Count", span="136-136"];
m8_65 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="EnumUtils.cs", label="nameValues.Add(new EnumValue<TUnderlyingType>(enumNames[i], (TUnderlyingType)Convert.ChangeType(enumValues[i], typeof(TUnderlyingType), CultureInfo.CurrentCulture)))", span="140-140"];
m8_68 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="EnumUtils.cs", label="i++", span="136-136"];
m8_70 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", span="119-119"];
m8_45 [cluster="System.Convert.ToUInt64(object, System.IFormatProvider)", file="EnumUtils.cs", label="ref Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", span=""];
m8_78 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="EnumUtils.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m8_76 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", span="171-171"];
m8_91 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", color=green, community=0, file="EnumUtils.cs", label="throw new ArgumentException(''Type ''' + enumType.Name + ''' is not an enum.'');", prediction=12, span="175-175"];
m8_90 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", file="EnumUtils.cs", label="!enumType.IsEnum()", span="173-173"];
m8_93 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", file="EnumUtils.cs", label="enumType.GetFields(BindingFlags.Public | BindingFlags.Static)", span="180-180"];
m8_92 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", file="EnumUtils.cs", label="List<string> values = new List<string>()", span="178-178"];
m8_95 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", file="EnumUtils.cs", label="return values;", span="185-185"];
m8_94 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", file="EnumUtils.cs", label="values.Add(field.Name)", span="182-182"];
m8_96 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", span="171-171"];
m8_50 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="97-97"];
m8_52 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="97-97"];
m8_51 [cluster="lambda expression", file="EnumUtils.cs", label="v.Value == 0", span="97-97"];
m8_23 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.GetHashCode()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.GetHashCode()", span="87-87"];
m8_24 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.GetHashCode()", file="EnumUtils.cs", label="return ((AssemblyName != null) ? AssemblyName.GetHashCode() : 0) ^ ((TypeName != null) ? TypeName.GetHashCode() : 0);", span="89-89"];
m8_43 [cluster="object.GetType()", file="EnumUtils.cs", label="out Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", span=""];
m8_75 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", span="153-153"];
m8_81 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", color=green, community=0, file="EnumUtils.cs", label="throw new ArgumentException(''Type ''' + enumType.Name + ''' is not an enum.'');", prediction=13, span="157-157"];
m8_80 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="EnumUtils.cs", label="!enumType.IsEnum()", span="155-155"];
m8_83 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="EnumUtils.cs", label="enumType.GetFields(BindingFlags.Public | BindingFlags.Static)", span="162-162"];
m8_84 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="EnumUtils.cs", label="object value = field.GetValue(enumType)", span="164-164"];
m8_82 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="EnumUtils.cs", label="List<object> values = new List<object>()", span="160-160"];
m8_86 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="EnumUtils.cs", label="return values;", span="168-168"];
m8_85 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="EnumUtils.cs", label="values.Add(value)", span="165-165"];
m8_87 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", span="153-153"];
m9_10 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="366-366"];
m9_562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDecimalBadContent()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDecimalBadContent()", span="766-766"];
m9_564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDecimalBadContent()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 2.'')", span="770-770"];
m9_563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDecimalBadContent()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="768-768"];
m9_565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDecimalBadContent()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDecimalBadContent()", span="766-766"];
m9_533 [cluster="System.Convert.ToBase64String(byte[])", file="ExceptionHandlingTests.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m9_681 [cluster="System.Text.UTF8Encoding.UTF8Encoding(bool)", file="ExceptionHandlingTests.cs", label="Entry System.Text.UTF8Encoding.UTF8Encoding(bool)", span="0-0"];
m9_411 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_AdditionalBadData()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_AdditionalBadData()", span="581-581"];
m9_414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_AdditionalBadData()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsString(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 5.'')", span="587-587"];
m9_413 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_AdditionalBadData()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="585-585"];
m9_412 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_AdditionalBadData()", file="ExceptionHandlingTests.cs", label="string json = @''falseeeee''", span="583-583"];
m9_415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_AdditionalBadData()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_AdditionalBadData()", span="581-581"];
m9_73 [cluster="Unk.IsTrue", file="ExceptionHandlingTests.cs", label="Entry Unk.IsTrue", span=""];
m9_656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_Numbers_NotString()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_Numbers_NotString()", span="895-895"];
m9_659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_Numbers_NotString()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsDateTime();\r\n            }, ''Unexpected character encountered while parsing value: 5. Path '', line 1, position 2.'')", span="900-903"];
m9_660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_Numbers_NotString()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsDateTime();\r\n            }, ''Unexpected character encountered while parsing value: 6. Path '', line 1, position 3.'')", span="905-908"];
m9_661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_Numbers_NotString()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsDateTime();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[0]', line 1, position 4.'')", span="910-913"];
m9_657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_Numbers_NotString()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''[56,56]''))", span="897-897"];
m9_658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_Numbers_NotString()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="898-898"];
m9_662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_Numbers_NotString()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(56, reader.ReadAsInt32())", span="915-915"];
m9_663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_Numbers_NotString()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="916-916"];
m9_664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_Numbers_NotString()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_Numbers_NotString()", span="895-895"];
m9_6 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="350-350"];
m9_271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesEmptyWrappedObject()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesEmptyWrappedObject()", span="387-387"];
m9_273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesEmptyWrappedObject()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Error reading bytes. Unexpected token: StartObject. Path '', line 1, position 2.'' )", span="391-391"];
m9_272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesEmptyWrappedObject()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{}''))", span="389-389"];
m9_274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesEmptyWrappedObject()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesEmptyWrappedObject()", span="387-387"];
m9_680 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonTextReaderTests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonTextReaderTests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="44-44"];
m9_0 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndAfterReadingN()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndAfterReadingN()", span="64-64"];
m9_2 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndAfterReadingN()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected end when reading JSON. Path '', line 1, position 1.'')", span="67-67"];
m9_1 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndAfterReadingN()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''n''))", span="66-66"];
m9_3 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndAfterReadingN()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndAfterReadingN()", span="64-64"];
m9_18 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndAfterReadingNe()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndAfterReadingNe()", span="78-78"];
m9_20 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndAfterReadingNe()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected end when reading JSON. Path '', line 1, position 2.'')", span="81-81"];
m9_19 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndAfterReadingNe()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''ne''))", span="80-80"];
m9_21 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndAfterReadingNe()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndAfterReadingNe()", span="78-78"];
m9_332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow()", span="476-476"];
m9_340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    reader.ReadAsInt32();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 10.'')", span="487-491"];
m9_334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="480-480"];
m9_339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow()", file="ExceptionHandlingTests.cs", label="long total = j + i", span="486-486"];
m9_341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow()", file="ExceptionHandlingTests.cs", label="j++", span="484-484"];
m9_333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow()", file="ExceptionHandlingTests.cs", label="long i = int.MaxValue", span="478-478"];
m9_335 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="481-481"];
m9_336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="482-482"];
m9_337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow()", file="ExceptionHandlingTests.cs", label="int j = 1", span="484-484"];
m9_338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow()", file="ExceptionHandlingTests.cs", label="j < 1000", span="484-484"];
m9_342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow()", span="476-476"];
m9_78 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndOfString()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndOfString()", span="141-141"];
m9_80 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndOfString()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="145-145"];
m9_79 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndOfString()", file="ExceptionHandlingTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''hi''))", span="143-143"];
m9_81 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndOfString()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndOfString()", span="141-141"];
m9_155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnclosedComment()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnclosedComment()", span="219-219"];
m9_157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnclosedComment()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 6.'')", span="223-223"];
m9_156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnclosedComment()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/* sdf''))", span="221-221"];
m9_158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnclosedComment()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnclosedComment()", span="219-219"];
m9_401 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="439-439"];
m9_162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.BadCommentStart()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.BadCommentStart()", span="227-227"];
m9_164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.BadCommentStart()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing comment. Expected: *, got s. Path '', line 1, position 1.'')", span="231-231"];
m9_163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.BadCommentStart()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/sdf''))", span="229-229"];
m9_165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.BadCommentStart()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.BadCommentStart()", span="227-227"];
m9_576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32WithBadCharacter()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32WithBadCharacter()", span="783-783"];
m9_578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32WithBadCharacter()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Unexpected character encountered while parsing value: t. Path '', line 1, position 1.'')", span="787-787"];
m9_577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32WithBadCharacter()", file="ExceptionHandlingTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="785-785"];
m9_579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32WithBadCharacter()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32WithBadCharacter()", span="783-783"];
m9_189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseConstructorWithBadCharacter()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseConstructorWithBadCharacter()", span="268-268"];
m9_191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseConstructorWithBadCharacter()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="271-271"];
m9_190 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseConstructorWithBadCharacter()", file="ExceptionHandlingTests.cs", label="string json = ''new Date,()''", span="270-270"];
m9_192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseConstructorWithBadCharacter()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''Unexpected character while parsing constructor: ,. Path '', line 1, position 8.'')", span="273-273"];
m9_193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseConstructorWithBadCharacter()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseConstructorWithBadCharacter()", span="268-268"];
m9_451 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDouble()", span="969-969"];
m9_500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_InvalidEndArray()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_InvalidEndArray()", span="690-690"];
m9_502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_InvalidEndArray()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsBytes();\r\n            }, ''Unexpected character encountered while parsing value: ]. Path '', line 1, position 1.'')", span="694-697"];
m9_501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_InvalidEndArray()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader('']''))", span="692-692"];
m9_503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_InvalidEndArray()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_InvalidEndArray()", span="690-690"];
m9_270 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="448-448"];
m9_380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow_Negative()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow_Negative()", span="540-540"];
m9_382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow_Negative()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="544-544"];
m9_388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow_Negative()", file="ExceptionHandlingTests.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="552-552"];
m9_381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow_Negative()", file="ExceptionHandlingTests.cs", label="BigInteger i = new BigInteger(long.MinValue)", span="542-542"];
m9_383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow_Negative()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="545-545"];
m9_384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow_Negative()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="546-546"];
m9_387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow_Negative()", file="ExceptionHandlingTests.cs", label="BigInteger total = i + -j", span="550-550"];
m9_389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow_Negative()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="553-553"];
m9_390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow_Negative()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="555-555"];
m9_385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow_Negative()", file="ExceptionHandlingTests.cs", label="int j = 1", span="548-548"];
m9_386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow_Negative()", file="ExceptionHandlingTests.cs", label="j < 1000", span="548-548"];
m9_391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow_Negative()", file="ExceptionHandlingTests.cs", label="j++", span="548-548"];
m9_392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow_Negative()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow_Negative()", span="540-540"];
m9_240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_WhitespaceThenText()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_WhitespaceThenText()", span="346-346"];
m9_243 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_WhitespaceThenText()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: a. Path '', line 1, position 5.'')", span="352-357"];
m9_242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_WhitespaceThenText()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="350-350"];
m9_241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_WhitespaceThenText()", file="ExceptionHandlingTests.cs", label="string json = @'''hi' a''", span="348-348"];
m9_244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_WhitespaceThenText()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_WhitespaceThenText()", span="346-346"];
m9_482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesBadContent()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesBadContent()", span="667-667"];
m9_484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesBadContent()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 2.'')", span="671-671"];
m9_483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesBadContent()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="669-669"];
m9_485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesBadContent()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesBadContent()", span="667-667"];
m9_507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_CommaErrors_Multiple()", span="701-701"];
m9_511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsBytes();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[1]', line 1, position 5.'')", span="707-710"];
m9_508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''['',,'']''))", span="703-703"];
m9_510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="CollectionAssert.AreEquivalent(new byte[0], reader.ReadAsBytes())", span="705-705"];
m9_512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="CollectionAssert.AreEquivalent(new byte[0], reader.ReadAsBytes())", span="712-712"];
m9_509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="704-704"];
m9_513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="713-713"];
m9_514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_CommaErrors_Multiple()", span="701-701"];
m9_402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBoolean_AdditionalBadData()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBoolean_AdditionalBadData()", span="571-571"];
m9_405 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBoolean_AdditionalBadData()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBoolean(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 5.'')", span="577-577"];
m9_404 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBoolean_AdditionalBadData()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="575-575"];
m9_403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBoolean_AdditionalBadData()", file="ExceptionHandlingTests.cs", label="string json = @''falseeeee''", span="573-573"];
m9_406 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBoolean_AdditionalBadData()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBoolean_AdditionalBadData()", span="571-571"];
m9_583 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="415-415"];
m9_410 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", span="702-702"];
m9_601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_CommaErrors_Multiple()", span="817-817"];
m9_605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsInt32();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[1]', line 1, position 4.'')", span="823-826"];
m9_602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''[1,,1]''))", span="819-819"];
m9_604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="reader.ReadAsInt32()", span="821-821"];
m9_606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(1, reader.ReadAsInt32())", span="828-828"];
m9_603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="820-820"];
m9_607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="829-829"];
m9_608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_CommaErrors_Multiple()", span="817-817"];
m9_620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_Null_UnexpectedEnd()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_Null_UnexpectedEnd()", span="843-843"];
m9_623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_Null_UnexpectedEnd()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsString(); }, ''Unexpected end when reading JSON. Path '', line 1, position 3.'')", span="849-849"];
m9_622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_Null_UnexpectedEnd()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="847-847"];
m9_621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_Null_UnexpectedEnd()", file="ExceptionHandlingTests.cs", label="string json = @''nul''", span="845-845"];
m9_624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_Null_UnexpectedEnd()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_Null_UnexpectedEnd()", span="843-843"];
m9_561 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="950-950"];
m9_148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MatchWithNoTrailingSeparator()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MatchWithNoTrailingSeparator()", span="211-211"];
m9_150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MatchWithNoTrailingSeparator()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 1, position 4.'')", span="215-215"];
m9_149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MatchWithNoTrailingSeparator()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nullz''))", span="213-213"];
m9_151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MatchWithNoTrailingSeparator()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MatchWithNoTrailingSeparator()", span="211-211"];
m9_290 [cluster="Unk.IsFalse", file="ExceptionHandlingTests.cs", label="Entry Unk.IsFalse", span=""];
m9_55 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="960-960"];
m9_685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.EscapedPathInExceptionMessage()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.EscapedPathInExceptionMessage()", span="930-930"];
m9_687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.EscapedPathInExceptionMessage()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () =>\r\n                {\r\n                    JsonTextReader reader = new JsonTextReader(new StringReader(json));\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                },\r\n                ''Unexpected character encountered while parsing value: !. Path 'frameworks.dnxcore50.dependencies['System.Xml.ReaderWriter'].source', line 6, position 20.'')", span="944-952"];
m9_686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.EscapedPathInExceptionMessage()", file="ExceptionHandlingTests.cs", label="string json = @''{\r\n  ''''frameworks'''': {\r\n    ''''dnxcore50'''': {\r\n      ''''dependencies'''': {\r\n        ''''System.Xml.ReaderWriter'''': {\r\n          ''''source'''': !!! !!!\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="932-942"];
m9_688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.EscapedPathInExceptionMessage()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.EscapedPathInExceptionMessage()", span="930-930"];
m9_419 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBoolean_UnexpectedEnd()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBoolean_UnexpectedEnd()", span="591-591"];
m9_422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBoolean_UnexpectedEnd()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBoolean(); }, ''Unexpected end when reading JSON. Path '', line 1, position 3.'')", span="597-597"];
m9_421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBoolean_UnexpectedEnd()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="595-595"];
m9_420 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBoolean_UnexpectedEnd()", file="ExceptionHandlingTests.cs", label="string json = @''tru''", span="593-593"];
m9_423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBoolean_UnexpectedEnd()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBoolean_UnexpectedEnd()", span="591-591"];
m9_169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MissingColon()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MissingColon()", span="235-235"];
m9_178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MissingColon()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, @''Invalid character after parsing property name. Expected ':' but got: ''''. Path 'A', line 3, position 8.'')", span="252-252"];
m9_171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MissingColon()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="241-241"];
m9_177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MissingColon()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="250-250"];
m9_170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MissingColon()", file="ExceptionHandlingTests.cs", label="string json = @''{\r\n    ''''A'''' : true,\r\n    ''''B'''' ''''''", span="237-239"];
m9_172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MissingColon()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="243-243"];
m9_173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MissingColon()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="244-244"];
m9_174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MissingColon()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="246-246"];
m9_175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MissingColon()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="247-247"];
m9_176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MissingColon()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="249-249"];
m9_179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MissingColon()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MissingColon()", span="235-235"];
m9_693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepth()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepth()", span="956-956"];
m9_695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepth()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="960-963"];
m9_694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepth()", file="ExceptionHandlingTests.cs", label="string json = ''[[]]''", span="958-958"];
m9_696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepth()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="965-965"];
m9_697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepth()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="967-967"];
m9_698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepth()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepth()", span="956-956"];
m9_628 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_InvalidEndArray()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_InvalidEndArray()", span="853-853"];
m9_630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_InvalidEndArray()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsDateTime();\r\n            }, ''Unexpected character encountered while parsing value: ]. Path '', line 1, position 1.'')", span="857-860"];
m9_629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_InvalidEndArray()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader('']''))", span="855-855"];
m9_631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_InvalidEndArray()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_InvalidEndArray()", span="853-853"];
m9_248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseIncompleteCommentSeparator()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseIncompleteCommentSeparator()", span="361-361"];
m9_250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseIncompleteCommentSeparator()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing boolean value. Path '', line 1, position 4.'')", span="365-365"];
m9_249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseIncompleteCommentSeparator()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''true/''))", span="363-363"];
m9_251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseIncompleteCommentSeparator()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseIncompleteCommentSeparator()", span="361-361"];
m9_427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBoolean_BadData()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBoolean_BadData()", span="601-601"];
m9_430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBoolean_BadData()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBoolean(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="607-607"];
m9_429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBoolean_BadData()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="605-605"];
m9_428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBoolean_BadData()", file="ExceptionHandlingTests.cs", label="string json = @''pie''", span="603-603"];
m9_431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBoolean_BadData()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBoolean_BadData()", span="601-601"];
m9_11 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndAfterReadingNu()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndAfterReadingNu()", span="71-71"];
m9_13 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndAfterReadingNu()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected end when reading JSON. Path '', line 1, position 2.'')", span="74-74"];
m9_12 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndAfterReadingNu()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''nu''))", span="73-73"];
m9_14 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndAfterReadingNu()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndAfterReadingNu()", span="71-71"];
m9_435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_BadData()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_BadData()", span="611-611"];
m9_438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_BadData()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsString(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="617-617"];
m9_437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_BadData()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="615-615"];
m9_436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_BadData()", file="ExceptionHandlingTests.cs", label="string json = @''pie''", span="613-613"];
m9_439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_BadData()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_BadData()", span="611-611"];
m9_612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_UnexpectedEnd()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_UnexpectedEnd()", span="833-833"];
m9_615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_UnexpectedEnd()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsString(); }, ''Unexpected end when reading JSON. Path '', line 1, position 3.'')", span="839-839"];
m9_614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_UnexpectedEnd()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="837-837"];
m9_613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_UnexpectedEnd()", file="ExceptionHandlingTests.cs", label="string json = @''tru''", span="835-835"];
m9_616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_UnexpectedEnd()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_UnexpectedEnd()", span="833-833"];
m9_4 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78"];
m9_702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", span="971-971"];
m9_704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="975-978"];
m9_703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="string json = ''[[[[]]],[[]]]''", span="973-973"];
m9_705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="980-980"];
m9_706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(0, reader.Depth)", span="981-981"];
m9_707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="983-983"];
m9_708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="984-984"];
m9_709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="986-986"];
m9_710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="987-987"];
m9_711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="989-989"];
m9_712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(3, reader.Depth)", span="990-990"];
m9_713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="992-992"];
m9_714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(3, reader.Depth)", span="993-993"];
m9_715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="995-995"];
m9_716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="996-996"];
m9_717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="998-998"];
m9_718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="999-999"];
m9_719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[1]', line 1, position 9.'')", span="1001-1001"];
m9_720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="1002-1002"];
m9_721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="1004-1004"];
m9_722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="1005-1005"];
m9_723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="1007-1007"];
m9_724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="1008-1008"];
m9_725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="1010-1010"];
m9_726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="1011-1011"];
m9_727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="1013-1013"];
m9_728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(0, reader.Depth)", span="1014-1014"];
m9_729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Assert.IsFalse(reader.Read())", span="1016-1016"];
m9_730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MaxDepthDoesNotRecursivelyError()", span="971-971"];
m9_198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseConstructorWithUnexpectedEnd()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseConstructorWithUnexpectedEnd()", span="277-277"];
m9_201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseConstructorWithUnexpectedEnd()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing constructor. Path '', line 1, position 7.'')", span="282-282"];
m9_200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseConstructorWithUnexpectedEnd()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="280-280"];
m9_199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseConstructorWithUnexpectedEnd()", file="ExceptionHandlingTests.cs", label="string json = ''new Dat''", span="279-279"];
m9_202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseConstructorWithUnexpectedEnd()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseConstructorWithUnexpectedEnd()", span="277-277"];
m9_594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_InvalidEndArray()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_InvalidEndArray()", span="806-806"];
m9_596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_InvalidEndArray()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsInt32();\r\n            }, ''Unexpected character encountered while parsing value: ]. Path '', line 1, position 1.'')", span="810-813"];
m9_595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_InvalidEndArray()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader('']''))", span="808-808"];
m9_597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_InvalidEndArray()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_InvalidEndArray()", span="806-806"];
m9_222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Text()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Text()", span="314-314"];
m9_235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Text()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Additional text encountered after finished reading JSON content: c. Path '', line 5, position 1.'')", span="342-342"];
m9_224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Text()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="322-322"];
m9_234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Text()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="340-340"];
m9_223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Text()", file="ExceptionHandlingTests.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]content''", span="316-320"];
m9_225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Text()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="327-327"];
m9_226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Text()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(1, reader.LineNumber)", span="328-328"];
m9_227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Text()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="330-330"];
m9_228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Text()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="331-331"];
m9_229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Text()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="333-333"];
m9_230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Text()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="334-334"];
m9_231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Text()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="336-336"];
m9_232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Text()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="337-337"];
m9_233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Text()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="339-339"];
m9_236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Text()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Text()", span="314-314"];
m9_194 [cluster="Unk.>", file="ExceptionHandlingTests.cs", label="Entry Unk.>", span=""];
m9_452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDouble_Boolean()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDouble_Boolean()", span="631-631"];
m9_455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDouble_Boolean()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDouble(); }, ''Unexpected character encountered while parsing value: t. Path '', line 1, position 1.'')", span="637-637"];
m9_454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDouble_Boolean()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="635-635"];
m9_453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDouble_Boolean()", file="ExceptionHandlingTests.cs", label="string json = @''true''", span="633-633"];
m9_456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDouble_Boolean()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDouble_Boolean()", span="631-631"];
m9_460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_BadData()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_BadData()", span="641-641"];
m9_463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_BadData()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="647-647"];
m9_462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_BadData()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="645-645"];
m9_461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_BadData()", file="ExceptionHandlingTests.cs", label="string json = @''pie''", span="643-643"];
m9_464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_BadData()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_BadData()", span="641-641"];
m9_32 [cluster="Newtonsoft.Json.JsonReader.Read()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409"];
m9_378 [cluster="StringReader.cstr", file="ExceptionHandlingTests.cs", label="Entry StringReader.cstr", span=""];
m9_141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MatchWithWrongCharacters()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MatchWithWrongCharacters()", span="203-203"];
m9_143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MatchWithWrongCharacters()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 1, position 3.'')", span="207-207"];
m9_142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MatchWithWrongCharacters()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nulz''))", span="205-205"];
m9_144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MatchWithWrongCharacters()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MatchWithWrongCharacters()", span="203-203"];
m9_343 [cluster="long.ToString(System.IFormatProvider)", file="ExceptionHandlingTests.cs", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
m9_33 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndOfControlCharacter()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndOfControlCharacter()", span="93-93"];
m9_35 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndOfControlCharacter()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="97-97"];
m9_34 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndOfControlCharacter()", file="ExceptionHandlingTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\''))", span="95-95"];
m9_36 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndOfControlCharacter()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndOfControlCharacter()", span="93-93"];
m9_25 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndOfHex()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndOfHex()", span="85-85"];
m9_27 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndOfHex()", color=green, community=0, file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unicode character. Path '', line 1, position 4.'')", prediction=14, span="89-89"];
m9_26 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndOfHex()", file="ExceptionHandlingTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\u123''))", span="87-87"];
m9_28 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndOfHex()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndOfHex()", span="85-85"];
m9_348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow_Negative()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow_Negative()", span="496-496"];
m9_357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow_Negative()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    reader.ReadAsInt32();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 11.'')", span="508-512"];
m9_350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow_Negative()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="500-500"];
m9_356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow_Negative()", file="ExceptionHandlingTests.cs", label="long total = -j + i", span="507-507"];
m9_358 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow_Negative()", file="ExceptionHandlingTests.cs", label="j++", span="505-505"];
m9_349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow_Negative()", file="ExceptionHandlingTests.cs", label="long i = int.MinValue", span="498-498"];
m9_351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow_Negative()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="501-501"];
m9_352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow_Negative()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="502-502"];
m9_353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow_Negative()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(i, reader.Value)", span="503-503"];
m9_354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow_Negative()", file="ExceptionHandlingTests.cs", label="int j = 1", span="505-505"];
m9_355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow_Negative()", file="ExceptionHandlingTests.cs", label="j < 1000", span="505-505"];
m9_359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow_Negative()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt32Overflow_Negative()", span="496-496"];
m9_475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesArrayWithBadContent()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesArrayWithBadContent()", span="659-659"];
m9_477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesArrayWithBadContent()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected token when reading bytes: Float. Path '[0]', line 1, position 4.'')", span="663-663"];
m9_476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesArrayWithBadContent()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1.0]''))", span="661-661"];
m9_478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesArrayWithBadContent()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesArrayWithBadContent()", span="659-659"];
m9_546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDateTime_Boolean()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDateTime_Boolean()", span="746-746"];
m9_549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDateTime_Boolean()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTime(); }, ''Unexpected character encountered while parsing value: t. Path '', line 1, position 1.'')", span="752-752"];
m9_548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDateTime_Boolean()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="750-750"];
m9_547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDateTime_Boolean()", file="ExceptionHandlingTests.cs", label="string json = @''true''", span="748-748"];
m9_550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDateTime_Boolean()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDateTime_Boolean()", span="746-746"];
m9_74 [cluster="Unk.AreEqual", file="ExceptionHandlingTests.cs", label="Entry Unk.AreEqual", span=""];
m9_489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_CommaErrors()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_CommaErrors()", span="675-675"];
m9_492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_CommaErrors()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsBytes();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[0]', line 1, position 2.'')", span="680-683"];
m9_490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_CommaErrors()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''[,'']''))", span="677-677"];
m9_491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_CommaErrors()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="678-678"];
m9_493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_CommaErrors()", file="ExceptionHandlingTests.cs", label="CollectionAssert.AreEquivalent(new byte[0], reader.ReadAsBytes())", span="685-685"];
m9_494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_CommaErrors()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="686-686"];
m9_495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_CommaErrors()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytes_CommaErrors()", span="675-675"];
m9_60 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="119-119"];
m9_71 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected content while parsing JSON. Path 'u', line 1, position 29.'')", span="137-137"];
m9_62 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="123-123"];
m9_70 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="135-135"];
m9_61 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="ExceptionHandlingTests.cs", label="string json = @''{ ''''ItemName'''': ''''value'''', ''''u'''':netanelsalinger,''''r'''':9 }''", span="121-121"];
m9_63 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="125-125"];
m9_64 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="126-126"];
m9_65 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="128-128"];
m9_66 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="129-129"];
m9_67 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="131-131"];
m9_68 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="132-132"];
m9_69 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="134-134"];
m9_72 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="119-119"];
m9_496 [cluster="Unk.AreEquivalent", file="ExceptionHandlingTests.cs", label="Entry Unk.AreEquivalent", span=""];
m9_379 [cluster="Unk.ToString", file="ExceptionHandlingTests.cs", label="Entry Unk.ToString", span=""];
m9_635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_CommaErrors()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_CommaErrors()", span="864-864"];
m9_638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_CommaErrors()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsString();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[0]', line 1, position 2.'')", span="869-872"];
m9_636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_CommaErrors()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''[,'']''))", span="866-866"];
m9_637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_CommaErrors()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="867-867"];
m9_639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_CommaErrors()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(string.Empty, reader.ReadAsString())", span="874-874"];
m9_640 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_CommaErrors()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="875-875"];
m9_641 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_CommaErrors()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_CommaErrors()", span="864-864"];
m9_94 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", span="159-159"];
m9_99 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="168-168"];
m9_100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="169-169"];
m9_105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="178-178"];
m9_110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="187-187"];
m9_111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="188-188"];
m9_112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="189-189"];
m9_96 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", file="ExceptionHandlingTests.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(toggleReaderError)", span="162-162"];
m9_95 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", file="ExceptionHandlingTests.cs", label="ToggleReaderError toggleReaderError = new ToggleReaderError(new StringReader(''{'first':1,'second':2,'third':3}''))", span="161-161"];
m9_98 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", file="ExceptionHandlingTests.cs", label="toggleReaderError.Error = true", span="166-166"];
m9_101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", file="ExceptionHandlingTests.cs", label="toggleReaderError.Error = false", span="171-171"];
m9_104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", file="ExceptionHandlingTests.cs", label="toggleReaderError.Error = true", span="176-176"];
m9_106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", file="ExceptionHandlingTests.cs", label="toggleReaderError.Error = false", span="180-180"];
m9_109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", file="ExceptionHandlingTests.cs", label="toggleReaderError.Error = true", span="185-185"];
m9_113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", file="ExceptionHandlingTests.cs", label="toggleReaderError.Error = false", span="191-191"];
m9_97 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="164-164"];
m9_102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="173-173"];
m9_103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(''first'', jsonTextReader.Value)", span="174-174"];
m9_107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="182-182"];
m9_108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(1L, jsonTextReader.Value)", span="183-183"];
m9_114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ResetJsonTextReaderErrorCount()", span="159-159"];
m9_518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithBadCharacter()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithBadCharacter()", span="717-717"];
m9_520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithBadCharacter()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected character encountered while parsing value: t. Path '', line 1, position 1.'')", span="721-721"];
m9_519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithBadCharacter()", file="ExceptionHandlingTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="719-719"];
m9_521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithBadCharacter()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithBadCharacter()", span="717-717"];
m9_263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesNoContentWrappedObject()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesNoContentWrappedObject()", span="379-379"];
m9_265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesNoContentWrappedObject()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading JSON. Path '', line 1, position 1.'')", span="383-383"];
m9_264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesNoContentWrappedObject()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{''))", span="381-381"];
m9_266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesNoContentWrappedObject()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesNoContentWrappedObject()", span="379-379"];
m9_319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithError()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithError()", span="447-447"];
m9_321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithError()", file="ExceptionHandlingTests.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="453-453"];
m9_320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithError()", file="ExceptionHandlingTests.cs", label="string json = @''{\r\n    ChildId: '123'\r\n}''", span="449-451"];
m9_322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithError()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="455-455"];
m9_323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithError()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="456-456"];
m9_324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithError()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="458-458"];
m9_325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithError()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="459-459"];
m9_326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithError()", file="ExceptionHandlingTests.cs", label="jsonTextReader.ReadAsBytes()", span="463-463"];
m9_328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithError()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="469-469"];
m9_329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithError()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="470-470"];
m9_330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithError()", file="ExceptionHandlingTests.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="472-472"];
m9_327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithError()", file="ExceptionHandlingTests.cs", label=FormatException, span="465-465"];
m9_331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithError()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithError()", span="447-447"];
m9_734 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="1001-1001"];
m9_29 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="89-89"];
m9_30 [cluster="lambda expression", color=green, community=0, file="ExceptionHandlingTests.cs", label="reader.Read()", prediction=15, span="89-89"];
m9_31 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="89-89"];
m9_38 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="97-97"];
m9_83 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="145-145"];
m9_92 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="155-155"];
m9_743 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="1025-1025"];
m9_187 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="new JsonTextReader(null)", span="259-259"];
m9_345 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="489-489"];
m9_361 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="510-510"];
m9_690 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="947-947"];
m9_7 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="67-67"];
m9_15 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="74-74"];
m9_22 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="81-81"];
m9_37 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="97-97"];
m9_49 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="107-107"];
m9_52 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="111-111"];
m9_56 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="115-115"];
m9_75 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="137-137"];
m9_82 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="145-145"];
m9_91 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="155-155"];
m9_116 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="168-168"];
m9_119 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="169-169"];
m9_122 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="178-178"];
m9_125 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="187-187"];
m9_128 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="188-188"];
m9_131 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="189-189"];
m9_138 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="199-199"];
m9_145 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="207-207"];
m9_152 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="215-215"];
m9_159 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="223-223"];
m9_166 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="231-231"];
m9_180 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="252-252"];
m9_186 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="259-259"];
m9_203 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="282-282"];
m9_211 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="291-291"];
m9_219 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="305-310"];
m9_237 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="342-342"];
m9_245 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="352-357"];
m9_252 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="365-365"];
m9_260 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="375-375"];
m9_267 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="383-383"];
m9_275 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="391-391"];
m9_291 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="409-409"];
m9_307 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="432-432"];
m9_310 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="434-434"];
m9_313 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="436-436"];
m9_316 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="438-438"];
m9_344 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="487-491"];
m9_360 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="508-512"];
m9_398 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="567-567"];
m9_407 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="577-577"];
m9_416 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="587-587"];
m9_424 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="597-597"];
m9_432 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="607-607"];
m9_440 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="617-617"];
m9_448 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="627-627"];
m9_457 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="637-637"];
m9_465 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="647-647"];
m9_472 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="655-655"];
m9_479 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="663-663"];
m9_486 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="671-671"];
m9_497 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="680-683"];
m9_504 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="694-697"];
m9_515 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="707-710"];
m9_522 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="721-721"];
m9_534 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="732-732"];
m9_542 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="742-742"];
m9_551 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="752-752"];
m9_558 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="761-761"];
m9_566 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="770-770"];
m9_573 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="779-779"];
m9_580 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="787-787"];
m9_591 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="796-799"];
m9_598 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="810-813"];
m9_609 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="823-826"];
m9_617 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="839-839"];
m9_625 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="849-849"];
m9_632 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="857-860"];
m9_642 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="869-872"];
m9_653 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="885-888"];
m9_665 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="900-903"];
m9_668 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="905-908"];
m9_671 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="910-913"];
m9_682 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="926-926"];
m9_689 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="945-951"];
m9_742 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="1025-1025"];
m9_39 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="97-97"];
m9_84 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="145-145"];
m9_93 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="155-155"];
m9_744 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="1025-1025"];
m9_8 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="67-67"];
m9_16 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="74-74"];
m9_23 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="81-81"];
m9_50 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="107-107"];
m9_53 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsDecimal()", span="111-111"];
m9_57 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsInt32()", span="115-115"];
m9_76 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="137-137"];
m9_117 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="jsonTextReader.Read()", span="168-168"];
m9_120 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="jsonTextReader.Read()", span="169-169"];
m9_123 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="jsonTextReader.Read()", span="178-178"];
m9_126 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="jsonTextReader.Read()", span="187-187"];
m9_129 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="jsonTextReader.Read()", span="188-188"];
m9_132 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="jsonTextReader.Read()", span="189-189"];
m9_139 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="199-199"];
m9_146 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="207-207"];
m9_153 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="215-215"];
m9_160 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="223-223"];
m9_167 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="231-231"];
m9_181 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="252-252"];
m9_188 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="259-259"];
m9_196 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="273-273"];
m9_204 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="282-282"];
m9_212 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="291-291"];
m9_220 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="307-307"];
m9_238 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="342-342"];
m9_246 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="354-354"];
m9_253 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="365-365"];
m9_261 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="375-375"];
m9_268 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsBytes()", span="383-383"];
m9_276 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsBytes()", span="391-391"];
m9_292 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="jsonTextReader.ReadAsInt32()", span="409-409"];
m9_308 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="jsonTextReader.ReadAsInt32()", span="432-432"];
m9_311 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="jsonTextReader.ReadAsInt32()", span="434-434"];
m9_314 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="jsonTextReader.ReadAsInt32()", span="436-436"];
m9_317 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="jsonTextReader.ReadAsInt32()", span="438-438"];
m9_346 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsInt32()", span="490-490"];
m9_362 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsInt32()", span="511-511"];
m9_399 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsString()", span="567-567"];
m9_408 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsBoolean()", span="577-577"];
m9_417 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsString()", span="587-587"];
m9_425 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsBoolean()", span="597-597"];
m9_433 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsBoolean()", span="607-607"];
m9_441 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsString()", span="617-617"];
m9_449 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsDouble()", span="627-627"];
m9_458 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsDouble()", span="637-637"];
m9_466 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsBytes()", span="647-647"];
m9_473 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsBytes()", span="655-655"];
m9_480 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsBytes()", span="663-663"];
m9_487 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsBytes()", span="671-671"];
m9_498 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsBytes()", span="682-682"];
m9_505 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsBytes()", span="696-696"];
m9_516 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsBytes()", span="709-709"];
m9_523 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsBytes()", span="721-721"];
m9_535 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsBytes()", span="732-732"];
m9_543 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsDateTime()", span="742-742"];
m9_552 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsDateTime()", span="752-752"];
m9_559 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsDateTimeOffset()", span="761-761"];
m9_567 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsDecimal()", span="770-770"];
m9_574 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsDecimal()", span="779-779"];
m9_581 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsInt32()", span="787-787"];
m9_592 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsInt32()", span="798-798"];
m9_599 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsInt32()", span="812-812"];
m9_610 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsInt32()", span="825-825"];
m9_618 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsString()", span="839-839"];
m9_626 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsString()", span="849-849"];
m9_633 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsDateTime()", span="859-859"];
m9_643 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsString()", span="871-871"];
m9_654 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsString()", span="887-887"];
m9_666 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsDateTime()", span="902-902"];
m9_669 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsDateTime()", span="907-907"];
m9_672 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.ReadAsDateTime()", span="912-912"];
m9_683 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="926-926"];
m9_691 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="reader.Read()", span="948-948"];
m9_700 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="967-967"];
m9_732 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="983-983"];
m9_735 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="1001-1001"];
m9_9 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="67-67"];
m9_17 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="74-74"];
m9_24 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="81-81"];
m9_51 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="107-107"];
m9_54 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="111-111"];
m9_58 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="115-115"];
m9_77 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="137-137"];
m9_118 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="168-168"];
m9_121 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="169-169"];
m9_124 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="178-178"];
m9_127 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="187-187"];
m9_130 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="188-188"];
m9_133 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="189-189"];
m9_140 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="199-199"];
m9_147 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="207-207"];
m9_154 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="215-215"];
m9_161 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="223-223"];
m9_168 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="231-231"];
m9_182 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="252-252"];
m9_205 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="282-282"];
m9_213 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="291-291"];
m9_221 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="305-310"];
m9_239 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="342-342"];
m9_247 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="352-357"];
m9_254 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="365-365"];
m9_262 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="375-375"];
m9_269 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="383-383"];
m9_277 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="391-391"];
m9_293 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="409-409"];
m9_309 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="432-432"];
m9_312 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="434-434"];
m9_315 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="436-436"];
m9_318 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="438-438"];
m9_347 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="487-491"];
m9_363 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="508-512"];
m9_400 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="567-567"];
m9_409 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="577-577"];
m9_418 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="587-587"];
m9_426 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="597-597"];
m9_434 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="607-607"];
m9_442 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="617-617"];
m9_450 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="627-627"];
m9_459 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="637-637"];
m9_467 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="647-647"];
m9_474 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="655-655"];
m9_481 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="663-663"];
m9_488 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="671-671"];
m9_499 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="680-683"];
m9_506 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="694-697"];
m9_517 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="707-710"];
m9_524 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="721-721"];
m9_536 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="732-732"];
m9_544 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="742-742"];
m9_553 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="752-752"];
m9_560 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="761-761"];
m9_568 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="770-770"];
m9_575 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="779-779"];
m9_582 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="787-787"];
m9_593 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="796-799"];
m9_600 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="810-813"];
m9_611 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="823-826"];
m9_619 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="839-839"];
m9_627 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="849-849"];
m9_634 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="857-860"];
m9_644 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="869-872"];
m9_655 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="885-888"];
m9_667 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="900-903"];
m9_670 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="905-908"];
m9_673 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="910-913"];
m9_684 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="926-926"];
m9_692 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="945-951"];
m9_195 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="273-273"];
m9_197 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="273-273"];
m9_699 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="967-967"];
m9_701 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="967-967"];
m9_731 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Entry lambda expression", span="983-983"];
m9_733 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="983-983"];
m9_736 [cluster="lambda expression", file="ExceptionHandlingTests.cs", label="Exit lambda expression", span="1001-1001"];
m9_443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDouble_BadData()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDouble_BadData()", span="621-621"];
m9_446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDouble_BadData()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDouble(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="627-627"];
m9_445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDouble_BadData()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="625-625"];
m9_444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDouble_BadData()", file="ExceptionHandlingTests.cs", label="string json = @''pie''", span="623-623"];
m9_447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDouble_BadData()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDouble_BadData()", span="621-621"];
m9_85 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndTokenWhenParsingOddEndToken()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndTokenWhenParsingOddEndToken()", span="149-149"];
m9_89 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndTokenWhenParsingOddEndToken()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Additional text encountered after finished reading JSON content: }. Path '', line 1, position 2.'')", span="155-155"];
m9_87 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndTokenWhenParsingOddEndToken()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="152-152"];
m9_88 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndTokenWhenParsingOddEndToken()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="153-153"];
m9_86 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndTokenWhenParsingOddEndToken()", file="ExceptionHandlingTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{}}''))", span="151-151"];
m9_90 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndTokenWhenParsingOddEndToken()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndTokenWhenParsingOddEndToken()", span="149-149"];
m9_554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDateTimeOffsetBadContent()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDateTimeOffsetBadContent()", span="757-757"];
m9_556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDateTimeOffsetBadContent()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 2.'')", span="761-761"];
m9_555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDateTimeOffsetBadContent()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="759-759"];
m9_557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDateTimeOffsetBadContent()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDateTimeOffsetBadContent()", span="757-757"];
m9_5 [cluster="System.IO.StringReader.StringReader(string)", file="ExceptionHandlingTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m9_134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MatchWithInsufficentCharacters()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MatchWithInsufficentCharacters()", span="195-195"];
m9_136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MatchWithInsufficentCharacters()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end when reading JSON. Path '', line 1, position 3.'')", span="199-199"];
m9_135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MatchWithInsufficentCharacters()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nul''))", span="197-197"];
m9_137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MatchWithInsufficentCharacters()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.MatchWithInsufficentCharacters()", span="195-195"];
m9_737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndWhenParsingUnquotedProperty()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndWhenParsingUnquotedProperty()", span="1020-1020"];
m9_740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndWhenParsingUnquotedProperty()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unquoted property name. Path '', line 1, position 4.'')", span="1025-1025"];
m9_739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndWhenParsingUnquotedProperty()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="1023-1023"];
m9_738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndWhenParsingUnquotedProperty()", file="ExceptionHandlingTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{aww''))", span="1022-1022"];
m9_741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndWhenParsingUnquotedProperty()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.UnexpectedEndWhenParsingUnquotedProperty()", span="1020-1020"];
m9_214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Comma()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Comma()", span="295-295"];
m9_217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Comma()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 1.'')", span="305-310"];
m9_216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Comma()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="303-303"];
m9_215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Comma()", file="ExceptionHandlingTests.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="297-301"];
m9_218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Comma()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseAdditionalContent_Comma()", span="295-295"];
m9_674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ErrorReadingComment()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ErrorReadingComment()", span="920-920"];
m9_677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ErrorReadingComment()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 1.'')", span="926-926"];
m9_676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ErrorReadingComment()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="924-924"];
m9_675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ErrorReadingComment()", file="ExceptionHandlingTests.cs", label="string json = @''/''", span="922-922"];
m9_678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ErrorReadingComment()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ErrorReadingComment()", span="920-920"];
m9_393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_Null_AdditionalBadData()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_Null_AdditionalBadData()", span="561-561"];
m9_396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_Null_AdditionalBadData()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsString(); }, ''Error parsing null value. Path '', line 1, position 4.'')", span="567-567"];
m9_395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_Null_AdditionalBadData()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="565-565"];
m9_394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_Null_AdditionalBadData()", file="ExceptionHandlingTests.cs", label="string json = @''nullllll''", span="563-563"];
m9_397 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_Null_AdditionalBadData()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsString_Null_AdditionalBadData()", span="561-561"];
m9_584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_CommaErrors()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_CommaErrors()", span="791-791"];
m9_587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_CommaErrors()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsInt32();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[0]', line 1, position 2.'')", span="796-799"];
m9_585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_CommaErrors()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''[,1]''))", span="793-793"];
m9_586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_CommaErrors()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="794-794"];
m9_588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_CommaErrors()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(1, reader.ReadAsInt32())", span="801-801"];
m9_589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_CommaErrors()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="802-802"];
m9_590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_CommaErrors()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadNumberValue_CommaErrors()", span="791-791"];
m9_278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithError()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithError()", span="395-395"];
m9_285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithError()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path 'ChildId', line 2, position 52.'')", span="409-409"];
m9_280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithError()", file="ExceptionHandlingTests.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="401-401"];
m9_284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithError()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="407-407"];
m9_286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithError()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="411-411"];
m9_279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithError()", file="ExceptionHandlingTests.cs", label="string json = @''{\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="397-399"];
m9_281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithError()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="403-403"];
m9_282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithError()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="404-404"];
m9_283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithError()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="406-406"];
m9_287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithError()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="412-412"];
m9_288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithError()", file="ExceptionHandlingTests.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="414-414"];
m9_289 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithError()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithError()", span="395-395"];
m9_679 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="ExceptionHandlingTests.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m9_468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesIntegerArrayWithNoEnd()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesIntegerArrayWithNoEnd()", span="651-651"];
m9_470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesIntegerArrayWithNoEnd()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading bytes. Path '[0]', line 1, position 2.'')", span="655-655"];
m9_469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesIntegerArrayWithNoEnd()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1''))", span="653-653"];
m9_471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesIntegerArrayWithNoEnd()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsBytesIntegerArrayWithNoEnd()", span="651-651"];
m9_377 [cluster="BigInteger.cstr", file="ExceptionHandlingTests.cs", label="Entry BigInteger.cstr", span=""];
m9_183 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.NullTextReader()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.NullTextReader()", span="256-256"];
m9_184 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.NullTextReader()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { new JsonTextReader(null); },\r\n                new string[]\r\n                {\r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: reader'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: reader'' // Mono\r\n                })", span="258-264"];
m9_185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.NullTextReader()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.NullTextReader()", span="256-256"];
m9_526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithUnexpectedEnd()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithUnexpectedEnd()", span="725-725"];
m9_530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithUnexpectedEnd()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 17.'')", span="732-732"];
m9_529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithUnexpectedEnd()", file="ExceptionHandlingTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''''' + Convert.ToBase64String(helloWorldData)))", span="730-730"];
m9_528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithUnexpectedEnd()", file="ExceptionHandlingTests.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="728-728"];
m9_527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithUnexpectedEnd()", file="ExceptionHandlingTests.cs", label="string helloWorld = ''Hello world!''", span="727-727"];
m9_531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithUnexpectedEnd()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBytesWithUnexpectedEnd()", span="725-725"];
m9_537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDateTime_BadData()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDateTime_BadData()", span="736-736"];
m9_540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDateTime_BadData()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTime(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="742-742"];
m9_539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDateTime_BadData()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="740-740"];
m9_538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDateTime_BadData()", file="ExceptionHandlingTests.cs", label="string json = @''pie''", span="738-738"];
m9_541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDateTime_BadData()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDateTime_BadData()", span="736-736"];
m9_525 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="508-508"];
m9_294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithErrorInArray()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithErrorInArray()", span="418-418"];
m9_299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithErrorInArray()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path '[0]', line 2, position 41.'')", span="432-432"];
m9_300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithErrorInArray()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Input string '3.3' is not a valid integer. Path '[1]', line 3, position 5.'')", span="434-434"];
m9_301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithErrorInArray()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Unexpected character encountered while parsing value: ,. Path '[2]', line 4, position 3.'')", span="436-436"];
m9_302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithErrorInArray()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Input string '0f' is not a valid integer. Path '[3]', line 5, position 4.'')", span="438-438"];
m9_296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithErrorInArray()", file="ExceptionHandlingTests.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="427-427"];
m9_298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithErrorInArray()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonTextReader.TokenType)", span="430-430"];
m9_303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithErrorInArray()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="440-440"];
m9_295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithErrorInArray()", file="ExceptionHandlingTests.cs", label="string json = @''[\r\n  333333333333333333333333333333333333333,\r\n  3.3,\r\n  ,\r\n  0f\r\n]''", span="420-425"];
m9_297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithErrorInArray()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="429-429"];
m9_304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithErrorInArray()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", span="441-441"];
m9_305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithErrorInArray()", file="ExceptionHandlingTests.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="443-443"];
m9_306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithErrorInArray()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadIntegerWithErrorInArray()", span="418-418"];
m9_545 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="430-430"];
m9_569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDecimalBadContent_SecondLine()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDecimalBadContent_SecondLine()", span="774-774"];
m9_571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDecimalBadContent_SecondLine()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Unexpected character encountered while parsing value: e. Path '', line 2, position 2.'')", span="779-779"];
m9_570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDecimalBadContent_SecondLine()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''\r\nnew Date()''))", span="776-777"];
m9_572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDecimalBadContent_SecondLine()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadAsDecimalBadContent_SecondLine()", span="774-774"];
m9_115 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonTextReaderTests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonTextReaderTests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="36-36"];
m9_645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_CommaErrors_Multiple()", span="879-879"];
m9_649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsString();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[1]', line 1, position 5.'')", span="885-888"];
m9_646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''['',,'']''))", span="881-881"];
m9_648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="reader.ReadAsInt32()", span="883-883"];
m9_650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(string.Empty, reader.ReadAsString())", span="890-890"];
m9_647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="882-882"];
m9_651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="891-891"];
m9_652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_CommaErrors_Multiple()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadStringValue_CommaErrors_Multiple()", span="879-879"];
m9_40 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInvalidNonBase10Number()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInvalidNonBase10Number()", span="101-101"];
m9_43 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInvalidNonBase10Number()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="107-107"];
m9_45 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInvalidNonBase10Number()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="111-111"];
m9_47 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInvalidNonBase10Number()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="115-115"];
m9_42 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInvalidNonBase10Number()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="105-105"];
m9_44 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInvalidNonBase10Number()", file="ExceptionHandlingTests.cs", label="reader = new JsonTextReader(new StringReader(json))", span="109-109"];
m9_46 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInvalidNonBase10Number()", file="ExceptionHandlingTests.cs", label="reader = new JsonTextReader(new StringReader(json))", span="113-113"];
m9_41 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInvalidNonBase10Number()", file="ExceptionHandlingTests.cs", label="string json = ''0aq2dun13.hod''", span="103-103"];
m9_48 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInvalidNonBase10Number()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInvalidNonBase10Number()", span="101-101"];
m9_255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBadCharInArray()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBadCharInArray()", span="369-369"];
m9_258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBadCharInArray()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing value: }. Path '', line 1, position 1.'')", span="375-375"];
m9_256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBadCharInArray()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[}''))", span="371-371"];
m9_257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBadCharInArray()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="373-373"];
m9_259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBadCharInArray()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadBadCharInArray()", span="369-369"];
m9_364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow()", span="518-518"];
m9_366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="522-522"];
m9_372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow()", file="ExceptionHandlingTests.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="530-530"];
m9_365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow()", file="ExceptionHandlingTests.cs", label="BigInteger i = new BigInteger(long.MaxValue)", span="520-520"];
m9_367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="523-523"];
m9_368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="524-524"];
m9_371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow()", file="ExceptionHandlingTests.cs", label="BigInteger total = i + j", span="528-528"];
m9_373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow()", file="ExceptionHandlingTests.cs", label="reader.Read()", span="531-531"];
m9_374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow()", file="ExceptionHandlingTests.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="533-533"];
m9_369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow()", file="ExceptionHandlingTests.cs", label="int j = 1", span="526-526"];
m9_370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow()", file="ExceptionHandlingTests.cs", label="j < 1000", span="526-526"];
m9_375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow()", file="ExceptionHandlingTests.cs", label="j++", span="526-526"];
m9_376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ReadInt64Overflow()", span="518-518"];
m9_59 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="421-421"];
m9_532 [cluster="System.Text.Encoding.GetBytes(string)", file="ExceptionHandlingTests.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m9_206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseConstructorWithUnexpectedCharacter()", file="ExceptionHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseConstructorWithUnexpectedCharacter()", span="286-286"];
m9_209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseConstructorWithUnexpectedCharacter()", file="ExceptionHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character while parsing constructor: !. Path '', line 1, position 9.'')", span="291-291"];
m9_208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseConstructorWithUnexpectedCharacter()", file="ExceptionHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="289-289"];
m9_207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseConstructorWithUnexpectedCharacter()", file="ExceptionHandlingTests.cs", label="string json = ''new Date !''", span="288-288"];
m9_210 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseConstructorWithUnexpectedCharacter()", file="ExceptionHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests.ParseConstructorWithUnexpectedCharacter()", span="286-286"];
m9_748 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_749 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_752 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_753 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_811 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_773 [file="ExceptionHandlingTests.cs", label=total, span=""];
m9_774 [file="ExceptionHandlingTests.cs", label=total, span=""];
m9_808 [file="ExceptionHandlingTests.cs", label=json, span=""];
m9_745 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_746 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_747 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_750 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_751 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_754 [file="ExceptionHandlingTests.cs", label=jsonTextReader, span=""];
m9_755 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_756 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_757 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_758 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_759 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_760 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_761 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_762 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_763 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_764 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_765 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_766 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_767 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_768 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_769 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_770 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_771 [file="ExceptionHandlingTests.cs", label=jsonTextReader, span=""];
m9_772 [file="ExceptionHandlingTests.cs", label=jsonTextReader, span=""];
m9_775 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_776 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_777 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_778 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_779 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_780 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_781 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_782 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_783 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_784 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_785 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_786 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_787 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_788 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_789 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_790 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_791 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_792 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_793 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_794 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_795 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_796 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_797 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_798 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_799 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_800 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_801 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_802 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_803 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_804 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_805 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_806 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_807 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_809 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m9_810 [file="ExceptionHandlingTests.cs", label=reader, span=""];
m11_23 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="94-94"];
m11_24 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="bool nullable = ReflectionUtils.IsNullableType(objectType)", span="96-96"];
m11_25 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="Type t = (nullable)\r\n        ? Nullable.GetUnderlyingType(objectType)\r\n        : objectType", span="97-99"];
m11_26 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="reader.TokenType == JsonToken.Null", span="101-101"];
m11_27 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="!ReflectionUtils.IsNullableType(objectType)", span="103-103"];
m11_28 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="throw new Exception(''Cannot convert null value to {0}.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="104-104"];
m11_30 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="reader.TokenType != JsonToken.String", span="109-109"];
m11_31 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="throw new Exception(''Unexpected token parsing date. Expected String, got {0}.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="110-110"];
m11_32 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="string dateText = reader.Value.ToString()", span="112-112"];
m11_33 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="string.IsNullOrEmpty(dateText) && nullable", span="114-114"];
m11_35 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="t == typeof(DateTimeOffset)", span="118-118"];
m11_29 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="return null;", span="106-106"];
m11_37 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="return DateTimeOffset.ParseExact(dateText, _dateTimeFormat, Culture, _dateTimeStyles);", span="121-121"];
m11_38 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="return DateTimeOffset.Parse(dateText, Culture, _dateTimeStyles);", span="123-123"];
m11_40 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="return DateTime.ParseExact(dateText, _dateTimeFormat, Culture, _dateTimeStyles);", span="128-128"];
m11_41 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="return DateTime.Parse(dateText, Culture, _dateTimeStyles);", span="130-130"];
m11_34 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="return null;", span="115-115"];
m11_36 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="!string.IsNullOrEmpty(_dateTimeFormat)", span="120-120"];
m11_39 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="!string.IsNullOrEmpty(_dateTimeFormat)", span="127-127"];
m11_42 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="Exit Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="94-94"];
m11_43 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="IReferenceResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="94-94"];
m11_50 [cluster="System.DateTime.Parse(string, System.IFormatProvider, System.Globalization.DateTimeStyles)", file="IReferenceResolver.cs", label="Entry System.DateTime.Parse(string, System.IFormatProvider, System.Globalization.DateTimeStyles)", span="0-0"];
m11_17 [cluster="System.DateTimeOffset.ToUniversalTime()", file="IReferenceResolver.cs", label="Entry System.DateTimeOffset.ToUniversalTime()", span="0-0"];
m11_15 [cluster="System.DateTime.ToUniversalTime()", file="IReferenceResolver.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m11_45 [cluster="object.ToString()", file="IReferenceResolver.cs", label="Entry object.ToString()", span="0-0"];
m11_48 [cluster="System.DateTimeOffset.Parse(string, System.IFormatProvider, System.Globalization.DateTimeStyles)", file="IReferenceResolver.cs", label="Entry System.DateTimeOffset.Parse(string, System.IFormatProvider, System.Globalization.DateTimeStyles)", span="0-0"];
m11_0 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="53-53"];
m11_1 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="string text", span="55-55"];
m11_2 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="value is DateTime", span="57-57"];
m11_3 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="DateTime dateTime = (DateTime)value", span="59-59"];
m11_7 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="value is DateTimeOffset", span="68-68"];
m11_8 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="DateTimeOffset dateTimeOffset = (DateTimeOffset)value", span="70-70"];
m11_12 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="throw new Exception(''Unexpected value when converting date. Expected DateTime or DateTimeOffset, got {0}.''.FormatWith(CultureInfo.InvariantCulture, ReflectionUtils.GetObjectType(value)));", span="80-80"];
m11_13 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="writer.WriteValue(text)", span="83-83"];
m11_4 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="(_dateTimeStyles & DateTimeStyles.AdjustToUniversal) == DateTimeStyles.AdjustToUniversal\r\n          || (_dateTimeStyles & DateTimeStyles.AssumeUniversal) == DateTimeStyles.AssumeUniversal", span="61-62"];
m11_5 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="dateTime = dateTime.ToUniversalTime()", span="63-63"];
m11_6 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="text = dateTime.ToString(_dateTimeFormat ?? DefaultDateTimeFormat, Culture)", span="65-65"];
m11_9 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="(_dateTimeStyles & DateTimeStyles.AdjustToUniversal) == DateTimeStyles.AdjustToUniversal\r\n          || (_dateTimeStyles & DateTimeStyles.AssumeUniversal) == DateTimeStyles.AssumeUniversal", span="71-72"];
m11_10 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="dateTimeOffset = dateTimeOffset.ToUniversalTime()", span="73-73"];
m11_11 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="text = dateTimeOffset.ToString(_dateTimeFormat ?? DefaultDateTimeFormat, Culture)", span="75-75"];
m11_14 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IReferenceResolver.cs", label="Exit Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="53-53"];
m11_47 [cluster="System.DateTimeOffset.ParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles)", file="IReferenceResolver.cs", label="Entry System.DateTimeOffset.ParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles)", span="0-0"];
m11_16 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="IReferenceResolver.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m11_46 [cluster="string.IsNullOrEmpty(string)", file="IReferenceResolver.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m11_44 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="IReferenceResolver.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m11_22 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="IReferenceResolver.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="658-658"];
m11_19 [cluster="System.Exception.Exception(string)", file="IReferenceResolver.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m11_18 [cluster="System.DateTimeOffset.ToString(string, System.IFormatProvider)", file="IReferenceResolver.cs", label="Entry System.DateTimeOffset.ToString(string, System.IFormatProvider)", span="0-0"];
m11_20 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="IReferenceResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="36-36"];
m11_49 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles)", file="IReferenceResolver.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles)", span="0-0"];
m11_51 [file="IReferenceResolver.cs", label="Newtonsoft.Json.Converters.IsoDateTimeConverter", span=""];
m12_121 [cluster="System.Array.Copy(System.Array, System.Array, int)", file="JavaScriptUtils.cs", label="Entry System.Array.Copy(System.Array, System.Array, int)", span="0-0"];
m12_123 [cluster="System.IO.TextWriter.Write(char[], int, int)", file="JavaScriptUtils.cs", label="Entry System.IO.TextWriter.Write(char[], int, int)", span="0-0"];
m12_13 [cluster="Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", span="64-64"];
m12_17 [cluster="Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", file="JavaScriptUtils.cs", label="bufferPool.Return(buffer)", span="73-73"];
m12_16 [cluster="Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", file="JavaScriptUtils.cs", label="buffer != null", span="71-71"];
m12_18 [cluster="Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", file="JavaScriptUtils.cs", label="return bufferPool.Rent(size);", span="76-76"];
m12_14 [cluster="Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", file="JavaScriptUtils.cs", label="bufferPool == null", span="66-66"];
m12_15 [cluster="Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", file="JavaScriptUtils.cs", label="return new char[size];", span="68-68"];
m12_19 [cluster="Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", span="64-64"];
m12_132 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="106-106"];
m12_20 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", span="88-88"];
m12_22 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="int i = 0", span="94-94"];
m12_21 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="IList<char> escapeChars = new List<char>\r\n            {\r\n                '\n', '\r', '\t', '\\', '\f', '\b',\r\n            }", span="90-93"];
m12_23 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="i < ' '", span="94-94"];
m12_24 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="escapeChars.Add((char)i)", span="96-96"];
m12_25 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="i++", span="94-94"];
m12_26 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="escapeChars.Union(new[] { '\'' })", span="99-99"];
m12_28 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="escapeChars.Union(new[] { '''' })", span="103-103"];
m12_30 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="escapeChars.Union(new[] { '''', '\'', '<', '>', '&' })", span="107-107"];
m12_27 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="SingleQuoteCharEscapeFlags[escapeChar] = true", span="101-101"];
m12_29 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="DoubleQuoteCharEscapeFlags[escapeChar] = true", span="105-105"];
m12_31 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="HtmlCharEscapeFlags[escapeChar] = true", span="109-109"];
m12_32 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", span="88-88"];
m12_120 [cluster="string.Equals(string, string)", file="JavaScriptUtils.cs", label="Entry string.Equals(string, string)", span="0-0"];
m12_36 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", span="115-115"];
m12_37 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs", label="stringEscapeHandling == StringEscapeHandling.EscapeHtml", span="117-117"];
m12_39 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs", label="quoteChar == ''''", span="122-122"];
m12_38 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs", label="return HtmlCharEscapeFlags;", span="119-119"];
m12_40 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs", label="return DoubleQuoteCharEscapeFlags;", span="124-124"];
m12_41 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs", label="return SingleQuoteCharEscapeFlags;", span="127-127"];
m12_42 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", span="115-115"];
m12_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="JavaScriptUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m12_6 [cluster="Newtonsoft.Json.IArrayPool<T>.Rent(int)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.IArrayPool<T>.Rent(int)", span="13-13"];
m12_0 [cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="43-43"];
m12_1 [cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JavaScriptUtils.cs", label="bufferPool == null", span="45-45"];
m12_2 [cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JavaScriptUtils.cs", label="return new char[minSize];", span="47-47"];
m12_3 [cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JavaScriptUtils.cs", label="char[] buffer = bufferPool.Rent(minSize)", span="50-50"];
m12_4 [cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JavaScriptUtils.cs", label="return buffer;", span="51-51"];
m12_5 [cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="43-43"];
m12_12 [cluster="Newtonsoft.Json.IArrayPool<T>.Return(T[])", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.IArrayPool<T>.Return(T[])", span="19-19"];
m12_122 [cluster="string.CopyTo(int, char[], int, int)", file="JavaScriptUtils.cs", label="Entry string.CopyTo(int, char[], int, int)", span="0-0"];
m12_34 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JavaScriptUtils.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m12_133 [cluster="System.IO.StringWriter.ToString()", file="JavaScriptUtils.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m12_125 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", span="305-305"];
m12_129 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="WriteEscapedJavaScriptString(w, value, delimiter, appendDelimiters, charEscapeFlags, stringEscapeHandling, null, ref buffer)", span="312-312"];
m12_127 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="StringWriter w = StringUtils.CreateStringWriter(value?.Length ?? 16)", span="309-309"];
m12_126 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="bool[] charEscapeFlags = GetCharEscapeFlags(stringEscapeHandling, delimiter)", span="307-307"];
m12_128 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="char[] buffer = null", span="311-311"];
m12_130 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="return w.ToString();", span="313-313"];
m12_131 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", span="305-305"];
m12_7 [cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", span="54-54"];
m12_8 [cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", color=green, community=0, file="JavaScriptUtils.cs", label="bufferPool == null", prediction=16, span="56-56"];
m12_9 [cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", file="JavaScriptUtils.cs", label="return;", span="58-58"];
m12_10 [cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", file="JavaScriptUtils.cs", label="bufferPool.Return(buffer)", span="61-61"];
m12_11 [cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", span="54-54"];
m12_51 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", span="148-148"];
m12_99 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="BufferUtils.ReturnBuffer(bufferPool, writeBuffer)", span="255-255"];
m12_86 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writeBuffer = BufferUtils.EnsureBufferSize(bufferPool, UnicodeTextLength, writeBuffer)", span="216-216"];
m12_98 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="Array.Copy(writeBuffer, newBuffer, UnicodeTextLength)", span="252-252"];
m12_97 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label=isEscapedUnicodeText, span="250-250"];
m12_100 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writeBuffer = newBuffer", span="257-257"];
m12_52 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label=appendDelimiters, span="152-152"];
m12_53 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(delimiter)", span="154-154"];
m12_54 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="s != null", span="157-157"];
m12_57 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="i < s.Length", span="161-161"];
m12_58 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="char c = s[i]", span="163-163"];
m12_59 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="c < charEscapeFlags.Length && !charEscapeFlags[c]", span="165-165"];
m12_80 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="c < charEscapeFlags.Length || stringEscapeHandling == StringEscapeHandling.EscapeNonAscii", span="202-202"];
m12_81 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="c == '\'' && stringEscapeHandling != StringEscapeHandling.EscapeHtml", span="204-204"];
m12_83 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="c == '''' && stringEscapeHandling != StringEscapeHandling.EscapeHtml", span="208-208"];
m12_85 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writeBuffer == null || writeBuffer.Length < UnicodeTextLength", span="214-214"];
m12_87 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="StringUtils.ToCharAsUnicode(c, writeBuffer)", span="219-219"];
m12_95 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writeBuffer == null || writeBuffer.Length < length", span="244-244"];
m12_96 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="char[] newBuffer = BufferUtils.RentBuffer(bufferPool, length)", span="246-246"];
m12_101 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="s.CopyTo(lastWritePosition, writeBuffer, start, length - start)", span="260-260"];
m12_102 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(writeBuffer, start, length - start)", span="263-263"];
m12_105 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(escapedValue)", span="269-269"];
m12_106 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(writeBuffer, 0, UnicodeTextLength)", span="273-273"];
m12_109 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(s)", span="280-280"];
m12_110 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="int length = s.Length - lastWritePosition", span="284-284"];
m12_111 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writeBuffer == null || writeBuffer.Length < length", span="286-286"];
m12_112 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writeBuffer = BufferUtils.EnsureBufferSize(bufferPool, length, writeBuffer)", span="288-288"];
m12_113 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="s.CopyTo(lastWritePosition, writeBuffer, 0, length)", span="291-291"];
m12_114 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(writeBuffer, 0, length)", span="294-294"];
m12_115 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label=appendDelimiters, span="299-299"];
m12_116 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(delimiter)", span="301-301"];
m12_91 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="bool isEscapedUnicodeText = string.Equals(escapedValue, EscapedUnicodeText)", span="237-237"];
m12_55 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="int lastWritePosition = 0", span="159-159"];
m12_56 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="int i = 0", span="161-161"];
m12_107 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="i++", span="161-161"];
m12_90 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue == null", span="232-232"];
m12_108 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="lastWritePosition == 0", span="277-277"];
m12_61 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label=c, span="172-172"];
m12_60 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="string escapedValue", span="170-170"];
m12_89 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = null", span="227-227"];
m12_82 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\'''", span="206-206"];
m12_84 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\''''''", span="210-210"];
m12_88 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = EscapedUnicodeText", span="222-222"];
m12_93 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="int length = i - lastWritePosition + ((isEscapedUnicodeText) ? UnicodeTextLength : 0)", span="241-241"];
m12_94 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="int start = (isEscapedUnicodeText) ? UnicodeTextLength : 0", span="242-242"];
m12_103 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="lastWritePosition = i + 1", span="266-266"];
m12_104 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="!isEscapedUnicodeText", span="267-267"];
m12_92 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="i > lastWritePosition", span="239-239"];
m12_63 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\t''", span="175-175"];
m12_65 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\n''", span="178-178"];
m12_67 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\r''", span="181-181"];
m12_69 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\f''", span="184-184"];
m12_71 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\b''", span="187-187"];
m12_73 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\\''", span="190-190"];
m12_75 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\u0085''", span="193-193"];
m12_77 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\u2028''", span="196-196"];
m12_79 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\u2029''", span="199-199"];
m12_62 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="'\t'", span="174-174"];
m12_64 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="'\n'", span="177-177"];
m12_66 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="'\r'", span="180-180"];
m12_68 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="'\f'", span="183-183"];
m12_70 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="'\b'", span="186-186"];
m12_72 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="'\\'", span="189-189"];
m12_74 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="'\u0085'", span="192-192"];
m12_76 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="'\u2028'", span="195-195"];
m12_78 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="'\u2029'", span="198-198"];
m12_117 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", span="148-148"];
m12_119 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", span="114-114"];
m12_124 [cluster="System.IO.TextWriter.Write(string)", file="JavaScriptUtils.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m12_118 [cluster="System.IO.TextWriter.Write(char)", file="JavaScriptUtils.cs", label="Entry System.IO.TextWriter.Write(char)", span="0-0"];
m14_31 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.IsValid(int, int, bool)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.IsValid(int, int, bool)", span="77-77"];
m14_37 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.IsValid(int, int, bool)", file="JObject.cs", label=positiveStep, span="79-79"];
m14_38 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.IsValid(int, int, bool)", file="JObject.cs", label="return (index < stopIndex);", span="81-81"];
m14_39 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.IsValid(int, int, bool)", file="JObject.cs", label="return (index > stopIndex);", span="84-84"];
m14_40 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.IsValid(int, int, bool)", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.IsValid(int, int, bool)", span="77-77"];
m14_30 [cluster="System.Math.Min(int, int)", file="JObject.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m14_33 [cluster="int.ToString(System.IFormatProvider)", file="JObject.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m14_29 [cluster="System.Math.Max(int, int)", file="JObject.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m14_0 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", span="13-13"];
m14_1 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="Step == 0", span="15-15"];
m14_21 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="yield return a[i];", span="54-54"];
m14_3 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label=current, span="20-20"];
m14_23 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label=errorWhenNoMatch, span="59-59"];
m14_25 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label=errorWhenNoMatch, span="69-69"];
m14_2 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="throw new JsonException(''Step cannot be zero.'');", span="17-17"];
m14_4 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="JArray a = t as JArray", span="22-22"];
m14_26 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="throw new JsonException(''Array slice is not valid on {0}.''.FormatWith(CultureInfo.InvariantCulture, t.GetType().Name));", span="71-71"];
m14_5 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="a != null", span="23-23"];
m14_7 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="int startIndex = Start ?? ((stepCount > 0) ? 0 : a.Count - 1)", span="27-27"];
m14_8 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="int stopIndex = End ?? ((stepCount > 0) ? a.Count : -1)", span="28-28"];
m14_10 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="startIndex = a.Count + startIndex", span="33-33"];
m14_12 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="stopIndex = a.Count + stopIndex", span="39-39"];
m14_14 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="startIndex = Math.Min(startIndex, (stepCount > 0) ? a.Count : a.Count - 1)", span="44-44"];
m14_16 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="stopIndex = Math.Min(stopIndex, a.Count)", span="46-46"];
m14_6 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="int stepCount = Step ?? 1", span="26-26"];
m14_13 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="startIndex = Math.Max(startIndex, (stepCount > 0) ? 0 : int.MinValue)", span="43-43"];
m14_17 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="bool positiveStep = (stepCount > 0)", span="48-48"];
m14_22 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="i += stepCount", span="52-52"];
m14_9 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="Start < 0", span="31-31"];
m14_15 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="stopIndex = Math.Max(stopIndex, -1)", span="45-45"];
m14_11 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="End < 0", span="37-37"];
m14_18 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="IsValid(startIndex, stopIndex, positiveStep)", span="50-50"];
m14_19 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="int i = startIndex", span="52-52"];
m14_20 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="IsValid(i, stopIndex, positiveStep)", span="52-52"];
m14_24 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="throw new JsonException(''Array slice of {0} to {1} returned no results.''.FormatWith(CultureInfo.InvariantCulture,\r\n                                Start != null ? Start.GetValueOrDefault().ToString(CultureInfo.InvariantCulture) : ''*'',\r\n                                End != null ? End.GetValueOrDefault().ToString(CultureInfo.InvariantCulture) : ''*''));", span="61-63"];
m14_27 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", span="13-13"];
m14_34 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JObject.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m14_28 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="JObject.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m14_32 [cluster="System.Nullable<T>.GetValueOrDefault()", file="JObject.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m14_36 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JObject.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m14_41 [file="JObject.cs", label="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter", span=""];
m15_327 [cluster="double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", file="JPath.cs", label="Entry double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", span="0-0"];
m15_326 [cluster="string.IndexOfAny(char[])", file="JPath.cs", label="Entry string.IndexOfAny(char[])", span="0-0"];
m15_221 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.CreateUnexpectedCharacterException()", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.CreateUnexpectedCharacterException()", span="452-452"];
m15_222 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.CreateUnexpectedCharacterException()", file="JPath.cs", label="return new JsonException(''Unexpected character while parsing path query: '' + _expression[_currentIndex]);", span="454-454"];
m15_223 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.CreateUnexpectedCharacterException()", file="JPath.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.CreateUnexpectedCharacterException()", span="452-452"];
m15_185 [cluster="Newtonsoft.Json.Linq.JsonPath.ArrayMultipleIndexFilter.ArrayMultipleIndexFilter()", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.ArrayMultipleIndexFilter.ArrayMultipleIndexFilter()", span="4-4"];
m15_184 [cluster="System.Convert.ToInt32(string, System.IFormatProvider)", file="JPath.cs", label="Entry System.Convert.ToInt32(string, System.IFormatProvider)", span="0-0"];
m15_323 [cluster="System.Text.StringBuilder.StringBuilder()", file="JPath.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m15_9 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()", span="49-49"];
m15_10 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()", file="JPath.cs", label="int currentPartStartIndex = _currentIndex", span="51-51"];
m15_11 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()", file="JPath.cs", label="EatWhitespace()", span="53-53"];
m15_21 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()", file="JPath.cs", label="!ParsePath(Filters, currentPartStartIndex, false)", span="77-77"];
m15_12 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()", file="JPath.cs", label="_expression.Length == _currentIndex", span="55-55"];
m15_13 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()", file="JPath.cs", label="return;", span="57-57"];
m15_14 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()", file="JPath.cs", label="_expression[_currentIndex] == '$'", span="60-60"];
m15_15 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()", file="JPath.cs", label="_expression.Length == 1", span="62-62"];
m15_16 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()", file="JPath.cs", label="return;", span="64-64"];
m15_17 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()", file="JPath.cs", label="char c = _expression[_currentIndex + 1]", span="69-69"];
m15_18 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()", file="JPath.cs", label="c == '.' || c == '['", span="70-70"];
m15_19 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()", file="JPath.cs", label="_currentIndex++", span="72-72"];
m15_20 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()", file="JPath.cs", label="currentPartStartIndex = _currentIndex", span="73-73"];
m15_22 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()", file="JPath.cs", label="int lastCharacterIndex = _currentIndex", span="79-79"];
m15_23 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()", file="JPath.cs", label="EatWhitespace()", span="81-81"];
m15_25 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()", file="JPath.cs", label="throw new JsonException(''Unexpected character while parsing path: '' + _expression[lastCharacterIndex]);", span="85-85"];
m15_24 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()", file="JPath.cs", label="_currentIndex < _expression.Length", span="83-83"];
m15_26 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()", file="JPath.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()", span="49-49"];
m15_239 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190"];
m15_107 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", span="396-396"];
m15_193 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="JPath.cs", label="_currentIndex++", span="398-398"];
m15_202 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="JPath.cs", label="_expression[_currentIndex] != indexerCloseChar", span="414-414"];
m15_194 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="JPath.cs", label="EnsureLength(''Path ended with open indexer.'')", span="399-399"];
m15_195 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="JPath.cs", label="_expression[_currentIndex] != '('", span="401-401"];
m15_196 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="JPath.cs", label="throw new JsonException(''Unexpected character while parsing path indexer: '' + _expression[_currentIndex]);", span="403-403"];
m15_197 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="JPath.cs", label="_currentIndex++", span="406-406"];
m15_198 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="JPath.cs", label="QueryExpression expression = ParseExpression()", span="408-408"];
m15_199 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="JPath.cs", label="_currentIndex++", span="410-410"];
m15_204 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="JPath.cs", label="return new QueryFilter\r\n            {\r\n                Expression = expression\r\n            };", span="419-422"];
m15_200 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="JPath.cs", label="EnsureLength(''Path ended with open indexer.'')", span="411-411"];
m15_201 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="JPath.cs", label="EatWhitespace()", span="412-412"];
m15_203 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="JPath.cs", label="throw new JsonException(''Unexpected character while parsing path indexer: '' + _expression[_currentIndex]);", span="416-416"];
m15_205 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", file="JPath.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuery(char)", span="396-396"];
m15_206 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", span="482-482"];
m15_240 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="QueryExpression rootExpression = null", span="484-484"];
m15_241 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="CompositeExpression parentExpression = null", span="485-485"];
m15_254 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="return rootExpression;", span="518-518"];
m15_264 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="rootExpression == null", span="541-541"];
m15_275 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="rootExpression == null", span="567-567"];
m15_242 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="_currentIndex < _expression.Length", span="487-487"];
m15_252 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="parentExpression != null", span="515-515"];
m15_253 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="parentExpression.Expressions.Add(booleanExpression)", span="517-517"];
m15_259 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="parentExpression == null || parentExpression.Operator != QueryOperator.And", span="530-530"];
m15_261 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", color=green, community=0, file="JPath.cs", label="parentExpression != null", prediction=17, span="534-534"];
m15_266 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="parentExpression.Expressions.Add(booleanExpression)", span="547-547"];
m15_270 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="parentExpression == null || parentExpression.Operator != QueryOperator.Or", span="556-556"];
m15_277 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="parentExpression.Expressions.Add(booleanExpression)", span="573-573"];
m15_243 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="object left = ParseSide()", span="489-489"];
m15_278 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="throw new JsonException(''Path ended with open query.'');", span="577-577"];
m15_244 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="object right = null", span="490-490"];
m15_250 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="BooleanQueryExpression booleanExpression = new BooleanQueryExpression\r\n                {\r\n                    Left = left,\r\n                    Operator = op,\r\n                    Right = right\r\n                }", span="506-511"];
m15_245 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="QueryOperator op", span="492-492"];
m15_246 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="_expression[_currentIndex] == ')'\r\n                    || _expression[_currentIndex] == '|'\r\n                    || _expression[_currentIndex] == '&'", span="493-495"];
m15_247 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="op = QueryOperator.Exists", span="497-497"];
m15_248 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="op = ParseOperator()", span="501-501"];
m15_249 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="right = ParseSide()", span="503-503"];
m15_251 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="_expression[_currentIndex] == ')'", span="513-513"];
m15_255 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="return booleanExpression;", span="521-521"];
m15_256 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="_expression[_currentIndex] == '&'", span="523-523"];
m15_257 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="!Match(''&&'')", span="525-525"];
m15_267 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="_expression[_currentIndex] == '|'", span="549-549"];
m15_258 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="throw CreateUnexpectedCharacterException();", span="527-527"];
m15_260 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="CompositeExpression andExpression = new CompositeExpression { Operator = QueryOperator.And }", span="532-532"];
m15_263 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="parentExpression = andExpression", span="539-539"];
m15_265 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="rootExpression = parentExpression", span="543-543"];
m15_268 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="!Match(''||'')", span="551-551"];
m15_269 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="throw CreateUnexpectedCharacterException();", span="553-553"];
m15_271 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="CompositeExpression orExpression = new CompositeExpression { Operator = QueryOperator.Or }", span="558-558"];
m15_274 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="parentExpression = orExpression", span="565-565"];
m15_276 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="rootExpression = parentExpression", span="569-569"];
m15_279 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", file="JPath.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.ParseExpression()", span="482-482"];
m15_396 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, bool)", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, bool)", span="804-804"];
m15_397 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, bool)", file="JPath.cs", label="return Evaluate(Filters, root, t, errorWhenNoMatch);", span="806-806"];
m15_398 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, bool)", file="JPath.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, bool)", span="804-804"];
m15_29 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="JPath.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m15_399 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, bool)", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, bool)", span="809-809"];
m15_400 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, bool)", file="JPath.cs", label="IEnumerable<JToken> current = new[] { t }", span="811-811"];
m15_401 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, bool)", file="JPath.cs", label=filters, span="812-812"];
m15_402 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, bool)", file="JPath.cs", label="current = filter.ExecuteFilter(root, current, errorWhenNoMatch)", span="814-814"];
m15_403 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, bool)", file="JPath.cs", label="return current;", span="817-817"];
m15_404 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, bool)", file="JPath.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, bool)", span="809-809"];
m15_86 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.CreatePathFilter(string, bool)", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.CreatePathFilter(string, bool)", span="196-196"];
m15_90 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.CreatePathFilter(string, bool)", file="JPath.cs", label="PathFilter filter = (scan) ? (PathFilter)new ScanFilter {Name = member} : new FieldFilter {Name = member}", span="198-198"];
m15_91 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.CreatePathFilter(string, bool)", file="JPath.cs", label="return filter;", span="199-199"];
m15_92 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.CreatePathFilter(string, bool)", file="JPath.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.CreatePathFilter(string, bool)", span="196-196"];
m15_188 [cluster="char.IsDigit(char)", file="JPath.cs", label="Entry char.IsDigit(char)", span="0-0"];
m15_281 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.BooleanQueryExpression()", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.BooleanQueryExpression()", span="66-66"];
m15_282 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", span="696-696"];
m15_348 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", file="JPath.cs", label="int currentPosition = _currentIndex", span="698-698"];
m15_349 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", file="JPath.cs", label=s, span="699-699"];
m15_350 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", file="JPath.cs", label="currentPosition < _expression.Length && _expression[currentPosition] == c", span="701-701"];
m15_351 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", file="JPath.cs", label="currentPosition++", span="703-703"];
m15_353 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", file="JPath.cs", label="_currentIndex = currentPosition", span="711-711"];
m15_352 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", file="JPath.cs", label="return false;", span="707-707"];
m15_354 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", file="JPath.cs", label="return true;", span="712-712"];
m15_355 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", file="JPath.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.Match(string)", span="696-696"];
m15_89 [cluster="string.TrimEnd(params char[])", file="JPath.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m15_324 [cluster="System.Text.StringBuilder.Append(char)", file="JPath.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m15_93 [cluster="Newtonsoft.Json.Linq.JsonPath.ScanFilter.ScanFilter()", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.ScanFilter.ScanFilter()", span="4-4"];
m15_87 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JPath.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m15_328 [cluster="long.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out long)", file="JPath.cs", label="Entry long.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out long)", span="0-0"];
m15_283 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.CompositeExpression()", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.CompositeExpression.CompositeExpression()", span="33-33"];
m15_6 [cluster="Unk.nameof", file="JPath.cs", label="Entry Unk.nameof", span=""];
m15_85 [cluster="string.Substring(int, int)", file="JPath.cs", label="Entry string.Substring(int, int)", span="0-0"];
m15_88 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char, bool)", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char, bool)", span="202-202"];
m15_95 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char, bool)", file="JPath.cs", label="_currentIndex++", span="204-204"];
m15_96 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char, bool)", file="JPath.cs", label="char indexerCloseChar = (indexerOpenChar == '[') ? ']' : ')'", span="206-206"];
m15_100 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char, bool)", file="JPath.cs", label="return ParseQuotedField(indexerCloseChar, scan);", span="214-214"];
m15_97 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char, bool)", file="JPath.cs", label="EnsureLength(''Path ended with open indexer.'')", span="208-208"];
m15_102 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char, bool)", file="JPath.cs", label="return ParseQuery(indexerCloseChar);", span="218-218"];
m15_103 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char, bool)", file="JPath.cs", label="return ParseArrayIndexer(indexerCloseChar);", span="222-222"];
m15_98 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char, bool)", file="JPath.cs", label="EatWhitespace()", span="210-210"];
m15_99 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char, bool)", file="JPath.cs", label="_expression[_currentIndex] == '\''", span="212-212"];
m15_101 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char, bool)", file="JPath.cs", label="_expression[_currentIndex] == '?'", span="216-216"];
m15_104 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char, bool)", file="JPath.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(char, bool)", span="202-202"];
m15_94 [cluster="Newtonsoft.Json.Linq.JsonPath.FieldFilter.FieldFilter()", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.FieldFilter.FieldFilter()", span="6-6"];
m15_186 [cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ArraySliceFilter()", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ArraySliceFilter()", span="7-7"];
m15_405 [cluster="Newtonsoft.Json.Linq.JsonPath.PathFilter.ExecuteFilter(Newtonsoft.Json.Linq.JToken, System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.PathFilter.ExecuteFilter(Newtonsoft.Json.Linq.JToken, System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", span="8-8"];
m15_392 [cluster="Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter.FieldMultipleFilter()", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter.FieldMultipleFilter()", span="11-11"];
m15_238 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", span="580-580"];
m15_284 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="char currentChar = _expression[_currentIndex]", span="582-582"];
m15_285 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="currentChar == '\''", span="583-583"];
m15_288 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="char.IsDigit(currentChar) || currentChar == '-'", span="588-588"];
m15_290 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="sb.Append(currentChar)", span="591-591"];
m15_307 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="currentChar == 't'", span="623-623"];
m15_311 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="currentChar == 'f'", span="631-631"];
m15_315 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="currentChar == 'n'", span="639-639"];
m15_286 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="value = ReadQuotedString()", span="585-585"];
m15_287 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="return true;", span="586-586"];
m15_289 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="StringBuilder sb = new StringBuilder()", span="590-590"];
m15_295 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="string numberText = sb.ToString()", span="599-599"];
m15_305 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="sb.Append(currentChar)", span="618-618"];
m15_291 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="_currentIndex++", span="593-593"];
m15_292 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="_currentIndex < _expression.Length", span="594-594"];
m15_293 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="currentChar = _expression[_currentIndex]", span="596-596"];
m15_319 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="value = null", span="648-648"];
m15_294 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="currentChar == ' ' || currentChar == ')'", span="597-597"];
m15_296 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="numberText.IndexOfAny(new char[] { '.', 'E', 'e' }) != -1", span="601-601"];
m15_298 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="bool result = double.TryParse(numberText, NumberStyles.Float | NumberStyles.AllowThousands, CultureInfo.InvariantCulture, out d)", span="604-604"];
m15_302 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="bool result = long.TryParse(numberText, NumberStyles.Integer, CultureInfo.InvariantCulture, out l)", span="611-611"];
m15_297 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="double d", span="603-603"];
m15_301 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="long l", span="610-610"];
m15_299 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="value = d", span="605-605"];
m15_300 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="return result;", span="606-606"];
m15_303 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="value = l", span="612-612"];
m15_304 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="return result;", span="613-613"];
m15_306 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="_currentIndex++", span="619-619"];
m15_308 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="Match(''true'')", span="625-625"];
m15_309 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="value = true", span="627-627"];
m15_310 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="return true;", span="628-628"];
m15_312 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="Match(''false'')", span="633-633"];
m15_313 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="value = false", span="635-635"];
m15_314 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="return true;", span="636-636"];
m15_316 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="Match(''null'')", span="641-641"];
m15_317 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="value = null", span="643-643"];
m15_318 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="return true;", span="644-644"];
m15_320 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="return false;", span="649-649"];
m15_321 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", file="JPath.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.TryParseValue(out object)", span="580-580"];
m15_187 [cluster="Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter.ArrayIndexFilter()", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter.ArrayIndexFilter()", span="6-6"];
m15_105 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.EnsureLength(string)", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.EnsureLength(string)", span="796-796"];
m15_393 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.EnsureLength(string)", file="JPath.cs", label="_currentIndex >= _expression.Length", span="798-798"];
m15_394 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.EnsureLength(string)", file="JPath.cs", label="throw new JsonException(message);", span="800-800"];
m15_395 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.EnsureLength(string)", file="JPath.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.EnsureLength(string)", span="796-796"];
m15_28 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", span="90-90"];
m15_30 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="bool scan = false", span="92-92"];
m15_39 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="_currentIndex > currentPartStartIndex", span="105-105"];
m15_40 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="string member = _expression.Substring(currentPartStartIndex, _currentIndex - currentPartStartIndex)", span="107-107"];
m15_43 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="filters.Add(CreatePathFilter(member, scan))", span="113-113"];
m15_45 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="filters.Add(ParseIndexer(currentChar, scan))", span="117-117"];
m15_61 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="filters.Add(CreatePathFilter(member, scan))", span="142-142"];
m15_70 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="query && (currentChar == '=' || currentChar == '<' || currentChar == '!' || currentChar == '>' || currentChar == '|' || currentChar == '&')", span="156-156"];
m15_76 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="_currentIndex > currentPartStartIndex", span="175-175"];
m15_77 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="string member = _expression.Substring(currentPartStartIndex, _currentIndex - currentPartStartIndex).TrimEnd()", span="177-177"];
m15_80 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="filters.Add(CreatePathFilter(member, scan))", span="182-182"];
m15_81 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="followingDot && (atPathEnd || query)", span="187-187"];
m15_31 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="bool followingIndexer = false", span="93-93"];
m15_32 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="bool followingDot = false", span="94-94"];
m15_33 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="bool ended = false", span="96-96"];
m15_34 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="_currentIndex < _expression.Length && !ended", span="97-97"];
m15_35 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="char currentChar = _expression[_currentIndex]", span="99-99"];
m15_75 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="bool atPathEnd = (_currentIndex == _expression.Length)", span="173-173"];
m15_36 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label=currentChar, span="101-101"];
m15_73 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="throw new JsonException(''Unexpected character following indexer: '' + currentChar);", span="164-164"];
m15_37 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="'['", span="103-103"];
m15_50 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="']'", span="123-123"];
m15_53 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="' '", span="127-127"];
m15_56 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="'.'", span="133-133"];
m15_38 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="'('", span="104-104"];
m15_41 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="member == ''*''", span="108-108"];
m15_42 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="member = null", span="110-110"];
m15_44 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="scan = false", span="114-114"];
m15_46 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="_currentIndex++", span="118-118"];
m15_47 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="currentPartStartIndex = _currentIndex", span="119-119"];
m15_48 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="followingIndexer = true", span="120-120"];
m15_57 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="_currentIndex > currentPartStartIndex", span="134-134"];
m15_58 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="string member = _expression.Substring(currentPartStartIndex, _currentIndex - currentPartStartIndex)", span="136-136"];
m15_49 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="followingDot = false", span="121-121"];
m15_51 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="')'", span="124-124"];
m15_52 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="ended = true", span="125-125"];
m15_54 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="_currentIndex < _expression.Length", span="128-128"];
m15_55 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="ended = true", span="130-130"];
m15_63 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="_currentIndex + 1 < _expression.Length && _expression[_currentIndex + 1] == '.'", span="145-145"];
m15_59 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="member == ''*''", span="137-137"];
m15_60 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="member = null", span="139-139"];
m15_62 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="scan = false", span="143-143"];
m15_64 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="scan = true", span="147-147"];
m15_66 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="_currentIndex++", span="150-150"];
m15_65 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="_currentIndex++", span="148-148"];
m15_67 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="currentPartStartIndex = _currentIndex", span="151-151"];
m15_68 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="followingIndexer = false", span="152-152"];
m15_69 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="followingDot = true", span="153-153"];
m15_72 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label=followingIndexer, span="162-162"];
m15_71 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="ended = true", span="158-158"];
m15_74 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="_currentIndex++", span="167-167"];
m15_83 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="return atPathEnd;", span="193-193"];
m15_78 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="member == ''*''", span="178-178"];
m15_79 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="member = null", span="180-180"];
m15_82 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="throw new JsonException(''Unexpected end while parsing path.'');", span="189-189"];
m15_84 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", file="JPath.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, int, bool)", span="90-90"];
m15_7 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JPath.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m15_224 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseSide()", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.ParseSide()", span="457-457"];
m15_225 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseSide()", file="JPath.cs", label="EatWhitespace()", span="459-459"];
m15_226 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseSide()", file="JPath.cs", label="List<PathFilter> expressionPath", span="461-461"];
m15_227 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseSide()", file="JPath.cs", label="TryParseExpression(out expressionPath)", span="462-462"];
m15_228 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseSide()", file="JPath.cs", label="EatWhitespace()", span="464-464"];
m15_231 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseSide()", file="JPath.cs", label="object value", span="470-470"];
m15_230 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseSide()", file="JPath.cs", label="return expressionPath;", span="467-467"];
m15_229 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseSide()", file="JPath.cs", label="EnsureLength(''Path ended with open query.'')", span="465-465"];
m15_232 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseSide()", file="JPath.cs", label="TryParseValue(out value)", span="471-471"];
m15_233 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseSide()", file="JPath.cs", label="EatWhitespace()", span="473-473"];
m15_236 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseSide()", file="JPath.cs", label="throw CreateUnexpectedCharacterException();", span="479-479"];
m15_235 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseSide()", file="JPath.cs", label="return new JValue(value);", span="476-476"];
m15_234 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseSide()", file="JPath.cs", label="EnsureLength(''Path ended with open query.'')", span="474-474"];
m15_237 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseSide()", file="JPath.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.ParseSide()", span="457-457"];
m15_280 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", span="715-715"];
m15_356 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="JPath.cs", label="_currentIndex + 1 >= _expression.Length", span="717-717"];
m15_357 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="JPath.cs", label="throw new JsonException(''Path ended with open query.'');", span="719-719"];
m15_358 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="JPath.cs", label="Match(''=='')", span="722-722"];
m15_359 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="JPath.cs", label="return QueryOperator.Equals;", span="724-724"];
m15_360 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="JPath.cs", label="Match(''!='') || Match(''<>'')", span="726-726"];
m15_361 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="JPath.cs", label="return QueryOperator.NotEquals;", span="728-728"];
m15_362 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="JPath.cs", label="Match(''<='')", span="730-730"];
m15_363 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="JPath.cs", label="return QueryOperator.LessThanOrEquals;", span="732-732"];
m15_364 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="JPath.cs", label="Match(''<'')", span="734-734"];
m15_365 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="JPath.cs", label="return QueryOperator.LessThan;", span="736-736"];
m15_366 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="JPath.cs", label="Match(''>='')", span="738-738"];
m15_367 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="JPath.cs", label="return QueryOperator.GreaterThanOrEquals;", span="740-740"];
m15_368 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="JPath.cs", label="Match(''>'')", span="742-742"];
m15_369 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="JPath.cs", label="return QueryOperator.GreaterThan;", span="744-744"];
m15_370 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="JPath.cs", label="throw new JsonException(''Could not read query operator.'');", span="747-747"];
m15_371 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", file="JPath.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.ParseOperator()", span="715-715"];
m15_0 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.JPath(string)", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.JPath(string)", span="40-40"];
m15_1 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.JPath(string)", file="JPath.cs", label="ValidationUtils.ArgumentNotNull(expression, nameof(expression))", span="42-42"];
m15_2 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.JPath(string)", file="JPath.cs", label="_expression = expression", span="43-43"];
m15_3 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.JPath(string)", file="JPath.cs", label="Filters = new List<PathFilter>()", span="44-44"];
m15_4 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.JPath(string)", file="JPath.cs", label="ParseMain()", span="46-46"];
m15_5 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.JPath(string)", file="JPath.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.JPath(string)", span="40-40"];
m15_207 [cluster="Newtonsoft.Json.Linq.JsonPath.QueryFilter.QueryFilter()", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.QueryFilter.QueryFilter()", span="5-5"];
m15_325 [cluster="System.Text.StringBuilder.ToString()", file="JPath.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m15_391 [cluster="Newtonsoft.Json.Linq.JsonPath.ScanMultipleFilter.ScanMultipleFilter()", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.ScanMultipleFilter.ScanMultipleFilter()", span="4-4"];
m15_322 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", span="652-652"];
m15_329 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="JPath.cs", label="StringBuilder sb = new StringBuilder()", span="654-654"];
m15_330 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="JPath.cs", label="_currentIndex++", span="656-656"];
m15_336 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="JPath.cs", label="sb.Append('\'')", span="666-666"];
m15_338 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="JPath.cs", label="sb.Append('\\')", span="670-670"];
m15_343 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="JPath.cs", label="return sb.ToString();", span="683-683"];
m15_345 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="JPath.cs", label="sb.Append(currentChar)", span="689-689"];
m15_331 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="JPath.cs", label="_currentIndex < _expression.Length", span="657-657"];
m15_332 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="JPath.cs", label="char currentChar = _expression[_currentIndex]", span="659-659"];
m15_346 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="JPath.cs", label="throw new JsonException(''Path ended with an open string.'');", span="693-693"];
m15_333 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="JPath.cs", label="currentChar == '\\' && _currentIndex + 1 < _expression.Length", span="660-660"];
m15_341 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="JPath.cs", label="currentChar == '\''", span="679-679"];
m15_334 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="JPath.cs", label="_currentIndex++", span="662-662"];
m15_335 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="JPath.cs", label="_expression[_currentIndex] == '\''", span="664-664"];
m15_337 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", color=green, community=0, file="JPath.cs", label="_expression[_currentIndex] == '\\'", prediction=18, span="668-668"];
m15_340 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="JPath.cs", label="_currentIndex++", span="677-677"];
m15_342 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="JPath.cs", label="_currentIndex++", span="681-681"];
m15_344 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="JPath.cs", label="_currentIndex++", span="688-688"];
m15_347 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", file="JPath.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.ReadQuotedString()", span="652-652"];
m15_106 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", span="750-750"];
m15_372 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", file="JPath.cs", label="List<string> fields = null", span="752-752"];
m15_377 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", file="JPath.cs", label="_expression[_currentIndex] == indexerCloseChar", span="761-761"];
m15_380 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", file="JPath.cs", label="return (scan)\r\n                            ? (PathFilter)new ScanMultipleFilter { Names = fields }\r\n                            : (PathFilter)new FieldMultipleFilter { Names = fields };", span="766-768"];
m15_381 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", file="JPath.cs", label="return CreatePathFilter(field, scan);", span="772-772"];
m15_373 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", file="JPath.cs", label="_currentIndex < _expression.Length", span="754-754"];
m15_378 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", file="JPath.cs", label="fields != null", span="763-763"];
m15_379 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", file="JPath.cs", label="fields.Add(field)", span="765-765"];
m15_385 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", file="JPath.cs", label="fields == null", span="780-780"];
m15_387 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", file="JPath.cs", label="fields.Add(field)", span="785-785"];
m15_374 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", file="JPath.cs", label="string field = ReadQuotedString()", span="756-756"];
m15_389 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", file="JPath.cs", label="throw new JsonException(''Path ended with open indexer.'');", span="793-793"];
m15_375 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", file="JPath.cs", label="EatWhitespace()", span="758-758"];
m15_376 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", file="JPath.cs", label="EnsureLength(''Path ended with open indexer.'')", span="759-759"];
m15_382 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", file="JPath.cs", label="_expression[_currentIndex] == ','", span="775-775"];
m15_383 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", file="JPath.cs", label="_currentIndex++", span="777-777"];
m15_388 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", file="JPath.cs", label="throw new JsonException(''Unexpected character while parsing path indexer: '' + _expression[_currentIndex]);", span="789-789"];
m15_384 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", file="JPath.cs", label="EatWhitespace()", span="778-778"];
m15_386 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", file="JPath.cs", label="fields = new List<string>()", span="782-782"];
m15_390 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", file="JPath.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.ParseQuotedField(char, bool)", span="750-750"];
m15_208 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseExpression(out System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>)", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.TryParseExpression(out System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>)", span="425-425"];
m15_209 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseExpression(out System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>)", file="JPath.cs", label="_expression[_currentIndex] == '$'", span="427-427"];
m15_210 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseExpression(out System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>)", file="JPath.cs", label="expressionPath = new List<PathFilter>()", span="429-429"];
m15_212 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseExpression(out System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>)", file="JPath.cs", label="_expression[_currentIndex] == '@'", span="432-432"];
m15_211 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseExpression(out System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>)", file="JPath.cs", label="expressionPath.Add(RootFilter.Instance)", span="430-430"];
m15_217 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseExpression(out System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>)", file="JPath.cs", label="ParsePath(expressionPath, _currentIndex, true)", span="444-444"];
m15_213 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseExpression(out System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>)", file="JPath.cs", label="expressionPath = new List<PathFilter>()", span="434-434"];
m15_214 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseExpression(out System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>)", file="JPath.cs", label="expressionPath = null", span="438-438"];
m15_215 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseExpression(out System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>)", file="JPath.cs", label="return false;", span="439-439"];
m15_216 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseExpression(out System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>)", file="JPath.cs", label="_currentIndex++", span="442-442"];
m15_218 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseExpression(out System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>)", file="JPath.cs", label="throw new JsonException(''Path ended with open query.'');", span="446-446"];
m15_219 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseExpression(out System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>)", file="JPath.cs", label="return true;", span="449-449"];
m15_220 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.TryParseExpression(out System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>)", file="JPath.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.TryParseExpression(out System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>)", span="425-425"];
m15_27 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.EatWhitespace()", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.EatWhitespace()", span="383-383"];
m15_189 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.EatWhitespace()", file="JPath.cs", label="_currentIndex < _expression.Length", span="385-385"];
m15_190 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.EatWhitespace()", file="JPath.cs", label="_expression[_currentIndex] != ' '", span="387-387"];
m15_191 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.EatWhitespace()", file="JPath.cs", label="_currentIndex++", span="392-392"];
m15_192 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.EatWhitespace()", file="JPath.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.EatWhitespace()", span="383-383"];
m15_108 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", span="226-226"];
m15_109 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="int start = _currentIndex", span="228-228"];
m15_121 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="currentCharacter == indexerCloseChar", span="247-247"];
m15_159 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="_expression[_currentIndex] != indexerCloseChar", span="326-326"];
m15_110 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="int? end = null", span="229-229"];
m15_122 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="int length = (end ?? _currentIndex) - start", span="249-249"];
m15_126 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="string indexer = _expression.Substring(start, length)", span="258-258"];
m15_132 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="string indexer = _expression.Substring(start, length)", span="268-268"];
m15_140 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="string indexer = _expression.Substring(start, length)", span="290-290"];
m15_144 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="int length = (end ?? _currentIndex) - start", span="298-298"];
m15_149 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="string indexer = _expression.Substring(start, length)", span="310-310"];
m15_163 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="int length = (end ?? _currentIndex) - start", span="335-335"];
m15_165 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="string indexer = _expression.Substring(start, length)", span="339-339"];
m15_111 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="List<int> indexes = null", span="230-230"];
m15_179 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="end != null", span="371-371"];
m15_112 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="int colonCount = 0", span="231-231"];
m15_123 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="indexes != null", span="251-251"];
m15_128 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="indexes.Add(index)", span="261-261"];
m15_129 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="return new ArrayMultipleIndexFilter { Indexes = indexes };", span="262-262"];
m15_147 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="indexes == null", span="305-305"];
m15_150 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="indexes.Add(Convert.ToInt32(indexer, CultureInfo.InvariantCulture))", span="311-311"];
m15_113 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="int? startIndex = null", span="232-232"];
m15_130 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="colonCount > 0", span="264-264"];
m15_134 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="colonCount == 1", span="271-271"];
m15_167 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="colonCount == 0", span="342-342"];
m15_169 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="colonCount == 1", span="346-346"];
m15_172 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="colonCount++", span="356-356"];
m15_114 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="int? endIndex = null", span="233-233"];
m15_137 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="return new ArraySliceFilter { Start = startIndex, End = endIndex, Step = step };", span="281-281"];
m15_115 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="int? step = null", span="234-234"];
m15_116 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="_currentIndex < _expression.Length", span="236-236"];
m15_117 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="char currentCharacter = _expression[_currentIndex]", span="238-238"];
m15_182 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="throw new JsonException(''Path ended with open indexer.'');", span="380-380"];
m15_118 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="currentCharacter == ' '", span="240-240"];
m15_143 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="currentCharacter == ','", span="296-296"];
m15_155 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="currentCharacter == '*'", span="320-320"];
m15_160 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="throw new JsonException(''Unexpected character while parsing path indexer: '' + currentCharacter);", span="328-328"];
m15_162 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="currentCharacter == ':'", span="333-333"];
m15_177 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="!char.IsDigit(currentCharacter) && currentCharacter != '-'", span="365-365"];
m15_178 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="throw new JsonException(''Unexpected character while parsing path indexer: '' + currentCharacter);", span="367-367"];
m15_180 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="throw new JsonException(''Unexpected character while parsing path indexer: '' + currentCharacter);", span="373-373"];
m15_119 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="end = _currentIndex", span="242-242"];
m15_120 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="EatWhitespace()", span="243-243"];
m15_124 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="length == 0", span="253-253"];
m15_131 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="length > 0", span="266-266"];
m15_138 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="length == 0", span="285-285"];
m15_125 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="throw new JsonException(''Array index expected.'');", span="255-255"];
m15_127 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="int index = Convert.ToInt32(indexer, CultureInfo.InvariantCulture)", span="259-259"];
m15_133 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="int index = Convert.ToInt32(indexer, CultureInfo.InvariantCulture)", span="269-269"];
m15_135 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="endIndex = index", span="273-273"];
m15_136 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="step = index", span="277-277"];
m15_139 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="throw new JsonException(''Array index expected.'');", span="287-287"];
m15_141 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="int index = Convert.ToInt32(indexer, CultureInfo.InvariantCulture)", span="291-291"];
m15_142 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="return new ArrayIndexFilter { Index = index };", span="293-293"];
m15_145 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="length == 0", span="300-300"];
m15_146 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="throw new JsonException(''Array index expected.'');", span="302-302"];
m15_148 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="indexes = new List<int>()", span="307-307"];
m15_151 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="_currentIndex++", span="313-313"];
m15_152 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="EatWhitespace()", span="315-315"];
m15_153 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="start = _currentIndex", span="317-317"];
m15_154 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="end = null", span="318-318"];
m15_156 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="_currentIndex++", span="322-322"];
m15_157 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="EnsureLength(''Path ended with open indexer.'')", span="323-323"];
m15_158 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="EatWhitespace()", span="324-324"];
m15_161 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="return new ArrayIndexFilter();", span="331-331"];
m15_164 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="length > 0", span="337-337"];
m15_166 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="int index = Convert.ToInt32(indexer, CultureInfo.InvariantCulture)", span="340-340"];
m15_168 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="startIndex = index", span="344-344"];
m15_170 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="endIndex = index", span="348-348"];
m15_171 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="step = index", span="352-352"];
m15_173 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="_currentIndex++", span="358-358"];
m15_174 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="EatWhitespace()", span="360-360"];
m15_175 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="start = _currentIndex", span="362-362"];
m15_176 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="end = null", span="363-363"];
m15_181 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="_currentIndex++", span="376-376"];
m15_183 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", file="JPath.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(char)", span="226-226"];
m15_406 [file="JPath.cs", label="Newtonsoft.Json.Linq.JsonPath.JPath", span=""];
m17_42 [cluster="Newtonsoft.Json.Linq.JProperty.GetItem(int)", file="JProperty.cs", label="throw new ArgumentOutOfRangeException();", span="196-196"];
m17_45 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="JProperty.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m17_44 [cluster="Newtonsoft.Json.Linq.JProperty.GetItem(int)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.GetItem(int)", span="192-192"];
m17_43 [cluster="Newtonsoft.Json.Linq.JProperty.GetItem(int)", file="JProperty.cs", label="return Value;", span="199-199"];
m17_46 [cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", span="202-202"];
m17_114 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.SelectTokenComplex()", file="JProperty.cs", label="string productName = (string)o.SelectToken(''Manufacturers[1].Products[0].Name'')", span="436-436"];
m17_135 [cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="379-379"];
m17_136 [cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JProperty.cs", label="reader.TokenType == JsonToken.None", span="381-381"];
m17_137 [cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JProperty.cs", label="!reader.Read()", span="383-383"];
m17_138 [cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JProperty.cs", label="throw JsonReaderException.Create(reader, ''Error reading JProperty from JsonReader.'');", span="385-385"];
m17_139 [cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JProperty.cs", label="reader.MoveToContent()", span="389-389"];
m17_140 [cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JProperty.cs", label="reader.TokenType != JsonToken.PropertyName", span="391-391"];
m17_141 [cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JProperty.cs", label="throw JsonReaderException.Create(reader, ''Error reading JProperty from JsonReader. Current JsonReader item is not a property: {0}''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="393-393"];
m17_142 [cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JProperty.cs", label="JProperty p = new JProperty((string)reader.Value)", span="396-396"];
m17_143 [cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JProperty.cs", label="p.SetLineInfo(reader as IJsonLineInfo, settings)", span="397-397"];
m17_144 [cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JProperty.cs", label="p.ReadTokenFrom(reader, settings)", span="399-399"];
m17_145 [cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JProperty.cs", label="return p;", span="401-401"];
m17_146 [cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="379-379"];
m17_97 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonDeserializeExample()", file="JProperty.cs", label="string jsonText = @''{\r\n              'short': {\r\n                'original': 'http://www.foo.com/',\r\n                'short': 'krehqk',\r\n                'error': {\r\n                  'code':0,\r\n                  'msg':'No action taken'\r\n                }\r\n            }''", span="356-364"];
m17_79 [cluster="lambda expression", file="JProperty.cs", label="Entry lambda expression", span="296-296"];
m17_104 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.JProperty(string)", span="303-303"];
m17_19 [cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.CopyTo(Newtonsoft.Json.Linq.JToken[], int)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.JPropertyList.CopyTo(Newtonsoft.Json.Linq.JToken[], int)", span="72-72"];
m17_37 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(Newtonsoft.Json.Linq.JProperty)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(Newtonsoft.Json.Linq.JProperty)", span="186-186"];
m17_65 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JProperty.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m17_66 [cluster="Newtonsoft.Json.Linq.JProperty.RemoveItemAt(int)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JProperty.RemoveItemAt(int)", span="232-232"];
m17_67 [cluster="Newtonsoft.Json.Linq.JProperty.RemoveItemAt(int)", file="JProperty.cs", label="throw new JsonException(''Cannot add or remove items from {0}.''.FormatWith(CultureInfo.InvariantCulture, typeof(JProperty)));", span="234-234"];
m17_68 [cluster="Newtonsoft.Json.Linq.JProperty.RemoveItemAt(int)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.RemoveItemAt(int)", span="232-232"];
m17_39 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(Newtonsoft.Json.Linq.JProperty)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.JProperty(Newtonsoft.Json.Linq.JProperty)", span="186-186"];
m17_40 [cluster="Newtonsoft.Json.Linq.JProperty.GetItem(int)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JProperty.GetItem(int)", span="192-192"];
m17_41 [cluster="Newtonsoft.Json.Linq.JProperty.GetItem(int)", file="JProperty.cs", label="index != 0", span="194-194"];
m17_122 [cluster="Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JProperty.cs", label="writer.WriteNull()", span="353-353"];
m17_98 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonDeserializeExample()", file="JProperty.cs", label="JObject json = JObject.Parse(jsonText)", span="366-366"];
m17_99 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonDeserializeExample()", file="JProperty.cs", label="Shortie shortie = new Shortie\r\n            {\r\n                Original = (string)json[''short''][''original''],\r\n                Short = (string)json[''short''][''short''],\r\n                Error = new ShortieException\r\n                {\r\n                    Code = (int)json[''short''][''error''][''code''],\r\n                    ErrorMessage = (string)json[''short''][''error''][''msg'']\r\n                }\r\n            }", span="368-377"];
m17_100 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonDeserializeExample()", file="JProperty.cs", label="Console.WriteLine(shortie.Original)", span="379-379"];
m17_35 [cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.RemoveAt(int)", file="JProperty.cs", label="_token = null", span="117-117"];
m17_49 [cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="IsTokenUnchanged(Value, item)", span="209-209"];
m17_106 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.SelectTokenSimple()", file="JProperty.cs", label="JObject o = new JObject()", span="389-389"];
m17_16 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonBasic()", file="JProperty.cs", label="string firstDrive = (string)o[''Drives''][0]", span="91-91"];
m17_17 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonBasic()", file="JProperty.cs", label="IList<string> allDrives = o[''Drives''].Select(t => (string)t).ToList()", span="94-94"];
m17_18 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonBasic()", file="JProperty.cs", label="Exit Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonBasic()", span="77-77"];
m17_58 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonCreateParse()", file="JProperty.cs", label="JObject o = JObject.Parse(json)", span="226-226"];
m17_47 [cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="index != 0", span="204-204"];
m17_116 [cluster="Newtonsoft.Json.Linq.JContainer.CreateFromContent(object)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JContainer.CreateFromContent(object)", span="675-675"];
m17_118 [cluster="Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JProperty.cs", label="writer.WritePropertyName(_name)", span="344-344"];
m17_119 [cluster="Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JProperty.cs", label="JToken value = Value", span="346-346"];
m17_117 [cluster="Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="342-342"];
m17_120 [cluster="Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JProperty.cs", label="value != null", span="347-347"];
m17_121 [cluster="Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JProperty.cs", label="value.WriteTo(writer, converters)", span="349-349"];
m17_93 [cluster="Newtonsoft.Json.Linq.JProperty.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JProperty.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="282-282"];
m17_130 [cluster="lambda expression", file="JProperty.cs", label="(decimal)m.SelectToken(''Products[0].Price'')", span="454-454"];
m17_127 [cluster="lambda expression", file="JProperty.cs", label="(string)m.SelectToken(''Products[1].Name'')", span="450-450"];
m17_128 [cluster="lambda expression", file="JProperty.cs", label="Exit lambda expression", span="450-450"];
m17_129 [cluster="lambda expression", file="JProperty.cs", label="Entry lambda expression", span="454-454"];
m17_0 [cluster="Newtonsoft.Json.Tests.Documentation.File.OpenText(string)", file="JProperty.cs", label="Entry Newtonsoft.Json.Tests.Documentation.File.OpenText(string)", span="54-54"];
m17_1 [cluster="Newtonsoft.Json.Tests.Documentation.File.OpenText(string)", file="JProperty.cs", label="return null;", span="56-56"];
m17_2 [cluster="Newtonsoft.Json.Tests.Documentation.File.OpenText(string)", file="JProperty.cs", label="Exit Newtonsoft.Json.Tests.Documentation.File.OpenText(string)", span="54-54"];
m17_3 [cluster="Newtonsoft.Json.Tests.Documentation.File.CreateText(string)", file="JProperty.cs", label="Entry Newtonsoft.Json.Tests.Documentation.File.CreateText(string)", span="59-59"];
m17_10 [cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.Clear()", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JPropertyList.Clear()", span="62-62"];
m17_11 [cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.Clear()", file="JProperty.cs", label="_token = null", span="64-64"];
m17_12 [cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.Clear()", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.JPropertyList.Clear()", span="62-62"];
m17_91 [cluster="Newtonsoft.Json.Linq.JProperty.ClearItems()", file="JProperty.cs", label="throw new JsonException(''Cannot add or remove items from {0}.''.FormatWith(CultureInfo.InvariantCulture, typeof(JProperty)));", span="279-279"];
m17_95 [cluster="Newtonsoft.Json.Linq.JProperty.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="return (t != null && _name == t.Name && ContentsEqual(t));", span="285-285"];
m17_25 [cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.Remove(Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.JPropertyList.Remove(Newtonsoft.Json.Linq.JToken)", span="80-80"];
m17_31 [cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.Insert(int, Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="_token = item", span="109-109"];
m17_27 [cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.IndexOf(Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="return (_token == item) ? 0 : -1;", span="102-102"];
m17_26 [cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.IndexOf(Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JPropertyList.IndexOf(Newtonsoft.Json.Linq.JToken)", span="100-100"];
m17_30 [cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.Insert(int, Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="index == 0", span="107-107"];
m17_28 [cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.IndexOf(Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.JPropertyList.IndexOf(Newtonsoft.Json.Linq.JToken)", span="100-100"];
m17_29 [cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.Insert(int, Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JPropertyList.Insert(int, Newtonsoft.Json.Linq.JToken)", span="105-105"];
m17_32 [cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.Insert(int, Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.JPropertyList.Insert(int, Newtonsoft.Json.Linq.JToken)", span="105-105"];
m17_149 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JProperty.cs", label="Entry Newtonsoft.Json.JsonReader.MoveToContent()", span="1146-1146"];
m17_50 [cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="return;", span="211-211"];
m17_103 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)", file="JProperty.cs", label="_name = name", span="308-308"];
m17_150 [cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo, Newtonsoft.Json.Linq.JsonLoadSettings)", span="2217-2217"];
m17_105 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.SelectTokenSimple()", file="JProperty.cs", label="Entry Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.SelectTokenSimple()", span="387-387"];
m17_48 [cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="throw new ArgumentOutOfRangeException();", span="206-206"];
m17_109 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="1959-1959"];
m17_110 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.SelectTokenComplex()", file="JProperty.cs", label="Entry Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.SelectTokenComplex()", span="396-396"];
m17_111 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.SelectTokenComplex()", file="JProperty.cs", label="JObject o = JObject.Parse(@''{\r\n              'Stores': [\r\n                'Lambton Quay',\r\n                'Willis Street'\r\n              ],\r\n              'Manufacturers': [\r\n                {\r\n                  'Name': 'Acme Co',\r\n                  'Products': [\r\n                    {\r\n                      'Name': 'Anvil',\r\n                      'Price': 50\r\n                    }\r\n                  ]\r\n                },\r\n                {\r\n                  'Name': 'Contoso',\r\n                  'Products': [\r\n                    {\r\n                      'Name': 'Elbow Grease',\r\n                      'Price': 99.95\r\n                    },\r\n                    {\r\n                      'Name': 'Headlight Fluid',\r\n                      'Price': 4\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            }'')", span="399-428"];
m17_112 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.SelectTokenComplex()", file="JProperty.cs", label="string name = (string)o.SelectToken(''Manufacturers[0].Name'')", span="430-430"];
m17_113 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.SelectTokenComplex()", file="JProperty.cs", label="decimal productPrice = (decimal)o.SelectToken(''Manufacturers[0].Products[0].Price'')", span="433-433"];
m17_101 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonDeserializeExample()", file="JProperty.cs", label="Console.WriteLine(shortie.Error.ErrorMessage)", span="382-382"];
m17_102 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonDeserializeExample()", file="JProperty.cs", label="Exit Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonDeserializeExample()", span="353-353"];
m17_38 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="404-404"];
m17_69 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JProperty.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72"];
m17_70 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1843-1843"];
m17_71 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonSimpleQuerying()", file="JProperty.cs", label="Entry Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonSimpleQuerying()", span="254-254"];
m17_13 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonBasic()", file="JProperty.cs", label="Entry Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonBasic()", span="77-77"];
m17_14 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonBasic()", file="JProperty.cs", label="JObject o = JObject.Parse(@''{\r\n              'CPU': 'Intel',\r\n              'Drives': [\r\n                'DVD read/writer',\r\n                '500 gigabyte hard drive'\r\n              ]\r\n            }'')", span="80-86"];
m17_15 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonBasic()", file="JProperty.cs", label="string cpu = (string)o[''CPU'']", span="88-88"];
m17_123 [cluster="lambda expression", file="JProperty.cs", label="Entry lambda expression", span="446-446"];
m17_126 [cluster="lambda expression", file="JProperty.cs", label="Entry lambda expression", span="450-450"];
m17_59 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonCreateParse()", file="JProperty.cs", label="Exit Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonCreateParse()", span="215-215"];
m17_115 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.SelectTokenComplex()", file="JProperty.cs", label="Exit Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.SelectTokenComplex()", span="396-396"];
m17_72 [cluster="Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", color=green, community=0, file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", prediction=19, span="242-242"];
m17_73 [cluster="Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JProperty.cs", label="item != null && item.Type == JTokenType.Comment", span="245-245"];
m17_74 [cluster="Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JProperty.cs", label="return;", span="247-247"];
m17_75 [cluster="Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JProperty.cs", label="Value != null", span="250-250"];
m17_76 [cluster="Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JProperty.cs", label="throw new JsonException(''{0} cannot have multiple values.''.FormatWith(CultureInfo.InvariantCulture, typeof(JProperty)));", span="252-252"];
m17_77 [cluster="Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JProperty.cs", label="base.InsertItem(0, item, false)", span="255-255"];
m17_78 [cluster="Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", span="242-242"];
m17_20 [cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.Remove(Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JPropertyList.Remove(Newtonsoft.Json.Linq.JToken)", span="80-80"];
m17_107 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.SelectTokenSimple()", file="JProperty.cs", label="string name = (string)o.SelectToken(''Manufacturers[0].Name'')", span="392-392"];
m17_108 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.SelectTokenSimple()", file="JProperty.cs", label="Exit Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.SelectTokenSimple()", span="387-387"];
m17_90 [cluster="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonQuerying()", file="JProperty.cs", label="Exit Newtonsoft.Json.Tests.Documentation.LinqToJsonTests.LinqToJsonQuerying()", span="302-302"];
m17_92 [cluster="Unk.WriteLine", file="JProperty.cs", label="Entry Unk.WriteLine", span=""];
m17_147 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JProperty.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409"];
m17_53 [cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="base.SetItem(0, item)", span="219-219"];
m17_56 [cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", span="202-202"];
m17_57 [cluster="Newtonsoft.Json.Linq.JContainer.IsTokenUnchanged(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", color=green, community=0, file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JContainer.IsTokenUnchanged(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", prediction=20, span="604-604"];
m17_131 [cluster="lambda expression", file="JProperty.cs", label="Exit lambda expression", span="454-454"];
m17_151 [cluster="Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="734-734"];
m17_34 [cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.RemoveAt(int)", file="JProperty.cs", label="index == 0", span="115-115"];
m17_4 [cluster="Newtonsoft.Json.Tests.Documentation.File.CreateText(string)", file="JProperty.cs", label="return null;", span="61-61"];
m17_5 [cluster="Newtonsoft.Json.Tests.Documentation.File.CreateText(string)", file="JProperty.cs", label="Exit Newtonsoft.Json.Tests.Documentation.File.CreateText(string)", span="59-59"];
m17_6 [cluster="Newtonsoft.Json.Tests.Documentation.File.WriteAllText(string, string)", file="JProperty.cs", label="Entry Newtonsoft.Json.Tests.Documentation.File.WriteAllText(string, string)", span="64-64"];
m17_9 [cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.Add(Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.JPropertyList.Add(Newtonsoft.Json.Linq.JToken)", span="57-57"];
m17_96 [cluster="Newtonsoft.Json.Linq.JProperty.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="282-282"];
m17_94 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>()", file="JProperty.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>()", span="136-136"];
m17_124 [cluster="lambda expression", file="JProperty.cs", label="(string)s", span="446-446"];
m17_36 [cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.RemoveAt(int)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.JPropertyList.RemoveAt(int)", span="113-113"];
m17_21 [cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.Remove(Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="_token == item", span="82-82"];
m17_22 [cluster="lambda expression", file="JProperty.cs", label="Entry lambda expression", span="94-94"];
m17_24 [cluster="lambda expression", file="JProperty.cs", label="Exit lambda expression", span="94-94"];
m17_23 [cluster="lambda expression", file="JProperty.cs", label="(string)t", span="94-94"];
m17_33 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65"];
m17_148 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JProperty.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m17_81 [cluster="Newtonsoft.Json.Linq.JProperty.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="return (Value == item);", span="260-260"];
m17_80 [cluster="Newtonsoft.Json.Linq.JProperty.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JProperty.ContainsItem(Newtonsoft.Json.Linq.JToken)", span="258-258"];
m17_125 [cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="414-414"];
m17_7 [cluster="Newtonsoft.Json.Tests.Documentation.File.WriteAllText(string, string)", file="JProperty.cs", label="Console.WriteLine(contents)", span="66-66"];
m17_8 [cluster="Newtonsoft.Json.Tests.Documentation.File.WriteAllText(string, string)", file="JProperty.cs", label="Exit Newtonsoft.Json.Tests.Documentation.File.WriteAllText(string, string)", span="64-64"];
m17_64 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="JProperty.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m17_132 [cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", file="JProperty.cs", label="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests", span=""];
m17_133 [cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", file="JProperty.cs", label="return Load(reader, null);", span="369-369"];
m17_134 [cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", span="367-367"];
m17_82 [cluster="Newtonsoft.Json.Linq.JProperty.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.ContainsItem(Newtonsoft.Json.Linq.JToken)", span="258-258"];
m17_83 [cluster="Newtonsoft.Json.Linq.JProperty.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JProperty.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", span="263-263"];
m17_89 [cluster="Newtonsoft.Json.Linq.JProperty.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", span="263-263"];
m17_61 [cluster="Newtonsoft.Json.Linq.JProperty.RemoveItem(Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JProperty.RemoveItem(Newtonsoft.Json.Linq.JToken)", span="227-227"];
m17_62 [cluster="Newtonsoft.Json.Linq.JProperty.RemoveItem(Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="throw new JsonException(''Cannot add or remove items from {0}.''.FormatWith(CultureInfo.InvariantCulture, typeof(JProperty)));", span="229-229"];
m17_63 [cluster="Newtonsoft.Json.Linq.JProperty.RemoveItem(Newtonsoft.Json.Linq.JToken)", file="JProperty.cs", label="Exit Newtonsoft.Json.Linq.JProperty.RemoveItem(Newtonsoft.Json.Linq.JToken)", span="227-227"];
m17_60 [cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", file="JProperty.cs", label="Entry Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", span="207-207"];
m17_152 [file="JProperty.cs", label="Newtonsoft.Json.Linq.JProperty.JPropertyList", span=""];
m17_153 [file="JProperty.cs", label="Newtonsoft.Json.Linq.JProperty", span=""];
m18_12 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.ResetValue(object)", file="JPropertyDescriptor.cs", label="Entry Newtonsoft.Json.Linq.JPropertyDescriptor.ResetValue(object)", span="80-80"];
m18_13 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.ResetValue(object)", file="JPropertyDescriptor.cs", label="Exit Newtonsoft.Json.Linq.JPropertyDescriptor.ResetValue(object)", span="80-80"];
m18_8 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.GetValue(object)", file="JPropertyDescriptor.cs", label="Entry Newtonsoft.Json.Linq.JPropertyDescriptor.GetValue(object)", span="69-69"];
m18_9 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.GetValue(object)", file="JPropertyDescriptor.cs", label="JToken token = CastInstance(component)[Name]", span="71-71"];
m18_10 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.GetValue(object)", file="JPropertyDescriptor.cs", label="return token;", span="73-73"];
m18_11 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.GetValue(object)", file="JPropertyDescriptor.cs", label="Exit Newtonsoft.Json.Linq.JPropertyDescriptor.GetValue(object)", span="69-69"];
m18_0 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.JPropertyDescriptor(string)", file="JPropertyDescriptor.cs", label="Entry Newtonsoft.Json.Linq.JPropertyDescriptor.JPropertyDescriptor(string)", span="40-40"];
m18_1 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.JPropertyDescriptor(string)", file="JPropertyDescriptor.cs", label="Exit Newtonsoft.Json.Linq.JPropertyDescriptor.JPropertyDescriptor(string)", span="40-40"];
m18_18 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JPropertyDescriptor.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190"];
m18_14 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.SetValue(object, object)", file="JPropertyDescriptor.cs", label="Entry Newtonsoft.Json.Linq.JPropertyDescriptor.SetValue(object, object)", span="89-89"];
m18_16 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.SetValue(object, object)", file="JPropertyDescriptor.cs", label="CastInstance(component)[Name] = token", span="93-93"];
m18_17 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.SetValue(object, object)", file="JPropertyDescriptor.cs", label="Exit Newtonsoft.Json.Linq.JPropertyDescriptor.SetValue(object, object)", span="89-89"];
m18_5 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.CanResetValue(object)", file="JPropertyDescriptor.cs", label="Entry Newtonsoft.Json.Linq.JPropertyDescriptor.CanResetValue(object)", span="57-57"];
m18_6 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.CanResetValue(object)", file="JPropertyDescriptor.cs", label="return false;", span="59-59"];
m18_7 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.CanResetValue(object)", file="JPropertyDescriptor.cs", label="Exit Newtonsoft.Json.Linq.JPropertyDescriptor.CanResetValue(object)", span="57-57"];
m18_2 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.CastInstance(object)", file="JPropertyDescriptor.cs", label="Entry Newtonsoft.Json.Linq.JPropertyDescriptor.CastInstance(object)", span="45-45"];
m18_3 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.CastInstance(object)", file="JPropertyDescriptor.cs", label="return (JObject)instance;", span="47-47"];
m18_4 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.CastInstance(object)", file="JPropertyDescriptor.cs", label="Exit Newtonsoft.Json.Linq.JPropertyDescriptor.CastInstance(object)", span="45-45"];
m18_19 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.ShouldSerializeValue(object)", file="JPropertyDescriptor.cs", label="Entry Newtonsoft.Json.Linq.JPropertyDescriptor.ShouldSerializeValue(object)", span="103-103"];
m18_20 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.ShouldSerializeValue(object)", file="JPropertyDescriptor.cs", label="return false;", span="105-105"];
m18_21 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.ShouldSerializeValue(object)", file="JPropertyDescriptor.cs", label="Exit Newtonsoft.Json.Linq.JPropertyDescriptor.ShouldSerializeValue(object)", span="103-103"];
m18_22 [file="JPropertyDescriptor.cs", label="Newtonsoft.Json.Linq.JPropertyDescriptor", span=""];
m19_65 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveItem(int)", file="JPropertyKeyedCollection.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveItem(int)", span="141-141"];
m19_66 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveItem(int)", file="JPropertyKeyedCollection.cs", label="string keyForItem = GetKeyForItem(Items[index])", span="143-143"];
m19_68 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveItem(int)", file="JPropertyKeyedCollection.cs", label="base.RemoveItem(index)", span="145-145"];
m19_67 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveItem(int)", file="JPropertyKeyedCollection.cs", label="RemoveKey(keyForItem)", span="144-144"];
m19_69 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveItem(int)", file="JPropertyKeyedCollection.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveItem(int)", span="141-141"];
m19_28 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="JPropertyKeyedCollection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m19_20 [cluster="System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)", file="JPropertyKeyedCollection.cs", label="Entry System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)", span="0-0"];
m19_64 [cluster="System.Collections.ObjectModel.Collection<T>.Remove(T)", file="JPropertyKeyedCollection.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Remove(T)", span="0-0"];
m19_19 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.GetKeyForItem(Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.GetKeyForItem(Newtonsoft.Json.Linq.JToken)", span="115-115"];
m19_50 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.GetKeyForItem(Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="return ((JProperty)item).Name;", span="117-117"];
m19_51 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.GetKeyForItem(Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.GetKeyForItem(Newtonsoft.Json.Linq.JToken)", span="115-115"];
m19_36 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JPropertyKeyedCollection.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m19_122 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="133-133"];
m19_22 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ClearItems()", file="JPropertyKeyedCollection.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.ClearItems()", span="70-70"];
m19_23 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ClearItems()", file="JPropertyKeyedCollection.cs", label="base.ClearItems()", span="72-72"];
m19_26 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ClearItems()", file="JPropertyKeyedCollection.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.ClearItems()", span="70-70"];
m19_57 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Remove(string)", file="JPropertyKeyedCollection.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.Remove(string)", span="126-126"];
m19_58 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Remove(string)", file="JPropertyKeyedCollection.cs", label="key == null", span="128-128"];
m19_59 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Remove(string)", file="JPropertyKeyedCollection.cs", label="throw new ArgumentNullException(nameof(key));", span="130-130"];
m19_61 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Remove(string)", file="JPropertyKeyedCollection.cs", label="return _dictionary.ContainsKey(key) && Remove(_dictionary[key]);", span="135-135"];
m19_60 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Remove(string)", file="JPropertyKeyedCollection.cs", label="_dictionary != null", span="133-133"];
m19_62 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Remove(string)", file="JPropertyKeyedCollection.cs", label="return false;", span="138-138"];
m19_63 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Remove(string)", file="JPropertyKeyedCollection.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.Remove(string)", span="126-126"];
m19_56 [cluster="System.Collections.ObjectModel.Collection<T>.InsertItem(int, T)", file="JPropertyKeyedCollection.cs", label="Entry System.Collections.ObjectModel.Collection<T>.InsertItem(int, T)", span="0-0"];
m19_38 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JPropertyKeyedCollection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m19_18 [cluster="System.ArgumentException.ArgumentException(string)", file="JPropertyKeyedCollection.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m19_86 [cluster="System.Collections.ObjectModel.Collection<T>.SetItem(int, T)", file="JPropertyKeyedCollection.cs", label="Entry System.Collections.ObjectModel.Collection<T>.SetItem(int, T)", span="0-0"];
m19_74 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="JPropertyKeyedCollection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m19_96 [cluster="System.Collections.Generic.List<T>.IndexOfReference<T>(T)", file="JPropertyKeyedCollection.cs", label="Entry System.Collections.Generic.List<T>.IndexOfReference<T>(T)", span="237-237"];
m19_70 [cluster="System.Collections.ObjectModel.Collection<T>.RemoveItem(int)", file="JPropertyKeyedCollection.cs", label="Entry System.Collections.ObjectModel.Collection<T>.RemoveItem(int)", span="0-0"];
m19_29 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", file="JPropertyKeyedCollection.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", span="80-80"];
m19_30 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", file="JPropertyKeyedCollection.cs", label="key == null", span="82-82"];
m19_31 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", file="JPropertyKeyedCollection.cs", label="throw new ArgumentNullException(nameof(key));", span="84-84"];
m19_33 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", file="JPropertyKeyedCollection.cs", label="return _dictionary.ContainsKey(key);", span="89-89"];
m19_32 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", file="JPropertyKeyedCollection.cs", label="_dictionary != null", span="87-87"];
m19_34 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", file="JPropertyKeyedCollection.cs", label="return false;", span="92-92"];
m19_35 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", file="JPropertyKeyedCollection.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", span="80-80"];
m19_87 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", span="198-198"];
m19_88 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="_dictionary == null", span="200-200"];
m19_91 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="return _dictionary.TryGetValue(key, out value);", span="206-206"];
m19_89 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="value = null", span="202-202"];
m19_90 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="return false;", span="203-203"];
m19_92 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", span="198-198"];
m19_37 [cluster="Unk.nameof", file="JPropertyKeyedCollection.cs", label="Entry Unk.nameof", span=""];
m19_52 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.InsertItem(int, Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.InsertItem(int, Newtonsoft.Json.Linq.JToken)", span="120-120"];
m19_53 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.InsertItem(int, Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="AddKey(GetKeyForItem(item), item)", span="122-122"];
m19_54 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.InsertItem(int, Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="base.InsertItem(index, item)", span="123-123"];
m19_55 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.InsertItem(int, Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.InsertItem(int, Newtonsoft.Json.Linq.JToken)", span="120-120"];
m19_49 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", file="JPropertyKeyedCollection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m19_7 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", file="JPropertyKeyedCollection.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", span="48-48"];
m19_8 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", file="JPropertyKeyedCollection.cs", label="!ContainsItem(item)", span="50-50"];
m19_10 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", file="JPropertyKeyedCollection.cs", label="string keyForItem = GetKeyForItem(item)", span="55-55"];
m19_11 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", file="JPropertyKeyedCollection.cs", label="!Comparer.Equals(keyForItem, newKey)", span="56-56"];
m19_12 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", file="JPropertyKeyedCollection.cs", label="newKey != null", span="58-58"];
m19_13 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", file="JPropertyKeyedCollection.cs", label="AddKey(newKey, item)", span="60-60"];
m19_9 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", file="JPropertyKeyedCollection.cs", label="throw new ArgumentException(''The specified item does not exist in this KeyedCollection.'');", span="52-52"];
m19_14 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", file="JPropertyKeyedCollection.cs", label="keyForItem != null", span="63-63"];
m19_15 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", file="JPropertyKeyedCollection.cs", label="RemoveKey(keyForItem)", span="65-65"];
m19_16 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", file="JPropertyKeyedCollection.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", span="48-48"];
m19_2 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.AddKey(string, Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.AddKey(string, Newtonsoft.Json.Linq.JToken)", span="42-42"];
m19_3 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.AddKey(string, Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="EnsureDictionary()", span="44-44"];
m19_4 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.AddKey(string, Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="_dictionary[key] = item", span="45-45"];
m19_5 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.AddKey(string, Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.AddKey(string, Newtonsoft.Json.Linq.JToken)", span="42-42"];
m19_75 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", span="156-156"];
m19_76 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="string keyForItem = GetKeyForItem(item)", span="158-158"];
m19_77 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="string keyAtIndex = GetKeyForItem(Items[index])", span="159-159"];
m19_80 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="_dictionary[keyForItem] = item", span="165-165"];
m19_81 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="AddKey(keyForItem, item)", span="170-170"];
m19_84 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="base.SetItem(index, item)", span="177-177"];
m19_78 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="Comparer.Equals(keyAtIndex, keyForItem)", span="161-161"];
m19_82 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="keyAtIndex != null", span="172-172"];
m19_83 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="RemoveKey(keyAtIndex)", span="174-174"];
m19_79 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="_dictionary != null", span="163-163"];
m19_85 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", span="156-156"];
m19_0 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.JPropertyKeyedCollection()", file="JPropertyKeyedCollection.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.JPropertyKeyedCollection()", span="38-38"];
m19_1 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.JPropertyKeyedCollection()", file="JPropertyKeyedCollection.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.JPropertyKeyedCollection()", span="38-38"];
m19_21 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveKey(string)", file="JPropertyKeyedCollection.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveKey(string)", span="148-148"];
m19_73 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveKey(string)", file="JPropertyKeyedCollection.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveKey(string)", span="148-148"];
m19_6 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.EnsureDictionary()", file="JPropertyKeyedCollection.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.EnsureDictionary()", span="107-107"];
m19_46 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.EnsureDictionary()", file="JPropertyKeyedCollection.cs", label="_dictionary == null", span="109-109"];
m19_47 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.EnsureDictionary()", file="JPropertyKeyedCollection.cs", label="_dictionary = new Dictionary<string, JToken>(Comparer)", span="111-111"];
m19_48 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.EnsureDictionary()", file="JPropertyKeyedCollection.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.EnsureDictionary()", span="107-107"];
m19_97 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", span="232-232"];
m19_98 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="this == other", span="234-234"];
m19_101 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="Dictionary<string, JToken> d2 = other._dictionary", span="242-242"];
m19_99 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="return true;", span="236-236"];
m19_100 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="Dictionary<string, JToken> d1 = _dictionary", span="241-241"];
m19_102 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="d1 == null && d2 == null", span="244-244"];
m19_104 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="d1 == null", span="249-249"];
m19_107 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="return (d1.Count == 0);", span="256-256"];
m19_108 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="d1.Count != d2.Count", span="259-259"];
m19_110 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label=d1, span="264-264"];
m19_105 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="return (d2.Count == 0);", span="251-251"];
m19_106 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="d2 == null", span="254-254"];
m19_112 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="!d2.TryGetValue(keyAndProperty.Key, out secondValue)", span="267-267"];
m19_103 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="return true;", span="246-246"];
m19_109 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="return false;", span="261-261"];
m19_111 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="JToken secondValue", span="266-266"];
m19_120 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="return true;", span="286-286"];
m19_113 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="return false;", span="269-269"];
m19_114 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="JProperty p1 = (JProperty)keyAndProperty.Value", span="272-272"];
m19_115 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="JProperty p2 = (JProperty)secondValue", span="273-273"];
m19_116 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="p1.Value == null", span="275-275"];
m19_118 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="!p1.Value.DeepEquals(p2.Value)", span="280-280"];
m19_117 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="return (p2.Value == null);", span="277-277"];
m19_119 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="return false;", span="282-282"];
m19_121 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JPropertyKeyedCollection.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", span="232-232"];
m19_93 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.IndexOfReference(Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.IndexOfReference(Newtonsoft.Json.Linq.JToken)", span="227-227"];
m19_94 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.IndexOfReference(Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="return ((List<JToken>)Items).IndexOfReference(t);", span="229-229"];
m19_95 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.IndexOfReference(Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.IndexOfReference(Newtonsoft.Json.Linq.JToken)", span="227-227"];
m19_17 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.ContainsItem(Newtonsoft.Json.Linq.JToken)", span="95-95"];
m19_39 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="_dictionary == null", span="97-97"];
m19_41 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="string key = GetKeyForItem(item)", span="102-102"];
m19_40 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="return false;", span="99-99"];
m19_42 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="JToken value", span="103-103"];
m19_43 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="return _dictionary.TryGetValue(key, out value);", span="104-104"];
m19_44 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="JPropertyKeyedCollection.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.ContainsItem(Newtonsoft.Json.Linq.JToken)", span="95-95"];
m19_27 [cluster="System.Collections.ObjectModel.Collection<T>.ClearItems()", file="JPropertyKeyedCollection.cs", label="Entry System.Collections.ObjectModel.Collection<T>.ClearItems()", span="0-0"];
m19_123 [file="JPropertyKeyedCollection.cs", label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", span=""];
m20_104 [cluster="byte.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry byte.ToString(string, System.IFormatProvider)", span="0-0"];
m20_128 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan, char)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan, char)", span="389-389"];
m20_129 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan, char)", file="JsonConvert.cs", label="return ToString(value.ToString(), quoteChar);", span="391-391"];
m20_130 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan, char)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan, char)", span="389-389"];
m20_372 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting, bool)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting, bool)", span="1102-1102"];
m20_373 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting, bool)", file="JsonConvert.cs", label="XmlNodeConverter converter = new XmlNodeConverter { OmitRootObject = omitRootObject }", span="1104-1104"];
m20_374 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting, bool)", file="JsonConvert.cs", label="return SerializeObject(node, formatting, converter);", span="1106-1106"];
m20_375 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting, bool)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting, bool)", span="1102-1102"];
m20_269 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="743-743"];
m20_270 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonConvert.cs", label="return DeserializeObject(value, type, (JsonSerializerSettings)null);", span="745-745"];
m20_271 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="743-743"];
m20_30 [cluster="Newtonsoft.Json.JsonConvert.ToString(char)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(char)", span="173-173"];
m20_31 [cluster="Newtonsoft.Json.JsonConvert.ToString(char)", file="JsonConvert.cs", label="return ToString(char.ToString(value));", span="175-175"];
m20_32 [cluster="Newtonsoft.Json.JsonConvert.ToString(char)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(char)", span="173-173"];
m20_366 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXNode(XObject)", span="1079-1079"];
m20_367 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject)", file="JsonConvert.cs", label="return SerializeXNode(node, Formatting.None);", span="1081-1081"];
m20_368 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeXNode(XObject)", span="1079-1079"];
m20_379 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", span="1125-1125"];
m20_380 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", file="JsonConvert.cs", label="return DeserializeXNode(value, deserializeRootElementName, false);", span="1127-1127"];
m20_381 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", span="1125-1125"];
m20_108 [cluster="sbyte.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry sbyte.ToString(string, System.IFormatProvider)", span="0-0"];
m20_72 [cluster="Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="268-268"];
m20_73 [cluster="Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="return EnsureFloatFormat(value, EnsureDecimalPlace(value, value.ToString(''R'', CultureInfo.InvariantCulture)), floatFormatHandling, quoteChar, nullable);", span="270-270"];
m20_74 [cluster="Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="268-268"];
m20_51 [cluster="Newtonsoft.Json.JsonConvert.ToString(uint)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(uint)", span="225-225"];
m20_52 [cluster="Newtonsoft.Json.JsonConvert.ToString(uint)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="227-227"];
m20_53 [cluster="Newtonsoft.Json.JsonConvert.ToString(uint)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(uint)", span="225-225"];
m20_88 [cluster="Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="298-298"];
m20_89 [cluster="Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="return EnsureFloatFormat(value, EnsureDecimalPlace(value, value.ToString(''R'', CultureInfo.InvariantCulture)), floatFormatHandling, quoteChar, nullable);", span="300-300"];
m20_90 [cluster="Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="298-298"];
m20_349 [cluster="Unk.SerializeObject", file="JsonConvert.cs", label="Entry Unk.SerializeObject", span=""];
m20_13 [cluster="System.IO.StringWriter.Write(char)", file="JsonConvert.cs", label="Entry System.IO.StringWriter.Write(char)", span="0-0"];
m20_95 [cluster="string.IndexOf(char)", file="JsonConvert.cs", label="Entry string.IndexOf(char)", span="0-0"];
m20_219 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="567-567"];
m20_220 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="JsonSerializerSettings settings = (converters != null && converters.Length > 0)\r\n                ? new JsonSerializerSettings { Converters = converters }\r\n                : null", span="569-571"];
m20_221 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="return SerializeObject(value, null, formatting, settings);", span="573-573"];
m20_222 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="567-567"];
m20_34 [cluster="Newtonsoft.Json.JsonConvert.ToString(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(string)", span="419-419"];
m20_141 [cluster="Newtonsoft.Json.JsonConvert.ToString(string)", file="JsonConvert.cs", label="return ToString(value, '''');", span="421-421"];
m20_142 [cluster="Newtonsoft.Json.JsonConvert.ToString(string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(string)", span="419-419"];
m20_101 [cluster="Newtonsoft.Json.JsonConvert.ToString(byte)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(byte)", span="328-328"];
m20_102 [cluster="Newtonsoft.Json.JsonConvert.ToString(byte)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="330-330"];
m20_103 [cluster="Newtonsoft.Json.JsonConvert.ToString(byte)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(byte)", span="328-328"];
m20_87 [cluster="double.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry double.ToString(string, System.IFormatProvider)", span="0-0"];
m20_132 [cluster="Newtonsoft.Json.JsonConvert.ToString(string, char)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(string, char)", span="430-430"];
m20_143 [cluster="Newtonsoft.Json.JsonConvert.ToString(string, char)", file="JsonConvert.cs", label="return ToString(value, delimiter, StringEscapeHandling.Default);", span="432-432"];
m20_144 [cluster="Newtonsoft.Json.JsonConvert.ToString(string, char)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(string, char)", span="430-430"];
m20_354 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", span="1036-1036"];
m20_355 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="JsonConvert.cs", label="return DeserializeXmlNode(value, null);", span="1038-1038"];
m20_356 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", span="1036-1036"];
m20_16 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)", span="135-135"];
m20_17 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)", file="JsonConvert.cs", label="return ToString(value, DateFormatHandling.IsoDateFormat);", span="137-137"];
m20_18 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)", span="135-135"];
m20_75 [cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="273-273"];
m20_76 [cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="floatFormatHandling == FloatFormatHandling.Symbol || !(double.IsInfinity(value) || double.IsNaN(value))", span="275-275"];
m20_77 [cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="return text;", span="277-277"];
m20_78 [cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="floatFormatHandling == FloatFormatHandling.DefaultValue", span="280-280"];
m20_79 [cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="return (!nullable) ? ''0.0'' : Null;", span="282-282"];
m20_80 [cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="return quoteChar + text + quoteChar;", span="285-285"];
m20_81 [cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="273-273"];
m20_253 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting)", span="688-688"];
m20_254 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="return SerializeObjectAsync(value, formatting, null);", span="690-690"];
m20_255 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting)", span="688-688"];
m20_276 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="770-770"];
m20_277 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonConvert.cs", label="return DeserializeObject<T>(value);", span="772-772"];
m20_278 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="770-770"];
m20_42 [cluster="int.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry int.ToString(string, System.IFormatProvider)", span="0-0"];
m20_203 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="185-185"];
m20_231 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", span="649-649"];
m20_238 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs", label="StringBuilder sb = new StringBuilder(256)", span="651-651"];
m20_241 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs", label="jsonWriter.Formatting = jsonSerializer.Formatting", span="655-655"];
m20_242 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs", label="jsonSerializer.Serialize(jsonWriter, value, type)", span="657-657"];
m20_239 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs", label="StringWriter sw = new StringWriter(sb, CultureInfo.InvariantCulture)", span="652-652"];
m20_240 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="653-653"];
m20_243 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs", label="return sw.ToString();", span="660-660"];
m20_244 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", span="649-649"];
m20_15 [cluster="System.IO.StringWriter.ToString()", file="JsonConvert.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m20_298 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m20_285 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", span="829-829"];
m20_288 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="JsonSerializerSettings settings = (converters != null && converters.Length > 0)\r\n                ? new JsonSerializerSettings { Converters = converters }\r\n                : null", span="831-833"];
m20_289 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="return DeserializeObject(value, type, settings);", span="835-835"];
m20_290 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", span="829-829"];
m20_252 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="705-705"];
m20_256 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return Task.Factory.StartNew(() => SerializeObject(value, formatting, settings));", span="707-707"];
m20_257 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="705-705"];
m20_124 [cluster="char.ToString(System.IFormatProvider)", file="JsonConvert.cs", label="Entry char.ToString(System.IFormatProvider)", span="0-0"];
m20_302 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="851-851"];
m20_109 [cluster="Newtonsoft.Json.JsonConvert.ToString(decimal)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(decimal)", span="349-349"];
m20_110 [cluster="Newtonsoft.Json.JsonConvert.ToString(decimal)", file="JsonConvert.cs", label="return EnsureDecimalPlace(value.ToString(null, CultureInfo.InvariantCulture));", span="351-351"];
m20_111 [cluster="Newtonsoft.Json.JsonConvert.ToString(decimal)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(decimal)", span="349-349"];
m20_35 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Enum)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Enum)", span="183-183"];
m20_36 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Enum)", file="JsonConvert.cs", label="return value.ToString(''D'');", span="185-185"];
m20_37 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Enum)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.Enum)", span="183-183"];
m20_248 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="1016-1016"];
m20_230 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", span="616-616"];
m20_145 [cluster="Newtonsoft.Json.JsonConvert.ToString(string, char, Newtonsoft.Json.StringEscapeHandling)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(string, char, Newtonsoft.Json.StringEscapeHandling)", span="442-442"];
m20_146 [cluster="Newtonsoft.Json.JsonConvert.ToString(string, char, Newtonsoft.Json.StringEscapeHandling)", file="JsonConvert.cs", label="delimiter != '''' && delimiter != '\''", span="444-444"];
m20_147 [cluster="Newtonsoft.Json.JsonConvert.ToString(string, char, Newtonsoft.Json.StringEscapeHandling)", file="JsonConvert.cs", label="throw new ArgumentException(''Delimiter must be a single or double quote.'', nameof(delimiter));", span="446-446"];
m20_148 [cluster="Newtonsoft.Json.JsonConvert.ToString(string, char, Newtonsoft.Json.StringEscapeHandling)", file="JsonConvert.cs", label="return JavaScriptUtils.ToEscapedJavaScriptString(value, delimiter, true, stringEscapeHandling);", span="449-449"];
m20_149 [cluster="Newtonsoft.Json.JsonConvert.ToString(string, char, Newtonsoft.Json.StringEscapeHandling)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(string, char, Newtonsoft.Json.StringEscapeHandling)", span="442-442"];
m20_3 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", span="116-116"];
m20_4 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvert.cs", label="DateTime updatedDateTime = DateTimeUtils.EnsureDateTime(value, timeZoneHandling)", span="118-118"];
m20_7 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvert.cs", label="DateTimeUtils.WriteDateTimeString(writer, updatedDateTime, format, null, CultureInfo.InvariantCulture)", span="123-123"];
m20_5 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvert.cs", label="StringWriter writer = StringUtils.CreateStringWriter(64)", span="120-120"];
m20_6 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvert.cs", label="writer.Write('''')", span="122-122"];
m20_8 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvert.cs", label="writer.Write('''')", span="124-124"];
m20_9 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvert.cs", label="return writer.ToString();", span="125-125"];
m20_10 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", span="116-116"];
m20_218 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="434-434"];
m20_262 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="718-718"];
m20_263 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonConvert.cs", label="return DeserializeObject(value, null, (JsonSerializerSettings)null);", span="720-720"];
m20_264 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="718-718"];
m20_46 [cluster="short.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry short.ToString(string, System.IFormatProvider)", span="0-0"];
m20_282 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="802-802"];
m20_283 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="return (T)DeserializeObject(value, typeof(T), converters);", span="804-804"];
m20_284 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="802-802"];
m20_334 [cluster="Newtonsoft.Json.JsonConvert.PopulateObjectAsync(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObjectAsync(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="985-985"];
m20_335 [cluster="Newtonsoft.Json.JsonConvert.PopulateObjectAsync(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return Task.Factory.StartNew(() => PopulateObject(value, target, settings));", span="987-987"];
m20_336 [cluster="Newtonsoft.Json.JsonConvert.PopulateObjectAsync(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.PopulateObjectAsync(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="985-985"];
m20_331 [cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="776-776"];
m20_112 [cluster="decimal.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry decimal.ToString(string, System.IFormatProvider)", span="0-0"];
m20_55 [cluster="Newtonsoft.Json.JsonConvert.ToString(long)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(long)", span="235-235"];
m20_56 [cluster="Newtonsoft.Json.JsonConvert.ToString(long)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="237-237"];
m20_57 [cluster="Newtonsoft.Json.JsonConvert.ToString(long)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(long)", span="235-235"];
m20_113 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Guid)", span="359-359"];
m20_114 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid)", file="JsonConvert.cs", label="return ToString(value, '''');", span="361-361"];
m20_115 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.Guid)", span="359-359"];
m20_324 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="956-956"];
m20_325 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="JsonSerializer jsonSerializer = JsonSerializer.CreateDefault(settings)", span="958-958"];
m20_326 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(value))", span="960-960"];
m20_327 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="jsonSerializer.Populate(jsonReader, target)", span="962-962"];
m20_328 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="jsonReader.Read() && jsonReader.TokenType != JsonToken.Comment", span="964-964"];
m20_329 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="throw new JsonSerializationException(''Additional text found in JSON string after finishing deserializing object.'');", span="966-966"];
m20_330 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="956-956"];
m20_376 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", span="1114-1114"];
m20_377 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", file="JsonConvert.cs", label="return DeserializeXNode(value, null);", span="1116-1116"];
m20_378 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", span="1114-1114"];
m20_266 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="732-732"];
m20_267 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return DeserializeObject(value, null, settings);", span="734-734"];
m20_268 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="732-732"];
m20_369 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", span="1090-1090"];
m20_370 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="return SerializeXNode(node, formatting, false);", span="1092-1092"];
m20_371 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", span="1090-1090"];
m20_265 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="848-848"];
m20_291 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="ValidationUtils.ArgumentNotNull(value, nameof(value))", span="850-850"];
m20_292 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="JsonSerializer jsonSerializer = JsonSerializer.CreateDefault(settings)", span="852-852"];
m20_295 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(value))", span="860-860"];
m20_296 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return jsonSerializer.Deserialize(reader, type);", span="862-862"];
m20_293 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="!jsonSerializer.IsCheckAdditionalContentSet()", span="855-855"];
m20_294 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="jsonSerializer.CheckAdditionalContent = true", span="857-857"];
m20_297 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="848-848"];
m20_153 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(object)", span="457-457"];
m20_154 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="value == null", span="459-459"];
m20_156 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode typeCode = ConvertUtils.GetTypeCode(value.GetType())", span="464-464"];
m20_159 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((string)value);", span="469-469"];
m20_161 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((char)value);", span="471-471"];
m20_163 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((bool)value);", span="473-473"];
m20_165 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((sbyte)value);", span="475-475"];
m20_167 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((short)value);", span="477-477"];
m20_169 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((ushort)value);", span="479-479"];
m20_171 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((int)value);", span="481-481"];
m20_173 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((byte)value);", span="483-483"];
m20_175 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((uint)value);", span="485-485"];
m20_177 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((long)value);", span="487-487"];
m20_179 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((ulong)value);", span="489-489"];
m20_181 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((float)value);", span="491-491"];
m20_183 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((double)value);", span="493-493"];
m20_185 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((DateTime)value);", span="495-495"];
m20_187 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((decimal)value);", span="497-497"];
m20_191 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((DateTimeOffset)value);", span="504-504"];
m20_193 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((Guid)value);", span="507-507"];
m20_195 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((Uri)value);", span="509-509"];
m20_197 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((TimeSpan)value);", span="511-511"];
m20_199 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToStringInternal((BigInteger)value);", span="514-514"];
m20_201 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="throw new ArgumentException(''Unsupported type: {0}. Use the JsonSerializer class to get the object's JSON representation.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="518-518"];
m20_155 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return Null;", span="461-461"];
m20_157 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label=typeCode, span="466-466"];
m20_158 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.String", span="468-468"];
m20_160 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Char", span="470-470"];
m20_162 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Boolean", span="472-472"];
m20_164 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.SByte", span="474-474"];
m20_166 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Int16", span="476-476"];
m20_168 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.UInt16", span="478-478"];
m20_170 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Int32", span="480-480"];
m20_172 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Byte", span="482-482"];
m20_174 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.UInt32", span="484-484"];
m20_176 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Int64", span="486-486"];
m20_178 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.UInt64", span="488-488"];
m20_180 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Single", span="490-490"];
m20_182 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Double", span="492-492"];
m20_184 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.DateTime", span="494-494"];
m20_186 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Decimal", span="496-496"];
m20_188 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.DBNull", span="499-499"];
m20_190 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.DateTimeOffset", span="503-503"];
m20_192 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Guid", span="506-506"];
m20_194 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Uri", span="508-508"];
m20_196 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.TimeSpan", span="510-510"];
m20_198 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.BigInteger", span="513-513"];
m20_189 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return Null;", span="500-500"];
m20_200 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(object)", span="457-457"];
m20_321 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="942-942"];
m20_322 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonConvert.cs", label="PopulateObject(value, target, null)", span="944-944"];
m20_323 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="942-942"];
m20_350 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", span="1024-1024"];
m20_351 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", file="JsonConvert.cs", label="XmlNodeConverter converter = new XmlNodeConverter { OmitRootObject = omitRootObject }", span="1026-1026"];
m20_352 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", file="JsonConvert.cs", label="return SerializeObject(node, formatting, converter);", span="1028-1028"];
m20_353 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", span="1024-1024"];
m20_63 [cluster="Newtonsoft.Json.JsonConvert.ToString(ulong)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(ulong)", span="253-253"];
m20_64 [cluster="Newtonsoft.Json.JsonConvert.ToString(ulong)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="255-255"];
m20_65 [cluster="Newtonsoft.Json.JsonConvert.ToString(ulong)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(ulong)", span="253-253"];
m20_151 [cluster="Unk.nameof", file="JsonConvert.cs", label="Entry Unk.nameof", span=""];
m20_54 [cluster="uint.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry uint.ToString(string, System.IFormatProvider)", span="0-0"];
m20_299 [cluster="Newtonsoft.Json.JsonSerializer.IsCheckAdditionalContentSet()", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonSerializer.IsCheckAdditionalContentSet()", span="522-522"];
m20_348 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", span="989-989"];
m20_116 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", span="364-364"];
m20_117 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", file="JsonConvert.cs", label="string text", span="366-366"];
m20_119 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", file="JsonConvert.cs", label="text = value.ToString(''D'', CultureInfo.InvariantCulture)", span="369-369"];
m20_120 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", file="JsonConvert.cs", label="qc = quoteChar.ToString(CultureInfo.InvariantCulture)", span="370-370"];
m20_118 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", file="JsonConvert.cs", label="string qc", span="367-367"];
m20_121 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", file="JsonConvert.cs", label="return qc + text + qc;", span="376-376"];
m20_122 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", span="364-364"];
m20_150 [cluster="System.ArgumentException.ArgumentException(string, string)", file="JsonConvert.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m20_152 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", span="305-305"];
m20_315 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="929-929"];
m20_316 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return Task.Factory.StartNew(() => DeserializeObject(value, type, settings));", span="931-931"];
m20_317 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="929-929"];
m20_58 [cluster="long.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry long.ToString(string, System.IFormatProvider)", span="0-0"];
m20_300 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78"];
m20_275 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="817-817"];
m20_286 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return (T)DeserializeObject(value, typeof(T), settings);", span="819-819"];
m20_287 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="817-817"];
m20_382 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", span="1141-1141"];
m20_383 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="JsonConvert.cs", label="XmlNodeConverter converter = new XmlNodeConverter()", span="1143-1143"];
m20_384 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="JsonConvert.cs", label="converter.DeserializeRootElementName = deserializeRootElementName", span="1144-1144"];
m20_385 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="JsonConvert.cs", label="converter.WriteArrayAttribute = writeArrayAttribute", span="1145-1145"];
m20_386 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="JsonConvert.cs", label="return (XDocument)DeserializeObject(value, typeof(XDocument), converter);", span="1147-1147"];
m20_387 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", span="1141-1141"];
m20_123 [cluster="System.Guid.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry System.Guid.ToString(string, System.IFormatProvider)", span="0-0"];
m20_258 [cluster="System.Threading.Tasks.TaskFactory.StartNew<TResult>(System.Func<TResult>)", file="JsonConvert.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew<TResult>(System.Func<TResult>)", span="0-0"];
m20_209 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="604-604"];
m20_227 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="JsonSerializer jsonSerializer = JsonSerializer.CreateDefault(settings)", span="606-606"];
m20_228 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return SerializeObjectInternal(value, type, jsonSerializer);", span="608-608"];
m20_229 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="604-604"];
m20_224 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="585-585"];
m20_225 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return SerializeObject(value, null, settings);", span="587-587"];
m20_226 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="585-585"];
m20_43 [cluster="Newtonsoft.Json.JsonConvert.ToString(short)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(short)", span="203-203"];
m20_44 [cluster="Newtonsoft.Json.JsonConvert.ToString(short)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="205-205"];
m20_45 [cluster="Newtonsoft.Json.JsonConvert.ToString(short)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(short)", span="203-203"];
m20_205 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonConvert.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m20_344 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", span="1010-1010"];
m20_345 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="XmlNodeConverter converter = new XmlNodeConverter()", span="1012-1012"];
m20_346 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="return SerializeObject(node, formatting, converter);", span="1014-1014"];
m20_347 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", span="1010-1010"];
m20_213 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="621-621"];
m20_232 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return SerializeObject(value, null, formatting, settings);", span="623-623"];
m20_233 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="621-621"];
m20_332 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409"];
m20_82 [cluster="double.IsInfinity(double)", file="JsonConvert.cs", label="Entry double.IsInfinity(double)", span="0-0"];
m20_66 [cluster="ulong.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry ulong.ToString(string, System.IFormatProvider)", span="0-0"];
m20_249 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", span="673-673"];
m20_250 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", file="JsonConvert.cs", label="return SerializeObjectAsync(value, Formatting.None, null);", span="675-675"];
m20_251 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", span="673-673"];
m20_204 [cluster="System.ArgumentException.ArgumentException(string)", file="JsonConvert.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m20_71 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", span="303-303"];
m20_91 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="JsonConvert.cs", label="double.IsNaN(value) || double.IsInfinity(value) || text.IndexOf('.') != -1 || text.IndexOf('E') != -1 || text.IndexOf('e') != -1", span="305-305"];
m20_92 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="JsonConvert.cs", label="return text;", span="307-307"];
m20_93 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="JsonConvert.cs", label="return text + ''.0'';", span="310-310"];
m20_94 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", span="303-303"];
m20_303 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", span="877-877"];
m20_304 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", file="JsonConvert.cs", label="return DeserializeObjectAsync<T>(value, null);", span="879-879"];
m20_305 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", span="877-877"];
m20_33 [cluster="char.ToString(char)", file="JsonConvert.cs", label="Entry char.ToString(char)", span="0-0"];
m20_50 [cluster="ushort.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry ushort.ToString(string, System.IFormatProvider)", span="0-0"];
m20_138 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri, char)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Uri, char)", span="409-409"];
m20_139 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri, char)", file="JsonConvert.cs", label="return ToString(value.OriginalString, quoteChar);", span="411-411"];
m20_140 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri, char)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.Uri, char)", span="409-409"];
m20_62 [cluster="Unk.ToString", file="JsonConvert.cs", label="Entry Unk.ToString", span=""];
m20_360 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", span="1063-1063"];
m20_361 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="JsonConvert.cs", label="XmlNodeConverter converter = new XmlNodeConverter()", span="1065-1065"];
m20_362 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="JsonConvert.cs", label="converter.DeserializeRootElementName = deserializeRootElementName", span="1066-1066"];
m20_363 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="JsonConvert.cs", label="converter.WriteArrayAttribute = writeArrayAttribute", span="1067-1067"];
m20_364 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="JsonConvert.cs", label="return (XmlDocument)DeserializeObject(value, typeof(XmlDocument), converter);", span="1069-1069"];
m20_365 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", span="1063-1063"];
m20_19 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", span="146-146"];
m20_20 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonConvert.cs", label="StringWriter writer = StringUtils.CreateStringWriter(64)", span="148-148"];
m20_22 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonConvert.cs", label="DateTimeUtils.WriteDateTimeOffsetString(writer, value, format, null, CultureInfo.InvariantCulture)", span="151-151"];
m20_21 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonConvert.cs", label="writer.Write('''')", span="150-150"];
m20_23 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonConvert.cs", label="writer.Write('''')", span="152-152"];
m20_24 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonConvert.cs", label="return writer.ToString();", span="153-153"];
m20_25 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", span="146-146"];
m20_223 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="641-641"];
m20_234 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="JsonSerializer jsonSerializer = JsonSerializer.CreateDefault(settings)", span="643-643"];
m20_235 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="jsonSerializer.Formatting = formatting", span="644-644"];
m20_236 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return SerializeObjectInternal(value, type, jsonSerializer);", span="646-646"];
m20_237 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="641-641"];
m20_39 [cluster="Newtonsoft.Json.JsonConvert.ToString(int)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(int)", span="193-193"];
m20_40 [cluster="Newtonsoft.Json.JsonConvert.ToString(int)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="195-195"];
m20_41 [cluster="Newtonsoft.Json.JsonConvert.ToString(int)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(int)", span="193-193"];
m20_133 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Uri)", span="399-399"];
m20_134 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri)", file="JsonConvert.cs", label="value == null", span="401-401"];
m20_136 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri)", file="JsonConvert.cs", label="return ToString(value, '''');", span="406-406"];
m20_135 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri)", file="JsonConvert.cs", label="return Null;", span="403-403"];
m20_137 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.Uri)", span="399-399"];
m20_84 [cluster="Newtonsoft.Json.JsonConvert.ToString(double)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(double)", span="293-293"];
m20_85 [cluster="Newtonsoft.Json.JsonConvert.ToString(double)", file="JsonConvert.cs", label="return EnsureDecimalPlace(value, value.ToString(''R'', CultureInfo.InvariantCulture));", span="295-295"];
m20_86 [cluster="Newtonsoft.Json.JsonConvert.ToString(double)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(double)", span="293-293"];
m20_247 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="148-148"];
m20_279 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="790-790"];
m20_280 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return DeserializeObject<T>(value, settings);", span="792-792"];
m20_281 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="790-790"];
m20_357 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", span="1047-1047"];
m20_358 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="JsonConvert.cs", label="return DeserializeXmlNode(value, deserializeRootElementName, false);", span="1049-1049"];
m20_359 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", span="1047-1047"];
m20_131 [cluster="System.TimeSpan.ToString()", file="JsonConvert.cs", label="Entry System.TimeSpan.ToString()", span="0-0"];
m20_338 [cluster="lambda expression", file="JsonConvert.cs", label="Entry lambda expression", span="987-987"];
m20_260 [cluster="lambda expression", file="JsonConvert.cs", label="SerializeObject(value, formatting, settings)", span="707-707"];
m20_259 [cluster="lambda expression", file="JsonConvert.cs", label="Entry lambda expression", span="707-707"];
m20_261 [cluster="lambda expression", file="JsonConvert.cs", label="Exit lambda expression", span="707-707"];
m20_310 [cluster="lambda expression", file="JsonConvert.cs", label="DeserializeObject<T>(value, settings)", span="898-898"];
m20_309 [cluster="lambda expression", file="JsonConvert.cs", label="Entry lambda expression", span="898-898"];
m20_311 [cluster="lambda expression", file="JsonConvert.cs", label="Exit lambda expression", span="898-898"];
m20_319 [cluster="lambda expression", file="JsonConvert.cs", label="DeserializeObject(value, type, settings)", span="931-931"];
m20_318 [cluster="lambda expression", file="JsonConvert.cs", label="Entry lambda expression", span="931-931"];
m20_320 [cluster="lambda expression", file="JsonConvert.cs", label="Exit lambda expression", span="931-931"];
m20_339 [cluster="lambda expression", file="JsonConvert.cs", label="PopulateObject(value, target, settings)", span="987-987"];
m20_340 [cluster="lambda expression", file="JsonConvert.cs", label="Exit lambda expression", span="987-987"];
m20_202 [cluster="object.GetType()", file="JsonConvert.cs", label="Entry object.GetType()", span="0-0"];
m20_105 [cluster="Newtonsoft.Json.JsonConvert.ToString(sbyte)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(sbyte)", span="339-339"];
m20_106 [cluster="Newtonsoft.Json.JsonConvert.ToString(sbyte)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="341-341"];
m20_107 [cluster="Newtonsoft.Json.JsonConvert.ToString(sbyte)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(sbyte)", span="339-339"];
m20_312 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", span="910-910"];
m20_313 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", file="JsonConvert.cs", label="return DeserializeObjectAsync(value, null, null);", span="912-912"];
m20_314 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", span="910-910"];
m20_96 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", span="313-313"];
m20_97 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="JsonConvert.cs", label="text.IndexOf('.') != -1", span="315-315"];
m20_98 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="JsonConvert.cs", label="return text;", span="317-317"];
m20_99 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="JsonConvert.cs", label="return text + ''.0'';", span="320-320"];
m20_100 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", span="313-313"];
m20_11 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="92-92"];
m20_67 [cluster="Newtonsoft.Json.JsonConvert.ToString(float)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(float)", span="263-263"];
m20_68 [cluster="Newtonsoft.Json.JsonConvert.ToString(float)", file="JsonConvert.cs", label="return EnsureDecimalPlace(value, value.ToString(''R'', CultureInfo.InvariantCulture));", span="265-265"];
m20_69 [cluster="Newtonsoft.Json.JsonConvert.ToString(float)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(float)", span="263-263"];
m20_47 [cluster="Newtonsoft.Json.JsonConvert.ToString(ushort)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(ushort)", span="214-214"];
m20_48 [cluster="Newtonsoft.Json.JsonConvert.ToString(ushort)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="216-216"];
m20_49 [cluster="Newtonsoft.Json.JsonConvert.ToString(ushort)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(ushort)", span="214-214"];
m20_301 [cluster="System.IO.StringReader.StringReader(string)", file="JsonConvert.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m20_337 [cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action)", file="JsonConvert.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action)", span="0-0"];
m20_70 [cluster="float.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry float.ToString(string, System.IFormatProvider)", span="0-0"];
m20_27 [cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(bool)", span="163-163"];
m20_28 [cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="JsonConvert.cs", label="return (value) ? True : False;", span="165-165"];
m20_29 [cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(bool)", span="163-163"];
m20_59 [cluster="Newtonsoft.Json.JsonConvert.ToStringInternal(BigInteger)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToStringInternal(BigInteger)", span="241-241"];
m20_60 [cluster="Newtonsoft.Json.JsonConvert.ToStringInternal(BigInteger)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="243-243"];
m20_61 [cluster="Newtonsoft.Json.JsonConvert.ToStringInternal(BigInteger)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToStringInternal(BigInteger)", span="241-241"];
m20_0 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", span="104-104"];
m20_1 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", file="JsonConvert.cs", label="return ToString(value, DateFormatHandling.IsoDateFormat, DateTimeZoneHandling.RoundtripKind);", span="106-106"];
m20_2 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", span="104-104"];
m20_246 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", file="JsonConvert.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", span="0-0"];
m20_12 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="106-106"];
m20_125 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)", span="384-384"];
m20_126 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)", file="JsonConvert.cs", label="return ToString(value, '''');", span="386-386"];
m20_127 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)", span="384-384"];
m20_83 [cluster="double.IsNaN(double)", file="JsonConvert.cs", label="Entry double.IsNaN(double)", span="0-0"];
m20_14 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="631-631"];
m20_306 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="896-896"];
m20_307 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return Task.Factory.StartNew(() => DeserializeObject<T>(value, settings));", span="898-898"];
m20_308 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="896-896"];
m20_210 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="540-540"];
m20_211 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="return SerializeObject(value, formatting, (JsonSerializerSettings)null);", span="542-542"];
m20_212 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="540-540"];
m20_206 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="527-527"];
m20_207 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonConvert.cs", label="return SerializeObject(value, null, (JsonSerializerSettings)null);", span="529-529"];
m20_208 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="527-527"];
m20_272 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="754-754"];
m20_273 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonConvert.cs", label="return DeserializeObject<T>(value, (JsonSerializerSettings)null);", span="756-756"];
m20_274 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="754-754"];
m20_214 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="551-551"];
m20_215 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="JsonSerializerSettings settings = (converters != null && converters.Length > 0)\r\n                ? new JsonSerializerSettings { Converters = converters }\r\n                : null", span="553-555"];
m20_216 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="return SerializeObject(value, null, settings);", span="557-557"];
m20_217 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="551-551"];
m20_26 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="767-767"];
m20_245 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="JsonConvert.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m20_341 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", span="999-999"];
m20_342 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", file="JsonConvert.cs", label="return SerializeXmlNode(node, Formatting.None);", span="1001-1001"];
m20_343 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", span="999-999"];
m20_38 [cluster="System.Enum.ToString(string)", file="JsonConvert.cs", label="Entry System.Enum.ToString(string)", span="0-0"];
m20_388 [file="JsonConvert.cs", label=object, span=""];
m20_389 [file="JsonConvert.cs", label="Newtonsoft.Json.Formatting", span=""];
m20_390 [file="JsonConvert.cs", label="Newtonsoft.Json.JsonSerializerSettings", span=""];
m20_391 [file="JsonConvert.cs", label=string, span=""];
m20_392 [file="JsonConvert.cs", label="Newtonsoft.Json.JsonSerializerSettings", span=""];
m20_393 [file="JsonConvert.cs", label=string, span=""];
m20_394 [file="JsonConvert.cs", label="System.Type", span=""];
m20_395 [file="JsonConvert.cs", label="Newtonsoft.Json.JsonSerializerSettings", span=""];
m20_396 [file="JsonConvert.cs", label=string, span=""];
m20_397 [file="JsonConvert.cs", label=object, span=""];
m20_398 [file="JsonConvert.cs", label="Newtonsoft.Json.JsonSerializerSettings", span=""];
m22_0 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonProperty.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="121-121"];
m22_1 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonProperty.cs", label="ReferenceLoopHandling = DefaultReferenceLoopHandling", span="123-123"];
m22_2 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonProperty.cs", label="MissingMemberHandling = DefaultMissingMemberHandling", span="124-124"];
m22_3 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonProperty.cs", label="ObjectCreationHandling = DefaultObjectCreationHandling", span="125-125"];
m22_4 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonProperty.cs", label="NullValueHandling = DefaultNullValueHandling", span="126-126"];
m22_5 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonProperty.cs", label="DefaultValueHandling = DefaultDefaultValueHandling", span="127-127"];
m22_6 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonProperty.cs", label="PreserveReferencesHandling = DefaultPreserveReferencesHandling", span="128-128"];
m22_7 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonProperty.cs", label="TypeNameHandling = DefaultTypeNameHandling", span="129-129"];
m22_8 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonProperty.cs", label="TypeNameAssemblyFormat = DefaultTypeNameAssemblyFormat", span="130-130"];
m22_9 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonProperty.cs", label="Context = DefaultContext", span="131-131"];
m22_10 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonProperty.cs", label="Converters = new List<JsonConverter>()", span="132-132"];
m22_11 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonProperty.cs", label="Exit Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="121-121"];
m22_13 [file="JsonProperty.cs", label="Newtonsoft.Json.JsonSerializerSettings", span=""];
m23_2 [cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", file="JsonPropertyAttribute.cs", label="Entry Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", span="217-217"];
m23_3 [cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", file="JsonPropertyAttribute.cs", label="PropertyName = propertyName", span="219-219"];
m23_4 [cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", file="JsonPropertyAttribute.cs", label="Exit Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", span="217-217"];
m23_0 [cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute()", file="JsonPropertyAttribute.cs", label="Entry Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute()", span="209-209"];
m23_1 [cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute()", file="JsonPropertyAttribute.cs", label="Exit Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute()", span="209-209"];
m23_5 [file="JsonPropertyAttribute.cs", label="Newtonsoft.Json.JsonPropertyAttribute", span=""];
m24_311 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", span="861-861"];
m24_313 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Null, null, false)", span="865-865"];
m24_316 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", file="JsonReader.cs", label="DateTimeUtils.TryParseDateTimeOffset(s, _dateFormatString, Culture, out dt)", span="870-870"];
m24_317 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Date, dt, false)", span="872-872"];
m24_319 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", file="JsonReader.cs", label="DateTimeOffset.TryParse(s, Culture, DateTimeStyles.RoundtripKind, out dt)", span="876-876"];
m24_320 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Date, dt, false)", span="878-878"];
m24_322 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", file="JsonReader.cs", label="SetToken(JsonToken.String, s, false)", span="882-882"];
m24_323 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to DateTimeOffset: {0}.''.FormatWith(CultureInfo.InvariantCulture, s));", span="883-883"];
m24_312 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="863-863"];
m24_314 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", file="JsonReader.cs", label="return null;", span="866-866"];
m24_315 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", file="JsonReader.cs", label="DateTimeOffset dt", span="869-869"];
m24_318 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", file="JsonReader.cs", label="return dt;", span="873-873"];
m24_321 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", file="JsonReader.cs", label="return dt;", span="879-879"];
m24_324 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", span="861-861"];
m24_25 [cluster="Newtonsoft.Json.JsonPosition.JsonPosition(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonPosition.JsonPosition(Newtonsoft.Json.JsonContainerType)", span="50-50"];
m24_248 [cluster="System.Convert.ToDecimal(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToDecimal(object, System.IFormatProvider)", span="0-0"];
m24_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website()", span="47-47"];
m24_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website()", span="47-47"];
m24_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website(Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website(Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website)", span="51-51"];
m24_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website(Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website)", file="JsonReader.cs", label="website == null", span="53-53"];
m24_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website(Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website)", file="JsonReader.cs", label="throw new ArgumentNullException(''website'');", span="54-54"];
m24_354 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="953-953"];
m24_355 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs", label="SetToken(newToken, value, true)", span="955-955"];
m24_356 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="953-953"];
m24_330 [cluster="Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", span="895-895"];
m24_331 [cluster="Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", file="JsonReader.cs", label="return JsonReaderException.Create(this, ''Unexpected end when reading JSON.'');", span="897-897"];
m24_332 [cluster="Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", span="895-895"];
m24_44 [cluster="Newtonsoft.Json.JsonReader.Peek()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Peek()", span="400-400"];
m24_45 [cluster="Newtonsoft.Json.JsonReader.Peek()", file="JsonReader.cs", label="return _currentPosition.Type;", span="402-402"];
m24_46 [cluster="Newtonsoft.Json.JsonReader.Peek()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Peek()", span="400-400"];
m24_445 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Close()", span="1124-1124"];
m24_446 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs", label="_currentState = State.Closed", span="1126-1126"];
m24_447 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs", label="_tokenType = JsonToken.None", span="1127-1127"];
m24_448 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs", label="_value = null", span="1128-1128"];
m24_449 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Close()", span="1124-1124"];
m24_105 [cluster="object.ToString()", file="JsonReader.cs", label="Entry object.ToString()", span="0-0"];
m24_342 [cluster="string.StartsWith(string, System.StringComparison)", file="JsonReader.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m24_440 [cluster="Newtonsoft.Json.JsonReader.Dispose(bool)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Dispose(bool)", span="1112-1112"];
m24_442 [cluster="Newtonsoft.Json.JsonReader.Dispose(bool)", file="JsonReader.cs", label="_currentState != State.Closed && disposing", span="1114-1114"];
m24_443 [cluster="Newtonsoft.Json.JsonReader.Dispose(bool)", file="JsonReader.cs", label="Close()", span="1116-1116"];
m24_444 [cluster="Newtonsoft.Json.JsonReader.Dispose(bool)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Dispose(bool)", span="1112-1112"];
m24_164 [cluster="System.Collections.Generic.List<T>.ToArray()", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m24_350 [cluster="Newtonsoft.Json.Utilities.JsonTokenUtils.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.JsonTokenUtils.IsStartToken(Newtonsoft.Json.JsonToken)", span="45-45"];
m24_231 [cluster="bool.TryParse(string, out bool)", file="JsonReader.cs", label="Entry bool.TryParse(string, out bool)", span="0-0"];
m24_220 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadBooleanString(string)", span="705-705"];
m24_222 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Null, null, false)", span="709-709"];
m24_226 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Boolean, b, false)", span="716-716"];
m24_228 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="SetToken(JsonToken.String, s, false)", span="721-721"];
m24_229 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to boolean: {0}.''.FormatWith(CultureInfo.InvariantCulture, s));", span="722-722"];
m24_221 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="707-707"];
m24_223 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="return null;", span="710-710"];
m24_225 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="bool.TryParse(s, out b)", span="714-714"];
m24_227 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="return b;", span="717-717"];
m24_224 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="bool b", span="713-713"];
m24_230 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadBooleanString(string)", span="705-705"];
m24_24 [cluster="Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", span="1022-1022"];
m24_398 [cluster="Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", file="JsonReader.cs", label="_currentPosition.HasIndex", span="1024-1024"];
m24_399 [cluster="Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", file="JsonReader.cs", label="_currentPosition.Position++", span="1026-1026"];
m24_400 [cluster="Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", span="1022-1022"];
m24_450 [cluster="Newtonsoft.Json.JsonReader.ReadAndAssert()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAndAssert()", span="1131-1131"];
m24_451 [cluster="Newtonsoft.Json.JsonReader.ReadAndAssert()", file="JsonReader.cs", label="!Read()", span="1133-1133"];
m24_452 [cluster="Newtonsoft.Json.JsonReader.ReadAndAssert()", file="JsonReader.cs", label="throw JsonSerializationException.Create(this, ''Unexpected end when reading JSON.'');", span="1135-1135"];
m24_453 [cluster="Newtonsoft.Json.JsonReader.ReadAndAssert()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAndAssert()", span="1131-1131"];
m24_260 [cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="JsonReader.cs", label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0"];
m24_261 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTime()", span="780-780"];
m24_262 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="GetContentToken()", span="782-782"];
m24_268 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="Value is DateTimeOffset", span="790-790"];
m24_269 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="SetToken(JsonToken.Date, ((DateTimeOffset)Value).DateTime, false)", span="792-792"];
m24_270 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="return (DateTime)Value;", span="796-796"];
m24_272 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="string s = (string)Value", span="798-798"];
m24_273 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="return ReadDateTimeString(s);", span="799-799"];
m24_275 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading date. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, TokenType));", span="802-802"];
m24_263 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="JsonToken.None", span="784-784"];
m24_267 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="JsonToken.Date", span="788-788"];
m24_271 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="JsonToken.String", span="797-797"];
m24_264 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="JsonToken.Null", span="785-785"];
m24_266 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="return null;", span="787-787"];
m24_265 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="JsonToken.EndArray", span="786-786"];
m24_274 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDateTime()", span="780-780"];
m24_409 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m24_104 [cluster="System.IFormattable.ToString(string, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.IFormattable.ToString(string, System.IFormatProvider)", span="0-0"];
m24_19 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_currentPosition = new JsonPosition(value)", span="366-366"];
m24_49 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="415-415"];
m24_50 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="JsonToken t = GetContentToken()", span="417-417"];
m24_58 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="!(Value is int)", span="427-427"];
m24_59 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="SetToken(JsonToken.Integer, Convert.ToInt32(Value, CultureInfo.InvariantCulture), false)", span="429-429"];
m24_60 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="return (int)Value;", span="432-432"];
m24_62 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="string s = (string)Value", span="434-434"];
m24_63 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="return ReadInt32String(s);", span="435-435"];
m24_65 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading integer. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="438-438"];
m24_51 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label=t, span="419-419"];
m24_57 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="JsonToken.Float", span="426-426"];
m24_61 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="JsonToken.String", span="433-433"];
m24_55 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="return null;", span="424-424"];
m24_52 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="JsonToken.None", span="421-421"];
m24_56 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="JsonToken.Integer", span="425-425"];
m24_54 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="JsonToken.EndArray", span="423-423"];
m24_53 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="JsonToken.Null", span="422-422"];
m24_64 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsInt32()", span="415-415"];
m24_147 [cluster="System.Convert.FromBase64String(string)", file="JsonReader.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m24_326 [cluster="System.DateTimeOffset.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset)", file="JsonReader.cs", label="Entry System.DateTimeOffset.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset)", span="0-0"];
m24_458 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.MoveToContent()", span="1144-1144"];
m24_459 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="JsonToken t = TokenType", span="1146-1146"];
m24_461 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="!Read()", span="1149-1149"];
m24_463 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="t = TokenType", span="1154-1154"];
m24_460 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="t == JsonToken.None || t == JsonToken.Comment", span="1147-1147"];
m24_462 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="return false;", span="1151-1151"];
m24_464 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="return true;", span="1157-1157"];
m24_465 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.MoveToContent()", span="1144-1144"];
m24_43 [cluster="Newtonsoft.Json.JsonPosition.JsonPosition()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonPosition.JsonPosition()", span="41-41"];
m24_293 [cluster="System.DateTime.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", file="JsonReader.cs", label="Entry System.DateTime.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", span="0-0"];
m24_42 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m24_351 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="943-943"];
m24_352 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="SetToken(newToken, null, true)", span="945-945"];
m24_353 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="943-943"];
m24_310 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonReader.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m24_185 [cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0"];
m24_389 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", span="1030-1030"];
m24_401 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonContainerType currentObject = Pop()", span="1032-1032"];
m24_402 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="GetTypeForCloseToken(endToken) != currentObject", span="1034-1034"];
m24_403 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''JsonToken {0} is not valid for closing JsonType {1}.''.FormatWith(CultureInfo.InvariantCulture, endToken, currentObject));", span="1036-1036"];
m24_404 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Peek() != JsonContainerType.None", span="1039-1039"];
m24_405 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="_currentState = State.PostValue", span="1041-1041"];
m24_406 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="SetFinished()", span="1045-1045"];
m24_407 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", span="1030-1030"];
m24_276 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", span="805-805"];
m24_278 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Null, null, false)", span="809-809"];
m24_281 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="DateTimeUtils.TryParseDateTime(s, DateTimeZoneHandling, _dateFormatString, Culture, out dt)", span="814-814"];
m24_282 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="dt = DateTimeUtils.EnsureDateTime(dt, DateTimeZoneHandling)", span="816-816"];
m24_283 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Date, dt, false)", span="817-817"];
m24_285 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="DateTime.TryParse(s, Culture, DateTimeStyles.RoundtripKind, out dt)", span="821-821"];
m24_286 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="dt = DateTimeUtils.EnsureDateTime(dt, DateTimeZoneHandling)", span="823-823"];
m24_287 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Date, dt, false)", span="824-824"];
m24_289 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to DateTime: {0}.''.FormatWith(CultureInfo.InvariantCulture, s));", span="828-828"];
m24_277 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="807-807"];
m24_279 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="return null;", span="810-810"];
m24_280 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="DateTime dt", span="813-813"];
m24_284 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="return dt;", span="818-818"];
m24_288 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="return dt;", span="825-825"];
m24_290 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", span="805-805"];
m24_219 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
m24_436 [cluster="Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", span="1102-1102"];
m24_437 [cluster="Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", file="JsonReader.cs", label="Dispose(true)", span="1104-1104"];
m24_438 [cluster="Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", file="JsonReader.cs", label="GC.SuppressFinalize(this)", span="1105-1105"];
m24_439 [cluster="Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", span="1102-1102"];
m24_67 [cluster="System.Convert.ToInt32(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToInt32(object, System.IFormatProvider)", span="0-0"];
m24_343 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Skip()", span="922-922"];
m24_344 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="TokenType == JsonToken.PropertyName", span="924-924"];
m24_345 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="Read()", span="926-926"];
m24_346 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="JsonTokenUtils.IsStartToken(TokenType)", span="929-929"];
m24_347 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="int depth = Depth", span="931-931"];
m24_348 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="Read() && (depth < Depth)", span="933-933"];
m24_349 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Skip()", span="922-922"];
m24_20 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_maxDepth != null && Depth + 1 > _maxDepth && !_hasExceededMaxDepth", span="369-369"];
m24_325 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", span="452-452"];
m24_454 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m24_249 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadDecimalString(string)", span="755-755"];
m24_251 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Null, null, false)", span="759-759"];
m24_254 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="decimal.TryParse(s, NumberStyles.Number, Culture, out d)", span="764-764"];
m24_255 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Float, d, false)", span="766-766"];
m24_257 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="SetToken(JsonToken.String, s, false)", span="771-771"];
m24_258 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to decimal: {0}.''.FormatWith(CultureInfo.InvariantCulture, s));", span="772-772"];
m24_250 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="757-757"];
m24_252 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="return null;", span="760-760"];
m24_253 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="decimal d", span="763-763"];
m24_256 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="return d;", span="767-767"];
m24_259 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadDecimalString(string)", span="755-755"];
m24_28 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m24_186 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadDoubleString(string)", span="644-644"];
m24_188 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Null, null, false)", span="648-648"];
m24_191 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="double.TryParse(s, NumberStyles.Float | NumberStyles.AllowThousands, Culture, out d)", span="653-653"];
m24_192 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="SetToken(JsonToken.Float, d, false)", span="655-655"];
m24_194 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="SetToken(JsonToken.String, s, false)", span="660-660"];
m24_195 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to double: {0}.''.FormatWith(CultureInfo.InvariantCulture, s));", span="661-661"];
m24_187 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="646-646"];
m24_189 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="return null;", span="649-649"];
m24_190 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="double d", span="652-652"];
m24_193 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="return d;", span="656-656"];
m24_196 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadDoubleString(string)", span="644-644"];
m24_143 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", span="900-900"];
m24_333 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonReader.cs", label="ReaderReadAndAssert()", span="902-902"];
m24_334 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonReader.cs", label="Value != null && Value.ToString() == JsonTypeReflector.TypePropertyName", span="903-903"];
m24_335 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonReader.cs", label="ReaderReadAndAssert()", span="905-905"];
m24_336 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonReader.cs", label="Value != null && Value.ToString().StartsWith(''System.Byte[]'', StringComparison.Ordinal)", span="906-906"];
m24_337 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonReader.cs", label="ReaderReadAndAssert()", span="908-908"];
m24_338 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonReader.cs", label="Value.ToString() == JsonTypeReflector.ValuePropertyName", span="909-909"];
m24_340 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading bytes. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, JsonToken.StartObject));", span="916-916"];
m24_339 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonReader.cs", label="return;", span="911-911"];
m24_341 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", span="900-900"];
m24_47 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409"];
m24_48 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Read()", span="409-409"];
m24_27 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m24_144 [cluster="Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", span="887-887"];
m24_327 [cluster="Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", file="JsonReader.cs", label="!Read()", span="889-889"];
m24_328 [cluster="Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", file="JsonReader.cs", label="throw CreateUnexpectedEndException();", span="891-891"];
m24_329 [cluster="Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", span="887-887"];
m24_21 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_hasExceededMaxDepth = true", span="371-371"];
m24_5 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.JsonReader()", span="340-340"];
m24_6 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_currentState = State.Start", span="342-342"];
m24_145 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", span="1366-1366"];
m24_22 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''The reader's MaxDepth of {0} has been exceeded.''.FormatWith(CultureInfo.InvariantCulture, _maxDepth));", span="372-372"];
m24_29 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m24_441 [cluster="System.GC.SuppressFinalize(object)", file="JsonReader.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m24_80 [cluster="string.IsNullOrEmpty(string)", file="JsonReader.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m24_292 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="92-92"];
m24_390 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetPostValueState(bool)", span="1005-1005"];
m24_391 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonReader.cs", label="Peek() != JsonContainerType.None", span="1007-1007"];
m24_392 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonReader.cs", label="_currentState = State.PostValue", span="1009-1009"];
m24_393 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonReader.cs", label="SetFinished()", span="1013-1013"];
m24_395 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonReader.cs", label="UpdateScopeWithFinishedValue()", span="1018-1018"];
m24_394 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonReader.cs", label=updateIndex, span="1016-1016"];
m24_396 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetPostValueState(bool)", span="1005-1005"];
m24_197 [cluster="double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", file="JsonReader.cs", label="Entry double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", span="0-0"];
m24_103 [cluster="Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", span="58-58"];
m24_18 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_stack.Add(_currentPosition)", span="365-365"];
m24_81 [cluster="int.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out int)", file="JsonReader.cs", label="Entry int.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out int)", span="0-0"];
m24_198 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBoolean()", span="669-669"];
m24_199 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="JsonToken t = GetContentToken()", span="671-671"];
m24_208 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="Value is BigInteger", span="683-683"];
m24_209 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="b = (BigInteger)Value != 0", span="685-685"];
m24_210 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="b = Convert.ToBoolean(Value, CultureInfo.InvariantCulture)", span="690-690"];
m24_211 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="SetToken(JsonToken.Boolean, b, false)", span="693-693"];
m24_214 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="return ReadBooleanString((string)Value);", span="697-697"];
m24_216 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="return (bool)Value;", span="699-699"];
m24_218 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading boolean. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="702-702"];
m24_200 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label=t, span="673-673"];
m24_207 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="bool b", span="681-681"];
m24_212 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="return b;", span="695-695"];
m24_213 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="JsonToken.String", span="696-696"];
m24_215 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="JsonToken.Boolean", span="698-698"];
m24_201 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="JsonToken.None", span="675-675"];
m24_205 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="JsonToken.Integer", span="679-679"];
m24_206 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="JsonToken.Float", span="680-680"];
m24_204 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="return null;", span="678-678"];
m24_202 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="JsonToken.Null", span="676-676"];
m24_203 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="JsonToken.EndArray", span="677-677"];
m24_217 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsBoolean()", span="669-669"];
m24_26 [cluster="System.Collections.Generic.List<T>.List()", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m24_7 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_dateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind", span="343-343"];
m24_8 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()", span="62-62"];
m24_9 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()", file="JsonReader.cs", label="string json = @''{'Url':'http://www.google.com'}''", span="65-65"];
m24_10 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()", file="JsonReader.cs", label="JsonConvert.DeserializeObject<Website>(json)", span="69-69"];
m24_11 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()", file="JsonReader.cs", label=Exception, span="71-71"];
m24_408 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", span="1087-1087"];
m24_434 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Not a valid close JsonToken: {0}''.FormatWith(CultureInfo.InvariantCulture, token));", span="1098-1098"];
m24_427 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label=token, span="1089-1089"];
m24_428 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.EndObject", span="1091-1091"];
m24_430 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.EndArray", span="1093-1093"];
m24_432 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.EndConstructor", span="1095-1095"];
m24_429 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return JsonContainerType.Object;", span="1092-1092"];
m24_431 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return JsonContainerType.Array;", span="1094-1094"];
m24_433 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return JsonContainerType.Constructor;", span="1096-1096"];
m24_435 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", span="1087-1087"];
m24_69 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadInt32String(string)", span="441-441"];
m24_71 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="SetToken(JsonToken.Null, null, false)", span="445-445"];
m24_74 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="int.TryParse(s, NumberStyles.Integer, Culture, out i)", span="450-450"];
m24_75 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="SetToken(JsonToken.Integer, i, false)", span="452-452"];
m24_77 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="SetToken(JsonToken.String, s, false)", span="457-457"];
m24_78 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to integer: {0}.''.FormatWith(CultureInfo.InvariantCulture, s));", span="458-458"];
m24_70 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="443-443"];
m24_72 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="return null;", span="446-446"];
m24_73 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="int i", span="449-449"];
m24_76 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="return i;", span="453-453"];
m24_79 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadInt32String(string)", span="441-441"];
m24_232 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="730-730"];
m24_233 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="JsonToken t = GetContentToken()", span="732-732"];
m24_241 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="!(Value is decimal)", span="742-742"];
m24_242 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="SetToken(JsonToken.Float, Convert.ToDecimal(Value, CultureInfo.InvariantCulture), false)", span="744-744"];
m24_243 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="return (decimal)Value;", span="747-747"];
m24_245 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="return ReadDecimalString((string)Value);", span="749-749"];
m24_246 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading decimal. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="752-752"];
m24_234 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label=t, span="734-734"];
m24_240 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="JsonToken.Float", span="741-741"];
m24_244 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="JsonToken.String", span="748-748"];
m24_235 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="JsonToken.None", span="736-736"];
m24_239 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="JsonToken.Integer", span="740-740"];
m24_238 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="return null;", span="739-739"];
m24_236 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="JsonToken.Null", span="737-737"];
m24_237 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="JsonToken.EndArray", span="738-738"];
m24_247 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="730-730"];
m24_66 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.GetContentToken()", span="1160-1160"];
m24_467 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="!Read()", span="1165-1165"];
m24_468 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="SetToken(JsonToken.None)", span="1167-1167"];
m24_470 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="t = TokenType", span="1172-1172"];
m24_466 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="JsonToken t", span="1162-1162"];
m24_469 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="return JsonToken.None;", span="1168-1168"];
m24_471 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="t == JsonToken.Comment", span="1174-1174"];
m24_472 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="return t;", span="1176-1176"];
m24_473 [cluster="Newtonsoft.Json.JsonReader.GetContentToken()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.GetContentToken()", span="1160-1160"];
m24_397 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetFinished()", span="1075-1075"];
m24_423 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label=SupportMultipleContent, span="1077-1077"];
m24_424 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="_currentState = State.Start", span="1079-1079"];
m24_425 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="_currentState = State.Finished", span="1083-1083"];
m24_426 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetFinished()", span="1075-1075"];
m24_148 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", span="579-579"];
m24_151 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="JsonToken t = GetContentToken()", span="585-585"];
m24_154 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end when reading bytes.'');", span="589-589"];
m24_156 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="buffer.Add(Convert.ToByte(Value, CultureInfo.InvariantCulture))", span="591-591"];
m24_159 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="SetToken(JsonToken.Bytes, d, false)", span="595-595"];
m24_161 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected token when reading bytes: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="598-598"];
m24_150 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label=true, span="583-583"];
m24_152 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label=t, span="586-586"];
m24_153 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="JsonToken.None", span="588-588"];
m24_149 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="List<byte> buffer = new List<byte>()", span="581-581"];
m24_155 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="JsonToken.Integer", span="590-590"];
m24_158 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="byte[] d = buffer.ToArray()", span="594-594"];
m24_160 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="return d;", span="596-596"];
m24_157 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="JsonToken.EndArray", span="593-593"];
m24_162 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", span="579-579"];
m24_165 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDouble()", span="607-607"];
m24_166 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="JsonToken t = GetContentToken()", span="609-609"];
m24_174 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="!(Value is double)", span="619-619"];
m24_176 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="Value is BigInteger", span="623-623"];
m24_177 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="d = (double)(BigInteger)Value", span="625-625"];
m24_178 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="d = Convert.ToDouble(Value, CultureInfo.InvariantCulture)", span="630-630"];
m24_179 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="SetToken(JsonToken.Float, d, false)", span="633-633"];
m24_180 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="return (double)Value;", span="636-636"];
m24_182 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="return ReadDoubleString((string)Value);", span="638-638"];
m24_183 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading double. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="641-641"];
m24_167 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label=t, span="611-611"];
m24_173 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="JsonToken.Float", span="618-618"];
m24_175 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="double d", span="621-621"];
m24_181 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="JsonToken.String", span="637-637"];
m24_168 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="JsonToken.None", span="613-613"];
m24_172 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="JsonToken.Integer", span="617-617"];
m24_171 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="return null;", span="616-616"];
m24_169 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="JsonToken.Null", span="614-614"];
m24_170 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="JsonToken.EndArray", span="615-615"];
m24_184 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDouble()", span="607-607"];
m24_13 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="UpdateScopeWithFinishedValue()", span="352-352"];
m24_12 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", span="350-350"];
m24_14 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_currentPosition.Type == JsonContainerType.None", span="354-354"];
m24_15 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_currentPosition = new JsonPosition(value)", span="356-356"];
m24_16 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_stack == null", span="360-360"];
m24_106 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="508-508"];
m24_107 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="JsonToken t = GetContentToken()", span="510-510"];
m24_110 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="TokenType == JsonToken.StartObject", span="517-517"];
m24_111 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="ReadIntoWrappedTypeObject()", span="519-519"];
m24_112 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="byte[] data = ReadAsBytes()", span="521-521"];
m24_113 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="ReaderReadAndAssert()", span="522-522"];
m24_114 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="TokenType != JsonToken.EndObject", span="524-524"];
m24_115 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading bytes. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, TokenType));", span="526-526"];
m24_116 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="SetToken(JsonToken.Bytes, data, false)", span="529-529"];
m24_120 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="string s = (string)Value", span="539-539"];
m24_128 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="SetToken(JsonToken.Bytes, data, false)", span="557-557"];
m24_134 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="ValueType == typeof(Guid)", span="564-564"];
m24_135 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="byte[] data = ((Guid)Value).ToByteArray()", span="566-566"];
m24_136 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="SetToken(JsonToken.Bytes, data, false)", span="567-567"];
m24_138 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="return (byte[])Value;", span="571-571"];
m24_140 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="return ReadArrayIntoByteArray();", span="573-573"];
m24_142 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading bytes. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="576-576"];
m24_108 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="t == JsonToken.None", span="512-512"];
m24_118 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label=t, span="533-533"];
m24_117 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="return data;", span="530-530"];
m24_119 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="JsonToken.String", span="535-535"];
m24_121 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="byte[] data", span="541-541"];
m24_123 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="s.Length == 0", span="544-544"];
m24_125 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="ConvertUtils.TryConvertGuid(s, out g)", span="548-548"];
m24_127 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="data = Convert.FromBase64String(s)", span="554-554"];
m24_124 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="data = new byte[0]", span="546-546"];
m24_126 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="data = g.ToByteArray()", span="550-550"];
m24_129 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="return data;", span="558-558"];
m24_133 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="JsonToken.Bytes", span="563-563"];
m24_137 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="return data;", span="568-568"];
m24_139 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="JsonToken.StartArray", span="572-572"];
m24_109 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="return null;", span="514-514"];
m24_130 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="JsonToken.Null", span="560-560"];
m24_132 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="return null;", span="562-562"];
m24_122 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="Guid g", span="543-543"];
m24_131 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="JsonToken.EndArray", span="561-561"];
m24_141 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsBytes()", span="508-508"];
m24_291 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", span="379-379"];
m24_294 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", span="836-836"];
m24_295 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="JsonToken t = GetContentToken()", span="838-838"];
m24_302 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="Value is DateTime", span="847-847"];
m24_303 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="SetToken(JsonToken.Date, new DateTimeOffset((DateTime)Value), false)", span="849-849"];
m24_304 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="return (DateTimeOffset)Value;", span="852-852"];
m24_306 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="string s = (string)Value", span="854-854"];
m24_307 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="return ReadDateTimeOffsetString(s);", span="855-855"];
m24_308 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading date. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="857-857"];
m24_296 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label=t, span="840-840"];
m24_301 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="JsonToken.Date", span="846-846"];
m24_305 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="JsonToken.String", span="853-853"];
m24_297 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="JsonToken.None", span="842-842"];
m24_300 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="return null;", span="845-845"];
m24_298 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="JsonToken.Null", span="843-843"];
m24_299 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="JsonToken.EndArray", span="844-844"];
m24_309 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", span="836-836"];
m24_30 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Pop()", span="377-377"];
m24_32 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_stack != null && _stack.Count > 0", span="380-380"];
m24_33 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="oldPosition = _currentPosition", span="382-382"];
m24_34 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_currentPosition = _stack[_stack.Count - 1]", span="383-383"];
m24_35 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_stack.RemoveAt(_stack.Count - 1)", span="384-384"];
m24_36 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="oldPosition = _currentPosition", span="388-388"];
m24_37 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_currentPosition = new JsonPosition()", span="389-389"];
m24_38 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_maxDepth != null && Depth <= _maxDepth", span="392-392"];
m24_39 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_hasExceededMaxDepth = false", span="394-394"];
m24_31 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="JsonPosition oldPosition", span="379-379"];
m24_40 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="return oldPosition.Type;", span="397-397"];
m24_41 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Pop()", span="377-377"];
m24_17 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_stack = new List<JsonPosition>()", span="362-362"];
m24_146 [cluster="System.Guid.ToByteArray()", file="JsonReader.cs", label="Entry System.Guid.ToByteArray()", span="0-0"];
m24_410 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="1052-1052"];
m24_411 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType currentObject = Peek()", span="1054-1054"];
m24_414 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="_currentState = State.Object", span="1059-1059"];
m24_416 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="_currentState = State.Array", span="1062-1062"];
m24_418 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="_currentState = State.Constructor", span="1065-1065"];
m24_420 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="SetFinished()", span="1068-1068"];
m24_421 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''While setting the reader state back to current object an unexpected JsonType was encountered: {0}''.FormatWith(CultureInfo.InvariantCulture, currentObject));", span="1071-1071"];
m24_412 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label=currentObject, span="1056-1056"];
m24_413 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.Object", span="1058-1058"];
m24_415 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.Array", span="1061-1061"];
m24_417 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.Constructor", span="1064-1064"];
m24_419 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.None", span="1067-1067"];
m24_422 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="1052-1052"];
m24_68 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", span="958-958"];
m24_357 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_tokenType = newToken", span="960-960"];
m24_358 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_value = value", span="961-961"];
m24_361 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.ObjectStart", span="966-966"];
m24_362 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Push(JsonContainerType.Object)", span="967-967"];
m24_364 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.ArrayStart", span="970-970"];
m24_365 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Push(JsonContainerType.Array)", span="971-971"];
m24_367 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.ConstructorStart", span="974-974"];
m24_368 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Push(JsonContainerType.Constructor)", span="975-975"];
m24_370 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="ValidateEnd(JsonToken.EndObject)", span="978-978"];
m24_372 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="ValidateEnd(JsonToken.EndArray)", span="981-981"];
m24_374 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="ValidateEnd(JsonToken.EndConstructor)", span="984-984"];
m24_376 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.Property", span="987-987"];
m24_377 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentPosition.PropertyName = (string)value", span="989-989"];
m24_387 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="SetPostValueState(updateIndex)", span="1000-1000"];
m24_359 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label=newToken, span="963-963"];
m24_360 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.StartObject", span="965-965"];
m24_363 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.StartArray", span="969-969"];
m24_366 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.StartConstructor", span="973-973"];
m24_369 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.EndObject", span="977-977"];
m24_371 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.EndArray", span="980-980"];
m24_373 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.EndConstructor", span="983-983"];
m24_375 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.PropertyName", span="986-986"];
m24_386 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Bytes", span="999-999"];
m24_378 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Undefined", span="991-991"];
m24_385 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Raw", span="998-998"];
m24_379 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Integer", span="992-992"];
m24_384 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.String", span="997-997"];
m24_380 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Float", span="993-993"];
m24_383 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Date", span="996-996"];
m24_381 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Boolean", span="994-994"];
m24_382 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Null", span="995-995"];
m24_388 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", span="958-958"];
m24_82 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsString()", span="466-466"];
m24_94 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", color=green, community=0, file="JsonReader.cs", label="IFormattable formattable = Value as IFormattable", prediction=21, span="485-485"];
m24_93 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="string s", span="484-484"];
m24_95 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", color=green, community=0, file="JsonReader.cs", label="formattable != null", prediction=22, span="486-486"];
m24_96 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", color=green, community=0, file="JsonReader.cs", label="s = formattable.ToString(null, Culture)", prediction=23, span="488-488"];
m24_97 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", color=green, community=0, file="JsonReader.cs", label="Uri uri = Value as Uri", prediction=24, span="492-492"];
m24_99 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="SetToken(JsonToken.String, s, false)", span="496-496"];
m24_100 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="return s;", span="497-497"];
m24_98 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", color=green, community=0, file="JsonReader.cs", label="s = uri != null ? uri.OriginalString : Value.ToString()", prediction=25, span="493-493"];
m24_83 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="JsonToken t = GetContentToken()", span="468-468"];
m24_90 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="return (string)Value;", span="477-477"];
m24_92 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="Value != null", span="482-482"];
m24_101 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading string. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="501-501"];
m24_84 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label=t, span="470-470"];
m24_91 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="JsonTokenUtils.IsPrimitiveToken(t)", span="480-480"];
m24_89 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="JsonToken.String", span="476-476"];
m24_88 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="return null;", span="475-475"];
m24_85 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="JsonToken.None", span="472-472"];
m24_87 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="JsonToken.EndArray", span="474-474"];
m24_86 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="JsonToken.Null", span="473-473"];
m24_102 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsString()", span="466-466"];
m24_455 [cluster="Newtonsoft.Json.JsonReader.ReadAndMoveToContent()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAndMoveToContent()", span="1139-1139"];
m24_456 [cluster="Newtonsoft.Json.JsonReader.ReadAndMoveToContent()", file="JsonReader.cs", label="return Read() && MoveToContent();", span="1141-1141"];
m24_457 [cluster="Newtonsoft.Json.JsonReader.ReadAndMoveToContent()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAndMoveToContent()", span="1139-1139"];
m24_23 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website", span=""];
m24_163 [cluster="System.Convert.ToByte(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToByte(object, System.IFormatProvider)", span="0-0"];
m24_474 [file="JsonReader.cs", label="Newtonsoft.Json.JsonReader", span=""];
m25_104 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Linq.JToken>.ContainsKey(string)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Linq.JToken>.ContainsKey(string)", span="263-263"];
m25_105 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Linq.JToken>.ContainsKey(string)", file="JsonSchemaBuilder.cs", label="return (Property(key) != null);", span="265-265"];
m25_106 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Linq.JToken>.ContainsKey(string)", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Linq.JToken>.ContainsKey(string)", span="263-263"];
m25_57 [cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", span="180-180"];
m25_58 [cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaBuilder.cs", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="182-182"];
m25_59 [cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaBuilder.cs", label="reader.TokenType == JsonToken.None", span="184-184"];
m25_60 [cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaBuilder.cs", label="!reader.Read()", span="186-186"];
m25_62 [cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaBuilder.cs", label="reader.TokenType != JsonToken.StartObject", span="189-189"];
m25_64 [cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaBuilder.cs", label="!reader.Read()", span="195-195"];
m25_67 [cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaBuilder.cs", label="o.ReadContentFrom(reader)", span="200-200"];
m25_61 [cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaBuilder.cs", label="throw new Exception(''Error reading JObject from JsonReader.'');", span="187-187"];
m25_63 [cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaBuilder.cs", label="throw new Exception(''Current JsonReader item is not an object.'');", span="191-191"];
m25_65 [cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaBuilder.cs", label="throw new Exception(''Error reading JObject from JsonReader.'');", span="196-196"];
m25_66 [cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaBuilder.cs", label="JObject o = new JObject()", span="199-199"];
m25_68 [cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaBuilder.cs", label="return o;", span="202-202"];
m25_69 [cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", span="180-180"];
m25_0 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="43-43"];
m25_1 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.JObject()", span="43-43"];
m25_41 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="JsonSchemaBuilder.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m25_71 [cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader)", span="381-381"];
m25_77 [cluster="System.IO.StringReader.StringReader(string)", file="JsonSchemaBuilder.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m25_53 [cluster="Unk.Select", file="JsonSchemaBuilder.cs", label="Entry Unk.Select", span=""];
m25_28 [cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="111-111"];
m25_38 [cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JsonSchemaBuilder.cs", label="return Children().Cast<JProperty>();", span="113-113"];
m25_39 [cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.Properties()", span="111-111"];
m25_100 [cluster="Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", span="258-258"];
m25_101 [cluster="Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="Add(new JProperty(propertyName, value))", span="260-260"];
m25_102 [cluster="Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", span="258-258"];
m25_159 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JsonSchemaBuilder.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m25_136 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", span="324-324"];
m25_137 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JsonSchemaBuilder.cs", label="array == null", span="326-326"];
m25_139 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JsonSchemaBuilder.cs", label="arrayIndex < 0", span="328-328"];
m25_141 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JsonSchemaBuilder.cs", label="arrayIndex >= array.Length", span="330-330"];
m25_143 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JsonSchemaBuilder.cs", label="Count > array.Length - arrayIndex", span="332-332"];
m25_147 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JsonSchemaBuilder.cs", label="array[arrayIndex + index] = new KeyValuePair<string, JToken>(property.Name, property.Value)", span="338-338"];
m25_138 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JsonSchemaBuilder.cs", label="throw new ArgumentNullException(''array'');", span="327-327"];
m25_140 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JsonSchemaBuilder.cs", label="throw new ArgumentOutOfRangeException(''arrayIndex'', ''arrayIndex is less than 0.'');", span="329-329"];
m25_142 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JsonSchemaBuilder.cs", label="throw new ArgumentException(''arrayIndex is equal to or greater than the length of array.'');", span="331-331"];
m25_144 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JsonSchemaBuilder.cs", label="throw new ArgumentException(''The number of elements in the source JObject is greater than the available space from arrayIndex to the end of the destination array.'');", span="333-333"];
m25_145 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JsonSchemaBuilder.cs", label="int index = 0", span="335-335"];
m25_146 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JsonSchemaBuilder.cs", label="Properties()", span="336-336"];
m25_148 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JsonSchemaBuilder.cs", label="index++", span="339-339"];
m25_149 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", span="324-324"];
m25_126 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Clear()", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Clear()", span="310-310"];
m25_127 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Clear()", file="JsonSchemaBuilder.cs", label="RemoveAll()", span="312-312"];
m25_128 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Clear()", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Clear()", span="310-310"];
m25_165 [cluster="Newtonsoft.Json.Linq.JObject.GetDeepHashCode()", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.GetDeepHashCode()", span="376-376"];
m25_166 [cluster="Newtonsoft.Json.Linq.JObject.GetDeepHashCode()", file="JsonSchemaBuilder.cs", label="return ContentsHashCode();", span="378-378"];
m25_167 [cluster="Newtonsoft.Json.Linq.JObject.GetDeepHashCode()", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.GetDeepHashCode()", span="376-376"];
m25_129 [cluster="Newtonsoft.Json.Linq.JContainer.RemoveAll()", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JContainer.RemoveAll()", span="324-324"];
m25_150 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonSchemaBuilder.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m25_70 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="206-206"];
m25_42 [cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="121-121"];
m25_43 [cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JsonSchemaBuilder.cs", label="return Properties()\r\n        .Where(p => string.Compare(p.Name, name, StringComparison.Ordinal) == 0)\r\n        .SingleOrDefault();", span="123-125"];
m25_44 [cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.Property(string)", span="121-121"];
m25_14 [cluster="Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", span="80-80"];
m25_107 [cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.Remove(string)", span="273-273"];
m25_108 [cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JsonSchemaBuilder.cs", label="JProperty property = Property(propertyName)", span="275-275"];
m25_109 [cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JsonSchemaBuilder.cs", label="property == null", span="276-276"];
m25_111 [cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JsonSchemaBuilder.cs", label="property.Remove()", span="279-279"];
m25_110 [cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JsonSchemaBuilder.cs", label="return false;", span="277-277"];
m25_112 [cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JsonSchemaBuilder.cs", label="return true;", span="280-280"];
m25_113 [cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.Remove(string)", span="273-273"];
m25_85 [cluster="System.ArgumentException.ArgumentException(string)", file="JsonSchemaBuilder.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m25_72 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="210-210"];
m25_73 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonSchemaBuilder.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(json))", span="212-212"];
m25_74 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonSchemaBuilder.cs", label="return Load(jsonReader);", span="214-214"];
m25_75 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.Parse(string)", span="210-210"];
m25_97 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="237-237"];
m25_151 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="JsonSchemaBuilder.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m25_78 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="222-222"];
m25_79 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonSchemaBuilder.cs", label="JToken token = FromObjectInternal(o)", span="224-224"];
m25_80 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonSchemaBuilder.cs", label="token.Type != JsonTokenType.Object", span="226-226"];
m25_81 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonSchemaBuilder.cs", label="throw new ArgumentException(''Object serialized to {0}. JObject instance expected.''.FormatWith(CultureInfo.InvariantCulture, token.Type));", span="227-227"];
m25_82 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonSchemaBuilder.cs", label="return (JObject)token;", span="229-229"];
m25_83 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.FromObject(object)", span="222-222"];
m25_15 [cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken)", span="80-80"];
m25_16 [cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="ValidationUtils.ArgumentNotNull(o, ''o'')", span="82-82"];
m25_17 [cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="o.Type != JsonTokenType.Property", span="84-84"];
m25_18 [cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="throw new Exception(''Can not add {0} to {1}.''.FormatWith(CultureInfo.InvariantCulture, o.GetType(), GetType()));", span="85-85"];
m25_19 [cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="JProperty property = (JProperty)o", span="87-87"];
m25_20 [cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="bool matchingProperty = (Properties().Where(p => string.Compare(p.Name, property.Name, StringComparison.Ordinal) == 0).Count() > 0)", span="88-88"];
m25_22 [cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="throw new Exception(''Can not add property {0} to {1}. Property with the same name already exists on object.''.FormatWith(CultureInfo.InvariantCulture, property.Name, GetType()));", span="90-90"];
m25_21 [cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label=matchingProperty, span="89-89"];
m25_23 [cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken)", span="80-80"];
m25_103 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="110-110"];
m25_160 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", file="JsonSchemaBuilder.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m25_168 [cluster="Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", span="462-462"];
m25_130 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="315-315"];
m25_131 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JsonSchemaBuilder.cs", label="JProperty property = Property(item.Key)", span="317-317"];
m25_132 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JsonSchemaBuilder.cs", label="property == null", span="318-318"];
m25_134 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JsonSchemaBuilder.cs", label="return (property.Value == item.Value);", span="321-321"];
m25_133 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JsonSchemaBuilder.cs", label="return false;", span="319-319"];
m25_135 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="315-315"];
m25_99 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="246-246"];
m25_161 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.GetEnumerator()", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.GetEnumerator()", span="366-366"];
m25_162 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.GetEnumerator()", file="JsonSchemaBuilder.cs", label="Properties()", span="368-368"];
m25_163 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.GetEnumerator()", file="JsonSchemaBuilder.cs", label="yield return new KeyValuePair<string, JToken>(property.Name, property.Value);", span="370-370"];
m25_164 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.GetEnumerator()", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.GetEnumerator()", span="366-366"];
m25_114 [cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JToken.Remove()", span="264-264"];
m25_52 [cluster="JEnumerable<JToken>.cstr", file="JsonSchemaBuilder.cs", label="Entry JEnumerable<JToken>.cstr", span=""];
m25_152 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonSchemaBuilder.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m25_34 [cluster="string.Compare(string, string, System.StringComparison)", file="JsonSchemaBuilder.cs", label="Entry string.Compare(string, string, System.StringComparison)", span="0-0"];
m25_86 [cluster="Newtonsoft.Json.Linq.JObject.ValidateObject(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.ValidateObject(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="232-232"];
m25_87 [cluster="Newtonsoft.Json.Linq.JObject.ValidateObject(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="ValidationUtils.ArgumentNotNull(o, ''o'')", span="234-234"];
m25_88 [cluster="Newtonsoft.Json.Linq.JObject.ValidateObject(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="o.Type != JsonTokenType.Property", span="236-236"];
m25_89 [cluster="Newtonsoft.Json.Linq.JObject.ValidateObject(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="throw new ArgumentException(''An item of type {0} cannot be added to content.''.FormatWith(CultureInfo.InvariantCulture, o.Type));", span="237-237"];
m25_90 [cluster="Newtonsoft.Json.Linq.JObject.ValidateObject(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.ValidateObject(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="232-232"];
m25_98 [cluster="Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="131-131"];
m25_35 [cluster="Newtonsoft.Json.Linq.JObject.CloneNode()", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.CloneNode()", span="93-93"];
m25_36 [cluster="Newtonsoft.Json.Linq.JObject.CloneNode()", file="JsonSchemaBuilder.cs", label="return new JObject(this);", span="95-95"];
m25_37 [cluster="Newtonsoft.Json.Linq.JObject.CloneNode()", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.CloneNode()", span="93-93"];
m25_9 [cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Add(object)", span="280-280"];
m25_4 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="60-60"];
m25_5 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="60-60"];
m25_115 [cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", span="283-283"];
m25_116 [cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="JProperty property = Property(propertyName)", span="285-285"];
m25_117 [cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="property == null", span="286-286"];
m25_120 [cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="value = property.Value", span="292-292"];
m25_118 [cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="value = null", span="288-288"];
m25_119 [cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="return false;", span="289-289"];
m25_121 [cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="return true;", span="293-293"];
m25_122 [cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", span="283-283"];
m25_123 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Add(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Add(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="305-305"];
m25_124 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Add(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JsonSchemaBuilder.cs", label="Add(new JProperty(item.Key, item.Value))", span="307-307"];
m25_125 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Add(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Add(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="305-305"];
m25_24 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="94-94"];
m25_91 [cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="245-245"];
m25_92 [cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaBuilder.cs", label="writer.WriteStartObject()", span="247-247"];
m25_94 [cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaBuilder.cs", label="property.WriteTo(writer, converters)", span="251-251"];
m25_95 [cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaBuilder.cs", label="writer.WriteEndObject()", span="254-254"];
m25_93 [cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaBuilder.cs", label="Properties()", span="249-249"];
m25_96 [cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="245-245"];
m25_6 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="69-69"];
m25_7 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonSchemaBuilder.cs", label="Add(content)", span="71-71"];
m25_8 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.JObject(object)", span="69-69"];
m25_76 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="49-49"];
m25_40 [cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="141-141"];
m25_29 [cluster="Unk.Where", file="JsonSchemaBuilder.cs", label="Entry Unk.Where", span=""];
m25_54 [cluster="lambda expression", file="JsonSchemaBuilder.cs", label="Entry lambda expression", span="134-134"];
m25_32 [cluster="lambda expression", file="JsonSchemaBuilder.cs", label="string.Compare(p.Name, property.Name, StringComparison.Ordinal) == 0", span="88-88"];
m25_31 [cluster="lambda expression", file="JsonSchemaBuilder.cs", label="Entry lambda expression", span="88-88"];
m25_33 [cluster="lambda expression", file="JsonSchemaBuilder.cs", label="Exit lambda expression", span="88-88"];
m25_47 [cluster="lambda expression", file="JsonSchemaBuilder.cs", label="string.Compare(p.Name, name, StringComparison.Ordinal) == 0", span="124-124"];
m25_46 [cluster="lambda expression", file="JsonSchemaBuilder.cs", label="Entry lambda expression", span="124-124"];
m25_48 [cluster="lambda expression", file="JsonSchemaBuilder.cs", label="Exit lambda expression", span="124-124"];
m25_55 [cluster="lambda expression", file="JsonSchemaBuilder.cs", label="p.Value", span="134-134"];
m25_56 [cluster="lambda expression", file="JsonSchemaBuilder.cs", label="Exit lambda expression", span="134-134"];
m25_26 [cluster="object.GetType()", file="JsonSchemaBuilder.cs", label="Entry object.GetType()", span="0-0"];
m25_2 [cluster="Newtonsoft.Json.Linq.JObject.JObject(Newtonsoft.Json.Linq.JObject)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(Newtonsoft.Json.Linq.JObject)", span="51-51"];
m25_3 [cluster="Newtonsoft.Json.Linq.JObject.JObject(Newtonsoft.Json.Linq.JObject)", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.JObject(Newtonsoft.Json.Linq.JObject)", span="51-51"];
m25_153 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="353-353"];
m25_154 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JsonSchemaBuilder.cs", label="!((ICollection<KeyValuePair<string,JToken>>)this).Contains(item)", span="355-355"];
m25_156 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JsonSchemaBuilder.cs", label="((IDictionary<string, JToken>)this).Remove(item.Key)", span="358-358"];
m25_155 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JsonSchemaBuilder.cs", label="return false;", span="356-356"];
m25_157 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JsonSchemaBuilder.cs", label="return true;", span="359-359"];
m25_158 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="353-353"];
m25_84 [cluster="Newtonsoft.Json.Linq.JContainer.FromObjectInternal(object)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JContainer.FromObjectInternal(object)", span="193-193"];
m25_30 [cluster="Unk.Count", file="JsonSchemaBuilder.cs", label="Entry Unk.Count", span=""];
m25_10 [cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="74-74"];
m25_11 [cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="JObject t = node as JObject", span="76-76"];
m25_12 [cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="return (t != null && ContentsEqual(t));", span="77-77"];
m25_13 [cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="74-74"];
m25_45 [cluster="Unk.SingleOrDefault", file="JsonSchemaBuilder.cs", label="Entry Unk.SingleOrDefault", span=""];
m25_25 [cluster="System.Exception.Exception(string)", file="JsonSchemaBuilder.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m25_49 [cluster="Newtonsoft.Json.Linq.JObject.PropertyValues()", file="JsonSchemaBuilder.cs", label="Entry Newtonsoft.Json.Linq.JObject.PropertyValues()", span="132-132"];
m25_50 [cluster="Newtonsoft.Json.Linq.JObject.PropertyValues()", file="JsonSchemaBuilder.cs", label="return new JEnumerable<JToken>(Properties().Select(p => p.Value));", span="134-134"];
m25_51 [cluster="Newtonsoft.Json.Linq.JObject.PropertyValues()", file="JsonSchemaBuilder.cs", label="Exit Newtonsoft.Json.Linq.JObject.PropertyValues()", span="132-132"];
m25_169 [file="JsonSchemaBuilder.cs", label="Newtonsoft.Json.Linq.JObject", span=""];
m25_170 [file="JsonSchemaBuilder.cs", label=property, span=""];
m25_171 [file="JsonSchemaBuilder.cs", label=string, span=""];
m26_295 [cluster="Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", span="48-48"];
m26_702 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", span="632-632"];
m26_818 [cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="1551-1551"];
m26_819 [cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonSchemaGenerator.cs", label="return true;", span="1553-1553"];
m26_820 [cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="1551-1551"];
m26_51 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="800-800"];
m26_120 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="299-299"];
m26_121 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonSchemaGenerator.cs", label="_readType = ReadType.Read", span="301-301"];
m26_122 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonSchemaGenerator.cs", label="!ReadInternal()", span="302-302"];
m26_123 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.None)", span="304-304"];
m26_125 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonSchemaGenerator.cs", label="return true;", span="308-308"];
m26_124 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonSchemaGenerator.cs", label="return false;", span="305-305"];
m26_126 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.Read()", span="299-299"];
m26_556 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1078-1078"];
m26_591 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="MatchValueWithTrailingSeperator(''new'')", span="1080-1080"];
m26_592 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="EatWhitespace(false)", span="1082-1082"];
m26_625 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Unexpected content while parsing JSON.'');", span="1153-1153"];
m26_593 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="int initialPosition = _charPos", span="1084-1084"];
m26_594 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="int endPosition", span="1085-1085"];
m26_617 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="_stringReference = new StringReference(_chars, initialPosition, endPosition - initialPosition)", span="1137-1137"];
m26_595 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label=true, span="1087-1087"];
m26_596 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="char currentChar = _chars[_charPos]", span="1089-1089"];
m26_597 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="currentChar == '\0'", span="1090-1090"];
m26_603 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="char.IsLetterOrDigit(currentChar)", span="1104-1104"];
m26_605 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="currentChar == StringUtils.CarriageReturn", span="1108-1108"];
m26_608 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="currentChar == StringUtils.LineFeed", span="1114-1114"];
m26_611 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="char.IsWhiteSpace(currentChar)", span="1120-1120"];
m26_614 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="currentChar == '('", span="1126-1126"];
m26_616 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1133-1133"];
m26_598 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="_charsUsed == _charPos", span="1092-1092"];
m26_599 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="ReadData(true) == 0", span="1094-1094"];
m26_601 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="endPosition = _charPos", span="1099-1099"];
m26_600 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing constructor.'');", span="1095-1095"];
m26_602 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="_charPos++", span="1100-1100"];
m26_604 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="_charPos++", span="1106-1106"];
m26_606 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="endPosition = _charPos", span="1110-1110"];
m26_607 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="ProcessCarriageReturn(true)", span="1111-1111"];
m26_609 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="endPosition = _charPos", span="1116-1116"];
m26_610 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="ProcessLineFeed()", span="1117-1117"];
m26_612 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="endPosition = _charPos", span="1122-1122"];
m26_613 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="_charPos++", span="1123-1123"];
m26_615 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="endPosition = _charPos", span="1128-1128"];
m26_618 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="string constructorName = _stringReference.ToString()", span="1138-1138"];
m26_619 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="EatWhitespace(false)", span="1140-1140"];
m26_624 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.StartConstructor, constructorName)", span="1149-1149"];
m26_620 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="_chars[_charPos] != '('", span="1142-1142"];
m26_621 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1143-1143"];
m26_622 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="_charPos++", span="1145-1145"];
m26_623 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="ClearRecentString()", span="1147-1147"];
m26_626 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1078-1078"];
m26_555 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNull()", span="1446-1446"];
m26_777 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonSchemaGenerator.cs", label="MatchValueWithTrailingSeperator(JsonConvert.Null)", span="1448-1448"];
m26_778 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.Null)", span="1450-1450"];
m26_779 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Error parsing null value.'');", span="1454-1454"];
m26_780 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNull()", span="1446-1446"];
m26_815 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonReader.Close()", span="972-972"];
m26_291 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", span="182-182"];
m26_403 [cluster="char.IsWhiteSpace(char)", file="JsonSchemaGenerator.cs", label="Entry char.IsWhiteSpace(char)", span="0-0"];
m26_302 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(char)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(char)", span="55-55"];
m26_698 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", span="567-567"];
m26_696 [cluster="string.StartsWith(string, System.StringComparison)", file="JsonSchemaGenerator.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m26_19 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseString(char)", span="110-110"];
m26_20 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="_charPos++", span="112-112"];
m26_22 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="ReadStringIntoBuffer(quote)", span="115-115"];
m26_32 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="_quoteChar = quote", span="136-136"];
m26_46 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="_quoteChar = quote", span="163-163"];
m26_21 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="ShiftBufferIfNeeded()", span="114-114"];
m26_23 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="_readType == ReadType.ReadAsBytes", span="117-117"];
m26_24 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="byte[] data", span="119-119"];
m26_29 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="_readType == ReadType.ReadAsString", span="131-131"];
m26_25 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="_stringReference.Length == 0", span="120-120"];
m26_26 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="data = new byte[0]", span="122-122"];
m26_27 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="data = Convert.FromBase64CharArray(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length)", span="126-126"];
m26_28 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.Bytes, data)", span="129-129"];
m26_30 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="string text = _stringReference.ToString()", span="133-133"];
m26_33 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="string text = _stringReference.ToString()", span="140-140"];
m26_31 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.String, text)", span="135-135"];
m26_34 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="_dateParseHandling != DateParseHandling.None", span="142-142"];
m26_42 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="DateTimeUtils.TryParseDateTime(text, dateParseHandling, DateTimeZoneHandling, out dt)", span="155-155"];
m26_45 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.String, text)", span="162-162"];
m26_35 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="DateParseHandling dateParseHandling", span="144-144"];
m26_36 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="_readType == ReadType.ReadAsDateTime", span="145-145"];
m26_37 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="dateParseHandling = DateParseHandling.DateTime", span="146-146"];
m26_38 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="_readType == ReadType.ReadAsDateTimeOffset", span="148-148"];
m26_39 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="dateParseHandling = DateParseHandling.DateTimeOffset", span="149-149"];
m26_40 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="dateParseHandling = _dateParseHandling", span="152-152"];
m26_41 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="object dt", span="154-154"];
m26_43 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.Date, dt)", span="157-157"];
m26_44 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="return;", span="158-158"];
m26_47 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseString(char)", span="110-110"];
m26_69 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadData(bool)", span="192-192"];
m26_70 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonSchemaGenerator.cs", label="return ReadData(append, 0);", span="194-194"];
m26_71 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadData(bool)", span="192-192"];
m26_795 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", span="70-70"];
m26_141 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="344-344"];
m26_142 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonSchemaGenerator.cs", label="return ReadAsStringInternal();", span="346-346"];
m26_143 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsString()", span="344-344"];
m26_703 [cluster="Unk.Parse", file="JsonSchemaGenerator.cs", label="Entry Unk.Parse", span=""];
m26_454 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", span="863-863"];
m26_458 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonSchemaGenerator.cs", label="int initialPosition = _charPos", span="865-865"];
m26_459 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonSchemaGenerator.cs", label=true, span="868-868"];
m26_465 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonSchemaGenerator.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="881-881"];
m26_471 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonSchemaGenerator.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="893-893"];
m26_460 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonSchemaGenerator.cs", label="_chars[_charPos]", span="870-870"];
m26_461 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonSchemaGenerator.cs", label="'\0'", span="872-872"];
m26_467 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonSchemaGenerator.cs", label="char currentChar = _chars[_charPos]", span="884-884"];
m26_462 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonSchemaGenerator.cs", label="_charsUsed == _charPos", span="873-873"];
m26_463 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonSchemaGenerator.cs", label="ReadData(true) == 0", span="875-875"];
m26_464 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing unquoted property name.'');", span="876-876"];
m26_466 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonSchemaGenerator.cs", label="return;", span="882-882"];
m26_468 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonSchemaGenerator.cs", label="ValidIdentifierChar(currentChar)", span="886-886"];
m26_470 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonSchemaGenerator.cs", label="char.IsWhiteSpace(currentChar) || currentChar == ':'", span="891-891"];
m26_473 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Invalid JavaScript property identifier character: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="897-897"];
m26_469 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonSchemaGenerator.cs", label="_charPos++", span="888-888"];
m26_472 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonSchemaGenerator.cs", label="return;", span="894-894"];
m26_474 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", span="863-863"];
m26_751 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.IsSeperator(char)", span="1399-1399"];
m26_752 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label=c, span="1401-1401"];
m26_769 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label="char.IsWhiteSpace(c)", span="1423-1423"];
m26_753 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label="'}'", span="1403-1403"];
m26_757 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label="'/'", span="1407-1407"];
m26_761 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label="')'", span="1413-1413"];
m26_764 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label="' '", span="1417-1417"];
m26_754 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label="']'", span="1404-1404"];
m26_755 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label="','", span="1405-1405"];
m26_756 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label="return true;", span="1406-1406"];
m26_758 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label="!EnsureChars(1, false)", span="1409-1409"];
m26_759 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label="return false;", span="1410-1410"];
m26_760 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label="return (_chars[_charPos + 1] == '*');", span="1412-1412"];
m26_762 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label="CurrentState == State.Constructor || CurrentState == State.ConstructorStart", span="1414-1414"];
m26_763 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label="return true;", span="1415-1415"];
m26_771 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label="return false;", span="1428-1428"];
m26_765 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label="StringUtils.Tab", span="1418-1418"];
m26_766 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label="StringUtils.LineFeed", span="1419-1419"];
m26_767 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label="StringUtils.CarriageReturn", span="1420-1420"];
m26_768 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label="return true;", span="1421-1421"];
m26_770 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label="return true;", span="1424-1424"];
m26_772 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.IsSeperator(char)", span="1399-1399"];
m26_808 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="1530-1530"];
m26_809 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonSchemaGenerator.cs", label="base.Close()", span="1532-1532"];
m26_810 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonSchemaGenerator.cs", label="CloseInput && _reader != null", span="1534-1534"];
m26_811 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonSchemaGenerator.cs", label="_reader.Close()", span="1536-1536"];
m26_812 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonSchemaGenerator.cs", label="_buffer != null", span="1541-1541"];
m26_813 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonSchemaGenerator.cs", label="_buffer.Clear()", span="1542-1542"];
m26_814 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.Close()", span="1530-1530"];
m26_430 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseProperty()", span="819-819"];
m26_431 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="char firstChar = _chars[_charPos]", span="821-821"];
m26_432 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="char quoteChar", span="822-822"];
m26_433 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="firstChar == '''' || firstChar == '\''", span="824-824"];
m26_435 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="quoteChar = firstChar", span="827-827"];
m26_438 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="ValidIdentifierChar(firstChar)", span="831-831"];
m26_449 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="_quoteChar = quoteChar", span="852-852"];
m26_434 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="_charPos++", span="826-826"];
m26_436 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="ShiftBufferIfNeeded()", span="828-828"];
m26_437 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="ReadStringIntoBuffer(quoteChar)", span="829-829"];
m26_439 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="quoteChar = '\0'", span="833-833"];
m26_442 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Invalid property identifier character: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="839-839"];
m26_440 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="ShiftBufferIfNeeded()", span="834-834"];
m26_441 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="ParseUnquotedProperty()", span="835-835"];
m26_443 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="string propertyName = _stringReference.ToString()", span="842-842"];
m26_444 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="EatWhitespace(false)", span="844-844"];
m26_448 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.PropertyName, propertyName)", span="851-851"];
m26_445 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="_chars[_charPos] != ':'", span="846-846"];
m26_446 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Invalid character after parsing property name. Expected ':' but got: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="847-847"];
m26_447 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="_charPos++", span="849-849"];
m26_450 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="ClearRecentString()", span="853-853"];
m26_451 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="return true;", span="855-855"];
m26_452 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseProperty()", span="819-819"];
m26_557 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", span="1512-1512"];
m26_802 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonSchemaGenerator.cs", label="MatchValueWithTrailingSeperator(JsonConvert.NaN)", span="1514-1514"];
m26_803 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonSchemaGenerator.cs", label="_floatParseHandling == FloatParseHandling.Decimal", span="1516-1516"];
m26_806 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Error parsing NaN value.'');", span="1523-1523"];
m26_804 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonSchemaGenerator.cs", label="throw new JsonReaderException(''Cannot read NaN as a decimal.'');", span="1517-1517"];
m26_805 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.Float, double.NaN)", span="1519-1519"];
m26_807 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", span="1512-1512"];
m26_701 [cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="JsonSchemaGenerator.cs", label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0"];
m26_129 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="317-317"];
m26_130 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonSchemaGenerator.cs", label="return ReadAsBytesInternal();", span="319-319"];
m26_131 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="317-317"];
m26_560 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumber()", span="1157-1157"];
m26_628 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="ShiftBufferIfNeeded()", span="1159-1159"];
m26_629 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="char firstChar = _chars[_charPos]", span="1161-1161"];
m26_630 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="int initialPosition = _charPos", span="1162-1162"];
m26_635 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="bool singleDigit = (char.IsDigit(firstChar) && _stringReference.Length == 1)", span="1171-1171"];
m26_636 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="bool nonBase10 = (firstChar == '0' && _stringReference.Length > 1\r\n                              && _stringReference.Chars[_stringReference.StartIndex + 1] != '.'\r\n                              && _stringReference.Chars[_stringReference.StartIndex + 1] != 'e'\r\n                              && _stringReference.Chars[_stringReference.StartIndex + 1] != 'E')", span="1172-1175"];
m26_639 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="numberValue = firstChar - 48", span="1182-1182"];
m26_654 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="numberValue = (decimal)firstChar - 48", span="1214-1214"];
m26_666 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="numberValue = (long)firstChar - 48", span="1245-1245"];
m26_631 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="ReadNumberIntoBuffer()", span="1164-1164"];
m26_632 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1166-1166"];
m26_633 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="object numberValue", span="1168-1168"];
m26_634 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="JsonToken numberType", span="1169-1169"];
m26_693 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="SetToken(numberType, numberValue)", span="1304-1304"];
m26_638 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label=singleDigit, span="1179-1179"];
m26_653 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label=singleDigit, span="1211-1211"];
m26_665 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label=singleDigit, span="1242-1242"];
m26_637 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="_readType == ReadType.ReadAsInt32", span="1177-1177"];
m26_640 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label=nonBase10, span="1184-1184"];
m26_655 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label=nonBase10, span="1216-1216"];
m26_668 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label=nonBase10, span="1248-1248"];
m26_652 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="_readType == ReadType.ReadAsDecimal", span="1209-1209"];
m26_641 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="string number = _stringReference.ToString()", span="1186-1186"];
m26_644 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="int value", span="1197-1197"];
m26_642 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="int integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase)\r\n                        ? Convert.ToInt32(number, 16)\r\n                        : Convert.ToInt32(number, 8)", span="1189-1191"];
m26_643 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="numberValue = integer", span="1193-1193"];
m26_645 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="ParseResult parseResult = ConvertUtils.Int32TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="1198-1198"];
m26_646 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="parseResult == ParseResult.Success", span="1199-1199"];
m26_647 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="numberValue = value", span="1200-1200"];
m26_648 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="parseResult == ParseResult.Overflow", span="1201-1201"];
m26_649 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''JSON integer {0} is too large or small for an Int32.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1202-1202"];
m26_650 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid integer.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1204-1204"];
m26_651 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="numberType = JsonToken.Integer", span="1207-1207"];
m26_656 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="string number = _stringReference.ToString()", span="1218-1218"];
m26_659 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="string number = _stringReference.ToString()", span="1229-1229"];
m26_657 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="long integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase)\r\n                        ? Convert.ToInt64(number, 16)\r\n                        : Convert.ToInt64(number, 8)", span="1221-1223"];
m26_658 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="numberValue = Convert.ToDecimal(integer)", span="1225-1225"];
m26_660 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="decimal value", span="1231-1231"];
m26_661 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out value)", span="1232-1232"];
m26_662 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="numberValue = value", span="1233-1233"];
m26_663 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1235-1235"];
m26_664 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="numberType = JsonToken.Float", span="1238-1238"];
m26_667 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="numberType = JsonToken.Integer", span="1246-1246"];
m26_669 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="string number = _stringReference.ToString()", span="1250-1250"];
m26_672 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="long value", span="1259-1259"];
m26_670 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="numberValue = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase)\r\n                        ? Convert.ToInt64(number, 16)\r\n                        : Convert.ToInt64(number, 8)", span="1252-1254"];
m26_671 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="numberType = JsonToken.Integer", span="1255-1255"];
m26_673 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="ParseResult parseResult = ConvertUtils.Int64TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="1260-1260"];
m26_674 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="parseResult == ParseResult.Success", span="1261-1261"];
m26_675 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="numberValue = value", span="1263-1263"];
m26_677 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="parseResult == ParseResult.Overflow", span="1266-1266"];
m26_676 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="numberType = JsonToken.Integer", span="1264-1264"];
m26_678 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="string number = _stringReference.ToString()", span="1269-1269"];
m26_681 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="string number = _stringReference.ToString()", span="1278-1278"];
m26_679 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="numberValue = BigInteger.Parse(number, CultureInfo.InvariantCulture)", span="1270-1270"];
m26_680 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="numberType = JsonToken.Integer", span="1271-1271"];
m26_682 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="_floatParseHandling == FloatParseHandling.Decimal", span="1280-1280"];
m26_684 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out d)", span="1283-1283"];
m26_686 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, number));", span="1286-1286"];
m26_688 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="double.TryParse(number, NumberStyles.Float | NumberStyles.AllowThousands, CultureInfo.InvariantCulture, out d)", span="1291-1291"];
m26_690 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number));", span="1294-1294"];
m26_683 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="decimal d", span="1282-1282"];
m26_687 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="double d", span="1290-1290"];
m26_685 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="numberValue = d", span="1284-1284"];
m26_689 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="numberValue = d", span="1292-1292"];
m26_691 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="numberType = JsonToken.Float", span="1297-1297"];
m26_692 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="ClearRecentString()", span="1302-1302"];
m26_694 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumber()", span="1157-1157"];
m26_144 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsStringInternal()", span="647-647"];
m26_453 [cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="858-858"];
m26_455 [cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonSchemaGenerator.cs", label="return (char.IsLetterOrDigit(value) || value == '_' || value == '$');", span="860-860"];
m26_456 [cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="858-858"];
m26_554 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseFalse()", span="1470-1470"];
m26_785 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonSchemaGenerator.cs", label="MatchValueWithTrailingSeperator(JsonConvert.False)", span="1472-1472"];
m26_786 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.Boolean, false)", span="1474-1474"];
m26_787 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="1478-1478"];
m26_788 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseFalse()", span="1470-1470"];
m26_699 [cluster="System.Convert.ToInt64(string, int)", file="JsonSchemaGenerator.cs", label="Entry System.Convert.ToInt64(string, int)", span="0-0"];
m26_315 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="633-633"];
m26_316 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="int charPos = _charPos", span="635-635"];
m26_317 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label=true, span="637-637"];
m26_318 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="_chars[charPos++]", span="639-639"];
m26_319 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'\0'", span="641-641"];
m26_327 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'-'", span="655-655"];
m26_354 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="_charPos = charPos - 1", span="684-684"];
m26_320 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="_charsUsed == charPos - 1", span="642-642"];
m26_321 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="charPos--", span="644-644"];
m26_325 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="_charPos = charPos - 1", span="651-651"];
m26_322 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="_charPos = charPos", span="645-645"];
m26_323 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="ReadData(true) == 0", span="646-646"];
m26_324 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="return;", span="647-647"];
m26_326 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="return;", span="652-652"];
m26_328 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'+'", span="656-656"];
m26_329 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'a'", span="657-657"];
m26_330 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'A'", span="658-658"];
m26_331 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'b'", span="659-659"];
m26_332 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'B'", span="660-660"];
m26_333 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'c'", span="661-661"];
m26_334 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'C'", span="662-662"];
m26_335 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'d'", span="663-663"];
m26_336 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'D'", span="664-664"];
m26_337 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'e'", span="665-665"];
m26_338 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'E'", span="666-666"];
m26_339 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'f'", span="667-667"];
m26_340 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'F'", span="668-668"];
m26_341 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'x'", span="669-669"];
m26_342 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'X'", span="670-670"];
m26_343 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'.'", span="671-671"];
m26_344 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'0'", span="672-672"];
m26_345 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'1'", span="673-673"];
m26_346 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'2'", span="674-674"];
m26_347 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'3'", span="675-675"];
m26_348 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'4'", span="676-676"];
m26_349 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'5'", span="677-677"];
m26_350 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'6'", span="678-678"];
m26_351 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'7'", span="679-679"];
m26_352 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'8'", span="680-680"];
m26_353 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="'9'", span="681-681"];
m26_355 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="return;", span="685-685"];
m26_356 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="633-633"];
m26_128 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="790-790"];
m26_296 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(char[], int, int)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(char[], int, int)", span="65-65"];
m26_148 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", span="693-693"];
m26_290 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", span="191-191"];
m26_561 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="1458-1458"];
m26_781 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonSchemaGenerator.cs", label="MatchValueWithTrailingSeperator(JsonConvert.Undefined)", span="1460-1460"];
m26_782 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.Undefined)", span="1462-1462"];
m26_783 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Error parsing undefined value.'');", span="1466-1466"];
m26_784 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="1458-1458"];
m26_733 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.MatchValue(string)", span="1367-1367"];
m26_734 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonSchemaGenerator.cs", label="!EnsureChars(value.Length - 1, true)", span="1369-1369"];
m26_737 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonSchemaGenerator.cs", label="i < value.Length", span="1372-1372"];
m26_738 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonSchemaGenerator.cs", label="_chars[_charPos + i] != value[i]", span="1374-1374"];
m26_741 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonSchemaGenerator.cs", label="_charPos += value.Length", span="1380-1380"];
m26_735 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonSchemaGenerator.cs", label="return false;", span="1370-1370"];
m26_736 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonSchemaGenerator.cs", label="int i = 0", span="1372-1372"];
m26_740 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonSchemaGenerator.cs", label="i++", span="1372-1372"];
m26_739 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonSchemaGenerator.cs", label="return false;", span="1376-1376"];
m26_742 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonSchemaGenerator.cs", label="return true;", span="1382-1382"];
m26_743 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.MatchValue(string)", span="1367-1367"];
m26_149 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="363-363"];
m26_150 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonSchemaGenerator.cs", label="return ReadAsDateTimeOffsetInternal();", span="365-365"];
m26_151 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="363-363"];
m26_133 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="326-326"];
m26_134 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonSchemaGenerator.cs", label="return ReadAsDecimalInternal();", span="328-328"];
m26_135 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="326-326"];
m26_101 [cluster="System.IO.TextReader.Read(char[], int, int)", file="JsonSchemaGenerator.cs", label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0"];
m26_58 [cluster="System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", file="JsonSchemaGenerator.cs", label="Entry System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", span="0-0"];
m26_8 [cluster="Newtonsoft.Json.JsonTextReader.GetBuffer()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.GetBuffer()", span="90-90"];
m26_9 [cluster="Newtonsoft.Json.JsonTextReader.GetBuffer()", file="JsonSchemaGenerator.cs", label="_buffer == null", span="92-92"];
m26_10 [cluster="Newtonsoft.Json.JsonTextReader.GetBuffer()", file="JsonSchemaGenerator.cs", label="_buffer = new StringBuffer(1025)", span="94-94"];
m26_11 [cluster="Newtonsoft.Json.JsonTextReader.GetBuffer()", file="JsonSchemaGenerator.cs", label="_buffer.Position = 0", span="98-98"];
m26_12 [cluster="Newtonsoft.Json.JsonTextReader.GetBuffer()", file="JsonSchemaGenerator.cs", label="return _buffer;", span="101-101"];
m26_13 [cluster="Newtonsoft.Json.JsonTextReader.GetBuffer()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.GetBuffer()", span="90-90"];
m26_816 [cluster="System.IO.TextReader.Close()", file="JsonSchemaGenerator.cs", label="Entry System.IO.TextReader.Close()", span="0-0"];
m26_140 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", span="590-590"];
m26_294 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1018-1018"];
m26_563 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonSchemaGenerator.cs", label="_charPos++", span="1020-1020"];
m26_564 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonSchemaGenerator.cs", label="OnNewLine(_charPos)", span="1021-1021"];
m26_565 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1018-1018"];
m26_0 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m26_1 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSchemaGenerator.cs", label="reader == null", span="75-75"];
m26_3 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSchemaGenerator.cs", label="_reader = reader", span="78-78"];
m26_2 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSchemaGenerator.cs", label="throw new ArgumentNullException(''reader'');", span="76-76"];
m26_4 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSchemaGenerator.cs", label="_lineNumber = 1", span="79-79"];
m26_5 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSchemaGenerator.cs", label="_chars = new char[1025]", span="80-80"];
m26_6 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m26_100 [cluster="System.Math.Max(int, int)", file="JsonSchemaGenerator.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m26_187 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseComment()", span="1307-1307"];
m26_705 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="_charPos++", span="1310-1310"];
m26_706 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="!EnsureChars(1, false) || _chars[_charPos] != '*'", span="1312-1312"];
m26_707 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Error parsing comment. Expected: *, got {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1313-1313"];
m26_708 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="_charPos++", span="1315-1315"];
m26_709 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="int initialPosition = _charPos", span="1317-1317"];
m26_710 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="bool commentFinished = false", span="1319-1319"];
m26_722 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition - 1)", span="1343-1343"];
m26_711 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="!commentFinished", span="1321-1321"];
m26_712 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="_chars[_charPos]", span="1323-1323"];
m26_730 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.Comment, _stringReference.ToString())", span="1362-1362"];
m26_713 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="'\0'", span="1325-1325"];
m26_718 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="'*'", span="1336-1336"];
m26_725 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="StringUtils.CarriageReturn", span="1350-1350"];
m26_727 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="StringUtils.LineFeed", span="1353-1353"];
m26_729 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="_charPos++", span="1357-1357"];
m26_714 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="_charsUsed == _charPos", span="1326-1326"];
m26_715 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="ReadData(true) == 0", span="1328-1328"];
m26_717 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="_charPos++", span="1333-1333"];
m26_716 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing comment.'');", span="1329-1329"];
m26_719 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="_charPos++", span="1337-1337"];
m26_720 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="EnsureChars(0, true)", span="1339-1339"];
m26_721 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="_chars[_charPos] == '/'", span="1341-1341"];
m26_723 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="_charPos++", span="1345-1345"];
m26_724 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="commentFinished = true", span="1346-1346"];
m26_726 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="ProcessCarriageReturn(true)", span="1351-1351"];
m26_728 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="ProcessLineFeed()", span="1354-1354"];
m26_731 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="ClearRecentString()", span="1364-1364"];
m26_732 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseComment()", span="1307-1307"];
m26_15 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.OnNewLine(int)", span="104-104"];
m26_16 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonSchemaGenerator.cs", label="_lineNumber++", span="106-106"];
m26_17 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonSchemaGenerator.cs", label="_lineStartPos = pos - 1", span="107-107"];
m26_18 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.OnNewLine(int)", span="104-104"];
m26_362 [cluster="Newtonsoft.Json.Utilities.StringReference.StringReference()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference()", span="27-27"];
m26_188 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonSchemaGenerator.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m26_53 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", span="286-286"];
m26_558 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", span="1497-1497"];
m26_796 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonSchemaGenerator.cs", label="MatchValueWithTrailingSeperator(JsonConvert.PositiveInfinity)", span="1499-1499"];
m26_797 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonSchemaGenerator.cs", label="_floatParseHandling == FloatParseHandling.Decimal", span="1501-1501"];
m26_800 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Error parsing positive infinity value.'');", span="1508-1508"];
m26_798 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonSchemaGenerator.cs", label="throw new JsonReaderException(''Cannot read Infinity as a decimal.'');", span="1502-1502"];
m26_799 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.Float, double.PositiveInfinity)", span="1504-1504"];
m26_801 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", span="1497-1497"];
m26_293 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1024-1024"];
m26_566 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonSchemaGenerator.cs", label="_charPos++", span="1026-1026"];
m26_567 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonSchemaGenerator.cs", label="EnsureChars(1, append) && _chars[_charPos] == StringUtils.LineFeed", span="1028-1028"];
m26_568 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonSchemaGenerator.cs", label="_charPos++", span="1029-1029"];
m26_569 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonSchemaGenerator.cs", label="OnNewLine(_charPos)", span="1031-1031"];
m26_570 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1024-1024"];
m26_107 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="265-265"];
m26_108 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonSchemaGenerator.cs", label=_isEndOfFile, span="267-267"];
m26_110 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonSchemaGenerator.cs", label="int charsRequired = _charPos + relativePosition - _charsUsed + 1", span="270-270"];
m26_112 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonSchemaGenerator.cs", label="int charsRead = ReadData(append, charsRequired - totalCharsRead)", span="278-278"];
m26_109 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonSchemaGenerator.cs", label="return false;", span="268-268"];
m26_111 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonSchemaGenerator.cs", label="int totalCharsRead = 0", span="272-272"];
m26_115 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonSchemaGenerator.cs", label="totalCharsRead < charsRequired", span="285-285"];
m26_116 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonSchemaGenerator.cs", label="totalCharsRead < charsRequired", span="287-287"];
m26_114 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonSchemaGenerator.cs", label="totalCharsRead += charsRead", span="284-284"];
m26_113 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonSchemaGenerator.cs", label="charsRead == 0", span="281-281"];
m26_117 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonSchemaGenerator.cs", label="return false;", span="288-288"];
m26_118 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonSchemaGenerator.cs", label="return true;", span="289-289"];
m26_119 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="265-265"];
m26_695 [cluster="char.IsDigit(char)", file="JsonSchemaGenerator.cs", label="Entry char.IsDigit(char)", span="0-0"];
m26_292 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", span="605-605"];
m26_298 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="JsonSchemaGenerator.cs", label="writeToPosition > lastWritePosition", span="607-607"];
m26_299 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="JsonSchemaGenerator.cs", label="buffer.Append(_chars, lastWritePosition, writeToPosition - lastWritePosition)", span="609-609"];
m26_300 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="JsonSchemaGenerator.cs", label="buffer.Append(writeChar)", span="612-612"];
m26_301 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", span="605-605"];
m26_817 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Clear()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Clear()", span="75-75"];
m26_553 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseTrue()", span="1431-1431"];
m26_773 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonSchemaGenerator.cs", label="MatchValueWithTrailingSeperator(JsonConvert.True)", span="1436-1436"];
m26_774 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.Boolean, true)", span="1438-1438"];
m26_775 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="1442-1442"];
m26_776 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseTrue()", span="1431-1431"];
m26_136 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", span="533-533"];
m26_697 [cluster="System.Convert.ToInt32(string, int)", file="JsonSchemaGenerator.cs", label="Entry System.Convert.ToInt32(string, int)", span="0-0"];
m26_127 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadInternal()", span="369-369"];
m26_153 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label=true, span="371-371"];
m26_154 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label=_currentState, span="373-373"];
m26_155 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="State.Start", span="375-375"];
m26_162 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="State.Complete", span="382-382"];
m26_163 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="State.Object", span="384-384"];
m26_166 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="State.PostValue", span="387-387"];
m26_169 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="State.Finished", span="393-393"];
m26_179 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="State.Closed", span="412-412"];
m26_180 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="State.Error", span="414-414"];
m26_181 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="417-417"];
m26_156 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="State.Property", span="376-376"];
m26_157 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="State.Array", span="377-377"];
m26_158 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="State.ArrayStart", span="378-378"];
m26_159 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="State.Constructor", span="379-379"];
m26_160 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="State.ConstructorStart", span="380-380"];
m26_161 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="return ParseValue();", span="381-381"];
m26_164 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="State.ObjectStart", span="385-385"];
m26_165 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="return ParseObject();", span="386-386"];
m26_167 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="ParsePostValue()", span="390-390"];
m26_168 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="return true;", span="391-391"];
m26_170 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="EnsureChars(0, false)", span="394-394"];
m26_171 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="EatWhitespace(false)", span="396-396"];
m26_178 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="return false;", span="411-411"];
m26_172 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label=_isEndOfFile, span="397-397"];
m26_173 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="return false;", span="399-399"];
m26_174 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="_chars[_charPos] == '/'", span="401-401"];
m26_175 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="ParseComment()", span="403-403"];
m26_177 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Additional text encountered after finished reading JSON content: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="408-408"];
m26_176 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="return true;", span="404-404"];
m26_182 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadInternal()", span="369-369"];
m26_312 [cluster="string.String(char[], int, int)", file="JsonSchemaGenerator.cs", label="Entry string.String(char[], int, int)", span="0-0"];
m26_54 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="167-167"];
m26_55 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonSchemaGenerator.cs", label="int charByteCount = 2", span="169-169"];
m26_56 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonSchemaGenerator.cs", label="Buffer.BlockCopy(src, srcOffset * charByteCount, dst, dstOffset * charByteCount, count * charByteCount)", span="171-171"];
m26_57 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="167-167"];
m26_559 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", span="1482-1482"];
m26_789 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonSchemaGenerator.cs", label="MatchValueWithTrailingSeperator(JsonConvert.NegativeInfinity)", span="1484-1484"];
m26_790 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonSchemaGenerator.cs", label="_floatParseHandling == FloatParseHandling.Decimal", span="1486-1486"];
m26_793 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Error parsing negative infinity value.'');", span="1493-1493"];
m26_791 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonSchemaGenerator.cs", label="throw new JsonReaderException(''Cannot read -Infinity as a decimal.'');", span="1487-1487"];
m26_792 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.Float, double.NegativeInfinity)", span="1489-1489"];
m26_794 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", span="1482-1482"];
m26_314 [cluster="System.Convert.ToChar(int)", file="JsonSchemaGenerator.cs", label="Entry System.Convert.ToChar(int)", span="0-0"];
m26_48 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="174-174"];
m26_60 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonSchemaGenerator.cs", label="length - _charPos <= length * 0.1", span="179-179"];
m26_61 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonSchemaGenerator.cs", label="int count = _charsUsed - _charPos", span="181-181"];
m26_62 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonSchemaGenerator.cs", label="count > 0", span="182-182"];
m26_63 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonSchemaGenerator.cs", label="BlockCopyChars(_chars, _charPos, _chars, 0, count)", span="183-183"];
m26_66 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonSchemaGenerator.cs", label="_charsUsed = count", span="187-187"];
m26_64 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonSchemaGenerator.cs", label="_lineStartPos -= _charPos", span="185-185"];
m26_65 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonSchemaGenerator.cs", label="_charPos = 0", span="186-186"];
m26_67 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonSchemaGenerator.cs", label="_chars[_charsUsed] = '\0'", span="188-188"];
m26_68 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="174-174"];
m26_14 [cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(int)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(int)", span="50-50"];
m26_189 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m26_357 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="690-690"];
m26_358 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonSchemaGenerator.cs", label="_buffer != null", span="692-692"];
m26_359 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonSchemaGenerator.cs", label="_buffer.Position = 0", span="693-693"];
m26_360 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonSchemaGenerator.cs", label="_stringReference = new StringReference()", span="695-695"];
m26_361 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="690-690"];
m26_50 [cluster="System.Convert.FromBase64CharArray(char[], int, int)", file="JsonSchemaGenerator.cs", label="Entry System.Convert.FromBase64CharArray(char[], int, int)", span="0-0"];
m26_704 [cluster="double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", file="JsonSchemaGenerator.cs", label="Entry double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", span="0-0"];
m26_49 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="422-422"];
m26_190 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="int charPos = _charPos", span="424-424"];
m26_201 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="441-441"];
m26_206 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="450-450"];
m26_276 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="_chars[charPos - 1] == quote", span="577-577"];
m26_191 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="int initialPosition = _charPos", span="425-425"];
m26_195 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="_chars[charPos++]", span="431-431"];
m26_192 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="int lastWritePosition = _charPos", span="426-426"];
m26_278 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="initialPosition == lastWritePosition", span="581-581"];
m26_279 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="_stringReference = new StringReference(_chars, initialPosition, charPos - initialPosition)", span="583-583"];
m26_193 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="StringBuffer buffer = null", span="427-427"];
m26_254 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="WriteCharToBuffer(buffer, highSurrogate, lastWritePosition, escapeStartPos)", span="538-538"];
m26_264 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="WriteCharToBuffer(buffer, writeChar, lastWritePosition, escapeStartPos)", span="561-561"];
m26_194 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label=true, span="429-429"];
m26_252 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="buffer == null", span="535-535"];
m26_262 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="buffer == null", span="558-558"];
m26_280 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="buffer == null", span="587-587"];
m26_283 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="buffer.Append(_chars, lastWritePosition, charPos - lastWritePosition)", span="591-591"];
m26_284 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="_stringReference = new StringReference(buffer.GetInternalBuffer(), 0, buffer.Position)", span="593-593"];
m26_196 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="'\0'", span="433-433"];
m26_202 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="'\\'", span="445-445"];
m26_266 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="StringUtils.CarriageReturn", span="565-565"];
m26_270 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="StringUtils.LineFeed", span="570-570"];
m26_274 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="''''", span="575-575"];
m26_197 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="_charsUsed == charPos - 1", span="434-434"];
m26_198 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="charPos--", span="436-436"];
m26_203 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="_charPos = charPos", span="446-446"];
m26_205 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="_charPos = charPos", span="449-449"];
m26_207 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="int escapeStartPos = charPos - 1", span="454-454"];
m26_208 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="char currentChar = _chars[charPos]", span="456-456"];
m26_212 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="charPos++", span="463-463"];
m26_199 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="ReadData(true) == 0", span="438-438"];
m26_200 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="_charPos = charPos", span="440-440"];
m26_204 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="!EnsureChars(0, true)", span="447-447"];
m26_209 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="char writeChar", span="458-458"];
m26_210 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label=currentChar, span="460-460"];
m26_232 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="writeChar = currentChar", span="489-489"];
m26_261 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Bad JSON escape sequence: {0}.''.FormatWith(CultureInfo.InvariantCulture, @''\'' + currentChar));", span="555-555"];
m26_211 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="'b'", span="462-462"];
m26_214 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="'t'", span="466-466"];
m26_217 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="'n'", span="470-470"];
m26_220 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="'f'", span="474-474"];
m26_223 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="'r'", span="478-478"];
m26_226 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="'\\'", span="482-482"];
m26_229 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="''''", span="486-486"];
m26_234 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="'u'", span="492-492"];
m26_259 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="charPos++", span="553-553"];
m26_213 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="writeChar = '\b'", span="464-464"];
m26_215 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="charPos++", span="467-467"];
m26_216 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="writeChar = '\t'", span="468-468"];
m26_218 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="charPos++", span="471-471"];
m26_219 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="writeChar = '\n'", span="472-472"];
m26_221 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="charPos++", span="475-475"];
m26_222 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="writeChar = '\f'", span="476-476"];
m26_224 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="charPos++", span="479-479"];
m26_225 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="writeChar = '\r'", span="480-480"];
m26_227 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="charPos++", span="483-483"];
m26_228 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="writeChar = '\\'", span="484-484"];
m26_233 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="charPos++", span="490-490"];
m26_230 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="'\''", span="487-487"];
m26_231 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="'/'", span="488-488"];
m26_235 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="charPos++", span="493-493"];
m26_236 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="_charPos = charPos", span="494-494"];
m26_237 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="writeChar = ParseUnicode()", span="495-495"];
m26_238 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="StringUtils.IsLowSurrogate(writeChar)", span="497-497"];
m26_240 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="StringUtils.IsHighSurrogate(writeChar)", span="502-502"];
m26_244 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="char highSurrogate = writeChar", span="514-514"];
m26_239 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="writeChar = UnicodeReplacementChar", span="500-500"];
m26_241 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="bool anotherHighSurrogate", span="504-504"];
m26_258 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="charPos = _charPos", span="550-550"];
m26_242 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="anotherHighSurrogate = false", span="509-509"];
m26_243 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="EnsureChars(2, true) && _chars[_charPos] == '\\' && _chars[_charPos + 1] == 'u'", span="512-512"];
m26_257 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label=anotherHighSurrogate, span="547-547"];
m26_256 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="writeChar = UnicodeReplacementChar", span="545-545"];
m26_245 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="_charPos += 2", span="516-516"];
m26_246 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="writeChar = ParseUnicode()", span="517-517"];
m26_247 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="StringUtils.IsLowSurrogate(writeChar)", span="519-519"];
m26_248 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="StringUtils.IsHighSurrogate(writeChar)", span="523-523"];
m26_249 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="highSurrogate = UnicodeReplacementChar", span="526-526"];
m26_251 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="highSurrogate = UnicodeReplacementChar", span="532-532"];
m26_250 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="anotherHighSurrogate = true", span="527-527"];
m26_253 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="buffer = GetBuffer()", span="536-536"];
m26_255 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="lastWritePosition = _charPos", span="539-539"];
m26_260 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="_charPos = charPos", span="554-554"];
m26_265 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="lastWritePosition = charPos", span="563-563"];
m26_267 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="_charPos = charPos - 1", span="566-566"];
m26_263 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="buffer = GetBuffer()", span="559-559"];
m26_268 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="ProcessCarriageReturn(true)", span="567-567"];
m26_269 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="charPos = _charPos", span="568-568"];
m26_271 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="_charPos = charPos - 1", span="571-571"];
m26_272 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="ProcessLineFeed()", span="572-572"];
m26_273 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="charPos = _charPos", span="573-573"];
m26_275 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="'\''", span="576-576"];
m26_277 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="charPos--", span="579-579"];
m26_282 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="charPos > lastWritePosition", span="590-590"];
m26_285 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="charPos++", span="596-596"];
m26_281 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="buffer = GetBuffer()", span="588-588"];
m26_286 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="_charPos = charPos", span="597-597"];
m26_287 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="return;", span="598-598"];
m26_288 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="422-422"];
m26_185 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="698-698"];
m26_363 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label=true, span="700-700"];
m26_364 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="char currentChar = _chars[_charPos]", span="702-702"];
m26_365 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label=currentChar, span="704-704"];
m26_398 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="char.IsWhiteSpace(currentChar)", span="753-753"];
m26_400 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''After parsing a value an unexpected character was encountered: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="760-760"];
m26_366 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="'\0'", span="706-706"];
m26_372 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="'}'", span="720-720"];
m26_376 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="']'", span="724-724"];
m26_380 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="')'", span="728-728"];
m26_384 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="'/'", span="732-732"];
m26_387 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="','", span="735-735"];
m26_391 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="' '", span="741-741"];
m26_394 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="StringUtils.CarriageReturn", span="746-746"];
m26_396 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="StringUtils.LineFeed", span="749-749"];
m26_367 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="_charsUsed == _charPos", span="707-707"];
m26_368 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="ReadData(false) == 0", span="709-709"];
m26_371 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="_charPos++", span="717-717"];
m26_369 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="_currentState = State.Finished", span="711-711"];
m26_370 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="return false;", span="712-712"];
m26_373 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="_charPos++", span="721-721"];
m26_374 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.EndObject)", span="722-722"];
m26_375 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="return true;", span="723-723"];
m26_377 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="_charPos++", span="725-725"];
m26_378 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.EndArray)", span="726-726"];
m26_379 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="return true;", span="727-727"];
m26_381 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="_charPos++", span="729-729"];
m26_382 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.EndConstructor)", span="730-730"];
m26_383 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="return true;", span="731-731"];
m26_385 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="ParseComment()", span="733-733"];
m26_386 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="return true;", span="734-734"];
m26_388 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="_charPos++", span="736-736"];
m26_389 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="SetStateBasedOnCurrent()", span="739-739"];
m26_390 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="return false;", span="740-740"];
m26_392 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="StringUtils.Tab", span="742-742"];
m26_393 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="_charPos++", span="744-744"];
m26_395 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="ProcessCarriageReturn(false)", span="747-747"];
m26_397 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="ProcessLineFeed()", span="750-750"];
m26_399 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="_charPos++", span="756-756"];
m26_401 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="698-698"];
m26_132 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", span="458-458"];
m26_313 [cluster="int.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", file="JsonSchemaGenerator.cs", label="Entry int.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", span="0-0"];
m26_52 [cluster="Newtonsoft.Json.Utilities.StringReference.ToString()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.ToString()", span="55-55"];
m26_457 [cluster="char.IsLetterOrDigit(char)", file="JsonSchemaGenerator.cs", label="Entry char.IsLetterOrDigit(char)", span="0-0"];
m26_186 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1034-1034"];
m26_571 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonSchemaGenerator.cs", label="bool finished = false", span="1036-1036"];
m26_589 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonSchemaGenerator.cs", label="return (!oneOrMore || ateWhitespace);", span="1075-1075"];
m26_572 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonSchemaGenerator.cs", label="bool ateWhitespace = false", span="1037-1037"];
m26_573 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonSchemaGenerator.cs", label="!finished", span="1038-1038"];
m26_574 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonSchemaGenerator.cs", label="char currentChar = _chars[_charPos]", span="1040-1040"];
m26_575 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonSchemaGenerator.cs", label=currentChar, span="1042-1042"];
m26_585 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonSchemaGenerator.cs", label="currentChar == ' ' || char.IsWhiteSpace(currentChar)", span="1062-1062"];
m26_576 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonSchemaGenerator.cs", label="'\0'", span="1044-1044"];
m26_581 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonSchemaGenerator.cs", label="StringUtils.CarriageReturn", span="1055-1055"];
m26_583 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonSchemaGenerator.cs", label="StringUtils.LineFeed", span="1058-1058"];
m26_577 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonSchemaGenerator.cs", label="_charsUsed == _charPos", span="1045-1045"];
m26_578 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonSchemaGenerator.cs", label="ReadData(false) == 0", span="1047-1047"];
m26_580 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonSchemaGenerator.cs", label="_charPos++", span="1052-1052"];
m26_579 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonSchemaGenerator.cs", label="finished = true", span="1048-1048"];
m26_582 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonSchemaGenerator.cs", label="ProcessCarriageReturn(false)", span="1056-1056"];
m26_584 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonSchemaGenerator.cs", label="ProcessLineFeed()", span="1059-1059"];
m26_586 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonSchemaGenerator.cs", label="ateWhitespace = true", span="1064-1064"];
m26_588 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonSchemaGenerator.cs", label="finished = true", span="1069-1069"];
m26_587 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonSchemaGenerator.cs", label="_charPos++", span="1065-1065"];
m26_590 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1034-1034"];
m26_562 [cluster="char.IsNumber(char)", file="JsonSchemaGenerator.cs", label="Entry char.IsNumber(char)", span="0-0"];
m26_102 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="257-257"];
m26_103 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonSchemaGenerator.cs", label="_charPos + relativePosition >= _charsUsed", span="259-259"];
m26_104 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonSchemaGenerator.cs", label="return ReadChars(relativePosition, append);", span="260-260"];
m26_105 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonSchemaGenerator.cs", label="return true;", span="262-262"];
m26_106 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="257-257"];
m26_297 [cluster="Newtonsoft.Json.Utilities.StringBuffer.GetInternalBuffer()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.GetInternalBuffer()", span="101-101"];
m26_145 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="353-353"];
m26_146 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonSchemaGenerator.cs", label="return ReadAsDateTimeInternal();", span="355-355"];
m26_147 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="353-353"];
m26_72 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", span="197-197"];
m26_75 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="_charsUsed + charsRequired >= _chars.Length - 1", span="203-203"];
m26_76 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label=append, span="205-205"];
m26_77 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="int newArrayLength = Math.Max(_chars.Length * 2, _charsUsed + charsRequired + 1)", span="208-208"];
m26_82 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="remainingCharCount + charsRequired + 1 >= _chars.Length", span="221-221"];
m26_83 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="char[] dst = new char[remainingCharCount + charsRequired + 1]", span="224-224"];
m26_92 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="int attemptCharReadCount = _chars.Length - _charsUsed - 1", span="244-244"];
m26_81 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="int remainingCharCount = _charsUsed - _charPos", span="219-219"];
m26_78 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="char[] dst = new char[newArrayLength]", span="211-211"];
m26_79 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="BlockCopyChars(_chars, 0, dst, 0, _chars.Length)", span="213-213"];
m26_80 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="_chars = dst", span="215-215"];
m26_84 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="remainingCharCount > 0", span="226-226"];
m26_85 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="BlockCopyChars(_chars, _charPos, dst, 0, remainingCharCount)", span="227-227"];
m26_87 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="remainingCharCount > 0", span="234-234"];
m26_88 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="BlockCopyChars(_chars, _charPos, _chars, 0, remainingCharCount)", span="235-235"];
m26_91 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="_charsUsed = remainingCharCount", span="240-240"];
m26_86 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="_chars = dst", span="229-229"];
m26_89 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="_lineStartPos -= _charPos", span="238-238"];
m26_90 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="_charPos = 0", span="239-239"];
m26_93 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="int charsRead = _reader.Read(_chars, _charsUsed, attemptCharReadCount)", span="246-246"];
m26_94 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="_charsUsed += charsRead", span="248-248"];
m26_95 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="charsRead == 0", span="250-250"];
m26_98 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="return charsRead;", span="254-254"];
m26_96 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="_isEndOfFile = true", span="251-251"];
m26_97 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="_chars[_charsUsed] = '\0'", span="253-253"];
m26_99 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", span="197-197"];
m26_402 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="874-874"];
m26_289 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="615-615"];
m26_303 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonSchemaGenerator.cs", label="char writeChar", span="617-617"];
m26_304 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonSchemaGenerator.cs", label="EnsureChars(4, true)", span="618-618"];
m26_310 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonSchemaGenerator.cs", label="return writeChar;", span="630-630"];
m26_305 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonSchemaGenerator.cs", label="string hexValues = new string(_chars, _charPos, 4)", span="620-620"];
m26_309 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing unicode character.'');", span="628-628"];
m26_306 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonSchemaGenerator.cs", label="char hexChar = Convert.ToChar(int.Parse(hexValues, NumberStyles.HexNumber, NumberFormatInfo.InvariantInfo))", span="621-621"];
m26_307 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonSchemaGenerator.cs", label="writeChar = hexChar", span="622-622"];
m26_308 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonSchemaGenerator.cs", label="_charPos += 4", span="624-624"];
m26_311 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="615-615"];
m26_183 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseValue()", span="902-902"];
m26_475 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label=true, span="904-904"];
m26_476 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="char currentChar = _chars[_charPos]", span="906-906"];
m26_477 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label=currentChar, span="908-908"];
m26_485 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="ParseString(currentChar)", span="923-923"];
m26_546 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="char.IsWhiteSpace(currentChar)", span="999-999"];
m26_548 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="char.IsNumber(currentChar) || currentChar == '-' || currentChar == '.'", span="1005-1005"];
m26_551 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Unexpected character encountered while parsing value: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1012-1012"];
m26_478 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="'\0'", span="910-910"];
m26_483 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="''''", span="921-921"];
m26_487 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="'t'", span="925-925"];
m26_490 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="'f'", span="928-928"];
m26_493 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="'n'", span="931-931"];
m26_503 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="'N'", span="948-948"];
m26_506 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="'I'", span="951-951"];
m26_509 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="'-'", span="954-954"];
m26_514 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="'/'", span="960-960"];
m26_517 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="'u'", span="963-963"];
m26_520 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="'{'", span="966-966"];
m26_524 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="'['", span="970-970"];
m26_528 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="']'", span="974-974"];
m26_532 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="','", span="978-978"];
m26_535 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="')'", span="983-983"];
m26_539 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="StringUtils.CarriageReturn", span="987-987"];
m26_541 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="StringUtils.LineFeed", span="990-990"];
m26_543 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="' '", span="993-993"];
m26_479 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="_charsUsed == _charPos", span="911-911"];
m26_480 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="ReadData(false) == 0", span="913-913"];
m26_482 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="_charPos++", span="918-918"];
m26_481 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="return false;", span="914-914"];
m26_484 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="'\''", span="922-922"];
m26_486 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="return true;", span="924-924"];
m26_488 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="ParseTrue()", span="926-926"];
m26_489 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="return true;", span="927-927"];
m26_491 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="ParseFalse()", span="929-929"];
m26_492 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="return true;", span="930-930"];
m26_494 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="EnsureChars(1, true)", span="932-932"];
m26_495 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="char next = _chars[_charPos + 1]", span="934-934"];
m26_501 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Unexpected end.'');", span="945-945"];
m26_496 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="next == 'u'", span="936-936"];
m26_498 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="next == 'e'", span="938-938"];
m26_497 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="ParseNull()", span="937-937"];
m26_499 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="ParseConstructor()", span="939-939"];
m26_500 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="throw JsonReaderException.Create(this, ''Unexpected character encountered while parsing value: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="941-941"];
m26_502 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="return true;", span="947-947"];
m26_504 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="ParseNumberNaN()", span="949-949"];
m26_505 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="return true;", span="950-950"];
m26_507 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="ParseNumberPositiveInfinity()", span="952-952"];
m26_508 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="return true;", span="953-953"];
m26_510 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="955-955"];
m26_511 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="ParseNumberNegativeInfinity()", span="956-956"];
m26_512 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="ParseNumber()", span="958-958"];
m26_513 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="return true;", span="959-959"];
m26_515 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="ParseComment()", span="961-961"];
m26_516 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="return true;", span="962-962"];
m26_518 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="ParseUndefined()", span="964-964"];
m26_519 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="return true;", span="965-965"];
m26_521 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="_charPos++", span="967-967"];
m26_522 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.StartObject)", span="968-968"];
m26_523 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="return true;", span="969-969"];
m26_525 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="_charPos++", span="971-971"];
m26_526 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.StartArray)", span="972-972"];
m26_527 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="return true;", span="973-973"];
m26_529 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="_charPos++", span="975-975"];
m26_530 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.EndArray)", span="976-976"];
m26_531 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="return true;", span="977-977"];
m26_533 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.Undefined)", span="981-981"];
m26_534 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="return true;", span="982-982"];
m26_536 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="_charPos++", span="984-984"];
m26_537 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.EndConstructor)", span="985-985"];
m26_538 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="return true;", span="986-986"];
m26_540 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="ProcessCarriageReturn(false)", span="988-988"];
m26_542 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="ProcessLineFeed()", span="991-991"];
m26_544 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="StringUtils.Tab", span="994-994"];
m26_545 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="_charPos++", span="996-996"];
m26_547 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="_charPos++", span="1002-1002"];
m26_549 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="ParseNumber()", span="1007-1007"];
m26_550 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="return true;", span="1008-1008"];
m26_552 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseValue()", span="902-902"];
m26_700 [cluster="System.Convert.ToDecimal(long)", file="JsonSchemaGenerator.cs", label="Entry System.Convert.ToDecimal(long)", span="0-0"];
m26_137 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="335-335"];
m26_138 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonSchemaGenerator.cs", label="return ReadAsInt32Internal();", span="337-337"];
m26_139 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="335-335"];
m26_184 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseObject()", span="767-767"];
m26_404 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label=true, span="769-769"];
m26_405 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="char currentChar = _chars[_charPos]", span="771-771"];
m26_406 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label=currentChar, span="773-773"];
m26_426 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="char.IsWhiteSpace(currentChar)", span="805-805"];
m26_407 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="'\0'", span="775-775"];
m26_412 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="'}'", span="786-786"];
m26_416 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="'/'", span="790-790"];
m26_419 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="StringUtils.CarriageReturn", span="793-793"];
m26_421 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="StringUtils.LineFeed", span="796-796"];
m26_423 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="' '", span="799-799"];
m26_408 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="_charsUsed == _charPos", span="776-776"];
m26_409 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="ReadData(false) == 0", span="778-778"];
m26_411 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="_charPos++", span="783-783"];
m26_410 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="return false;", span="779-779"];
m26_413 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="SetToken(JsonToken.EndObject)", span="787-787"];
m26_414 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="_charPos++", span="788-788"];
m26_415 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="return true;", span="789-789"];
m26_417 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="ParseComment()", span="791-791"];
m26_418 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="return true;", span="792-792"];
m26_420 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="ProcessCarriageReturn(false)", span="794-794"];
m26_422 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="ProcessLineFeed()", span="797-797"];
m26_424 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="StringUtils.Tab", span="800-800"];
m26_425 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="_charPos++", span="802-802"];
m26_427 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="_charPos++", span="808-808"];
m26_428 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="return ParseProperty();", span="812-812"];
m26_429 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseObject()", span="767-767"];
m26_152 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", span="400-400"];
m26_627 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", span="1385-1385"];
m26_744 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonSchemaGenerator.cs", label="bool match = MatchValue(value)", span="1388-1388"];
m26_745 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonSchemaGenerator.cs", label="!match", span="1390-1390"];
m26_746 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonSchemaGenerator.cs", label="return false;", span="1391-1391"];
m26_747 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonSchemaGenerator.cs", label="!EnsureChars(0, false)", span="1393-1393"];
m26_748 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonSchemaGenerator.cs", label="return true;", span="1394-1394"];
m26_749 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonSchemaGenerator.cs", label="return IsSeperator(_chars[_charPos]) || _chars[_charPos] == '\0';", span="1396-1396"];
m26_750 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", span="1385-1385"];
m26_821 [file="JsonSchemaGenerator.cs", label="Newtonsoft.Json.JsonTextReader", span=""];
m27_14 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", span="153-153"];
m27_15 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", file="JsonSerializer.cs", label="return type.GetTypeInfo().IsGenericType;", span="158-158"];
m27_16 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", span="153-153"];
m27_10 [cluster="System.Type.GetTypeInfo()", file="JsonSerializer.cs", label="Entry System.Type.GetTypeInfo()", span="0-0"];
m27_17 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", span="162-162"];
m27_18 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="JsonSerializer.cs", label="return type.GetTypeInfo().IsGenericTypeDefinition;", span="167-167"];
m27_19 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", span="162-162"];
m27_20 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", span="171-171"];
m27_21 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="JsonSerializer.cs", label="return type.GetTypeInfo().BaseType;", span="176-176"];
m27_22 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", span="171-171"];
m27_62 [cluster="string.Equals(string, string, System.StringComparison)", file="JsonSerializer.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m27_38 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", span="526-526"];
m27_39 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", file="JsonSerializer.cs", label="return type.GetTypeInfo().IsVisible;", span="531-531"];
m27_40 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", span="526-526"];
m27_4 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", span="107-107"];
m27_5 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", file="JsonSerializer.cs", label="return memberInfo.MemberType;", span="110-110"];
m27_6 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", span="107-107"];
m27_35 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", span="517-517"];
m27_36 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="JsonSerializer.cs", label="return type.GetTypeInfo().IsAbstract;", span="522-522"];
m27_37 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", span="517-517"];
m27_29 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", span="198-198"];
m27_30 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", file="JsonSerializer.cs", label="return type.GetTypeInfo().IsClass;", span="203-203"];
m27_31 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", span="198-198"];
m27_69 [cluster="System.Type.AssignableToTypeName(string, bool, out System.Type)", file="JsonSerializer.cs", label="Entry System.Type.AssignableToTypeName(string, bool, out System.Type)", span="553-553"];
m27_65 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool)", span="584-584"];
m27_66 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool)", file="JsonSerializer.cs", label="Type match", span="586-586"];
m27_67 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool)", file="JsonSerializer.cs", label="return type.AssignableToTypeName(fullTypeName, searchInterfaces, out match);", span="587-587"];
m27_68 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool)", span="584-584"];
m27_7 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", span="135-135"];
m27_8 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", file="JsonSerializer.cs", label="return type.GetTypeInfo().ContainsGenericParameters;", span="140-140"];
m27_9 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", span="135-135"];
m27_41 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", span="535-535"];
m27_42 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="JsonSerializer.cs", label="return type.GetTypeInfo().IsValueType;", span="540-540"];
m27_43 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", span="535-535"];
m27_26 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", span="189-189"];
m27_27 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="JsonSerializer.cs", label="return type.GetTypeInfo().IsEnum;", span="194-194"];
m27_28 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", span="189-189"];
m27_64 [cluster="System.Type.GetInterfaces()", file="JsonSerializer.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m27_11 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", span="144-144"];
m27_12 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="JsonSerializer.cs", label="return type.GetTypeInfo().IsInterface;", span="149-149"];
m27_13 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", span="144-144"];
m27_3 [cluster="System.Delegate.GetMethodInfo()", file="JsonSerializer.cs", label="Entry System.Delegate.GetMethodInfo()", span="0-0"];
m27_32 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", span="207-207"];
m27_33 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="JsonSerializer.cs", label="return type.GetTypeInfo().IsSealed;", span="212-212"];
m27_34 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", span="207-207"];
m27_0 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", span="98-98"];
m27_1 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="JsonSerializer.cs", label="return d.GetMethodInfo();", span="103-103"];
m27_2 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", span="98-98"];
m27_80 [cluster="System.Type.ImplementInterface(System.Type)", file="JsonSerializer.cs", label="Entry System.Type.ImplementInterface(System.Type)", span="590-590"];
m27_63 [cluster="System.Type.BaseType()", file="JsonSerializer.cs", label="Entry System.Type.BaseType()", span="171-171"];
m27_70 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", span="590-590"];
m27_71 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonSerializer.cs", label="Type currentType = type", span="592-592"];
m27_75 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonSerializer.cs", label="i == interfaceType || (i != null && i.ImplementInterface(interfaceType))", span="597-597"];
m27_72 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonSerializer.cs", label="currentType != null", span="592-592"];
m27_73 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonSerializer.cs", label="IEnumerable<Type> interfaces = currentType.GetInterfaces()", span="594-594"];
m27_77 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonSerializer.cs", label="currentType = currentType.BaseType()", span="592-592"];
m27_78 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonSerializer.cs", label="return false;", span="604-604"];
m27_74 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonSerializer.cs", label=interfaces, span="595-595"];
m27_76 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonSerializer.cs", label="return true;", span="599-599"];
m27_79 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", span="590-590"];
m27_47 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", span="553-553"];
m27_48 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="JsonSerializer.cs", label="Type current = type", span="555-555"];
m27_50 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="JsonSerializer.cs", label="string.Equals(current.FullName, fullTypeName, StringComparison.Ordinal)", span="559-559"];
m27_54 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="JsonSerializer.cs", label=searchInterfaces, span="568-568"];
m27_55 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="JsonSerializer.cs", label="type.GetInterfaces()", span="570-570"];
m27_56 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="JsonSerializer.cs", label="string.Equals(i.Name, fullTypeName, StringComparison.Ordinal)", span="572-572"];
m27_57 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="JsonSerializer.cs", label="match = type", span="574-574"];
m27_49 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="JsonSerializer.cs", label="current != null", span="557-557"];
m27_51 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="JsonSerializer.cs", label="match = current", span="561-561"];
m27_53 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="JsonSerializer.cs", label="current = current.BaseType()", span="565-565"];
m27_52 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="JsonSerializer.cs", label="return true;", span="562-562"];
m27_59 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="JsonSerializer.cs", label="match = null", span="580-580"];
m27_58 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="JsonSerializer.cs", label="return true;", span="575-575"];
m27_60 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="JsonSerializer.cs", label="return false;", span="581-581"];
m27_61 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, bool, out System.Type)", span="553-553"];
m27_44 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsPrimitive(System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsPrimitive(System.Type)", span="544-544"];
m27_45 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsPrimitive(System.Type)", file="JsonSerializer.cs", label="return type.GetTypeInfo().IsPrimitive;", span="549-549"];
m27_46 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsPrimitive(System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsPrimitive(System.Type)", span="544-544"];
m27_23 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", file="JsonSerializer.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", span="180-180"];
m27_24 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", file="JsonSerializer.cs", label="return type.GetTypeInfo().Assembly;", span="185-185"];
m27_25 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", file="JsonSerializer.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", span="180-180"];
m28_124 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool, bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool, bool)", span="491-491"];
m28_985 [cluster="System.Collections.IDictionary.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.IDictionary.GetEnumerator()", span="0-0"];
m28_1006 [cluster="Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="54-54"];
m28_40 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="219-219"];
m28_560 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", span="39-39"];
m28_760 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.GetPosition(int)", span="327-327"];
m28_895 [cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.TrySetMember(System.Dynamic.IDynamicMetaObjectProvider, string, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.TrySetMember(System.Dynamic.IDynamicMetaObjectProvider, string, object)", span="105-105"];
m28_104 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", span="234-234"];
m28_105 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="ValidationUtils.ArgumentNotNull(reader, nameof(reader))", span="236-236"];
m28_108 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.PropertyName", span="245-245"];
m28_109 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="string propertyName = (string)reader.Value", span="247-247"];
m28_110 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="!reader.ReadAndMoveToContent()", span="248-248"];
m28_111 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="CheckPropertyName(reader, propertyName)", span="253-253"];
m28_113 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="writer.WriteToken(reader, true, true, false)", span="259-259"];
m28_114 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.Comment", span="261-261"];
m28_117 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="reader.Read()", span="270-270"];
m28_118 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="272-272"];
m28_106 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="JTokenWriter writer = new JTokenWriter()", span="239-239"];
m28_107 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="writer.WriteStartObject()", span="241-241"];
m28_112 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="writer.WritePropertyName(propertyName)", span="258-258"];
m28_115 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="writer.WriteEndObject()", span="267-267"];
m28_116 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="return writer.Token;", span="268-268"];
m28_119 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", span="234-234"];
m28_74 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", span="2211-2211"];
m28_1043 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label=hasConverter, span="2215-2215"];
m28_1044 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="return reader.Read();", span="2217-2217"];
m28_1045 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType t = (contract != null) ? contract.InternalReadType : ReadType.Read", span="2220-2220"];
m28_1048 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="return reader.ReadAndMoveToContent();", span="2225-2225"];
m28_1050 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsInt32()", span="2227-2227"];
m28_1052 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsDecimal()", span="2230-2230"];
m28_1054 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsDouble()", span="2233-2233"];
m28_1056 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsBytes()", span="2236-2236"];
m28_1058 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsBoolean()", span="2239-2239"];
m28_1060 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsString()", span="2242-2242"];
m28_1062 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsDateTime()", span="2245-2245"];
m28_1064 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsDateTimeOffset()", span="2249-2249"];
m28_1066 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="return (reader.TokenType != JsonToken.None);", span="2256-2256"];
m28_1046 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label=t, span="2222-2222"];
m28_1047 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.Read", span="2224-2224"];
m28_1049 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.ReadAsInt32", span="2226-2226"];
m28_1051 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.ReadAsDecimal", span="2229-2229"];
m28_1053 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.ReadAsDouble", span="2232-2232"];
m28_1055 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.ReadAsBytes", span="2235-2235"];
m28_1057 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.ReadAsBoolean", span="2238-2238"];
m28_1059 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.ReadAsString", span="2241-2241"];
m28_1061 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.ReadAsDateTime", span="2244-2244"];
m28_1063 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.ReadAsDateTimeOffset", span="2248-2248"];
m28_1065 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="throw new ArgumentOutOfRangeException();", span="2253-2253"];
m28_1067 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", span="2211-2211"];
m28_1143 [cluster="Unk.ToDictionary", file="JsonSerializerInternalReader.cs", label="Entry Unk.ToDictionary", span=""];
m28_48 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", span="135-135"];
m28_49 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="reader == null", span="137-137"];
m28_50 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="throw new ArgumentNullException(nameof(reader));", span="139-139"];
m28_51 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="JsonContract contract = GetContractSafe(objectType)", span="142-142"];
m28_53 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.None && !ReadForType(reader, contract, converter != null)", span="148-148"];
m28_55 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''No JSON content found and type '{0}' is not nullable.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="152-152"];
m28_59 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="deserializedValue = DeserializeConvertable(converter, reader, objectType, null)", span="162-162"];
m28_60 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="deserializedValue = CreateValueInternal(reader, objectType, contract, null, null, null, null)", span="166-166"];
m28_61 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label=checkAdditionalContent, span="169-169"];
m28_62 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="reader.Read() && reader.TokenType != JsonToken.Comment", span="171-171"];
m28_66 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(null, contract, null, reader as IJsonLineInfo, reader.Path, ex)", span="181-181"];
m28_67 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, false, 0)", span="183-183"];
m28_52 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="JsonConverter converter = GetConverter(contract, null, null, null)", span="146-146"];
m28_54 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="contract != null && !contract.IsNullable", span="150-150"];
m28_58 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="converter != null && converter.CanRead", span="160-160"];
m28_57 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="object deserializedValue", span="158-158"];
m28_56 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="return null;", span="155-155"];
m28_64 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="return deserializedValue;", span="177-177"];
m28_63 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Additional text found in JSON string after finishing deserializing object.'');", span="173-173"];
m28_65 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label=Exception, span="179-179"];
m28_69 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="ClearErrorContext()", span="191-191"];
m28_68 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="return null;", span="184-184"];
m28_70 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="throw;", span="192-192"];
m28_71 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", span="135-135"];
m28_39 [cluster="string.Equals(string, string, System.StringComparison)", file="JsonSerializerInternalReader.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m28_75 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", span="2104-2104"];
m28_999 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="2106-2106"];
m28_1000 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Started deserializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, objectType, converter.GetType())), null)", span="2108-2108"];
m28_1001 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="object value = converter.ReadJson(reader, objectType, existingValue, GetInternalSerializer())", span="2111-2111"];
m28_1003 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Finished deserializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, objectType, converter.GetType())), null)", span="2115-2115"];
m28_1002 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="2113-2113"];
m28_1004 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="return value;", span="2118-2118"];
m28_1005 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", span="2104-2104"];
m28_348 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92"];
m28_756 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m28_87 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="239-239"];
m28_980 [cluster="Unk.All", file="JsonSerializerInternalReader.cs", label="Entry Unk.All", span=""];
m28_494 [cluster="System.Enum.ToObject(System.Type, object)", file="JsonSerializerInternalReader.cs", label="Entry System.Enum.ToObject(System.Type, object)", span="0-0"];
m28_1146 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="2560-2560"];
m28_1206 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="property != null && requiredProperties != null", span="2562-2562"];
m28_1208 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="2565-2565"];
m28_1210 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="propertyPresence = (CoerceEmptyStringToNull(property.PropertyType, property.PropertyContract, (string)reader.Value))\r\n                            ? PropertyPresence.Null\r\n                            : PropertyPresence.Value", span="2568-2570"];
m28_1215 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="requiredProperties[property] = propertyPresence", span="2581-2581"];
m28_1207 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="PropertyPresence propertyPresence", span="2564-2564"];
m28_1209 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="JsonToken.String", span="2567-2567"];
m28_1211 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="JsonToken.Null", span="2572-2572"];
m28_1214 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="propertyPresence = PropertyPresence.Value", span="2577-2577"];
m28_1212 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="JsonToken.Undefined", span="2573-2573"];
m28_1213 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="propertyPresence = PropertyPresence.Null", span="2574-2574"];
m28_1216 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="2560-2560"];
m28_559 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="172-172"];
m28_414 [cluster="Newtonsoft.Json.Serialization.ISerializationBinder.BindToType(string, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.ISerializationBinder.BindToType(string, string)", span="42-42"];
m28_556 [cluster="System.Type.IsValueType()", file="JsonSerializerInternalReader.cs", label="Entry System.Type.IsValueType()", span="535-535"];
m28_38 [cluster="object.ToString()", file="JsonSerializerInternalReader.cs", label="Entry object.ToString()", span="0-0"];
m28_555 [cluster="System.Nullable<T>.GetValueOrDefault(T)", file="JsonSerializerInternalReader.cs", label="Entry System.Nullable<T>.GetValueOrDefault(T)", span="0-0"];
m28_568 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.AddReference(object, string, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.AddReference(object, string, object)", span="64-64"];
m28_1042 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", span="2491-2491"];
m28_1179 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="object value", span="2493-2493"];
m28_1180 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="contract.ExtensionDataIsJToken", span="2494-2494"];
m28_1181 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="value = JToken.ReadFrom(reader)", span="2496-2496"];
m28_1182 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="value = CreateValueInternal(reader, null, null, null, contract, member, null)", span="2500-2500"];
m28_1183 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="return value;", span="2502-2502"];
m28_1184 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", span="2491-2491"];
m28_561 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", span="1117-1117"];
m28_562 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1121-1121"];
m28_563 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Read object reference Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, id, value.GetType())), null)", span="1123-1123"];
m28_564 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="Serializer.GetReferenceResolver().AddReference(this, id, value)", span="1126-1126"];
m28_566 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Error reading object reference '{0}'.''.FormatWith(CultureInfo.InvariantCulture, id), ex);", span="1130-1130"];
m28_565 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label=Exception, span="1128-1128"];
m28_567 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", span="1117-1117"];
m28_758 [cluster="System.Collections.Generic.Stack<T>.Peek()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.Stack<T>.Peek()", span="0-0"];
m28_350 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(object, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(object, string)", span="38-38"];
m28_986 [cluster="System.Collections.IEnumerator.MoveNext()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m28_837 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.Serialization.JsonSerializerInternalReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.Serialization.JsonSerializerInternalReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", span="40-40"];
m28_293 [cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31"];
m28_557 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="1134-1134"];
m28_569 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonSerializerInternalReader.cs", label="return ((value & flag) == flag);", span="1136-1136"];
m28_570 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="1134-1134"];
m28_29 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m28_495 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", span="360-360"];
m28_37 [cluster="Newtonsoft.Json.JsonReader.ReadAndAssert()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAndAssert()", span="1133-1133"];
m28_166 [cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48"];
m28_1074 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTime()", span="782-782"];
m28_296 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonSerializerInternalReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m28_73 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="371-371"];
m28_186 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="JsonConverter converter = null", span="373-373"];
m28_187 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="memberConverter != null", span="374-374"];
m28_188 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="converter = memberConverter", span="377-377"];
m28_190 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="converter = containerProperty.ItemConverter", span="381-381"];
m28_192 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="converter = containerContract.ItemConverter", span="385-385"];
m28_193 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="contract != null", span="387-387"];
m28_195 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="contract.Converter != null", span="390-390"];
m28_196 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="converter = contract.Converter", span="393-393"];
m28_197 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="(matchingConverter = Serializer.GetMatchingConverter(contract.UnderlyingType)) != null", span="395-395"];
m28_199 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="contract.InternalConverter != null", span="400-400"];
m28_200 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="converter = contract.InternalConverter", span="403-403"];
m28_201 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="return converter;", span="406-406"];
m28_194 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="JsonConverter matchingConverter", span="389-389"];
m28_198 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="converter = matchingConverter", span="398-398"];
m28_202 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="371-371"];
m28_88 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", span="207-207"];
m28_89 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="ValidationUtils.ArgumentNotNull(reader, nameof(reader))", span="209-209"];
m28_90 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="contract != null", span="211-211"];
m28_91 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="contract.UnderlyingType == typeof(JRaw)", span="213-213"];
m28_92 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return JRaw.Create(reader);", span="215-215"];
m28_93 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.Null\r\n                    && !(contract.UnderlyingType == typeof(JValue) || contract.UnderlyingType == typeof(JToken))", span="217-218"];
m28_97 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="writer.WriteToken(reader)", span="227-227"];
m28_95 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JToken token", span="224-224"];
m28_94 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return null;", span="220-220"];
m28_96 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JTokenWriter writer = new JTokenWriter()", span="225-225"];
m28_98 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="token = writer.Token", span="228-228"];
m28_99 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return token;", span="231-231"];
m28_100 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", span="207-207"];
m28_491 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="148-148"];
m28_294 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1768-1768"];
m28_850 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IDynamicMetaObjectProvider newObject", span="1770-1770"];
m28_851 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!contract.IsInstantiable", span="1772-1772"];
m28_852 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1774-1774"];
m28_853 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.DefaultCreator != null &&\r\n                (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="1777-1778"];
m28_854 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="newObject = (IDynamicMetaObjectProvider)contract.DefaultCreator()", span="1780-1780"];
m28_855 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a default constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1784-1784"];
m28_856 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="1787-1787"];
m28_857 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="AddReference(reader, id, newObject)", span="1789-1789"];
m28_858 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserializing(reader, contract, newObject)", span="1792-1792"];
m28_859 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int initialDepth = reader.Depth", span="1794-1794"];
m28_861 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1799-1799"];
m28_863 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="string memberName = reader.Value.ToString()", span="1802-1802"];
m28_864 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="1806-1806"];
m28_865 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1808-1808"];
m28_866 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonProperty property = contract.Properties.GetClosestMatchProperty(memberName)", span="1812-1812"];
m28_871 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!SetPropertyValue(property, propertyConverter, null, member, reader, newObject)", span="1823-1823"];
m28_872 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="1825-1825"];
m28_873 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Type t = (JsonTokenUtils.IsPrimitiveToken(reader.TokenType)) ? reader.ValueType : typeof(IDynamicMetaObjectProvider)", span="1830-1830"];
m28_875 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonConverter dynamicMemberConverter = GetConverter(dynamicMemberContract, null, null, member)", span="1833-1833"];
m28_878 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="value = DeserializeConvertable(dynamicMemberConverter, reader, t, null)", span="1838-1838"];
m28_879 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="value = CreateValueInternal(reader, t, dynamicMemberContract, null, null, member, null)", span="1842-1842"];
m28_880 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.TrySetMember(newObject, memberName, value)", span="1845-1845"];
m28_882 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(newObject, contract, memberName, reader as IJsonLineInfo, reader.Path, ex)", span="1850-1850"];
m28_883 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, true, initialDepth)", span="1852-1852"];
m28_887 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1864-1864"];
m28_888 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished && reader.Read()", span="1866-1866"];
m28_890 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ThrowUnexpectedEndException(reader, contract, newObject, ''Unexpected end when deserializing object.'')", span="1870-1870"];
m28_891 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserialized(reader, contract, newObject)", span="1873-1873"];
m28_892 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="return newObject;", span="1875-1875"];
m28_860 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="bool finished = false", span="1796-1796"];
m28_862 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.PropertyName", span="1801-1801"];
m28_885 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndObject", span="1860-1860"];
m28_867 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="property != null && property.Writable && !property.Ignored", span="1814-1814"];
m28_868 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract == null", span="1816-1816"];
m28_869 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1818-1818"];
m28_870 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.MemberConverter, null, null)", span="1821-1821"];
m28_881 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="1848-1848"];
m28_874 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonContract dynamicMemberContract = GetContractSafe(t)", span="1832-1832"];
m28_876 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object value", span="1835-1835"];
m28_877 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="dynamicMemberConverter != null && dynamicMemberConverter.CanRead", span="1836-1836"];
m28_884 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw;", span="1856-1856"];
m28_886 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="finished = true", span="1861-1861"];
m28_889 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1868-1868"];
m28_893 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1768-1768"];
m28_80 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", span="2585-2585"];
m28_1217 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs", label="ClearErrorContext()", span="2587-2587"];
m28_1218 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs", label=readPastError, span="2589-2589"];
m28_1219 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="2591-2591"];
m28_1220 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs", label="reader.Depth > (initialDepth + 1)", span="2593-2593"];
m28_1221 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="2595-2595"];
m28_1222 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", span="2585-2585"];
m28_839 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", span="1745-1745"];
m28_840 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="JsonContract itemContract = GetContractSafe(type)", span="1747-1747"];
m28_841 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="JsonConverter itemConverter = GetConverter(itemContract, null, contract, member)", span="1748-1748"];
m28_842 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="JsonReader tokenReader = token.CreateReader()", span="1750-1750"];
m28_846 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="result = DeserializeConvertable(itemConverter, tokenReader, type, null)", span="1756-1756"];
m28_847 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="result = CreateValueInternal(tokenReader, type, itemContract, null, contract, member, null)", span="1760-1760"];
m28_845 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="itemConverter != null && itemConverter.CanRead", span="1754-1754"];
m28_843 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="tokenReader.ReadAndAssert()", span="1751-1751"];
m28_844 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="object result", span="1753-1753"];
m28_848 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="return result;", span="1763-1763"];
m28_849 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", span="1745-1745"];
m28_35 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1579-1579"];
m28_768 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IWrappedCollection wrappedCollection = list as IWrappedCollection", span="1581-1581"];
m28_769 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object underlyingList = wrappedCollection != null ? wrappedCollection.UnderlyingCollection : list", span="1582-1582"];
m28_770 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="1584-1584"];
m28_771 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="AddReference(reader, id, underlyingList)", span="1586-1586"];
m28_772 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="list.IsFixedSize", span="1590-1590"];
m28_773 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="1592-1592"];
m28_775 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserializing(reader, contract, underlyingList)", span="1596-1596"];
m28_776 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int initialDepth = reader.Depth", span="1598-1598"];
m28_777 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.ItemContract == null", span="1600-1600"];
m28_778 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.ItemContract = GetContractSafe(contract.CollectionItemType)", span="1602-1602"];
m28_779 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonConverter collectionItemConverter = GetConverter(contract.ItemContract, null, contract, containerProperty)", span="1605-1605"];
m28_782 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ReadForType(reader, contract.ItemContract, collectionItemConverter != null)", span="1614-1614"];
m28_783 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1616-1616"];
m28_788 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="value = DeserializeConvertable(collectionItemConverter, reader, contract.CollectionItemType, null)", span="1626-1626"];
m28_789 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="value = CreateValueInternal(reader, contract.CollectionItemType, contract.ItemContract, null, contract, containerProperty, null)", span="1630-1630"];
m28_790 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="list.Add(value)", span="1633-1633"];
m28_792 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonPosition errorPosition = reader.GetPosition(initialDepth)", span="1644-1644"];
m28_793 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(underlyingList, contract, errorPosition.Position, reader as IJsonLineInfo, reader.Path, ex)", span="1646-1646"];
m28_794 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, true, initialDepth)", span="1648-1648"];
m28_796 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Infinite loop detected from error handling.'', ex);", span="1654-1654"];
m28_801 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ThrowUnexpectedEndException(reader, contract, underlyingList, ''Unexpected end when deserializing array.'')", span="1670-1670"];
m28_802 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserialized(reader, contract, underlyingList)", span="1673-1673"];
m28_774 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="return underlyingList;", span="1593-1593"];
m28_803 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="return underlyingList;", span="1674-1674"];
m28_780 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int? previousErrorIndex = null", span="1607-1607"];
m28_787 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="collectionItemConverter != null && collectionItemConverter.CanRead", span="1624-1624"];
m28_781 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="bool finished = false", span="1609-1609"];
m28_795 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="previousErrorIndex != null && previousErrorIndex == errorPosition.Position", span="1650-1650"];
m28_799 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1666-1666"];
m28_800 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1668-1668"];
m28_784 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndArray", span="1618-1618"];
m28_786 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object value", span="1622-1622"];
m28_785 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="finished = true", span="1619-1619"];
m28_791 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="1642-1642"];
m28_797 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="previousErrorIndex = errorPosition.Position", span="1658-1658"];
m28_798 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw;", span="1663-1663"];
m28_804 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1579-1579"];
m28_416 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", span="816-816"];
m28_417 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="contract == null", span="818-818"];
m28_418 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not resolve type '{0}' to a JsonContract.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="820-820"];
m28_419 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonArrayContract arrayContract = contract as JsonArrayContract", span="823-823"];
m28_422 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="message = message.FormatWith(CultureInfo.InvariantCulture, objectType, GetExpectedDescription(contract))", span="828-828"];
m28_423 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, message);", span="830-830"];
m28_420 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="arrayContract == null", span="824-824"];
m28_424 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return arrayContract;", span="833-833"];
m28_421 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="string message = @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type '{0}' because the type requires a {1} to deserialize correctly.'' + Environment.NewLine +\r\n                                 @''To fix this error either change the JSON to a {1} or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.'' + Environment.NewLine", span="826-827"];
m28_425 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", span="816-816"];
m28_103 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="482-482"];
m28_43 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", span="125-125"];
m28_44 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs", label="type == null", span="127-127"];
m28_46 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs", label="return Serializer._contractResolver.ResolveContract(type);", span="132-132"];
m28_45 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs", label="return null;", span="129-129"];
m28_47 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", span="125-125"];
m28_287 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="584-584"];
m28_297 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="id = null", span="586-586"];
m28_299 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.StartObject", span="589-589"];
m28_300 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="JObject current = (JObject)reader.CurrentToken", span="591-591"];
m28_317 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Resolved object reference '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, newValue.GetType())), null)", span="625-625"];
m28_318 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="628-628"];
m28_325 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="ResolveTypeName(typeTokenReader, ref objectType, ref contract, member, containerContract, containerMember, qualifiedTypeName)", span="638-638"];
m28_329 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.ReadAndAssert()", span="645-645"];
m28_330 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.PropertyName", span="646-646"];
m28_331 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="(string)reader.Value == JsonTypeReflector.ValuePropertyName", span="648-648"];
m28_333 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.ReadAndAssert()", span="654-654"];
m28_334 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="655-655"];
m28_342 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="newValue = CreateList(listReader, objectType, contract, member, existingValue, id)", span="669-669"];
m28_343 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="671-671"];
m28_345 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.ReadAndAssert()", span="676-676"];
m28_298 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="newValue = null", span="587-587"];
m28_301 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="JToken refToken = current[JsonTypeReflector.RefPropertyName]", span="593-593"];
m28_320 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="JToken typeToken = current[JsonTypeReflector.TypePropertyName]", span="632-632"];
m28_326 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="JToken valueToken = current[JsonTypeReflector.ValuePropertyName]", span="640-640"];
m28_335 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="JToken idToken = current[JsonTypeReflector.IdPropertyName]", span="659-659"];
m28_338 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="JToken valuesToken = current[JsonTypeReflector.ArrayValuesPropertyName]", span="664-664"];
m28_302 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="refToken != null", span="594-594"];
m28_303 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="refToken.Type != JTokenType.String && refToken.Type != JTokenType.Null", span="596-596"];
m28_304 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(refToken, refToken.Path, ''JSON reference {0} property must have a string or null value.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName), null);", span="598-598"];
m28_305 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="JToken property = refToken.Parent", span="601-601"];
m28_311 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string reference = (string)refToken", span="612-612"];
m28_306 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="JToken additionalContent = null", span="602-602"];
m28_307 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="property.Next != null", span="603-603"];
m28_308 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="additionalContent = property.Next", span="605-605"];
m28_309 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="property.Previous != null", span="607-607"];
m28_310 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="additionalContent = property.Previous", span="609-609"];
m28_313 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="additionalContent != null", span="616-616"];
m28_314 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(additionalContent, additionalContent.Path, ''Additional content found in JSON reference object. A JSON reference object should only have a {0} property.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName), null);", span="618-618"];
m28_312 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reference != null", span="614-614"];
m28_315 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="newValue = Serializer.GetReferenceResolver().ResolveReference(this, reference)", span="621-621"];
m28_316 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="623-623"];
m28_319 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="return true;", span="629-629"];
m28_321 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="typeToken != null", span="633-633"];
m28_322 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string qualifiedTypeName = (string)typeToken", span="635-635"];
m28_323 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="JsonReader typeTokenReader = typeToken.CreateReader()", span="636-636"];
m28_324 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="typeTokenReader.ReadAndAssert()", span="637-637"];
m28_327 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="valueToken != null", span="641-641"];
m28_328 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label=true, span="643-643"];
m28_332 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="return false;", span="650-650"];
m28_336 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="idToken != null", span="660-660"];
m28_337 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="id = (string)idToken", span="662-662"];
m28_339 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="valuesToken != null", span="665-665"];
m28_340 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="JsonReader listReader = valuesToken.CreateReader()", span="667-667"];
m28_341 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="listReader.ReadAndAssert()", span="668-668"];
m28_344 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="return true;", span="672-672"];
m28_346 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="return false;", span="677-677"];
m28_347 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="584-584"];
m28_645 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserialized(object, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserialized(object, System.Runtime.Serialization.StreamingContext)", span="359-359"];
m28_1068 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="415-415"];
m28_522 [cluster="Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", span="44-44"];
m28_165 [cluster="System.Convert.FromBase64String(string)", file="JsonSerializerInternalReader.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m28_640 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1287-1287"];
m28_641 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1289-1289"];
m28_642 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Finished deserializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="1291-1291"];
m28_643 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="contract.InvokeOnDeserialized(value, Serializer._context)", span="1294-1294"];
m28_644 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1287-1287"];
m28_609 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", span="293-293"];
m28_32 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.MoveToContent()", span="1146-1146"];
m28_836 [cluster="System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", file="JsonSerializerInternalReader.cs", label="Entry System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", span="0-0"];
m28_493 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="728-728"];
m28_989 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", span="2505-2505"];
m28_1185 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label="presence == PropertyPresence.None || presence == PropertyPresence.Null", span="2507-2507"];
m28_1186 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label="Required resolvedRequired = property._required ?? contract.ItemRequired ?? Required.Default", span="2511-2511"];
m28_1187 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label=presence, span="2513-2513"];
m28_1190 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Required property '{0}' not found in JSON.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="2518-2518"];
m28_1191 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label="setDefaultValue && !property.Ignored", span="2521-2521"];
m28_1192 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract == null", span="2523-2523"];
m28_1193 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="2525-2525"];
m28_1194 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate) && property.Writable", span="2528-2528"];
m28_1195 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label="property.ValueProvider.SetValue(newObject, EnsureType(reader, property.GetResolvedDefaultValue(), CultureInfo.InvariantCulture, property.PropertyContract, property.PropertyType))", span="2530-2530"];
m28_1198 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Required property '{0}' expects a value but got null.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="2537-2537"];
m28_1200 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Required property '{0}' expects a non-null value.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="2541-2541"];
m28_1202 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(newObject, contract, property.PropertyName, reader as IJsonLineInfo, reader.Path, ex)", span="2548-2548"];
m28_1203 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, true, initialDepth)", span="2550-2550"];
m28_1189 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label="resolvedRequired == Required.AllowNull || resolvedRequired == Required.Always", span="2516-2516"];
m28_1197 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label="resolvedRequired == Required.Always", span="2535-2535"];
m28_1199 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label="resolvedRequired == Required.DisallowNull", span="2539-2539"];
m28_1188 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label="PropertyPresence.None", span="2515-2515"];
m28_1196 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label="PropertyPresence.Null", span="2534-2534"];
m28_1201 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label=Exception, span="2546-2546"];
m28_1204 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label="throw;", span="2554-2554"];
m28_1205 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", span="2505-2505"];
m28_462 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", span="1161-1161"];
m28_579 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="!contract.CanDeserialize", span="1164-1164"];
m28_580 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot create and populate list type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.CreatedType));", span="1166-1166"];
m28_581 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.OverrideCreator != null", span="1169-1169"];
m28_582 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.HasParameterizedCreator", span="1171-1171"];
m28_584 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="return contract.CreateTemporaryCollection();", span="1174-1174"];
m28_585 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="object list = contract.OverrideCreator()", span="1178-1178"];
m28_586 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.ShouldCreateWrapper", span="1180-1180"];
m28_587 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="list = contract.CreateWrapper(list)", span="1182-1182"];
m28_590 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.IsReadOnlyOrFixedSize", span="1189-1189"];
m28_592 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="IList list = contract.CreateTemporaryCollection()", span="1192-1192"];
m28_593 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.ShouldCreateWrapper", span="1194-1194"];
m28_594 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="list = contract.CreateWrapper(list)", span="1196-1196"];
m28_596 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.DefaultCreator != null && (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="1201-1201"];
m28_597 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="object list = contract.DefaultCreator()", span="1203-1203"];
m28_598 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.ShouldCreateWrapper", span="1205-1205"];
m28_599 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="list = contract.CreateWrapper(list)", span="1207-1207"];
m28_602 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.HasParameterizedCreatorInternal", span="1213-1213"];
m28_604 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="return contract.CreateTemporaryCollection();", span="1216-1216"];
m28_605 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="!contract.IsInstantiable", span="1220-1220"];
m28_606 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1222-1222"];
m28_607 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1225-1225"];
m28_583 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = true", span="1173-1173"];
m28_589 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="return (IList)list;", span="1186-1186"];
m28_588 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = false", span="1185-1185"];
m28_591 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = true", span="1191-1191"];
m28_595 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="return list;", span="1199-1199"];
m28_601 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="return (IList)list;", span="1211-1211"];
m28_600 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = false", span="1210-1210"];
m28_603 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = true", span="1215-1215"];
m28_608 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", span="1161-1161"];
m28_977 [cluster="Unk.ToArray", file="JsonSerializerInternalReader.cs", label="Entry Unk.ToArray", span=""];
m28_163 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="932-932"];
m28_470 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="targetType == null", span="934-934"];
m28_471 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return value;", span="936-936"];
m28_472 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="Type valueType = ReflectionUtils.GetObjectType(value)", span="939-939"];
m28_473 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="valueType != targetType", span="943-943"];
m28_474 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="value == null && contract.IsNullable", span="945-945"];
m28_476 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="contract.IsConvertable", span="952-952"];
m28_477 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract)contract", span="954-954"];
m28_478 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="contract.IsEnum", span="956-956"];
m28_479 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="value is string", span="958-958"];
m28_480 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return Enum.Parse(contract.NonNullableUnderlyingType, value.ToString(), true);", span="960-960"];
m28_482 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return Enum.ToObject(contract.NonNullableUnderlyingType, value);", span="964-964"];
m28_483 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="value is BigInteger", span="969-969"];
m28_484 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return ConvertUtils.FromBigInteger((BigInteger)value, contract.NonNullableUnderlyingType);", span="971-971"];
m28_485 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return Convert.ChangeType(value, contract.NonNullableUnderlyingType, culture);", span="976-976"];
m28_486 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return ConvertUtils.ConvertOrCast(value, culture, contract.NonNullableUnderlyingType);", span="979-979"];
m28_488 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Error converting value {0} to type '{1}'.''.FormatWith(CultureInfo.InvariantCulture, MiscellaneousUtils.FormatValueForPrint(value), targetType), ex);", span="983-983"];
m28_489 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return value;", span="987-987"];
m28_475 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return null;", span="947-947"];
m28_481 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="ConvertUtils.IsInteger(primitiveContract.TypeCode)", span="962-962"];
m28_487 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label=Exception, span="981-981"];
m28_490 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="932-932"];
m28_415 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="87-87"];
m28_164 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CoerceEmptyStringToNull(System.Type, Newtonsoft.Json.Serialization.JsonContract, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CoerceEmptyStringToNull(System.Type, Newtonsoft.Json.Serialization.JsonContract, string)", span="342-342"];
m28_167 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CoerceEmptyStringToNull(System.Type, Newtonsoft.Json.Serialization.JsonContract, string)", file="JsonSerializerInternalReader.cs", label="return string.IsNullOrEmpty(s) && objectType != null && objectType != typeof(string) && objectType != typeof(object) && contract != null && contract.IsNullable;", span="344-344"];
m28_168 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CoerceEmptyStringToNull(System.Type, Newtonsoft.Json.Serialization.JsonContract, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CoerceEmptyStringToNull(System.Type, Newtonsoft.Json.Serialization.JsonContract, string)", span="342-342"];
m28_28 [cluster="Unk.nameof", file="JsonSerializerInternalReader.cs", label="Entry Unk.nameof", span=""];
m28_757 [cluster="System.Collections.Generic.Stack<T>.Pop()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.Stack<T>.Pop()", span="0-0"];
m28_838 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonSerializerInternalReader.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m28_82 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", span="197-197"];
m28_83 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs", label="InternalSerializer == null", span="199-199"];
m28_84 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs", label="InternalSerializer = new JsonSerializerProxy(this)", span="201-201"];
m28_85 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs", label="return InternalSerializer;", span="204-204"];
m28_86 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", span="197-197"];
m28_78 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m28_497 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="619-619"];
m28_465 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", span="331-331"];
m28_525 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="JsonSerializerInternalReader.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m28_352 [cluster="Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="25-25"];
m28_161 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="409-409"];
m28_204 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string id", span="411-411"];
m28_205 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Type resolvedObjectType = objectType", span="412-412"];
m28_207 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader.ReadAndAssert()", span="417-417"];
m28_210 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JTokenReader tokenReader = reader as JTokenReader", span="422-422"];
m28_212 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JToken t = JToken.ReadFrom(reader)", span="425-425"];
m28_214 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="tokenReader.Culture = reader.Culture", span="427-427"];
m28_215 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="tokenReader.DateFormatString = reader.DateFormatString", span="428-428"];
m28_216 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="tokenReader.DateParseHandling = reader.DateParseHandling", span="429-429"];
m28_217 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="tokenReader.DateTimeZoneHandling = reader.DateTimeZoneHandling", span="430-430"];
m28_218 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="tokenReader.FloatParseHandling = reader.FloatParseHandling", span="431-431"];
m28_219 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="tokenReader.SupportMultipleContent = reader.SupportMultipleContent", span="432-432"];
m28_223 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="ReadMetadataPropertiesToken(tokenReader, ref resolvedObjectType, ref contract, member, containerContract, containerMember, existingValue, out newValue, out id)", span="441-441"];
m28_225 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader.ReadAndAssert()", span="448-448"];
m28_227 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="ReadMetadataProperties(reader, ref resolvedObjectType, ref contract, member, containerContract, containerMember, existingValue, out newValue, out id)", span="450-450"];
m28_229 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="HasNoDefinedType(contract)", span="456-456"];
m28_230 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateJObject(reader);", span="458-458"];
m28_231 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="contract.ContractType", span="461-461"];
m28_234 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonObjectContract objectContract = (JsonObjectContract)contract", span="466-466"];
m28_236 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="existingValue != null && (resolvedObjectType == objectType || resolvedObjectType.IsAssignableFrom(existingValue.GetType()))", span="469-469"];
m28_237 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="targetObject = existingValue", span="471-471"];
m28_238 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="targetObject = CreateNewObject(reader, objectContract, member, containerMember, id, out createdFromNonDefaultCreator)", span="475-475"];
m28_241 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return PopulateObject(targetObject, reader, objectContract, member, id);", span="484-484"];
m28_243 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract)contract", span="488-488"];
m28_244 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Serializer.MetadataPropertyHandling != MetadataPropertyHandling.Ignore\r\n                        && reader.TokenType == JsonToken.PropertyName\r\n                        && string.Equals(reader.Value.ToString(), JsonTypeReflector.ValuePropertyName, StringComparison.Ordinal)", span="490-492"];
m28_245 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader.ReadAndAssert()", span="494-494"];
m28_246 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.StartObject", span="498-498"];
m28_247 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing primitive value: '' + reader.TokenType);", span="500-500"];
m28_248 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="object value = CreateValueInternal(reader, resolvedObjectType, primitiveContract, member, null, null, existingValue)", span="503-503"];
m28_249 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader.ReadAndAssert()", span="505-505"];
m28_252 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)contract", span="512-512"];
m28_254 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="existingValue == null", span="515-515"];
m28_256 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="IDictionary dictionary = CreateNewDictionary(reader, dictionaryContract, out createdFromNonDefaultCreator)", span="518-518"];
m28_259 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="524-524"];
m28_260 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="contract.OnSerializingCallbacks.Count > 0", span="527-527"];
m28_261 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnSerializing on readonly dictionary, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="529-529"];
m28_262 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="contract.OnErrorCallbacks.Count > 0", span="532-532"];
m28_263 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnError on readonly list, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="534-534"];
m28_265 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot deserialize readonly or fixed size dictionary: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="539-539"];
m28_266 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="PopulateDictionary(dictionary, reader, dictionaryContract, member, id)", span="543-543"];
m28_273 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="targetDictionary = PopulateDictionary(dictionaryContract.ShouldCreateWrapper ? dictionaryContract.CreateWrapper(existingValue) : (IDictionary)existingValue, reader, dictionaryContract, member, id)", span="560-560"];
m28_276 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonDynamicContract dynamicContract = (JsonDynamicContract)contract", span="567-567"];
m28_277 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateDynamic(reader, dynamicContract, member, id);", span="568-568"];
m28_279 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonISerializableContract serializableContract = (JsonISerializableContract)contract", span="572-572"];
m28_280 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateISerializable(reader, serializableContract, member, id);", span="573-573"];
m28_282 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="message = message.FormatWith(CultureInfo.InvariantCulture, resolvedObjectType, GetExpectedDescription(contract))", span="579-579"];
m28_283 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, message);", span="581-581"];
m28_206 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Serializer.MetadataPropertyHandling == MetadataPropertyHandling.Ignore", span="414-414"];
m28_209 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Serializer.MetadataPropertyHandling == MetadataPropertyHandling.ReadAhead", span="420-420"];
m28_208 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="id = null", span="418-418"];
m28_211 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="tokenReader == null", span="423-423"];
m28_222 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="object newValue", span="440-440"];
m28_213 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="tokenReader = (JTokenReader)t.CreateReader()", span="426-426"];
m28_220 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="tokenReader.ReadAndAssert()", span="435-435"];
m28_221 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader = tokenReader", span="437-437"];
m28_224 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return newValue;", span="443-443"];
m28_258 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="id != null", span="522-522"];
m28_226 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="object newValue", span="449-449"];
m28_228 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return newValue;", span="452-452"];
m28_232 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Object", span="463-463"];
m28_242 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Primitive", span="486-486"];
m28_251 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Dictionary", span="510-510"];
m28_275 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Dynamic", span="566-566"];
m28_278 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Serializable", span="571-571"];
m28_233 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="bool createdFromNonDefaultCreator = false", span="465-465"];
m28_239 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label=createdFromNonDefaultCreator, span="479-479"];
m28_235 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="object targetObject", span="467-467"];
m28_240 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return targetObject;", span="481-481"];
m28_281 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string message = @''Cannot deserialize the current JSON object (e.g. {{''''name'''':''''value''''}}) into type '{0}' because the type requires a {1} to deserialize correctly.'' + Environment.NewLine +\r\n                             @''To fix this error either change the JSON to a {1} or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.'' + Environment.NewLine", span="577-578"];
m28_250 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return value;", span="506-506"];
m28_253 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="object targetDictionary", span="513-513"];
m28_264 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="!dictionaryContract.HasParameterizedCreatorInternal", span="537-537"];
m28_268 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="ObjectConstructor<object> creator = dictionaryContract.OverrideCreator ?? dictionaryContract.ParameterizedCreator", span="547-547"];
m28_255 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="bool createdFromNonDefaultCreator", span="517-517"];
m28_257 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label=createdFromNonDefaultCreator, span="520-520"];
m28_267 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label=createdFromNonDefaultCreator, span="545-545"];
m28_269 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return creator(dictionary);", span="549-549"];
m28_270 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="dictionary is IWrappedDictionary", span="551-551"];
m28_271 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return ((IWrappedDictionary)dictionary).UnderlyingDictionary;", span="553-553"];
m28_272 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="targetDictionary = dictionary", span="556-556"];
m28_274 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return targetDictionary;", span="563-563"];
m28_284 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="409-409"];
m28_353 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.Skip()", span="924-924"];
m28_702 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", span="1560-1560"];
m28_762 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, message);", span="1564-1564"];
m28_764 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(currentObject, contract, null, reader as IJsonLineInfo, reader.Path, ex)", span="1568-1568"];
m28_765 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, false, 0)", span="1570-1570"];
m28_763 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="1566-1566"];
m28_766 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs", label="throw;", span="1574-1574"];
m28_767 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", span="1560-1560"];
m28_499 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", span="990-990"];
m28_500 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="object currentValue", span="992-992"];
m28_504 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="CalculatePropertyDetails(property, ref propertyConverter, containerContract, containerProperty, reader, target, out useExistingValue, out currentValue, out propertyContract, out gottenCurrentValue)", span="997-997"];
m28_508 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="!gottenCurrentValue && target != null && property.Readable", span="1006-1006"];
m28_509 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="currentValue = property.ValueProvider.GetValue(target)", span="1008-1008"];
m28_510 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="value = DeserializeConvertable(propertyConverter, reader, property.PropertyType, currentValue)", span="1011-1011"];
m28_511 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="value = CreateValueInternal(reader, property.PropertyType, propertyContract, property, containerContract, containerProperty, (useExistingValue) ? currentValue : null)", span="1015-1015"];
m28_512 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="(!useExistingValue || value != currentValue)\r\n                && ShouldSetPropertyValue(property, value)", span="1021-1022"];
m28_513 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="property.ValueProvider.SetValue(target, value)", span="1024-1024"];
m28_514 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="property.SetIsSpecified != null", span="1026-1026"];
m28_516 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''IsSpecified for property '{0}' on {1} set to true.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType)), null)", span="1030-1030"];
m28_517 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="property.SetIsSpecified(target, true)", span="1033-1033"];
m28_501 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="bool useExistingValue", span="993-993"];
m28_502 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="JsonContract propertyContract", span="994-994"];
m28_503 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="bool gottenCurrentValue", span="995-995"];
m28_505 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="return false;", span="999-999"];
m28_506 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="object value", span="1002-1002"];
m28_507 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="propertyConverter != null && propertyConverter.CanRead", span="1004-1004"];
m28_519 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="return useExistingValue;", span="1040-1040"];
m28_515 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1028-1028"];
m28_518 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="return true;", span="1036-1036"];
m28_520 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", span="990-990"];
m28_701 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", span="452-452"];
m28_33 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m28_351 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="139-139"];
m28_36 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonSerializerInternalReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m28_354 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="770-770"];
m28_397 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="TypeNameHandling resolvedTypeNameHandling =\r\n                ((member != null) ? member.TypeNameHandling : null)\r\n                ?? ((containerContract != null) ? containerContract.ItemTypeNameHandling : null)\r\n                ?? ((containerMember != null) ? containerMember.ItemTypeNameHandling : null)\r\n                ?? Serializer._typeNameHandling", span="772-776"];
m28_399 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="TypeNameKey typeNameKey = ReflectionUtils.SplitFullyQualifiedTypeName(qualifiedTypeName)", span="780-780"];
m28_403 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Error resolving type specified in JSON '{0}'.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName), ex);", span="789-789"];
m28_405 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Type specified in JSON '{0}' was not resolved.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName));", span="794-794"];
m28_407 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Resolved type '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName, specifiedType)), null)", span="799-799"];
m28_408 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="objectType != null\r\n#if !(NET35 || NET20 || PORTABLE40)\r\n                    && objectType != typeof(IDynamicMetaObjectProvider)\r\n#endif\r\n                    && !objectType.IsAssignableFrom(specifiedType)", span="802-806"];
m28_409 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Type specified in JSON '{0}' is not compatible with '{1}'.''.FormatWith(CultureInfo.InvariantCulture, specifiedType.AssemblyQualifiedName, objectType.AssemblyQualifiedName));", span="808-808"];
m28_398 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="resolvedTypeNameHandling != TypeNameHandling.None", span="778-778"];
m28_400 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Type specifiedType", span="782-782"];
m28_401 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="specifiedType = Serializer._serializationBinder.BindToType(typeNameKey.AssemblyName, typeNameKey.TypeName)", span="785-785"];
m28_402 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="787-787"];
m28_404 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="specifiedType == null", span="792-792"];
m28_410 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="objectType = specifiedType", span="811-811"];
m28_411 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract = GetContractSafe(specifiedType)", span="812-812"];
m28_406 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="797-797"];
m28_412 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="770-770"];
m28_466 [cluster="System.Array.CreateInstance(System.Type, int)", file="JsonSerializerInternalReader.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m28_755 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m28_984 [cluster="System.Collections.ObjectModel.Collection<T>.IndexOf(T)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.ObjectModel.Collection<T>.IndexOf(T)", span="0-0"];
m28_976 [cluster="Unk.Select", file="JsonSerializerInternalReader.cs", label="Entry Unk.Select", span=""];
m28_34 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="268-268"];
m28_524 [cluster="Newtonsoft.Json.Serialization.IValueProvider.SetValue(object, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.SetValue(object, object)", span="37-37"];
m28_634 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1277-1277"];
m28_635 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1279-1279"];
m28_636 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Started deserializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="1281-1281"];
m28_637 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="contract.InvokeOnDeserializing(value, Serializer._context)", span="1284-1284"];
m28_638 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1277-1277"];
m28_203 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="1155-1155"];
m28_77 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409"];
m28_162 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", span="836-836"];
m28_426 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="object value", span="838-838"];
m28_427 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="HasNoDefinedType(contract)", span="840-840"];
m28_428 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="return CreateJToken(reader, contract);", span="842-842"];
m28_429 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="JsonArrayContract arrayContract = EnsureArrayContract(reader, objectType, contract)", span="845-845"];
m28_430 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="existingValue == null", span="847-847"];
m28_432 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="IList list = CreateNewList(reader, arrayContract, out createdFromNonDefaultCreator)", span="850-850"];
m28_434 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="854-854"];
m28_435 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot preserve reference to array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="856-856"];
m28_436 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="contract.OnSerializingCallbacks.Count > 0", span="859-859"];
m28_437 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnSerializing on an array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="861-861"];
m28_438 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="contract.OnErrorCallbacks.Count > 0", span="864-864"];
m28_439 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnError on an array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="866-866"];
m28_441 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot deserialize readonly or fixed size list: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="871-871"];
m28_443 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="PopulateList(list, reader, arrayContract, member, id)", span="877-877"];
m28_444 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="PopulateMultidimensionalArray(list, reader, arrayContract, member, id)", span="881-881"];
m28_447 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="list = CollectionUtils.ToMultidimensionalArray(list, arrayContract.CollectionItemType, contract.CreatedType.GetArrayRank())", span="888-888"];
m28_458 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot populate list type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.CreatedType));", span="914-914"];
m28_459 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="value = PopulateList((arrayContract.ShouldCreateWrapper) ? arrayContract.CreateWrapper(existingValue) : (IList)existingValue, reader, arrayContract, member, id)", span="917-917"];
m28_440 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="!arrayContract.HasParameterizedCreatorInternal && !arrayContract.IsArray", span="869-869"];
m28_442 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="!arrayContract.IsMultidimensionalArray", span="875-875"];
m28_446 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="arrayContract.IsMultidimensionalArray", span="886-886"];
m28_448 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="arrayContract.IsArray", span="890-890"];
m28_449 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="Array a = Array.CreateInstance(arrayContract.CollectionItemType, list.Count)", span="892-892"];
m28_452 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="ObjectConstructor<object> creator = arrayContract.OverrideCreator ?? arrayContract.ParameterizedCreator", span="898-898"];
m28_457 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="!arrayContract.CanDeserialize", span="912-912"];
m28_431 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="bool createdFromNonDefaultCreator", span="849-849"];
m28_433 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label=createdFromNonDefaultCreator, span="852-852"];
m28_445 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label=createdFromNonDefaultCreator, span="884-884"];
m28_450 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="list.CopyTo(a, 0)", span="893-893"];
m28_453 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="return creator(list);", span="900-900"];
m28_454 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="list is IWrappedCollection", span="903-903"];
m28_455 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="return ((IWrappedCollection)list).UnderlyingCollection;", span="905-905"];
m28_456 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="value = list", span="908-908"];
m28_451 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="list = a", span="894-894"];
m28_460 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="return value;", span="920-920"];
m28_461 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", span="836-836"];
m28_289 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", span="923-923"];
m28_468 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return (contract == null || contract.UnderlyingType == typeof(object) || contract.ContractType == JsonContractType.Linq\r\n#if !(NET35 || NET20 || PORTABLE40)\r\n                    || contract.UnderlyingType == typeof(IDynamicMetaObjectProvider)\r\n#endif\r\n                );", span="925-929"];
m28_469 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", span="923-923"];
m28_286 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1875-1875"];
m28_982 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m28_492 [cluster="System.Enum.Parse(System.Type, string, bool)", file="JsonSerializerInternalReader.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m28_79 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", span="108-108"];
m28_523 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", span="1139-1139"];
m28_571 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="property.NullValueHandling.GetValueOrDefault(Serializer._nullValueHandling) == NullValueHandling.Ignore && value == null", span="1141-1141"];
m28_573 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Ignore)\r\n                && !HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate)\r\n                && MiscellaneousUtils.ValueEquals(value, property.GetResolvedDefaultValue())", span="1146-1148"];
m28_575 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="!property.Writable", span="1153-1153"];
m28_572 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return false;", span="1143-1143"];
m28_574 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return false;", span="1150-1150"];
m28_576 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return false;", span="1155-1155"];
m28_577 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return true;", span="1158-1158"];
m28_578 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", span="1139-1139"];
m28_81 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", span="98-98"];
m28_292 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", span="1229-1229"];
m28_611 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.OverrideCreator != null", span="1231-1231"];
m28_612 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.HasParameterizedCreator", span="1233-1233"];
m28_614 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="return contract.CreateTemporaryDictionary();", span="1236-1236"];
m28_616 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="return (IDictionary)contract.OverrideCreator();", span="1241-1241"];
m28_617 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.IsReadOnlyOrFixedSize", span="1244-1244"];
m28_619 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="return contract.CreateTemporaryDictionary();", span="1247-1247"];
m28_620 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.DefaultCreator != null && (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="1249-1249"];
m28_621 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="object dictionary = contract.DefaultCreator()", span="1251-1251"];
m28_622 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.ShouldCreateWrapper", span="1253-1253"];
m28_623 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="dictionary = contract.CreateWrapper(dictionary)", span="1255-1255"];
m28_626 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.HasParameterizedCreatorInternal", span="1261-1261"];
m28_628 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="return contract.CreateTemporaryDictionary();", span="1264-1264"];
m28_629 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="!contract.IsInstantiable", span="1268-1268"];
m28_630 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1270-1270"];
m28_631 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a default constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1273-1273"];
m28_613 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = true", span="1235-1235"];
m28_615 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = false", span="1240-1240"];
m28_618 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = true", span="1246-1246"];
m28_625 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="return (IDictionary)dictionary;", span="1259-1259"];
m28_624 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = false", span="1258-1258"];
m28_627 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = true", span="1263-1263"];
m28_632 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", span="1229-1229"];
m28_981 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreatorPropertyContext.CreatorPropertyContext()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreatorPropertyContext.CreatorPropertyContext()", span="1879-1879"];
m28_291 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", span="2259-2259"];
m28_1076 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="object newObject = null", span="2261-2261"];
m28_1077 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="objectContract.OverrideCreator != null", span="2263-2263"];
m28_1078 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="objectContract.CreatorParameters.Count > 0", span="2265-2265"];
m28_1080 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="return CreateObjectUsingCreatorWithParameters(reader, objectContract, containerMember, objectContract.OverrideCreator, id);", span="2268-2268"];
m28_1081 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="newObject = objectContract.OverrideCreator(new object[0])", span="2271-2271"];
m28_1082 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="objectContract.DefaultCreator != null &&\r\n                     (!objectContract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor || objectContract.ParameterizedCreator == null)", span="2273-2274"];
m28_1083 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="newObject = objectContract.DefaultCreator()", span="2280-2280"];
m28_1084 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="objectContract.ParameterizedCreator != null", span="2282-2282"];
m28_1086 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="return CreateObjectUsingCreatorWithParameters(reader, objectContract, containerMember, objectContract.ParameterizedCreator, id);", span="2285-2285"];
m28_1088 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="!objectContract.IsInstantiable", span="2290-2290"];
m28_1089 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, objectContract.UnderlyingType));", span="2292-2292"];
m28_1090 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a constructor to use for type {0}. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute.''.FormatWith(CultureInfo.InvariantCulture, objectContract.UnderlyingType));", span="2295-2295"];
m28_1087 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="newObject == null", span="2288-2288"];
m28_1092 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="return newObject;", span="2299-2299"];
m28_1079 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = true", span="2267-2267"];
m28_1085 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = true", span="2284-2284"];
m28_1091 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = false", span="2298-2298"];
m28_1093 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", span="2259-2259"];
m28_290 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m28_1150 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="2308-2308"];
m28_990 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1900-1900"];
m28_994 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="p.Property != property", span="1909-1909"];
m28_993 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1909-1909"];
m28_996 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1954-1954"];
m28_991 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="p.PropertyName", span="1900-1900"];
m28_992 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1900-1900"];
m28_995 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1909-1909"];
m28_997 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="p.PropertyName", span="1954-1954"];
m28_998 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1954-1954"];
m28_1147 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="2308-2308"];
m28_1148 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label=m, span="2308-2308"];
m28_1149 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="2308-2308"];
m28_1151 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="PropertyPresence.None", span="2308-2308"];
m28_1152 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="2308-2308"];
m28_30 [cluster="object.GetType()", file="JsonSerializerInternalReader.cs", label="Entry object.GetType()", span="0-0"];
m28_285 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="2085-2085"];
m28_979 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", span="2121-2121"];
m28_1007 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="List<CreatorPropertyContext> propertyValues = new List<CreatorPropertyContext>()", span="2123-2123"];
m28_1009 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="2127-2127"];
m28_1011 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="string memberName = reader.Value.ToString()", span="2130-2130"];
m28_1012 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="CreatorPropertyContext creatorPropertyContext = new CreatorPropertyContext\r\n                        {\r\n                            Name = reader.Value.ToString(),\r\n                            ConstructorProperty = contract.CreatorParameters.GetClosestMatchProperty(memberName),\r\n                            Property = contract.Properties.GetClosestMatchProperty(memberName)\r\n                        }", span="2132-2137"];
m28_1018 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.MemberConverter, contract, containerProperty)", span="2148-2148"];
m28_1019 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="!ReadForType(reader, property.PropertyContract, propertyConverter != null)", span="2150-2150"];
m28_1020 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="2152-2152"];
m28_1022 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="creatorPropertyContext.Value = DeserializeConvertable(propertyConverter, reader, property.PropertyType, null)", span="2157-2157"];
m28_1023 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="creatorPropertyContext.Value = CreateValueInternal(reader, property.PropertyType, property.PropertyContract, property, contract, containerProperty, null)", span="2161-2161"];
m28_1024 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="2168-2168"];
m28_1025 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="2170-2170"];
m28_1027 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Could not find member '{0}' on {1}.''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType)), null)", span="2175-2175"];
m28_1029 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not find member '{0}' on object of type '{1}'''.FormatWith(CultureInfo.InvariantCulture, memberName, objectType.Name));", span="2180-2180"];
m28_1030 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="contract.ExtensionDataSetter != null", span="2184-2184"];
m28_1031 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="creatorPropertyContext.Value = ReadExtensionDataValue(contract, containerProperty, reader)", span="2186-2186"];
m28_1032 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="2190-2190"];
m28_1036 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="2199-2199"];
m28_1037 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="!exit && reader.Read()", span="2201-2201"];
m28_1039 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="ThrowUnexpectedEndException(reader, contract, null, ''Unexpected end when deserializing object.'')", span="2205-2205"];
m28_1008 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="bool exit = false", span="2124-2124"];
m28_1013 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="propertyValues.Add(creatorPropertyContext)", span="2138-2138"];
m28_1040 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="return propertyValues;", span="2208-2208"];
m28_1010 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="JsonToken.PropertyName", span="2129-2129"];
m28_1033 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="2193-2193"];
m28_1034 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndObject", span="2195-2195"];
m28_1014 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="JsonProperty property = creatorPropertyContext.ConstructorProperty ?? creatorPropertyContext.Property", span="2140-2140"];
m28_1015 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="property != null && !property.Ignored", span="2141-2141"];
m28_1016 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract == null", span="2143-2143"];
m28_1017 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="2145-2145"];
m28_1021 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="propertyConverter != null && propertyConverter.CanRead", span="2155-2155"];
m28_1026 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="2173-2173"];
m28_1028 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="Serializer._missingMemberHandling == MissingMemberHandling.Error", span="2178-2178"];
m28_1035 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="exit = true", span="2196-2196"];
m28_1038 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="!exit", span="2203-2203"];
m28_1041 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", span="2121-2121"];
m28_169 [cluster="string.IsNullOrEmpty(string)", file="JsonSerializerInternalReader.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m28_463 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1431-1431"];
m28_703 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int rank = contract.UnderlyingType.GetArrayRank()", span="1433-1433"];
m28_704 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="1435-1435"];
m28_705 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="AddReference(reader, id, list)", span="1437-1437"];
m28_706 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserializing(reader, contract, list)", span="1440-1440"];
m28_707 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonContract collectionItemContract = GetContractSafe(contract.CollectionItemType)", span="1442-1442"];
m28_708 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonConverter collectionItemConverter = GetConverter(collectionItemContract, null, contract, containerProperty)", span="1443-1443"];
m28_711 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="listStack.Push(list)", span="1447-1447"];
m28_712 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IList currentList = list", span="1448-1448"];
m28_714 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int initialDepth = reader.Depth", span="1453-1453"];
m28_716 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ReadForType(reader, collectionItemContract, collectionItemConverter != null)", span="1459-1459"];
m28_717 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1461-1461"];
m28_724 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="value = DeserializeConvertable(collectionItemConverter, reader, contract.CollectionItemType, null)", span="1473-1473"];
m28_725 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="value = CreateValueInternal(reader, contract.CollectionItemType, collectionItemContract, null, contract, containerProperty, null)", span="1477-1477"];
m28_728 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonPosition errorPosition = reader.GetPosition(initialDepth)", span="1491-1491"];
m28_729 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(list, contract, errorPosition.Position, reader as IJsonLineInfo, reader.Path, ex)", span="1493-1493"];
m28_730 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, true, initialDepth)", span="1495-1495"];
m28_732 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Infinite loop detected from error handling.'', ex);", span="1501-1501"];
m28_735 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.Read()", span="1516-1516"];
m28_736 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1518-1518"];
m28_748 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing multidimensional array: '' + reader.TokenType);", span="1541-1541"];
m28_751 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ThrowUnexpectedEndException(reader, contract, list, ''Unexpected end when deserializing array.'')", span="1553-1553"];
m28_752 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserialized(reader, contract, list)", span="1556-1556"];
m28_753 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="return list;", span="1557-1557"];
m28_715 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="listStack.Count == rank", span="1455-1455"];
m28_709 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int? previousErrorIndex = null", span="1445-1445"];
m28_723 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="collectionItemConverter != null && collectionItemConverter.CanRead", span="1471-1471"];
m28_710 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Stack<IList> listStack = new Stack<IList>()", span="1446-1446"];
m28_731 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="previousErrorIndex != null && previousErrorIndex == errorPosition.Position", span="1497-1497"];
m28_719 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="listStack.Pop()", span="1464-1464"];
m28_720 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="currentList = listStack.Peek()", span="1465-1465"];
m28_740 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="listStack.Push(newList)", span="1523-1523"];
m28_743 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="listStack.Pop()", span="1527-1527"];
m28_744 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="listStack.Count > 0", span="1529-1529"];
m28_745 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="currentList = listStack.Peek()", span="1531-1531"];
m28_713 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="bool finished = false", span="1450-1450"];
m28_739 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="currentList.Add(newList)", span="1522-1522"];
m28_749 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1549-1549"];
m28_750 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1551-1551"];
m28_718 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndArray", span="1463-1463"];
m28_722 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object value", span="1469-1469"];
m28_721 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="previousErrorIndex = null", span="1466-1466"];
m28_726 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="currentList.Add(value)", span="1480-1480"];
m28_727 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="1489-1489"];
m28_733 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="previousErrorIndex = errorPosition.Position", span="1505-1505"];
m28_734 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw;", span="1510-1510"];
m28_737 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.StartArray", span="1520-1520"];
m28_742 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndArray", span="1526-1526"];
m28_747 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="1538-1538"];
m28_738 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IList newList = new List<object>()", span="1521-1521"];
m28_741 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="currentList = newList", span="1524-1524"];
m28_746 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="finished = true", span="1535-1535"];
m28_754 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1431-1431"];
m28_76 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="276-276"];
m28_126 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="contract != null && contract.ContractType == JsonContractType.Linq", span="278-278"];
m28_127 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateJToken(reader, contract);", span="280-280"];
m28_128 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="285-285"];
m28_130 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateObject(reader, objectType, contract, member, containerContract, containerMember, existingValue);", span="290-290"];
m28_132 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateList(reader, objectType, contract, member, existingValue, null);", span="292-292"];
m28_138 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return EnsureType(reader, reader.Value, CultureInfo.InvariantCulture, contract, objectType);", span="298-298"];
m28_140 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string s = (string)reader.Value", span="300-300"];
m28_141 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="CoerceEmptyStringToNull(objectType, contract, s)", span="303-303"];
m28_143 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="objectType == typeof(byte[])", span="309-309"];
m28_145 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return EnsureType(reader, s, CultureInfo.InvariantCulture, contract, objectType);", span="314-314"];
m28_147 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string constructorName = reader.Value.ToString()", span="316-316"];
m28_148 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return EnsureType(reader, constructorName, CultureInfo.InvariantCulture, contract, objectType);", span="318-318"];
m28_151 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="objectType == typeof(DBNull)", span="322-322"];
m28_153 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return EnsureType(reader, reader.Value, CultureInfo.InvariantCulture, contract, objectType);", span="328-328"];
m28_155 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return new JRaw((string)reader.Value);", span="330-330"];
m28_157 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token while deserializing object: '' + reader.TokenType);", span="335-335"];
m28_158 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader.Read()", span="337-337"];
m28_159 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="339-339"];
m28_129 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.StartObject", span="289-289"];
m28_131 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.StartArray", span="291-291"];
m28_133 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Integer", span="293-293"];
m28_139 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.String", span="299-299"];
m28_146 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.StartConstructor", span="315-315"];
m28_149 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Null", span="319-319"];
m28_154 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Raw", span="329-329"];
m28_156 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="331-331"];
m28_134 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Float", span="294-294"];
m28_135 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Boolean", span="295-295"];
m28_136 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Date", span="296-296"];
m28_137 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Bytes", span="297-297"];
m28_144 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return Convert.FromBase64String(s);", span="311-311"];
m28_142 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return null;", span="305-305"];
m28_150 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Undefined", span="320-320"];
m28_152 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return DBNull.Value;", span="324-324"];
m28_160 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="276-276"];
m28_610 [cluster="System.Func<TResult>.Invoke()", file="JsonSerializerInternalReader.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m28_2 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="65-65"];
m28_3 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="ValidationUtils.ArgumentNotNull(target, nameof(target))", span="67-67"];
m28_4 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="Type objectType = target.GetType()", span="69-69"];
m28_6 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="!reader.MoveToContent()", span="73-73"];
m28_7 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''No JSON content found.'');", span="75-75"];
m28_8 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.StartArray", span="78-78"];
m28_11 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="PopulateList((arrayContract.ShouldCreateWrapper) ? arrayContract.CreateWrapper(target) : (IList)target, reader, arrayContract, null, null)", span="84-84"];
m28_12 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot populate JSON array onto type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="88-88"];
m28_13 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.StartObject", span="91-91"];
m28_14 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="reader.ReadAndAssert()", span="93-93"];
m28_16 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="Serializer.MetadataPropertyHandling != MetadataPropertyHandling.Ignore\r\n                    && reader.TokenType == JsonToken.PropertyName\r\n                    && string.Equals(reader.Value.ToString(), JsonTypeReflector.IdPropertyName, StringComparison.Ordinal)", span="96-98"];
m28_17 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="reader.ReadAndAssert()", span="100-100"];
m28_18 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="id = (reader.Value != null) ? reader.Value.ToString() : null", span="101-101"];
m28_19 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="reader.ReadAndAssert()", span="102-102"];
m28_22 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="PopulateDictionary((dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(target) : (IDictionary)target, reader, dictionaryContract, null, id)", span="108-108"];
m28_24 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="PopulateObject(target, reader, (JsonObjectContract)contract, null, id)", span="112-112"];
m28_25 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot populate JSON object onto type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="116-116"];
m28_26 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected initial token '{0}' when populating object. Expected JSON object or array.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="121-121"];
m28_5 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="JsonContract contract = Serializer._contractResolver.ResolveContract(objectType)", span="71-71"];
m28_9 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="contract.ContractType == JsonContractType.Array", span="80-80"];
m28_10 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="JsonArrayContract arrayContract = (JsonArrayContract)contract", span="82-82"];
m28_20 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="contract.ContractType == JsonContractType.Dictionary", span="105-105"];
m28_21 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)contract", span="107-107"];
m28_23 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="contract.ContractType == JsonContractType.Object", span="110-110"];
m28_15 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="string id = null", span="95-95"];
m28_27 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="65-65"];
m28_467 [cluster="System.Collections.ICollection.CopyTo(System.Array, int)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.ICollection.CopyTo(System.Array, int)", span="0-0"];
m28_558 [cluster="Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", span="58-58"];
m28_978 [cluster="Unk.Join", file="JsonSerializerInternalReader.cs", label="Entry Unk.Join", span=""];
m28_496 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m28_1160 [cluster="System.Predicate<T>.Invoke(T)", file="JsonSerializerInternalReader.cs", label="Entry System.Predicate<T>.Invoke(T)", span="0-0"];
m28_1072 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBoolean()", span="671-671"];
m28_761 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m28_988 [cluster="System.Nullable<T>.GetValueOrDefault()", file="JsonSerializerInternalReader.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m28_42 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="2302-2302"];
m28_1094 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserializing(reader, contract, newObject)", span="2304-2304"];
m28_1095 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Dictionary<JsonProperty, PropertyPresence> propertiesPresence = (contract.HasRequiredOrDefaultValueProperties || HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Populate))\r\n                ? contract.Properties.ToDictionary(m => m, m => PropertyPresence.None)\r\n                : null", span="2307-2309"];
m28_1096 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="2311-2311"];
m28_1097 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="AddReference(reader, id, newObject)", span="2313-2313"];
m28_1098 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int initialDepth = reader.Depth", span="2316-2316"];
m28_1100 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="2321-2321"];
m28_1102 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="string memberName = reader.Value.ToString()", span="2325-2325"];
m28_1103 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="CheckPropertyName(reader, memberName)", span="2327-2327"];
m28_1104 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonProperty property = contract.Properties.GetClosestMatchProperty(memberName)", span="2336-2336"];
m28_1107 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Could not find member '{0}' on {1}''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType)), null)", span="2342-2342"];
m28_1109 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not find member '{0}' on object of type '{1}'''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType.Name));", span="2347-2347"];
m28_1110 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="2350-2350"];
m28_1111 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="SetExtensionData(contract, member, reader, memberName, newObject)", span="2355-2355"];
m28_1112 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="property.Ignored || !ShouldDeserialize(reader, property, newObject)", span="2359-2359"];
m28_1113 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="2361-2361"];
m28_1114 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="SetPropertyPresence(reader, property, propertiesPresence)", span="2366-2366"];
m28_1115 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="SetExtensionData(contract, member, reader, memberName, newObject)", span="2367-2367"];
m28_1118 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.MemberConverter, contract, member)", span="2376-2376"];
m28_1119 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!ReadForType(reader, property.PropertyContract, propertyConverter != null)", span="2378-2378"];
m28_1120 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="2380-2380"];
m28_1121 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="SetPropertyPresence(reader, property, propertiesPresence)", span="2383-2383"];
m28_1122 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!SetPropertyValue(property, propertyConverter, contract, member, reader, newObject)", span="2386-2386"];
m28_1123 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="SetExtensionData(contract, member, reader, memberName, newObject)", span="2388-2388"];
m28_1125 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(newObject, contract, memberName, reader as IJsonLineInfo, reader.Path, ex)", span="2394-2394"];
m28_1126 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, true, initialDepth)", span="2396-2396"];
m28_1131 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="2412-2412"];
m28_1132 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished && reader.Read()", span="2414-2414"];
m28_1134 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ThrowUnexpectedEndException(reader, contract, newObject, ''Unexpected end when deserializing object.'')", span="2418-2418"];
m28_1139 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="EndProcessProperty(newObject, reader, contract, initialDepth, property, presence, true)", span="2428-2428"];
m28_1140 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserialized(reader, contract, newObject)", span="2432-2432"];
m28_1141 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="return newObject;", span="2433-2433"];
m28_1135 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="propertiesPresence != null", span="2421-2421"];
m28_1136 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=propertiesPresence, span="2423-2423"];
m28_1099 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="bool finished = false", span="2318-2318"];
m28_1101 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.PropertyName", span="2323-2323"];
m28_1128 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndObject", span="2405-2405"];
m28_1130 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="2408-2408"];
m28_1105 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="property == null", span="2338-2338"];
m28_1116 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract == null", span="2371-2371"];
m28_1117 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="2373-2373"];
m28_1106 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="2340-2340"];
m28_1108 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Serializer._missingMemberHandling == MissingMemberHandling.Error", span="2345-2345"];
m28_1124 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="2392-2392"];
m28_1127 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw;", span="2400-2400"];
m28_1129 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="finished = true", span="2406-2406"];
m28_1133 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="2416-2416"];
m28_1137 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonProperty property = propertyPresence.Key", span="2425-2425"];
m28_1138 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="PropertyPresence presence = propertyPresence.Value", span="2426-2426"];
m28_1142 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="2302-2302"];
m28_0 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="60-60"];
m28_1 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="60-60"];
m28_413 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", span="866-866"];
m28_101 [cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", span="58-58"];
m28_1069 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="732-732"];
m28_120 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", span="110-110"];
m28_894 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="125-125"];
m28_123 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", span="177-177"];
m28_1070 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDouble()", span="609-609"];
m28_1144 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", span="2470-2470"];
m28_1172 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="contract.ExtensionDataSetter != null", span="2472-2472"];
m28_1173 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="object value = ReadExtensionDataValue(contract, member, reader)", span="2476-2476"];
m28_1174 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="contract.ExtensionDataSetter(o, memberName, value)", span="2478-2478"];
m28_1176 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Error setting value in extension data for type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType), ex);", span="2482-2482"];
m28_1177 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="2487-2487"];
m28_1175 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label=Exception, span="2480-2480"];
m28_1178 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", span="2470-2470"];
m28_185 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="JsonSerializerInternalReader.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m28_122 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", span="2453-2453"];
m28_1162 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="Serializer.MetadataPropertyHandling == MetadataPropertyHandling.ReadAhead", span="2455-2455"];
m28_1163 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label=memberName, span="2457-2457"];
m28_1168 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="2463-2463"];
m28_1170 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="return false;", span="2467-2467"];
m28_1164 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="JsonTypeReflector.IdPropertyName", span="2459-2459"];
m28_1165 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="JsonTypeReflector.RefPropertyName", span="2460-2460"];
m28_1166 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="JsonTypeReflector.TypePropertyName", span="2461-2461"];
m28_1167 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="JsonTypeReflector.ArrayValuesPropertyName", span="2462-2462"];
m28_1169 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="return true;", span="2464-2464"];
m28_1171 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", span="2453-2453"];
m28_125 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="413-413"];
m28_170 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", span="347-347"];
m28_171 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="contract.ContractType", span="349-349"];
m28_172 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Object", span="351-351"];
m28_177 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Array", span="360-360"];
m28_179 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Primitive", span="362-362"];
m28_181 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonContractType.String", span="364-364"];
m28_183 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="throw new ArgumentOutOfRangeException();", span="367-367"];
m28_173 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Dictionary", span="352-352"];
m28_174 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Serializable", span="354-354"];
m28_175 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Dynamic", span="357-357"];
m28_176 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return @''JSON object (e.g. {''''name'''':''''value''''})'';", span="359-359"];
m28_178 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return @''JSON array (e.g. [1,2,3])'';", span="361-361"];
m28_180 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return @''JSON primitive value (e.g. string, number, boolean, null)'';", span="363-363"];
m28_182 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return @''JSON string value'';", span="365-365"];
m28_184 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", span="347-347"];
m28_1071 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="510-510"];
m28_295 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1678-1678"];
m28_805 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Type objectType = contract.UnderlyingType", span="1680-1680"];
m28_809 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, message);", span="1688-1688"];
m28_811 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Deserializing {0} using ISerializable constructor.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="1693-1693"];
m28_812 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="SerializationInfo serializationInfo = new SerializationInfo(contract.UnderlyingType, new JsonFormatterConverter(this, contract, member))", span="1696-1696"];
m28_814 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1701-1701"];
m28_816 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="string memberName = reader.Value.ToString()", span="1704-1704"];
m28_817 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="1705-1705"];
m28_818 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1707-1707"];
m28_819 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="serializationInfo.AddValue(memberName, JToken.ReadFrom(reader))", span="1709-1709"];
m28_823 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1717-1717"];
m28_824 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished && reader.Read()", span="1719-1719"];
m28_826 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ThrowUnexpectedEndException(reader, contract, serializationInfo, ''Unexpected end when deserializing object.'')", span="1723-1723"];
m28_827 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.ISerializableCreator == null", span="1726-1726"];
m28_828 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''ISerializable type '{0}' does not have a valid constructor. To correctly implement ISerializable a constructor that takes SerializationInfo and StreamingContext parameters should be present.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="1728-1728"];
m28_829 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object createdObject = contract.ISerializableCreator(serializationInfo, Serializer._context)", span="1731-1731"];
m28_830 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="1733-1733"];
m28_831 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="AddReference(reader, id, createdObject)", span="1735-1735"];
m28_832 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserializing(reader, contract, createdObject)", span="1739-1739"];
m28_833 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserialized(reader, contract, createdObject)", span="1740-1740"];
m28_806 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!JsonTypeReflector.FullyTrusted", span="1682-1682"];
m28_808 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="message = message.FormatWith(CultureInfo.InvariantCulture, objectType)", span="1686-1686"];
m28_807 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="string message = @''Type '{0}' implements ISerializable but cannot be deserialized using the ISerializable interface because the current application is not fully trusted and ISerializable can expose secure data.'' + Environment.NewLine +\r\n                                 @''To fix this error either change the environment to be fully trusted, change the application to not deserialize the type, add JsonObjectAttribute to the type or change the JsonSerializer setting ContractResolver to use a new DefaultContractResolver with IgnoreSerializableInterface set to true.'' + Environment.NewLine", span="1684-1685"];
m28_810 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1691-1691"];
m28_813 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="bool finished = false", span="1698-1698"];
m28_815 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.PropertyName", span="1703-1703"];
m28_820 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="1711-1711"];
m28_821 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndObject", span="1713-1713"];
m28_822 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="finished = true", span="1714-1714"];
m28_825 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1721-1721"];
m28_834 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="return createdObject;", span="1742-1742"];
m28_835 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1678-1678"];
m28_521 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", span="1043-1043"];
m28_526 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="currentValue = null", span="1045-1045"];
m28_530 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="property.Ignored", span="1050-1050"];
m28_532 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="JsonToken tokenType = reader.TokenType", span="1055-1055"];
m28_533 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract == null", span="1057-1057"];
m28_534 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1059-1059"];
m28_535 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="ObjectCreationHandling objectCreationHandling =\r\n                property.ObjectCreationHandling.GetValueOrDefault(Serializer._objectCreationHandling)", span="1062-1063"];
m28_536 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="(objectCreationHandling != ObjectCreationHandling.Replace)\r\n                && (tokenType == JsonToken.StartArray || tokenType == JsonToken.StartObject)\r\n                && property.Readable", span="1065-1067"];
m28_537 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="currentValue = property.ValueProvider.GetValue(target)", span="1069-1069"];
m28_542 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="!property.Writable && !useExistingValue", span="1080-1080"];
m28_544 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="property.NullValueHandling.GetValueOrDefault(Serializer._nullValueHandling) == NullValueHandling.Ignore && tokenType == JsonToken.Null", span="1086-1086"];
m28_546 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Ignore)\r\n                && !HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate)\r\n                && JsonTokenUtils.IsPrimitiveToken(tokenType)\r\n                && MiscellaneousUtils.ValueEquals(reader.Value, property.GetResolvedDefaultValue())", span="1092-1095"];
m28_549 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="propertyContract = property.PropertyContract", span="1102-1102"];
m28_551 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="propertyContract != property.PropertyContract", span="1108-1108"];
m28_552 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="propertyConverter = GetConverter(propertyContract, property.MemberConverter, containerContract, containerProperty)", span="1110-1110"];
m28_527 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="useExistingValue = false", span="1046-1046"];
m28_548 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="currentValue == null", span="1100-1100"];
m28_550 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="propertyContract = GetContractSafe(currentValue.GetType())", span="1106-1106"];
m28_528 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="propertyContract = null", span="1047-1047"];
m28_529 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="gottenCurrentValue = false", span="1048-1048"];
m28_531 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="return true;", span="1052-1052"];
m28_538 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="gottenCurrentValue = true", span="1070-1070"];
m28_539 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="currentValue != null", span="1072-1072"];
m28_540 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="propertyContract = GetContractSafe(currentValue.GetType())", span="1074-1074"];
m28_541 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="useExistingValue = (!propertyContract.IsReadOnlyOrFixedSize && !propertyContract.UnderlyingType.IsValueType())", span="1076-1076"];
m28_543 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="return true;", span="1082-1082"];
m28_545 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="return true;", span="1088-1088"];
m28_547 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="return true;", span="1097-1097"];
m28_553 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="return false;", span="1114-1114"];
m28_554 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", span="1043-1043"];
m28_700 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", span="379-379"];
m28_498 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", span="146-146"];
m28_639 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserializing(object, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserializing(object, System.Runtime.Serialization.StreamingContext)", span="348-348"];
m28_1075 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", span="838-838"];
m28_987 [cluster="Newtonsoft.Json.Serialization.ExtensionDataSetter.Invoke(object, string, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.ExtensionDataSetter.Invoke(object, string, object)", span="69-69"];
m28_349 [cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", span="1145-1145"];
m28_1073 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsString()", span="466-466"];
m28_962 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="DictionaryEntry entry = e.Entry", span="2054-2054"];
m28_896 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", span="1889-1889"];
m28_897 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="ValidationUtils.ArgumentNotNull(creator, nameof(creator))", span="1891-1891"];
m28_898 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="bool trackPresence = (contract.HasRequiredOrDefaultValueProperties || HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Populate))", span="1894-1894"];
m28_899 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="Type objectType = contract.UnderlyingType", span="1896-1896"];
m28_901 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="string parameters = string.Join('', '', contract.CreatorParameters.Select(p => p.PropertyName).ToArray())", span="1900-1900"];
m28_902 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Deserializing {0} using creator with parameters: {1}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType, parameters)), null)", span="1901-1901"];
m28_903 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="List<CreatorPropertyContext> propertyContexts = ResolvePropertyAndCreatorValues(contract, containerProperty, reader, objectType)", span="1904-1904"];
m28_905 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="contract.Properties", span="1907-1907"];
m28_908 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="object[] creatorParameterValues = new object[contract.CreatorParameters.Count]", span="1921-1921"];
m28_922 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="constructorProperty = contract.CreatorParameters.ForgivingCaseSensitiveFind(p => p.PropertyName, context.Property.UnderlyingName)", span="1954-1954"];
m28_929 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="context.Value = EnsureType(\r\n                                    reader,\r\n                                    constructorProperty.GetResolvedDefaultValue(),\r\n                                    CultureInfo.InvariantCulture,\r\n                                    constructorProperty.PropertyContract,\r\n                                    constructorProperty.PropertyType)", span="1972-1977"];
m28_930 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="int i = contract.CreatorParameters.IndexOf(constructorProperty)", span="1982-1982"];
m28_933 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="object createdObject = creator(creatorParameterValues)", span="1989-1989"];
m28_934 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="1991-1991"];
m28_935 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="AddReference(reader, id, createdObject)", span="1993-1993"];
m28_936 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="OnDeserializing(reader, contract, createdObject)", span="1996-1996"];
m28_965 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="contract.ExtensionDataSetter != null", span="2069-2069"];
m28_968 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="contract.ExtensionDataSetter(createdObject, propertyValue.Name, propertyValue.Value)", span="2075-2075"];
m28_972 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="EndProcessProperty(\r\n                        createdObject,\r\n                        reader,\r\n                        contract,\r\n                        reader.Depth,\r\n                        context.Property,\r\n                        context.Presence.GetValueOrDefault(),\r\n                        !context.Used)", span="2089-2096"];
m28_973 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="OnDeserialized(reader, contract, createdObject)", span="2100-2100"];
m28_904 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label=trackPresence, span="1905-1905"];
m28_910 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label=trackPresence, span="1926-1926"];
m28_924 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label=trackPresence, span="1961-1961"];
m28_969 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label=trackPresence, span="2080-2080"];
m28_900 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1898-1898"];
m28_906 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="propertyContexts.All(p => p.Property != property)", span="1909-1909"];
m28_907 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="propertyContexts.Add(new CreatorPropertyContext\r\n                        {\r\n                            Property = property,\r\n                            Name = property.PropertyName,\r\n                            Presence = PropertyPresence.None\r\n                        })", span="1911-1916"];
m28_909 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label=propertyContexts, span="1923-1923"];
m28_937 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label=propertyContexts, span="1999-1999"];
m28_966 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label=propertyContexts, span="2071-2071"];
m28_970 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label=propertyContexts, span="2082-2082"];
m28_931 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="creatorParameterValues[i] = context.Value", span="1983-1983"];
m28_911 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="context.Property != null && context.Presence == null", span="1928-1928"];
m28_912 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="object v = context.Value", span="1930-1930"];
m28_917 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="propertyPresence = CoerceEmptyStringToNull(context.Property.PropertyType, context.Property.PropertyContract, (string)v)\r\n                                ? PropertyPresence.Null\r\n                                : PropertyPresence.Value", span="1938-1940"];
m28_919 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="context.Presence = propertyPresence", span="1947-1947"];
m28_920 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="JsonProperty constructorProperty = context.ConstructorProperty", span="1951-1951"];
m28_921 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="constructorProperty == null && context.Property != null", span="1952-1952"];
m28_925 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="context.Presence == PropertyPresence.None || context.Presence == PropertyPresence.Null", span="1963-1963"];
m28_932 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="context.Used = true", span="1985-1985"];
m28_913 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="PropertyPresence propertyPresence", span="1931-1931"];
m28_914 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="v == null", span="1932-1932"];
m28_916 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="v is string", span="1936-1936"];
m28_915 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="propertyPresence = PropertyPresence.Null", span="1934-1934"];
m28_918 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="propertyPresence = PropertyPresence.Value", span="1944-1944"];
m28_923 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="constructorProperty != null && !constructorProperty.Ignored", span="1957-1957"];
m28_926 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="constructorProperty.PropertyContract == null", span="1965-1965"];
m28_927 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="constructorProperty.PropertyContract = GetContractSafe(constructorProperty.PropertyType)", span="1967-1967"];
m28_928 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="HasFlag(constructorProperty.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate)", span="1970-1970"];
m28_942 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="property.ValueProvider.SetValue(createdObject, value)", span="2014-2014"];
m28_948 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="object createdObjectCollection = property.ValueProvider.GetValue(createdObject)", span="2026-2026"];
m28_956 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="object createdObjectDictionary = property.ValueProvider.GetValue(createdObject)", span="2042-2042"];
m28_974 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="return createdObject;", span="2101-2101"];
m28_938 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="context.Used ||\r\n                    context.Property == null ||\r\n                    context.Property.Ignored ||\r\n                    context.Presence == PropertyPresence.None", span="2001-2004"];
m28_939 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="JsonProperty property = context.Property", span="2009-2009"];
m28_940 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="object value = context.Value", span="2010-2010"];
m28_943 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="context.Used = true", span="2015-2015"];
m28_964 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="context.Used = true", span="2065-2065"];
m28_941 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="ShouldSetPropertyValue(property, value)", span="2012-2012"];
m28_944 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="!property.Writable && value != null", span="2017-2017"];
m28_945 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="JsonContract propertyContract = Serializer._contractResolver.ResolveContract(property.PropertyType)", span="2020-2020"];
m28_951 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="IWrappedCollection newValues = propertyArrayContract.CreateWrapper(value)", span="2030-2030"];
m28_959 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="IDictionary newValues = (dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(value) : (IDictionary)value", span="2046-2046"];
m28_946 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="propertyContract.ContractType == JsonContractType.Array", span="2022-2022"];
m28_947 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="JsonArrayContract propertyArrayContract = (JsonArrayContract)propertyContract", span="2024-2024"];
m28_954 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="propertyContract.ContractType == JsonContractType.Dictionary", span="2038-2038"];
m28_955 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)propertyContract", span="2040-2040"];
m28_950 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="IWrappedCollection createdObjectCollectionWrapper = propertyArrayContract.CreateWrapper(createdObjectCollection)", span="2029-2029"];
m28_949 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="createdObjectCollection != null", span="2027-2027"];
m28_953 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="createdObjectCollectionWrapper.Add(newValue)", span="2034-2034"];
m28_952 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label=newValues, span="2032-2032"];
m28_958 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="IDictionary targetDictionary = (dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(createdObjectDictionary) : (IDictionary)createdObjectDictionary", span="2045-2045"];
m28_957 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="createdObjectDictionary != null", span="2043-2043"];
m28_963 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="targetDictionary[entry.Key] = entry.Value", span="2055-2055"];
m28_960 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="IDictionaryEnumerator e = newValues.GetEnumerator()", span="2049-2049"];
m28_961 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="e.MoveNext()", span="2052-2052"];
m28_967 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="!propertyValue.Used", span="2073-2073"];
m28_971 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="context.Property == null", span="2084-2084"];
m28_975 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", span="1889-1889"];
m28_121 [cluster="Newtonsoft.Json.JsonReader.ReadAndMoveToContent()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAndMoveToContent()", span="1141-1141"];
m28_288 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="680-680"];
m28_355 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="id = null", span="682-682"];
m28_357 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.PropertyName", span="685-685"];
m28_358 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string propertyName = reader.Value.ToString()", span="687-687"];
m28_361 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="propertyName = reader.Value.ToString()", span="697-697"];
m28_363 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.ReadAndAssert()", span="701-701"];
m28_364 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType != JsonToken.String && reader.TokenType != JsonToken.Null", span="702-702"];
m28_365 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''JSON reference {0} property must have a string or null value.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName));", span="704-704"];
m28_366 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string reference = (reader.Value != null) ? reader.Value.ToString() : null", span="707-707"];
m28_367 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.ReadAndAssert()", span="709-709"];
m28_369 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.PropertyName", span="713-713"];
m28_370 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Additional content found in JSON reference object. A JSON reference object should only have a {0} property.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName));", span="715-715"];
m28_373 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Resolved object reference '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, newValue.GetType())), null)", span="722-722"];
m28_377 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.ReadAndAssert()", span="734-734"];
m28_378 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string qualifiedTypeName = reader.Value.ToString()", span="735-735"];
m28_379 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="ResolveTypeName(reader, ref objectType, ref contract, member, containerContract, containerMember, qualifiedTypeName)", span="737-737"];
m28_380 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.ReadAndAssert()", span="739-739"];
m28_383 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.ReadAndAssert()", span="745-745"];
m28_384 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="id = (reader.Value != null) ? reader.Value.ToString() : null", span="747-747"];
m28_385 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.ReadAndAssert()", span="749-749"];
m28_388 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.ReadAndAssert()", span="754-754"];
m28_389 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="object list = CreateList(reader, objectType, contract, member, existingValue, id)", span="755-755"];
m28_390 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.ReadAndAssert()", span="756-756"];
m28_394 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="metadataProperty && reader.TokenType == JsonToken.PropertyName", span="764-764"];
m28_356 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="newValue = null", span="683-683"];
m28_395 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="return false;", span="767-767"];
m28_359 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="propertyName.Length > 0 && propertyName[0] == '$'", span="689-689"];
m28_360 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="bool metadataProperty", span="693-693"];
m28_362 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string.Equals(propertyName, JsonTypeReflector.RefPropertyName, StringComparison.Ordinal)", span="699-699"];
m28_376 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string.Equals(propertyName, JsonTypeReflector.TypePropertyName, StringComparison.Ordinal)", span="732-732"];
m28_382 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string.Equals(propertyName, JsonTypeReflector.IdPropertyName, StringComparison.Ordinal)", span="743-743"];
m28_387 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string.Equals(propertyName, JsonTypeReflector.ArrayValuesPropertyName, StringComparison.Ordinal)", span="752-752"];
m28_368 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reference != null", span="711-711"];
m28_371 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="newValue = Serializer.GetReferenceResolver().ResolveReference(this, reference)", span="718-718"];
m28_375 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="metadataProperty = true", span="729-729"];
m28_372 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="720-720"];
m28_374 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="return true;", span="725-725"];
m28_381 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="metadataProperty = true", span="741-741"];
m28_386 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="metadataProperty = true", span="750-750"];
m28_393 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="metadataProperty = false", span="762-762"];
m28_391 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="newValue = list", span="757-757"];
m28_392 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="return true;", span="758-758"];
m28_396 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="680-680"];
m28_102 [cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="85-85"];
m28_1145 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", span="2436-2436"];
m28_1153 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="property.ShouldDeserialize == null", span="2438-2438"];
m28_1155 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="bool shouldDeserialize = property.ShouldDeserialize(target)", span="2443-2443"];
m28_1157 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, reader.Path, ''ShouldDeserialize result for property '{0}' on {1}: {2}''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType, shouldDeserialize)), null)", span="2447-2447"];
m28_1154 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return true;", span="2440-2440"];
m28_1156 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="2445-2445"];
m28_1158 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return shouldDeserialize;", span="2450-2450"];
m28_1159 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", span="2436-2436"];
m28_464 [cluster="System.Type.GetArrayRank()", file="JsonSerializerInternalReader.cs", label="Entry System.Type.GetArrayRank()", span="0-0"];
m28_983 [cluster="System.Collections.Generic.IEnumerable<TSource>.ForgivingCaseSensitiveFind<TSource>(System.Func<TSource, string>, string)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ForgivingCaseSensitiveFind<TSource>(System.Func<TSource, string>, string)", span="124-124"];
m28_31 [cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="43-43"];
m28_41 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1297-1297"];
m28_646 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IWrappedDictionary wrappedDictionary = dictionary as IWrappedDictionary", span="1299-1299"];
m28_647 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object underlyingDictionary = wrappedDictionary != null ? wrappedDictionary.UnderlyingDictionary : dictionary", span="1300-1300"];
m28_648 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="1302-1302"];
m28_649 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="AddReference(reader, id, underlyingDictionary)", span="1304-1304"];
m28_650 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserializing(reader, contract, underlyingDictionary)", span="1307-1307"];
m28_651 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int initialDepth = reader.Depth", span="1309-1309"];
m28_652 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.KeyContract == null", span="1311-1311"];
m28_653 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.KeyContract = GetContractSafe(contract.DictionaryKeyType)", span="1313-1313"];
m28_654 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.ItemContract == null", span="1316-1316"];
m28_655 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.ItemContract = GetContractSafe(contract.DictionaryValueType)", span="1318-1318"];
m28_656 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonConverter dictionaryValueConverter = contract.ItemConverter ?? GetConverter(contract.ItemContract, null, contract, containerProperty)", span="1321-1321"];
m28_659 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1327-1327"];
m28_661 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object keyValue = reader.Value", span="1330-1330"];
m28_662 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="CheckPropertyName(reader, keyValue.ToString())", span="1331-1331"];
m28_667 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="DateTimeUtils.TryParseDateTime(keyValue.ToString(), reader.DateTimeZoneHandling, reader.DateFormatString, reader.Culture, out dt)", span="1347-1347"];
m28_669 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="keyValue = EnsureType(reader, keyValue, CultureInfo.InvariantCulture, contract.KeyContract, contract.DictionaryKeyType)", span="1353-1353"];
m28_673 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="DateTimeUtils.TryParseDateTimeOffset(keyValue.ToString(), reader.DateFormatString, reader.Culture, out dt)", span="1362-1362"];
m28_675 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="keyValue = EnsureType(reader, keyValue, CultureInfo.InvariantCulture, contract.KeyContract, contract.DictionaryKeyType)", span="1368-1368"];
m28_676 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="keyValue = EnsureType(reader, keyValue, CultureInfo.InvariantCulture, contract.KeyContract, contract.DictionaryKeyType)", span="1374-1374"];
m28_678 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not convert string '{0}' to dictionary key type '{1}'. Create a TypeConverter to convert from the string to the key type object.''.FormatWith(CultureInfo.InvariantCulture, reader.Value, contract.DictionaryKeyType), ex);", span="1380-1380"];
m28_679 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!ReadForType(reader, contract.ItemContract, dictionaryValueConverter != null)", span="1383-1383"];
m28_680 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="1385-1385"];
m28_683 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="itemValue = DeserializeConvertable(dictionaryValueConverter, reader, contract.DictionaryValueType, null)", span="1391-1391"];
m28_684 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="itemValue = CreateValueInternal(reader, contract.DictionaryValueType, contract.ItemContract, null, contract, containerProperty, null)", span="1395-1395"];
m28_685 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="dictionary[keyValue] = itemValue", span="1398-1398"];
m28_687 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(underlyingDictionary, contract, keyValue, reader as IJsonLineInfo, reader.Path, ex)", span="1402-1402"];
m28_688 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, true, initialDepth)", span="1404-1404"];
m28_693 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1418-1418"];
m28_694 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished && reader.Read()", span="1420-1420"];
m28_696 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ThrowUnexpectedEndException(reader, contract, underlyingDictionary, ''Unexpected end when deserializing object.'')", span="1424-1424"];
m28_697 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserialized(reader, contract, underlyingDictionary)", span="1427-1427"];
m28_698 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="return underlyingDictionary;", span="1428-1428"];
m28_682 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="dictionaryValueConverter != null && dictionaryValueConverter.CanRead", span="1389-1389"];
m28_658 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="bool finished = false", span="1324-1324"];
m28_663 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=keyTypeCode, span="1341-1341"];
m28_660 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.PropertyName", span="1329-1329"];
m28_690 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="1412-1412"];
m28_691 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndObject", span="1414-1414"];
m28_664 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="PrimitiveTypeCode.DateTime", span="1343-1343"];
m28_670 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="PrimitiveTypeCode.DateTimeOffset", span="1358-1358"];
m28_665 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="PrimitiveTypeCode.DateTimeNullable", span="1344-1344"];
m28_666 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="DateTime dt", span="1346-1346"];
m28_668 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="keyValue = dt", span="1349-1349"];
m28_671 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="PrimitiveTypeCode.DateTimeOffsetNullable", span="1359-1359"];
m28_672 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="DateTimeOffset dt", span="1361-1361"];
m28_674 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="keyValue = dt", span="1364-1364"];
m28_677 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="1378-1378"];
m28_681 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object itemValue", span="1388-1388"];
m28_686 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="1400-1400"];
m28_689 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw;", span="1408-1408"];
m28_692 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="finished = true", span="1415-1415"];
m28_695 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1422-1422"];
m28_699 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1297-1297"];
m28_759 [cluster="System.Collections.IList.Add(object)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.IList.Add(object)", span="0-0"];
m28_1161 [cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="JsonSerializerInternalReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57"];
m28_633 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", span="232-232"];
m28_1223 [file="JsonSerializerInternalReader.cs", label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", span=""];
m28_1224 [file="JsonSerializerInternalReader.cs", label=property, span=""];
m29_367 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="818-818"];
m29_409 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool isReference = ResolveIsReference(contract, member, containerContract, containerProperty) ?? HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Arrays)", span="820-820"];
m29_410 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference = (isReference && (member == null || member.Writable || HasCreatorParameter(containerContract, member)))", span="822-822"];
m29_411 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool includeTypeDetails = ShouldWriteType(TypeNameHandling.Arrays, contract, member, containerContract, containerProperty)", span="824-824"];
m29_414 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartObject()", span="829-829"];
m29_416 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteReferenceIdProperty(writer, contract.UnderlyingType, values)", span="833-833"];
m29_418 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteTypeProperty(writer, values.GetType())", span="837-837"];
m29_419 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(JsonTypeReflector.ArrayValuesPropertyName, false)", span="839-839"];
m29_420 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="contract.ItemContract == null", span="842-842"];
m29_421 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="contract.ItemContract = Serializer._contractResolver.ResolveContract(contract.CollectionItemType ?? typeof(object))", span="844-844"];
m29_412 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool writeMetadataObject = isReference || includeTypeDetails", span="825-825"];
m29_415 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=isReference, span="831-831"];
m29_417 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=includeTypeDetails, span="835-835"];
m29_413 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=writeMetadataObject, span="827-827"];
m29_422 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return writeMetadataObject;", span="847-847"];
m29_423 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="818-818"];
m29_541 [cluster="System.Collections.IDictionary.GetEnumerator()", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.IDictionary.GetEnumerator()", span="0-0"];
m29_92 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="219-219"];
m29_204 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="JsonSerializerInternalWriter.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m29_137 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", span="39-39"];
m29_138 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="289-289"];
m29_139 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="value == null || contract.ContractType == JsonContractType.Primitive || contract.ContractType == JsonContractType.String", span="291-291"];
m29_142 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="property != null", span="298-298"];
m29_143 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="referenceLoopHandling = property.ReferenceLoopHandling", span="300-300"];
m29_144 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="referenceLoopHandling == null && containerProperty != null", span="303-303"];
m29_145 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="referenceLoopHandling = containerProperty.ItemReferenceLoopHandling", span="305-305"];
m29_146 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="referenceLoopHandling == null && containerContract != null", span="308-308"];
m29_147 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="referenceLoopHandling = containerContract.ItemReferenceLoopHandling", span="310-310"];
m29_148 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool exists = (Serializer._equalityComparer != null)\r\n                ? _serializeStack.Contains(value, Serializer._equalityComparer)\r\n                : _serializeStack.Contains(value)", span="313-315"];
m29_151 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="property != null", span="320-320"];
m29_152 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="message += '' for property '{0}'''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName)", span="322-322"];
m29_153 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="message += '' with type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, value.GetType())", span="324-324"];
m29_156 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="throw JsonSerializationException.Create(null, writer.ContainerPath, message, null);", span="329-329"];
m29_159 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, message + ''. Skipping serializing self referenced value.''), null)", span="333-333"];
m29_163 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, message + ''. Serializing self referenced value.''), null)", span="340-340"];
m29_140 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return true;", span="293-293"];
m29_141 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="ReferenceLoopHandling? referenceLoopHandling = null", span="296-296"];
m29_154 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="referenceLoopHandling.GetValueOrDefault(Serializer._referenceLoopHandling)", span="326-326"];
m29_149 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=exists, span="317-317"];
m29_150 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="string message = ''Self referencing loop detected''", span="319-319"];
m29_165 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return true;", span="347-347"];
m29_155 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="ReferenceLoopHandling.Error", span="328-328"];
m29_157 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="ReferenceLoopHandling.Ignore", span="330-330"];
m29_161 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="ReferenceLoopHandling.Serialize", span="337-337"];
m29_158 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="331-331"];
m29_160 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return false;", span="336-336"];
m29_162 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="338-338"];
m29_164 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return true;", span="343-343"];
m29_166 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="289-289"];
m29_302 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="594-594"];
m29_304 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonObjectContract objectContract = contract as JsonObjectContract", span="596-596"];
m29_307 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return objectContract.CreatorParameters.Contains(property.PropertyName);", span="602-602"];
m29_305 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="objectContract == null", span="597-597"];
m29_306 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return false;", span="599-599"];
m29_308 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasCreatorParameter(Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="594-594"];
m29_446 [cluster="System.Runtime.Serialization.FormatterConverter.FormatterConverter()", file="JsonSerializerInternalWriter.cs", label="Entry System.Runtime.Serialization.FormatterConverter.FormatterConverter()", span="0-0"];
m29_190 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", span="379-379"];
m29_191 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="TypeConverter converter = ConvertUtils.GetConverter(type)", span="382-382"];
m29_194 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="s = converter.ConvertToInvariantString(value)", span="391-391"];
m29_192 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="converter != null\r\n                && !(converter is ComponentConverter)\r\n                && converter.GetType() != typeof(TypeConverter)", span="385-387"];
m29_193 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="converter.CanConvertTo(typeof(string))", span="389-389"];
m29_195 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="return true;", span="392-392"];
m29_199 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="s = null", span="411-411"];
m29_198 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="return true;", span="408-408"];
m29_200 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="return false;", span="412-412"];
m29_201 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", span="379-379"];
m29_170 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92"];
m29_492 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="1085-1085"];
m29_91 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", span="415-415"];
m29_205 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="OnSerializing(writer, contract, value)", span="417-417"];
m29_207 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="TryConvertToString(value, contract.UnderlyingType, out s)", span="420-420"];
m29_208 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="writer.WriteValue(s)", span="421-421"];
m29_209 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="OnSerialized(writer, contract, value)", span="423-423"];
m29_206 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="string s", span="419-419"];
m29_210 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", span="415-415"];
m29_447 [cluster="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerInternalWriter.cs", label="Entry System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="0-0"];
m29_136 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="172-172"];
m29_88 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="446-446"];
m29_223 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerializing(writer, contract, value)", span="448-448"];
m29_224 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.Add(value)", span="450-450"];
m29_225 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteObjectStart(writer, value, contract, member, collectionContract, containerProperty)", span="452-452"];
m29_226 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="int initialDepth = writer.Top", span="454-454"];
m29_228 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="index < contract.Properties.Count", span="456-456"];
m29_229 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonProperty property = contract.Properties[index]", span="458-458"];
m29_232 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="!CalculatePropertyValues(writer, value, contract, member, property, out memberContract, out memberValue)", span="464-464"];
m29_233 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="property.WritePropertyName(writer)", span="469-469"];
m29_234 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeValue(writer, memberValue, memberContract, property, contract, member)", span="470-470"];
m29_236 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="IsErrorHandled(value, contract, property.PropertyName, null, writer.ContainerPath, ex)", span="474-474"];
m29_237 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="HandleError(writer, initialDepth)", span="476-476"];
m29_255 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="522-522"];
m29_257 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerialized(writer, contract, value)", span="526-526"];
m29_227 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="int index = 0", span="456-456"];
m29_239 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="index++", span="456-456"];
m29_230 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="object memberValue", span="461-461"];
m29_231 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContract memberContract", span="462-462"];
m29_235 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=Exception, span="472-472"];
m29_238 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="throw;", span="480-480"];
m29_256 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="524-524"];
m29_258 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="446-446"];
m29_134 [cluster="System.Nullable<T>.GetValueOrDefault(T)", file="JsonSerializerInternalWriter.cs", label="Entry System.Nullable<T>.GetValueOrDefault(T)", span="0-0"];
m29_586 [cluster="object.ToString()", file="JsonSerializerInternalWriter.cs", label="Entry object.ToString()", span="0-0"];
m29_483 [cluster="System.Dynamic.IDynamicMetaObjectProvider.GetDynamicMemberNames()", file="JsonSerializerInternalWriter.cs", label="Entry System.Dynamic.IDynamicMetaObjectProvider.GetDynamicMemberNames()", span="141-141"];
m29_583 [cluster="double.ToString(string, System.IFormatProvider)", file="JsonSerializerInternalWriter.cs", label="Entry double.ToString(string, System.IFormatProvider)", span="0-0"];
m29_189 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(object, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(object, object)", span="46-46"];
m29_542 [cluster="System.Collections.IEnumerator.MoveNext()", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m29_379 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", span="761-761"];
m29_380 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="int dimension = indices.Length", span="763-763"];
m29_384 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="newIndices[i] = indices[i]", span="767-767"];
m29_386 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartArray()", span="770-770"];
m29_387 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="int i = values.GetLowerBound(dimension)", span="772-772"];
m29_388 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="i <= values.GetUpperBound(dimension)", span="772-772"];
m29_390 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="bool isTopLevel = (newIndices.Length == values.Rank)", span="775-775"];
m29_392 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="object value = values.GetValue(newIndices)", span="779-779"];
m29_393 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="783-783"];
m29_394 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="ShouldWriteReference(value, null, valueContract, contract, member)", span="785-785"];
m29_395 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="WriteReference(writer, value)", span="787-787"];
m29_396 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="791-791"];
m29_397 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="SerializeValue(writer, value, valueContract, null, contract, member)", span="793-793"];
m29_399 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="IsErrorHandled(values, contract, i, null, writer.ContainerPath, ex)", span="799-799"];
m29_400 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="HandleError(writer, initialDepth + 1)", span="801-801"];
m29_402 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="SerializeMultidimensionalArray(writer, values, contract, member, initialDepth + 1, newIndices)", span="811-811"];
m29_404 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndArray()", span="815-815"];
m29_381 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="int[] newIndices = new int[dimension + 1]", span="764-764"];
m29_383 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="i < dimension", span="765-765"];
m29_389 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="newIndices[dimension] = i", span="774-774"];
m29_382 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="int i = 0", span="765-765"];
m29_385 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="i++", span="765-765"];
m29_403 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="i++", span="772-772"];
m29_391 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label=isTopLevel, span="777-777"];
m29_398 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label=Exception, span="797-797"];
m29_401 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="throw;", span="805-805"];
m29_405 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", span="761-761"];
m29_2 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="59-59"];
m29_3 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalWriter.cs", label="jsonWriter == null", span="61-61"];
m29_4 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalWriter.cs", label="throw new ArgumentNullException(nameof(jsonWriter));", span="63-63"];
m29_5 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalWriter.cs", label="_rootType = objectType", span="66-66"];
m29_7 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalWriter.cs", label="JsonContract contract = GetContractSafe(value)", span="69-69"];
m29_8 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteReference(value, null, contract, null, null)", span="73-73"];
m29_9 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalWriter.cs", label="WriteReference(jsonWriter, value)", span="75-75"];
m29_10 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalWriter.cs", label="SerializeValue(jsonWriter, value, contract, null, null, null)", span="79-79"];
m29_12 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalWriter.cs", label="IsErrorHandled(null, contract, null, null, jsonWriter.Path, ex)", span="84-84"];
m29_13 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalWriter.cs", label="HandleError(jsonWriter, 0)", span="86-86"];
m29_6 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalWriter.cs", label="_rootLevel = _serializeStack.Count + 1", span="67-67"];
m29_11 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalWriter.cs", label=Exception, span="82-82"];
m29_14 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalWriter.cs", label="ClearErrorContext()", span="93-93"];
m29_15 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalWriter.cs", label="throw;", span="94-94"];
m29_16 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="59-59"];
m29_263 [cluster="Newtonsoft.Json.Serialization.ExtensionDataGetter.Invoke(object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.ExtensionDataGetter.Invoke(object)", span="75-75"];
m29_50 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="1001-1001"];
m29_493 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="TypeNameHandling resolvedTypeNameHandling =\r\n                ((member != null) ? member.TypeNameHandling : null)\r\n                ?? ((containerProperty != null) ? containerProperty.ItemTypeNameHandling : null)\r\n                ?? ((containerContract != null) ? containerContract.ItemTypeNameHandling : null)\r\n                ?? Serializer._typeNameHandling", span="1003-1007"];
m29_494 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="HasFlag(resolvedTypeNameHandling, typeNameHandlingFlag)", span="1009-1009"];
m29_497 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="member != null", span="1017-1017"];
m29_498 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="contract.NonNullableUnderlyingType != member.PropertyContract.CreatedType", span="1019-1019"];
m29_500 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="containerContract != null", span="1024-1024"];
m29_501 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="containerContract.ItemContract == null || contract.NonNullableUnderlyingType != containerContract.ItemContract.CreatedType", span="1026-1026"];
m29_505 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="contract.NonNullableUnderlyingType != rootContract.CreatedType", span="1035-1035"];
m29_496 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="HasFlag(resolvedTypeNameHandling, TypeNameHandling.Auto)", span="1015-1015"];
m29_495 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return true;", span="1011-1011"];
m29_507 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return false;", span="1042-1042"];
m29_499 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return true;", span="1021-1021"];
m29_503 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_rootType != null && _serializeStack.Count == _rootLevel", span="1031-1031"];
m29_502 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return true;", span="1028-1028"];
m29_504 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContract rootContract = Serializer._contractResolver.ResolveContract(_rootType)", span="1033-1033"];
m29_506 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return true;", span="1037-1037"];
m29_508 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="1001-1001"];
m29_581 [cluster="System.IO.StringWriter.ToString()", file="JsonSerializerInternalWriter.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m29_0 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", span="54-54"];
m29_1 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", span="54-54"];
m29_434 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContract valueContract = GetContractSafe(serializationEntry.Value)", span="875-875"];
m29_95 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="854-854"];
m29_424 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="!JsonTypeReflector.FullyTrusted", span="856-856"];
m29_426 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="message = message.FormatWith(CultureInfo.InvariantCulture, value.GetType())", span="860-860"];
m29_427 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="throw JsonSerializationException.Create(null, writer.ContainerPath, message, null);", span="862-862"];
m29_428 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerializing(writer, contract, value)", span="865-865"];
m29_429 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.Add(value)", span="866-866"];
m29_430 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteObjectStart(writer, value, contract, member, collectionContract, containerProperty)", span="868-868"];
m29_431 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializationInfo serializationInfo = new SerializationInfo(contract.UnderlyingType, new FormatterConverter())", span="870-870"];
m29_432 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="value.GetObjectData(serializationInfo, Serializer._context)", span="871-871"];
m29_435 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteReference(serializationEntry.Value, null, valueContract, contract, member)", span="877-877"];
m29_436 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(serializationEntry.Name)", span="879-879"];
m29_437 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteReference(writer, serializationEntry.Value)", span="880-880"];
m29_438 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="CheckForCircularReference(writer, serializationEntry.Value, null, valueContract, contract, member)", span="882-882"];
m29_439 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(serializationEntry.Name)", span="884-884"];
m29_440 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeValue(writer, serializationEntry.Value, valueContract, null, contract, member)", span="885-885"];
m29_441 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="889-889"];
m29_443 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerialized(writer, contract, value)", span="892-892"];
m29_425 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="string message = @''Type '{0}' implements ISerializable but cannot be serialized using the ISerializable interface because the current application is not fully trusted and ISerializable can expose secure data.'' + Environment.NewLine +\r\n                                 @''To fix this error either change the environment to be fully trusted, change the application to not deserialize the type, add JsonObjectAttribute to the type or change the JsonSerializer setting ContractResolver to use a new DefaultContractResolver with IgnoreSerializableInterface set to true.'' + Environment.NewLine", span="858-859"];
m29_433 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=serializationInfo, span="873-873"];
m29_442 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="891-891"];
m29_444 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="854-854"];
m29_182 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonSerializerInternalWriter.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m29_24 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", span="1193-1193"];
m29_587 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonSerializerInternalWriter.cs", label="ClearErrorContext()", span="1195-1195"];
m29_588 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonSerializerInternalWriter.cs", label="writer.WriteState == WriteState.Property", span="1197-1197"];
m29_589 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonSerializerInternalWriter.cs", label="writer.WriteNull()", span="1199-1199"];
m29_590 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonSerializerInternalWriter.cs", label="writer.Top > initialDepth", span="1202-1202"];
m29_591 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEnd()", span="1204-1204"];
m29_592 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", span="1193-1193"];
m29_22 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="147-147"];
m29_56 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="value == null", span="149-149"];
m29_57 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteNull()", span="151-151"];
m29_59 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonConverter converter =\r\n                ((member != null) ? member.Converter : null) ??\r\n                ((containerProperty != null) ? containerProperty.ItemConverter : null) ??\r\n                ((containerContract != null) ? containerContract.ItemConverter : null) ??\r\n                valueContract.Converter ??\r\n                Serializer.GetMatchingConverter(valueContract.UnderlyingType) ??\r\n                valueContract.InternalConverter", span="155-161"];
m29_61 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeConvertable(writer, converter, value, valueContract, containerContract, containerProperty)", span="165-165"];
m29_63 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="valueContract.ContractType", span="169-169"];
m29_65 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeObject(writer, value, (JsonObjectContract)valueContract, member, containerContract, containerProperty)", span="172-172"];
m29_67 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonArrayContract arrayContract = (JsonArrayContract)valueContract", span="175-175"];
m29_69 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeList(writer, (IEnumerable)value, arrayContract, member, containerContract, containerProperty)", span="178-178"];
m29_70 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeMultidimensionalArray(writer, (Array)value, arrayContract, member, containerContract, containerProperty)", span="182-182"];
m29_72 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializePrimitive(writer, value, (JsonPrimitiveContract)valueContract, member, containerContract, containerProperty)", span="186-186"];
m29_74 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeString(writer, value, (JsonStringContract)valueContract)", span="189-189"];
m29_76 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)valueContract", span="192-192"];
m29_77 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeDictionary(writer, (value is IDictionary) ? (IDictionary)value : dictionaryContract.CreateWrapper(value), dictionaryContract, member, containerContract, containerProperty)", span="193-193"];
m29_79 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeDynamic(writer, (IDynamicMetaObjectProvider)value, (JsonDynamicContract)valueContract, member, containerContract, containerProperty)", span="197-197"];
m29_81 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeISerializable(writer, (ISerializable)value, (JsonISerializableContract)valueContract, member, containerContract, containerProperty)", span="202-202"];
m29_83 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="((JToken)value).WriteTo(writer, Serializer.Converters.ToArray())", span="206-206"];
m29_58 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return;", span="152-152"];
m29_60 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="converter != null && converter.CanWrite", span="163-163"];
m29_62 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return;", span="166-166"];
m29_64 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContractType.Object", span="171-171"];
m29_66 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContractType.Array", span="174-174"];
m29_71 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContractType.Primitive", span="185-185"];
m29_73 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContractType.String", span="188-188"];
m29_75 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContractType.Dictionary", span="191-191"];
m29_78 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContractType.Dynamic", span="196-196"];
m29_80 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContractType.Serializable", span="201-201"];
m29_82 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContractType.Linq", span="205-205"];
m29_68 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="!arrayContract.IsMultidimensionalArray", span="176-176"];
m29_84 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="147-147"];
m29_89 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="677-677"];
m29_343 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="IWrappedCollection wrappedCollection = values as IWrappedCollection", span="679-679"];
m29_344 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="object underlyingList = wrappedCollection != null ? wrappedCollection.UnderlyingCollection : values", span="680-680"];
m29_345 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerializing(writer, contract, underlyingList)", span="682-682"];
m29_347 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool hasWrittenMetadataObject = WriteStartArray(writer, underlyingList, contract, member, collectionContract, containerProperty)", span="686-686"];
m29_348 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartArray()", span="688-688"];
m29_349 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="int initialDepth = writer.Top", span="690-690"];
m29_351 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=values, span="694-694"];
m29_352 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="698-698"];
m29_353 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteReference(value, null, valueContract, contract, member)", span="700-700"];
m29_354 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteReference(writer, value)", span="702-702"];
m29_355 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="706-706"];
m29_356 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeValue(writer, value, valueContract, null, contract, member)", span="708-708"];
m29_358 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="IsErrorHandled(underlyingList, contract, index, null, writer.ContainerPath, ex)", span="714-714"];
m29_359 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="HandleError(writer, initialDepth)", span="716-716"];
m29_361 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndArray()", span="729-729"];
m29_363 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="733-733"];
m29_365 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerialized(writer, contract, underlyingList)", span="738-738"];
m29_346 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.Add(underlyingList)", span="684-684"];
m29_362 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=hasWrittenMetadataObject, span="731-731"];
m29_350 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="int index = 0", span="692-692"];
m29_357 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=Exception, span="712-712"];
m29_360 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="throw;", span="720-720"];
m29_364 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="736-736"];
m29_366 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="677-677"];
m29_167 [cluster="System.Collections.Generic.List<T>.Contains<T>(T, System.Collections.IEqualityComparer)", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.Generic.List<T>.Contains<T>(T, System.Collections.IEqualityComparer)", span="225-225"];
m29_261 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", span="529-529"];
m29_268 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="!property.Ignored && property.Readable && ShouldSerialize(writer, property, value) && IsSpecified(writer, property, value)", span="531-531"];
m29_269 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="property.PropertyContract == null", span="533-533"];
m29_270 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="property.PropertyContract = Serializer._contractResolver.ResolveContract(property.PropertyType)", span="535-535"];
m29_271 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="memberValue = property.ValueProvider.GetValue(value)", span="538-538"];
m29_272 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="memberContract = (property.PropertyContract.IsSealed) ? property.PropertyContract : GetContractSafe(memberValue)", span="539-539"];
m29_273 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteProperty(memberValue, property)", span="541-541"];
m29_274 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteReference(memberValue, property, memberContract, contract, member)", span="543-543"];
m29_275 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="property.WritePropertyName(writer)", span="545-545"];
m29_276 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="WriteReference(writer, memberValue)", span="546-546"];
m29_278 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="!CheckForCircularReference(writer, memberValue, property, memberContract, contract, member)", span="550-550"];
m29_281 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="JsonObjectContract objectContract = contract as JsonObjectContract", span="557-557"];
m29_282 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="Required resolvedRequired = property._required ?? ((objectContract != null) ? objectContract.ItemRequired : null) ?? Required.Default", span="558-558"];
m29_284 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="throw JsonSerializationException.Create(null, writer.ContainerPath, ''Cannot write a null value for property '{0}'. Property requires a value.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName), null);", span="561-561"];
m29_286 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="throw JsonSerializationException.Create(null, writer.ContainerPath, ''Cannot write a null value for property '{0}'. Property requires a non-null value.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName), null);", span="565-565"];
m29_288 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="memberContract = null", span="573-573"];
m29_280 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="memberValue == null", span="555-555"];
m29_277 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="return false;", span="547-547"];
m29_279 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="return false;", span="552-552"];
m29_287 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="return true;", span="569-569"];
m29_283 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="resolvedRequired == Required.Always", span="559-559"];
m29_285 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="resolvedRequired == Required.DisallowNull", span="563-563"];
m29_289 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="memberValue = null", span="574-574"];
m29_290 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="return false;", span="575-575"];
m29_291 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", span="529-529"];
m29_579 [cluster="System.IO.StringWriter.StringWriter(System.IFormatProvider)", file="JsonSerializerInternalWriter.cs", label="Entry System.IO.StringWriter.StringWriter(System.IFormatProvider)", span="0-0"];
m29_294 [cluster="Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", span="44-44"];
m29_265 [cluster="System.Func<T, TResult>.Invoke(T)", file="JsonSerializerInternalWriter.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m29_445 [cluster="System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", file="JsonSerializerInternalWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", span="0-0"];
m29_267 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m29_96 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m29_87 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="646-646"];
m29_330 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteReference(value, null, contract, collectionContract, containerProperty)", span="648-648"];
m29_331 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteReference(writer, value)", span="650-650"];
m29_332 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="!CheckForCircularReference(writer, value, null, contract, collectionContract, containerProperty)", span="654-654"];
m29_334 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.Add(value)", span="659-659"];
m29_336 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Started serializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType(), converter.GetType())), null)", span="663-663"];
m29_337 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="converter.WriteJson(writer, value, GetInternalSerializer())", span="666-666"];
m29_339 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Finished serializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType(), converter.GetType())), null)", span="670-670"];
m29_333 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return;", span="656-656"];
m29_335 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="661-661"];
m29_338 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="668-668"];
m29_340 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="673-673"];
m29_341 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="646-646"];
m29_52 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", span="618-618"];
m29_316 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="JsonSerializerInternalWriter.cs", label="string typeName = ReflectionUtils.GetTypeName(type, Serializer._typeNameAssemblyFormatHandling, Serializer._serializationBinder)", span="620-620"];
m29_318 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="JsonSerializerInternalWriter.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''Writing type name '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, typeName, type)), null)", span="624-624"];
m29_319 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(JsonTypeReflector.TypePropertyName, false)", span="627-627"];
m29_320 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="JsonSerializerInternalWriter.cs", label="writer.WriteValue(typeName)", span="628-628"];
m29_317 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="JsonSerializerInternalWriter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="622-622"];
m29_321 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", span="618-618"];
m29_38 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="125-125"];
m29_39 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="contract.TypeCode == PrimitiveTypeCode.Bytes", span="127-127"];
m29_40 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool includeTypeDetails = ShouldWriteType(TypeNameHandling.Objects, contract, member, containerContract, containerProperty)", span="130-130"];
m29_42 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartObject()", span="133-133"];
m29_43 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteTypeProperty(writer, contract.CreatedType)", span="134-134"];
m29_44 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(JsonTypeReflector.ValuePropertyName, false)", span="135-135"];
m29_45 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonWriter.WriteValue(writer, contract.TypeCode, value)", span="137-137"];
m29_46 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="139-139"];
m29_48 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonWriter.WriteValue(writer, contract.TypeCode, value)", span="144-144"];
m29_41 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=includeTypeDetails, span="131-131"];
m29_47 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return;", span="140-140"];
m29_49 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="125-125"];
m29_260 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="578-578"];
m29_295 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartObject()", span="580-580"];
m29_296 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool isReference = ResolveIsReference(contract, member, collectionContract, containerProperty) ?? HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Objects)", span="582-582"];
m29_297 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference && (member == null || member.Writable || HasCreatorParameter(collectionContract, member))", span="584-584"];
m29_298 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteReferenceIdProperty(writer, contract.UnderlyingType, value)", span="586-586"];
m29_299 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteType(TypeNameHandling.Objects, contract, member, collectionContract, containerProperty)", span="588-588"];
m29_300 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteTypeProperty(writer, contract.UnderlyingType)", span="590-590"];
m29_301 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="578-578"];
m29_203 [cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", span="0-0"];
m29_181 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", span="365-365"];
m29_184 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="string reference = Serializer.GetReferenceResolver().GetReference(this, value)", span="369-369"];
m29_187 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="throw JsonSerializationException.Create(null, writer.ContainerPath, ''Error writing object reference for '{0}'.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()), ex);", span="375-375"];
m29_185 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="return reference;", span="371-371"];
m29_186 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label=Exception, span="373-373"];
m29_188 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", span="365-365"];
m29_18 [cluster="Unk.nameof", file="JsonSerializerInternalWriter.cs", label="Entry Unk.nameof", span=""];
m29_309 [cluster="System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", span="0-0"];
m29_135 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="631-631"];
m29_323 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonSerializerInternalWriter.cs", label="return ((value & flag) == flag);", span="633-633"];
m29_324 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="631-631"];
m29_172 [cluster="Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="25-25"];
m29_85 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="869-869"];
m29_264 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", span="1129-1129"];
m29_543 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="string propertyName", span="1131-1131"];
m29_544 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="contract.ContractType == JsonContractType.Primitive", span="1133-1133"];
m29_545 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract)contract", span="1135-1135"];
m29_549 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="DateTime dt = DateTimeUtils.EnsureDateTime((DateTime)name, writer.DateTimeZoneHandling)", span="1141-1141"];
m29_552 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="DateTimeUtils.WriteDateTimeString(sw, dt, writer.DateFormatHandling, writer.DateFormatString, writer.Culture)", span="1145-1145"];
m29_558 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="DateTimeUtils.WriteDateTimeOffsetString(sw, (DateTimeOffset)name, writer.DateFormatHandling, writer.DateFormatString, writer.Culture)", span="1154-1154"];
m29_562 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="double d = (double)name", span="1161-1161"];
m29_567 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="float f = (float)name", span="1169-1169"];
m29_571 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="return Convert.ToString(name, CultureInfo.InvariantCulture);", span="1177-1177"];
m29_572 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="TryConvertToString(name, name.GetType(), out propertyName)", span="1181-1181"];
m29_576 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="return name.ToString();", span="1189-1189"];
m29_546 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="primitiveContract.TypeCode", span="1136-1136"];
m29_547 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="PrimitiveTypeCode.DateTime", span="1138-1138"];
m29_554 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="PrimitiveTypeCode.DateTimeOffset", span="1149-1149"];
m29_560 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="PrimitiveTypeCode.Double", span="1158-1158"];
m29_565 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="PrimitiveTypeCode.Single", span="1166-1166"];
m29_570 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="escape = true", span="1176-1176"];
m29_548 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="PrimitiveTypeCode.DateTimeNullable", span="1139-1139"];
m29_550 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="escape = false", span="1143-1143"];
m29_551 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="1144-1144"];
m29_553 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="return sw.ToString();", span="1146-1146"];
m29_555 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="PrimitiveTypeCode.DateTimeOffsetNullable", span="1150-1150"];
m29_556 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="escape = false", span="1152-1152"];
m29_557 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="1153-1153"];
m29_559 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="return sw.ToString();", span="1155-1155"];
m29_561 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="PrimitiveTypeCode.DoubleNullable", span="1159-1159"];
m29_563 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="escape = false", span="1163-1163"];
m29_564 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="return d.ToString(''R'', CultureInfo.InvariantCulture);", span="1164-1164"];
m29_566 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="PrimitiveTypeCode.SingleNullable", span="1167-1167"];
m29_568 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="escape = false", span="1171-1171"];
m29_569 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="return f.ToString(''R'', CultureInfo.InvariantCulture);", span="1172-1172"];
m29_573 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="escape = true", span="1183-1183"];
m29_575 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="escape = true", span="1188-1188"];
m29_574 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="return propertyName;", span="1184-1184"];
m29_577 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", span="1129-1129"];
m29_407 [cluster="System.Array.GetUpperBound(int)", file="JsonSerializerInternalWriter.cs", label="Entry System.Array.GetUpperBound(int)", span="0-0"];
m29_127 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", span="272-272"];
m29_128 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="property.NullValueHandling.GetValueOrDefault(Serializer._nullValueHandling) == NullValueHandling.Ignore &&\r\n                memberValue == null", span="274-275"];
m29_130 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Ignore)\r\n                && MiscellaneousUtils.ValueEquals(memberValue, property.GetResolvedDefaultValue())", span="280-281"];
m29_129 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return false;", span="277-277"];
m29_131 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return false;", span="283-283"];
m29_132 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return true;", span="286-286"];
m29_133 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", span="272-272"];
m29_54 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", span="1444-1444"];
m29_171 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="139-139"];
m29_202 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="703-703"];
m29_169 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonSerializerInternalWriter.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m29_406 [cluster="System.Array.GetLowerBound(int)", file="JsonSerializerInternalWriter.cs", label="Entry System.Array.GetLowerBound(int)", span="0-0"];
m29_26 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", span="105-105"];
m29_27 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", file="JsonSerializerInternalWriter.cs", label="InternalSerializer == null", span="107-107"];
m29_28 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", file="JsonSerializerInternalWriter.cs", label="InternalSerializer = new JsonSerializerProxy(this)", span="109-109"];
m29_29 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", file="JsonSerializerInternalWriter.cs", label="return InternalSerializer;", span="112-112"];
m29_30 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", span="105-105"];
m29_593 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="473-473"];
m29_303 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", span="605-605"];
m29_310 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonSerializerInternalWriter.cs", label="string reference = GetReference(writer, value)", span="607-607"];
m29_312 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''Writing object reference Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, type)), null)", span="611-611"];
m29_313 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(JsonTypeReflector.IdPropertyName, false)", span="614-614"];
m29_314 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonSerializerInternalWriter.cs", label="writer.WriteValue(reference)", span="615-615"];
m29_311 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="609-609"];
m29_315 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", span="605-605"];
m29_86 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="1155-1155"];
m29_53 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", span="465-465"];
m29_123 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", span="636-636"];
m29_325 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", file="JsonSerializerInternalWriter.cs", label="return ((value & flag) == flag);", span="638-638"];
m29_326 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", span="636-636"];
m29_342 [cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44"];
m29_293 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1225-1225"];
m29_603 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="property.GetIsSpecified == null", span="1227-1227"];
m29_605 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="bool isSpecified = property.GetIsSpecified(target)", span="1232-1232"];
m29_607 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''IsSpecified result for property '{0}' on {1}: {2}''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType, isSpecified)), null)", span="1236-1236"];
m29_604 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="return true;", span="1229-1229"];
m29_606 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1234-1234"];
m29_608 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="return isSpecified;", span="1239-1239"];
m29_609 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1225-1225"];
m29_94 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="897-897"];
m29_448 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerializing(writer, contract, value)", span="899-899"];
m29_449 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.Add(value)", span="900-900"];
m29_450 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteObjectStart(writer, value, contract, member, collectionContract, containerProperty)", span="902-902"];
m29_451 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="int initialDepth = writer.Top", span="904-904"];
m29_453 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="index < contract.Properties.Count", span="906-906"];
m29_454 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonProperty property = contract.Properties[index]", span="908-908"];
m29_458 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="!CalculatePropertyValues(writer, value, contract, member, property, out memberContract, out memberValue)", span="918-918"];
m29_459 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="property.WritePropertyName(writer)", span="923-923"];
m29_460 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeValue(writer, memberValue, memberContract, property, contract, member)", span="924-924"];
m29_462 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="IsErrorHandled(value, contract, property.PropertyName, null, writer.ContainerPath, ex)", span="928-928"];
m29_463 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="HandleError(writer, initialDepth)", span="930-930"];
m29_466 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="value.GetDynamicMemberNames()", span="940-940"];
m29_468 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="contract.TryGetMember(value, memberName, out memberValue)", span="943-943"];
m29_471 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="CheckForCircularReference(writer, memberValue, null, valueContract, contract, member)", span="954-954"];
m29_472 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="string resolvedPropertyName = (contract.PropertyNameResolver != null)\r\n                                ? contract.PropertyNameResolver(memberName)\r\n                                : memberName", span="956-958"];
m29_473 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(resolvedPropertyName)", span="960-960"];
m29_474 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeValue(writer, memberValue, valueContract, null, contract, member)", span="961-961"];
m29_476 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="IsErrorHandled(value, contract, memberName, null, writer.ContainerPath, ex)", span="966-966"];
m29_477 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="HandleError(writer, initialDepth)", span="968-968"];
m29_479 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="978-978"];
m29_481 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerialized(writer, contract, value)", span="981-981"];
m29_452 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="int index = 0", span="906-906"];
m29_465 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="index++", span="906-906"];
m29_455 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="property.HasMemberAttribute", span="911-911"];
m29_456 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="object memberValue", span="915-915"];
m29_457 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContract memberContract", span="916-916"];
m29_461 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=Exception, span="926-926"];
m29_464 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="throw;", span="934-934"];
m29_467 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="object memberValue", span="942-942"];
m29_469 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContract valueContract = GetContractSafe(memberValue)", span="947-947"];
m29_470 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="!ShouldWriteDynamicProperty(memberValue)", span="949-949"];
m29_475 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=Exception, span="964-964"];
m29_478 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="throw;", span="972-972"];
m29_480 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="980-980"];
m29_482 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="897-897"];
m29_521 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="DictionaryEntry entry = e.Entry", span="1073-1073"];
m29_93 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="1045-1045"];
m29_509 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="IWrappedDictionary wrappedDictionary = values as IWrappedDictionary", span="1047-1047"];
m29_510 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="object underlyingDictionary = wrappedDictionary != null ? wrappedDictionary.UnderlyingDictionary : values", span="1048-1048"];
m29_511 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerializing(writer, contract, underlyingDictionary)", span="1050-1050"];
m29_513 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteObjectStart(writer, underlyingDictionary, contract, member, collectionContract, containerProperty)", span="1053-1053"];
m29_514 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="contract.ItemContract == null", span="1055-1055"];
m29_515 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="contract.ItemContract = Serializer._contractResolver.ResolveContract(contract.DictionaryValueType ?? typeof(object))", span="1057-1057"];
m29_516 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="contract.KeyContract == null", span="1060-1060"];
m29_517 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="contract.KeyContract = Serializer._contractResolver.ResolveContract(contract.DictionaryKeyType ?? typeof(object))", span="1062-1062"];
m29_518 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="int initialDepth = writer.Top", span="1065-1065"];
m29_519 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="IDictionaryEnumerator e = values.GetEnumerator()", span="1068-1068"];
m29_523 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="string propertyName = GetPropertyName(writer, entry.Key, contract.KeyContract, out escape)", span="1076-1076"];
m29_524 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="propertyName = (contract.DictionaryKeyResolver != null)\r\n                        ? contract.DictionaryKeyResolver(propertyName)\r\n                        : propertyName", span="1078-1080"];
m29_526 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="1085-1085"];
m29_527 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteReference(value, null, valueContract, contract, member)", span="1087-1087"];
m29_528 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(propertyName, escape)", span="1089-1089"];
m29_529 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteReference(writer, value)", span="1090-1090"];
m29_530 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="!CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="1094-1094"];
m29_531 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(propertyName, escape)", span="1099-1099"];
m29_532 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeValue(writer, value, valueContract, null, contract, member)", span="1101-1101"];
m29_534 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="IsErrorHandled(underlyingDictionary, contract, propertyName, null, writer.ContainerPath, ex)", span="1106-1106"];
m29_535 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="HandleError(writer, initialDepth)", span="1108-1108"];
m29_537 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="1122-1122"];
m29_539 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerialized(writer, contract, underlyingDictionary)", span="1126-1126"];
m29_512 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.Add(underlyingDictionary)", span="1051-1051"];
m29_520 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="e.MoveNext()", span="1071-1071"];
m29_522 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool escape", span="1075-1075"];
m29_525 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="object value = entry.Value", span="1084-1084"];
m29_533 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=Exception, span="1104-1104"];
m29_536 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="throw;", span="1112-1112"];
m29_538 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="1124-1124"];
m29_540 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="1045-1045"];
m29_259 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m29_23 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", span="108-108"];
m29_212 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="436-436"];
m29_218 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="438-438"];
m29_219 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Finished serializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="440-440"];
m29_220 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="contract.InvokeOnSerialized(value, Serializer._context)", span="443-443"];
m29_221 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="436-436"];
m29_183 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="907-907"];
m29_266 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="455-455"];
m29_25 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", span="98-98"];
m29_369 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="429-429"];
m29_292 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1208-1208"];
m29_594 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="property.ShouldSerialize == null", span="1210-1210"];
m29_596 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="bool shouldSerialize = property.ShouldSerialize(target)", span="1215-1215"];
m29_598 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''ShouldSerialize result for property '{0}' on {1}: {2}''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType, shouldSerialize)), null)", span="1219-1219"];
m29_595 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="return true;", span="1212-1212"];
m29_597 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1217-1217"];
m29_599 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="return shouldSerialize;", span="1222-1222"];
m29_600 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1208-1208"];
m29_36 [cluster="object.GetType()", file="JsonSerializerInternalWriter.cs", label="Entry object.GetType()", span="0-0"];
m29_222 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerialized(object, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerialized(object, System.Runtime.Serialization.StreamingContext)", span="337-337"];
m29_21 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", span="350-350"];
m29_173 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="string reference = GetReference(writer, value)", span="352-352"];
m29_175 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Writing object reference to Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, value.GetType())), null)", span="356-356"];
m29_176 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartObject()", span="359-359"];
m29_177 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(JsonTypeReflector.RefPropertyName, false)", span="360-360"];
m29_178 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="writer.WriteValue(reference)", span="361-361"];
m29_179 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="362-362"];
m29_174 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="354-354"];
m29_180 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", span="350-350"];
m29_51 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="405-405"];
m29_578 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="92-92"];
m29_90 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="741-741"];
m29_370 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerializing(writer, contract, values)", span="743-743"];
m29_371 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.Add(values)", span="745-745"];
m29_372 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool hasWrittenMetadataObject = WriteStartArray(writer, values, contract, member, collectionContract, containerProperty)", span="747-747"];
m29_373 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeMultidimensionalArray(writer, values, contract, member, writer.Top, new int[0])", span="749-749"];
m29_375 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="753-753"];
m29_377 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerialized(writer, contract, values)", span="758-758"];
m29_374 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=hasWrittenMetadataObject, span="751-751"];
m29_376 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="756-756"];
m29_378 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="741-741"];
m29_262 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", span="295-295"];
m29_408 [cluster="System.Array.GetValue(params int[])", file="JsonSerializerInternalWriter.cs", label="Entry System.Array.GetValue(params int[])", span="0-0"];
m29_584 [cluster="float.ToString(string, System.IFormatProvider)", file="JsonSerializerInternalWriter.cs", label="Entry float.ToString(string, System.IFormatProvider)", span="0-0"];
m29_601 [cluster="System.Predicate<T>.Invoke(T)", file="JsonSerializerInternalWriter.cs", label="Entry System.Predicate<T>.Invoke(T)", span="0-0"];
m29_322 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", span="153-153"];
m29_124 [cluster="System.Nullable<T>.GetValueOrDefault()", file="JsonSerializerInternalWriter.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m29_368 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="421-421"];
m29_31 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", span="247-247"];
m29_20 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="239-239"];
m29_110 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="value == null", span="241-241"];
m29_112 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="valueContract.ContractType == JsonContractType.Primitive || valueContract.ContractType == JsonContractType.String", span="245-245"];
m29_114 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool? isReference = ResolveIsReference(valueContract, property, collectionContract, containerProperty)", span="250-250"];
m29_116 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="valueContract.ContractType == JsonContractType.Array", span="254-254"];
m29_121 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return Serializer.GetReferenceResolver().IsReferenced(this, value);", span="269-269"];
m29_111 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return false;", span="243-243"];
m29_113 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return false;", span="247-247"];
m29_115 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference == null", span="252-252"];
m29_119 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="!isReference.GetValueOrDefault()", span="264-264"];
m29_117 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference = HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Arrays)", span="256-256"];
m29_118 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference = HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Objects)", span="260-260"];
m29_120 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return false;", span="266-266"];
m29_122 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="239-239"];
m29_327 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", span="641-641"];
m29_328 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", file="JsonSerializerInternalWriter.cs", label="return ((value & flag) == flag);", span="643-643"];
m29_329 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", span="641-641"];
m29_585 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="JsonSerializerInternalWriter.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m29_217 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerializing(object, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerializing(object, System.Runtime.Serialization.StreamingContext)", span="326-326"];
m29_484 [cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", span="85-85"];
m29_55 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="413-413"];
m29_580 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="631-631"];
m29_485 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", span="985-985"];
m29_486 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonSerializerInternalWriter.cs", label="Serializer._nullValueHandling == NullValueHandling.Ignore && memberValue == null", span="987-987"];
m29_488 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonSerializerInternalWriter.cs", label="HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Ignore) &&\r\n                (memberValue == null || MiscellaneousUtils.ValueEquals(memberValue, ReflectionUtils.GetDefaultValue(memberValue.GetType())))", span="992-993"];
m29_487 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonSerializerInternalWriter.cs", label="return false;", span="989-989"];
m29_489 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonSerializerInternalWriter.cs", label="return false;", span="995-995"];
m29_490 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonSerializerInternalWriter.cs", label="return true;", span="998-998"];
m29_491 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", span="985-985"];
m29_19 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", span="115-115"];
m29_32 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonSerializerInternalWriter.cs", label="value == null", span="117-117"];
m29_34 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonSerializerInternalWriter.cs", label="return Serializer._contractResolver.ResolveContract(value.GetType());", span="122-122"];
m29_33 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonSerializerInternalWriter.cs", label="return null;", span="119-119"];
m29_35 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", span="115-115"];
m29_125 [cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", span="1145-1145"];
m29_582 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="767-767"];
m29_97 [cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="414-414"];
m29_126 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.IsReferenced(object, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.IsReferenced(object, object)", span="56-56"];
m29_168 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m29_37 [cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="43-43"];
m29_602 [cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="JsonSerializerInternalWriter.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57"];
m29_211 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="426-426"];
m29_213 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="428-428"];
m29_214 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Started serializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="430-430"];
m29_215 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="contract.InvokeOnSerializing(value, Serializer._context)", span="433-433"];
m29_216 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="426-426"];
m29_98 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="211-211"];
m29_99 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool? isReference = null", span="213-213"];
m29_100 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="property != null", span="216-216"];
m29_101 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference = property.IsReference", span="218-218"];
m29_102 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference == null && containerProperty != null", span="221-221"];
m29_103 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference = containerProperty.ItemIsReference", span="223-223"];
m29_104 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference == null && collectionContract != null", span="226-226"];
m29_105 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference = collectionContract.ItemIsReference", span="228-228"];
m29_107 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference = contract.IsReference", span="233-233"];
m29_106 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference == null", span="231-231"];
m29_108 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return isReference;", span="236-236"];
m29_109 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="211-211"];
m29_610 [file="JsonSerializerInternalWriter.cs", label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", span=""];
m30_16 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="382-382"];
m30_18 [cluster="Unk.AreEqual", file="JsonSerializerSettings.cs", label="Entry Unk.AreEqual", span=""];
m30_17 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerSettings.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802"];
m30_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObjectCreationHandling.UserViewModel.UserViewModel()", file="JsonSerializerSettings.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObjectCreationHandling.UserViewModel.UserViewModel()", span="42-42"];
m30_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObjectCreationHandling.UserViewModel.UserViewModel()", file="JsonSerializerSettings.cs", label="Offices = new List<string>\r\n                {\r\n                    ''Auckland'',\r\n                    ''Wellington'',\r\n                    ''Christchurch''\r\n                }", span="44-49"];
m30_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObjectCreationHandling.UserViewModel.UserViewModel()", file="JsonSerializerSettings.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObjectCreationHandling.UserViewModel.UserViewModel()", span="42-42"];
m30_14 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializerSettings.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739"];
m30_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObjectCreationHandling.Example()", file="JsonSerializerSettings.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObjectCreationHandling.Example()", span="55-55"];
m30_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObjectCreationHandling.Example()", file="JsonSerializerSettings.cs", label="string json = @''{\r\n              'Name': 'James',\r\n              'Offices': [\r\n                'Auckland',\r\n                'Wellington',\r\n                'Christchurch'\r\n              ]\r\n            }''", span="58-65"];
m30_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObjectCreationHandling.Example()", file="JsonSerializerSettings.cs", label="UserViewModel model1 = JsonConvert.DeserializeObject<UserViewModel>(json)", span="67-67"];
m30_9 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObjectCreationHandling.Example()", file="JsonSerializerSettings.cs", label="UserViewModel model2 = JsonConvert.DeserializeObject<UserViewModel>(json, new JsonSerializerSettings\r\n            {\r\n                ObjectCreationHandling = ObjectCreationHandling.Replace\r\n            })", span="80-83"];
m30_7 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObjectCreationHandling.Example()", file="JsonSerializerSettings.cs", label="model1.Offices", span="69-69"];
m30_8 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObjectCreationHandling.Example()", file="JsonSerializerSettings.cs", label="Console.WriteLine(office)", span="71-71"];
m30_10 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObjectCreationHandling.Example()", file="JsonSerializerSettings.cs", label="model2.Offices", span="85-85"];
m30_12 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObjectCreationHandling.Example()", file="JsonSerializerSettings.cs", label="Assert.AreEqual(3, model2.Offices.Count)", span="94-94"];
m30_11 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObjectCreationHandling.Example()", file="JsonSerializerSettings.cs", label="Console.WriteLine(office)", span="87-87"];
m30_13 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObjectCreationHandling.Example()", file="JsonSerializerSettings.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObjectCreationHandling.Example()", span="55-55"];
m30_15 [cluster="System.Console.WriteLine(string)", file="JsonSerializerSettings.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m30_19 [file="JsonSerializerSettings.cs", label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObjectCreationHandling.UserViewModel", span=""];
m31_362 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", span="863-863"];
m31_669 [cluster="Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", span="55-55"];
m31_1115 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", span="840-840"];
m31_1280 [cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="2434-2434"];
m31_1281 [cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonTextReader.cs", label="return true;", span="2436-2436"];
m31_1282 [cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="2434-2434"];
m31_367 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="955-955"];
m31_138 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="366-366"];
m31_139 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="EnsureBuffer()", span="368-368"];
m31_140 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label=true, span="370-370"];
m31_141 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label=_currentState, span="372-372"];
m31_142 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="State.Start", span="374-374"];
m31_149 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="State.Object", span="381-381"];
m31_152 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="State.PostValue", span="384-384"];
m31_155 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="State.Finished", span="392-392"];
m31_167 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="412-412"];
m31_143 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="State.Property", span="375-375"];
m31_144 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="State.Array", span="376-376"];
m31_145 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="State.ArrayStart", span="377-377"];
m31_146 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="State.Constructor", span="378-378"];
m31_147 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="State.ConstructorStart", span="379-379"];
m31_148 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="return ParseValue();", span="380-380"];
m31_150 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="State.ObjectStart", span="382-382"];
m31_151 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="return ParseObject();", span="383-383"];
m31_153 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="ParsePostValue()", span="387-387"];
m31_154 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="return true;", span="389-389"];
m31_156 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="EnsureChars(0, false)", span="393-393"];
m31_157 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="EatWhitespace(false)", span="395-395"];
m31_165 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="SetToken(JsonToken.None)", span="409-409"];
m31_158 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label=_isEndOfFile, span="396-396"];
m31_159 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="SetToken(JsonToken.None)", span="398-398"];
m31_161 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="_chars[_charPos] == '/'", span="401-401"];
m31_160 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="return false;", span="399-399"];
m31_162 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="ParseComment(true)", span="403-403"];
m31_164 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Additional text encountered after finished reading JSON content: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="407-407"];
m31_163 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="return true;", span="404-404"];
m31_166 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="return false;", span="410-410"];
m31_168 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.Read()", span="366-366"];
m31_932 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1730-1730"];
m31_963 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="MatchValueWithTrailingSeparator(''new'')", span="1732-1732"];
m31_964 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="EatWhitespace(false)", span="1734-1734"];
m31_997 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected content while parsing JSON.'');", span="1809-1809"];
m31_965 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="int initialPosition = _charPos", span="1736-1736"];
m31_966 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="int endPosition", span="1737-1737"];
m31_989 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="_stringReference = new StringReference(_chars, initialPosition, endPosition - initialPosition)", span="1791-1791"];
m31_967 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label=true, span="1739-1739"];
m31_968 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="char currentChar = _chars[_charPos]", span="1741-1741"];
m31_969 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="currentChar == '\0'", span="1742-1742"];
m31_975 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="char.IsLetterOrDigit(currentChar)", span="1758-1758"];
m31_977 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="currentChar == StringUtils.CarriageReturn", span="1762-1762"];
m31_980 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="currentChar == StringUtils.LineFeed", span="1768-1768"];
m31_983 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="char.IsWhiteSpace(currentChar)", span="1774-1774"];
m31_986 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="currentChar == '('", span="1780-1780"];
m31_988 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1787-1787"];
m31_970 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="_charsUsed == _charPos", span="1744-1744"];
m31_971 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="ReadData(true) == 0", span="1746-1746"];
m31_973 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="endPosition = _charPos", span="1753-1753"];
m31_972 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing constructor.'');", span="1748-1748"];
m31_974 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="_charPos++", span="1754-1754"];
m31_976 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="_charPos++", span="1760-1760"];
m31_978 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="endPosition = _charPos", span="1764-1764"];
m31_979 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="ProcessCarriageReturn(true)", span="1765-1765"];
m31_981 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="endPosition = _charPos", span="1770-1770"];
m31_982 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="ProcessLineFeed()", span="1771-1771"];
m31_984 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="endPosition = _charPos", span="1776-1776"];
m31_985 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="_charPos++", span="1777-1777"];
m31_987 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="endPosition = _charPos", span="1782-1782"];
m31_990 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="string constructorName = _stringReference.ToString()", span="1792-1792"];
m31_991 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="EatWhitespace(false)", span="1794-1794"];
m31_996 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="SetToken(JsonToken.StartConstructor, constructorName)", span="1805-1805"];
m31_992 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="_chars[_charPos] != '('", span="1796-1796"];
m31_993 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1798-1798"];
m31_994 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="_charPos++", span="1801-1801"];
m31_995 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="ClearRecentString()", span="1803-1803"];
m31_998 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1730-1730"];
m31_557 [cluster="Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", span="897-897"];
m31_556 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNull()", span="2291-2291"];
m31_1217 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs", label="MatchValueWithTrailingSeparator(JsonConvert.Null)", span="2293-2293"];
m31_1218 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs", label="SetToken(JsonToken.Null)", span="2295-2295"];
m31_1219 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing null value.'');", span="2299-2299"];
m31_1220 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNull()", span="2291-2291"];
m31_1114 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.DoubleTryParse(char[], int, int, out double)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.DoubleTryParse(char[], int, int, out double)", span="1199-1199"];
m31_1277 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.Close()", span="1126-1126"];
m31_667 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", span="260-260"];
m31_263 [cluster="char.IsWhiteSpace(char)", file="JsonTextReader.cs", label="Entry char.IsWhiteSpace(char)", span="0-0"];
m31_1110 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", span="746-746"];
m31_830 [cluster="Newtonsoft.Json.Utilities.PropertyNameTable.Get(char[], int, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.PropertyNameTable.Get(char[], int, int)", span="48-48"];
m31_1105 [cluster="string.StartsWith(string, System.StringComparison)", file="JsonTextReader.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m31_83 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadData(bool)", span="240-240"];
m31_84 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonTextReader.cs", label="return ReadData(append, 0);", span="242-242"];
m31_85 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadData(bool)", span="240-240"];
m31_364 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", span="2327-2327"];
m31_1229 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="MatchValueWithTrailingSeparator(JsonConvert.NegativeInfinity)", span="2329-2329"];
m31_1230 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=readType, span="2331-2331"];
m31_1240 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing -Infinity value.'');", span="2349-2349"];
m31_1231 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadType.Read", span="2333-2333"];
m31_1236 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadType.ReadAsString", span="2341-2341"];
m31_1232 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadType.ReadAsDouble", span="2334-2334"];
m31_1233 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="_floatParseHandling == FloatParseHandling.Double", span="2335-2335"];
m31_1234 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="SetToken(JsonToken.Float, double.NegativeInfinity)", span="2337-2337"];
m31_1239 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Cannot read -Infinity value.'');", span="2346-2346"];
m31_1235 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return double.NegativeInfinity;", span="2338-2338"];
m31_1237 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="SetToken(JsonToken.String, JsonConvert.NegativeInfinity)", span="2342-2342"];
m31_1238 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return JsonConvert.NegativeInfinity;", span="2343-2343"];
m31_1241 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", span="2327-2327"];
m31_186 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="439-439"];
m31_187 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonTextReader.cs", label="return (string)ReadStringValue(ReadType.ReadAsString);", span="441-441"];
m31_188 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsString()", span="439-439"];
m31_1123 [cluster="Unk.Parse", file="JsonTextReader.cs", label="Entry Unk.Parse", span=""];
m31_17 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", span="127-127"];
m31_18 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="_charPos++", span="129-129"];
m31_20 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadStringIntoBuffer(quote)", span="132-132"];
m31_22 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=readType, span="135-135"];
m31_35 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="_quoteChar = quote", span="159-159"];
m31_41 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="readType == ReadType.ReadAsDateTime", span="170-170"];
m31_43 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="readType == ReadType.ReadAsDateTimeOffset", span="175-175"];
m31_56 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="_quoteChar = quote", span="208-208"];
m31_19 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ShiftBufferIfNeeded()", span="131-131"];
m31_21 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="SetPostValueState(true)", span="133-133"];
m31_23 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadType.ReadAsBytes", span="137-137"];
m31_32 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadType.ReadAsString", span="155-155"];
m31_36 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadType.ReadAsInt32", span="161-161"];
m31_39 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="_dateParseHandling != DateParseHandling.None", span="167-167"];
m31_24 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="Guid g", span="138-138"];
m31_25 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="byte[] data", span="139-139"];
m31_26 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="_stringReference.Length == 0", span="140-140"];
m31_27 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="data = new byte[0]", span="142-142"];
m31_28 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="_stringReference.Length == 36 && ConvertUtils.TryConvertGuid(_stringReference.ToString(), out g)", span="144-144"];
m31_29 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="data = g.ToByteArray()", span="146-146"];
m31_30 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="data = Convert.FromBase64CharArray(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length)", span="150-150"];
m31_31 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="SetToken(JsonToken.Bytes, data, false)", span="153-153"];
m31_33 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="string text = _stringReference.ToString()", span="156-156"];
m31_34 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="SetToken(JsonToken.String, text, false)", span="158-158"];
m31_37 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadType.ReadAsDecimal", span="162-162"];
m31_38 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadType.ReadAsBoolean", span="163-163"];
m31_40 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="DateParseHandling dateParseHandling", span="169-169"];
m31_55 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="SetToken(JsonToken.String, _stringReference.ToString(), false)", span="207-207"];
m31_42 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="dateParseHandling = DateParseHandling.DateTime", span="172-172"];
m31_44 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="dateParseHandling = DateParseHandling.DateTimeOffset", span="177-177"];
m31_45 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="dateParseHandling = _dateParseHandling", span="182-182"];
m31_46 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="dateParseHandling == DateParseHandling.DateTime", span="185-185"];
m31_47 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="DateTime dt", span="187-187"];
m31_51 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="DateTimeOffset dt", span="197-197"];
m31_48 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="DateTimeUtils.TryParseDateTime(_stringReference, DateTimeZoneHandling, DateFormatString, Culture, out dt)", span="188-188"];
m31_49 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="SetToken(JsonToken.Date, dt, false)", span="190-190"];
m31_50 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return;", span="191-191"];
m31_52 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="DateTimeUtils.TryParseDateTimeOffset(_stringReference, DateFormatString, Culture, out dt)", span="198-198"];
m31_53 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="SetToken(JsonToken.Date, dt, false)", span="200-200"];
m31_54 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return;", span="201-201"];
m31_57 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", span="127-127"];
m31_181 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", span="830-830"];
m31_457 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="EnsureBuffer()", span="832-832"];
m31_475 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ParseString(currentChar, readType)", span="858-858"];
m31_476 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=readType, span="859-859"];
m31_483 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw new ArgumentOutOfRangeException(nameof(readType));", span="868-868"];
m31_488 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return ParseNumberNaN(readType);", span="874-874"];
m31_490 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return ParseNumberPositiveInfinity(readType);", span="876-876"];
m31_493 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return ParseNumberNegativeInfinity(readType);", span="880-880"];
m31_494 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ParseNumber(readType)", span="884-884"];
m31_507 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ParseNumber(readType)", span="898-898"];
m31_458 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=_currentState, span="834-834"];
m31_459 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="State.Start", span="836-836"];
m31_529 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="State.Finished", span="937-937"];
m31_532 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="941-941"];
m31_460 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="State.Property", span="837-837"];
m31_461 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="State.Array", span="838-838"];
m31_462 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="State.ArrayStart", span="839-839"];
m31_463 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="State.Constructor", span="840-840"];
m31_464 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="State.ConstructorStart", span="841-841"];
m31_465 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="State.PostValue", span="842-842"];
m31_466 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=true, span="843-843"];
m31_467 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="char currentChar = _chars[_charPos]", span="845-845"];
m31_468 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=currentChar, span="847-847"];
m31_518 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="913-913"];
m31_527 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="!char.IsWhiteSpace(currentChar)", span="928-928"];
m31_528 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="930-930"];
m31_469 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'\0'", span="849-849"];
m31_473 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="''''", span="856-856"];
m31_484 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'n'", span="870-870"];
m31_487 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'N'", span="873-873"];
m31_489 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'I'", span="875-875"];
m31_491 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'-'", span="877-877"];
m31_496 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'.'", span="887-887"];
m31_509 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'/'", span="900-900"];
m31_511 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="','", span="903-903"];
m31_513 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="']'", span="906-906"];
m31_519 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="914-914"];
m31_521 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="917-917"];
m31_523 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="' '", span="920-920"];
m31_526 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="_charPos++", span="926-926"];
m31_470 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadNullChar()", span="850-850"];
m31_471 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="SetToken(JsonToken.None, null, false)", span="852-852"];
m31_472 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return null;", span="853-853"];
m31_474 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'\''", span="857-857"];
m31_477 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadType.ReadAsInt32", span="861-861"];
m31_479 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadType.ReadAsDecimal", span="863-863"];
m31_481 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadType.ReadAsDouble", span="865-865"];
m31_478 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return ReadInt32String(_stringReference.ToString());", span="862-862"];
m31_480 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return ReadDecimalString(_stringReference.ToString());", span="864-864"];
m31_482 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return ReadDoubleString(_stringReference.ToString());", span="866-866"];
m31_485 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="HandleNull()", span="871-871"];
m31_486 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return null;", span="872-872"];
m31_492 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="878-878"];
m31_495 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return Value;", span="885-885"];
m31_497 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'0'", span="888-888"];
m31_498 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'1'", span="889-889"];
m31_499 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'2'", span="890-890"];
m31_500 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'3'", span="891-891"];
m31_501 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'4'", span="892-892"];
m31_502 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'5'", span="893-893"];
m31_503 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'6'", span="894-894"];
m31_504 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'7'", span="895-895"];
m31_505 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'8'", span="896-896"];
m31_506 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'9'", span="897-897"];
m31_508 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return Value;", span="899-899"];
m31_510 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ParseComment(false)", span="901-901"];
m31_512 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ProcessValueComma()", span="904-904"];
m31_514 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="_charPos++", span="907-907"];
m31_515 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="908-908"];
m31_516 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="SetToken(JsonToken.EndArray)", span="910-910"];
m31_517 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return null;", span="911-911"];
m31_520 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ProcessCarriageReturn(false)", span="915-915"];
m31_522 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ProcessLineFeed()", span="918-918"];
m31_524 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="StringUtils.Tab", span="921-921"];
m31_525 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="_charPos++", span="923-923"];
m31_530 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadFinished()", span="938-938"];
m31_531 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return null;", span="939-939"];
m31_533 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", span="830-830"];
m31_684 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.HexTextToInt(char[], int, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.HexTextToInt(char[], int, int)", span="1383-1383"];
m31_829 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", span="1498-1498"];
m31_834 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="int initialPosition = _charPos", span="1500-1500"];
m31_835 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label=true, span="1503-1503"];
m31_841 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1518-1518"];
m31_847 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1530-1530"];
m31_836 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="_chars[_charPos]", span="1505-1505"];
m31_837 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="'\0'", span="1507-1507"];
m31_843 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="char currentChar = _chars[_charPos]", span="1521-1521"];
m31_838 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="_charsUsed == _charPos", span="1508-1508"];
m31_839 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="ReadData(true) == 0", span="1510-1510"];
m31_840 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing unquoted property name.'');", span="1512-1512"];
m31_842 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="return;", span="1519-1519"];
m31_844 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="ValidIdentifierChar(currentChar)", span="1523-1523"];
m31_846 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="char.IsWhiteSpace(currentChar) || currentChar == ':'", span="1528-1528"];
m31_849 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Invalid JavaScript property identifier character: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1534-1534"];
m31_845 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="_charPos++", span="1525-1525"];
m31_848 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="return;", span="1531-1531"];
m31_850 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", span="1498-1498"];
m31_1268 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="2406-2406"];
m31_1269 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs", label="base.Close()", span="2408-2408"];
m31_1270 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs", label="_chars != null", span="2410-2410"];
m31_1271 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs", label="BufferUtils.ReturnBuffer(_arrayPool, _chars)", span="2412-2412"];
m31_1272 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs", label="_chars = null", span="2413-2413"];
m31_1275 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs", label="_stringBuffer.Clear(_arrayPool)", span="2425-2425"];
m31_1276 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.Close()", span="2406-2406"];
m31_543 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDouble()", span="969-969"];
m31_544 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="JsonTextReader.cs", label="return (double?)ReadNumberValue(ReadType.ReadAsDouble);", span="971-971"];
m31_545 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDouble()", span="969-969"];
m31_800 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseProperty()", span="1437-1437"];
m31_801 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="char firstChar = _chars[_charPos]", span="1439-1439"];
m31_802 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="char quoteChar", span="1440-1440"];
m31_803 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="firstChar == '''' || firstChar == '\''", span="1442-1442"];
m31_805 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="quoteChar = firstChar", span="1445-1445"];
m31_808 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="ValidIdentifierChar(firstChar)", span="1449-1449"];
m31_824 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="_quoteChar = quoteChar", span="1487-1487"];
m31_804 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="_charPos++", span="1444-1444"];
m31_806 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="ShiftBufferIfNeeded()", span="1446-1446"];
m31_807 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="ReadStringIntoBuffer(quoteChar)", span="1447-1447"];
m31_809 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="quoteChar = '\0'", span="1451-1451"];
m31_812 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Invalid property identifier character: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1457-1457"];
m31_810 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="ShiftBufferIfNeeded()", span="1452-1452"];
m31_811 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="ParseUnquotedProperty()", span="1453-1453"];
m31_813 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="string propertyName", span="1460-1460"];
m31_814 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="NameTable != null", span="1462-1462"];
m31_815 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="propertyName = NameTable.Get(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length)", span="1464-1464"];
m31_818 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="propertyName = _stringReference.ToString()", span="1474-1474"];
m31_816 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="propertyName == null", span="1467-1467"];
m31_823 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="SetToken(JsonToken.PropertyName, propertyName)", span="1486-1486"];
m31_817 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="propertyName = _stringReference.ToString()", span="1469-1469"];
m31_819 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="EatWhitespace(false)", span="1477-1477"];
m31_820 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="_chars[_charPos] != ':'", span="1479-1479"];
m31_821 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Invalid character after parsing property name. Expected ':' but got: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1481-1481"];
m31_822 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="_charPos++", span="1484-1484"];
m31_825 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="ClearRecentString()", span="1488-1488"];
m31_826 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="return true;", span="1490-1490"];
m31_827 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseProperty()", span="1437-1437"];
m31_675 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char)", span="58-58"];
m31_448 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadBooleanString(string)", span="707-707"];
m31_1112 [cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="JsonTextReader.cs", label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0"];
m31_118 [cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", span="54-54"];
m31_189 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="448-448"];
m31_190 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="EnsureBuffer()", span="450-450"];
m31_191 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="bool isWrapped = false", span="451-451"];
m31_192 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label=_currentState, span="453-453"];
m31_211 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label=isWrapped, span="479-479"];
m31_193 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="State.Start", span="455-455"];
m31_249 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="State.Finished", span="539-539"];
m31_252 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="543-543"];
m31_194 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="State.Property", span="456-456"];
m31_195 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="State.Array", span="457-457"];
m31_196 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="State.ArrayStart", span="458-458"];
m31_197 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="State.Constructor", span="459-459"];
m31_198 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="State.ConstructorStart", span="460-460"];
m31_199 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="State.PostValue", span="461-461"];
m31_200 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label=true, span="462-462"];
m31_201 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="char currentChar = _chars[_charPos]", span="464-464"];
m31_202 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label=currentChar, span="466-466"];
m31_209 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="ParseString(currentChar, ReadType.ReadAsBytes)", span="477-477"];
m31_238 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="515-515"];
m31_247 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="!char.IsWhiteSpace(currentChar)", span="530-530"];
m31_248 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="532-532"];
m31_203 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="'\0'", span="468-468"];
m31_207 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="''''", span="475-475"];
m31_217 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="'{'", span="489-489"];
m31_222 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="'['", span="495-495"];
m31_226 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="'n'", span="499-499"];
m31_229 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="'/'", span="502-502"];
m31_231 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="','", span="505-505"];
m31_233 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="']'", span="508-508"];
m31_239 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="516-516"];
m31_241 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="519-519"];
m31_243 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="' '", span="522-522"];
m31_246 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="_charPos++", span="528-528"];
m31_204 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="ReadNullChar()", span="469-469"];
m31_205 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="SetToken(JsonToken.None, null, false)", span="471-471"];
m31_206 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="return null;", span="472-472"];
m31_208 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="'\''", span="476-476"];
m31_210 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="byte[] data = (byte[])Value", span="478-478"];
m31_215 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="SetToken(JsonToken.Bytes, data, false)", span="486-486"];
m31_216 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="return data;", span="488-488"];
m31_212 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="ReaderReadAndAssert()", span="481-481"];
m31_213 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="TokenType != JsonToken.EndObject", span="482-482"];
m31_214 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Error reading bytes. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, TokenType));", span="484-484"];
m31_218 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="_charPos++", span="490-490"];
m31_219 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="SetToken(JsonToken.StartObject)", span="491-491"];
m31_220 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="ReadIntoWrappedTypeObject()", span="492-492"];
m31_221 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="isWrapped = true", span="493-493"];
m31_223 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="_charPos++", span="496-496"];
m31_224 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="SetToken(JsonToken.StartArray)", span="497-497"];
m31_225 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="return ReadArrayIntoByteArray();", span="498-498"];
m31_227 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="HandleNull()", span="500-500"];
m31_228 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="return null;", span="501-501"];
m31_230 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="ParseComment(false)", span="503-503"];
m31_232 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="ProcessValueComma()", span="506-506"];
m31_234 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="_charPos++", span="509-509"];
m31_235 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="510-510"];
m31_236 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="SetToken(JsonToken.EndArray)", span="512-512"];
m31_237 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="return null;", span="513-513"];
m31_240 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="ProcessCarriageReturn(false)", span="517-517"];
m31_242 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="ProcessLineFeed()", span="520-520"];
m31_244 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="StringUtils.Tab", span="523-523"];
m31_245 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="_charPos++", span="525-525"];
m31_250 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="ReadFinished()", span="540-540"];
m31_251 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="return null;", span="541-541"];
m31_253 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="448-448"];
m31_668 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", span="1215-1215"];
m31_671 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonTextReader.cs", label="writeToPosition > lastWritePosition", span="1217-1217"];
m31_672 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonTextReader.cs", label="_stringBuffer.Append(_arrayPool, _chars, lastWritePosition, writeToPosition - lastWritePosition)", span="1219-1219"];
m31_673 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonTextReader.cs", label="_stringBuffer.Append(_arrayPool, writeChar)", span="1222-1222"];
m31_674 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", span="1215-1215"];
m31_828 [cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="1493-1493"];
m31_831 [cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonTextReader.cs", label="return (char.IsLetterOrDigit(value) || value == '_' || value == '$');", span="1495-1495"];
m31_832 [cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="1493-1493"];
m31_169 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.EnsureBuffer()", span="1034-1034"];
m31_574 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonTextReader.cs", label="_chars == null", span="1036-1036"];
m31_575 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonTextReader.cs", label="_chars = BufferUtils.RentBuffer(_arrayPool, 1024)", span="1038-1038"];
m31_576 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonTextReader.cs", label="_chars[0] = '\0'", span="1039-1039"];
m31_577 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.EnsureBuffer()", span="1034-1034"];
m31_185 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", span="547-547"];
m31_265 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="EnsureBuffer()", span="549-549"];
m31_283 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ParseString(currentChar, readType)", span="575-575"];
m31_284 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=readType, span="576-576"];
m31_297 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw new ArgumentOutOfRangeException(nameof(readType));", span="597-597"];
m31_300 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return ParseNumberNegativeInfinity(readType);", span="602-602"];
m31_301 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ParseNumber(readType)", span="606-606"];
m31_314 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="readType != ReadType.ReadAsString", span="620-620"];
m31_321 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="readType != ReadType.ReadAsString", span="629-629"];
m31_330 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return ParseNumberPositiveInfinity(readType);", span="642-642"];
m31_332 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return ParseNumberNaN(readType);", span="644-644"];
m31_266 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=_currentState, span="551-551"];
m31_267 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="State.Start", span="553-553"];
m31_356 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="State.Finished", span="685-685"];
m31_359 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="689-689"];
m31_268 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="State.Property", span="554-554"];
m31_269 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="State.Array", span="555-555"];
m31_270 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="State.ArrayStart", span="556-556"];
m31_271 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="State.Constructor", span="557-557"];
m31_272 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="State.ConstructorStart", span="558-558"];
m31_273 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="State.PostValue", span="559-559"];
m31_274 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=true, span="560-560"];
m31_275 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="char currentChar = _chars[_charPos]", span="562-562"];
m31_276 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=currentChar, span="564-564"];
m31_316 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="623-623"];
m31_323 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="632-632"];
m31_324 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="string expected = currentChar == 't' ? JsonConvert.True : JsonConvert.False", span="634-634"];
m31_345 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="661-661"];
m31_354 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="!char.IsWhiteSpace(currentChar)", span="676-676"];
m31_355 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="678-678"];
m31_277 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'\0'", span="566-566"];
m31_281 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="''''", span="573-573"];
m31_298 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'-'", span="599-599"];
m31_303 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'.'", span="609-609"];
m31_319 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'t'", span="627-627"];
m31_329 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'I'", span="641-641"];
m31_331 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'N'", span="643-643"];
m31_333 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'n'", span="645-645"];
m31_336 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'/'", span="648-648"];
m31_338 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="','", span="651-651"];
m31_340 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="']'", span="654-654"];
m31_346 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="662-662"];
m31_348 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="665-665"];
m31_350 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="' '", span="668-668"];
m31_353 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="_charPos++", span="674-674"];
m31_278 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadNullChar()", span="567-567"];
m31_279 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="SetToken(JsonToken.None, null, false)", span="569-569"];
m31_280 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return null;", span="570-570"];
m31_282 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'\''", span="574-574"];
m31_285 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadType.ReadAsBytes", span="578-578"];
m31_287 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadType.ReadAsString", span="580-580"];
m31_289 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadType.ReadAsDateTime", span="582-582"];
m31_293 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadType.ReadAsDateTimeOffset", span="589-589"];
m31_286 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return Value;", span="579-579"];
m31_288 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return Value;", span="581-581"];
m31_290 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="Value is DateTime", span="583-583"];
m31_291 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return (DateTime)Value;", span="585-585"];
m31_292 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return ReadDateTimeString((string)Value);", span="587-587"];
m31_294 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="Value is DateTimeOffset", span="590-590"];
m31_295 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return (DateTimeOffset)Value;", span="592-592"];
m31_296 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return ReadDateTimeOffsetString((string)Value);", span="594-594"];
m31_299 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="600-600"];
m31_302 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return Value;", span="607-607"];
m31_304 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'0'", span="610-610"];
m31_305 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'1'", span="611-611"];
m31_306 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'2'", span="612-612"];
m31_307 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'3'", span="613-613"];
m31_308 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'4'", span="614-614"];
m31_309 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'5'", span="615-615"];
m31_310 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'6'", span="616-616"];
m31_311 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'7'", span="617-617"];
m31_312 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'8'", span="618-618"];
m31_313 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'9'", span="619-619"];
m31_315 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="_charPos++", span="622-622"];
m31_317 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ParseNumber(ReadType.ReadAsString)", span="625-625"];
m31_318 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return Value;", span="626-626"];
m31_320 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="'f'", span="628-628"];
m31_322 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="_charPos++", span="631-631"];
m31_325 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="!MatchValueWithTrailingSeparator(expected)", span="635-635"];
m31_327 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="SetToken(JsonToken.String, expected)", span="639-639"];
m31_328 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return expected;", span="640-640"];
m31_326 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw CreateUnexpectedCharacterException(_chars[_charPos]);", span="637-637"];
m31_334 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="HandleNull()", span="646-646"];
m31_335 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return null;", span="647-647"];
m31_337 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ParseComment(false)", span="649-649"];
m31_339 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ProcessValueComma()", span="652-652"];
m31_341 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="_charPos++", span="655-655"];
m31_342 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="656-656"];
m31_343 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="SetToken(JsonToken.EndArray)", span="658-658"];
m31_344 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return null;", span="659-659"];
m31_347 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ProcessCarriageReturn(false)", span="663-663"];
m31_349 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ProcessLineFeed()", span="666-666"];
m31_351 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="StringUtils.Tab", span="669-669"];
m31_352 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="_charPos++", span="671-671"];
m31_357 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadFinished()", span="686-686"];
m31_358 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return null;", span="687-687"];
m31_360 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", span="547-547"];
m31_931 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseFalse()", span="2315-2315"];
m31_1225 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs", label="MatchValueWithTrailingSeparator(JsonConvert.False)", span="2317-2317"];
m31_1226 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs", label="SetToken(JsonToken.Boolean, false)", span="2319-2319"];
m31_1227 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="2323-2323"];
m31_1228 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseFalse()", span="2315-2315"];
m31_1106 [cluster="System.Convert.ToInt64(string, int)", file="JsonTextReader.cs", label="Entry System.Convert.ToInt64(string, int)", span="0-0"];
m31_372 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", span="702-702"];
m31_373 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="EnsureBuffer()", span="704-704"];
m31_374 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label=_currentState, span="706-706"];
m31_375 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="State.Start", span="708-708"];
m31_443 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="State.Finished", span="809-809"];
m31_446 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="813-813"];
m31_376 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="State.Property", span="709-709"];
m31_377 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="State.Array", span="710-710"];
m31_378 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="State.ArrayStart", span="711-711"];
m31_379 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="State.Constructor", span="712-712"];
m31_380 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="State.ConstructorStart", span="713-713"];
m31_381 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="State.PostValue", span="714-714"];
m31_382 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label=true, span="715-715"];
m31_383 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="char currentChar = _chars[_charPos]", span="717-717"];
m31_384 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label=currentChar, span="719-719"];
m31_391 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="ParseString(currentChar, ReadType.Read)", span="730-730"];
m31_417 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="bool isTrue = currentChar == 't'", span="763-763"];
m31_432 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="785-785"];
m31_441 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="!char.IsWhiteSpace(currentChar)", span="800-800"];
m31_442 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="802-802"];
m31_385 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="'\0'", span="721-721"];
m31_389 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="''''", span="728-728"];
m31_393 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="'n'", span="732-732"];
m31_396 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="'-'", span="735-735"];
m31_415 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="'t'", span="761-761"];
m31_423 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="'/'", span="772-772"];
m31_425 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="','", span="775-775"];
m31_427 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="']'", span="778-778"];
m31_433 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="786-786"];
m31_435 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="789-789"];
m31_437 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="' '", span="792-792"];
m31_440 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="_charPos++", span="798-798"];
m31_386 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="ReadNullChar()", span="722-722"];
m31_387 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="SetToken(JsonToken.None, null, false)", span="724-724"];
m31_388 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="return null;", span="725-725"];
m31_390 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="'\''", span="729-729"];
m31_392 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="return ReadBooleanString(_stringReference.ToString());", span="731-731"];
m31_394 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="HandleNull()", span="733-733"];
m31_395 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="return null;", span="734-734"];
m31_397 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="'.'", span="736-736"];
m31_398 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="'0'", span="737-737"];
m31_399 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="'1'", span="738-738"];
m31_400 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="'2'", span="739-739"];
m31_401 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="'3'", span="740-740"];
m31_402 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="'4'", span="741-741"];
m31_403 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="'5'", span="742-742"];
m31_404 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="'6'", span="743-743"];
m31_405 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="'7'", span="744-744"];
m31_406 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="'8'", span="745-745"];
m31_407 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="'9'", span="746-746"];
m31_408 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="ParseNumber(ReadType.Read)", span="747-747"];
m31_409 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="bool b", span="748-748"];
m31_410 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="Value is BigInteger", span="750-750"];
m31_411 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="b = (BigInteger)Value != 0", span="752-752"];
m31_412 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="b = Convert.ToBoolean(Value, CultureInfo.InvariantCulture)", span="757-757"];
m31_413 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="SetToken(JsonToken.Boolean, b, false)", span="759-759"];
m31_414 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="return b;", span="760-760"];
m31_416 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="'f'", span="762-762"];
m31_418 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="string expected = isTrue ? JsonConvert.True : JsonConvert.False", span="764-764"];
m31_421 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="SetToken(JsonToken.Boolean, isTrue)", span="770-770"];
m31_422 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="return isTrue;", span="771-771"];
m31_419 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="!MatchValueWithTrailingSeparator(expected)", span="766-766"];
m31_420 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="throw CreateUnexpectedCharacterException(_chars[_charPos]);", span="768-768"];
m31_424 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="ParseComment(false)", span="773-773"];
m31_426 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="ProcessValueComma()", span="776-776"];
m31_428 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="_charPos++", span="779-779"];
m31_429 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="780-780"];
m31_430 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="SetToken(JsonToken.EndArray)", span="782-782"];
m31_431 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="return null;", span="783-783"];
m31_434 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="ProcessCarriageReturn(false)", span="787-787"];
m31_436 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="ProcessLineFeed()", span="790-790"];
m31_438 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="StringUtils.Tab", span="793-793"];
m31_439 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="_charPos++", span="795-795"];
m31_444 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="ReadFinished()", span="810-810"];
m31_445 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="return null;", span="811-811"];
m31_447 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", span="702-702"];
m31_670 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char[], int, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char[], int, int)", span="70-70"];
m31_686 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="1242-1242"];
m31_687 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="int charPos = _charPos", span="1244-1244"];
m31_688 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label=true, span="1246-1246"];
m31_689 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="_chars[charPos]", span="1248-1248"];
m31_691 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="_charPos = charPos", span="1251-1251"];
m31_692 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="_charsUsed == charPos", span="1253-1253"];
m31_723 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="charPos++", span="1292-1292"];
m31_690 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'\0'", span="1250-1250"];
m31_696 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'-'", span="1265-1265"];
m31_724 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="_charPos = charPos", span="1295-1295"];
m31_693 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="ReadData(true) == 0", span="1255-1255"];
m31_695 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="return;", span="1262-1262"];
m31_694 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="return;", span="1257-1257"];
m31_697 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'+'", span="1266-1266"];
m31_698 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'a'", span="1267-1267"];
m31_699 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'A'", span="1268-1268"];
m31_700 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'b'", span="1269-1269"];
m31_701 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'B'", span="1270-1270"];
m31_702 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'c'", span="1271-1271"];
m31_703 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'C'", span="1272-1272"];
m31_704 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'d'", span="1273-1273"];
m31_705 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'D'", span="1274-1274"];
m31_706 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'e'", span="1275-1275"];
m31_707 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'E'", span="1276-1276"];
m31_708 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'f'", span="1277-1277"];
m31_709 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'F'", span="1278-1278"];
m31_710 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'x'", span="1279-1279"];
m31_711 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'X'", span="1280-1280"];
m31_712 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'.'", span="1281-1281"];
m31_713 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'0'", span="1282-1282"];
m31_714 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'1'", span="1283-1283"];
m31_715 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'2'", span="1284-1284"];
m31_716 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'3'", span="1285-1285"];
m31_717 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'4'", span="1286-1286"];
m31_718 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'5'", span="1287-1287"];
m31_719 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'6'", span="1288-1288"];
m31_720 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'7'", span="1289-1289"];
m31_721 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'8'", span="1290-1290"];
m31_722 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'9'", span="1291-1291"];
m31_725 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="char currentChar = _chars[_charPos]", span="1297-1297"];
m31_726 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="char.IsWhiteSpace(currentChar) || currentChar == ',' || currentChar == '}' || currentChar == ']' || currentChar == ')' || currentChar == '/'", span="1298-1298"];
m31_728 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected character encountered while parsing number: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1303-1303"];
m31_727 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="return;", span="1300-1300"];
m31_729 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="1242-1242"];
m31_258 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.HandleNull()", span="974-974"];
m31_546 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs", label="EnsureChars(1, true)", span="976-976"];
m31_547 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs", label="char next = _chars[_charPos + 1]", span="978-978"];
m31_553 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs", label="_charPos = _charsUsed", span="990-990"];
m31_548 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs", label="next == 'u'", span="980-980"];
m31_549 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs", label="ParseNull()", span="982-982"];
m31_551 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs", label="_charPos += 2", span="986-986"];
m31_550 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs", label="return;", span="983-983"];
m31_552 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs", label="throw CreateUnexpectedCharacterException(_chars[_charPos - 1]);", span="987-987"];
m31_554 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs", label="throw CreateUnexpectedEndException();", span="991-991"];
m31_555 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.HandleNull()", span="974-974"];
m31_174 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="945-945"];
m31_933 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="2303-2303"];
m31_1221 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs", label="MatchValueWithTrailingSeparator(JsonConvert.Undefined)", span="2305-2305"];
m31_1222 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs", label="SetToken(JsonToken.Undefined)", span="2307-2307"];
m31_1223 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing undefined value.'');", span="2311-2311"];
m31_1224 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="2303-2303"];
m31_666 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", span="269-269"];
m31_1170 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.MatchValue(string)", span="2196-2196"];
m31_1171 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="!EnsureChars(value.Length - 1, true)", span="2198-2198"];
m31_1175 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="i < value.Length", span="2204-2204"];
m31_1176 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="_chars[_charPos + i] != value[i]", span="2206-2206"];
m31_1180 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="_charPos += value.Length", span="2213-2213"];
m31_1172 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="_charPos = _charsUsed", span="2200-2200"];
m31_1174 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="int i = 0", span="2204-2204"];
m31_1173 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="throw CreateUnexpectedEndException();", span="2201-2201"];
m31_1177 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="_charPos += i", span="2208-2208"];
m31_1179 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="i++", span="2204-2204"];
m31_1178 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="return false;", span="2209-2209"];
m31_1181 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="return true;", span="2215-2215"];
m31_1182 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.MatchValue(string)", span="2196-2196"];
m31_537 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="950-950"];
m31_538 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="return (DateTimeOffset?)ReadStringValue(ReadType.ReadAsDateTimeOffset);", span="952-952"];
m31_539 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="950-950"];
m31_540 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="960-960"];
m31_541 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="return (decimal?)ReadNumberValue(ReadType.ReadAsDecimal);", span="962-962"];
m31_542 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="960-960"];
m31_361 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", span="807-807"];
m31_7 [cluster="Unk.nameof", file="JsonTextReader.cs", label="Entry Unk.nameof", span=""];
m31_449 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="JsonTextReader.cs", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
m31_119 [cluster="System.IO.TextReader.Read(char[], int, int)", file="JsonTextReader.cs", label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0"];
m31_72 [cluster="System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", file="JsonTextReader.cs", label="Entry System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", span="0-0"];
m31_366 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", span="2218-2218"];
m31_1183 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs", label="bool match = MatchValue(value)", span="2221-2221"];
m31_1184 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs", label="!match", span="2223-2223"];
m31_1185 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs", label="return false;", span="2225-2225"];
m31_1186 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs", label="!EnsureChars(0, false)", span="2228-2228"];
m31_1187 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs", label="return true;", span="2230-2230"];
m31_1188 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs", label="return IsSeparator(_chars[_charPos]) || _chars[_charPos] == '\0';", span="2233-2233"];
m31_1189 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", span="2218-2218"];
m31_368 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", span="2352-2352"];
m31_1242 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="MatchValueWithTrailingSeparator(JsonConvert.PositiveInfinity)", span="2354-2354"];
m31_1243 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=readType, span="2356-2356"];
m31_1253 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing Infinity value.'');", span="2374-2374"];
m31_1244 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadType.Read", span="2358-2358"];
m31_1249 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadType.ReadAsString", span="2366-2366"];
m31_1245 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadType.ReadAsDouble", span="2359-2359"];
m31_1246 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="_floatParseHandling == FloatParseHandling.Double", span="2360-2360"];
m31_1247 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="SetToken(JsonToken.Float, double.PositiveInfinity)", span="2362-2362"];
m31_1252 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Cannot read Infinity value.'');", span="2371-2371"];
m31_1248 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return double.PositiveInfinity;", span="2363-2363"];
m31_1250 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="SetToken(JsonToken.String, JsonConvert.PositiveInfinity)", span="2367-2367"];
m31_1251 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return JsonConvert.PositiveInfinity;", span="2368-2368"];
m31_1254 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", span="2352-2352"];
m31_1278 [cluster="System.IO.TextReader.Close()", file="JsonTextReader.cs", label="Entry System.IO.TextReader.Close()", span="0-0"];
m31_262 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1666-1666"];
m31_935 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs", label="_charPos++", span="1668-1668"];
m31_936 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs", label="OnNewLine(_charPos)", span="1669-1669"];
m31_937 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1666-1666"];
m31_369 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", span="2377-2377"];
m31_1255 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="MatchValueWithTrailingSeparator(JsonConvert.NaN)", span="2379-2379"];
m31_1256 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=readType, span="2381-2381"];
m31_1266 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing NaN value.'');", span="2399-2399"];
m31_1257 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadType.Read", span="2383-2383"];
m31_1262 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadType.ReadAsString", span="2391-2391"];
m31_1258 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadType.ReadAsDouble", span="2384-2384"];
m31_1259 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="_floatParseHandling == FloatParseHandling.Double", span="2385-2385"];
m31_1260 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="SetToken(JsonToken.Float, double.NaN)", span="2387-2387"];
m31_1265 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Cannot read NaN value.'');", span="2396-2396"];
m31_1261 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return double.NaN;", span="2388-2388"];
m31_1263 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="SetToken(JsonToken.String, JsonConvert.NaN)", span="2392-2392"];
m31_1264 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="return JsonConvert.NaN;", span="2393-2393"];
m31_1267 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", span="2377-2377"];
m31_0 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78"];
m31_1 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="reader == null", span="80-80"];
m31_2 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="throw new ArgumentNullException(nameof(reader));", span="82-82"];
m31_3 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="_reader = reader", span="85-85"];
m31_4 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="_lineNumber = 1", span="86-86"];
m31_5 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78"];
m31_1165 [cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", span="2188-2188"];
m31_1166 [cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="JsonTextReader.cs", label=setToken, span="2190-2190"];
m31_1167 [cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="JsonTextReader.cs", label="SetToken(JsonToken.Comment, new string(_chars, initialPosition, endPosition - initialPosition))", span="2192-2192"];
m31_1168 [cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", span="2188-2188"];
m31_66 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", span="343-343"];
m31_116 [cluster="System.Math.Max(int, int)", file="JsonTextReader.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m31_1279 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Clear(Newtonsoft.Json.IArrayPool<char>)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Clear(Newtonsoft.Json.IArrayPool<char>)", span="82-82"];
m31_535 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadDecimalString(string)", span="757-757"];
m31_1190 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.IsSeparator(char)", span="2236-2236"];
m31_1191 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label=c, span="2238-2238"];
m31_1209 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="char.IsWhiteSpace(c)", span="2266-2266"];
m31_1192 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="'}'", span="2240-2240"];
m31_1196 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="'/'", span="2244-2244"];
m31_1201 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="')'", span="2254-2254"];
m31_1204 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="' '", span="2260-2260"];
m31_1193 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="']'", span="2241-2241"];
m31_1194 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="','", span="2242-2242"];
m31_1195 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="return true;", span="2243-2243"];
m31_1197 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="!EnsureChars(1, false)", span="2246-2246"];
m31_1198 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="return false;", span="2248-2248"];
m31_1199 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="char nextChart = _chars[_charPos + 1]", span="2251-2251"];
m31_1200 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="return (nextChart == '*' || nextChart == '/');", span="2253-2253"];
m31_1202 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="CurrentState == State.Constructor || CurrentState == State.ConstructorStart", span="2255-2255"];
m31_1203 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="return true;", span="2257-2257"];
m31_1211 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="return false;", span="2273-2273"];
m31_1205 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="StringUtils.Tab", span="2261-2261"];
m31_1206 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="2262-2262"];
m31_1207 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="2263-2263"];
m31_1208 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="return true;", span="2264-2264"];
m31_1210 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="return true;", span="2268-2268"];
m31_1212 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.IsSeparator(char)", span="2236-2236"];
m31_13 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.OnNewLine(int)", span="121-121"];
m31_14 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonTextReader.cs", label="_lineNumber++", span="123-123"];
m31_15 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonTextReader.cs", label="_lineStartPos = pos", span="124-124"];
m31_16 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.OnNewLine(int)", span="121-121"];
m31_1113 [cluster="System.Convert.ToDouble(long)", file="JsonTextReader.cs", label="Entry System.Convert.ToDouble(long)", span="0-0"];
m31_176 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonTextReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m31_734 [cluster="Newtonsoft.Json.Utilities.StringReference.StringReference()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference()", span="29-29"];
m31_256 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", span="902-902"];
m31_536 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadDoubleString(string)", span="646-646"];
m31_12 [cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="48-48"];
m31_67 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", span="416-416"];
m31_261 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1672-1672"];
m31_938 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs", label="_charPos++", span="1674-1674"];
m31_939 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs", label="EnsureChars(1, append) && _chars[_charPos] == StringUtils.LineFeed", span="1676-1676"];
m31_940 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs", label="_charPos++", span="1678-1678"];
m31_941 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs", label="OnNewLine(_charPos)", span="1681-1681"];
m31_942 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1672-1672"];
m31_125 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="327-327"];
m31_126 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label=_isEndOfFile, span="329-329"];
m31_128 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="int charsRequired = _charPos + relativePosition - _charsUsed + 1", span="334-334"];
m31_130 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="int charsRead = ReadData(append, charsRequired - totalCharsRead)", span="342-342"];
m31_127 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="return false;", span="331-331"];
m31_129 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="int totalCharsRead = 0", span="336-336"];
m31_133 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="totalCharsRead < charsRequired", span="351-351"];
m31_134 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="totalCharsRead < charsRequired", span="353-353"];
m31_132 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="totalCharsRead += charsRead", span="350-350"];
m31_131 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="charsRead == 0", span="345-345"];
m31_135 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="return false;", span="355-355"];
m31_136 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="return true;", span="357-357"];
m31_137 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="327-327"];
m31_1104 [cluster="char.IsDigit(char)", file="JsonTextReader.cs", label="Entry char.IsDigit(char)", span="0-0"];
m31_255 [cluster="Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", span="889-889"];
m31_930 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseTrue()", span="2276-2276"];
m31_1213 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs", label="MatchValueWithTrailingSeparator(JsonConvert.True)", span="2281-2281"];
m31_1214 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs", label="SetToken(JsonToken.Boolean, true)", span="2283-2283"];
m31_1215 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="2287-2287"];
m31_1216 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseTrue()", span="2276-2276"];
m31_62 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", span="1359-1359"];
m31_8 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", span="113-113"];
m31_9 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="JsonTextReader.cs", label="_stringBuffer.IsEmpty", span="115-115"];
m31_10 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="JsonTextReader.cs", label="_stringBuffer = new StringBuffer(_arrayPool, 1024)", span="117-117"];
m31_11 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", span="113-113"];
m31_1109 [cluster="System.Convert.ToInt32(string, int)", file="JsonTextReader.cs", label="Entry System.Convert.ToInt32(string, int)", span="0-0"];
m31_1169 [cluster="string.String(char[], int, int)", file="JsonTextReader.cs", label="Entry string.String(char[], int, int)", span="0-0"];
m31_68 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="213-213"];
m31_69 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs", label="int charByteCount = 2", span="215-215"];
m31_70 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs", label="Buffer.BlockCopy(src, srcOffset * charByteCount, dst, dstOffset * charByteCount, count * charByteCount)", span="217-217"];
m31_71 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="213-213"];
m31_685 [cluster="System.Convert.ToChar(int)", file="JsonTextReader.cs", label="Entry System.Convert.ToChar(int)", span="0-0"];
m31_58 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="220-220"];
m31_73 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="int length = _chars.Length", span="224-224"];
m31_74 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="length - _charPos <= length * 0.1", span="225-225"];
m31_75 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="int count = _charsUsed - _charPos", span="227-227"];
m31_76 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="count > 0", span="228-228"];
m31_77 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="BlockCopyChars(_chars, _charPos, _chars, 0, count)", span="230-230"];
m31_80 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="_charsUsed = count", span="235-235"];
m31_78 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="_lineStartPos -= _charPos", span="233-233"];
m31_79 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="_charPos = 0", span="234-234"];
m31_81 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="_chars[_charsUsed] = '\0'", span="236-236"];
m31_82 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="220-220"];
m31_260 [cluster="Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", span="693-693"];
m31_370 [cluster="Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", file="JsonTextReader.cs", label="return JsonReaderException.Create(this, ''Unexpected character encountered while parsing value: {0}.''.FormatWith(CultureInfo.InvariantCulture, c));", span="695-695"];
m31_371 [cluster="Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", span="693-693"];
m31_177 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m31_1107 [cluster="Newtonsoft.Json.JsonTextReader.ThrowReaderError(string, System.Exception)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ThrowReaderError(string, System.Exception)", span="2078-2078"];
m31_1117 [cluster="Newtonsoft.Json.JsonTextReader.ThrowReaderError(string, System.Exception)", file="JsonTextReader.cs", label="SetToken(JsonToken.Undefined, null, false)", span="2080-2080"];
m31_1118 [cluster="Newtonsoft.Json.JsonTextReader.ThrowReaderError(string, System.Exception)", file="JsonTextReader.cs", label="return JsonReaderException.Create(this, message, ex);", span="2081-2081"];
m31_1119 [cluster="Newtonsoft.Json.JsonTextReader.ThrowReaderError(string, System.Exception)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ThrowReaderError(string, System.Exception)", span="2078-2078"];
m31_730 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="1308-1308"];
m31_731 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs", label="_stringBuffer.Position = 0", span="1310-1310"];
m31_732 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs", label="_stringReference = new StringReference()", span="1311-1311"];
m31_733 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="1308-1308"];
m31_264 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadFinished()", span="994-994"];
m31_558 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs", label="EnsureChars(0, false)", span="996-996"];
m31_559 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs", label="EatWhitespace(false)", span="998-998"];
m31_565 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs", label="SetToken(JsonToken.None)", span="1013-1013"];
m31_560 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs", label=_isEndOfFile, span="999-999"];
m31_561 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs", label="return;", span="1001-1001"];
m31_562 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs", label="_chars[_charPos] == '/'", span="1003-1003"];
m31_563 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs", label="ParseComment(false)", span="1005-1005"];
m31_564 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Additional text encountered after finished reading JSON content: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1009-1009"];
m31_566 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadFinished()", span="994-994"];
m31_64 [cluster="System.Convert.FromBase64CharArray(char[], int, int)", file="JsonTextReader.cs", label="Entry System.Convert.FromBase64CharArray(char[], int, int)", span="0-0"];
m31_175 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseComment(bool)", span="2096-2096"];
m31_1124 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="_charPos++", span="2099-2099"];
m31_1142 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="EndComment(setToken, initialPosition, _charPos)", span="2139-2139"];
m31_1150 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="EndComment(setToken, initialPosition, _charPos - 1)", span="2157-2157"];
m31_1155 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="EndComment(setToken, initialPosition, _charPos)", span="2168-2168"];
m31_1160 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="EndComment(setToken, initialPosition, _charPos)", span="2176-2176"];
m31_1125 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="!EnsureChars(1, false)", span="2101-2101"];
m31_1126 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing comment.'');", span="2103-2103"];
m31_1127 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="bool singlelineComment", span="2106-2106"];
m31_1128 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="_chars[_charPos] == '*'", span="2108-2108"];
m31_1140 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="!singlelineComment", span="2134-2134"];
m31_1147 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="!singlelineComment", span="2151-2151"];
m31_1154 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label=singlelineComment, span="2166-2166"];
m31_1159 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label=singlelineComment, span="2174-2174"];
m31_1129 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="singlelineComment = false", span="2110-2110"];
m31_1130 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="_chars[_charPos] == '/'", span="2112-2112"];
m31_1131 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="singlelineComment = true", span="2114-2114"];
m31_1132 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing comment. Expected: *, got {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="2118-2118"];
m31_1133 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="_charPos++", span="2121-2121"];
m31_1134 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="int initialPosition = _charPos", span="2123-2123"];
m31_1135 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label=true, span="2125-2125"];
m31_1136 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="_chars[_charPos]", span="2127-2127"];
m31_1137 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="'\0'", span="2129-2129"];
m31_1145 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="'*'", span="2148-2148"];
m31_1153 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="2165-2165"];
m31_1158 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="2173-2173"];
m31_1163 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="_charPos++", span="2182-2182"];
m31_1138 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="_charsUsed == _charPos", span="2130-2130"];
m31_1139 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="ReadData(true) == 0", span="2132-2132"];
m31_1144 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="_charPos++", span="2145-2145"];
m31_1141 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing comment.'');", span="2136-2136"];
m31_1143 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="return;", span="2140-2140"];
m31_1146 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="_charPos++", span="2149-2149"];
m31_1148 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="EnsureChars(0, true)", span="2153-2153"];
m31_1149 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="_chars[_charPos] == '/'", span="2155-2155"];
m31_1151 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="_charPos++", span="2159-2159"];
m31_1152 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="return;", span="2160-2160"];
m31_1157 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="ProcessCarriageReturn(true)", span="2171-2171"];
m31_1156 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="return;", span="2169-2169"];
m31_1162 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="ProcessLineFeed()", span="2179-2179"];
m31_1161 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="return;", span="2177-2177"];
m31_1164 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseComment(bool)", span="2096-2096"];
m31_60 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetPostValueState(bool)", span="1007-1007"];
m31_1108 [cluster="double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", file="JsonTextReader.cs", label="Entry double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", span="0-0"];
m31_59 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="1043-1043"];
m31_578 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="int charPos = _charPos", span="1045-1045"];
m31_589 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="1062-1062"];
m31_593 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="1070-1070"];
m31_653 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_chars[charPos - 1] == quote", span="1186-1186"];
m31_579 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="int initialPosition = _charPos", span="1046-1046"];
m31_583 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_chars[charPos++]", span="1052-1052"];
m31_580 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="int lastWritePosition = _charPos", span="1047-1047"];
m31_655 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="initialPosition == lastWritePosition", span="1190-1190"];
m31_656 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_stringReference = new StringReference(_chars, initialPosition, charPos - initialPosition)", span="1192-1192"];
m31_581 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_stringBuffer.Position = 0", span="1048-1048"];
m31_633 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="WriteCharToBuffer(highSurrogate, lastWritePosition, escapeStartPos)", span="1150-1150"];
m31_641 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="WriteCharToBuffer(writeChar, lastWritePosition, escapeStartPos)", span="1170-1170"];
m31_582 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label=true, span="1050-1050"];
m31_584 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'\0'", span="1054-1054"];
m31_590 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'\\'", span="1066-1066"];
m31_643 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="1174-1174"];
m31_647 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="1179-1179"];
m31_651 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="''''", span="1184-1184"];
m31_585 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charsUsed == charPos - 1", span="1055-1055"];
m31_586 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos--", span="1057-1057"];
m31_591 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos", span="1067-1067"];
m31_594 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="int escapeStartPos = charPos - 1", span="1074-1074"];
m31_595 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="char currentChar = _chars[charPos]", span="1076-1076"];
m31_596 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos++", span="1077-1077"];
m31_587 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="ReadData(true) == 0", span="1059-1059"];
m31_588 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos", span="1061-1061"];
m31_592 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="!EnsureChars(0, true)", span="1068-1068"];
m31_598 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label=currentChar, span="1081-1081"];
m31_614 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = currentChar", span="1104-1104"];
m31_639 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Bad JSON escape sequence: {0}.''.FormatWith(CultureInfo.InvariantCulture, @''\'' + currentChar));", span="1166-1166"];
m31_597 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="char writeChar", span="1079-1079"];
m31_616 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos", span="1107-1107"];
m31_599 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'b'", span="1083-1083"];
m31_601 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'t'", span="1086-1086"];
m31_603 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'n'", span="1089-1089"];
m31_605 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'f'", span="1092-1092"];
m31_607 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'r'", span="1095-1095"];
m31_609 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'\\'", span="1098-1098"];
m31_611 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="''''", span="1101-1101"];
m31_615 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'u'", span="1106-1106"];
m31_638 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos", span="1165-1165"];
m31_600 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = '\b'", span="1084-1084"];
m31_602 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = '\t'", span="1087-1087"];
m31_604 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = '\n'", span="1090-1090"];
m31_606 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = '\f'", span="1093-1093"];
m31_608 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = '\r'", span="1096-1096"];
m31_610 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = '\\'", span="1099-1099"];
m31_612 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'\''", span="1102-1102"];
m31_613 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'/'", span="1103-1103"];
m31_617 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = ParseUnicode()", span="1108-1108"];
m31_618 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="StringUtils.IsLowSurrogate(writeChar)", span="1110-1110"];
m31_620 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="StringUtils.IsHighSurrogate(writeChar)", span="1115-1115"];
m31_624 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="char highSurrogate = writeChar", span="1127-1127"];
m31_619 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = UnicodeReplacementChar", span="1113-1113"];
m31_621 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="bool anotherHighSurrogate", span="1117-1117"];
m31_637 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos = _charPos", span="1162-1162"];
m31_622 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="anotherHighSurrogate = false", span="1122-1122"];
m31_623 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="EnsureChars(2, true) && _chars[_charPos] == '\\' && _chars[_charPos + 1] == 'u'", span="1125-1125"];
m31_636 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label=anotherHighSurrogate, span="1159-1159"];
m31_635 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = UnicodeReplacementChar", span="1157-1157"];
m31_625 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos += 2", span="1129-1129"];
m31_626 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = ParseUnicode()", span="1130-1130"];
m31_627 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="StringUtils.IsLowSurrogate(writeChar)", span="1132-1132"];
m31_628 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="StringUtils.IsHighSurrogate(writeChar)", span="1136-1136"];
m31_632 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="EnsureBufferNotEmpty()", span="1148-1148"];
m31_629 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="highSurrogate = UnicodeReplacementChar", span="1139-1139"];
m31_631 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="highSurrogate = UnicodeReplacementChar", span="1145-1145"];
m31_630 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="anotherHighSurrogate = true", span="1140-1140"];
m31_634 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="lastWritePosition = _charPos", span="1151-1151"];
m31_640 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="EnsureBufferNotEmpty()", span="1169-1169"];
m31_642 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="lastWritePosition = charPos", span="1172-1172"];
m31_644 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos - 1", span="1175-1175"];
m31_645 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="ProcessCarriageReturn(true)", span="1176-1176"];
m31_646 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos = _charPos", span="1177-1177"];
m31_648 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos - 1", span="1180-1180"];
m31_649 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="ProcessLineFeed()", span="1181-1181"];
m31_650 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos = _charPos", span="1182-1182"];
m31_652 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'\''", span="1185-1185"];
m31_654 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos--", span="1188-1188"];
m31_658 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos > lastWritePosition", span="1198-1198"];
m31_659 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_stringBuffer.Append(_arrayPool, _chars, lastWritePosition, charPos - lastWritePosition)", span="1200-1200"];
m31_661 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos++", span="1206-1206"];
m31_657 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="EnsureBufferNotEmpty()", span="1196-1196"];
m31_660 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_stringReference = new StringReference(_stringBuffer.InternalBuffer, 0, _stringBuffer.Position)", span="1203-1203"];
m31_662 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos", span="1207-1207"];
m31_663 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="return;", span="1208-1208"];
m31_664 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="1043-1043"];
m31_172 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="1314-1314"];
m31_735 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label=true, span="1316-1316"];
m31_736 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="char currentChar = _chars[_charPos]", span="1318-1318"];
m31_737 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label=currentChar, span="1320-1320"];
m31_770 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="char.IsWhiteSpace(currentChar)", span="1369-1369"];
m31_772 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''After parsing a value an unexpected character was encountered: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1376-1376"];
m31_738 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="'\0'", span="1322-1322"];
m31_744 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="'}'", span="1336-1336"];
m31_748 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="']'", span="1340-1340"];
m31_752 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="')'", span="1344-1344"];
m31_756 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="'/'", span="1348-1348"];
m31_759 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="','", span="1351-1351"];
m31_763 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="' '", span="1357-1357"];
m31_766 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="1362-1362"];
m31_768 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="1365-1365"];
m31_739 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charsUsed == _charPos", span="1323-1323"];
m31_740 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="ReadData(false) == 0", span="1325-1325"];
m31_743 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charPos++", span="1333-1333"];
m31_741 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_currentState = State.Finished", span="1327-1327"];
m31_742 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="return false;", span="1328-1328"];
m31_745 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charPos++", span="1337-1337"];
m31_746 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.EndObject)", span="1338-1338"];
m31_747 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="return true;", span="1339-1339"];
m31_749 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charPos++", span="1341-1341"];
m31_750 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.EndArray)", span="1342-1342"];
m31_751 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="return true;", span="1343-1343"];
m31_753 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charPos++", span="1345-1345"];
m31_754 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.EndConstructor)", span="1346-1346"];
m31_755 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="return true;", span="1347-1347"];
m31_757 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="ParseComment(true)", span="1349-1349"];
m31_758 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="return true;", span="1350-1350"];
m31_760 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charPos++", span="1352-1352"];
m31_761 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="SetStateBasedOnCurrent()", span="1355-1355"];
m31_762 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="return false;", span="1356-1356"];
m31_764 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="StringUtils.Tab", span="1358-1358"];
m31_765 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charPos++", span="1360-1360"];
m31_767 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="ProcessCarriageReturn(false)", span="1363-1363"];
m31_769 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="ProcessLineFeed()", span="1366-1366"];
m31_771 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charPos++", span="1372-1372"];
m31_773 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="1314-1314"];
m31_254 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadNullChar()", span="1016-1016"];
m31_567 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs", label="_charsUsed == _charPos", span="1018-1018"];
m31_568 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs", label="ReadData(false) == 0", span="1020-1020"];
m31_571 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs", label="_charPos++", span="1028-1028"];
m31_569 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs", label="_isEndOfFile = true", span="1022-1022"];
m31_572 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs", label="return false;", span="1031-1031"];
m31_570 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs", label="return true;", span="1023-1023"];
m31_573 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadNullChar()", span="1016-1016"];
m31_61 [cluster="Newtonsoft.Json.Utilities.StringReference.ToString()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.ToString()", span="62-62"];
m31_1116 [cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", span="2090-2090"];
m31_1121 [cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="JsonTextReader.cs", label="return System.Numerics.BigInteger.Parse(number, culture);", span="2092-2092"];
m31_1122 [cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", span="2090-2090"];
m31_833 [cluster="char.IsLetterOrDigit(char)", file="JsonTextReader.cs", label="Entry char.IsLetterOrDigit(char)", span="0-0"];
m31_534 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadInt32String(string)", span="441-441"];
m31_173 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1684-1684"];
m31_943 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="bool finished = false", span="1686-1686"];
m31_961 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="return (!oneOrMore || ateWhitespace);", span="1727-1727"];
m31_944 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="bool ateWhitespace = false", span="1687-1687"];
m31_945 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="!finished", span="1688-1688"];
m31_946 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="char currentChar = _chars[_charPos]", span="1690-1690"];
m31_947 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label=currentChar, span="1692-1692"];
m31_957 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="currentChar == ' ' || char.IsWhiteSpace(currentChar)", span="1714-1714"];
m31_948 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="'\0'", span="1694-1694"];
m31_953 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="1707-1707"];
m31_955 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="1710-1710"];
m31_949 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="_charsUsed == _charPos", span="1695-1695"];
m31_950 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="ReadData(false) == 0", span="1697-1697"];
m31_952 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="_charPos++", span="1704-1704"];
m31_951 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="finished = true", span="1699-1699"];
m31_954 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="ProcessCarriageReturn(false)", span="1708-1708"];
m31_956 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="ProcessLineFeed()", span="1711-1711"];
m31_958 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="ateWhitespace = true", span="1716-1716"];
m31_960 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="finished = true", span="1721-1721"];
m31_959 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="_charPos++", span="1717-1717"];
m31_962 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1684-1684"];
m31_934 [cluster="char.IsNumber(char)", file="JsonTextReader.cs", label="Entry char.IsNumber(char)", span="0-0"];
m31_257 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", span="581-581"];
m31_120 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="317-317"];
m31_121 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs", label="_charPos + relativePosition >= _charsUsed", span="319-319"];
m31_122 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs", label="return ReadChars(relativePosition, append);", span="321-321"];
m31_123 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs", label="return true;", span="324-324"];
m31_124 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="317-317"];
m31_182 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="430-430"];
m31_183 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReader.cs", label="return (DateTime?)ReadStringValue(ReadType.ReadAsDateTime);", span="432-432"];
m31_184 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="430-430"];
m31_117 [cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="43-43"];
m31_86 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", span="245-245"];
m31_87 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label=_isEndOfFile, span="247-247"];
m31_89 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="_charsUsed + charsRequired >= _chars.Length - 1", span="253-253"];
m31_90 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label=append, span="255-255"];
m31_91 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="int newArrayLength = Math.Max(_chars.Length * 2, _charsUsed + charsRequired + 1)", span="258-258"];
m31_97 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="remainingCharCount + charsRequired + 1 >= _chars.Length", span="273-273"];
m31_98 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="char[] dst = BufferUtils.RentBuffer(_arrayPool, remainingCharCount + charsRequired + 1)", span="276-276"];
m31_88 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="return 0;", span="249-249"];
m31_108 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="int attemptCharReadCount = _chars.Length - _charsUsed - 1", span="302-302"];
m31_96 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="int remainingCharCount = _charsUsed - _charPos", span="271-271"];
m31_92 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="char[] dst = BufferUtils.RentBuffer(_arrayPool, newArrayLength)", span="261-261"];
m31_93 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="BlockCopyChars(_chars, 0, dst, 0, _chars.Length)", span="263-263"];
m31_95 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="_chars = dst", span="267-267"];
m31_94 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="BufferUtils.ReturnBuffer(_arrayPool, _chars)", span="265-265"];
m31_99 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="remainingCharCount > 0", span="278-278"];
m31_100 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="BlockCopyChars(_chars, _charPos, dst, 0, remainingCharCount)", span="280-280"];
m31_103 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="remainingCharCount > 0", span="290-290"];
m31_104 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="BlockCopyChars(_chars, _charPos, _chars, 0, remainingCharCount)", span="292-292"];
m31_107 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="_charsUsed = remainingCharCount", span="298-298"];
m31_102 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="_chars = dst", span="285-285"];
m31_101 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="BufferUtils.ReturnBuffer(_arrayPool, _chars)", span="283-283"];
m31_105 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="_lineStartPos -= _charPos", span="296-296"];
m31_106 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="_charPos = 0", span="297-297"];
m31_109 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="int charsRead = _reader.Read(_chars, _charsUsed, attemptCharReadCount)", span="304-304"];
m31_110 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="_charsUsed += charsRead", span="306-306"];
m31_111 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="charsRead == 0", span="308-308"];
m31_114 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="return charsRead;", span="314-314"];
m31_112 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="_isEndOfFile = true", span="310-310"];
m31_113 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="_chars[_charsUsed] = '\0'", span="313-313"];
m31_115 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", span="245-245"];
m31_63 [cluster="System.Guid.ToByteArray()", file="JsonTextReader.cs", label="Entry System.Guid.ToByteArray()", span="0-0"];
m31_456 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="1054-1054"];
m31_363 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="JsonTextReader.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m31_65 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", span="960-960"];
m31_259 [cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ProcessValueComma()", span="817-817"];
m31_450 [cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonTextReader.cs", label="_charPos++", span="819-819"];
m31_451 [cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonTextReader.cs", label="_currentState != State.PostValue", span="821-821"];
m31_452 [cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonTextReader.cs", label="SetToken(JsonToken.Undefined)", span="823-823"];
m31_454 [cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonTextReader.cs", label="SetStateBasedOnCurrent()", span="827-827"];
m31_453 [cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonTextReader.cs", label="throw CreateUnexpectedCharacterException(',');", span="824-824"];
m31_455 [cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ProcessValueComma()", span="817-817"];
m31_665 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="1225-1225"];
m31_676 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="char writeChar", span="1227-1227"];
m31_677 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="EnsureChars(4, true)", span="1228-1228"];
m31_682 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="return writeChar;", span="1239-1239"];
m31_678 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="char hexChar = Convert.ToChar(ConvertUtils.HexTextToInt(_chars, _charPos, _charPos + 4))", span="1230-1230"];
m31_679 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="writeChar = hexChar", span="1231-1231"];
m31_680 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="_charPos += 4", span="1233-1233"];
m31_683 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="1225-1225"];
m31_170 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseValue()", span="1539-1539"];
m31_851 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label=true, span="1541-1541"];
m31_852 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="char currentChar = _chars[_charPos]", span="1543-1543"];
m31_853 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label=currentChar, span="1545-1545"];
m31_861 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseString(currentChar, ReadType.Read)", span="1562-1562"];
m31_923 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="char.IsWhiteSpace(currentChar)", span="1649-1649"];
m31_925 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="char.IsNumber(currentChar) || currentChar == '-' || currentChar == '.'", span="1655-1655"];
m31_928 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="1661-1661"];
m31_854 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'\0'", span="1547-1547"];
m31_859 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="''''", span="1560-1560"];
m31_863 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'t'", span="1564-1564"];
m31_866 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'f'", span="1567-1567"];
m31_869 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'n'", span="1570-1570"];
m31_880 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'N'", span="1594-1594"];
m31_883 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'I'", span="1597-1597"];
m31_886 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'-'", span="1600-1600"];
m31_891 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'/'", span="1610-1610"];
m31_894 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'u'", span="1613-1613"];
m31_897 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'{'", span="1616-1616"];
m31_901 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'['", span="1620-1620"];
m31_905 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="']'", span="1624-1624"];
m31_909 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="','", span="1628-1628"];
m31_912 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="')'", span="1633-1633"];
m31_916 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="1637-1637"];
m31_918 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="1640-1640"];
m31_920 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="' '", span="1643-1643"];
m31_855 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charsUsed == _charPos", span="1548-1548"];
m31_856 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ReadData(false) == 0", span="1550-1550"];
m31_858 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="1557-1557"];
m31_857 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return false;", span="1552-1552"];
m31_860 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'\''", span="1561-1561"];
m31_862 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="1563-1563"];
m31_864 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseTrue()", span="1565-1565"];
m31_865 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="1566-1566"];
m31_867 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseFalse()", span="1568-1568"];
m31_868 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="1569-1569"];
m31_870 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="EnsureChars(1, true)", span="1571-1571"];
m31_871 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="char next = _chars[_charPos + 1]", span="1573-1573"];
m31_877 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="1590-1590"];
m31_872 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="next == 'u'", span="1575-1575"];
m31_874 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="next == 'e'", span="1579-1579"];
m31_873 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseNull()", span="1577-1577"];
m31_875 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseConstructor()", span="1581-1581"];
m31_876 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="throw CreateUnexpectedCharacterException(_chars[_charPos]);", span="1585-1585"];
m31_878 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="throw CreateUnexpectedEndException();", span="1591-1591"];
m31_879 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="1593-1593"];
m31_881 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseNumberNaN(ReadType.Read)", span="1595-1595"];
m31_882 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="1596-1596"];
m31_884 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseNumberPositiveInfinity(ReadType.Read)", span="1598-1598"];
m31_885 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="1599-1599"];
m31_887 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="1601-1601"];
m31_888 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseNumberNegativeInfinity(ReadType.Read)", span="1603-1603"];
m31_889 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseNumber(ReadType.Read)", span="1607-1607"];
m31_890 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="1609-1609"];
m31_892 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseComment(true)", span="1611-1611"];
m31_893 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="1612-1612"];
m31_895 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseUndefined()", span="1614-1614"];
m31_896 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="1615-1615"];
m31_898 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="1617-1617"];
m31_899 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.StartObject)", span="1618-1618"];
m31_900 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="1619-1619"];
m31_902 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="1621-1621"];
m31_903 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.StartArray)", span="1622-1622"];
m31_904 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="1623-1623"];
m31_906 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="1625-1625"];
m31_907 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.EndArray)", span="1626-1626"];
m31_908 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="1627-1627"];
m31_910 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.Undefined)", span="1631-1631"];
m31_911 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="1632-1632"];
m31_913 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="1634-1634"];
m31_914 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.EndConstructor)", span="1635-1635"];
m31_915 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="1636-1636"];
m31_917 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ProcessCarriageReturn(false)", span="1638-1638"];
m31_919 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ProcessLineFeed()", span="1641-1641"];
m31_921 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="StringUtils.Tab", span="1644-1644"];
m31_922 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="1646-1646"];
m31_924 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="1652-1652"];
m31_926 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseNumber(ReadType.Read)", span="1657-1657"];
m31_927 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="1658-1658"];
m31_929 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseValue()", span="1539-1539"];
m31_365 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", span="1813-1813"];
m31_999 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ShiftBufferIfNeeded()", span="1815-1815"];
m31_1009 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="readType == ReadType.ReadAsString", span="1833-1833"];
m31_1022 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="readType == ReadType.ReadAsInt32", span="1868-1868"];
m31_1039 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="readType == ReadType.ReadAsDecimal", span="1910-1910"];
m31_1054 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="readType == ReadType.ReadAsDouble", span="1950-1950"];
m31_1000 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="char firstChar = _chars[_charPos]", span="1817-1817"];
m31_1001 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="int initialPosition = _charPos", span="1818-1818"];
m31_1007 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="bool singleDigit = (char.IsDigit(firstChar) && _stringReference.Length == 1)", span="1830-1830"];
m31_1008 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="bool nonBase10 = (firstChar == '0' && _stringReference.Length > 1 && _stringReference.Chars[_stringReference.StartIndex + 1] != '.' && _stringReference.Chars[_stringReference.StartIndex + 1] != 'e' && _stringReference.Chars[_stringReference.StartIndex + 1] != 'E')", span="1831-1831"];
m31_1024 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberValue = firstChar - 48", span="1873-1873"];
m31_1041 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberValue = (decimal)firstChar - 48", span="1915-1915"];
m31_1056 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberValue = (double)firstChar - 48", span="1955-1955"];
m31_1070 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberValue = (long)firstChar - 48", span="1994-1994"];
m31_1002 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ReadNumberIntoBuffer()", span="1820-1820"];
m31_1004 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1825-1825"];
m31_1003 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="SetPostValueState(true)", span="1823-1823"];
m31_1005 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="object numberValue", span="1827-1827"];
m31_1006 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="JsonToken numberType", span="1828-1828"];
m31_1102 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="SetToken(numberType, numberValue, false)", span="2075-2075"];
m31_1023 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=singleDigit, span="1870-1870"];
m31_1040 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=singleDigit, span="1912-1912"];
m31_1055 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=singleDigit, span="1952-1952"];
m31_1069 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=singleDigit, span="1991-1991"];
m31_1011 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=nonBase10, span="1838-1838"];
m31_1025 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=nonBase10, span="1875-1875"];
m31_1042 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=nonBase10, span="1917-1917"];
m31_1057 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=nonBase10, span="1957-1957"];
m31_1072 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=nonBase10, span="1997-1997"];
m31_1010 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="string number = _stringReference.ToString()", span="1835-1835"];
m31_1012 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase)", span="1842-1842"];
m31_1013 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="Convert.ToInt64(number, 16)", span="1844-1844"];
m31_1014 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="Convert.ToInt64(number, 8)", span="1848-1848"];
m31_1016 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1853-1853"];
m31_1018 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="!double.TryParse(number, NumberStyles.Float, CultureInfo.InvariantCulture, out value)", span="1859-1859"];
m31_1021 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberValue = number", span="1866-1866"];
m31_1017 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="double value", span="1858-1858"];
m31_1015 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=Exception, span="1851-1851"];
m31_1020 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberType = JsonToken.String", span="1865-1865"];
m31_1019 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1861-1861"];
m31_1026 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="string number = _stringReference.ToString()", span="1877-1877"];
m31_1031 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="int value", span="1892-1892"];
m31_1027 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="int integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt32(number, 16) : Convert.ToInt32(number, 8)", span="1881-1881"];
m31_1030 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid integer.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1887-1887"];
m31_1028 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberValue = integer", span="1883-1883"];
m31_1029 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=Exception, span="1885-1885"];
m31_1038 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberType = JsonToken.Integer", span="1908-1908"];
m31_1032 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ParseResult parseResult = ConvertUtils.Int32TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="1893-1893"];
m31_1033 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="parseResult == ParseResult.Success", span="1894-1894"];
m31_1034 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberValue = value", span="1896-1896"];
m31_1035 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="parseResult == ParseResult.Overflow", span="1898-1898"];
m31_1036 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw ThrowReaderError(''JSON integer {0} is too large or small for an Int32.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1900-1900"];
m31_1037 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid integer.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1904-1904"];
m31_1043 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="string number = _stringReference.ToString()", span="1919-1919"];
m31_1048 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="string number = _stringReference.ToString()", span="1935-1935"];
m31_1044 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="long integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt64(number, 16) : Convert.ToInt64(number, 8)", span="1924-1924"];
m31_1047 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1930-1930"];
m31_1045 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberValue = Convert.ToDecimal(integer)", span="1926-1926"];
m31_1046 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=Exception, span="1928-1928"];
m31_1053 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberType = JsonToken.Float", span="1948-1948"];
m31_1049 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="decimal value", span="1937-1937"];
m31_1050 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out value)", span="1938-1938"];
m31_1051 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberValue = value", span="1940-1940"];
m31_1052 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1944-1944"];
m31_1058 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="string number = _stringReference.ToString()", span="1959-1959"];
m31_1063 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="double value", span="1975-1975"];
m31_1059 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="long integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt64(number, 16) : Convert.ToInt64(number, 8)", span="1964-1964"];
m31_1062 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid double.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1970-1970"];
m31_1060 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberValue = Convert.ToDouble(integer)", span="1966-1966"];
m31_1061 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=Exception, span="1968-1968"];
m31_1068 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberType = JsonToken.Float", span="1987-1987"];
m31_1064 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ParseResult parseResult = ConvertUtils.DoubleTryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="1976-1976"];
m31_1065 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="parseResult == ParseResult.Success", span="1977-1977"];
m31_1066 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberValue = value", span="1979-1979"];
m31_1067 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid double.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1983-1983"];
m31_1071 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberType = JsonToken.Integer", span="1995-1995"];
m31_1073 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="string number = _stringReference.ToString()", span="1999-1999"];
m31_1078 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="long value", span="2014-2014"];
m31_1074 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberValue = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt64(number, 16) : Convert.ToInt64(number, 8)", span="2003-2003"];
m31_1076 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="2007-2007"];
m31_1075 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label=Exception, span="2005-2005"];
m31_1077 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberType = JsonToken.Integer", span="2010-2010"];
m31_1079 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ParseResult parseResult = ConvertUtils.Int64TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="2015-2015"];
m31_1080 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="parseResult == ParseResult.Success", span="2016-2016"];
m31_1081 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberValue = value", span="2018-2018"];
m31_1083 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="parseResult == ParseResult.Overflow", span="2021-2021"];
m31_1082 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberType = JsonToken.Integer", span="2019-2019"];
m31_1084 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="string number = _stringReference.ToString()", span="2024-2024"];
m31_1089 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="string number = _stringReference.ToString()", span="2039-2039"];
m31_1085 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="number.Length > MaximumJavascriptIntegerCharacterLength", span="2026-2026"];
m31_1087 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberValue = BigIntegerParse(number, CultureInfo.InvariantCulture)", span="2031-2031"];
m31_1086 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw ThrowReaderError(''JSON integer {0} is too large to parse.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="2028-2028"];
m31_1088 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberType = JsonToken.Integer", span="2032-2032"];
m31_1090 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="_floatParseHandling == FloatParseHandling.Decimal", span="2041-2041"];
m31_1092 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out d)", span="2044-2044"];
m31_1094 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, number));", span="2050-2050"];
m31_1099 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number));", span="2063-2063"];
m31_1091 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="decimal d", span="2043-2043"];
m31_1095 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="double d", span="2055-2055"];
m31_1093 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberValue = d", span="2046-2046"];
m31_1096 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="parseResult = ConvertUtils.DoubleTryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out d)", span="2056-2056"];
m31_1097 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="parseResult == ParseResult.Success", span="2057-2057"];
m31_1098 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberValue = d", span="2059-2059"];
m31_1100 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="numberType = JsonToken.Float", span="2067-2067"];
m31_1101 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="ClearRecentString()", span="2072-2072"];
m31_1103 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", span="1813-1813"];
m31_1111 [cluster="System.Convert.ToDecimal(long)", file="JsonTextReader.cs", label="Entry System.Convert.ToDecimal(long)", span="0-0"];
m31_178 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="421-421"];
m31_179 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReader.cs", label="return (int?)ReadNumberValue(ReadType.ReadAsInt32);", span="423-423"];
m31_180 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="421-421"];
m31_171 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseObject()", span="1383-1383"];
m31_774 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label=true, span="1385-1385"];
m31_775 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="char currentChar = _chars[_charPos]", span="1387-1387"];
m31_776 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label=currentChar, span="1389-1389"];
m31_796 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="char.IsWhiteSpace(currentChar)", span="1423-1423"];
m31_777 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="'\0'", span="1391-1391"];
m31_782 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="'}'", span="1404-1404"];
m31_786 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="'/'", span="1408-1408"];
m31_789 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="1411-1411"];
m31_791 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="1414-1414"];
m31_793 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="' '", span="1417-1417"];
m31_778 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="_charsUsed == _charPos", span="1392-1392"];
m31_779 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="ReadData(false) == 0", span="1394-1394"];
m31_781 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="_charPos++", span="1401-1401"];
m31_780 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="return false;", span="1396-1396"];
m31_783 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="SetToken(JsonToken.EndObject)", span="1405-1405"];
m31_784 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="_charPos++", span="1406-1406"];
m31_785 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="return true;", span="1407-1407"];
m31_787 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="ParseComment(true)", span="1409-1409"];
m31_788 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="return true;", span="1410-1410"];
m31_790 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="ProcessCarriageReturn(false)", span="1412-1412"];
m31_792 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="ProcessLineFeed()", span="1415-1415"];
m31_794 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="StringUtils.Tab", span="1418-1418"];
m31_795 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="_charPos++", span="1420-1420"];
m31_797 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="_charPos++", span="1426-1426"];
m31_798 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="return ParseProperty();", span="1430-1430"];
m31_799 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseObject()", span="1383-1383"];
m31_1120 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="113-113"];
m31_1283 [file="JsonTextReader.cs", label="Newtonsoft.Json.JsonTextReader", span=""];
m32_285 [cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", span="749-749"];
m32_286 [cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", file="JsonTextWriter.cs", label="InternalWriteWhitespace(ws)", span="751-751"];
m32_287 [cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", file="JsonTextWriter.cs", label="_writer.Write(ws)", span="753-753"];
m32_288 [cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", span="749-749"];
m32_55 [cluster="Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", span="94-94"];
m32_228 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="JsonTextWriter.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m32_28 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="75-75"];
m32_29 [cluster="Unk.Add", file="JsonTextWriter.cs", label="Entry Unk.Add", span=""];
m32_30 [cluster="Newtonsoft.Json.Converters.DataSetConverter.CanConvert(System.Type)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.Converters.DataSetConverter.CanConvert(System.Type)", span="96-96"];
m32_31 [cluster="Newtonsoft.Json.Converters.DataSetConverter.CanConvert(System.Type)", file="JsonTextWriter.cs", label="return (valueType == typeof(DataSet));", span="98-98"];
m32_197 [cluster="Newtonsoft.Json.JsonConvert.ToString(char)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(char)", span="173-173"];
m32_180 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", span="528-528"];
m32_181 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.Boolean)", span="530-530"];
m32_182 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", file="JsonTextWriter.cs", label="WriteValueInternal(JsonConvert.ToString(value), JsonToken.Boolean)", span="531-531"];
m32_183 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", span="528-528"];
m32_95 [cluster="System.IO.TextWriter.Write(char[], int, int)", file="JsonTextWriter.cs", label="Entry System.IO.TextWriter.Write(char[], int, int)", span="0-0"];
m32_127 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteRaw()", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteRaw()", span="1672-1672"];
m32_193 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(char)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(char)", span="559-559"];
m32_194 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(char)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.String)", span="561-561"];
m32_195 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(char)", file="JsonTextWriter.cs", label="WriteValueInternal(JsonConvert.ToString(value), JsonToken.String)", span="562-562"];
m32_196 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(char)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(char)", span="559-559"];
m32_161 [cluster="Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="268-268"];
m32_25 [cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="70-70"];
m32_173 [cluster="Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="298-298"];
m32_63 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", span="269-269"];
m32_64 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs", label="InternalWritePropertyName(name)", span="271-271"];
m32_66 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs", label="WriteEscapedString(name, _quoteName)", span="275-275"];
m32_67 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs", label=_quoteName, span="279-279"];
m32_68 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs", label="_writer.Write(_quoteChar)", span="281-281"];
m32_69 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs", label="_writer.Write(name)", span="284-284"];
m32_70 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs", label=_quoteName, span="286-286"];
m32_71 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs", label="_writer.Write(_quoteChar)", span="288-288"];
m32_72 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs", label="_writer.Write(':')", span="292-292"];
m32_65 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs", label=escape, span="273-273"];
m32_73 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", span="269-269"];
m32_26 [cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", span="54-54"];
m32_12 [cluster="Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", span="300-300"];
m32_144 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", span="443-443"];
m32_145 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.Integer)", span="445-445"];
m32_146 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", file="JsonTextWriter.cs", label="WriteIntegerValue(value)", span="446-446"];
m32_147 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", span="443-443"];
m32_10 [cluster="Newtonsoft.Json.Converters.DataTableConverter.DataTableConverter()", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.Converters.DataTableConverter.DataTableConverter()", span="35-35"];
m32_162 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", span="484-484"];
m32_164 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JsonTextWriter.cs", label="WriteNull()", span="488-488"];
m32_165 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.Float)", span="492-492"];
m32_166 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JsonTextWriter.cs", label="WriteValueInternal(JsonConvert.ToString(value.GetValueOrDefault(), FloatFormatHandling, QuoteChar, true), JsonToken.Float)", span="493-493"];
m32_163 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JsonTextWriter.cs", label="value == null", span="486-486"];
m32_167 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", span="484-484"];
m32_238 [cluster="Newtonsoft.Json.Utilities.Base64Encoder.Encode(byte[], int, int)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.Utilities.Base64Encoder.Encode(byte[], int, int)", span="47-47"];
m32_185 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(short)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(short)", span="538-538"];
m32_186 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(short)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.Integer)", span="540-540"];
m32_187 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(short)", file="JsonTextWriter.cs", label="WriteIntegerValue(value)", span="541-541"];
m32_188 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(short)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(short)", span="538-538"];
m32_56 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", span="255-255"];
m32_57 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JsonTextWriter.cs", label="InternalWritePropertyName(name)", span="257-257"];
m32_58 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JsonTextWriter.cs", label="WriteEscapedString(name, _quoteName)", span="259-259"];
m32_59 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JsonTextWriter.cs", label="_writer.Write(':')", span="261-261"];
m32_60 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", span="255-255"];
m32_128 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(string)", span="408-408"];
m32_129 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.String)", span="410-410"];
m32_131 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonTextWriter.cs", label="WriteValueInternal(JsonConvert.Null, JsonToken.Null)", span="414-414"];
m32_132 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonTextWriter.cs", label="WriteEscapedString(value, true)", span="418-418"];
m32_130 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonTextWriter.cs", label="value == null", span="412-412"];
m32_133 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(string)", span="408-408"];
m32_94 [cluster="System.Math.Min(int, int)", file="JsonTextWriter.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m32_240 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", span="649-649"];
m32_241 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.Date)", span="651-651"];
m32_242 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs", label="string.IsNullOrEmpty(DateFormatString)", span="653-653"];
m32_243 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs", label="EnsureWriteBuffer()", span="655-655"];
m32_245 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs", label="_writeBuffer[pos++] = _quoteChar", span="658-658"];
m32_246 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs", label="pos = DateTimeUtils.WriteDateTimeString(_writeBuffer, pos, (DateFormatHandling == DateFormatHandling.IsoDateFormat) ? value.DateTime : value.UtcDateTime, value.Offset, DateTimeKind.Local, DateFormatHandling)", span="659-659"];
m32_247 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs", label="_writeBuffer[pos++] = _quoteChar", span="660-660"];
m32_248 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs", label="_writer.Write(_writeBuffer, 0, pos)", span="662-662"];
m32_249 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs", label="_writer.Write(_quoteChar)", span="666-666"];
m32_250 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs", label="_writer.Write(value.ToString(DateFormatString, Culture))", span="667-667"];
m32_251 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs", label="_writer.Write(_quoteChar)", span="668-668"];
m32_244 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs", label="int pos = 0", span="657-657"];
m32_252 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", span="649-649"];
m32_210 [cluster="Newtonsoft.Json.JsonConvert.ToString(decimal)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(decimal)", span="349-349"];
m32_74 [cluster="Newtonsoft.Json.JsonTextWriter.OnStringEscapeHandlingChanged()", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.OnStringEscapeHandlingChanged()", span="295-295"];
m32_75 [cluster="Newtonsoft.Json.JsonTextWriter.OnStringEscapeHandlingChanged()", file="JsonTextWriter.cs", label="UpdateCharEscapeFlags()", span="297-297"];
m32_76 [cluster="Newtonsoft.Json.JsonTextWriter.OnStringEscapeHandlingChanged()", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.OnStringEscapeHandlingChanged()", span="295-295"];
m32_271 [cluster="System.TimeSpan.ToString(string, System.IFormatProvider)", file="JsonTextWriter.cs", label="Entry System.TimeSpan.ToString(string, System.IFormatProvider)", span="0-0"];
m32_278 [cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteComment(string)", span="736-736"];
m32_279 [cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JsonTextWriter.cs", label="InternalWriteComment()", span="738-738"];
m32_280 [cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JsonTextWriter.cs", label="_writer.Write(''/*'')", span="740-740"];
m32_281 [cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JsonTextWriter.cs", label="_writer.Write(text)", span="741-741"];
m32_282 [cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JsonTextWriter.cs", label="_writer.Write(''*/'')", span="742-742"];
m32_283 [cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteComment(string)", span="736-736"];
m32_152 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", span="464-464"];
m32_153 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.Integer)", span="466-466"];
m32_154 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", file="JsonTextWriter.cs", label="WriteIntegerValue(value)", span="467-467"];
m32_155 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", span="464-464"];
m32_289 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", span="1689-1689"];
m32_239 [cluster="Newtonsoft.Json.Utilities.Base64Encoder.Flush()", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.Utilities.Base64Encoder.Flush()", span="112-112"];
m32_16 [cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="70-70"];
m32_211 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", span="600-600"];
m32_212 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.Date)", span="602-602"];
m32_213 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs", label="value = DateTimeUtils.EnsureDateTime(value, DateTimeZoneHandling)", span="603-603"];
m32_214 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs", label="string.IsNullOrEmpty(DateFormatString)", span="605-605"];
m32_215 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs", label="EnsureWriteBuffer()", span="607-607"];
m32_217 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs", label="_writeBuffer[pos++] = _quoteChar", span="610-610"];
m32_218 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs", label="pos = DateTimeUtils.WriteDateTimeString(_writeBuffer, pos, value, null, value.Kind, DateFormatHandling)", span="611-611"];
m32_219 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs", label="_writeBuffer[pos++] = _quoteChar", span="612-612"];
m32_220 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs", label="_writer.Write(_writeBuffer, 0, pos)", span="614-614"];
m32_221 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs", label="_writer.Write(_quoteChar)", span="618-618"];
m32_222 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs", label="_writer.Write(value.ToString(DateFormatString, Culture))", span="619-619"];
m32_223 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs", label="_writer.Write(_quoteChar)", span="620-620"];
m32_216 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs", label="int pos = 0", span="609-609"];
m32_224 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", span="600-600"];
m32_174 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", span="511-511"];
m32_176 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JsonTextWriter.cs", label="WriteNull()", span="515-515"];
m32_177 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.Float)", span="519-519"];
m32_178 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JsonTextWriter.cs", label="WriteValueInternal(JsonConvert.ToString(value.GetValueOrDefault(), FloatFormatHandling, QuoteChar, true), JsonToken.Float)", span="520-520"];
m32_175 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JsonTextWriter.cs", label="value == null", span="513-513"];
m32_179 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", span="511-511"];
m32_169 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double)", span="501-501"];
m32_170 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.Float)", span="503-503"];
m32_171 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="JsonTextWriter.cs", label="WriteValueInternal(JsonConvert.ToString(value, FloatFormatHandling, QuoteChar, false), JsonToken.Float)", span="504-504"];
m32_172 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(double)", span="501-501"];
m32_111 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", span="1683-1683"];
m32_157 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float)", span="474-474"];
m32_158 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.Float)", span="476-476"];
m32_159 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="JsonTextWriter.cs", label="WriteValueInternal(JsonConvert.ToString(value, FloatFormatHandling, QuoteChar, false), JsonToken.Float)", span="477-477"];
m32_160 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(float)", span="474-474"];
m32_11 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="315-315"];
m32_80 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteIndent()", span="308-308"];
m32_81 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs", label="_writer.WriteLine()", span="310-310"];
m32_82 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs", label="int currentIndentCount = Top * _indentation", span="313-313"];
m32_84 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs", label="_indentChars == null", span="317-317"];
m32_85 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs", label="_indentChars = new string(_indentChar, 10).ToCharArray()", span="319-319"];
m32_88 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs", label="_writer.Write(_indentChars, 0, writeCount)", span="326-326"];
m32_83 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs", label="currentIndentCount > 0", span="315-315"];
m32_86 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs", label="currentIndentCount > 0", span="322-322"];
m32_87 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs", label="int writeCount = Math.Min(currentIndentCount, 10)", span="324-324"];
m32_89 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs", label="currentIndentCount -= writeCount", span="328-328"];
m32_90 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteIndent()", span="308-308"];
m32_272 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", span="718-718"];
m32_274 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonTextWriter.cs", label="WriteNull()", span="722-722"];
m32_275 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.String)", span="726-726"];
m32_276 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonTextWriter.cs", label="WriteEscapedString(value.OriginalString, true)", span="727-727"];
m32_273 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonTextWriter.cs", label="value == null", span="720-720"];
m32_277 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", span="718-718"];
m32_14 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonTextWriter.cs", label="_writer.Flush()", span="169-169"];
m32_263 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", span="698-698"];
m32_264 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.String)", span="700-700"];
m32_267 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonTextWriter.cs", label="_writer.Write(_quoteChar)", span="709-709"];
m32_268 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonTextWriter.cs", label="_writer.Write(text)", span="710-710"];
m32_269 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonTextWriter.cs", label="_writer.Write(_quoteChar)", span="711-711"];
m32_265 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonTextWriter.cs", label="string text", span="702-702"];
m32_266 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonTextWriter.cs", label="text = value.ToString(null, CultureInfo.InvariantCulture)", span="706-706"];
m32_270 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", span="698-698"];
m32_27 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="269-269"];
m32_45 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="233-233"];
m32_48 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs", label="_writer.Write('}')", span="238-238"];
m32_50 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs", label="_writer.Write(']')", span="241-241"];
m32_52 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs", label="_writer.Write(')')", span="244-244"];
m32_53 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs", label="throw JsonWriterException.Create(this, ''Invalid JsonToken: '' + token, null);", span="247-247"];
m32_47 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs", label="JsonToken.EndObject", span="237-237"];
m32_49 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs", label="JsonToken.EndArray", span="240-240"];
m32_51 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs", label="JsonToken.EndConstructor", span="243-243"];
m32_46 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs", label=token, span="235-235"];
m32_54 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="233-233"];
m32_262 [cluster="System.Guid.ToString(string, System.IFormatProvider)", file="JsonTextWriter.cs", label="Entry System.Guid.ToString(string, System.IFormatProvider)", span="0-0"];
m32_33 [cluster="System.IO.TextWriter.Write(char)", file="JsonTextWriter.cs", label="Entry System.IO.TextWriter.Write(char)", span="0-0"];
m32_105 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(object)", span="360-360"];
m32_107 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.Integer)", span="365-365"];
m32_108 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JsonTextWriter.cs", label="WriteValueInternal(((BigInteger)value).ToString(CultureInfo.InvariantCulture), JsonToken.String)", span="366-366"];
m32_109 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JsonTextWriter.cs", label="base.WriteValue(value)", span="371-371"];
m32_106 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JsonTextWriter.cs", label="value is BigInteger", span="363-363"];
m32_110 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(object)", span="360-360"];
m32_91 [cluster="System.IO.TextWriter.WriteLine()", file="JsonTextWriter.cs", label="Entry System.IO.TextWriter.WriteLine()", span="0-0"];
m32_115 [cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteNull()", span="378-378"];
m32_116 [cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.Null)", span="380-380"];
m32_117 [cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="JsonTextWriter.cs", label="WriteValueInternal(JsonConvert.Null, JsonToken.Null)", span="381-381"];
m32_118 [cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteNull()", span="378-378"];
m32_93 [cluster="string.ToCharArray()", file="JsonTextWriter.cs", label="Entry string.ToCharArray()", span="0-0"];
m32_17 [cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriter.cs", label="DataSet ds = new DataSet()", span="72-72"];
m32_22 [cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="JsonTextWriter.cs", label="ds.Tables.Add(dt)", prediction=26, span="81-81"];
m32_19 [cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriter.cs", label="reader.Read()", span="76-76"];
m32_21 [cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriter.cs", label="DataTable dt = (DataTable)converter.ReadJson(reader, typeof (DataTable), null, serializer)", span="80-80"];
m32_23 [cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="JsonTextWriter.cs", label="reader.Read()", prediction=26, span="83-83"];
m32_18 [cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriter.cs", label="DataTableConverter converter = new DataTableConverter()", span="74-74"];
m32_20 [cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriter.cs", label="reader.TokenType == JsonToken.PropertyName", span="78-78"];
m32_24 [cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriter.cs", label="return ds;", span="86-86"];
m32_38 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", span="220-220"];
m32_39 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonTextWriter.cs", label="InternalWriteStart(JsonToken.StartConstructor, JsonContainerType.Constructor)", span="222-222"];
m32_40 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonTextWriter.cs", label="_writer.Write(''new '')", span="224-224"];
m32_41 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonTextWriter.cs", label="_writer.Write(name)", span="225-225"];
m32_42 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonTextWriter.cs", label="_writer.Write('(')", span="226-226"];
m32_43 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", span="220-220"];
m32_254 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", span="677-677"];
m32_255 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.String)", span="679-679"];
m32_258 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonTextWriter.cs", label="_writer.Write(_quoteChar)", span="689-689"];
m32_259 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonTextWriter.cs", label="_writer.Write(text)", span="690-690"];
m32_260 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonTextWriter.cs", label="_writer.Write(_quoteChar)", span="691-691"];
m32_256 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonTextWriter.cs", label="string text = null", span="681-681"];
m32_257 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonTextWriter.cs", label="text = value.ToString(''D'', CultureInfo.InvariantCulture)", span="684-684"];
m32_261 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", span="677-677"];
m32_139 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="432-432"];
m32_140 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.Integer)", span="434-434"];
m32_141 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonTextWriter.cs", label="WriteIntegerValue(value)", span="435-435"];
m32_142 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="432-432"];
m32_311 [cluster="Newtonsoft.Json.Utilities.MathUtils.IntLength(ulong)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.IntLength(ulong)", span="33-33"];
m32_0 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="148-148"];
m32_1 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriter.cs", label="textWriter == null", span="150-150"];
m32_2 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriter.cs", label="throw new ArgumentNullException(nameof(textWriter));", span="152-152"];
m32_4 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriter.cs", label="_quoteChar = ''''", span="156-156"];
m32_6 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriter.cs", label="_indentChar = ' '", span="158-158"];
m32_7 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriter.cs", label="_indentation = 2", span="159-159"];
m32_8 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriter.cs", label="UpdateCharEscapeFlags()", span="161-161"];
m32_5 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriter.cs", label="_quoteName = true", span="157-157"];
m32_3 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriter.cs", label="_writer = textWriter", span="155-155"];
m32_9 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="148-148"];
m32_202 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", span="580-580"];
m32_203 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.Integer)", span="582-582"];
m32_204 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", file="JsonTextWriter.cs", label="WriteIntegerValue(value)", span="583-583"];
m32_205 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", span="580-580"];
m32_77 [cluster="Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", file="JsonTextWriter.cs", label="_charEscapeFlags = JavaScriptUtils.GetCharEscapeFlags(StringEscapeHandling, _quoteChar)", span="302-302"];
m32_78 [cluster="Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", span="300-300"];
m32_206 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="590-590"];
m32_207 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.Float)", span="592-592"];
m32_208 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonTextWriter.cs", label="WriteValueInternal(JsonConvert.ToString(value), JsonToken.Float)", span="593-593"];
m32_209 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="590-590"];
m32_148 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(long)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(long)", span="453-453"];
m32_149 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(long)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.Integer)", span="455-455"];
m32_150 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(long)", file="JsonTextWriter.cs", label="WriteIntegerValue(value)", span="456-456"];
m32_151 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(long)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(long)", span="453-453"];
m32_61 [cluster="Newtonsoft.Json.JsonWriter.InternalWritePropertyName(string)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWritePropertyName(string)", span="1666-1666"];
m32_156 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", span="784-784"];
m32_302 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs", label="_writer.Write((char)('0' + uvalue))", span="788-788"];
m32_303 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs", label="EnsureWriteBuffer()", span="792-792"];
m32_306 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs", label="_writeBuffer[totalLength - ++length] = (char)('0' + (uvalue % 10))", span="799-799"];
m32_309 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs", label="_writer.Write(_writeBuffer, 0, length)", span="803-803"];
m32_301 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs", label="uvalue <= 9", span="786-786"];
m32_304 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs", label="int totalLength = MathUtils.IntLength(uvalue)", span="794-794"];
m32_305 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs", label="int length = 0", span="795-795"];
m32_307 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs", label="uvalue /= 10", span="800-800"];
m32_308 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs", label="uvalue != 0", span="801-801"];
m32_310 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", span="784-784"];
m32_112 [cluster="Unk.ToString", file="JsonTextWriter.cs", label="Entry Unk.ToString", span=""];
m32_13 [cluster="Unk.WritePropertyName", file="JsonTextWriter.cs", label="Entry Unk.WritePropertyName", span=""];
m32_15 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="324-324"];
m32_226 [cluster="string.IsNullOrEmpty(string)", file="JsonTextWriter.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m32_225 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="92-92"];
m32_143 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", span="765-765"];
m32_295 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonTextWriter.cs", label="_writer.Write((char)('0' + value))", span="769-769"];
m32_298 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonTextWriter.cs", label="_writer.Write('-')", span="777-777"];
m32_299 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonTextWriter.cs", label="WriteIntegerValue(uvalue)", span="780-780"];
m32_294 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonTextWriter.cs", label="value >= 0 && value <= 9", span="767-767"];
m32_297 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonTextWriter.cs", label="value < 0", span="775-775"];
m32_296 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonTextWriter.cs", label="ulong uvalue = (value < 0) ? (ulong)-value : (ulong)value", span="773-773"];
m32_300 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", span="765-765"];
m32_123 [cluster="Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", span="397-397"];
m32_124 [cluster="Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", file="JsonTextWriter.cs", label="InternalWriteRaw()", span="399-399"];
m32_125 [cluster="Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", file="JsonTextWriter.cs", label="_writer.Write(json)", span="401-401"];
m32_126 [cluster="Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", span="397-397"];
m32_198 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", span="569-569"];
m32_199 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.Integer)", span="571-571"];
m32_200 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", file="JsonTextWriter.cs", label="WriteIntegerValue(value)", span="572-572"];
m32_201 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", span="569-569"];
m32_284 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteComment()", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteComment()", span="1700-1700"];
m32_184 [cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(bool)", span="163-163"];
m32_168 [cluster="System.Nullable<T>.GetValueOrDefault()", file="JsonTextWriter.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m32_96 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", span="336-336"];
m32_97 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", file="JsonTextWriter.cs", label="_writer.Write(',')", span="338-338"];
m32_98 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", span="336-336"];
m32_62 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", span="422-422"];
m32_134 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", file="JsonTextWriter.cs", label="EnsureWriteBuffer()", span="424-424"];
m32_135 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", file="JsonTextWriter.cs", label="JavaScriptUtils.WriteEscapedJavaScriptString(_writer, value, _quoteChar, quote, _charEscapeFlags, StringEscapeHandling, _arrayPool, ref _writeBuffer)", span="425-425"];
m32_136 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", span="422-422"];
m32_79 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", span="115-115"];
m32_113 [cluster="Unk.WriteValueInternal", file="JsonTextWriter.cs", label="Entry Unk.WriteValueInternal", span=""];
m32_92 [cluster="string.String(char, int)", file="JsonTextWriter.cs", label="Entry string.String(char, int)", span="0-0"];
m32_293 [cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="43-43"];
m32_32 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", span="1676-1676"];
m32_114 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1386-1386"];
m32_34 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="209-209"];
m32_35 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonTextWriter.cs", label="InternalWriteStart(JsonToken.StartArray, JsonContainerType.Array)", span="211-211"];
m32_36 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonTextWriter.cs", label="_writer.Write('[')", span="213-213"];
m32_37 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="209-209"];
m32_253 [cluster="System.DateTimeOffset.ToString(string, System.IFormatProvider)", file="JsonTextWriter.cs", label="Entry System.DateTimeOffset.ToString(string, System.IFormatProvider)", span="0-0"];
m32_227 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", span="645-645"];
m32_99 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", span="344-344"];
m32_100 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", file="JsonTextWriter.cs", label="_writer.Write(' ')", span="346-346"];
m32_101 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", span="344-344"];
m32_119 [cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefined()", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteUndefined()", span="387-387"];
m32_120 [cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefined()", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.Undefined)", span="389-389"];
m32_121 [cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefined()", file="JsonTextWriter.cs", label="WriteValueInternal(JsonConvert.Undefined, JsonToken.Undefined)", span="390-390"];
m32_122 [cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefined()", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteUndefined()", span="387-387"];
m32_229 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", span="628-628"];
m32_231 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonTextWriter.cs", label="WriteNull()", span="632-632"];
m32_232 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.Bytes)", span="636-636"];
m32_233 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonTextWriter.cs", label="_writer.Write(_quoteChar)", span="637-637"];
m32_234 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonTextWriter.cs", label="Base64Encoder.Encode(value, 0, value.Length)", span="638-638"];
m32_235 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonTextWriter.cs", label="Base64Encoder.Flush()", span="639-639"];
m32_236 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonTextWriter.cs", label="_writer.Write(_quoteChar)", span="640-640"];
m32_230 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonTextWriter.cs", label="value == null", span="630-630"];
m32_237 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", span="628-628"];
m32_138 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", span="148-148"];
m32_189 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", span="549-549"];
m32_190 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", file="JsonTextWriter.cs", label="InternalWriteValue(JsonToken.Integer)", span="551-551"];
m32_191 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", file="JsonTextWriter.cs", label="WriteIntegerValue(value)", span="552-552"];
m32_192 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", span="549-549"];
m32_44 [cluster="System.IO.TextWriter.Write(string)", file="JsonTextWriter.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m32_102 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", span="349-349"];
m32_103 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs", label="_writer.Write(value)", span="351-351"];
m32_104 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", span="349-349"];
m32_137 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", span="756-756"];
m32_290 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", file="JsonTextWriter.cs", label="_writeBuffer == null", span="758-758"];
m32_291 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", file="JsonTextWriter.cs", label="_writeBuffer = BufferUtils.RentBuffer(_arrayPool, 35)", span="761-761"];
m32_292 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", span="756-756"];
m32_312 [file="JsonTextWriter.cs", label="Newtonsoft.Json.JsonTextWriter", span=""];
m33_14 [cluster="Unk.AreEqual", file="JsonValidatingReader.cs", label="Entry Unk.AreEqual", span=""];
m33_0 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", span="40-40"];
m33_1 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="JsonValidatingReader.cs", label="Assert.AreEqual(''urlValue'', StringUtils.ToCamelCase(''URLValue''))", span="42-42"];
m33_2 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="JsonValidatingReader.cs", label="Assert.AreEqual(''url'', StringUtils.ToCamelCase(''URL''))", span="43-43"];
m33_3 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="JsonValidatingReader.cs", label="Assert.AreEqual(''id'', StringUtils.ToCamelCase(''ID''))", span="44-44"];
m33_4 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="JsonValidatingReader.cs", label="Assert.AreEqual(''i'', StringUtils.ToCamelCase(''I''))", span="45-45"];
m33_5 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="JsonValidatingReader.cs", label="Assert.AreEqual('''', StringUtils.ToCamelCase(''''))", span="46-46"];
m33_6 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="JsonValidatingReader.cs", label="Assert.AreEqual(null, StringUtils.ToCamelCase(null))", span="47-47"];
m33_7 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="JsonValidatingReader.cs", label="Assert.AreEqual(''iPhone'', StringUtils.ToCamelCase(''iPhone''))", span="48-48"];
m33_8 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="JsonValidatingReader.cs", label="Assert.AreEqual(''person'', StringUtils.ToCamelCase(''Person''))", span="49-49"];
m33_9 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="JsonValidatingReader.cs", label="Assert.AreEqual(''iPhone'', StringUtils.ToCamelCase(''IPhone''))", span="50-50"];
m33_10 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="JsonValidatingReader.cs", label="Assert.AreEqual(''i Phone'', StringUtils.ToCamelCase(''I Phone''))", span="51-51"];
m33_11 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="JsonValidatingReader.cs", label="Assert.AreEqual('' IPhone'', StringUtils.ToCamelCase('' IPhone''))", span="52-52"];
m33_12 [cluster="Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.Tests.Utilities.StringUtilsTests.ToCamelCaseTest()", span="40-40"];
m33_13 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", span="156-156"];
m35_0 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.GetValue()", file="JToken.cs", label="Entry Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.GetValue()", span="35-35"];
m35_1 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.GetValue()", file="JToken.cs", label="JObject o = JObject.Parse(''{prop1:'12345!',prop2:[1,'two','III']}'')", span="37-37"];
m35_2 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.GetValue()", file="JToken.cs", label="JPropertyDescriptor prop1 = new JPropertyDescriptor(''prop1'')", span="39-39"];
m35_4 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.GetValue()", file="JToken.cs", label="Assert.AreEqual(''12345!'', ((JValue)prop1.GetValue(o)).Value)", span="42-42"];
m35_5 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.GetValue()", file="JToken.cs", label="Assert.AreEqual(o[''prop2''], prop2.GetValue(o))", span="43-43"];
m35_3 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.GetValue()", file="JToken.cs", label="JPropertyDescriptor prop2 = new JPropertyDescriptor(''prop2'')", span="40-40"];
m35_6 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.GetValue()", file="JToken.cs", label="Exit Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.GetValue()", span="35-35"];
m35_10 [cluster="Unk.AreEqual", file="JToken.cs", label="Entry Unk.AreEqual", span=""];
m35_24 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.ResetValue(object)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JPropertyDescriptor.ResetValue(object)", span="83-83"];
m35_18 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.ResetValue()", file="JToken.cs", label="Entry Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.ResetValue()", span="59-59"];
m35_19 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.ResetValue()", file="JToken.cs", label="JObject o = JObject.Parse(''{prop1:'12345!'}'')", span="61-61"];
m35_20 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.ResetValue()", file="JToken.cs", label="JPropertyDescriptor propertyDescriptor1 = new JPropertyDescriptor(''prop1'')", span="63-63"];
m35_21 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.ResetValue()", file="JToken.cs", label="propertyDescriptor1.ResetValue(o)", span="64-64"];
m35_22 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.ResetValue()", file="JToken.cs", label="Assert.AreEqual(''12345!'', (string)o[''prop1''])", span="66-66"];
m35_23 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.ResetValue()", file="JToken.cs", label="Exit Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.ResetValue()", span="59-59"];
m35_25 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.IsReadOnly()", file="JToken.cs", label="Entry Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.IsReadOnly()", span="70-70"];
m35_26 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.IsReadOnly()", file="JToken.cs", label="JPropertyDescriptor propertyDescriptor1 = new JPropertyDescriptor(''prop1'')", span="72-72"];
m35_27 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.IsReadOnly()", file="JToken.cs", label="Assert.AreEqual(false, propertyDescriptor1.IsReadOnly)", span="74-74"];
m35_28 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.IsReadOnly()", file="JToken.cs", label="Exit Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.IsReadOnly()", span="70-70"];
m35_29 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.PropertyType()", file="JToken.cs", label="Entry Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.PropertyType()", span="78-78"];
m35_30 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.PropertyType()", file="JToken.cs", label="JPropertyDescriptor propertyDescriptor1 = new JPropertyDescriptor(''prop1'')", span="80-80"];
m35_31 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.PropertyType()", file="JToken.cs", label="Assert.AreEqual(typeof(object), propertyDescriptor1.PropertyType)", span="82-82"];
m35_32 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.PropertyType()", file="JToken.cs", label="Exit Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.PropertyType()", span="78-78"];
m35_7 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359"];
m35_9 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.GetValue(object)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JPropertyDescriptor.GetValue(object)", span="71-71"];
m35_8 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.JPropertyDescriptor(string)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JPropertyDescriptor.JPropertyDescriptor(string)", span="40-40"];
m35_17 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.SetValue(object, object)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JPropertyDescriptor.SetValue(object, object)", span="93-93"];
m35_11 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.SetValue()", file="JToken.cs", label="Entry Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.SetValue()", span="47-47"];
m35_12 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.SetValue()", file="JToken.cs", label="JObject o = JObject.Parse(''{prop1:'12345!'}'')", span="49-49"];
m35_13 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.SetValue()", file="JToken.cs", label="JPropertyDescriptor propertyDescriptor1 = new JPropertyDescriptor(''prop1'')", span="51-51"];
m35_14 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.SetValue()", file="JToken.cs", label="propertyDescriptor1.SetValue(o, ''54321!'')", span="53-53"];
m35_15 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.SetValue()", file="JToken.cs", label="Assert.AreEqual(''54321!'', (string)o[''prop1''])", span="55-55"];
m35_16 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.SetValue()", file="JToken.cs", label="Exit Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests.SetValue()", span="47-47"];
m36_41 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="945-945"];
m36_5 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m36_123 [cluster="Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="38-38"];
m36_42 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", span="129-129"];
m36_43 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="c.Type", span="131-131"];
m36_52 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''Type'', c.Type, ''Unexpected JContainer type.'');", span="142-142"];
m36_44 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="JTokenType.Object", span="133-133"];
m36_46 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="JTokenType.Array", span="135-135"];
m36_48 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="JTokenType.Constructor", span="137-137"];
m36_50 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="JTokenType.Property", span="139-139"];
m36_45 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="return JsonToken.EndObject;", span="134-134"];
m36_47 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="return JsonToken.EndArray;", span="136-136"];
m36_49 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="return JsonToken.EndConstructor;", span="138-138"];
m36_51 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="return null;", span="140-140"];
m36_53 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", span="129-129"];
m36_22 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", span="97-97"];
m36_24 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="t == _root", span="99-99"];
m36_26 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="JToken next = t.Next", span="104-104"];
m36_27 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="(next == null || next == t) || t == t.Parent.Last", span="105-105"];
m36_28 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="t.Parent == null", span="107-107"];
m36_30 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="return SetEnd(t.Parent);", span="112-112"];
m36_25 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="return ReadToEnd();", span="101-101"];
m36_31 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="_current = next", span="116-116"];
m36_29 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="return ReadToEnd();", span="109-109"];
m36_32 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="SetToken(_current)", span="117-117"];
m36_33 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="return true;", span="118-118"];
m36_34 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", span="97-97"];
m36_113 [cluster="Newtonsoft.Json.Linq.JTokenReader.SafeToString(object)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.SafeToString(object)", span="246-246"];
m36_114 [cluster="Newtonsoft.Json.Linq.JTokenReader.SafeToString(object)", file="JTokenReader.cs", label="return (value != null) ? value.ToString() : null;", span="248-248"];
m36_115 [cluster="Newtonsoft.Json.Linq.JTokenReader.SafeToString(object)", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.SafeToString(object)", span="246-246"];
m36_116 [cluster="object.ToString()", file="JTokenReader.cs", label="Entry object.ToString()", span="0-0"];
m36_54 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", span="75-75"];
m36_117 [cluster="Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="251-251"];
m36_118 [cluster="Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JTokenReader.cs", label="CurrentState == State.Start", span="253-253"];
m36_119 [cluster="Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JTokenReader.cs", label="return false;", span="255-255"];
m36_120 [cluster="Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JTokenReader.cs", label="IJsonLineInfo info = _current", span="258-258"];
m36_121 [cluster="Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JTokenReader.cs", label="return (info != null && info.HasLineInfo());", span="259-259"];
m36_122 [cluster="Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="251-251"];
m36_6 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken, string)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken, string)", span="60-60"];
m36_7 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken, string)", file="JTokenReader.cs", label="_initialPath = initialPath", span="63-63"];
m36_8 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken, string)", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken, string)", span="60-60"];
m36_21 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", span="146-146"];
m36_55 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="JToken firstChild = c.First", span="148-148"];
m36_57 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="return SetEnd(c);", span="151-151"];
m36_60 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="_parent = c", span="157-157"];
m36_56 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="firstChild == null", span="149-149"];
m36_58 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="SetToken(firstChild)", span="155-155"];
m36_59 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="_current = firstChild", span="156-156"];
m36_61 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="return true;", span="158-158"];
m36_62 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", span="146-146"];
m36_35 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadToEnd()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.ReadToEnd()", span="122-122"];
m36_37 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadToEnd()", file="JTokenReader.cs", label="_current = null", span="124-124"];
m36_38 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadToEnd()", file="JTokenReader.cs", label="SetToken(JsonToken.None)", span="125-125"];
m36_39 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadToEnd()", file="JTokenReader.cs", label="return false;", span="126-126"];
m36_40 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadToEnd()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.ReadToEnd()", span="122-122"];
m36_71 [cluster="System.Nullable<T>.GetValueOrDefault()", file="JTokenReader.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m36_9 [cluster="Newtonsoft.Json.Linq.JTokenReader.Read()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.Read()", span="72-72"];
m36_10 [cluster="Newtonsoft.Json.Linq.JTokenReader.Read()", file="JTokenReader.cs", label="CurrentState != State.Start", span="74-74"];
m36_11 [cluster="Newtonsoft.Json.Linq.JTokenReader.Read()", file="JTokenReader.cs", label="_current == null", span="76-76"];
m36_17 [cluster="Newtonsoft.Json.Linq.JTokenReader.Read()", file="JTokenReader.cs", label="_current = _root", span="92-92"];
m36_12 [cluster="Newtonsoft.Json.Linq.JTokenReader.Read()", file="JTokenReader.cs", label="return false;", span="78-78"];
m36_13 [cluster="Newtonsoft.Json.Linq.JTokenReader.Read()", file="JTokenReader.cs", label="JContainer container = _current as JContainer", span="81-81"];
m36_14 [cluster="Newtonsoft.Json.Linq.JTokenReader.Read()", file="JTokenReader.cs", label="container != null && _parent != container", span="82-82"];
m36_15 [cluster="Newtonsoft.Json.Linq.JTokenReader.Read()", file="JTokenReader.cs", label="return ReadInto(container);", span="84-84"];
m36_16 [cluster="Newtonsoft.Json.Linq.JTokenReader.Read()", file="JTokenReader.cs", label="return ReadOver(_current);", span="88-88"];
m36_18 [cluster="Newtonsoft.Json.Linq.JTokenReader.Read()", file="JTokenReader.cs", label="SetToken(_current)", span="93-93"];
m36_19 [cluster="Newtonsoft.Json.Linq.JTokenReader.Read()", file="JTokenReader.cs", label="return true;", span="94-94"];
m36_20 [cluster="Newtonsoft.Json.Linq.JTokenReader.Read()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.Read()", span="72-72"];
m36_112 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="955-955"];
m36_4 [cluster="Unk.nameof", file="JTokenReader.cs", label="Entry Unk.nameof", span=""];
m36_0 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="52-52"];
m36_1 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="ValidationUtils.ArgumentNotNull(token, nameof(token))", span="54-54"];
m36_2 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="_root = token", span="56-56"];
m36_3 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="52-52"];
m36_36 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", span="162-162"];
m36_63 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="JsonToken? endToken = GetEndToken(c)", span="164-164"];
m36_66 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="_current = c", span="168-168"];
m36_67 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="_parent = c", span="169-169"];
m36_69 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="return ReadOver(c);", span="174-174"];
m36_64 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="endToken != null", span="165-165"];
m36_65 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="SetToken(endToken.GetValueOrDefault())", span="167-167"];
m36_68 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="return true;", span="170-170"];
m36_70 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", span="162-162"];
m36_23 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", span="178-178"];
m36_72 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="token.Type", span="180-180"];
m36_78 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="SetToken(JsonToken.StartConstructor, ((JConstructor)token).Name)", span="189-189"];
m36_80 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="SetToken(JsonToken.PropertyName, ((JProperty)token).Name)", span="192-192"];
m36_82 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="SetToken(JsonToken.Comment, ((JValue)token).Value)", span="195-195"];
m36_84 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="SetToken(JsonToken.Integer, ((JValue)token).Value)", span="198-198"];
m36_86 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="SetToken(JsonToken.Float, ((JValue)token).Value)", span="201-201"];
m36_88 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="SetToken(JsonToken.String, ((JValue)token).Value)", span="204-204"];
m36_90 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="SetToken(JsonToken.Boolean, ((JValue)token).Value)", span="207-207"];
m36_92 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="SetToken(JsonToken.Null, ((JValue)token).Value)", span="210-210"];
m36_94 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="SetToken(JsonToken.Undefined, ((JValue)token).Value)", span="213-213"];
m36_96 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="SetToken(JsonToken.Date, ((JValue)token).Value)", span="216-216"];
m36_98 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="SetToken(JsonToken.Raw, ((JValue)token).Value)", span="219-219"];
m36_100 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="SetToken(JsonToken.Bytes, ((JValue)token).Value)", span="222-222"];
m36_102 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="SetToken(JsonToken.String, SafeToString(((JValue)token).Value))", span="225-225"];
m36_104 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="object v = ((JValue)token).Value", span="228-228"];
m36_109 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="SetToken(JsonToken.String, SafeToString(((JValue)token).Value))", span="239-239"];
m36_110 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''Type'', token.Type, ''Unexpected JTokenType.'');", span="242-242"];
m36_73 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="JTokenType.Object", span="182-182"];
m36_75 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="JTokenType.Array", span="185-185"];
m36_77 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="JTokenType.Constructor", span="188-188"];
m36_79 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="JTokenType.Property", span="191-191"];
m36_81 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="JTokenType.Comment", span="194-194"];
m36_83 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="JTokenType.Integer", span="197-197"];
m36_85 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="JTokenType.Float", span="200-200"];
m36_87 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="JTokenType.String", span="203-203"];
m36_89 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="JTokenType.Boolean", span="206-206"];
m36_91 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="JTokenType.Null", span="209-209"];
m36_93 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="JTokenType.Undefined", span="212-212"];
m36_95 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="JTokenType.Date", span="215-215"];
m36_97 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="JTokenType.Raw", span="218-218"];
m36_99 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="JTokenType.Bytes", span="221-221"];
m36_101 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="JTokenType.Guid", span="224-224"];
m36_103 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="JTokenType.Uri", span="227-227"];
m36_108 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="JTokenType.TimeSpan", span="238-238"];
m36_74 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="SetToken(JsonToken.StartObject)", span="183-183"];
m36_76 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="SetToken(JsonToken.StartArray)", span="186-186"];
m36_111 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", span="178-178"];
m36_124 [file="JTokenReader.cs", label="Newtonsoft.Json.Linq.JTokenReader", span=""];
m37_701 [cluster="System.Guid.Guid(string)", file="JTokenWriter.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m37_341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalAsync()", span="583-583"];
m37_345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="590-590"];
m37_347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="593-593"];
m37_349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="596-596"];
m37_350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="597-597"];
m37_353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="601-601"];
m37_351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(-79228162514264300000000000000m, d)", span="598-598"];
m37_343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="587-587"];
m37_344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="589-589"];
m37_346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="592-592"];
m37_352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="600-600"];
m37_348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalAsync()", file="JTokenWriter.cs", label="decimal? d = await reader.ReadAsDecimalAsync()", span="595-595"];
m37_342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalAsync()", file="JTokenWriter.cs", label="string json = @''{''''decimal'''':-7.92281625142643E+28}''", span="585-585"];
m37_354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalAsync()", span="583-583"];
m37_479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", span="816-816"];
m37_483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="823-823"];
m37_485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="826-826"];
m37_486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(1, await reader.ReadAsInt32Async())", span="828-828"];
m37_487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="829-829"];
m37_488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(2, await reader.ReadAsInt32Async())", span="831-831"];
m37_489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="832-832"];
m37_490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''three'', await reader.ReadAsStringAsync())", span="834-834"];
m37_491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="835-835"];
m37_492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''four'', await reader.ReadAsStringAsync())", span="837-837"];
m37_493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="838-838"];
m37_494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(null, await reader.ReadAsStringAsync())", span="840-840"];
m37_495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="841-841"];
m37_496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(null, await reader.ReadAsInt32Async())", span="843-843"];
m37_497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="844-844"];
m37_498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(3.99m, await reader.ReadAsDecimalAsync())", span="846-846"];
m37_499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="847-847"];
m37_500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(1.1m, await reader.ReadAsDecimalAsync())", span="849-849"];
m37_501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="850-850"];
m37_503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="853-853"];
m37_505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="856-856"];
m37_507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="859-859"];
m37_508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(null, await reader.ReadAsInt32Async())", span="861-861"];
m37_509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="862-862"];
m37_481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="820-820"];
m37_482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="822-822"];
m37_484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="825-825"];
m37_504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="855-855"];
m37_506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="858-858"];
m37_502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="CollectionAssert.AreEquivalent(new byte[0], await reader.ReadAsBytesAsync())", span="852-852"];
m37_480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="string json = @''/*comment*/[/*comment*/1/*comment*/,2,/*comment*//*comment*/''''three''''/*comment*/,''''four''''/*comment*/,null,/*comment*/null,3.99,1.1/*comment*/,''/*comment*/]/*comment*/''", span="818-818"];
m37_510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValueCommentsAsync()", span="816-816"];
m37_267 [cluster="System.TimeSpan.FromMinutes(double)", file="JTokenWriter.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m37_70 [cluster="Unk.IsNull", file="JTokenWriter.cs", label="Entry Unk.IsNull", span=""];
m37_62 [cluster="System.Convert.ToBase64String(byte[])", file="JTokenWriter.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m37_513 [cluster="System.Text.UTF8Encoding.UTF8Encoding(bool)", file="JTokenWriter.cs", label="Entry System.Text.UTF8Encoding.UTF8Encoding(bool)", span="0-0"];
m37_300 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JTokenWriter.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m37_268 [cluster="System.TimeSpan.Add(System.TimeSpan)", file="JTokenWriter.cs", label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0"];
m37_45 [cluster="Unk.IsTrue", file="JTokenWriter.cs", label="Entry Unk.IsTrue", span=""];
m37_741 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="404-404"];
m37_553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", span="930-930"];
m37_557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(1, reader.LineNumber)", span="942-942"];
m37_559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="945-945"];
m37_560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[0]'', reader.Path)", span="946-946"];
m37_562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="949-949"];
m37_563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[1]'', reader.Path)", span="950-950"];
m37_565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="953-953"];
m37_566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[2]'', reader.Path)", span="954-954"];
m37_568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="957-957"];
m37_569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[3]'', reader.Path)", span="958-958"];
m37_571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(6, reader.LineNumber)", span="961-961"];
m37_572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(string.Empty, reader.Path)", span="962-962"];
m37_555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="939-939"];
m37_556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="await reader.ReadAsync()", span="941-941"];
m37_570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="await reader.ReadAsync()", span="960-960"];
m37_573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="Assert.IsFalse(await reader.ReadAsync())", span="964-964"];
m37_558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="await reader.ReadAsInt32Async()", span="944-944"];
m37_561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="await reader.ReadAsInt32Async()", span="948-948"];
m37_564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="await reader.ReadAsInt32Async()", span="952-952"];
m37_567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="await reader.ReadAsInt32Async()", span="956-956"];
m37_554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="932-937"];
m37_574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullIntLineNumberAndPositionAsync()", span="930-930"];
m37_116 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JTokenWriter.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m37_659 [cluster="System.Net.Sockets.TcpListener.TcpListener(System.Net.IPAddress, int)", file="JTokenWriter.cs", label="Entry System.Net.Sockets.TcpListener.TcpListener(System.Net.IPAddress, int)", span="0-0"];
m37_512 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonTextReaderTests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonTextReaderTests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="44-44"];
m37_419 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_BooleanAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_BooleanAsync()", span="732-732"];
m37_424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_BooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''false'', s)", span="740-740"];
m37_420 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_BooleanAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''{\''Test1\'':false}''))", span="734-734"];
m37_421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_BooleanAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="736-736"];
m37_422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_BooleanAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="737-737"];
m37_425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_BooleanAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="742-742"];
m37_426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_BooleanAsync()", file="JTokenWriter.cs", label="Assert.IsFalse(await reader.ReadAsync())", span="743-743"];
m37_423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_BooleanAsync()", file="JTokenWriter.cs", label="string s = await reader.ReadAsStringAsync()", span="739-739"];
m37_427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_BooleanAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_BooleanAsync()", span="732-732"];
m37_478 [cluster="Unk.ReadAsDateTimeAsync", file="JTokenWriter.cs", label="Entry Unk.ReadAsDateTimeAsync", span=""];
m37_380 [cluster="System.DateTime.DateTime(long)", file="JTokenWriter.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m37_740 [cluster="Unk.Parse", file="JTokenWriter.cs", label="Entry Unk.Parse", span=""];
m37_647 [cluster="System.Threading.EventWaitHandle.Set()", file="JTokenWriter.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m37_184 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesNoContentAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesNoContentAsync()", span="348-348"];
m37_187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesNoContentAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="353-353"];
m37_185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesNoContentAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="350-350"];
m37_186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesNoContentAsync()", file="JTokenWriter.cs", label="Assert.IsNull(await reader.ReadAsBytesAsync())", span="352-352"];
m37_188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesNoContentAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesNoContentAsync()", span="348-348"];
m37_858 [cluster="System.IO.StringWriter.ToString()", file="JTokenWriter.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m37_1051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.MinimalOverridesDerivedJsonReader.MinimalOverridesDerivedJsonReader()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.MinimalOverridesDerivedJsonReader.MinimalOverridesDerivedJsonReader()", span="1643-1643"];
m37_773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", span="1266-1266"];
m37_777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.None)", span="1284-1284"];
m37_778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(0, jsonReader.LineNumber)", span="1285-1285"];
m37_779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(0, jsonReader.LinePosition)", span="1286-1286"];
m37_781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartObject)", span="1289-1289"];
m37_782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(1, jsonReader.LineNumber)", span="1290-1290"];
m37_783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(1, jsonReader.LinePosition)", span="1291-1291"];
m37_785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="1294-1294"];
m37_786 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(jsonReader.Value, ''CPU'')", span="1295-1295"];
m37_787 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="1296-1296"];
m37_788 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(6, jsonReader.LinePosition)", span="1297-1297"];
m37_790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.String, jsonReader.TokenType)", span="1300-1300"];
m37_791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''Intel'', jsonReader.Value)", span="1301-1301"];
m37_792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="1302-1302"];
m37_793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(14, jsonReader.LinePosition)", span="1303-1303"];
m37_795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="1306-1306"];
m37_796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(jsonReader.Value, ''Drives'')", span="1307-1307"];
m37_797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="1308-1308"];
m37_798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(9, jsonReader.LinePosition)", span="1309-1309"];
m37_800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="1312-1312"];
m37_801 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="1313-1313"];
m37_802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(11, jsonReader.LinePosition)", span="1314-1314"];
m37_804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="1317-1317"];
m37_805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(jsonReader.Value, ''DVD read/writer'')", span="1318-1318"];
m37_806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '\'')", span="1319-1319"];
m37_807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(4, jsonReader.LineNumber)", span="1320-1320"];
m37_808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(21, jsonReader.LinePosition)", span="1321-1321"];
m37_810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="1324-1324"];
m37_811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(jsonReader.Value, ''500 gigabyte hard drive'')", span="1325-1325"];
m37_812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '''')", span="1326-1326"];
m37_813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(5, jsonReader.LineNumber)", span="1327-1327"];
m37_814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(29, jsonReader.LinePosition)", span="1328-1328"];
m37_816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="1331-1331"];
m37_817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(6, jsonReader.LineNumber)", span="1332-1332"];
m37_818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(3, jsonReader.LinePosition)", span="1333-1333"];
m37_820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndObject)", span="1336-1336"];
m37_821 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(7, jsonReader.LineNumber)", span="1337-1337"];
m37_822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(1, jsonReader.LinePosition)", span="1338-1338"];
m37_776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="1278-1278"];
m37_775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="StringReader sr = new StringReader(input)", span="1276-1276"];
m37_780 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="await jsonReader.ReadAsync()", span="1288-1288"];
m37_784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="await jsonReader.ReadAsync()", span="1293-1293"];
m37_789 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="await jsonReader.ReadAsync()", span="1299-1299"];
m37_794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="await jsonReader.ReadAsync()", span="1305-1305"];
m37_799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="await jsonReader.ReadAsync()", span="1311-1311"];
m37_803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="await jsonReader.ReadAsync()", span="1316-1316"];
m37_809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="await jsonReader.ReadAsync()", span="1323-1323"];
m37_815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="await jsonReader.ReadAsync()", span="1330-1330"];
m37_819 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="await jsonReader.ReadAsync()", span="1335-1335"];
m37_823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Assert.IsFalse(await jsonReader.ReadAsync())", span="1340-1340"];
m37_774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="1268-1274"];
m37_824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingIndentedAsync()", span="1266-1266"];
m37_396 [cluster="Unk.ReadAsDoubleAsync", file="JTokenWriter.cs", label="Entry Unk.ReadAsDoubleAsync", span=""];
m37_1019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NoOverridesDerivedJsonTextAsync.NoOverridesDerivedJsonTextAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NoOverridesDerivedJsonTextAsync.NoOverridesDerivedJsonTextAsync()", span="1637-1637"];
m37_1020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NoOverridesDerivedJsonTextAsync.NoOverridesDerivedJsonTextAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NoOverridesDerivedJsonTextAsync.NoOverridesDerivedJsonTextAsync()", span="1637-1637"];
m37_453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", span="783-783"];
m37_458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[0]'', reader.Path)", span="791-791"];
m37_460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[1]'', reader.Path)", span="793-793"];
m37_462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[2]'', reader.Path)", span="795-795"];
m37_464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[3]'', reader.Path)", span="797-797"];
m37_466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[4]'', reader.Path)", span="799-799"];
m37_468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[5]'', reader.Path)", span="801-801"];
m37_470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[6]'', reader.Path)", span="803-803"];
m37_472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="806-806"];
m37_474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="809-809"];
m37_476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="812-812"];
m37_455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="787-787"];
m37_456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="await reader.ReadAsync()", span="789-789"];
m37_457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="await reader.ReadAsInt32Async()", span="790-790"];
m37_459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="await reader.ReadAsDecimalAsync()", span="792-792"];
m37_461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="await reader.ReadAsDateTimeAsync()", span="794-794"];
m37_463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="await reader.ReadAsDateTimeOffsetAsync()", span="796-796"];
m37_465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="await reader.ReadAsStringAsync()", span="798-798"];
m37_467 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="await reader.ReadAsBytesAsync()", span="800-800"];
m37_469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="await reader.ReadAsDoubleAsync()", span="802-802"];
m37_471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="Assert.IsNull(await reader.ReadAsStringAsync())", span="805-805"];
m37_473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="Assert.IsNull(await reader.ReadAsStringAsync())", span="808-808"];
m37_475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="Assert.IsNull(await reader.ReadAsBytesAsync())", span="811-811"];
m37_454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="string json = @''['','','','','','','']''", span="785-785"];
m37_477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadValue_EmptyString_PositionAsync()", span="783-783"];
m37_1023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnTextReaderSubclass()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnTextReaderSubclass()", span="1649-1649"];
m37_1028 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnTextReaderSubclass()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsync(token).IsCanceled)", span="1656-1656"];
m37_1029 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnTextReaderSubclass()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsBooleanAsync(token).IsCanceled)", span="1657-1657"];
m37_1030 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnTextReaderSubclass()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsBytesAsync(token).IsCanceled)", span="1658-1658"];
m37_1031 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnTextReaderSubclass()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsDateTimeAsync(token).IsCanceled)", span="1659-1659"];
m37_1032 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnTextReaderSubclass()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsDateTimeOffsetAsync(token).IsCanceled)", span="1660-1660"];
m37_1033 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnTextReaderSubclass()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsDecimalAsync(token).IsCanceled)", span="1661-1661"];
m37_1034 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnTextReaderSubclass()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsInt32Async(token).IsCanceled)", span="1662-1662"];
m37_1035 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnTextReaderSubclass()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsStringAsync(token).IsCanceled)", span="1663-1663"];
m37_1025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnTextReaderSubclass()", file="JTokenWriter.cs", label="CancellationToken token = source.Token", span="1652-1652"];
m37_1027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnTextReaderSubclass()", file="JTokenWriter.cs", label="JsonTextReader reader = new NoOverridesDerivedJsonTextAsync()", span="1655-1655"];
m37_1024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnTextReaderSubclass()", file="JTokenWriter.cs", label="CancellationTokenSource source = new CancellationTokenSource()", span="1651-1651"];
m37_1026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnTextReaderSubclass()", file="JTokenWriter.cs", label="source.Cancel()", span="1653-1653"];
m37_1036 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnTextReaderSubclass()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnTextReaderSubclass()", span="1649-1649"];
m37_690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytes_Base64AndGuidAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytes_Base64AndGuidAsync()", span="1130-1130"];
m37_694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytes_Base64AndGuidAsync()", file="JTokenWriter.cs", label="CollectionAssert.AreEqual(expected, data)", span="1136-1136"];
m37_698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytes_Base64AndGuidAsync()", file="JTokenWriter.cs", label="CollectionAssert.AreEqual(expected, data)", span="1142-1142"];
m37_691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytes_Base64AndGuidAsync()", file="JTokenWriter.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader('''AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'''))", span="1132-1132"];
m37_695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytes_Base64AndGuidAsync()", file="JTokenWriter.cs", label="jsonTextReader = new JsonTextReader(new StringReader('''AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'''))", span="1138-1138"];
m37_692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytes_Base64AndGuidAsync()", file="JTokenWriter.cs", label="byte[] data = await jsonTextReader.ReadAsBytesAsync()", span="1133-1133"];
m37_693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytes_Base64AndGuidAsync()", file="JTokenWriter.cs", label="byte[] expected = Convert.FromBase64String(''AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'')", span="1134-1134"];
m37_696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytes_Base64AndGuidAsync()", file="JTokenWriter.cs", label="data = await jsonTextReader.ReadAsBytesAsync()", span="1139-1139"];
m37_697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytes_Base64AndGuidAsync()", file="JTokenWriter.cs", label="expected = new Guid(''AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'').ToByteArray()", span="1140-1140"];
m37_699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytes_Base64AndGuidAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytes_Base64AndGuidAsync()", span="1130-1130"];
m37_575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", span="968-968"];
m37_580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(false, reader.Value)", span="977-977"];
m37_582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="980-980"];
m37_583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(true, reader.Value)", span="981-981"];
m37_585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="984-984"];
m37_586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(true, reader.Value)", span="985-985"];
m37_588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="988-988"];
m37_589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(false, reader.Value)", span="989-989"];
m37_591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="992-992"];
m37_592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''test!'', reader.Value)", span="993-993"];
m37_594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="996-996"];
m37_595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(1.11d, reader.Value)", span="997-997"];
m37_597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="1000-1000"];
m37_598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(0d, reader.Value)", span="1001-1001"];
m37_600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="1004-1004"];
m37_601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(0d, reader.Value)", span="1005-1005"];
m37_603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="1008-1008"];
m37_604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="1009-1009"];
m37_606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="1012-1012"];
m37_607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="1013-1013"];
m37_609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="1016-1016"];
m37_610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="1017-1017"];
m37_612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1020-1020"];
m37_613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(reader.Value, ''Purple\r \n monkey's:\tdishwasher'')", span="1021-1021"];
m37_577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="972-972"];
m37_578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="974-974"];
m37_579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="976-976"];
m37_581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="979-979"];
m37_584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="983-983"];
m37_587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="987-987"];
m37_590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="991-991"];
m37_593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="995-995"];
m37_596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="999-999"];
m37_599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1003-1003"];
m37_602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1007-1007"];
m37_605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1011-1011"];
m37_608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1015-1015"];
m37_611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1019-1019"];
m37_614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1023-1023"];
m37_576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="string json = ''[false, true, true, false, 'test!', 1.11, 0e-10, 0E-10, 0.25e-5, 0.3e10, 6.0221418e23, 'Purple\\r \\n monkey\\'s:\\tdishwasher']''", span="970-970"];
m37_615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingFromSlowStreamAsync()", span="968-968"];
m37_178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalNoContentAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalNoContentAsync()", span="339-339"];
m37_181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalNoContentAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="344-344"];
m37_179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalNoContentAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="341-341"];
m37_180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalNoContentAsync()", file="JTokenWriter.cs", label="Assert.IsNull(await reader.ReadAsDecimalAsync())", span="343-343"];
m37_182 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalNoContentAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalNoContentAsync()", span="339-339"];
m37_428 [cluster="Unk.ReadAsStringAsync", file="JTokenWriter.cs", label="Entry Unk.ReadAsStringAsync", span=""];
m37_700 [cluster="System.Convert.FromBase64String(string)", file="JTokenWriter.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m37_756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadConstructorAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadConstructorAsync()", span="1240-1240"];
m37_762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadConstructorAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="1249-1249"];
m37_763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadConstructorAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="1250-1250"];
m37_765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadConstructorAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(0L, reader.Value)", span="1253-1253"];
m37_767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadConstructorAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''hi'', reader.Value)", span="1256-1256"];
m37_769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadConstructorAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="1259-1259"];
m37_771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadConstructorAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''MemberConverter'', reader.Value)", span="1262-1262"];
m37_758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadConstructorAsync()", file="JTokenWriter.cs", label="JsonReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1244-1244"];
m37_759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadConstructorAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1246-1246"];
m37_760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadConstructorAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1247-1247"];
m37_761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadConstructorAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1248-1248"];
m37_764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadConstructorAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1252-1252"];
m37_766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadConstructorAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1255-1255"];
m37_768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadConstructorAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1258-1258"];
m37_770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadConstructorAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1261-1261"];
m37_757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadConstructorAsync()", file="JTokenWriter.cs", label="string json = @''{''''DefaultConverter'''':new Date(0, ''''hi''''),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}''", span="1242-1242"];
m37_772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadConstructorAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadConstructorAsync()", span="1240-1240"];
m37_661 [cluster="System.Net.Sockets.TcpListener.Start()", file="JTokenWriter.cs", label="Entry System.Net.Sockets.TcpListener.Start()", span="0-0"];
m37_643 [cluster="System.Net.Sockets.NetworkStream.NetworkStream(System.Net.Sockets.Socket)", file="JTokenWriter.cs", label="Entry System.Net.Sockets.NetworkStream.NetworkStream(System.Net.Sockets.Socket)", span="0-0"];
m37_94 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadHexidecimalWithAllLettersAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadHexidecimalWithAllLettersAsync()", span="218-218"];
m37_98 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadHexidecimalWithAllLettersAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="225-225"];
m37_100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadHexidecimalWithAllLettersAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="228-228"];
m37_102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadHexidecimalWithAllLettersAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="231-231"];
m37_103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadHexidecimalWithAllLettersAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(11806310474565, reader.Value)", span="232-232"];
m37_105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadHexidecimalWithAllLettersAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="235-235"];
m37_96 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadHexidecimalWithAllLettersAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="222-222"];
m37_97 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadHexidecimalWithAllLettersAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="224-224"];
m37_99 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadHexidecimalWithAllLettersAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="227-227"];
m37_101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadHexidecimalWithAllLettersAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="230-230"];
m37_104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadHexidecimalWithAllLettersAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="234-234"];
m37_95 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadHexidecimalWithAllLettersAsync()", file="JTokenWriter.cs", label="string json = @''{''''text'''':0xabcdef12345}''", span="220-220"];
m37_106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadHexidecimalWithAllLettersAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadHexidecimalWithAllLettersAsync()", span="218-218"];
m37_664 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JTokenWriter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m37_641 [cluster="System.Net.Sockets.Socket.Socket(System.Net.Sockets.AddressFamily, System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType)", file="JTokenWriter.cs", label="Entry System.Net.Sockets.Socket.Socket(System.Net.Sockets.AddressFamily, System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType)", span="0-0"];
m37_945 [cluster="System.IO.StringReader.ReadLine()", file="JTokenWriter.cs", label="Entry System.IO.StringReader.ReadLine()", span="0-0"];
m37_284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetUnitedStatesDateAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetUnitedStatesDateAsync()", span="495-495"];
m37_289 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetUnitedStatesDateAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="503-503"];
m37_291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetUnitedStatesDateAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="506-506"];
m37_293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetUnitedStatesDateAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="509-509"];
m37_294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetUnitedStatesDateAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="510-510"];
m37_298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetUnitedStatesDateAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="516-516"];
m37_296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetUnitedStatesDateAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="513-513"];
m37_286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetUnitedStatesDateAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="499-499"];
m37_288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetUnitedStatesDateAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="502-502"];
m37_290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetUnitedStatesDateAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="505-505"];
m37_297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetUnitedStatesDateAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="515-515"];
m37_292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetUnitedStatesDateAsync()", file="JTokenWriter.cs", label="await reader.ReadAsDateTimeOffsetAsync()", span="508-508"];
m37_295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetUnitedStatesDateAsync()", file="JTokenWriter.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="512-512"];
m37_285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetUnitedStatesDateAsync()", file="JTokenWriter.cs", label="string json = @''{''''Offset'''':''''1/30/2011''''}''", span="497-497"];
m37_287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetUnitedStatesDateAsync()", file="JTokenWriter.cs", label="reader.Culture = new CultureInfo(''en-US'')", span="500-500"];
m37_299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetUnitedStatesDateAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetUnitedStatesDateAsync()", span="495-495"];
m37_93 [cluster="Unk.IsFalse", file="JTokenWriter.cs", label="Entry Unk.IsFalse", span=""];
m37_663 [cluster="System.Linq.Enumerable.Repeat<TResult>(TResult, int)", file="JTokenWriter.cs", label="Entry System.Linq.Enumerable.Repeat<TResult>(TResult, int)", span="0-0"];
m37_392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_NullAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_NullAsync()", span="688-688"];
m37_394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_NullAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(null, await reader.ReadAsDoubleAsync())", span="691-691"];
m37_393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_NullAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''null''))", span="690-690"];
m37_395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_NullAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_NullAsync()", span="688-688"];
m37_135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", span="279-279"];
m37_139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="285-285"];
m37_141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="288-288"];
m37_142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", file="JTokenWriter.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="289-289"];
m37_143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", file="JTokenWriter.cs", label="Assert.AreEqual(250L, (long)jsonReader.Value)", span="290-290"];
m37_145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="293-293"];
m37_146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", file="JTokenWriter.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="294-294"];
m37_147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", file="JTokenWriter.cs", label="Assert.AreEqual(250L, (long)jsonReader.Value)", span="295-295"];
m37_149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="298-298"];
m37_150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", file="JTokenWriter.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="299-299"];
m37_151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", file="JTokenWriter.cs", label="Assert.AreEqual(250L, (long)jsonReader.Value)", span="300-300"];
m37_153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="303-303"];
m37_137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", file="JTokenWriter.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="282-282"];
m37_136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", file="JTokenWriter.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="281-281"];
m37_138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonReader.ReadAsync())", span="284-284"];
m37_140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", file="JTokenWriter.cs", label="await jsonReader.ReadAsync()", span="287-287"];
m37_144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", file="JTokenWriter.cs", label="await jsonReader.ReadAsync()", span="292-292"];
m37_148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", file="JTokenWriter.cs", label="await jsonReader.ReadAsync()", span="297-297"];
m37_152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonReader.ReadAsync())", span="302-302"];
m37_154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", file="JTokenWriter.cs", label="Assert.IsFalse(await jsonReader.ReadAsync())", span="305-305"];
m37_155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt64Async()", span="279-279"];
m37_514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", span="866-866"];
m37_518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="879-879"];
m37_520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="882-882"];
m37_522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="885-885"];
m37_524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="888-888"];
m37_525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="889-889"];
m37_527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="892-892"];
m37_529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="895-895"];
m37_530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(true, reader.Value)", span="896-896"];
m37_532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="899-899"];
m37_534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="902-902"];
m37_536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="905-905"];
m37_537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="906-906"];
m37_539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="909-909"];
m37_541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="912-912"];
m37_542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="913-913"];
m37_543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="914-914"];
m37_545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="917-917"];
m37_547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="920-920"];
m37_549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="923-923"];
m37_551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="926-926"];
m37_516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="876-876"];
m37_517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="878-878"];
m37_519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="881-881"];
m37_521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="884-884"];
m37_523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="887-887"];
m37_526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="891-891"];
m37_528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="894-894"];
m37_531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="898-898"];
m37_533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="901-901"];
m37_535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="904-904"];
m37_538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="908-908"];
m37_540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="911-911"];
m37_544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="916-916"];
m37_546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="919-919"];
m37_548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="922-922"];
m37_550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="925-925"];
m37_515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="string json = @''/*comment*/{/*comment*/Name:/*comment*/true/*comment*/,/*comment*/\r\n        ''''ExpiryDate'''':/*comment*/new\r\n'' + StringUtils.LineFeed + @''Date\r\n(/*comment*/null/*comment*/),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''':/*comment*/[/*comment*/\r\n          ''''Small''''/*comment*/]/*comment*/}/*comment*/''", span="868-874"];
m37_552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadContentDelimitedByCommentsAsync()", span="866-866"];
m37_946 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInArrayAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInArrayAsync()", span="1514-1514"];
m37_951 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInArrayAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1521-1521"];
m37_953 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInArrayAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1523-1523"];
m37_956 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInArrayAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1526-1526"];
m37_958 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInArrayAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1528-1528"];
m37_949 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInArrayAsync()", file="JTokenWriter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[1,''' + Convert.ToBase64String(helloWorldData) + @''']''))", span="1519-1519"];
m37_950 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInArrayAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1520-1520"];
m37_952 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInArrayAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1522-1522"];
m37_957 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInArrayAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1527-1527"];
m37_959 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInArrayAsync()", file="JTokenWriter.cs", label="Assert.IsFalse(await reader.ReadAsync())", span="1530-1530"];
m37_954 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInArrayAsync()", file="JTokenWriter.cs", label="byte[] data = await reader.ReadAsBytesAsync()", span="1524-1524"];
m37_955 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInArrayAsync()", file="JTokenWriter.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1525-1525"];
m37_948 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInArrayAsync()", file="JTokenWriter.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1517-1517"];
m37_947 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInArrayAsync()", file="JTokenWriter.cs", label="string helloWorld = ''Hello world!''", span="1516-1516"];
m37_960 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInArrayAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInArrayAsync()", span="1514-1514"];
m37_409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_FailureAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_FailureAsync()", span="716-716"];
m37_413 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_FailureAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(1d, await reader.ReadAsDoubleAsync())", span="727-727"];
m37_410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_FailureAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''['Trump',1]''))", span="718-718"];
m37_411 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_FailureAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="720-720"];
m37_414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_FailureAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="728-728"];
m37_412 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_FailureAsync()", file="JTokenWriter.cs", label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () =>\r\n            {\r\n                await reader.ReadAsDoubleAsync();\r\n            }, ''Could not convert string to double: Trump. Path '[0]', line 1, position 8.'')", span="722-725"];
m37_415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_FailureAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_FailureAsync()", span="716-716"];
m37_895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesNoStartWithUnexpectedEndAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesNoStartWithUnexpectedEndAsync()", span="1439-1439"];
m37_899 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesNoStartWithUnexpectedEndAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1445-1445"];
m37_896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesNoStartWithUnexpectedEndAsync()", file="JTokenWriter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[  ''))", span="1441-1441"];
m37_897 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesNoStartWithUnexpectedEndAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1442-1442"];
m37_898 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesNoStartWithUnexpectedEndAsync()", file="JTokenWriter.cs", label="Assert.IsNull(await reader.ReadAsBytesAsync())", span="1444-1444"];
m37_900 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesNoStartWithUnexpectedEndAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesNoStartWithUnexpectedEndAsync()", span="1439-1439"];
m37_405 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_AllowThousandsAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_AllowThousandsAsync()", span="709-709"];
m37_407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_AllowThousandsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(1112.34d, await reader.ReadAsDoubleAsync())", span="712-712"];
m37_406 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_AllowThousandsAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader('''1,112.34'''))", span="711-711"];
m37_408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_AllowThousandsAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_AllowThousandsAsync()", span="709-709"];
m37_429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.Read_Boolean_FailureAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.Read_Boolean_FailureAsync()", span="747-747"];
m37_430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.Read_Boolean_FailureAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''{\''Test1\'':false1}''))", span="749-749"];
m37_431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.Read_Boolean_FailureAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="751-751"];
m37_432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.Read_Boolean_FailureAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="752-752"];
m37_434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.Read_Boolean_FailureAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="759-759"];
m37_435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.Read_Boolean_FailureAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="760-760"];
m37_436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.Read_Boolean_FailureAsync()", file="JTokenWriter.cs", label="Assert.IsFalse(await reader.ReadAsync())", span="761-761"];
m37_433 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.Read_Boolean_FailureAsync()", file="JTokenWriter.cs", label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () =>\r\n            {\r\n                await reader.ReadAsync();\r\n            }, ''Error parsing boolean value. Path 'Test1', line 1, position 14.'')", span="754-757"];
m37_437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.Read_Boolean_FailureAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.Read_Boolean_FailureAsync()", span="747-747"];
m37_42 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="75-75"];
m37_642 [cluster="System.Net.Sockets.Socket.Connect(string, int)", file="JTokenWriter.cs", label="Entry System.Net.Sockets.Socket.Connect(string, int)", span="0-0"];
m37_1018 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="JTokenWriter.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m37_1003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelled()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelled()", span="1618-1618"];
m37_1007 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelled()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(Stream.Null))", span="1624-1624"];
m37_1008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelled()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsync(token).IsCanceled)", span="1625-1625"];
m37_1009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelled()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsBooleanAsync(token).IsCanceled)", span="1626-1626"];
m37_1010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelled()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsBytesAsync(token).IsCanceled)", span="1627-1627"];
m37_1011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelled()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsDateTimeAsync(token).IsCanceled)", span="1628-1628"];
m37_1012 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelled()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsDateTimeOffsetAsync(token).IsCanceled)", span="1629-1629"];
m37_1013 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelled()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsDecimalAsync(token).IsCanceled)", span="1630-1630"];
m37_1014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelled()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsInt32Async(token).IsCanceled)", span="1631-1631"];
m37_1015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelled()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsStringAsync(token).IsCanceled)", span="1632-1632"];
m37_1006 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelled()", file="JTokenWriter.cs", label="source.Cancel()", span="1622-1622"];
m37_1005 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelled()", file="JTokenWriter.cs", label="CancellationToken token = source.Token", span="1621-1621"];
m37_1004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelled()", file="JTokenWriter.cs", label="CancellationTokenSource source = new CancellationTokenSource()", span="1620-1620"];
m37_1016 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelled()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelled()", span="1618-1618"];
m37_44 [cluster="Unk.ReadAsync", file="JTokenWriter.cs", label="Entry Unk.ReadAsync", span=""];
m37_47 [cluster="Unk.ReadAsBooleanAsync", file="JTokenWriter.cs", label="Entry Unk.ReadAsBooleanAsync", span=""];
m37_825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongStringAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongStringAsync()", span="1345-1345"];
m37_829 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongStringAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(s, reader.Value)", span="1351-1351"];
m37_827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongStringAsync()", file="JTokenWriter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(''''' + s + '''''))", span="1348-1348"];
m37_828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongStringAsync()", file="JTokenWriter.cs", label="await reader.ReadAsync()", span="1349-1349"];
m37_826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongStringAsync()", file="JTokenWriter.cs", label="string s = new string('a', 10000)", span="1347-1347"];
m37_830 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongStringAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongStringAsync()", span="1345-1345"];
m37_0 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", span="60-60"];
m37_4 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual('''', reader.Path)", span="88-88"];
m37_5 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(true, await reader.ReadAsBooleanAsync())", span="90-90"];
m37_6 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[0]'', reader.Path)", span="91-91"];
m37_7 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(false, await reader.ReadAsBooleanAsync())", span="93-93"];
m37_8 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[1]'', reader.Path)", span="94-94"];
m37_9 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(true, await reader.ReadAsBooleanAsync())", span="96-96"];
m37_10 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[2]'', reader.Path)", span="97-97"];
m37_11 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(false, await reader.ReadAsBooleanAsync())", span="99-99"];
m37_12 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[3]'', reader.Path)", span="100-100"];
m37_13 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(true, await reader.ReadAsBooleanAsync())", span="102-102"];
m37_14 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[4]'', reader.Path)", span="103-103"];
m37_15 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(true, await reader.ReadAsBooleanAsync())", span="105-105"];
m37_16 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[5]'', reader.Path)", span="106-106"];
m37_17 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(true, await reader.ReadAsBooleanAsync())", span="108-108"];
m37_18 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[6]'', reader.Path)", span="109-109"];
m37_19 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(true, await reader.ReadAsBooleanAsync())", span="111-111"];
m37_20 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[7]'', reader.Path)", span="112-112"];
m37_21 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(true, await reader.ReadAsBooleanAsync())", span="114-114"];
m37_22 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[8]'', reader.Path)", span="115-115"];
m37_23 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(true, await reader.ReadAsBooleanAsync())", span="117-117"];
m37_24 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[9]'', reader.Path)", span="118-118"];
m37_25 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(true, await reader.ReadAsBooleanAsync())", span="120-120"];
m37_26 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[10]'', reader.Path)", span="121-121"];
m37_27 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(false, await reader.ReadAsBooleanAsync())", span="123-123"];
m37_28 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[11]'', reader.Path)", span="124-124"];
m37_29 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(false, await reader.ReadAsBooleanAsync())", span="126-126"];
m37_30 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[12]'', reader.Path)", span="127-127"];
m37_31 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(null, await reader.ReadAsBooleanAsync())", span="129-129"];
m37_32 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[13]'', reader.Path)", span="130-130"];
m37_33 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(null, await reader.ReadAsBooleanAsync())", span="132-132"];
m37_34 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''[14]'', reader.Path)", span="133-133"];
m37_35 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(null, await reader.ReadAsBooleanAsync())", span="135-135"];
m37_36 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="136-136"];
m37_37 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual('''', reader.Path)", span="137-137"];
m37_38 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(null, await reader.ReadAsBooleanAsync())", span="139-139"];
m37_39 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="140-140"];
m37_40 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.AreEqual('''', reader.Path)", span="141-141"];
m37_2 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="82-82"];
m37_3 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="87-87"];
m37_1 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="string json = @''[\r\n  1,\r\n  0,\r\n  1.1,\r\n  0.0,\r\n  0.000000000001,\r\n  9999999999,\r\n  -9999999999,\r\n  9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  -9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  'true',\r\n  'TRUE',\r\n  'false',\r\n  'FALSE',\r\n  // comment!\r\n  /* comment! */\r\n  '',\r\n  null\r\n]''", span="62-80"];
m37_41 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanAsync()", span="60-60"];
m37_235 [cluster="Unk.>", file="JTokenWriter.cs", label="Entry Unk.>", span=""];
m37_269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetIsoDateAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetIsoDateAsync()", span="473-473"];
m37_281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetIsoDateAsync()", color=green, community=0, file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", prediction=28, span="491-491"];
m37_271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetIsoDateAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="477-477"];
m37_280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetIsoDateAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="490-490"];
m37_270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetIsoDateAsync()", file="JTokenWriter.cs", label="string json = @''{''''Offset'''':''''2011-08-01T21:25Z''''}''", span="475-475"];
m37_272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetIsoDateAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="479-479"];
m37_273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetIsoDateAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="480-480"];
m37_274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetIsoDateAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="482-482"];
m37_275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetIsoDateAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="483-483"];
m37_276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetIsoDateAsync()", file="JTokenWriter.cs", label="await reader.ReadAsDateTimeOffsetAsync()", span="485-485"];
m37_277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetIsoDateAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="486-486"];
m37_278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetIsoDateAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="487-487"];
m37_279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetIsoDateAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2011, 8, 1, 21, 25, 0, DateTimeKind.Utc), TimeSpan.Zero), reader.Value)", span="488-488"];
m37_282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetIsoDateAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetIsoDateAsync()", span="473-473"];
m37_194 [cluster="Unk.ReadAsDateTimeOffsetAsync", file="JTokenWriter.cs", label="Entry Unk.ReadAsDateTimeOffsetAsync", span=""];
m37_644 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream, System.Text.Encoding, bool)", file="JTokenWriter.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream, System.Text.Encoding, bool)", span="0-0"];
m37_616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", span="1029-1029"];
m37_629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="var jsonTextReader = new JsonTextReader(sr)", span="1065-1065"];
m37_630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="await jsonTextReader.ReadAsync()", span="1067-1067"];
m37_628 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="var sr = new StreamReader(stream, new UTF8Encoding(), false)", span="1064-1064"];
m37_634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="Console.WriteLine($''{i} - {jsonTextReader.TokenType} - {jsonTextReader.Value}'')", span="1076-1076"];
m37_631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="i++", span="1069-1069"];
m37_635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="clientReceivedEvent.Set()", span="1083-1083"];
m37_626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="var stream = new NetworkStream(socket)", span="1061-1061"];
m37_627 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="int i = 0", span="1063-1063"];
m37_632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="i == 193", span="1071-1071"];
m37_633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="string s = string.Empty", span="1073-1073"];
m37_620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="var clientReceivedEvent = new ManualResetEvent(false)", span="1035-1035"];
m37_636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="Console.WriteLine(''Done'')", span="1085-1085"];
m37_625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="socket.Connect(''127.0.0.1'', port)", span="1059-1059"];
m37_623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="var socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp)", span="1057-1057"];
m37_619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="var serverStartedEvent = new ManualResetEvent(false)", span="1034-1034"];
m37_621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="ThreadPool.QueueUserWorkItem(work =>\r\n            {\r\n                var server = new TcpListener(IPAddress.Parse(''0.0.0.0''), port);\r\n                server.Start();\r\n\r\n                serverStartedEvent.Set();\r\n\r\n                var serverSocket = server.AcceptSocket();\r\n\r\n                var jsonString = ''[\r\n'' + String.Join('','', Enumerable.Repeat(''  \''testdata\''\r\n'', jsonArrayElementsCount).ToArray()) + '']'';\r\n                var bytes = new UTF8Encoding().GetBytes(jsonString);\r\n                serverSocket.Send(bytes);\r\n                Console.WriteLine(''server send: '' + bytes.Length);\r\n\r\n                clientReceivedEvent.WaitOne();\r\n\r\n            })", span="1037-1053"];
m37_617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="int port = 11999", span="1031-1031"];
m37_624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="socket.Blocking = false", span="1058-1058"];
m37_622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="serverStartedEvent.WaitOne()", span="1055-1055"];
m37_618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="int jsonArrayElementsCount = 193", span="1032-1032"];
m37_637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadFromNetworkStreamAsync()", span="1029-1029"];
m37_667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", span="1090-1090"];
m37_671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="1102-1102"];
m37_673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="1105-1105"];
m37_675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonTextReader.TokenType)", span="1108-1108"];
m37_677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="1111-1111"];
m37_678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''src'', jsonTextReader.Value)", span="1112-1112"];
m37_680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Comment, jsonTextReader.TokenType)", span="1115-1115"];
m37_681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(@'''''''', jsonTextReader.Value)", span="1116-1116"];
m37_683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="1119-1119"];
m37_684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''test'', jsonTextReader.Value)", span="1120-1120"];
m37_686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", span="1123-1123"];
m37_688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="1126-1126"];
m37_669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="1100-1100"];
m37_670 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="1101-1101"];
m37_672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="1104-1104"];
m37_674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="1107-1107"];
m37_676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="1110-1110"];
m37_679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="1114-1114"];
m37_682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="1118-1118"];
m37_685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="1122-1122"];
m37_687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="1125-1125"];
m37_668 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="string json = @''{\r\n    ''''projects'''': [\r\n        ''''src'''',\r\n        //''''\r\n        ''''test''''\r\n    ]\r\n}''", span="1092-1098"];
m37_689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadCommentInsideArrayAsync()", span="1090-1090"];
m37_1037 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnReaderSubclass()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnReaderSubclass()", span="1667-1667"];
m37_1042 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnReaderSubclass()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsync(token).IsCanceled)", span="1674-1674"];
m37_1043 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnReaderSubclass()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsBooleanAsync(token).IsCanceled)", span="1675-1675"];
m37_1044 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnReaderSubclass()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsBytesAsync(token).IsCanceled)", span="1676-1676"];
m37_1045 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnReaderSubclass()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsDateTimeAsync(token).IsCanceled)", span="1677-1677"];
m37_1046 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnReaderSubclass()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsDateTimeOffsetAsync(token).IsCanceled)", span="1678-1678"];
m37_1047 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnReaderSubclass()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsDecimalAsync(token).IsCanceled)", span="1679-1679"];
m37_1048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnReaderSubclass()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsInt32Async(token).IsCanceled)", span="1680-1680"];
m37_1049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnReaderSubclass()", file="JTokenWriter.cs", label="Assert.IsTrue(reader.ReadAsStringAsync(token).IsCanceled)", span="1681-1681"];
m37_1039 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnReaderSubclass()", file="JTokenWriter.cs", label="CancellationToken token = source.Token", span="1670-1670"];
m37_1041 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnReaderSubclass()", file="JTokenWriter.cs", label="JsonReader reader = new MinimalOverridesDerivedJsonReader()", span="1673-1673"];
m37_1038 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnReaderSubclass()", file="JTokenWriter.cs", label="CancellationTokenSource source = new CancellationTokenSource()", span="1669-1669"];
m37_1040 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnReaderSubclass()", file="JTokenWriter.cs", label="source.Cancel()", span="1671-1671"];
m37_1050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnReaderSubclass()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.AsyncMethodsAlreadyCancelledOnReaderSubclass()", span="1667-1667"];
m37_78 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadUnicodeAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadUnicodeAsync()", span="191-191"];
m37_82 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadUnicodeAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="201-201"];
m37_84 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadUnicodeAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="204-204"];
m37_85 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadUnicodeAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''Message'', reader.Value)", span="205-205"];
m37_87 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadUnicodeAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="208-208"];
m37_88 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadUnicodeAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(@''Hi,I'' + '\u0092' + ''ve send you smth'', reader.Value)", span="209-209"];
m37_90 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadUnicodeAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="212-212"];
m37_80 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadUnicodeAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="195-195"];
m37_81 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadUnicodeAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="200-200"];
m37_83 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadUnicodeAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="203-203"];
m37_86 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadUnicodeAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="207-207"];
m37_89 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadUnicodeAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="211-211"];
m37_91 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadUnicodeAsync()", file="JTokenWriter.cs", label="Assert.IsFalse(await reader.ReadAsync())", span="214-214"];
m37_79 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadUnicodeAsync()", file="JTokenWriter.cs", label="string json = @''{''''Message'''':''''Hi,I\u0092ve send you smth''''}''", span="193-193"];
m37_92 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadUnicodeAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadUnicodeAsync()", span="191-191"];
m37_856 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="461-461"];
m37_638 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="JTokenWriter.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m37_645 [cluster="System.Text.UTF8Encoding.UTF8Encoding()", file="JTokenWriter.cs", label="Entry System.Text.UTF8Encoding.UTF8Encoding()", span="0-0"];
m37_212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNegativeAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNegativeAsync()", span="388-388"];
m37_216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNegativeAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="395-395"];
m37_218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNegativeAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="398-398"];
m37_220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNegativeAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="401-401"];
m37_221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNegativeAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="402-402"];
m37_222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNegativeAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6)), reader.Value)", span="403-403"];
m37_224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNegativeAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="406-406"];
m37_214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNegativeAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="392-392"];
m37_215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNegativeAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="394-394"];
m37_217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNegativeAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="397-397"];
m37_223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNegativeAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="405-405"];
m37_219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNegativeAsync()", file="JTokenWriter.cs", label="await reader.ReadAsDateTimeOffsetAsync()", span="400-400"];
m37_213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNegativeAsync()", file="JTokenWriter.cs", label="string json = @''{''''Offset'''':''''\/Date(946706400000-0600)\/''''}''", span="390-390"];
m37_225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNegativeAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNegativeAsync()", span="388-388"];
m37_660 [cluster="System.Net.IPAddress.Parse(string)", file="JTokenWriter.cs", label="Entry System.Net.IPAddress.Parse(string)", span="0-0"];
m37_239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetHoursOnlyAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetHoursOnlyAsync()", span="429-429"];
m37_243 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetHoursOnlyAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="436-436"];
m37_245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetHoursOnlyAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="439-439"];
m37_247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetHoursOnlyAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="442-442"];
m37_248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetHoursOnlyAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="443-443"];
m37_249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetHoursOnlyAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="444-444"];
m37_251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetHoursOnlyAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="447-447"];
m37_241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetHoursOnlyAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="433-433"];
m37_242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetHoursOnlyAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="435-435"];
m37_244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetHoursOnlyAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="438-438"];
m37_250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetHoursOnlyAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="446-446"];
m37_246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetHoursOnlyAsync()", file="JTokenWriter.cs", label="await reader.ReadAsDateTimeOffsetAsync()", span="441-441"];
m37_240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetHoursOnlyAsync()", file="JTokenWriter.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+06)\\/\''}''", span="431-431"];
m37_252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetHoursOnlyAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetHoursOnlyAsync()", span="429-429"];
m37_646 [cluster="System.Console.WriteLine(string)", file="JTokenWriter.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m37_640 [cluster="System.Threading.WaitHandle.WaitOne()", file="JTokenWriter.cs", label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m37_381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnEndCommentAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnEndCommentAsync()", span="658-658"];
m37_389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnEndCommentAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="682-682"];
m37_383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnEndCommentAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="671-671"];
m37_386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnEndCommentAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="678-678"];
m37_388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnEndCommentAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="681-681"];
m37_390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnEndCommentAsync()", file="JTokenWriter.cs", label="Assert.IsFalse(await reader.ReadAsync())", span="684-684"];
m37_382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnEndCommentAsync()", file="JTokenWriter.cs", label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="660-669"];
m37_384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnEndCommentAsync()", file="JTokenWriter.cs", label="int i = 0", span="676-676"];
m37_385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnEndCommentAsync()", file="JTokenWriter.cs", label="i < 26", span="676-676"];
m37_387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnEndCommentAsync()", file="JTokenWriter.cs", label="i++", span="676-676"];
m37_391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnEndCommentAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnEndCommentAsync()", span="658-658"];
m37_46 [cluster="Unk.AreEqual", file="JTokenWriter.cs", label="Entry Unk.AreEqual", span=""];
m37_1017 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="JTokenWriter.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m37_901 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", span="1449-1449"];
m37_913 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(newLinesText + ''name1'' + newLinesText, reader.Value)", span="1468-1468"];
m37_928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(newLinesText + ''blah comment'' + newLinesText, reader.Value)", span="1488-1488"];
m37_910 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="1464-1464"];
m37_912 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(31, reader.LineNumber)", span="1467-1467"];
m37_915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(37, reader.LineNumber)", span="1471-1471"];
m37_917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(55, reader.LineNumber)", span="1474-1474"];
m37_918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="1475-1475"];
m37_919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="1476-1476"];
m37_921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(61, reader.LineNumber)", span="1479-1479"];
m37_922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(1L, reader.Value)", span="1480-1480"];
m37_924 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(73, reader.LineNumber)", span="1483-1483"];
m37_925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(null, reader.Value)", span="1484-1484"];
m37_927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(91, reader.LineNumber)", span="1487-1487"];
m37_930 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(97, reader.LineNumber)", span="1491-1491"];
m37_932 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(109, reader.LineNumber)", span="1494-1494"];
m37_934 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(115, reader.LineNumber)", span="1497-1497"];
m37_936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(133, reader.LineNumber)", span="1500-1500"];
m37_937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''name2'', reader.Value)", span="1501-1501"];
m37_939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(139, reader.LineNumber)", span="1504-1504"];
m37_941 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(145, reader.LineNumber)", span="1507-1507"];
m37_943 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(151, reader.LineNumber)", span="1510-1510"];
m37_908 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1462-1462"];
m37_905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="StringReader sr = new StringReader(newLinesText)", span="1456-1456"];
m37_909 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1463-1463"];
m37_911 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1466-1466"];
m37_914 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1470-1470"];
m37_916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1473-1473"];
m37_920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1478-1478"];
m37_923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1482-1482"];
m37_926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1486-1486"];
m37_929 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1490-1490"];
m37_931 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1493-1493"];
m37_933 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1496-1496"];
m37_935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1499-1499"];
m37_938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1503-1503"];
m37_940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1506-1506"];
m37_942 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1509-1509"];
m37_902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="string newLinesText = StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed + StringUtils.LineFeed + StringUtils.CarriageReturnLineFeed + '' '' + StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed", span="1451-1451"];
m37_903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="string json = newLinesText + ''{'' + newLinesText + ''''' + newLinesText + ''name1'' + newLinesText + ''''' + newLinesText + '':'' + newLinesText + ''['' + newLinesText + ''new'' + newLinesText + ''Date'' + newLinesText + ''('' + newLinesText + ''1'' + newLinesText + '','' + newLinesText + ''null'' + newLinesText + ''/*'' + newLinesText + ''blah comment'' + newLinesText + ''*/'' + newLinesText + '')'' + newLinesText + '','' + newLinesText + ''1.1111'' + newLinesText + '']'' + newLinesText + '','' + newLinesText + ''name2'' + newLinesText + '':'' + newLinesText + ''{'' + newLinesText + ''}'' + newLinesText + ''}'' + newLinesText", span="1453-1453"];
m37_906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="sr.ReadLine() != null", span="1457-1457"];
m37_904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="int count = 0", span="1455-1455"];
m37_907 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="count++", span="1459-1459"];
m37_944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNewLinesAsync()", span="1449-1449"];
m37_64 [cluster="Unk.AreEquivalent", file="JTokenWriter.cs", label="Entry Unk.AreEquivalent", span=""];
m37_210 [cluster="System.DateTime.DateTime(int, int, int)", file="JTokenWriter.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m37_115 [cluster="Unk.IsNotNull", file="JTokenWriter.cs", label="Entry Unk.IsNotNull", span=""];
m37_370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnControlCharAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnControlCharAsync()", span="628-628"];
m37_378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnControlCharAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(new DateTime(631136448000000000), reader.Value)", span="654-654"];
m37_372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnControlCharAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="643-643"];
m37_375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnControlCharAsync()", file="JTokenWriter.cs", label="await reader.ReadAsync()", span="650-650"];
m37_377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnControlCharAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="653-653"];
m37_371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnControlCharAsync()", file="JTokenWriter.cs", label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="630-641"];
m37_373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnControlCharAsync()", file="JTokenWriter.cs", label="int i = 0", span="648-648"];
m37_374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnControlCharAsync()", file="JTokenWriter.cs", label="i < 13", span="648-648"];
m37_376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnControlCharAsync()", file="JTokenWriter.cs", label="i++", span="648-648"];
m37_379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnControlCharAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBufferOnControlCharAsync()", span="628-628"];
m37_857 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="442-442"];
m37_711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadMultilineStringAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadMultilineStringAsync()", span="1159-1159"];
m37_715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadMultilineStringAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="1168-1168"];
m37_716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadMultilineStringAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(@''first line\r\nsecond line\r\nthird line'', jsonTextReader.Value)", span="1170-1172"];
m37_713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadMultilineStringAsync()", file="JTokenWriter.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="1165-1165"];
m37_714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadMultilineStringAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="1167-1167"];
m37_712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadMultilineStringAsync()", file="JTokenWriter.cs", label="string json = @''''''first line\r\nsecond line\r\nthird line''''''", span="1161-1163"];
m37_717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadMultilineStringAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadMultilineStringAsync()", span="1159-1159"];
m37_854 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149"];
m37_226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetBadStringAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetBadStringAsync()", span="410-410"];
m37_230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetBadStringAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="417-417"];
m37_232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetBadStringAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="420-420"];
m37_228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetBadStringAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="414-414"];
m37_229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetBadStringAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="416-416"];
m37_231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetBadStringAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="419-419"];
m37_233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetBadStringAsync()", file="JTokenWriter.cs", label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () =>\r\n            {\r\n                await reader.ReadAsDateTimeOffsetAsync();\r\n            }, ''Could not convert string to DateTimeOffset: blablahbla. Path 'Offset', line 1, position 22.'')", span="422-425"];
m37_227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetBadStringAsync()", file="JTokenWriter.cs", label="string json = @''{''''Offset'''':''''blablahbla''''}''", span="412-412"];
m37_234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetBadStringAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetBadStringAsync()", span="410-410"];
m37_648 [cluster="lambda expression", file="JTokenWriter.cs", label="Entry lambda expression", span="1037-1053"];
m37_439 [cluster="lambda expression", file="JTokenWriter.cs", label="await reader.ReadAsync()", span="756-756"];
m37_237 [cluster="lambda expression", file="JTokenWriter.cs", label="await reader.ReadAsDateTimeOffsetAsync()", span="424-424"];
m37_339 [cluster="lambda expression", file="JTokenWriter.cs", label="await reader.ReadAsInt32Async()", span="578-578"];
m37_417 [cluster="lambda expression", file="JTokenWriter.cs", label="await reader.ReadAsDoubleAsync()", span="724-724"];
m37_451 [cluster="lambda expression", file="JTokenWriter.cs", label="await reader.ReadAsStringAsync()", span="774-774"];
m37_438 [cluster="lambda expression", file="JTokenWriter.cs", label="Entry lambda expression", span="754-757"];
m37_440 [cluster="lambda expression", file="JTokenWriter.cs", label="Exit lambda expression", span="754-757"];
m37_236 [cluster="lambda expression", file="JTokenWriter.cs", label="Entry lambda expression", span="422-425"];
m37_338 [cluster="lambda expression", file="JTokenWriter.cs", label="Entry lambda expression", span="576-579"];
m37_416 [cluster="lambda expression", file="JTokenWriter.cs", label="Entry lambda expression", span="722-725"];
m37_238 [cluster="lambda expression", file="JTokenWriter.cs", label="Exit lambda expression", span="422-425"];
m37_340 [cluster="lambda expression", file="JTokenWriter.cs", label="Exit lambda expression", span="576-579"];
m37_418 [cluster="lambda expression", file="JTokenWriter.cs", label="Exit lambda expression", span="722-725"];
m37_450 [cluster="lambda expression", file="JTokenWriter.cs", label="Entry lambda expression", span="772-775"];
m37_452 [cluster="lambda expression", file="JTokenWriter.cs", label="Exit lambda expression", span="772-775"];
m37_654 [cluster="lambda expression", file="JTokenWriter.cs", label="var bytes = new UTF8Encoding().GetBytes(jsonString)", span="1047-1047"];
m37_656 [cluster="lambda expression", file="JTokenWriter.cs", label="Console.WriteLine(''server send: '' + bytes.Length)", span="1049-1049"];
m37_657 [cluster="lambda expression", file="JTokenWriter.cs", label="clientReceivedEvent.WaitOne()", span="1051-1051"];
m37_651 [cluster="lambda expression", file="JTokenWriter.cs", label="serverStartedEvent.Set()", span="1042-1042"];
m37_653 [cluster="lambda expression", file="JTokenWriter.cs", label="var jsonString = ''[\r\n'' + String.Join('','', Enumerable.Repeat(''  \''testdata\''\r\n'', jsonArrayElementsCount).ToArray()) + '']''", span="1046-1046"];
m37_655 [cluster="lambda expression", file="JTokenWriter.cs", label="serverSocket.Send(bytes)", span="1048-1048"];
m37_650 [cluster="lambda expression", file="JTokenWriter.cs", label="server.Start()", span="1040-1040"];
m37_652 [cluster="lambda expression", file="JTokenWriter.cs", label="var serverSocket = server.AcceptSocket()", span="1044-1044"];
m37_649 [cluster="lambda expression", file="JTokenWriter.cs", label="var server = new TcpListener(IPAddress.Parse(''0.0.0.0''), port)", span="1039-1039"];
m37_658 [cluster="lambda expression", file="JTokenWriter.cs", label="Exit lambda expression", span="1037-1053"];
m37_65 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanNoContentAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanNoContentAsync()", span="171-171"];
m37_68 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanNoContentAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="176-176"];
m37_66 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanNoContentAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="173-173"];
m37_67 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanNoContentAsync()", file="JTokenWriter.cs", label="Assert.IsNull(await reader.ReadAsBooleanAsync())", span="175-175"];
m37_69 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanNoContentAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBooleanNoContentAsync()", span="171-171"];
m37_177 [cluster="Unk.ReadAsInt32Async", file="JTokenWriter.cs", label="Entry Unk.ReadAsInt32Async", span=""];
m37_117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsync()", span="252-252"];
m37_121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="258-258"];
m37_123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="261-261"];
m37_124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="262-262"];
m37_126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="265-265"];
m37_127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="266-266"];
m37_129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="269-269"];
m37_130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="270-270"];
m37_132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="273-273"];
m37_119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsync()", file="JTokenWriter.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="255-255"];
m37_118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsync()", file="JTokenWriter.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="254-254"];
m37_120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonReader.ReadAsync())", span="257-257"];
m37_122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonReader.ReadAsync())", span="260-260"];
m37_125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonReader.ReadAsync())", span="264-264"];
m37_128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonReader.ReadAsync())", span="268-268"];
m37_131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonReader.ReadAsync())", span="272-272"];
m37_133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsync()", file="JTokenWriter.cs", label="Assert.IsFalse(await jsonReader.ReadAsync())", span="275-275"];
m37_134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsync()", span="252-252"];
m37_441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_Boolean_FailureAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_Boolean_FailureAsync()", span="765-765"];
m37_442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_Boolean_FailureAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''{\''Test1\'':false1}''))", span="767-767"];
m37_443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_Boolean_FailureAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="769-769"];
m37_444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_Boolean_FailureAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="770-770"];
m37_446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_Boolean_FailureAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="777-777"];
m37_447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_Boolean_FailureAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="778-778"];
m37_448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_Boolean_FailureAsync()", file="JTokenWriter.cs", label="Assert.IsFalse(await reader.ReadAsync())", span="779-779"];
m37_445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_Boolean_FailureAsync()", file="JTokenWriter.cs", label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () =>\r\n            {\r\n                await reader.ReadAsStringAsync();\r\n            }, ''Unexpected character encountered while parsing value: 1. Path 'Test1', line 1, position 14.'')", span="772-775"];
m37_449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_Boolean_FailureAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsString_Boolean_FailureAsync()", span="765-765"];
m37_43 [cluster="System.IO.StringReader.StringReader(string)", file="JTokenWriter.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m37_253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetWithMinutesAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetWithMinutesAsync()", span="451-451"];
m37_257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetWithMinutesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="458-458"];
m37_259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetWithMinutesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="461-461"];
m37_261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetWithMinutesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="464-464"];
m37_262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetWithMinutesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="465-465"];
m37_263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetWithMinutesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31))), reader.Value)", span="466-466"];
m37_265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetWithMinutesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="469-469"];
m37_255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetWithMinutesAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="455-455"];
m37_256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetWithMinutesAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="457-457"];
m37_258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetWithMinutesAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="460-460"];
m37_264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetWithMinutesAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="468-468"];
m37_260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetWithMinutesAsync()", file="JTokenWriter.cs", label="await reader.ReadAsDateTimeOffsetAsync()", span="463-463"];
m37_254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetWithMinutesAsync()", file="JTokenWriter.cs", label="string json = @''{''''Offset'''':''''\/Date(946708260000-0631)\/''''}''", span="453-453"];
m37_266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetWithMinutesAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetWithMinutesAsync()", span="451-451"];
m37_209 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JTokenWriter.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m37_397 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_SuccessAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_SuccessAsync()", span="695-695"];
m37_399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_SuccessAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(12.34d, await reader.ReadAsDoubleAsync())", span="698-698"];
m37_398 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_SuccessAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader('''12.34'''))", span="697-697"];
m37_400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_SuccessAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_SuccessAsync()", span="695-695"];
m37_317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalIntAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalIntAsync()", span="545-545"];
m37_321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalIntAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="552-552"];
m37_323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalIntAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="555-555"];
m37_325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalIntAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="558-558"];
m37_326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalIntAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="559-559"];
m37_327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalIntAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(1m, reader.Value)", span="560-560"];
m37_319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalIntAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="549-549"];
m37_320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalIntAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="551-551"];
m37_322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalIntAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="554-554"];
m37_324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalIntAsync()", file="JTokenWriter.cs", label="await reader.ReadAsDecimalAsync()", span="557-557"];
m37_318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalIntAsync()", file="JTokenWriter.cs", label="string json = @''{''''Name'''':1}''", span="547-547"];
m37_328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalIntAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalIntAsync()", span="545-545"];
m37_211 [cluster="System.TimeSpan.FromHours(double)", file="JTokenWriter.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m37_859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", span="1383-1383"];
m37_863 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1389-1389"];
m37_865 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1392-1392"];
m37_867 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1395-1395"];
m37_869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1398-1398"];
m37_871 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1401-1401"];
m37_873 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="1404-1404"];
m37_875 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1407-1407"];
m37_877 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1410-1410"];
m37_879 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1413-1413"];
m37_881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1416-1416"];
m37_883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="1419-1419"];
m37_884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="1420-1420"];
m37_886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="1423-1423"];
m37_887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="1424-1424"];
m37_861 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1386-1386"];
m37_862 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1388-1388"];
m37_864 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1391-1391"];
m37_866 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1394-1394"];
m37_868 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1397-1397"];
m37_870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1400-1400"];
m37_872 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1403-1403"];
m37_874 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1406-1406"];
m37_876 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1409-1409"];
m37_878 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1412-1412"];
m37_880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1415-1415"];
m37_882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1418-1418"];
m37_885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1422-1422"];
m37_888 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Assert.IsFalse(await reader.ReadAsync())", span="1426-1426"];
m37_860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="string json = ''\0{\0'\0h\0i\0'\0:\0[\01\0,\0'\0'\0\0,\0null\0]\0,\0do\0:true\0}\0\0/*\0sd\0f\0*/\0/*\0sd\0f\0*/ \0''", span="1385-1385"];
m37_889 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.NullCharReadingAsync()", span="1383-1383"];
m37_665 [cluster="string.Join(string, params string[])", file="JTokenWriter.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m37_54 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesAsync()", span="157-157"];
m37_57 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="163-163"];
m37_56 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesAsync()", file="JTokenWriter.cs", label="string json = @'''''''' + Convert.ToBase64String(data) + @''''''''", span="161-161"];
m37_58 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesAsync()", file="JTokenWriter.cs", label="byte[] result = await reader.ReadAsBytesAsync()", span="165-165"];
m37_55 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesAsync()", file="JTokenWriter.cs", label="byte[] data = Encoding.UTF8.GetBytes(''Hello world'')", span="159-159"];
m37_59 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesAsync()", file="JTokenWriter.cs", label="CollectionAssert.AreEquivalent(data, result)", span="167-167"];
m37_60 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesAsync()", span="157-157"];
m37_961 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInObjectAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInObjectAsync()", span="1534-1534"];
m37_966 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInObjectAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1541-1541"];
m37_969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInObjectAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1544-1544"];
m37_973 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInObjectAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1548-1548"];
m37_975 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInObjectAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1550-1550"];
m37_964 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInObjectAsync()", file="JTokenWriter.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{num:1,data:''' + Convert.ToBase64String(helloWorldData) + @'''}''))", span="1539-1539"];
m37_965 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInObjectAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1540-1540"];
m37_967 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInObjectAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1542-1542"];
m37_968 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInObjectAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1543-1543"];
m37_970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInObjectAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1545-1545"];
m37_974 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInObjectAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1549-1549"];
m37_976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInObjectAsync()", file="JTokenWriter.cs", label="Assert.IsFalse(await reader.ReadAsync())", span="1552-1552"];
m37_972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInObjectAsync()", file="JTokenWriter.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1547-1547"];
m37_963 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInObjectAsync()", file="JTokenWriter.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1537-1537"];
m37_971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInObjectAsync()", file="JTokenWriter.cs", label="byte[] data = await reader.ReadAsBytesAsync()", span="1546-1546"];
m37_962 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInObjectAsync()", file="JTokenWriter.cs", label="string helloWorld = ''Hello world!''", span="1536-1536"];
m37_977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInObjectAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBytesFollowingNumberInObjectAsync()", span="1534-1534"];
m37_107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadSingleBytesAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadSingleBytesAsync()", span="239-239"];
m37_113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadSingleBytesAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''Hello world.'', text)", span="248-248"];
m37_109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadSingleBytesAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(s)", span="242-242"];
m37_108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadSingleBytesAsync()", file="JTokenWriter.cs", label="StringReader s = new StringReader(@''''''SGVsbG8gd29ybGQu'''''')", span="241-241"];
m37_112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadSingleBytesAsync()", file="JTokenWriter.cs", label="string text = Encoding.UTF8.GetString(data, 0, data.Length)", span="247-247"];
m37_110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadSingleBytesAsync()", file="JTokenWriter.cs", label="byte[] data = await reader.ReadAsBytesAsync()", span="244-244"];
m37_111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadSingleBytesAsync()", file="JTokenWriter.cs", label="Assert.IsNotNull(data)", span="245-245"];
m37_114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadSingleBytesAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadSingleBytesAsync()", span="239-239"];
m37_511 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JTokenWriter.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m37_718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", span="1177-1177"];
m37_722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="1187-1187"];
m37_724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="1190-1190"];
m37_726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="1193-1193"];
m37_728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="1196-1196"];
m37_730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="1199-1199"];
m37_731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(typeof(BigInteger), jsonTextReader.ValueType)", span="1200-1200"];
m37_732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(BigInteger.Parse(''333333333333333333333333333333333333333''), jsonTextReader.Value)", span="1201-1201"];
m37_734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="1204-1204"];
m37_738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(BigInteger.Parse(''333333333333333333333333333333333333333''), i)", span="1210-1210"];
m37_720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="1184-1184"];
m37_721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="1186-1186"];
m37_723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="1189-1189"];
m37_725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="1192-1192"];
m37_727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="1195-1195"];
m37_729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="1198-1198"];
m37_733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="1203-1203"];
m37_735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="Assert.IsFalse(await jsonTextReader.ReadAsync())", span="1206-1206"];
m37_737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="var i = (BigInteger)((JValue)o[''ChildId'']).Value", span="1209-1209"];
m37_719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333,\r\n}''", span="1179-1182"];
m37_736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="JObject o = JObject.Parse(json)", span="1208-1208"];
m37_739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBigIntegerAsync()", span="1177-1177"];
m37_71 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesIntegerArrayWithCommentsAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesIntegerArrayWithCommentsAsync()", span="180-180"];
m37_74 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesIntegerArrayWithCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(2, data.Length)", span="185-185"];
m37_75 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesIntegerArrayWithCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(1, data[0])", span="186-186"];
m37_76 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesIntegerArrayWithCommentsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(2, data[1])", span="187-187"];
m37_72 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesIntegerArrayWithCommentsAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[/*hi*/1/*hi*/,2/*hi*/]''))", span="182-182"];
m37_73 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesIntegerArrayWithCommentsAsync()", file="JTokenWriter.cs", label="byte[] data = await reader.ReadAsBytesAsync()", span="184-184"];
m37_77 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesIntegerArrayWithCommentsAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBytesIntegerArrayWithCommentsAsync()", span="180-180"];
m37_639 [cluster="System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)", file="JTokenWriter.cs", label="Entry System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)", span="0-0"];
m37_48 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBoolean_NullCharAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBoolean_NullCharAsync()", span="146-146"];
m37_51 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBoolean_NullCharAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(true, await reader.ReadAsBooleanAsync())", span="152-152"];
m37_52 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBoolean_NullCharAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(null, await reader.ReadAsBooleanAsync())", span="153-153"];
m37_50 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBoolean_NullCharAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="150-150"];
m37_49 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBoolean_NullCharAsync()", file="JTokenWriter.cs", label="string json = '\0' + @''true'' + '\0' + '\0'", span="148-148"];
m37_53 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBoolean_NullCharAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsBoolean_NullCharAsync()", span="146-146"];
m37_853 [cluster="System.IO.StringWriter.StringWriter()", file="JTokenWriter.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m37_63 [cluster="Unk.ReadAsBytesAsync", file="JTokenWriter.cs", label="Entry Unk.ReadAsBytesAsync", span=""];
m37_156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", span="309-309"];
m37_160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="315-315"];
m37_162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="318-318"];
m37_163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", file="JTokenWriter.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="319-319"];
m37_164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", file="JTokenWriter.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="320-320"];
m37_166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="323-323"];
m37_167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", file="JTokenWriter.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="324-324"];
m37_168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", file="JTokenWriter.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="325-325"];
m37_170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="328-328"];
m37_171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", file="JTokenWriter.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="329-329"];
m37_172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", file="JTokenWriter.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="330-330"];
m37_174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="333-333"];
m37_158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", file="JTokenWriter.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="312-312"];
m37_157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", file="JTokenWriter.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="311-311"];
m37_159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonReader.ReadAsync())", span="314-314"];
m37_173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonReader.ReadAsync())", span="332-332"];
m37_175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", file="JTokenWriter.cs", label="Assert.IsFalse(await jsonReader.ReadAsync())", span="335-335"];
m37_161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", file="JTokenWriter.cs", label="await jsonReader.ReadAsInt32Async()", span="317-317"];
m37_165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", file="JTokenWriter.cs", label="await jsonReader.ReadAsInt32Async()", span="322-322"];
m37_169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", file="JTokenWriter.cs", label="await jsonReader.ReadAsInt32Async()", span="327-327"];
m37_176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadOctalNumberAsInt32Async()", span="309-309"];
m37_401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_HexAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_HexAsync()", span="702-702"];
m37_403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_HexAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(3405691582d, await reader.ReadAsDoubleAsync())", span="705-705"];
m37_402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_HexAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''0XCAFEBABE''))", span="704-704"];
m37_404 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_HexAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDouble_HexAsync()", span="702-702"];
m37_978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", span="1556-1556"];
m37_982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1564-1564"];
m37_984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="1567-1567"];
m37_985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1568-1568"];
m37_987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="1571-1571"];
m37_988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1572-1572"];
m37_990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="1575-1575"];
m37_991 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''Purple\r \n monkey's:\tdishwasher'', jsonReader.Value)", span="1576-1576"];
m37_992 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual('\'', jsonReader.QuoteChar)", span="1577-1577"];
m37_993 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1578-1578"];
m37_995 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="1581-1581"];
m37_996 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1582-1582"];
m37_981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", file="JTokenWriter.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1562-1562"];
m37_980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", file="JTokenWriter.cs", label="StringReader sr = new StringReader(input)", span="1560-1560"];
m37_983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", file="JTokenWriter.cs", label="await jsonReader.ReadAsync()", span="1566-1566"];
m37_986 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", file="JTokenWriter.cs", label="await jsonReader.ReadAsync()", span="1570-1570"];
m37_989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", file="JTokenWriter.cs", label="await jsonReader.ReadAsync()", span="1574-1574"];
m37_994 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", file="JTokenWriter.cs", label="await jsonReader.ReadAsync()", span="1580-1580"];
m37_979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", file="JTokenWriter.cs", label="string input = ''{value:'Purple\\r \\n monkey\\'s:\\tdishwasher'}''", span="1558-1558"];
m37_997 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadingEscapedStringsAsync()", span="1556-1556"];
m37_831 [cluster="string.String(char, int)", file="JTokenWriter.cs", label="Entry string.String(char, int)", span="0-0"];
m37_355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalFrenchAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalFrenchAsync()", span="605-605"];
m37_360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalFrenchAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="613-613"];
m37_362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalFrenchAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="616-616"];
m37_364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalFrenchAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="619-619"];
m37_365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalFrenchAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="620-620"];
m37_368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalFrenchAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="624-624"];
m37_366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalFrenchAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(9.99m, d)", span="621-621"];
m37_357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalFrenchAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="609-609"];
m37_359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalFrenchAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="612-612"];
m37_361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalFrenchAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="615-615"];
m37_367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalFrenchAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="623-623"];
m37_363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalFrenchAsync()", file="JTokenWriter.cs", label="decimal? d = await reader.ReadAsDecimalAsync()", span="618-618"];
m37_356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalFrenchAsync()", file="JTokenWriter.cs", label="string json = @''{''''decimal'''':''''9,99''''}''", span="607-607"];
m37_358 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalFrenchAsync()", file="JTokenWriter.cs", label="reader.Culture = new CultureInfo(''fr-FR'')", span="610-610"];
m37_369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalFrenchAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDecimalFrenchAsync()", span="605-605"];
m37_301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNewZealandDateAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNewZealandDateAsync()", span="520-520"];
m37_306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNewZealandDateAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="528-528"];
m37_308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNewZealandDateAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="531-531"];
m37_310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNewZealandDateAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="534-534"];
m37_311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNewZealandDateAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="535-535"];
m37_315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNewZealandDateAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="541-541"];
m37_313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNewZealandDateAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="538-538"];
m37_303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNewZealandDateAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="524-524"];
m37_305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNewZealandDateAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="527-527"];
m37_307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNewZealandDateAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="530-530"];
m37_314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNewZealandDateAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="540-540"];
m37_309 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNewZealandDateAsync()", file="JTokenWriter.cs", label="await reader.ReadAsDateTimeOffsetAsync()", span="533-533"];
m37_312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNewZealandDateAsync()", file="JTokenWriter.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="537-537"];
m37_302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNewZealandDateAsync()", file="JTokenWriter.cs", label="string json = @''{''''Offset'''':''''30/1/2011''''}''", span="522-522"];
m37_304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNewZealandDateAsync()", file="JTokenWriter.cs", label="reader.Culture = new CultureInfo(''en-NZ'')", span="525-525"];
m37_316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNewZealandDateAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNewZealandDateAsync()", span="520-520"];
m37_702 [cluster="System.Guid.ToByteArray()", file="JTokenWriter.cs", label="Entry System.Guid.ToByteArray()", span="0-0"];
m37_890 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullTerminatorStringsAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullTerminatorStringsAsync()", span="1430-1430"];
m37_893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullTerminatorStringsAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(''h\0i'', reader.Value)", span="1435-1435"];
m37_891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullTerminatorStringsAsync()", file="JTokenWriter.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''h\0i'''))", span="1432-1432"];
m37_892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullTerminatorStringsAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1433-1433"];
m37_894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullTerminatorStringsAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadNullTerminatorStringsAsync()", span="1430-1430"];
m37_195 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetAsync()", span="366-366"];
m37_199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="373-373"];
m37_201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="376-376"];
m37_203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="379-379"];
m37_204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="380-380"];
m37_205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="381-381"];
m37_207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="384-384"];
m37_197 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="370-370"];
m37_198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="372-372"];
m37_200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="375-375"];
m37_206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="383-383"];
m37_202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetAsync()", file="JTokenWriter.cs", label="await reader.ReadAsDateTimeOffsetAsync()", span="378-378"];
m37_196 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetAsync()", file="JTokenWriter.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}''", span="368-368"];
m37_208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetAsync()", span="366-366"];
m37_742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBadMSDateAsStringAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBadMSDateAsStringAsync()", span="1215-1215"];
m37_746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBadMSDateAsStringAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="1224-1224"];
m37_748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBadMSDateAsStringAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="1227-1227"];
m37_750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBadMSDateAsStringAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="1230-1230"];
m37_751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBadMSDateAsStringAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(@''/Date(9467082_PIE_340000-0631)/'', jsonTextReader.Value)", span="1231-1231"];
m37_753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBadMSDateAsStringAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="1234-1234"];
m37_744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBadMSDateAsStringAsync()", file="JTokenWriter.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="1221-1221"];
m37_745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBadMSDateAsStringAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="1223-1223"];
m37_747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBadMSDateAsStringAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="1226-1226"];
m37_749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBadMSDateAsStringAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="1229-1229"];
m37_752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBadMSDateAsStringAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="1233-1233"];
m37_754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBadMSDateAsStringAsync()", file="JTokenWriter.cs", label="Assert.IsFalse(await jsonTextReader.ReadAsync())", span="1236-1236"];
m37_743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBadMSDateAsStringAsync()", file="JTokenWriter.cs", label="string json = @''{\r\n    ChildId: '\/Date(9467082_PIE_340000-0631)\/'\r\n}''", span="1217-1219"];
m37_755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBadMSDateAsStringAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadBadMSDateAsStringAsync()", span="1215-1215"];
m37_855 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="220-220"];
m37_703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadSingleQuoteInsideDoubleQuoteStringAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadSingleQuoteInsideDoubleQuoteStringAsync()", span="1146-1146"];
m37_709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadSingleQuoteInsideDoubleQuoteStringAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(@''Forest's Bakery And Cafe'', jsonTextReader.Value)", span="1155-1155"];
m37_705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadSingleQuoteInsideDoubleQuoteStringAsync()", file="JTokenWriter.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="1150-1150"];
m37_706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadSingleQuoteInsideDoubleQuoteStringAsync()", file="JTokenWriter.cs", label="await jsonTextReader.ReadAsync()", span="1151-1151"];
m37_707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadSingleQuoteInsideDoubleQuoteStringAsync()", file="JTokenWriter.cs", label="await jsonTextReader.ReadAsync()", span="1152-1152"];
m37_708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadSingleQuoteInsideDoubleQuoteStringAsync()", file="JTokenWriter.cs", label="await jsonTextReader.ReadAsync()", span="1153-1153"];
m37_704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadSingleQuoteInsideDoubleQuoteStringAsync()", file="JTokenWriter.cs", label="string json = @''{''''NameOfStore'''':''''Forest's Bakery And Cafe''''}''", span="1148-1148"];
m37_710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadSingleQuoteInsideDoubleQuoteStringAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadSingleQuoteInsideDoubleQuoteStringAsync()", span="1146-1146"];
m37_283 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JTokenWriter.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m37_329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsIntDecimalAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsIntDecimalAsync()", span="564-564"];
m37_333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsIntDecimalAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="571-571"];
m37_335 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsIntDecimalAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="574-574"];
m37_331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsIntDecimalAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="568-568"];
m37_332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsIntDecimalAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="570-570"];
m37_334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsIntDecimalAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="573-573"];
m37_336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsIntDecimalAsync()", file="JTokenWriter.cs", label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () =>\r\n            {\r\n                await reader.ReadAsInt32Async();\r\n            }, ''Input string '1.1' is not a valid integer. Path 'Name', line 1, position 12.'')", span="576-579"];
m37_330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsIntDecimalAsync()", file="JTokenWriter.cs", label="string json = @''{''''Name'''': 1.1}''", span="566-566"];
m37_337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsIntDecimalAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsIntDecimalAsync()", span="564-564"];
m37_189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNoContentAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNoContentAsync()", span="357-357"];
m37_192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNoContentAsync()", file="JTokenWriter.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="362-362"];
m37_190 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNoContentAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="359-359"];
m37_191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNoContentAsync()", file="JTokenWriter.cs", label="Assert.IsNull(await reader.ReadAsDateTimeOffsetAsync())", span="361-361"];
m37_193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNoContentAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadAsDateTimeOffsetNoContentAsync()", span="357-357"];
m37_662 [cluster="System.Net.Sockets.TcpListener.AcceptSocket()", file="JTokenWriter.cs", label="Entry System.Net.Sockets.TcpListener.AcceptSocket()", span="0-0"];
m37_998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadRandomJsonAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadRandomJsonAsync()", span="1587-1587"];
m37_1000 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadRandomJsonAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1611-1611"];
m37_1001 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadRandomJsonAsync()", file="JTokenWriter.cs", label="await reader.ReadAsync()", span="1612-1612"];
m37_999 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadRandomJsonAsync()", file="JTokenWriter.cs", label="string json = @''[\r\n  true,\r\n  {\r\n    ''''integer'''': 99,\r\n    ''''string'''': ''''how now brown cow?'''',\r\n    ''''array'''': [\r\n      0,\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      {\r\n        ''''decimal'''': 990.00990099\r\n      },\r\n      5\r\n    ]\r\n  },\r\n  ''''This is a string.'''',\r\n  null,\r\n  null\r\n]''", span="1589-1609"];
m37_1002 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadRandomJsonAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadRandomJsonAsync()", span="1587-1587"];
m37_61 [cluster="System.Text.Encoding.GetBytes(string)", file="JTokenWriter.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m37_666 [cluster="System.Net.Sockets.Socket.Send(byte[])", file="JTokenWriter.cs", label="Entry System.Net.Sockets.Socket.Send(byte[])", span="0-0"];
m37_832 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", span="1355-1355"];
m37_848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", file="JTokenWriter.cs", label="Assert.AreEqual((long)i, reader.Value)", span="1375-1375"];
m37_843 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", file="JTokenWriter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1370-1370"];
m37_844 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1371-1371"];
m37_847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1374-1374"];
m37_850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", file="JTokenWriter.cs", label="Assert.IsTrue(await reader.ReadAsync())", span="1378-1378"];
m37_851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", file="JTokenWriter.cs", label="Assert.IsFalse(await reader.ReadAsync())", span="1379-1379"];
m37_845 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", file="JTokenWriter.cs", label="int i = 0", span="1372-1372"];
m37_849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", file="JTokenWriter.cs", label="i++", span="1372-1372"];
m37_842 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", file="JTokenWriter.cs", label="string json = sw.ToString()", span="1368-1368"];
m37_846 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", file="JTokenWriter.cs", label="i < valueCount", span="1372-1372"];
m37_834 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", file="JTokenWriter.cs", label="StringWriter sw = new StringWriter()", span="1358-1358"];
m37_841 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", file="JTokenWriter.cs", label="writer.WriteEndArray()", span="1366-1366"];
m37_833 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", file="JTokenWriter.cs", label="int valueCount = 10000", span="1357-1357"];
m37_835 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", file="JTokenWriter.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1359-1359"];
m37_838 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", file="JTokenWriter.cs", label="i < valueCount", span="1361-1361"];
m37_836 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", file="JTokenWriter.cs", label="writer.WriteStartArray()", span="1360-1360"];
m37_839 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", file="JTokenWriter.cs", label="writer.WriteValue(i)", span="1363-1363"];
m37_837 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", file="JTokenWriter.cs", label="int i = 0", span="1361-1361"];
m37_840 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", file="JTokenWriter.cs", label="i++", span="1361-1361"];
m37_852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ReadAsyncTests.ReadLongJsonArrayAsync()", span="1355-1355"];
m37_183 [cluster="Unk.ReadAsDecimalAsync", file="JTokenWriter.cs", label="Entry Unk.ReadAsDecimalAsync", span=""];
m37_1055 [file="JTokenWriter.cs", label=reader, span=""];
m37_1052 [file="JTokenWriter.cs", label=reader, span=""];
m37_1053 [file="JTokenWriter.cs", label=reader, span=""];
m37_1054 [file="JTokenWriter.cs", label=reader, span=""];
m37_1056 [file="JTokenWriter.cs", label=reader, span=""];
m37_1060 [file="JTokenWriter.cs", label=clientReceivedEvent, span=""];
m37_1058 [file="JTokenWriter.cs", label=serverStartedEvent, span=""];
m37_1059 [file="JTokenWriter.cs", label=jsonArrayElementsCount, span=""];
m37_1057 [file="JTokenWriter.cs", label=port, span=""];
m38_0 [cluster="Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", span="46-46"];
m38_1 [cluster="Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", file="JValue.cs", label="_name = name", span="48-48"];
m38_2 [cluster="Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", file="JValue.cs", label="_value = value", span="49-49"];
m38_3 [cluster="Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", file="JValue.cs", label="Exit Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", span="46-46"];
m38_4 [file="JValue.cs", label="Newtonsoft.Json.Utilities.EnumValue<T>", span=""];
m40_271 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="QueryExpression.cs", label="member.MemberType()", span="564-564"];
m40_273 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="QueryExpression.cs", label="FieldInfo fieldInfo = (FieldInfo)member", span="567-567"];
m40_274 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="QueryExpression.cs", label=nonPublic, span="569-569"];
m40_280 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="QueryExpression.cs", label="PropertyInfo propertyInfo = (PropertyInfo)member", span="579-579"];
m40_283 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="QueryExpression.cs", label=nonPublic, span="585-585"];
m40_285 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="QueryExpression.cs", label="return (propertyInfo.GetGetMethod(nonPublic) != null);", span="589-589"];
m40_272 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="QueryExpression.cs", label="MemberTypes.Field", span="566-566"];
m40_279 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="QueryExpression.cs", label="MemberTypes.Property", span="578-578"];
m40_286 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="QueryExpression.cs", label="return false;", span="591-591"];
m40_276 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="QueryExpression.cs", label="fieldInfo.IsPublic", span="573-573"];
m40_275 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="QueryExpression.cs", label="return true;", span="571-571"];
m40_277 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="QueryExpression.cs", label="return true;", span="575-575"];
m40_278 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="QueryExpression.cs", label="return false;", span="577-577"];
m40_281 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="QueryExpression.cs", label="!propertyInfo.CanRead", span="581-581"];
m40_282 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="QueryExpression.cs", label="return false;", span="583-583"];
m40_284 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="QueryExpression.cs", label="return true;", span="587-587"];
m40_287 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="562-562"];
m40_382 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="QueryExpression.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m40_199 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", span="412-412"];
m40_200 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="QueryExpression.cs", label="ValidationUtils.ArgumentNotNull(dictionaryType, nameof(dictionaryType))", span="414-414"];
m40_202 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="QueryExpression.cs", label="ImplementsGenericDefinition(dictionaryType, typeof(IDictionary<,>), out genericDictionaryType)", span="417-417"];
m40_204 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="QueryExpression.cs", label="throw new Exception(''Type {0} is not a dictionary.''.FormatWith(CultureInfo.InvariantCulture, dictionaryType));", span="421-421"];
m40_209 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="QueryExpression.cs", label="typeof(IDictionary).IsAssignableFrom(dictionaryType)", span="430-430"];
m40_213 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="QueryExpression.cs", label="throw new Exception(''Type {0} is not a dictionary.''.FormatWith(CultureInfo.InvariantCulture, dictionaryType));", span="437-437"];
m40_201 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="QueryExpression.cs", label="Type genericDictionaryType", span="416-416"];
m40_203 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="QueryExpression.cs", label="genericDictionaryType.IsGenericTypeDefinition()", span="419-419"];
m40_205 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="QueryExpression.cs", label="Type[] dictionaryGenericArguments = genericDictionaryType.GetGenericArguments()", span="424-424"];
m40_206 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="QueryExpression.cs", label="keyType = dictionaryGenericArguments[0]", span="426-426"];
m40_207 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="QueryExpression.cs", label="valueType = dictionaryGenericArguments[1]", span="427-427"];
m40_208 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="QueryExpression.cs", label="return;", span="428-428"];
m40_210 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="QueryExpression.cs", label="keyType = null", span="432-432"];
m40_211 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="QueryExpression.cs", label="valueType = null", span="433-433"];
m40_212 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="QueryExpression.cs", label="return;", span="434-434"];
m40_214 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", span="412-412"];
m40_81 [cluster="System.Text.StringBuilder.StringBuilder()", file="QueryExpression.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m40_339 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="QueryExpression.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m40_197 [cluster="System.Type.GetGenericArguments()", file="QueryExpression.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m40_473 [cluster="System.Type.GetFields(System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Entry System.Type.GetFields(System.Reflection.BindingFlags)", span="0-0"];
m40_547 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="1077-1077"];
m40_548 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="!type.IsValueType()", span="1079-1079"];
m40_550 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="ConvertUtils.GetTypeCode(type)", span="1084-1084"];
m40_578 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="IsNullable(type)", span="1119-1119"];
m40_580 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="return Activator.CreateInstance(type);", span="1125-1125"];
m40_549 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="return null;", span="1081-1081"];
m40_551 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="PrimitiveTypeCode.Boolean", span="1086-1086"];
m40_553 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="PrimitiveTypeCode.Char", span="1088-1088"];
m40_561 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="PrimitiveTypeCode.Int64", span="1096-1096"];
m40_564 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="PrimitiveTypeCode.Single", span="1099-1099"];
m40_566 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="PrimitiveTypeCode.Double", span="1101-1101"];
m40_568 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="PrimitiveTypeCode.Decimal", span="1103-1103"];
m40_570 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="PrimitiveTypeCode.DateTime", span="1105-1105"];
m40_572 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="PrimitiveTypeCode.BigInteger", span="1108-1108"];
m40_574 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="PrimitiveTypeCode.Guid", span="1111-1111"];
m40_576 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="PrimitiveTypeCode.DateTimeOffset", span="1114-1114"];
m40_552 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="return false;", span="1087-1087"];
m40_554 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="PrimitiveTypeCode.SByte", span="1089-1089"];
m40_555 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="PrimitiveTypeCode.Byte", span="1090-1090"];
m40_556 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="PrimitiveTypeCode.Int16", span="1091-1091"];
m40_557 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="PrimitiveTypeCode.UInt16", span="1092-1092"];
m40_558 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="PrimitiveTypeCode.Int32", span="1093-1093"];
m40_559 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="PrimitiveTypeCode.UInt32", span="1094-1094"];
m40_560 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="return 0;", span="1095-1095"];
m40_562 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="PrimitiveTypeCode.UInt64", span="1097-1097"];
m40_563 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="return 0L;", span="1098-1098"];
m40_565 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="return 0f;", span="1100-1100"];
m40_567 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="return 0.0;", span="1102-1102"];
m40_569 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="return 0m;", span="1104-1104"];
m40_571 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="return new DateTime();", span="1106-1106"];
m40_573 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="return new BigInteger();", span="1109-1109"];
m40_575 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="return new Guid();", span="1112-1112"];
m40_577 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="return new DateTimeOffset();", span="1115-1115"];
m40_579 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="return null;", span="1121-1121"];
m40_581 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="1077-1077"];
m40_415 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool)", file="QueryExpression.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool)", span="0-0"];
m40_39 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", span="153-153"];
m40_40 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="QueryExpression.cs", label="string fullyQualifiedTypeName", span="155-155"];
m40_41 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="QueryExpression.cs", label="binder != null", span="157-157"];
m40_43 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="QueryExpression.cs", label="binder.BindToName(t, out assemblyName, out typeName)", span="160-160"];
m40_45 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="QueryExpression.cs", label="fullyQualifiedTypeName = t.AssemblyQualifiedName", span="165-165"];
m40_46 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="QueryExpression.cs", label=assemblyFormat, span="171-171"];
m40_42 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="QueryExpression.cs", label="string assemblyName, typeName", span="159-159"];
m40_44 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="QueryExpression.cs", label="fullyQualifiedTypeName = typeName + (assemblyName == null ? '''' : '', '' + assemblyName)", span="161-161"];
m40_48 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="QueryExpression.cs", label="return RemoveAssemblyDetails(fullyQualifiedTypeName);", span="174-174"];
m40_50 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="QueryExpression.cs", label="return fullyQualifiedTypeName;", span="176-176"];
m40_47 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="QueryExpression.cs", label="FormatterAssemblyStyle.Simple", span="173-173"];
m40_49 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="QueryExpression.cs", label="FormatterAssemblyStyle.Full", span="175-175"];
m40_51 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="QueryExpression.cs", label="throw new ArgumentOutOfRangeException();", span="178-178"];
m40_52 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", span="153-153"];
m40_484 [cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", file="QueryExpression.cs", label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="64-64"];
m40_100 [cluster="System.Type.GetConstructors(System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Entry System.Type.GetConstructors(System.Reflection.BindingFlags)", span="0-0"];
m40_90 [cluster="System.Type.IsValueType()", file="QueryExpression.cs", label="Entry System.Type.IsValueType()", span="567-567"];
m40_336 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="QueryExpression.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m40_129 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", span="292-292"];
m40_130 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="QueryExpression.cs", label="Type implementingType", span="294-294"];
m40_131 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="QueryExpression.cs", label="return ImplementsGenericDefinition(type, genericInterfaceDefinition, out implementingType);", span="295-295"];
m40_132 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", span="292-292"];
m40_27 [cluster="System.Reflection.MethodInfo.GetBaseDefinition()", file="QueryExpression.cs", label="Entry System.Reflection.MethodInfo.GetBaseDefinition()", span="0-0"];
m40_407 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="QueryExpression.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m40_381 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", span="755-755"];
m40_384 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="ValidationUtils.ArgumentNotNull(attributeProvider, nameof(attributeProvider))", span="757-757"];
m40_385 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="object provider = attributeProvider", span="759-759"];
m40_388 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="object[] a = (attributeType != null) ? t.GetCustomAttributes(attributeType, inherit) : t.GetCustomAttributes(inherit)", span="767-767"];
m40_393 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="return (attributeType != null) ? Attribute.GetCustomAttributes(a, attributeType) : Attribute.GetCustomAttributes(a);", span="784-784"];
m40_396 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="return (attributeType != null) ? Attribute.GetCustomAttributes(m, attributeType, inherit) : Attribute.GetCustomAttributes(m, inherit);", span="790-790"];
m40_399 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="return (attributeType != null) ? Attribute.GetCustomAttributes(m, attributeType, inherit) : Attribute.GetCustomAttributes(m, inherit);", span="797-797"];
m40_402 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="return (attributeType != null) ? Attribute.GetCustomAttributes(p, attributeType, inherit) : Attribute.GetCustomAttributes(p, inherit);", span="804-804"];
m40_403 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="ICustomAttributeProvider customAttributeProvider = (ICustomAttributeProvider)attributeProvider", span="808-808"];
m40_404 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="object[] result = (attributeType != null) ? customAttributeProvider.GetCustomAttributes(attributeType, inherit) : customAttributeProvider.GetCustomAttributes(inherit)", span="809-809"];
m40_386 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="provider is Type", span="764-764"];
m40_387 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="Type t = (Type)provider", span="766-766"];
m40_391 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="provider is Assembly", span="781-781"];
m40_392 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="Assembly a = (Assembly)provider", span="783-783"];
m40_394 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="provider is MemberInfo", span="787-787"];
m40_395 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="MemberInfo m = (MemberInfo)provider", span="789-789"];
m40_397 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="provider is Module", span="794-794"];
m40_398 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="Module m = (Module)provider", span="796-796"];
m40_400 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="provider is ParameterInfo", span="801-801"];
m40_401 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="ParameterInfo p = (ParameterInfo)provider", span="803-803"];
m40_389 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="Attribute[] attributes = a.Cast<Attribute>().ToArray()", span="768-768"];
m40_390 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="return attributes;", span="778-778"];
m40_405 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="return (Attribute[])result;", span="811-811"];
m40_406 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", span="755-755"];
m40_582 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="185-185"];
m40_472 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="QueryExpression.cs", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m40_14 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m40_53 [cluster="System.Runtime.Serialization.SerializationBinder.BindToName(System.Type, out string, out string)", file="QueryExpression.cs", label="Entry System.Runtime.Serialization.SerializationBinder.BindToName(System.Type, out string, out string)", span="0-0"];
m40_600 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.Equals(Newtonsoft.Json.Utilities.TypeNameKey)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.TypeNameKey.Equals(Newtonsoft.Json.Utilities.TypeNameKey)", span="1155-1155"];
m40_601 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.Equals(Newtonsoft.Json.Utilities.TypeNameKey)", file="QueryExpression.cs", label="return (AssemblyName == other.AssemblyName && TypeName == other.TypeName);", span="1157-1157"];
m40_602 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.Equals(Newtonsoft.Json.Utilities.TypeNameKey)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.TypeNameKey.Equals(Newtonsoft.Json.Utilities.TypeNameKey)", span="1155-1155"];
m40_482 [cluster="Unk.Where", file="QueryExpression.cs", label="Entry Unk.Where", span=""];
m40_594 [cluster="string.GetHashCode()", file="QueryExpression.cs", label="Entry string.GetHashCode()", span="0-0"];
m40_504 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", span="1000-1000"];
m40_508 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="(targetType = targetType.BaseType()) != null", span="1007-1007"];
m40_509 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="targetType.GetProperties(bindingAttr)", span="1009-1009"];
m40_512 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="int index = initialProperties.IndexOf(p => p.Name == subTypeProperty.Name)", span="1017-1017"];
m40_514 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="initialProperties.Add(subTypeProperty)", span="1020-1020"];
m40_515 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="PropertyInfo childProperty = initialProperties[index]", span="1024-1024"];
m40_517 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="initialProperties[index] = subTypeProperty", span="1031-1031"];
m40_519 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="int index = initialProperties.IndexOf(p => p.Name == subTypeProperty.Name\r\n                                                                       && p.DeclaringType == subTypeProperty.DeclaringType)", span="1039-1040"];
m40_521 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="initialProperties.Add(subTypeProperty)", span="1044-1044"];
m40_522 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="int index = initialProperties.IndexOf(p => p.Name == subTypeProperty.Name\r\n                                                                       && p.IsVirtual()\r\n                                                                       && p.GetBaseDefinition() != null\r\n                                                                       && p.GetBaseDefinition().DeclaringType.IsAssignableFrom(subTypeProperty.GetBaseDefinition().DeclaringType))", span="1049-1052"];
m40_524 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="initialProperties.Add(subTypeProperty)", span="1056-1056"];
m40_510 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="PropertyInfo subTypeProperty = propertyInfo", span="1011-1011"];
m40_511 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="!IsPublic(subTypeProperty)", span="1013-1013"];
m40_518 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="!subTypeProperty.IsVirtual()", span="1037-1037"];
m40_513 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="index == -1", span="1018-1018"];
m40_516 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="!IsPublic(childProperty)", span="1026-1026"];
m40_520 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="index == -1", span="1042-1042"];
m40_523 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="index == -1", span="1054-1054"];
m40_525 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", span="1000-1000"];
m40_257 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="QueryExpression.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m40_182 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="386-386"];
m40_183 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="QueryExpression.cs", label="ValidationUtils.ArgumentNotNull(type, nameof(type))", span="388-388"];
m40_185 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="QueryExpression.cs", label="type.IsArray", span="391-391"];
m40_186 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="QueryExpression.cs", label="return type.GetElementType();", span="393-393"];
m40_187 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="QueryExpression.cs", label="ImplementsGenericDefinition(type, typeof(IEnumerable<>), out genericListType)", span="395-395"];
m40_189 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="QueryExpression.cs", label="throw new Exception(''Type {0} is not a collection.''.FormatWith(CultureInfo.InvariantCulture, type));", span="399-399"];
m40_191 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="QueryExpression.cs", label="typeof(IEnumerable).IsAssignableFrom(type)", span="404-404"];
m40_193 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="QueryExpression.cs", label="throw new Exception(''Type {0} is not a collection.''.FormatWith(CultureInfo.InvariantCulture, type));", span="409-409"];
m40_184 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="QueryExpression.cs", label="Type genericListType", span="389-389"];
m40_188 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="QueryExpression.cs", label="genericListType.IsGenericTypeDefinition()", span="397-397"];
m40_190 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="QueryExpression.cs", label="return genericListType.GetGenericArguments()[0];", span="402-402"];
m40_192 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="QueryExpression.cs", label="return null;", span="406-406"];
m40_194 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="386-386"];
m40_84 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="227-227"];
m40_85 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="QueryExpression.cs", label="ValidationUtils.ArgumentNotNull(t, nameof(t))", span="229-229"];
m40_86 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="QueryExpression.cs", label="t.IsValueType()", span="231-231"];
m40_88 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="QueryExpression.cs", label="return (GetDefaultConstructor(t, nonPublic) != null);", span="236-236"];
m40_87 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="QueryExpression.cs", label="return true;", span="233-233"];
m40_89 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="227-227"];
m40_312 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="645-645"];
m40_313 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="List<MemberInfo> targetMembers = new List<MemberInfo>()", span="647-647"];
m40_314 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="targetMembers.AddRange(GetFields(type, bindingAttr))", span="649-649"];
m40_315 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="targetMembers.AddRange(GetProperties(type, bindingAttr))", span="650-650"];
m40_326 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="!IsOverridenGenericMember(memberInfo, bindingAttr) || memberInfo.Name == ''Item''", span="679-679"];
m40_316 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="List<MemberInfo> distinctMembers = new List<MemberInfo>(targetMembers.Count)", span="656-656"];
m40_317 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="targetMembers.GroupBy(m => m.Name)", span="658-658"];
m40_321 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="distinctMembers.Add(members.First())", span="665-665"];
m40_328 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="distinctMembers.AddRange(resolvedMembers)", span="685-685"];
m40_329 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="return distinctMembers;", span="689-689"];
m40_318 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="int count = groupedMember.Count()", span="660-660"];
m40_319 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="IList<MemberInfo> members = groupedMember.ToList()", span="661-661"];
m40_320 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="count == 1", span="663-663"];
m40_323 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label=members, span="670-670"];
m40_322 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="IList<MemberInfo> resolvedMembers = new List<MemberInfo>()", span="669-669"];
m40_324 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="resolvedMembers.Count == 0", span="675-675"];
m40_325 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="resolvedMembers.Add(memberInfo)", span="677-677"];
m40_327 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="resolvedMembers.Add(memberInfo)", span="681-681"];
m40_330 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="645-645"];
m40_196 [cluster="System.Exception.Exception(string)", file="QueryExpression.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m40_35 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="148-148"];
m40_36 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="QueryExpression.cs", label="return (v != null) ? v.GetType() : null;", span="150-150"];
m40_37 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="148-148"];
m40_408 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="QueryExpression.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m40_113 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="267-267"];
m40_114 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="QueryExpression.cs", label="ValidationUtils.ArgumentNotNull(t, nameof(t))", span="269-269"];
m40_115 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="QueryExpression.cs", label="return (t.IsGenericType() && t.GetGenericTypeDefinition() == typeof(Nullable<>));", span="271-271"];
m40_116 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="267-267"];
m40_337 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="QueryExpression.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m40_505 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", span="993-993"];
m40_506 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="return ((bindingAttr & flag) == flag)\r\n                ? bindingAttr ^ flag\r\n                : bindingAttr;", span="995-997"];
m40_507 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", span="993-993"];
m40_335 [cluster="System.Collections.Generic.List<T>.List(int)", file="QueryExpression.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m40_155 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="QueryExpression.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m40_413 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool)", file="QueryExpression.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool)", span="0-0"];
m40_595 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.Equals(object)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.TypeNameKey.Equals(object)", span="1145-1145"];
m40_596 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.Equals(object)", file="QueryExpression.cs", label="!(obj is TypeNameKey)", span="1147-1147"];
m40_598 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.Equals(object)", file="QueryExpression.cs", label="return Equals((TypeNameKey)obj);", span="1152-1152"];
m40_597 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.Equals(object)", file="QueryExpression.cs", label="return false;", span="1149-1149"];
m40_599 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.Equals(object)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.TypeNameKey.Equals(object)", span="1145-1145"];
m40_256 [cluster="System.ArgumentException.ArgumentException(string, System.Exception)", file="QueryExpression.cs", label="Entry System.ArgumentException.ArgumentException(string, System.Exception)", span="0-0"];
m40_417 [cluster="System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type, bool)", file="QueryExpression.cs", label="Entry System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type, bool)", span="0-0"];
m40_383 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="QueryExpression.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m40_342 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", span="692-692"];
m40_346 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="memberInfo.MemberType() != MemberTypes.Property", span="694-694"];
m40_348 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="PropertyInfo propertyInfo = (PropertyInfo)memberInfo", span="699-699"];
m40_357 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="MemberInfo[] members = genericTypeDefinition.GetMember(propertyInfo.Name, bindingAttr)", span="715-715"];
m40_347 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="return false;", span="696-696"];
m40_349 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="!IsVirtual(propertyInfo)", span="700-700"];
m40_351 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Type declaringType = propertyInfo.DeclaringType", span="705-705"];
m40_350 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="return false;", span="702-702"];
m40_352 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="!declaringType.IsGenericType()", span="706-706"];
m40_354 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Type genericTypeDefinition = declaringType.GetGenericTypeDefinition()", span="710-710"];
m40_353 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="return false;", span="708-708"];
m40_355 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="genericTypeDefinition == null", span="711-711"];
m40_356 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="return false;", span="713-713"];
m40_358 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="members.Length == 0", span="716-716"];
m40_360 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Type memberUnderlyingType = GetMemberUnderlyingType(members[0])", span="720-720"];
m40_359 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="return false;", span="718-718"];
m40_361 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="!memberUnderlyingType.IsGenericParameter", span="721-721"];
m40_362 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="return false;", span="723-723"];
m40_363 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="return true;", span="726-726"];
m40_364 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", span="692-692"];
m40_460 [cluster="Unk.ToArray", file="QueryExpression.cs", label="Entry Unk.ToArray", span=""];
m40_119 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="274-274"];
m40_120 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="QueryExpression.cs", label="return (IsNullableType(t))\r\n                ? Nullable.GetUnderlyingType(t)\r\n                : t;", span="276-278"];
m40_121 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="274-274"];
m40_433 [cluster="string.Trim()", file="QueryExpression.cs", label="Entry string.Trim()", span="0-0"];
m40_414 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.Module, bool)", file="QueryExpression.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.Module, bool)", span="0-0"];
m40_13 [cluster="Unk.nameof", file="QueryExpression.cs", label="Entry Unk.nameof", span=""];
m40_432 [cluster="string.Substring(int, int)", file="QueryExpression.cs", label="Entry string.Substring(int, int)", span="0-0"];
m40_463 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="QueryExpression.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m40_117 [cluster="System.Type.IsGenericType()", file="QueryExpression.cs", label="Entry System.Type.IsGenericType()", span="153-153"];
m40_268 [cluster="System.Reflection.FieldInfo.SetValue(object, object)", file="QueryExpression.cs", label="Entry System.Reflection.FieldInfo.SetValue(object, object)", span="0-0"];
m40_434 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.TypeNameKey(string, string)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.TypeNameKey.TypeNameKey(string, string)", span="1134-1134"];
m40_588 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.TypeNameKey(string, string)", file="QueryExpression.cs", label="AssemblyName = assemblyName", span="1136-1136"];
m40_589 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.TypeNameKey(string, string)", file="QueryExpression.cs", label="TypeName = typeName", span="1137-1137"];
m40_590 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.TypeNameKey(string, string)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.TypeNameKey.TypeNameKey(string, string)", span="1134-1134"];
m40_237 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", span="494-494"];
m40_238 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="ValidationUtils.ArgumentNotNull(property, nameof(property))", span="496-496"];
m40_239 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="return (property.GetIndexParameters().Length > 0);", span="498-498"];
m40_240 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", span="494-494"];
m40_418 [cluster="System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool)", file="QueryExpression.cs", label="Entry System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool)", span="0-0"];
m40_543 [cluster="Unk.Any", file="QueryExpression.cs", label="Entry Unk.Any", span=""];
m40_430 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", span="881-881"];
m40_435 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="QueryExpression.cs", label="int scope = 0", span="885-885"];
m40_437 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="QueryExpression.cs", label="i < fullyQualifiedTypeName.Length", span="886-886"];
m40_438 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="QueryExpression.cs", label="char current = fullyQualifiedTypeName[i]", span="888-888"];
m40_436 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="QueryExpression.cs", label="int i = 0", span="886-886"];
m40_441 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="QueryExpression.cs", label="scope++", span="892-892"];
m40_446 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="QueryExpression.cs", label="return i;", span="900-900"];
m40_447 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="QueryExpression.cs", label="i++", span="886-886"];
m40_448 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="QueryExpression.cs", label="return null;", span="906-906"];
m40_439 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="QueryExpression.cs", label=current, span="889-889"];
m40_440 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="QueryExpression.cs", label="'['", span="891-891"];
m40_442 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="QueryExpression.cs", label="']'", span="894-894"];
m40_444 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="QueryExpression.cs", label="','", span="897-897"];
m40_443 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="QueryExpression.cs", label="scope--", span="895-895"];
m40_445 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="QueryExpression.cs", label="scope == 0", span="898-898"];
m40_449 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", span="881-881"];
m40_527 [cluster="System.Reflection.PropertyInfo.IsVirtual()", file="QueryExpression.cs", label="Entry System.Reflection.PropertyInfo.IsVirtual()", span="96-96"];
m40_366 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", span="729-729"];
m40_367 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", file="QueryExpression.cs", label="return GetAttribute<T>(attributeProvider, true);", span="731-731"];
m40_368 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", span="729-729"];
m40_229 [cluster="System.ArgumentException.ArgumentException(string, string)", file="QueryExpression.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m40_374 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="QueryExpression.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m40_91 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", span="244-244"];
m40_95 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="QueryExpression.cs", label="BindingFlags bindingFlags = BindingFlags.Instance | BindingFlags.Public", span="246-246"];
m40_96 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="QueryExpression.cs", label=nonPublic, span="247-247"];
m40_98 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="QueryExpression.cs", label="return t.GetConstructors(bindingFlags).SingleOrDefault(c => !c.GetParameters().Any());", span="252-252"];
m40_97 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="QueryExpression.cs", label="bindingFlags = bindingFlags | BindingFlags.NonPublic", span="249-249"];
m40_99 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", span="244-244"];
m40_230 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="471-471"];
m40_231 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="QueryExpression.cs", label="ValidationUtils.ArgumentNotNull(member, nameof(member))", span="473-473"];
m40_232 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="QueryExpression.cs", label="PropertyInfo propertyInfo = member as PropertyInfo", span="475-475"];
m40_233 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="QueryExpression.cs", label="propertyInfo != null", span="477-477"];
m40_234 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="QueryExpression.cs", label="return IsIndexedProperty(propertyInfo);", span="479-479"];
m40_235 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="QueryExpression.cs", label="return false;", span="483-483"];
m40_236 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="471-471"];
m40_195 [cluster="System.Type.GetElementType()", file="QueryExpression.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m40_311 [cluster="System.Reflection.PropertyInfo.GetSetMethod(bool)", file="QueryExpression.cs", label="Entry System.Reflection.PropertyInfo.GetSetMethod(bool)", span="0-0"];
m40_156 [cluster="string.FormatWith(System.IFormatProvider, object)", file="QueryExpression.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m40_526 [cluster="System.Collections.Generic.IEnumerable<T>.IndexOf<T>(System.Func<T, bool>)", file="QueryExpression.cs", label="Entry System.Collections.Generic.IEnumerable<T>.IndexOf<T>(System.Func<T, bool>)", span="209-209"];
m40_483 [cluster="Unk.>", file="QueryExpression.cs", label="Entry Unk.>", span=""];
m40_450 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", span="909-909"];
m40_451 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="QueryExpression.cs", label="BindingFlags bindingAttr = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic", span="911-911"];
m40_452 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="QueryExpression.cs", label="memberInfo.MemberType()", span="913-913"];
m40_454 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="QueryExpression.cs", label="PropertyInfo propertyInfo = (PropertyInfo)memberInfo", span="916-916"];
m40_456 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="QueryExpression.cs", label="return targetType.GetProperty(propertyInfo.Name, bindingAttr, null, propertyInfo.PropertyType, types, null);", span="920-920"];
m40_457 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="QueryExpression.cs", label="return targetType.GetMember(memberInfo.Name, memberInfo.MemberType(), bindingAttr).SingleOrDefault();", span="922-922"];
m40_453 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="QueryExpression.cs", label="MemberTypes.Property", span="915-915"];
m40_455 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="QueryExpression.cs", label="Type[] types = propertyInfo.GetIndexParameters().Select(p => p.ParameterType).ToArray()", span="918-918"];
m40_458 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", span="909-909"];
m40_332 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", span="926-926"];
m40_467 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="ValidationUtils.ArgumentNotNull(targetType, nameof(targetType))", span="928-928"];
m40_468 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="List<MemberInfo> fieldInfos = new List<MemberInfo>(targetType.GetFields(bindingAttr))", span="930-930"];
m40_469 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="GetChildPrivateFields(fieldInfos, targetType, bindingAttr)", span="934-934"];
m40_470 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="return fieldInfos.Cast<FieldInfo>();", span="937-937"];
m40_471 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", span="926-926"];
m40_459 [cluster="Unk.Select", file="QueryExpression.cs", label="Entry Unk.Select", span=""];
m40_92 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="239-239"];
m40_93 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="QueryExpression.cs", label="return GetDefaultConstructor(t, false);", span="241-241"];
m40_94 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="239-239"];
m40_583 [cluster="System.DateTime.DateTime()", file="QueryExpression.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m40_289 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", span="604-604"];
m40_290 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label="member.MemberType()", span="606-606"];
m40_292 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label="FieldInfo fieldInfo = (FieldInfo)member", span="609-609"];
m40_295 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label="fieldInfo.IsInitOnly && !canSetReadOnly", span="615-615"];
m40_297 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label=nonPublic, span="619-619"];
m40_303 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label="PropertyInfo propertyInfo = (PropertyInfo)member", span="629-629"];
m40_306 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label=nonPublic, span="635-635"];
m40_308 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label="return (propertyInfo.GetSetMethod(nonPublic) != null);", span="639-639"];
m40_291 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label="MemberTypes.Field", span="608-608"];
m40_302 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label="MemberTypes.Property", span="628-628"];
m40_309 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label="return false;", span="641-641"];
m40_293 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label="fieldInfo.IsLiteral", span="611-611"];
m40_299 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label="fieldInfo.IsPublic", span="623-623"];
m40_294 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label="return false;", span="613-613"];
m40_296 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label="return false;", span="617-617"];
m40_298 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label="return true;", span="621-621"];
m40_300 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label="return true;", span="625-625"];
m40_301 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label="return false;", span="627-627"];
m40_304 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label="!propertyInfo.CanWrite", span="631-631"];
m40_305 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label="return false;", span="633-633"];
m40_307 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label="return true;", span="637-637"];
m40_310 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", span="604-604"];
m40_122 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="QueryExpression.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m40_481 [cluster="System.Reflection.BindingFlags.RemoveFlag(System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Entry System.Reflection.BindingFlags.RemoveFlag(System.Reflection.BindingFlags)", span="993-993"];
m40_591 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.GetHashCode()", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.TypeNameKey.GetHashCode()", span="1140-1140"];
m40_592 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.GetHashCode()", file="QueryExpression.cs", label="return (AssemblyName?.GetHashCode() ?? 0) ^ (TypeName?.GetHashCode() ?? 0);", span="1142-1142"];
m40_593 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.GetHashCode()", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.TypeNameKey.GetHashCode()", span="1140-1140"];
m40_410 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.Assembly)", file="QueryExpression.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.Assembly)", span="0-0"];
m40_105 [cluster="System.Reflection.MethodBase.GetParameters()", file="QueryExpression.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m40_153 [cluster="System.Type.IsInterface()", file="QueryExpression.cs", label="Entry System.Type.IsInterface()", span="144-144"];
m40_340 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QueryExpression.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m40_154 [cluster="System.Type.IsGenericTypeDefinition()", file="QueryExpression.cs", label="Entry System.Type.IsGenericTypeDefinition()", span="162-162"];
m40_537 [cluster="System.Reflection.PropertyInfo.GetBaseDefinition()", file="QueryExpression.cs", label="Entry System.Reflection.PropertyInfo.GetBaseDefinition()", span="115-115"];
m40_16 [cluster="System.Reflection.PropertyInfo.GetSetMethod()", file="QueryExpression.cs", label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0"];
m40_170 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", span="359-359"];
m40_171 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="currentType.IsGenericType()", span="361-361"];
m40_172 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="Type currentGenericClassDefinition = currentType.GetGenericTypeDefinition()", span="363-363"];
m40_173 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="genericClassDefinition == currentGenericClassDefinition", span="365-365"];
m40_174 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="implementingType = currentType", span="367-367"];
m40_176 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="currentType.BaseType() == null", span="372-372"];
m40_179 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="return InheritsGenericDefinitionInternal(currentType.BaseType(), genericClassDefinition, out implementingType);", span="378-378"];
m40_175 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="return true;", span="368-368"];
m40_177 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="implementingType = null", span="374-374"];
m40_178 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="return false;", span="375-375"];
m40_180 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", span="359-359"];
m40_162 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", span="346-346"];
m40_163 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="ValidationUtils.ArgumentNotNull(type, nameof(type))", span="348-348"];
m40_164 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="ValidationUtils.ArgumentNotNull(genericClassDefinition, nameof(genericClassDefinition))", span="349-349"];
m40_165 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="!genericClassDefinition.IsClass() || !genericClassDefinition.IsGenericTypeDefinition()", span="351-351"];
m40_166 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="throw new ArgumentNullException('''{0}' is not a generic class definition.''.FormatWith(CultureInfo.InvariantCulture, genericClassDefinition));", span="353-353"];
m40_167 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="return InheritsGenericDefinitionInternal(type, genericClassDefinition, out implementingType);", span="356-356"];
m40_168 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", span="346-346"];
m40_241 [cluster="System.Reflection.PropertyInfo.GetIndexParameters()", file="QueryExpression.cs", label="Entry System.Reflection.PropertyInfo.GetIndexParameters()", span="0-0"];
m40_373 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", span="742-742"];
m40_375 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="QueryExpression.cs", label="Attribute[] a = GetAttributes(attributeProvider, typeof(T), inherit)", span="744-744"];
m40_376 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="QueryExpression.cs", label="T[] attributes = a as T[]", span="746-746"];
m40_379 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="QueryExpression.cs", label="return a.Cast<T>().ToArray();", span="752-752"];
m40_377 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="QueryExpression.cs", label="attributes != null", span="747-747"];
m40_378 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="QueryExpression.cs", label="return attributes;", span="749-749"];
m40_380 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", span="742-742"];
m40_107 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="255-255"];
m40_108 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="QueryExpression.cs", label="ValidationUtils.ArgumentNotNull(t, nameof(t))", span="257-257"];
m40_109 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="QueryExpression.cs", label="t.IsValueType()", span="259-259"];
m40_110 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="QueryExpression.cs", label="return IsNullableType(t);", span="261-261"];
m40_111 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="QueryExpression.cs", label="return true;", span="264-264"];
m40_112 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="255-255"];
m40_17 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", span="115-115"];
m40_18 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="ValidationUtils.ArgumentNotNull(propertyInfo, nameof(propertyInfo))", span="117-117"];
m40_19 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="MethodInfo m = propertyInfo.GetGetMethod()", span="119-119"];
m40_22 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="m = propertyInfo.GetSetMethod()", span="125-125"];
m40_20 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="m != null", span="120-120"];
m40_21 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="return m.GetBaseDefinition();", span="122-122"];
m40_23 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="m != null", span="126-126"];
m40_24 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="return m.GetBaseDefinition();", span="128-128"];
m40_25 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="return null;", span="131-131"];
m40_26 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", span="115-115"];
m40_341 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="QueryExpression.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m40_416 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool)", file="QueryExpression.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool)", span="0-0"];
m40_255 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="QueryExpression.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m40_503 [cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0"];
m40_587 [cluster="System.Activator.CreateInstance(System.Type)", file="QueryExpression.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m40_198 [cluster="System.Type.IsAssignableFrom(System.Type)", file="QueryExpression.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m40_3 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", span="96-96"];
m40_4 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="ValidationUtils.ArgumentNotNull(propertyInfo, nameof(propertyInfo))", span="98-98"];
m40_5 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="MethodInfo m = propertyInfo.GetGetMethod()", span="100-100"];
m40_8 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="m = propertyInfo.GetSetMethod()", span="106-106"];
m40_6 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="m != null && m.IsVirtual", span="101-101"];
m40_7 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="return true;", span="103-103"];
m40_9 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="m != null && m.IsVirtual", span="107-107"];
m40_10 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="return true;", span="109-109"];
m40_11 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="return false;", span="112-112"];
m40_12 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", span="96-96"];
m40_133 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="298-298"];
m40_134 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="ValidationUtils.ArgumentNotNull(type, nameof(type))", span="300-300"];
m40_135 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="ValidationUtils.ArgumentNotNull(genericInterfaceDefinition, nameof(genericInterfaceDefinition))", span="301-301"];
m40_136 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="!genericInterfaceDefinition.IsInterface() || !genericInterfaceDefinition.IsGenericTypeDefinition()", span="303-303"];
m40_137 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="throw new ArgumentNullException('''{0}' is not a generic interface definition.''.FormatWith(CultureInfo.InvariantCulture, genericInterfaceDefinition));", span="305-305"];
m40_138 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="type.IsInterface()", span="308-308"];
m40_139 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="type.IsGenericType()", span="310-310"];
m40_140 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="Type interfaceDefinition = type.GetGenericTypeDefinition()", span="312-312"];
m40_141 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="genericInterfaceDefinition == interfaceDefinition", span="314-314"];
m40_142 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="implementingType = type", span="316-316"];
m40_144 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="type.GetInterfaces()", span="322-322"];
m40_147 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="genericInterfaceDefinition == interfaceDefinition", span="328-328"];
m40_143 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="return true;", span="317-317"];
m40_145 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="i.IsGenericType()", span="324-324"];
m40_150 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="implementingType = null", span="336-336"];
m40_146 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="Type interfaceDefinition = i.GetGenericTypeDefinition()", span="326-326"];
m40_148 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="implementingType = i", span="330-330"];
m40_149 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="return true;", span="331-331"];
m40_151 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="return false;", span="337-337"];
m40_152 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="298-298"];
m40_158 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", span="340-340"];
m40_159 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="QueryExpression.cs", label="Type implementingType", span="342-342"];
m40_160 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="QueryExpression.cs", label="return InheritsGenericDefinition(type, genericClassDefinition, out implementingType);", span="343-343"];
m40_161 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", span="340-340"];
m40_544 [cluster="lambda expression", file="QueryExpression.cs", label="Entry lambda expression", span="1067-1071"];
m40_102 [cluster="lambda expression", file="QueryExpression.cs", label="Entry lambda expression", span="252-252"];
m40_103 [cluster="lambda expression", file="QueryExpression.cs", label="!c.GetParameters().Any()", span="252-252"];
m40_104 [cluster="lambda expression", file="QueryExpression.cs", label="Exit lambda expression", span="252-252"];
m40_343 [cluster="lambda expression", file="QueryExpression.cs", label="Entry lambda expression", span="658-658"];
m40_344 [cluster="lambda expression", file="QueryExpression.cs", label="m.Name", span="658-658"];
m40_345 [cluster="lambda expression", file="QueryExpression.cs", label="Exit lambda expression", span="658-658"];
m40_464 [cluster="lambda expression", file="QueryExpression.cs", label="Entry lambda expression", span="918-918"];
m40_465 [cluster="lambda expression", file="QueryExpression.cs", label="p.ParameterType", span="918-918"];
m40_466 [cluster="lambda expression", file="QueryExpression.cs", label="Exit lambda expression", span="918-918"];
m40_485 [cluster="lambda expression", file="QueryExpression.cs", label="Entry lambda expression", span="954-954"];
m40_486 [cluster="lambda expression", file="QueryExpression.cs", label="f.IsPrivate", span="954-954"];
m40_487 [cluster="lambda expression", file="QueryExpression.cs", label="Exit lambda expression", span="954-954"];
m40_529 [cluster="lambda expression", file="QueryExpression.cs", label="p.Name == subTypeProperty.Name", span="1017-1017"];
m40_532 [cluster="lambda expression", file="QueryExpression.cs", label="p.Name == subTypeProperty.Name\r\n                                                                       && p.DeclaringType == subTypeProperty.DeclaringType", span="1039-1040"];
m40_535 [cluster="lambda expression", file="QueryExpression.cs", label="p.Name == subTypeProperty.Name\r\n                                                                       && p.IsVirtual()\r\n                                                                       && p.GetBaseDefinition() != null\r\n                                                                       && p.GetBaseDefinition().DeclaringType.IsAssignableFrom(subTypeProperty.GetBaseDefinition().DeclaringType)", span="1049-1052"];
m40_528 [cluster="lambda expression", file="QueryExpression.cs", label="Entry lambda expression", span="1017-1017"];
m40_531 [cluster="lambda expression", file="QueryExpression.cs", label="Entry lambda expression", span="1039-1040"];
m40_534 [cluster="lambda expression", file="QueryExpression.cs", label="Entry lambda expression", span="1049-1052"];
m40_530 [cluster="lambda expression", file="QueryExpression.cs", label="Exit lambda expression", span="1017-1017"];
m40_533 [cluster="lambda expression", file="QueryExpression.cs", label="Exit lambda expression", span="1039-1040"];
m40_536 [cluster="lambda expression", file="QueryExpression.cs", label="Exit lambda expression", span="1049-1052"];
m40_545 [cluster="lambda expression", file="QueryExpression.cs", label="info.Name == method &&\r\n                    // check that the method overrides the original on DynamicObjectProxy\r\n                    info.DeclaringType != methodDeclaringType\r\n                    && info.GetBaseDefinition().DeclaringType == methodDeclaringType", span="1068-1071"];
m40_546 [cluster="lambda expression", file="QueryExpression.cs", label="Exit lambda expression", span="1067-1071"];
m40_38 [cluster="object.GetType()", file="QueryExpression.cs", label="Entry object.GetType()", span="0-0"];
m40_181 [cluster="System.Type.BaseType()", file="QueryExpression.cs", label="Entry System.Type.BaseType()", span="171-171"];
m40_242 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="507-507"];
m40_243 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="QueryExpression.cs", label="ValidationUtils.ArgumentNotNull(member, nameof(member))", span="509-509"];
m40_244 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="QueryExpression.cs", label="ValidationUtils.ArgumentNotNull(target, nameof(target))", span="510-510"];
m40_245 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="QueryExpression.cs", label="member.MemberType()", span="512-512"];
m40_247 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="QueryExpression.cs", label="return ((FieldInfo)member).GetValue(target);", span="515-515"];
m40_249 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="QueryExpression.cs", label="return ((PropertyInfo)member).GetValue(target, null);", span="519-519"];
m40_251 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="QueryExpression.cs", label="throw new ArgumentException(''MemberInfo '{0}' has index parameters''.FormatWith(CultureInfo.InvariantCulture, member.Name), e);", span="523-523"];
m40_252 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="QueryExpression.cs", label="throw new ArgumentException(''MemberInfo '{0}' is not of type FieldInfo or PropertyInfo''.FormatWith(CultureInfo.InvariantCulture, CultureInfo.InvariantCulture, member.Name), nameof(member));", span="526-526"];
m40_246 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="QueryExpression.cs", label="MemberTypes.Field", span="514-514"];
m40_248 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="QueryExpression.cs", label="MemberTypes.Property", span="516-516"];
m40_250 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="QueryExpression.cs", label=TargetParameterCountException, span="521-521"];
m40_253 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="507-507"];
m40_538 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", span="1064-1064"];
m40_539 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", file="QueryExpression.cs", label="bool isMethodOverriden = currentType.GetMethods(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance)\r\n                .Any(info =>\r\n                    info.Name == method &&\r\n                    // check that the method overrides the original on DynamicObjectProxy\r\n                    info.DeclaringType != methodDeclaringType\r\n                    && info.GetBaseDefinition().DeclaringType == methodDeclaringType\r\n                )", span="1066-1072"];
m40_540 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", file="QueryExpression.cs", label="return isMethodOverriden;", span="1074-1074"];
m40_541 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", span="1064-1064"];
m40_15 [cluster="System.Reflection.PropertyInfo.GetGetMethod()", file="QueryExpression.cs", label="Entry System.Reflection.PropertyInfo.GetGetMethod()", span="0-0"];
m40_106 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="QueryExpression.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m40_269 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="QueryExpression.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m40_474 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", span="941-941"];
m40_475 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="(bindingAttr & BindingFlags.NonPublic) != 0", span="945-945"];
m40_476 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="BindingFlags nonPublicBindingAttr = bindingAttr.RemoveFlag(BindingFlags.Public)", span="948-948"];
m40_477 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="(targetType = targetType.BaseType()) != null", span="950-950"];
m40_479 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="initialFields.AddRange(childPrivateFields)", span="956-956"];
m40_478 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="IEnumerable<MemberInfo> childPrivateFields =\r\n                        targetType.GetFields(nonPublicBindingAttr).Where(f => f.IsPrivate).Cast<MemberInfo>()", span="953-954"];
m40_480 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", span="941-941"];
m40_338 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="QueryExpression.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m40_118 [cluster="System.Type.GetGenericTypeDefinition()", file="QueryExpression.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m40_169 [cluster="System.Type.IsClass()", file="QueryExpression.cs", label="Entry System.Type.IsClass()", span="198-198"];
m40_0 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", span="87-87"];
m40_1 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", file="QueryExpression.cs", label="EmptyTypes = Type.EmptyTypes", span="90-90"];
m40_2 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", span="87-87"];
m40_333 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="QueryExpression.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m40_228 [cluster="System.Reflection.MemberInfo.MemberType()", file="QueryExpression.cs", label="Entry System.Reflection.MemberInfo.MemberType()", span="107-107"];
m40_585 [cluster="System.Guid.Guid()", file="QueryExpression.cs", label="Entry System.Guid.Guid()", span="0-0"];
m40_258 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", span="536-536"];
m40_259 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="QueryExpression.cs", label="ValidationUtils.ArgumentNotNull(member, nameof(member))", span="538-538"];
m40_260 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="QueryExpression.cs", label="ValidationUtils.ArgumentNotNull(target, nameof(target))", span="539-539"];
m40_261 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="QueryExpression.cs", label="member.MemberType()", span="541-541"];
m40_263 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="QueryExpression.cs", label="((FieldInfo)member).SetValue(target, value)", span="544-544"];
m40_265 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="QueryExpression.cs", label="((PropertyInfo)member).SetValue(target, value, null)", span="547-547"];
m40_266 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="QueryExpression.cs", label="throw new ArgumentException(''MemberInfo '{0}' must be of type FieldInfo or PropertyInfo''.FormatWith(CultureInfo.InvariantCulture, member.Name), nameof(member));", span="550-550"];
m40_262 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="QueryExpression.cs", label="MemberTypes.Field", span="543-543"];
m40_264 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="QueryExpression.cs", label="MemberTypes.Property", span="546-546"];
m40_267 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", span="536-536"];
m40_331 [cluster="System.Collections.Generic.List<T>.List()", file="QueryExpression.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m40_431 [cluster="System.Nullable<T>.GetValueOrDefault()", file="QueryExpression.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m40_419 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", span="860-860"];
m40_420 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="QueryExpression.cs", label="int? assemblyDelimiterIndex = GetAssemblyDelimiterIndex(fullyQualifiedTypeName)", span="862-862"];
m40_424 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="QueryExpression.cs", label="typeName = fullyQualifiedTypeName.Substring(0, assemblyDelimiterIndex.GetValueOrDefault()).Trim()", span="869-869"];
m40_425 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="QueryExpression.cs", label="assemblyName = fullyQualifiedTypeName.Substring(assemblyDelimiterIndex.GetValueOrDefault() + 1, fullyQualifiedTypeName.Length - assemblyDelimiterIndex.GetValueOrDefault() - 1).Trim()", span="870-870"];
m40_426 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="QueryExpression.cs", label="typeName = fullyQualifiedTypeName", span="874-874"];
m40_421 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="QueryExpression.cs", label="string typeName", span="864-864"];
m40_423 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="QueryExpression.cs", label="assemblyDelimiterIndex != null", span="867-867"];
m40_422 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="QueryExpression.cs", label="string assemblyName", span="865-865"];
m40_428 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="QueryExpression.cs", label="return new TypeNameKey(assemblyName, typeName);", span="878-878"];
m40_427 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="QueryExpression.cs", label="assemblyName = null", span="875-875"];
m40_429 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", span="860-860"];
m40_288 [cluster="System.Reflection.PropertyInfo.GetGetMethod(bool)", file="QueryExpression.cs", label="Entry System.Reflection.PropertyInfo.GetGetMethod(bool)", span="0-0"];
m40_54 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", span="182-182"];
m40_56 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="StringBuilder builder = new StringBuilder()", span="184-184"];
m40_60 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="i < fullyQualifiedTypeName.Length", span="189-189"];
m40_61 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="char current = fullyQualifiedTypeName[i]", span="191-191"];
m40_57 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="bool writingAssemblyName = false", span="187-187"];
m40_66 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="builder.Append(current)", span="197-197"];
m40_70 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="builder.Append(current)", span="202-202"];
m40_74 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="builder.Append(current)", span="208-208"];
m40_77 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="builder.Append(current)", span="218-218"];
m40_79 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="return builder.ToString();", span="224-224"];
m40_58 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="bool skippingAssemblyDetails = false", span="188-188"];
m40_59 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="int i = 0", span="189-189"];
m40_78 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="i++", span="189-189"];
m40_62 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label=current, span="192-192"];
m40_63 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="'['", span="194-194"];
m40_67 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="']'", span="199-199"];
m40_71 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="','", span="204-204"];
m40_76 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="!skippingAssemblyDetails", span="216-216"];
m40_64 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="writingAssemblyName = false", span="195-195"];
m40_65 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="skippingAssemblyDetails = false", span="196-196"];
m40_68 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="writingAssemblyName = false", span="200-200"];
m40_69 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="skippingAssemblyDetails = false", span="201-201"];
m40_72 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="!writingAssemblyName", span="205-205"];
m40_73 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="writingAssemblyName = true", span="207-207"];
m40_75 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="skippingAssemblyDetails = true", span="212-212"];
m40_80 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", span="182-182"];
m40_82 [cluster="System.Text.StringBuilder.Append(char)", file="QueryExpression.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m40_584 [cluster="BigInteger.cstr", file="QueryExpression.cs", label="Entry BigInteger.cstr", span=""];
m40_411 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool)", file="QueryExpression.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool)", span="0-0"];
m40_55 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="QueryExpression.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m40_365 [cluster="System.Type.GetMember(string, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Entry System.Type.GetMember(string, System.Reflection.BindingFlags)", span="0-0"];
m40_542 [cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0"];
m40_254 [cluster="System.Reflection.FieldInfo.GetValue(object)", file="QueryExpression.cs", label="Entry System.Reflection.FieldInfo.GetValue(object)", span="0-0"];
m40_157 [cluster="System.Type.GetInterfaces()", file="QueryExpression.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m40_412 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool)", file="QueryExpression.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool)", span="0-0"];
m40_334 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", span="962-962"];
m40_488 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="ValidationUtils.ArgumentNotNull(targetType, nameof(targetType))", span="964-964"];
m40_489 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="List<PropertyInfo> propertyInfos = new List<PropertyInfo>(targetType.GetProperties(bindingAttr))", span="966-966"];
m40_490 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="targetType.IsInterface()", span="969-969"];
m40_491 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="targetType.GetInterfaces()", span="971-971"];
m40_492 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="propertyInfos.AddRange(i.GetProperties(bindingAttr))", span="973-973"];
m40_493 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="GetChildPrivateProperties(propertyInfos, targetType, bindingAttr)", span="977-977"];
m40_497 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="member.DeclaringType != targetType", span="983-983"];
m40_495 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="i < propertyInfos.Count", span="980-980"];
m40_496 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="PropertyInfo member = propertyInfos[i]", span="982-982"];
m40_499 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="propertyInfos[i] = declaredMember", span="986-986"];
m40_501 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="return propertyInfos;", span="990-990"];
m40_494 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="int i = 0", span="980-980"];
m40_500 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="i++", span="980-980"];
m40_498 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="PropertyInfo declaredMember = (PropertyInfo)GetMemberInfoFromType(member.DeclaringType, member)", span="985-985"];
m40_502 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", span="962-962"];
m40_462 [cluster="System.Type.GetMember(string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", file="QueryExpression.cs", label="Entry System.Type.GetMember(string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", span="0-0"];
m40_409 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type)", file="QueryExpression.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type)", span="0-0"];
m40_215 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="445-445"];
m40_216 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="QueryExpression.cs", label="ValidationUtils.ArgumentNotNull(member, nameof(member))", span="447-447"];
m40_217 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="QueryExpression.cs", label="member.MemberType()", span="449-449"];
m40_219 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="QueryExpression.cs", label="return ((FieldInfo)member).FieldType;", span="452-452"];
m40_221 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="QueryExpression.cs", label="return ((PropertyInfo)member).PropertyType;", span="454-454"];
m40_223 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="QueryExpression.cs", label="return ((EventInfo)member).EventHandlerType;", span="456-456"];
m40_225 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="QueryExpression.cs", label="return ((MethodInfo)member).ReturnType;", span="458-458"];
m40_226 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="QueryExpression.cs", label="throw new ArgumentException(''MemberInfo must be of type FieldInfo, PropertyInfo, EventInfo or MethodInfo'', nameof(member));", span="460-460"];
m40_218 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="QueryExpression.cs", label="MemberTypes.Field", span="451-451"];
m40_220 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="QueryExpression.cs", label="MemberTypes.Property", span="453-453"];
m40_222 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="QueryExpression.cs", label="MemberTypes.Event", span="455-455"];
m40_224 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="QueryExpression.cs", label="MemberTypes.Method", span="457-457"];
m40_227 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="445-445"];
m40_28 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", span="134-134"];
m40_29 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="property.GetGetMethod() != null && property.GetGetMethod().IsPublic", span="136-136"];
m40_31 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="property.GetSetMethod() != null && property.GetSetMethod().IsPublic", span="140-140"];
m40_30 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="return true;", span="138-138"];
m40_32 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="return true;", span="142-142"];
m40_33 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="return false;", span="145-145"];
m40_34 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", span="134-134"];
m40_83 [cluster="System.Text.StringBuilder.ToString()", file="QueryExpression.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m40_461 [cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])", file="QueryExpression.cs", label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])", span="0-0"];
m40_123 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="281-281"];
m40_124 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="QueryExpression.cs", label="!type.IsGenericType()", span="283-283"];
m40_126 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="QueryExpression.cs", label="Type t = type.GetGenericTypeDefinition()", span="288-288"];
m40_127 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="QueryExpression.cs", label="return (t == genericInterfaceDefinition);", span="289-289"];
m40_125 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="QueryExpression.cs", label="return false;", span="285-285"];
m40_128 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="281-281"];
m40_586 [cluster="System.DateTimeOffset.DateTimeOffset()", file="QueryExpression.cs", label="Entry System.DateTimeOffset.DateTimeOffset()", span="0-0"];
m40_101 [cluster="Unk.SingleOrDefault", file="QueryExpression.cs", label="Entry Unk.SingleOrDefault", span=""];
m40_369 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", span="734-734"];
m40_370 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="QueryExpression.cs", label="T[] attributes = GetAttributes<T>(attributeProvider, inherit)", span="736-736"];
m40_371 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="QueryExpression.cs", label="return (attributes != null) ? attributes.FirstOrDefault() : null;", span="738-738"];
m40_372 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", span="734-734"];
m40_603 [file="QueryExpression.cs", label=subTypeProperty, span=""];
m40_604 [file="QueryExpression.cs", label="System.Type", span=""];
m40_605 [file="QueryExpression.cs", label=string, span=""];
m40_606 [file="QueryExpression.cs", label="out Newtonsoft.Json.Utilities.TypeNameKey", span=""];
m40_607 [file="QueryExpression.cs", label="Newtonsoft.Json.Utilities.TypeNameKey", span=""];
m40_608 [file="QueryExpression.cs", label="ref Newtonsoft.Json.Utilities.TypeNameKey", span=""];
m41_27 [cluster="lambda expression", file="ReflectionUtils.cs", label="v.Value == 0", span="54-54"];
m41_31 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", span="74-74"];
m41_93 [cluster="System.Guid.Guid(string)", file="ReflectionUtils.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m41_236 [cluster="System.Text.StringBuilder.StringBuilder()", file="ReflectionUtils.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m41_51 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="ReflectionUtils.cs", label="writer.WriteValue(new DateTime(2000, 12, 29, 12, 30, 0, DateTimeKind.Utc))", span="111-111"];
m41_214 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m41_60 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="ReflectionUtils.cs", label="object value = field.GetValue(enumType)", span="116-116"];
m41_82 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", span="134-134"];
m41_86 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="ReflectionUtils.cs", label="writer.WriteStartArray()", span="141-141"];
m41_91 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="ReflectionUtils.cs", label="Assert.AreEqual(''1D-00-00-00-05-30-00-10-00-00-00-04-D7-EE-21-D8-5C-4B-C9-43-8A-C2-69-28-E5-79-B7-05-00'', bson)", span="147-147"];
m41_83 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="ReflectionUtils.cs", label="Guid g = new Guid(''D821EED7-4B5C-43C9-8AC2-6928E579B705'')", span="136-136"];
m41_85 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="139-139"];
m41_87 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="ReflectionUtils.cs", label="writer.WriteValue(g)", span="142-142"];
m41_89 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="ReflectionUtils.cs", label="string bson = BytesToHex(ms.ToArray())", span="145-145"];
m41_90 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="ReflectionUtils.cs", label="Console.WriteLine(bson)", span="146-146"];
m41_84 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="138-138"];
m41_88 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="ReflectionUtils.cs", label="writer.WriteEnd()", span="143-143"];
m41_92 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteGuid()", span="134-134"];
m41_96 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", span="151-151"];
m41_99 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="ReflectionUtils.cs", label="writer.WriteStartArray()", span="155-155"];
m41_108 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="ReflectionUtils.cs", label="Assert.AreEqual(expected, bson)", span="168-168"];
m41_98 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="154-154"];
m41_100 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="ReflectionUtils.cs", label="writer.WriteValue(''a'')", span="156-156"];
m41_105 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="ReflectionUtils.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="163-163"];
m41_107 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="ReflectionUtils.cs", label="string bson = BytesToHex(ms.ToArray())", span="166-166"];
m41_106 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="ReflectionUtils.cs", label="string expected = ''20-00-00-00-02-30-00-02-00-00-00-61-00-02-31-00-02-00-00-00-62-00-02-32-00-02-00-00-00-63-00-00''", span="165-165"];
m41_97 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="153-153"];
m41_101 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="ReflectionUtils.cs", label="writer.WriteValue(''b'')", span="157-157"];
m41_102 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="ReflectionUtils.cs", label="writer.WriteValue(''c'')", span="158-158"];
m41_103 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="ReflectionUtils.cs", label="writer.WriteEndArray()", span="159-159"];
m41_104 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="ReflectionUtils.cs", label="writer.Flush()", span="161-161"];
m41_109 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteArrayBsonFromSite()", span="151-151"];
m41_66 [cluster="System.Reflection.FieldInfo.GetValue(object)", file="ReflectionUtils.cs", label="Entry System.Reflection.FieldInfo.GetValue(object)", span="0-0"];
m41_61 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="ReflectionUtils.cs", label="values.Add(value)", span="117-117"];
m41_14 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", span="35-35"];
m41_207 [cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="49-49"];
m41_54 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="ReflectionUtils.cs", label="Assert.AreEqual(''8C-00-00-00-12-30-00-FF-FF-FF-FF-FF-FF-FF-7F-12-31-00-FF-FF-FF-FF-FF-FF-FF-7F-10-32-00-FF-FF-FF-7F-10-33-00-FF-FF-FF-7F-10-34-00-FF-00-00-00-10-35-00-7F-00-00-00-02-36-00-02-00-00-00-61-00-01-37-00-00-00-00-00-00-00-F0-45-01-38-00-FF-FF-FF-FF-FF-FF-EF-7F-01-39-00-00-00-00-E0-FF-FF-EF-47-08-31-30-00-01-05-31-31-00-05-00-00-00-00-00-01-02-03-04-09-31-32-00-40-C5-E2-BA-E3-00-00-00-09-31-33-00-40-C5-E2-BA-E3-00-00-00-00'', bson)", span="115-115"];
m41_208 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29"];
m41_217 [cluster="System.Console.WriteLine(int)", file="ReflectionUtils.cs", label="Entry System.Console.WriteLine(int)", span="0-0"];
m41_312 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteRaw(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteRaw(string)", span="126-126"];
m41_21 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSingleObject()", file="ReflectionUtils.cs", label="writer.WritePropertyName(''Blah'')", span="82-82"];
m41_29 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(int)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(int)", span="278-278"];
m41_30 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
m41_564 [cluster="Unk.Parse", file="ReflectionUtils.cs", label="Entry Unk.Parse", span=""];
m41_19 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSingleObject()", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="79-79"];
m41_59 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="ReflectionUtils.cs", label=fields, span="114-114"];
m41_94 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Guid)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Guid)", span="457-457"];
m41_322 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteRawValue(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteRawValue(string)", span="135-135"];
m41_13 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="ReflectionUtils.cs", label="return selectedFlagsValues;", span="57-57"];
m41_20 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSingleObject()", file="ReflectionUtils.cs", label="writer.WriteStartObject()", span="81-81"];
m41_218 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", span="300-300"];
m41_234 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="ReflectionUtils.cs", label="Assert.AreEqual(''4E-02-00-00-02-30-2D-31-2D-32-2D-33-2D-34-2D-35-2D-36-2D-37-2D-38-2D-39-2D-31-30-2D-31-31-2D-31-32-2D-31-33-2D-31-34-2D-31-35-2D-31-36-2D-31-37-2D-31-38-2D-31-39-2D-32-30-2D-32-31-2D-32-32-2D-32-33-2D-32-34-2D-32-35-2D-32-36-2D-32-37-2D-32-38-2D-32-39-2D-33-30-2D-33-31-2D-33-32-2D-33-33-2D-33-34-2D-33-35-2D-33-36-2D-33-37-2D-33-38-2D-33-39-2D-34-30-2D-34-31-2D-34-32-2D-34-33-2D-34-34-2D-34-35-2D-34-36-2D-34-37-2D-34-38-2D-34-39-2D-35-30-2D-35-31-2D-35-32-2D-35-33-2D-35-34-2D-35-35-2D-35-36-2D-35-37-2D-35-38-2D-35-39-2D-36-30-2D-36-31-2D-36-32-2D-36-33-2D-36-34-2D-36-35-2D-36-36-2D-36-37-2D-36-38-2D-36-39-2D-37-30-2D-37-31-2D-37-32-2D-37-33-2D-37-34-2D-37-35-2D-37-36-2D-37-37-2D-37-38-2D-37-39-2D-38-30-2D-38-31-2D-38-32-2D-38-33-2D-38-34-2D-38-35-2D-38-36-2D-38-37-2D-38-38-2D-38-39-2D-39-30-2D-39-31-2D-39-32-2D-39-33-2D-39-34-2D-39-35-2D-39-36-2D-39-37-2D-39-38-2D-39-39-00-22-01-00-00-30-2D-31-2D-32-2D-33-2D-34-2D-35-2D-36-2D-37-2D-38-2D-39-2D-31-30-2D-31-31-2D-31-32-2D-31-33-2D-31-34-2D-31-35-2D-31-36-2D-31-37-2D-31-38-2D-31-39-2D-32-30-2D-32-31-2D-32-32-2D-32-33-2D-32-34-2D-32-35-2D-32-36-2D-32-37-2D-32-38-2D-32-39-2D-33-30-2D-33-31-2D-33-32-2D-33-33-2D-33-34-2D-33-35-2D-33-36-2D-33-37-2D-33-38-2D-33-39-2D-34-30-2D-34-31-2D-34-32-2D-34-33-2D-34-34-2D-34-35-2D-34-36-2D-34-37-2D-34-38-2D-34-39-2D-35-30-2D-35-31-2D-35-32-2D-35-33-2D-35-34-2D-35-35-2D-35-36-2D-35-37-2D-35-38-2D-35-39-2D-36-30-2D-36-31-2D-36-32-2D-36-33-2D-36-34-2D-36-35-2D-36-36-2D-36-37-2D-36-38-2D-36-39-2D-37-30-2D-37-31-2D-37-32-2D-37-33-2D-37-34-2D-37-35-2D-37-36-2D-37-37-2D-37-38-2D-37-39-2D-38-30-2D-38-31-2D-38-32-2D-38-33-2D-38-34-2D-38-35-2D-38-36-2D-38-37-2D-38-38-2D-38-39-2D-39-30-2D-39-31-2D-39-32-2D-39-33-2D-39-34-2D-39-35-2D-39-36-2D-39-37-2D-39-38-2D-39-39-00-00'', bson)", span="321-321"];
m41_220 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="303-303"];
m41_233 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="ReflectionUtils.cs", label="string bson = BytesToHex(ms.ToArray())", span="320-320"];
m41_219 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="302-302"];
m41_221 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="ReflectionUtils.cs", label="StringBuilder largeStringBuilder = new StringBuilder()", span="305-305"];
m41_229 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="ReflectionUtils.cs", label="writer.WriteStartObject()", span="315-315"];
m41_230 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="ReflectionUtils.cs", label="writer.WritePropertyName(largeString)", span="316-316"];
m41_231 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="ReflectionUtils.cs", label="writer.WriteValue(largeString)", span="317-317"];
m41_232 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="ReflectionUtils.cs", label="writer.WriteEndObject()", span="318-318"];
m41_222 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="ReflectionUtils.cs", label="int i = 0", span="306-306"];
m41_225 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="ReflectionUtils.cs", label="largeStringBuilder.Append(''-'')", span="309-309"];
m41_226 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="ReflectionUtils.cs", label="largeStringBuilder.Append(i.ToString(CultureInfo.InvariantCulture))", span="311-311"];
m41_228 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="ReflectionUtils.cs", label="string largeString = largeStringBuilder.ToString()", span="313-313"];
m41_223 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="ReflectionUtils.cs", label="i < 100", span="306-306"];
m41_224 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="ReflectionUtils.cs", label="i > 0", span="308-308"];
m41_227 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="ReflectionUtils.cs", label="i++", span="306-306"];
m41_235 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteLargeStrings()", span="300-300"];
m41_110 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", span="265-265"];
m41_47 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="ReflectionUtils.cs", label="writer.WriteValue(float.MaxValue)", span="107-107"];
m41_73 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", file="ReflectionUtils.cs", label="values.Add(field.Name)", span="136-136"];
m41_76 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDouble()", color=green, community=0, file="ReflectionUtils.cs", label="writer.WriteStartArray()", prediction=29, span="125-125"];
m41_75 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", span="123-123"];
m41_77 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDouble()", file="ReflectionUtils.cs", label="writer.WriteValue(99.99d)", span="126-126"];
m41_74 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", file="ReflectionUtils.cs", label="return values;", span="139-139"];
m41_78 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDouble()", file="ReflectionUtils.cs", label="writer.WriteEnd()", span="127-127"];
m41_80 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDouble()", file="ReflectionUtils.cs", label="Assert.AreEqual(''10-00-00-00-01-30-00-8F-C2-F5-28-5C-FF-58-40-00'', bson)", span="130-130"];
m41_79 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDouble()", file="ReflectionUtils.cs", label="string bson = BytesToHex(ms.ToArray())", span="129-129"];
m41_81 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDouble()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDouble()", span="120-120"];
m41_212 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="686-686"];
m41_302 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartConstructor(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartConstructor(string)", span="117-117"];
m41_57 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="ReflectionUtils.cs", label="List<object> values = new List<object>()", span="108-108"];
m41_16 [cluster="Unk.IsFalse", file="ReflectionUtils.cs", label="Entry Unk.IsFalse", span=""];
m41_17 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSingleObject()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSingleObject()", span="76-76"];
m41_540 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", span="814-814"];
m41_552 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="Assert.IsTrue(reader.Read())", span="832-832"];
m41_554 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="Assert.IsTrue(reader.Read())", span="834-834"];
m41_556 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="Assert.IsTrue(reader.Read())", span="837-837"];
m41_560 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="Assert.IsTrue(reader.Read())", span="842-842"];
m41_562 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="Assert.IsFalse(reader.Read())", span="845-845"];
m41_559 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="Assert.AreEqual(i, new BigInteger((byte[])reader.Value))", span="840-840"];
m41_549 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="Assert.AreEqual(''2A-00-00-00-05-42-6C-61-68-00-1A-00-00-00-00-F6-FF-FF-FF-FF-FF-FF-1F-B2-21-CB-28-59-84-C4-AE-03-8A-44-34-2F-4C-4E-9E-3E-01-00'', bson)", span="827-827"];
m41_553 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="833-833"];
m41_555 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="835-835"];
m41_557 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="838-838"];
m41_558 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="CollectionAssert.AreEqual(new byte[] { 246, 255, 255, 255, 255, 255, 255, 31, 178, 33, 203, 40, 89, 132, 196, 174, 3, 138, 68, 52, 47, 76, 78, 158, 62, 1 }, (byte[])reader.Value)", span="839-839"];
m41_561 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="843-843"];
m41_543 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="819-819"];
m41_551 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="BsonReader reader = new BsonReader(ms)", span="830-830"];
m41_550 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="829-829"];
m41_541 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="BigInteger i = BigInteger.Parse(''1999999999999999999999999999999999999999999999999999999999990'')", span="816-816"];
m41_548 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="string bson = BytesToHex(ms.ToArray())", span="826-826"];
m41_542 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="818-818"];
m41_544 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="writer.WriteStartObject()", span="821-821"];
m41_545 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="writer.WritePropertyName(''Blah'')", span="822-822"];
m41_546 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="writer.WriteValue(i)", span="823-823"];
m41_547 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="writer.WriteEndObject()", span="824-824"];
m41_563 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBigInteger()", span="814-814"];
m41_28 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="54-54"];
m41_213 [cluster="Unk.AreNotEqual", file="ReflectionUtils.cs", label="Entry Unk.AreNotEqual", span=""];
m41_487 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeDeserializeRegex()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeDeserializeRegex()", span="721-721"];
m41_493 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeDeserializeRegex()", file="ReflectionUtils.cs", label="serializer.Serialize(writer, c)", span="730-730"];
m41_495 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeDeserializeRegex()", file="ReflectionUtils.cs", label="Assert.AreEqual(''15-00-00-00-0B-52-65-67-65-78-00-28-68-69-29-00-69-75-78-00-00'', hex)", span="734-734"];
m41_492 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeDeserializeRegex()", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="729-729"];
m41_496 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeDeserializeRegex()", file="ReflectionUtils.cs", label="JObject o = (JObject)JObject.ReadFrom(new BsonReader(new MemoryStream(ms.ToArray())))", span="736-736"];
m41_491 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeDeserializeRegex()", file="ReflectionUtils.cs", label="JsonSerializer serializer = new JsonSerializer()", span="727-727"];
m41_489 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeDeserializeRegex()", file="ReflectionUtils.cs", label="RegexTestClass c = new RegexTestClass { Regex = r1 }", span="724-724"];
m41_494 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeDeserializeRegex()", file="ReflectionUtils.cs", label="string hex = BitConverter.ToString(ms.ToArray())", span="732-732"];
m41_490 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeDeserializeRegex()", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="726-726"];
m41_497 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeDeserializeRegex()", file="ReflectionUtils.cs", label="Console.WriteLine(o.ToString())", span="738-738"];
m41_488 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeDeserializeRegex()", file="ReflectionUtils.cs", label="Regex r1 = new Regex(''(hi)'', RegexOptions.ExplicitCapture | RegexOptions.IgnoreCase)", span="723-723"];
m41_498 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeDeserializeRegex()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeDeserializeRegex()", span="721-721"];
m41_50 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="ReflectionUtils.cs", label="writer.WriteValue(new DateTimeOffset(2000, 12, 29, 12, 30, 0, TimeSpan.Zero))", span="110-110"];
m41_46 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="ReflectionUtils.cs", label="writer.WriteValue(double.MaxValue)", span="106-106"];
m41_380 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", span="559-559"];
m41_382 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="562-562"];
m41_381 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="561-561"];
m41_383 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="ReflectionUtils.cs", label="writer.WriteStartObject()", span="564-564"];
m41_384 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="ReflectionUtils.cs", label="writer.WritePropertyName(''regex'')", span="565-565"];
m41_385 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="ReflectionUtils.cs", label="writer.WriteRegex(''abc'', ''i'')", span="566-566"];
m41_386 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="ReflectionUtils.cs", label="writer.WritePropertyName(''test'')", span="567-567"];
m41_387 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="ReflectionUtils.cs", label="writer.WriteRegex(string.Empty, null)", span="568-568"];
m41_388 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="ReflectionUtils.cs", label="writer.WriteEndObject()", span="569-569"];
m41_390 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="ReflectionUtils.cs", label="CollectionAssert.AreEquivalent(expected, ms.ToArray())", span="573-573"];
m41_389 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="ReflectionUtils.cs", label="byte[] expected = HexToBytes(''1A-00-00-00-0B-72-65-67-65-78-00-61-62-63-00-69-00-0B-74-65-73-74-00-00-00-00'')", span="571-571"];
m41_391 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRegexPlusContent()", span="559-559"];
m41_292 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteComment(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteComment(string)", span="108-108"];
m41_293 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteConstructor()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteConstructor()", span="428-428"];
m41_294 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteConstructor()", file="ReflectionUtils.cs", label="ExceptionAssert.Throws<JsonWriterException>(() =>\r\n            {\r\n                MemoryStream ms = new MemoryStream();\r\n                BsonWriter writer = new BsonWriter(ms);\r\n\r\n                writer.WriteStartArray();\r\n                writer.WriteStartConstructor(''fail'');\r\n            }, ''Cannot write JSON constructor as BSON. Path ''.'')", span="430-437"];
m41_295 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteConstructor()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteConstructor()", span="428-428"];
m41_392 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteRegex(string, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteRegex(string, string)", span="506-506"];
m41_440 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", span="645-645"];
m41_444 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="writer.WriteStartArray()", span="651-651"];
m41_453 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="Assert.IsTrue(reader.Read())", span="663-663"];
m41_455 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="Assert.IsTrue(reader.Read())", span="666-666"];
m41_458 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="Assert.IsTrue(reader.Read())", span="670-670"];
m41_461 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="Assert.IsTrue(reader.Read())", span="674-674"];
m41_464 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="Assert.IsTrue(reader.Read())", span="678-678"];
m41_466 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="Assert.IsFalse(reader.Read())", span="681-681"];
m41_454 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="664-664"];
m41_456 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="667-667"];
m41_457 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="Assert.AreEqual(new DateTime(2000, 10, 12, 20, 55, 0, DateTimeKind.Utc), reader.Value)", span="668-668"];
m41_459 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="671-671"];
m41_460 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="Assert.AreEqual(new DateTime(2000, 10, 12, 20, 55, 0, DateTimeKind.Utc), reader.Value)", span="672-672"];
m41_462 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="675-675"];
m41_463 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="Assert.AreEqual(new DateTime(2000, 10, 12, 20, 55, 0, DateTimeKind.Utc), reader.Value)", span="676-676"];
m41_465 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="679-679"];
m41_442 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="648-648"];
m41_443 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="writer.DateTimeKindHandling = DateTimeKind.Unspecified", span="649-649"];
m41_445 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="writer.WriteValue(new DateTime(2000, 10, 12, 20, 55, 0, DateTimeKind.Utc))", span="652-652"];
m41_450 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="BsonReader reader = new BsonReader(ms)", span="659-659"];
m41_452 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="reader.DateTimeKindHandling = DateTimeKind.Utc", span="661-661"];
m41_449 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="657-657"];
m41_441 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="647-647"];
m41_446 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="writer.WriteValue(new DateTime(2000, 10, 12, 20, 55, 0, DateTimeKind.Local))", span="653-653"];
m41_447 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="writer.WriteValue(new DateTime(2000, 10, 12, 20, 55, 0, DateTimeKind.Unspecified))", span="654-654"];
m41_448 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="writer.WriteEndArray()", span="655-655"];
m41_451 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="reader.ReadRootValueAsArray = true", span="660-660"];
m41_467 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteDateTimes()", span="645-645"];
m41_25 [cluster="Unk.SingleOrDefault", file="ReflectionUtils.cs", label="Entry Unk.SingleOrDefault", span=""];
m41_24 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m41_18 [cluster="object.GetType()", file="ReflectionUtils.cs", label="Entry object.GetType()", span="0-0"];
m41_22 [cluster="System.Collections.Generic.List<T>.List()", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m41_23 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="ReflectionUtils.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m41_26 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="54-54"];
m41_12 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="ReflectionUtils.cs", label="selectedFlagsValues.Add(default(T))", span="55-55"];
m41_215 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m41_539 [cluster="System.Guid.ToString()", file="ReflectionUtils.cs", label="Entry System.Guid.ToString()", span="0-0"];
m41_344 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="674-674"];
m41_503 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeByteArray_ErrorWhenTopLevel()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeByteArray_ErrorWhenTopLevel()", span="745-745"];
m41_507 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeByteArray_ErrorWhenTopLevel()", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="752-752"];
m41_506 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeByteArray_ErrorWhenTopLevel()", file="ReflectionUtils.cs", label="JsonSerializer serializer = new JsonSerializer()", span="750-750"];
m41_504 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeByteArray_ErrorWhenTopLevel()", file="ReflectionUtils.cs", label="byte[] b = Encoding.UTF8.GetBytes(''Hello world'')", span="747-747"];
m41_505 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeByteArray_ErrorWhenTopLevel()", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="749-749"];
m41_508 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeByteArray_ErrorWhenTopLevel()", file="ReflectionUtils.cs", label="ExceptionAssert.Throws<JsonWriterException>(() =>\r\n            {\r\n                serializer.Serialize(writer, b);\r\n            }, ''Error writing Binary value. BSON must start with an Object or Array. Path ''.'')", span="754-757"];
m41_509 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeByteArray_ErrorWhenTopLevel()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeByteArray_ErrorWhenTopLevel()", span="745-745"];
m41_62 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="ReflectionUtils.cs", label="return values;", span="120-120"];
m41_63 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", span="103-103"];
m41_113 [cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="ReflectionUtils.cs", label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m41_565 [cluster="Unk.WriteValue", file="ReflectionUtils.cs", label="Entry Unk.WriteValue", span=""];
m41_499 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="ReflectionUtils.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m41_32 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="ReflectionUtils.cs", label="enumType == null", span="76-76"];
m41_303 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRaw()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRaw()", span="441-441"];
m41_304 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRaw()", file="ReflectionUtils.cs", label="ExceptionAssert.Throws<JsonWriterException>(() =>\r\n            {\r\n                MemoryStream ms = new MemoryStream();\r\n                BsonWriter writer = new BsonWriter(ms);\r\n\r\n                writer.WriteStartArray();\r\n                writer.WriteRaw(''fail'');\r\n            }, ''Cannot write raw JSON as BSON. Path ''.'')", span="443-450"];
m41_305 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRaw()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRaw()", span="441-441"];
m41_513 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadGuid()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadGuid()", span="771-771"];
m41_519 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadGuid()", color=green, community=0, file="ReflectionUtils.cs", label="serializer.Serialize(writer, c)", prediction=30, span="781-781"];
m41_514 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadGuid()", file="ReflectionUtils.cs", label="GuidTestClass c = new GuidTestClass()", span="773-773"];
m41_517 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadGuid()", file="ReflectionUtils.cs", label="JsonSerializer serializer = new JsonSerializer()", span="777-777"];
m41_518 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadGuid()", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="779-779"];
m41_520 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadGuid()", file="ReflectionUtils.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="783-783"];
m41_523 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadGuid()", color=green, community=0, file="ReflectionUtils.cs", label="Assert.AreEqual(c.AGuid, c2.AGuid)", prediction=30, span="788-788"];
m41_522 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadGuid()", file="ReflectionUtils.cs", label="GuidTestClass c2 = serializer.Deserialize<GuidTestClass>(reader)", span="786-786"];
m41_515 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadGuid()", file="ReflectionUtils.cs", label="c.AGuid = new Guid(''af45dccf-df13-44fe-82be-6212c09eda84'')", span="774-774"];
m41_516 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadGuid()", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="776-776"];
m41_521 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadGuid()", file="ReflectionUtils.cs", label="BsonReader reader = new BsonReader(ms)", span="784-784"];
m41_524 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadGuid()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadGuid()", span="771-771"];
m41_72 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", file="ReflectionUtils.cs", label=fields, span="134-134"];
m41_166 [cluster="System.Convert.ToDouble(int)", file="ReflectionUtils.cs", label="Entry System.Convert.ToDouble(int)", span="0-0"];
m41_65 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(float)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(float)", span="326-326"];
m41_502 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="404-404"];
m41_211 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="860-860"];
m41_238 [cluster="int.ToString(System.IFormatProvider)", file="ReflectionUtils.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m41_64 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(double)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(double)", span="336-336"];
m41_210 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433"];
m41_114 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", span="172-172"];
m41_118 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="writer.WriteStartArray()", span="178-178"];
m41_130 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="reader.Read()", span="195-195"];
m41_131 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="reader.Read()", span="196-196"];
m41_132 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="reader.Read()", span="197-197"];
m41_133 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="reader.Read()", span="198-198"];
m41_127 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="Assert.AreEqual(expected, bson)", span="191-191"];
m41_134 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="199-199"];
m41_117 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="177-177"];
m41_119 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="writer.WriteValue(''a'')", span="179-179"];
m41_128 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="BsonReader reader = new BsonReader(new MemoryStream(ms.ToArray()))", span="193-193"];
m41_129 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="reader.ReadRootValueAsArray = true", span="194-194"];
m41_124 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="186-186"];
m41_126 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="string bson = BytesToHex(ms.ToArray())", span="189-189"];
m41_125 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="string expected = ''2B-00-00-00-02-30-00-02-00-00-00-61-00-02-31-00-02-00-00-00-62-00-05-32-00-0C-00-00-00-00-48-65-6C-6C-6F-20-77-6F-72-6C-64-21-00''", span="188-188"];
m41_135 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="CollectionAssert.AreEquivalent(data, (byte[])reader.Value)", span="200-200"];
m41_116 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="176-176"];
m41_120 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="writer.WriteValue(''b'')", span="180-180"];
m41_121 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="writer.WriteValue(data)", span="181-181"];
m41_122 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="writer.WriteEndArray()", span="182-182"];
m41_123 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="writer.Flush()", span="184-184"];
m41_115 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="byte[] data = Encoding.UTF8.GetBytes(''Hello world!'')", span="174-174"];
m41_136 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteBytes()", span="172-172"];
m41_112 [cluster="Newtonsoft.Json.Bson.BsonWriter.Flush()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.Flush()", span="84-84"];
m41_525 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.GuidTestClass.GuidTestClass()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.GuidTestClass.GuidTestClass()", span="760-760"];
m41_52 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValues()", file="ReflectionUtils.cs", label="writer.WriteEnd()", span="112-112"];
m41_209 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m41_67 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(byte[])", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(byte[])", span="447-447"];
m41_140 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.Read()", span="242-242"];
m41_15 [cluster="Newtonsoft.Json.Bson.BsonWriter.Close()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.Close()", span="174-174"];
m41_95 [cluster="System.Console.WriteLine(string)", file="ReflectionUtils.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m41_313 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRawValue()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRawValue()", span="454-454"];
m41_314 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRawValue()", file="ReflectionUtils.cs", label="ExceptionAssert.Throws<JsonWriterException>(() =>\r\n            {\r\n                MemoryStream ms = new MemoryStream();\r\n                BsonWriter writer = new BsonWriter(ms);\r\n\r\n                writer.WriteStartArray();\r\n                writer.WriteRawValue(''fail'');\r\n            }, ''Cannot write raw JSON as BSON. Path ''.'')", span="456-463"];
m41_315 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRawValue()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteRawValue()", span="454-454"];
m41_33 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="ReflectionUtils.cs", label="throw new ArgumentNullException(''enumType'');", span="77-77"];
m41_34 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="ReflectionUtils.cs", label="ValidationUtils.ArgumentTypeIsEnum(enumType, ''enumType'')", span="79-79"];
m41_37 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="ReflectionUtils.cs", label="EnumValues<TUnderlyingType> nameValues = new EnumValues<TUnderlyingType>()", span="84-84"];
m41_36 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="ReflectionUtils.cs", label="IList<string> enumNames = GetNames(enumType)", span="82-82"];
m41_38 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="ReflectionUtils.cs", label="int i = 0", span="86-86"];
m41_53 [cluster="System.Exception.Exception(string, System.Exception)", file="ReflectionUtils.cs", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
m41_35 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="ReflectionUtils.cs", label="IList<object> enumValues = GetValues(enumType)", span="81-81"];
m41_39 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="ReflectionUtils.cs", label="i < enumValues.Count", span="86-86"];
m41_40 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="ReflectionUtils.cs", label="nameValues.Add(new EnumValue<TUnderlyingType>(enumNames[i], (TUnderlyingType)Convert.ChangeType(enumValues[i], typeof(TUnderlyingType), CultureInfo.CurrentCulture)))", span="90-90"];
m41_41 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="ReflectionUtils.cs", label=OverflowException, span="92-92"];
m41_42 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="ReflectionUtils.cs", label="throw new Exception(\r\n            string.Format(CultureInfo.InvariantCulture, ''Value from enum with the underlying type of {0} cannot be added to dictionary with a value type of {1}. Value was too large: {2}'',\r\n              Enum.GetUnderlyingType(enumType), typeof(TUnderlyingType), Convert.ToUInt64(enumValues[i], CultureInfo.InvariantCulture)), e);", span="94-96"];
m41_43 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="ReflectionUtils.cs", label="i++", span="86-86"];
m41_44 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="ReflectionUtils.cs", label="return nameValues;", span="100-100"];
m41_45 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues<TUnderlyingType>(System.Type)", span="74-74"];
m41_48 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", span="103-103"];
m41_49 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", span="123-123"];
m41_55 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="ReflectionUtils.cs", label="!enumType.IsEnum", span="105-105"];
m41_486 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="943-943"];
m41_526 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteStringReadGuid()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteStringReadGuid()", span="792-792"];
m41_527 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteStringReadGuid()", color=green, community=0, file="ReflectionUtils.cs", label="StringTestClass c = new StringTestClass()", prediction=32, span="794-794"];
m41_528 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteStringReadGuid()", color=green, community=0, file="ReflectionUtils.cs", label="c.AGuid = new Guid(''af45dccf-df13-44fe-82be-6212c09eda84'').ToString()", prediction=33, span="795-795"];
m41_532 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteStringReadGuid()", color=green, community=0, file="ReflectionUtils.cs", label="serializer.Serialize(writer, c)", prediction=32, span="802-802"];
m41_536 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteStringReadGuid()", file="ReflectionUtils.cs", label="Assert.AreEqual(c.AGuid, c2.AGuid.ToString())", span="809-809"];
m41_529 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteStringReadGuid()", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="797-797"];
m41_530 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteStringReadGuid()", file="ReflectionUtils.cs", label="JsonSerializer serializer = new JsonSerializer()", span="798-798"];
m41_531 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteStringReadGuid()", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="800-800"];
m41_533 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteStringReadGuid()", file="ReflectionUtils.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="804-804"];
m41_535 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteStringReadGuid()", file="ReflectionUtils.cs", label="GuidTestClass c2 = serializer.Deserialize<GuidTestClass>(reader)", span="807-807"];
m41_534 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteStringReadGuid()", file="ReflectionUtils.cs", label="BsonReader reader = new BsonReader(ms)", span="805-805"];
m41_537 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteStringReadGuid()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteStringReadGuid()", span="792-792"];
m41_141 [cluster="Unk.AreEquivalent", file="ReflectionUtils.cs", label="Entry Unk.AreEquivalent", span=""];
m41_342 [cluster="System.DateTime.Parse(string)", file="ReflectionUtils.cs", label="Entry System.DateTime.Parse(string)", span="0-0"];
m41_271 [cluster="Unk.IsNotNull", file="ReflectionUtils.cs", label="Entry Unk.IsNotNull", span=""];
m41_56 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="ReflectionUtils.cs", label="throw new ArgumentException(''Type ''' + enumType.Name + ''' is not an enum.'');", span="106-106"];
m41_111 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381"];
m41_368 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", span="541-541"];
m41_370 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="544-544"];
m41_369 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="543-543"];
m41_371 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="ReflectionUtils.cs", label="writer.WriteStartObject()", span="546-546"];
m41_372 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="ReflectionUtils.cs", label="writer.WritePropertyName(''_id'')", span="547-547"];
m41_373 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="ReflectionUtils.cs", label="writer.WriteObjectId(HexToBytes(''4ABBED9D1D8B0F0218000001''))", span="548-548"];
m41_374 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="ReflectionUtils.cs", label="writer.WritePropertyName(''test'')", span="549-549"];
m41_375 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="ReflectionUtils.cs", label="writer.WriteValue(''1234£56'')", span="550-550"];
m41_376 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="ReflectionUtils.cs", label="writer.WriteEndObject()", span="551-551"];
m41_378 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="ReflectionUtils.cs", label="CollectionAssert.AreEquivalent(expected, ms.ToArray())", span="555-555"];
m41_377 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="ReflectionUtils.cs", label="byte[] expected = HexToBytes(''29000000075F6964004ABBED9D1D8B0F02180000010274657374000900000031323334C2A335360000'')", span="553-553"];
m41_379 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOidPlusContent()", span="541-541"];
m41_471 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="687-696"];
m41_289 [cluster="lambda expression", file="ReflectionUtils.cs", label="writer.WriteStartArray()", span="422-422"];
m41_299 [cluster="lambda expression", file="ReflectionUtils.cs", label="writer.WriteStartArray()", span="435-435"];
m41_309 [cluster="lambda expression", file="ReflectionUtils.cs", label="writer.WriteStartArray()", span="448-448"];
m41_319 [cluster="lambda expression", file="ReflectionUtils.cs", label="writer.WriteStartArray()", span="461-461"];
m41_511 [cluster="lambda expression", file="ReflectionUtils.cs", label="serializer.Serialize(writer, b)", span="756-756"];
m41_288 [cluster="lambda expression", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="420-420"];
m41_298 [cluster="lambda expression", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="433-433"];
m41_308 [cluster="lambda expression", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="446-446"];
m41_318 [cluster="lambda expression", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="459-459"];
m41_473 [cluster="lambda expression", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(stream)", span="691-691"];
m41_290 [cluster="lambda expression", file="ReflectionUtils.cs", label="writer.WriteComment(''fail'')", span="423-423"];
m41_300 [cluster="lambda expression", file="ReflectionUtils.cs", label="writer.WriteStartConstructor(''fail'')", span="436-436"];
m41_310 [cluster="lambda expression", file="ReflectionUtils.cs", label="writer.WriteRaw(''fail'')", span="449-449"];
m41_320 [cluster="lambda expression", file="ReflectionUtils.cs", label="writer.WriteRawValue(''fail'')", span="462-462"];
m41_510 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="754-757"];
m41_512 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="754-757"];
m41_287 [cluster="lambda expression", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="419-419"];
m41_297 [cluster="lambda expression", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="432-432"];
m41_307 [cluster="lambda expression", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="445-445"];
m41_317 [cluster="lambda expression", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="458-458"];
m41_472 [cluster="lambda expression", file="ReflectionUtils.cs", label="MemoryStream stream = new MemoryStream()", span="689-689"];
m41_474 [cluster="lambda expression", file="ReflectionUtils.cs", label="writer.WriteValue(''test'')", span="693-693"];
m41_475 [cluster="lambda expression", file="ReflectionUtils.cs", label="writer.Flush()", span="694-694"];
m41_291 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="417-424"];
m41_301 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="430-437"];
m41_311 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="443-450"];
m41_321 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="456-463"];
m41_286 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="417-424"];
m41_296 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="430-437"];
m41_306 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="443-450"];
m41_316 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="456-463"];
m41_476 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="687-696"];
m41_501 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1843-1843"];
m41_0 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", span="35-35"];
m41_3 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="ReflectionUtils.cs", label="throw new Exception(''Enum type {0} is not a set of flags.''.FormatWith(CultureInfo.InvariantCulture, enumType));", span="40-40"];
m41_8 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="ReflectionUtils.cs", label=enumNameValues, span="48-48"];
m41_10 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="ReflectionUtils.cs", label="selectedFlagsValues.Add((T)Convert.ChangeType(enumNameValue.Value, underlyingType, CultureInfo.CurrentCulture))", span="51-51"];
m41_2 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="ReflectionUtils.cs", label="!enumType.IsDefined(typeof(FlagsAttribute), false)", span="39-39"];
m41_7 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="ReflectionUtils.cs", label="IList<T> selectedFlagsValues = new List<T>()", span="46-46"];
m41_1 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="ReflectionUtils.cs", label="Type enumType = typeof(T)", span="37-37"];
m41_4 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="ReflectionUtils.cs", label="Type underlyingType = Enum.GetUnderlyingType(value.GetType())", span="42-42"];
m41_6 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="ReflectionUtils.cs", label="EnumValues<ulong> enumNameValues = GetNamesAndValues<T>()", span="45-45"];
m41_9 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="ReflectionUtils.cs", label="(num & enumNameValue.Value) == enumNameValue.Value && enumNameValue.Value != 0", span="50-50"];
m41_5 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="ReflectionUtils.cs", label="ulong num = Convert.ToUInt64(value, CultureInfo.InvariantCulture)", span="44-44"];
m41_11 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="ReflectionUtils.cs", label="selectedFlagsValues.Count == 0 && enumNameValues.SingleOrDefault(v => v.Value == 0) != null", span="54-54"];
m41_58 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(ulong)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(ulong)", span="313-313"];
m41_343 [cluster="System.BitConverter.ToString(byte[])", file="ReflectionUtils.cs", label="Entry System.BitConverter.ToString(byte[])", span="0-0"];
m41_323 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", span="467-467"];
m41_332 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="ReflectionUtils.cs", label="serializer.Serialize(writer, p)", span="480-480"];
m41_338 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="ReflectionUtils.cs", label="Assert.AreEqual(''Carlos' Spicy Wieners'', deserializedProduct.Name)", span="502-502"];
m41_339 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="ReflectionUtils.cs", label="Assert.AreEqual(9.95m, deserializedProduct.Price)", span="503-503"];
m41_340 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="ReflectionUtils.cs", label="Assert.AreEqual(3, deserializedProduct.Sizes.Length)", span="504-504"];
m41_331 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="479-479"];
m41_335 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="ReflectionUtils.cs", label="BsonReader reader = new BsonReader(ms)", span="495-495"];
m41_330 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="ReflectionUtils.cs", label="JsonSerializer serializer = new JsonSerializer()", span="476-476"];
m41_334 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="ReflectionUtils.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="492-492"];
m41_324 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="ReflectionUtils.cs", label="Product p = new Product()", span="469-469"];
m41_333 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="ReflectionUtils.cs", label="Console.WriteLine(BitConverter.ToString(ms.ToArray()))", span="482-482"];
m41_336 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="ReflectionUtils.cs", label="Product deserializedProduct = serializer.Deserialize<Product>(reader)", span="496-496"];
m41_337 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="ReflectionUtils.cs", label="Console.WriteLine(deserializedProduct.Name)", span="498-498"];
m41_329 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="475-475"];
m41_325 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="ReflectionUtils.cs", label="p.ExpiryDate = DateTime.Parse(''2009-04-05T14:45:00Z'')", span="470-470"];
m41_326 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="ReflectionUtils.cs", label="p.Name = ''Carlos' Spicy Wieners''", span="471-471"];
m41_327 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="ReflectionUtils.cs", label="p.Price = 9.95m", span="472-472"];
m41_328 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="ReflectionUtils.cs", label="p.Sizes = new[] { ''Small'', ''Medium'', ''Large'' }", span="473-473"];
m41_341 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.Example()", span="467-467"];
m41_138 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125"];
m41_345 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", span="508-508"];
m41_357 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", color=green, community=0, file="ReflectionUtils.cs", label="Assert.IsTrue(reader.Read())", prediction=35, span="526-526"];
m41_356 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="ReflectionUtils.cs", label="BsonReader reader = new BsonReader(ms)", span="524-524"];
m41_358 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="ReflectionUtils.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="527-527"];
m41_346 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="510-510"];
m41_355 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="ReflectionUtils.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="523-523"];
m41_359 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="ReflectionUtils.cs", label="Assert.IsTrue(reader.Read())", span="529-529"];
m41_360 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="ReflectionUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="530-530"];
m41_361 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="ReflectionUtils.cs", label="Assert.IsTrue(reader.Read())", span="532-532"];
m41_362 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="ReflectionUtils.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="533-533"];
m41_363 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="ReflectionUtils.cs", label="CollectionAssert.AreEquivalent(oid, (byte[])reader.Value)", span="534-534"];
m41_364 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="ReflectionUtils.cs", label="Assert.IsTrue(reader.Read())", span="536-536"];
m41_365 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="ReflectionUtils.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="537-537"];
m41_354 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="ReflectionUtils.cs", label="Assert.AreEqual(''17-00-00-00-07-5F-6F-69-64-00-01-02-03-04-05-06-07-08-09-0A-0B-0C-00'', bson)", span="521-521"];
m41_347 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="511-511"];
m41_353 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="ReflectionUtils.cs", label="string bson = BytesToHex(ms.ToArray())", span="520-520"];
m41_348 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="ReflectionUtils.cs", label="byte[] oid = new byte[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }", span="513-513"];
m41_349 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="ReflectionUtils.cs", label="writer.WriteStartObject()", span="515-515"];
m41_350 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="ReflectionUtils.cs", label="writer.WritePropertyName(''_oid'')", span="516-516"];
m41_351 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="ReflectionUtils.cs", label="writer.WriteObjectId(oid)", span="517-517"];
m41_352 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="ReflectionUtils.cs", label="writer.WriteEndObject()", span="518-518"];
m41_366 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteOid()", span="508-508"];
m41_485 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373"];
m41_367 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteObjectId(byte[])", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteObjectId(byte[])", span="488-488"];
m41_468 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValueOutsideOfObjectOrArray()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValueOutsideOfObjectOrArray()", span="685-685"];
m41_469 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValueOutsideOfObjectOrArray()", file="ReflectionUtils.cs", label="ExceptionAssert.Throws<JsonWriterException>(() =>\r\n            {\r\n                MemoryStream stream = new MemoryStream();\r\n\r\n                using (BsonWriter writer = new BsonWriter(stream))\r\n                {\r\n                    writer.WriteValue(''test'');\r\n                    writer.Flush();\r\n                }\r\n            }, ''Error writing String value. BSON must start with an Object or Array. Path ''.'')", span="687-696"];
m41_470 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValueOutsideOfObjectOrArray()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteValueOutsideOfObjectOrArray()", span="685-685"];
m41_165 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", span="92-92"];
m41_477 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.DateTimeZoneHandling()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.DateTimeZoneHandling()", span="700-700"];
m41_483 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.DateTimeZoneHandling()", file="ReflectionUtils.cs", label="Assert.AreEqual(''10-00-00-00-09-30-00-C8-88-07-6B-DC-00-00-00-00'', (BitConverter.ToString(ms.ToArray())))", span="712-712"];
m41_479 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.DateTimeZoneHandling()", file="ReflectionUtils.cs", label="JsonWriter writer = new BsonWriter(ms)\r\n            {\r\n                DateTimeZoneHandling = Json.DateTimeZoneHandling.Utc\r\n            }", span="703-706"];
m41_478 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.DateTimeZoneHandling()", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="702-702"];
m41_482 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.DateTimeZoneHandling()", file="ReflectionUtils.cs", label="writer.WriteEndArray()", span="710-710"];
m41_480 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.DateTimeZoneHandling()", file="ReflectionUtils.cs", label="writer.WriteStartArray()", span="708-708"];
m41_481 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.DateTimeZoneHandling()", file="ReflectionUtils.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified))", span="709-709"];
m41_484 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.DateTimeZoneHandling()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.DateTimeZoneHandling()", span="700-700"];
m41_566 [cluster="BigInteger.cstr", file="ReflectionUtils.cs", label="Entry BigInteger.cstr", span=""];
m41_142 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", span="204-204"];
m41_149 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="writer.WriteStartArray()", span="214-214"];
m41_163 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="Assert.AreEqual(expected, bson)", span="237-237"];
m41_144 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="207-207"];
m41_153 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="writer.WriteValue(value)", span="221-221"];
m41_148 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="writer.WritePropertyName(''a'')", span="213-213"];
m41_150 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="int i = 1", span="215-215"];
m41_160 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="232-232"];
m41_162 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="string bson = BytesToHex(ms.ToArray())", span="235-235"];
m41_161 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="string expected = ''87-00-00-00-05-5F-69-64-00-0C-00-00-00-00-4A-78-93-79-17-22-00-00-00-00-61-CF-04-61-00-5D-00-00-00-01-30-00-00-00-00-00-00-00-F0-3F-01-31-00-00-00-00-00-00-00-00-40-01-32-00-00-00-00-00-00-00-08-40-01-33-00-00-00-00-00-00-00-10-40-01-34-00-00-00-00-00-00-00-14-50-01-35-00-00-00-00-00-00-00-18-40-01-36-00-00-00-00-00-00-00-1C-40-01-37-00-00-00-00-00-00-00-20-40-00-02-62-00-05-00-00-00-74-65-73-74-00-00''", span="234-234"];
m41_143 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="206-206"];
m41_145 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="writer.WriteStartObject()", span="208-208"];
m41_146 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="writer.WritePropertyName(''_id'')", span="210-210"];
m41_147 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="writer.WriteValue(HexToBytes(''4A-78-93-79-17-22-00-00-00-00-61-CF''))", span="211-211"];
m41_155 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="writer.WriteEndArray()", span="223-223"];
m41_156 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="writer.WritePropertyName(''b'')", span="225-225"];
m41_157 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="writer.WriteValue(''test'')", span="226-226"];
m41_158 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="writer.WriteEndObject()", span="228-228"];
m41_159 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="writer.Flush()", span="230-230"];
m41_152 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="double value = (i != 5)\r\n                    ? Convert.ToDouble(i)\r\n                    : 5.78960446186581E+77d", span="217-219"];
m41_154 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="i++", span="215-215"];
m41_151 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="i <= 8", span="215-215"];
m41_164 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteNestedArray()", span="204-204"];
m41_538 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.StringTestClass.StringTestClass()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.StringTestClass.StringTestClass()", span="765-765"];
m41_272 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", span="400-400"];
m41_280 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", file="ReflectionUtils.cs", label="Assert.AreEqual(''0C-00-00-00-02-00-01-00-00-00-00-00'', bson)", span="411-411"];
m41_274 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="403-403"];
m41_279 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", file="ReflectionUtils.cs", label="string bson = BytesToHex(ms.ToArray())", span="410-410"];
m41_273 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="402-402"];
m41_275 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", file="ReflectionUtils.cs", label="writer.WriteStartObject()", span="405-405"];
m41_276 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", file="ReflectionUtils.cs", label="writer.WritePropertyName('''')", span="406-406"];
m41_277 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", file="ReflectionUtils.cs", label="writer.WriteValue('''')", span="407-407"];
m41_278 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", file="ReflectionUtils.cs", label="writer.WriteEndObject()", span="408-408"];
m41_281 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteEmptyStrings()", span="400-400"];
m41_500 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.RegexTestClass.RegexTestClass()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.RegexTestClass.RegexTestClass()", span="715-715"];
m41_216 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512"];
m41_240 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", span="325-325"];
m41_246 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="serializer.Serialize(writer, jsonGoogleMapGeocoder)", span="370-370"];
m41_251 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="Assert.AreEqual(''1600 Amphitheatre Parkway, Mountain View, CA, USA'', bsonGoogleMapGeocoder.Name)", span="377-377"];
m41_252 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="Assert.AreEqual(''200'', bsonGoogleMapGeocoder.Status.Code)", span="378-378"];
m41_253 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="Assert.AreEqual(''geocode'', bsonGoogleMapGeocoder.Status.Request)", span="379-379"];
m41_256 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="Assert.AreEqual(1, placemarks.Count)", span="383-383"];
m41_258 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="Assert.AreEqual(''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'', placemark.Address)", span="386-386"];
m41_259 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="Assert.AreEqual(8, placemark.AddressDetails.Accuracy)", span="387-387"];
m41_260 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="Assert.AreEqual(''US'', placemark.AddressDetails.Country.CountryNameCode)", span="388-388"];
m41_261 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="Assert.AreEqual(''CA'', placemark.AddressDetails.Country.AdministrativeArea.AdministrativeAreaName)", span="389-389"];
m41_262 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="Assert.AreEqual(''Santa Clara'', placemark.AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName)", span="390-390"];
m41_263 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="Assert.AreEqual(''Mountain View'', placemark.AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.Locality.LocalityName)", span="391-391"];
m41_264 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="Assert.AreEqual(''1600 Amphitheatre Pkwy'', placemark.AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.Locality.Thoroughfare.ThoroughfareName)", span="392-392"];
m41_265 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="Assert.AreEqual(''94043'', placemark.AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.Locality.PostalCode.PostalCodeNumber)", span="393-393"];
m41_266 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="Assert.AreEqual(-122.083739m, placemark.Point.Coordinates[0])", span="394-394"];
m41_267 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="Assert.AreEqual(37.423021m, placemark.Point.Coordinates[1])", span="395-395"];
m41_268 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="Assert.AreEqual(0m, placemark.Point.Coordinates[2])", span="396-396"];
m41_244 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="367-367"];
m41_248 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="BsonReader reader = new BsonReader(ms)", span="373-373"];
m41_245 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="JsonSerializer serializer = new JsonSerializer()", span="369-369"];
m41_247 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="372-372"];
m41_242 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="364-364"];
m41_249 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="GoogleMapGeocoderStructure bsonGoogleMapGeocoder = (GoogleMapGeocoderStructure)serializer.Deserialize(reader, typeof(GoogleMapGeocoderStructure))", span="374-374"];
m41_250 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="Assert.IsNotNull(bsonGoogleMapGeocoder)", span="376-376"];
m41_254 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="IList<Placemark> placemarks = bsonGoogleMapGeocoder.Placemark", span="381-381"];
m41_255 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="Assert.IsNotNull(placemarks)", span="382-382"];
m41_257 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="Placemark placemark = placemarks[0]", span="385-385"];
m41_243 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="366-366"];
m41_241 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="327-362"];
m41_269 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeGoogleGeoCode()", span="325-325"];
m41_270 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739"];
m41_393 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", span="577-577"];
m41_402 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="ReflectionUtils.cs", label="serializer.Serialize(writer, p)", span="589-589"];
m41_407 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Assert.AreEqual(null, deserializedProduct.Name)", span="598-598"];
m41_408 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Assert.AreEqual(9.95m, deserializedProduct.Price)", span="599-599"];
m41_409 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Assert.AreEqual(3, deserializedProduct.Sizes.Length)", span="600-600"];
m41_410 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="601-601"];
m41_411 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Assert.AreEqual('''', deserializedProduct.Sizes[1])", span="602-602"];
m41_412 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Assert.AreEqual(null, deserializedProduct.Sizes[2])", span="603-603"];
m41_401 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="588-588"];
m41_404 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="ReflectionUtils.cs", label="BsonReader reader = new BsonReader(ms)", span="593-593"];
m41_400 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="ReflectionUtils.cs", label="JsonSerializer serializer = new JsonSerializer()", span="586-586"];
m41_403 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="ReflectionUtils.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="591-591"];
m41_394 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Product p = new Product()", span="579-579"];
m41_405 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Product deserializedProduct = serializer.Deserialize<Product>(reader)", span="594-594"];
m41_406 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Console.WriteLine(deserializedProduct.Name)", span="596-596"];
m41_399 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="585-585"];
m41_395 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="ReflectionUtils.cs", label="p.ExpiryDate = DateTime.Parse(''2009-04-05T14:45:00Z'')", span="580-580"];
m41_396 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="ReflectionUtils.cs", label="p.Name = null", span="581-581"];
m41_397 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="ReflectionUtils.cs", label="p.Price = 9.95m", span="582-582"];
m41_398 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="ReflectionUtils.cs", label="p.Sizes = new[] { ''Small'', '''', null }", span="583-583"];
m41_413 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.SerializeEmptyAndNullStrings()", span="577-577"];
m41_414 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", span="607-607"];
m41_417 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="writer.WriteStartArray()", span="612-612"];
m41_425 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Assert.IsTrue(reader.Read())", span="623-623"];
m41_427 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Assert.IsTrue(reader.Read())", span="626-626"];
m41_430 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Assert.IsTrue(reader.Read())", span="630-630"];
m41_433 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Assert.IsTrue(reader.Read())", span="634-634"];
m41_436 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Assert.IsTrue(reader.Read())", span="638-638"];
m41_438 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Assert.IsFalse(reader.Read())", span="641-641"];
m41_426 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="624-624"];
m41_428 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="627-627"];
m41_429 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Assert.AreEqual(''Content!'', reader.Value)", span="628-628"];
m41_431 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="631-631"];
m41_432 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Assert.AreEqual('''', reader.Value)", span="632-632"];
m41_434 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="635-635"];
m41_435 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Assert.AreEqual(null, reader.Value)", span="636-636"];
m41_437 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="639-639"];
m41_416 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="610-610"];
m41_418 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="writer.WriteValue(''Content!'')", span="613-613"];
m41_423 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="BsonReader reader = new BsonReader(ms)", span="620-620"];
m41_424 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="reader.ReadRootValueAsArray = true", span="621-621"];
m41_422 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="618-618"];
m41_415 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="609-609"];
m41_419 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="writer.WriteValue('''')", span="614-614"];
m41_420 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="writer.WriteValue((string)null)", span="615-615"];
m41_421 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="writer.WriteEndArray()", span="616-616"];
m41_439 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteReadEmptyAndNullStrings()", span="607-607"];
m41_282 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteComment()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteComment()", span="415-415"];
m41_283 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteComment()", file="ReflectionUtils.cs", label="ExceptionAssert.Throws<JsonWriterException>(() =>\r\n            {\r\n                MemoryStream ms = new MemoryStream();\r\n                BsonWriter writer = new BsonWriter(ms);\r\n\r\n                writer.WriteStartArray();\r\n                writer.WriteComment(''fail'');\r\n            }, ''Cannot write JSON comment as BSON. Path ''.'')", span="417-424"];
m41_284 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteComment()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteComment()", span="415-415"];
m41_237 [cluster="System.Text.StringBuilder.Append(string)", file="ReflectionUtils.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m41_167 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", span="241-241"];
m41_178 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="serializer.Serialize(writer, s1)", span="261-261"];
m41_198 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="serializer.Serialize(writer1, s1)", span="285-285"];
m41_183 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="Assert.AreEqual(s1.Color, s2.Color)", span="268-268"];
m41_184 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="Assert.AreEqual(s1.Cost, s2.Cost)", span="269-269"];
m41_185 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="Assert.AreEqual(s1.Employees, s2.Employees)", span="270-270"];
m41_186 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="Assert.AreEqual(s1.Escape, s2.Escape)", span="271-271"];
m41_187 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="Assert.AreEqual(s1.Establised, s2.Establised)", span="272-272"];
m41_188 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="Assert.AreEqual(s1.Mottos.Count, s2.Mottos.Count)", span="273-273"];
m41_189 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="Assert.AreEqual(s1.Mottos.First(), s2.Mottos.First())", span="274-274"];
m41_190 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="Assert.AreEqual(s1.Mottos.Last(), s2.Mottos.Last())", span="275-275"];
m41_191 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="Assert.AreEqual(s1.Open, s2.Open)", span="276-276"];
m41_192 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="Assert.AreEqual(s1.product.Count, s2.product.Count)", span="277-277"];
m41_193 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="Assert.AreEqual(s1.RoomsPerFloor.Length, s2.RoomsPerFloor.Length)", span="278-278"];
m41_194 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="Assert.AreEqual(s1.Symbol, s2.Symbol)", span="279-279"];
m41_195 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="Assert.AreEqual(s1.Width, s2.Width)", span="280-280"];
m41_169 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="BsonWriter writer = new BsonWriter(ms)", span="244-244"];
m41_197 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="BsonWriter writer1 = new BsonWriter(ms1)", span="283-283"];
m41_180 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="BsonReader reader = new BsonReader(ms)", span="264-264"];
m41_177 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="JsonSerializer serializer = new JsonSerializer()", span="260-260"];
m41_179 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="263-263"];
m41_170 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="Store s1 = new Store()", span="246-246"];
m41_199 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="CollectionAssert.AreEquivalent(ms.ToArray(), ms1.ToArray())", span="287-287"];
m41_182 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="Assert.AreNotEqual(s1, s2)", span="267-267"];
m41_181 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="Store s2 = (Store)serializer.Deserialize(reader, typeof(Store))", span="265-265"];
m41_196 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="MemoryStream ms1 = new MemoryStream()", span="282-282"];
m41_168 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="MemoryStream ms = new MemoryStream()", span="243-243"];
m41_176 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="s1.Establised = new DateTime(2000, 1, 1, 0, 0, 0, DateTimeKind.Local)", span="258-258"];
m41_171 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="s1.Color = StoreColor.White", span="247-247"];
m41_172 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="s1.Cost = 999.59m", span="248-248"];
m41_173 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="s1.Employees = int.MaxValue - 1", span="249-249"];
m41_174 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="s1.Open = true", span="250-250"];
m41_175 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="s1.product.Add(new Product\r\n            {\r\n                ExpiryDate = new DateTime(2000, 9, 28, 3, 59, 58, DateTimeKind.Local),\r\n                Name = ''BSON!'',\r\n                Price = -0.1m,\r\n                Sizes = new[] { ''First'', ''Second'' }\r\n            })", span="251-257"];
m41_200 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="string s = JsonConvert.SerializeObject(s1)", span="289-289"];
m41_203 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="int l2 = ms.ToArray().Length", span="293-293"];
m41_201 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="byte[] textData = Encoding.UTF8.GetBytes(s)", span="290-290"];
m41_202 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="int l1 = textData.Length", span="292-292"];
m41_204 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="Console.WriteLine(l1)", span="295-295"];
m41_205 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="Console.WriteLine(l2)", span="296-296"];
m41_206 [cluster="Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Bson.BsonWriterTests.WriteSerializedStore()", span="241-241"];
m41_239 [cluster="System.Text.StringBuilder.ToString()", file="ReflectionUtils.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m41_139 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="ReflectionUtils.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m41_137 [cluster="System.Text.Encoding.GetBytes(string)", file="ReflectionUtils.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m41_285 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="211-211"];
m41_568 [file="ReflectionUtils.cs", label=b, span=""];
m41_569 [file="ReflectionUtils.cs", label=serializer, span=""];
m41_570 [file="ReflectionUtils.cs", label=writer, span=""];
m41_567 [file="ReflectionUtils.cs", label="Newtonsoft.Json.Tests.Bson.BsonWriterTests", span=""];
m42_7 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="127-127"];
m42_132 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="482-482"];
m42_512 [cluster="XmlDocument.cstr", file="XmlNodeConverter.cs", label="Entry XmlDocument.cstr", span=""];
m42_82 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="XmlNodeConverter.cs", label="XmlNodeType.XmlDeclaration", span="276-276"];
m42_89 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="XmlNodeWrapper xmlNodeWrapper = (XmlNodeWrapper)newChild", span="333-333"];
m42_175 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="XmlNodeConverter.cs", label="serializer.Converters.Add(new JavaScriptDateTimeConverter())", span="554-554"];
m42_126 [cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", span="410-410"];
m42_595 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", span="1647-1647"];
m42_626 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot get an XML string value from token type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="1703-1703"];
m42_624 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Null", span="1697-1697"];
m42_606 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="return (reader.Value != null) ? reader.Value.ToString() : null;", span="1651-1651"];
m42_605 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.String", span="1649-1649"];
m42_607 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Integer", span="1653-1653"];
m42_608 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="reader.Value is BigInteger", span="1656-1656"];
m42_609 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="return ((BigInteger)reader.Value).ToString(CultureInfo.InvariantCulture);", span="1658-1658"];
m42_610 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="return XmlConvert.ToString(Convert.ToInt64(reader.Value, CultureInfo.InvariantCulture));", span="1662-1662"];
m42_611 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Float", span="1664-1664"];
m42_612 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="reader.Value is decimal", span="1666-1666"];
m42_613 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="return XmlConvert.ToString((decimal)reader.Value);", span="1668-1668"];
m42_614 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="reader.Value is float", span="1670-1670"];
m42_615 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="return XmlConvert.ToString((float)reader.Value);", span="1672-1672"];
m42_616 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="return XmlConvert.ToString(Convert.ToDouble(reader.Value, CultureInfo.InvariantCulture));", span="1675-1675"];
m42_617 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Boolean", span="1677-1677"];
m42_618 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="return XmlConvert.ToString(Convert.ToBoolean(reader.Value, CultureInfo.InvariantCulture));", span="1679-1679"];
m42_619 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Date", span="1681-1681"];
m42_620 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="reader.Value is DateTimeOffset", span="1684-1684"];
m42_621 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="return XmlConvert.ToString((DateTimeOffset)reader.Value);", span="1686-1686"];
m42_622 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="DateTime d = Convert.ToDateTime(reader.Value, CultureInfo.InvariantCulture)", span="1690-1690"];
m42_625 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="return null;", span="1699-1699"];
m42_623 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="return XmlConvert.ToString(d, DateTimeUtils.ToSerializationMode(d.Kind));", span="1692-1692"];
m42_627 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", span="1647-1647"];
m42_34 [cluster="System.Console.WriteLine(string)", file="XmlNodeConverter.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m42_35 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", span="84-84"];
m42_36 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="XmlNodeConverter.cs", label="string json = @''{\r\n        CPU: 'Intel',\r\n        Drives: [\r\n          'DVD read/writer',\r\n          ''''500 gigabyte hard drive''''\r\n        ]\r\n      }''", span="86-92"];
m42_538 [cluster="string.Equals(string, string, System.StringComparison)", file="XmlNodeConverter.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m42_172 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="string localName = MiscellaneousUtils.GetLocalName(qualifiedName)", span="549-549"];
m42_173 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="return new XElementWrapper(new XElement(XName.Get(localName, namespaceUri)));", span="550-550"];
m42_174 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", span="547-547"];
m42_179 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="553-553"];
m42_176 [cluster="Unk.Get", file="XmlNodeConverter.cs", label="Entry Unk.Get", span=""];
m42_177 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="553-553"];
m42_180 [cluster="Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", span="852-852"];
m42_178 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="return new XAttributeWrapper(new XAttribute(name, value));", span="555-555"];
m42_181 [cluster="XAttribute.cstr", file="XmlNodeConverter.cs", label="Entry XAttribute.cstr", span=""];
m42_182 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", span="558-558"];
m42_103 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="355-355"];
m42_104 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="356-356"];
m42_105 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="356-356"];
m42_106 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="357-357"];
m42_107 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="357-357"];
m42_108 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", span="358-358"];
m42_109 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", span="358-358"];
m42_110 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", span="359-359"];
m42_111 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", span="359-359"];
m42_112 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="360-360"];
m42_113 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="360-360"];
m42_114 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", span="361-361"];
m42_115 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", span="361-361"];
m42_116 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", span="362-362"];
m42_117 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", span="362-362"];
m42_134 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="XmlNodeConverter.cs", label="List<Post> posts = GetPosts()", span="396-396"];
m42_135 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="XmlNodeConverter.cs", label="JObject rss =\r\n        new JObject(\r\n          new JProperty(''channel'',\r\n            new JObject(\r\n              new JProperty(''title'', ''James Newton-King''),\r\n              new JProperty(''link'', ''http://james.newtonking.com''),\r\n              new JProperty(''description'', ''James Newton-King's blog.''),\r\n              new JProperty(''item'',\r\n                new JArray(\r\n                  from p in posts\r\n                  orderby p.Title\r\n                  select new JObject(\r\n                    new JProperty(''title'', p.Title),\r\n                    new JProperty(''description'', p.Description),\r\n                    new JProperty(''link'', p.Link),\r\n                    new JProperty(''category'',\r\n                      new JArray(\r\n                        from c in p.Categories\r\n                        select new JValue(c)))))))))", span="398-416"];
m42_136 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="XmlNodeConverter.cs", label="Console.WriteLine(rss.ToString())", span="418-418"];
m42_50 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="103-103"];
m42_96 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="XmlNodeConverter.cs", label="JProperty cpuProperty = o.Property(''CPU'')", span="262-262"];
m42_97 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''''''CPU'''': ''''Intel'''''', cpuProperty.ToString())", span="263-263"];
m42_536 [cluster="object.ToString()", file="XmlNodeConverter.cs", label="Entry object.ToString()", span="0-0"];
m42_157 [cluster="Unk.IsInstanceOfType", file="XmlNodeConverter.cs", label="Entry Unk.IsInstanceOfType", span=""];
m42_158 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", span="520-520"];
m42_159 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", file="XmlNodeConverter.cs", label="JObject o = new JObject()", span="522-522"];
m42_101 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="354-354"];
m42_201 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.JsonTokenWriter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.JsonTokenWriter()", span="40-40"];
m42_202 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", color=green, community=0, file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", prediction=36, span="596-596"];
m42_203 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", color=green, community=0, file="XmlNodeConverter.cs", label="List<Post> posts = GetPosts()", prediction=37, span="598-598"];
m42_204 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", color=green, community=0, file="XmlNodeConverter.cs", label="JObject o = JObject.FromObject(new\r\n      {\r\n        channel = new\r\n        {\r\n          title = ''James Newton-King'',\r\n          link = ''http://james.newtonking.com'',\r\n          description = ''James Newton-King's blog.'',\r\n          item =\r\n              from p in posts\r\n              orderby p.Title\r\n              select new\r\n              {\r\n                title = p.Title,\r\n                description = p.Description,\r\n                link = p.Link,\r\n                category = p.Categories\r\n              }\r\n        }\r\n      })", prediction=38, span="600-618"];
m42_205 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", color=green, community=0, file="XmlNodeConverter.cs", label="Console.WriteLine(o.ToString())", prediction=38, span="620-620"];
m42_206 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", color=green, community=0, file="XmlNodeConverter.cs", label="Assert.IsInstanceOfType(typeof(JObject), o)", prediction=38, span="621-621"];
m42_207 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", color=green, community=0, file="XmlNodeConverter.cs", label="Assert.IsInstanceOfType(typeof(JObject), o[''channel''])", prediction=38, span="622-622"];
m42_208 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", color=green, community=0, file="XmlNodeConverter.cs", label="Assert.AreEqual(''James Newton-King'', (string)o[''channel''][''title''])", prediction=38, span="623-623"];
m42_209 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", color=green, community=0, file="XmlNodeConverter.cs", label="Assert.AreEqual(2, o[''channel''][''item''].Children().Count())", prediction=38, span="624-624"];
m42_210 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", color=green, community=0, file="XmlNodeConverter.cs", label="JArray a = JArray.FromObject(new List<int>() { 0, 1, 2, 3, 4 })", prediction=44, span="626-626"];
m42_211 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", color=green, community=0, file="XmlNodeConverter.cs", label="Assert.IsInstanceOfType(typeof(JArray), a)", prediction=38, span="627-627"];
m42_212 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", color=green, community=0, file="XmlNodeConverter.cs", label="Assert.AreEqual(5, a.Count())", prediction=44, span="628-628"];
m42_213 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", color=green, community=0, file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", prediction=38, span="596-596"];
m42_214 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", color=green, community=0, file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", prediction=38, span="217-217"];
m42_215 [cluster="Newtonsoft.Json.Linq.JArray.FromObject(object)", color=green, community=0, file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JArray.FromObject(object)", prediction=49, span="147-147"];
m42_216 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", color=green, community=0, file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", prediction=38, span="632-632"];
m42_217 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", color=green, community=0, file="XmlNodeConverter.cs", label="List<Post> posts = GetPosts()", prediction=51, span="634-634"];
m42_218 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", color=green, community=0, file="XmlNodeConverter.cs", label="JObject o = JObject.FromObject(new\r\n      {\r\n        channel = new Dictionary<string, object>\r\n        {\r\n          { ''title'', ''James Newton-King'' },\r\n          { ''link'', ''http://james.newtonking.com'' },\r\n          { ''description'', ''James Newton-King's blog.'' },\r\n          { ''item'', \r\n                  (from p in posts\r\n                  orderby p.Title\r\n                  select new\r\n                  {\r\n                    title = p.Title,\r\n                    description = p.Description,\r\n                    link = p.Link,\r\n                    category = p.Categories\r\n                  })\r\n          }\r\n        }\r\n      })", prediction=38, span="636-655"];
m42_219 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", color=green, community=0, file="XmlNodeConverter.cs", label="Console.WriteLine(o.ToString())", prediction=51, span="657-657"];
m42_220 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", color=green, community=0, file="XmlNodeConverter.cs", label="Assert.IsInstanceOfType(typeof(JObject), o)", prediction=38, span="658-658"];
m42_221 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", color=green, community=0, file="XmlNodeConverter.cs", label="Assert.IsInstanceOfType(typeof(JObject), o[''channel''])", prediction=38, span="659-659"];
m42_222 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", color=green, community=0, file="XmlNodeConverter.cs", label="Assert.AreEqual(''James Newton-King'', (string)o[''channel''][''title''])", prediction=38, span="660-660"];
m42_223 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", color=green, community=0, file="XmlNodeConverter.cs", label="Assert.AreEqual(2, o[''channel''][''item''].Children().Count())", prediction=38, span="661-661"];
m42_224 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", color=green, community=0, file="XmlNodeConverter.cs", label="JArray a = JArray.FromObject(new List<int>() { 0, 1, 2, 3, 4 })", prediction=58, span="663-663"];
m42_225 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", color=green, community=0, file="XmlNodeConverter.cs", label="Assert.IsInstanceOfType(typeof(JArray), a)", prediction=38, span="664-664"];
m42_226 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", color=green, community=0, file="XmlNodeConverter.cs", label="Assert.AreEqual(5, a.Count())", prediction=38, span="665-665"];
m42_227 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", span="632-632"];
m42_171 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor()", span="63-63"];
m42_513 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1538-1538"];
m42_548 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="AddAttribute(reader, document, currentNode, propertyName, attributeName, manager, attributePrefix)", span="1554-1554"];
m42_563 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="AddAttribute(reader, document, currentNode, propertyName, attributeName, manager, attributePrefix)", span="1573-1573"];
m42_546 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string attributeName = propertyName.Substring(1)", span="1551-1551"];
m42_561 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string attributeName = propertyName.Substring(1)", span="1571-1571"];
m42_547 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string attributePrefix = MiscellaneousUtils.GetPrefix(attributeName)", span="1552-1552"];
m42_562 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string attributePrefix = manager.LookupPrefix(JsonNamespaceUri)", span="1572-1572"];
m42_542 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="throw JsonSerializationException.Create(reader, ''XmlNodeConverter cannot convert JSON with an empty property name to XML.'');", span="1542-1542"];
m42_549 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return;", span="1555-1555"];
m42_553 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="propertyName = propertyName.Substring(1)", span="1563-1563"];
m42_564 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return;", span="1574-1574"];
m42_541 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string.IsNullOrEmpty(propertyName)", span="1540-1540"];
m42_543 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Dictionary<string, string> attributeNameValues = ReadAttributeElements(reader, manager)", span="1545-1545"];
m42_544 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1547-1547"];
m42_545 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="propertyName.StartsWith('@')", span="1549-1549"];
m42_550 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="propertyName.StartsWith('$')", span="1558-1558"];
m42_551 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label=propertyName, span="1560-1560"];
m42_554 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="elementPrefix = manager.LookupPrefix(JsonNamespaceUri)", span="1564-1564"];
m42_555 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="CreateElement(reader, document, currentNode, propertyName, manager, elementPrefix, attributeNameValues)", span="1565-1565"];
m42_565 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="CreateElement(reader, document, currentNode, propertyName, manager, elementPrefix, attributeNameValues)", span="1578-1578"];
m42_560 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="JsonTypeReflector.ValuePropertyName", span="1570-1570"];
m42_552 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="JsonTypeReflector.ArrayValuesPropertyName", span="1562-1562"];
m42_556 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return;", span="1566-1566"];
m42_557 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="JsonTypeReflector.IdPropertyName", span="1567-1567"];
m42_559 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="JsonTypeReflector.TypePropertyName", span="1569-1569"];
m42_558 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="JsonTypeReflector.RefPropertyName", span="1568-1568"];
m42_566 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1538-1538"];
m42_798 [cluster="string.StartsWith(string, System.StringComparison)", file="XmlNodeConverter.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m42_37 [cluster="Unk.CreateProcessingInstruction", file="XmlNodeConverter.cs", label="Entry Unk.CreateProcessingInstruction", span=""];
m42_38 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", span="93-93"];
m42_46 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="103-103"];
m42_39 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="XmlNodeConverter.cs", label="return new XmlElementWrapper(_document.CreateElement(elementName));", span="95-95"];
m42_40 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", span="93-93"];
m42_41 [cluster="XmlElementWrapper.cstr", file="XmlNodeConverter.cs", label="Entry XmlElementWrapper.cstr", span=""];
m42_42 [cluster="Unk.CreateElement", file="XmlNodeConverter.cs", label="Entry Unk.CreateElement", span=""];
m42_43 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="98-98"];
m42_44 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="return new XmlElementWrapper(_document.CreateElement(qualifiedName, namespaceUri));", span="100-100"];
m42_45 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="98-98"];
m42_47 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(name))", span="105-105"];
m42_48 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="attribute.Value = value", span="106-106"];
m42_49 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="return attribute;", span="108-108"];
m42_51 [cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="106-106"];
m42_118 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", span="302-302"];
m42_119 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="XmlNodeConverter.cs", label="JObject o =\r\n        new JObject(\r\n          new JProperty(''Test1'', ''Test1Value''),\r\n          new JProperty(''Test2'', ''Test2Value''),\r\n          new JProperty(''Test3'', ''Test3Value''),\r\n          new JProperty(''Test4'', null)\r\n        )", span="304-310"];
m42_160 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, o[0])", span="523-523"];
m42_247 [cluster="Newtonsoft.Json.Converters.XElementWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XElementWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="950-950"];
m42_248 [cluster="Newtonsoft.Json.Converters.XElementWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="IXmlNode result = base.AppendChild(newChild)", span="952-952"];
m42_250 [cluster="Newtonsoft.Json.Converters.XElementWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return result;", span="954-954"];
m42_249 [cluster="Newtonsoft.Json.Converters.XElementWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="_attributes = null", span="953-953"];
m42_251 [cluster="Newtonsoft.Json.Converters.XElementWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XElementWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="950-950"];
m42_64 [cluster="Unk.SetAttributeNode", file="XmlNodeConverter.cs", label="Entry Unk.SetAttributeNode", span=""];
m42_240 [cluster="Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", span="852-852"];
m42_339 [cluster="JsonSerializationException.cstr", file="XmlNodeConverter.cs", label="Entry JsonSerializationException.cstr", span=""];
m42_19 [cluster="Unk.CreateWhitespace", file="XmlNodeConverter.cs", label="Entry Unk.CreateWhitespace", span=""];
m42_29 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="83-83"];
m42_190 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return declarationWrapper;", span="583-583"];
m42_75 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="XmlNodeConverter.cs", label="List<string> expectedUrls = new List<string>() { ''http://www.google.com/'', ''http://news.google.com/'', ''http://groups.google.com/'', ''http://maps.google.com/'' }", span="226-226"];
m42_76 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="XmlNodeConverter.cs", label="CollectionAssert.AreEqual(expectedUrls, resultUrls)", span="228-228"];
m42_77 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="XmlNodeConverter.cs", label="List<JToken> descendants = o.Descendants().ToList()", span="230-230"];
m42_57 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", span="116-116"];
m42_58 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="XmlNodeConverter.cs", label="string json = @''[0,1,2,3,4,5,6,7,8,9]''", span="118-118"];
m42_59 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="XmlNodeConverter.cs", label="JArray a = JArray.Parse(json)", span="120-120"];
m42_348 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1176-1176"];
m42_353 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="string nodeName = GetPropertyName(childNode, manager)", span="1184-1184"];
m42_364 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writeArray = IsArray(groupedNodes[0])", span="1205-1205"];
m42_367 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeNode(writer, groupedNodes[0], manager, writePropertyName)", span="1214-1214"];
m42_374 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeNode(writer, groupedNodes[i], manager, false)", span="1229-1229"];
m42_351 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i < node.ChildNodes.Count", span="1181-1181"];
m42_352 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="IXmlNode childNode = node.ChildNodes[i]", span="1183-1183"];
m42_354 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="List<IXmlNode> nodes", span="1186-1186"];
m42_355 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!nodesGroupedByName.TryGetValue(nodeName, out nodes)", span="1187-1187"];
m42_357 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="nodesGroupedByName.Add(nodeName, nodes)", span="1190-1190"];
m42_361 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="List<IXmlNode> groupedNodes = nodeNameGroup.Value", span="1200-1200"];
m42_363 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="groupedNodes.Count == 1", span="1203-1203"];
m42_366 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!writeArray", span="1212-1212"];
m42_360 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label=nodesGroupedByName, span="1198-1198"];
m42_373 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i < groupedNodes.Count", span="1227-1227"];
m42_372 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="int i = 0", span="1227-1227"];
m42_375 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i++", span="1227-1227"];
m42_362 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="bool writeArray", span="1201-1201"];
m42_349 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="Dictionary<string, List<IXmlNode>> nodesGroupedByName = new Dictionary<string, List<IXmlNode>>()", span="1179-1179"];
m42_369 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label=writePropertyName, span="1220-1220"];
m42_370 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(elementNames)", span="1222-1222"];
m42_371 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteStartArray()", span="1225-1225"];
m42_376 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteEndArray()", span="1232-1232"];
m42_350 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="int i = 0", span="1181-1181"];
m42_359 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i++", span="1181-1181"];
m42_358 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="nodes.Add(childNode)", span="1193-1193"];
m42_356 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="nodes = new List<IXmlNode>()", span="1189-1189"];
m42_368 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="string elementNames = nodeNameGroup.Key", span="1218-1218"];
m42_365 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writeArray = true", span="1209-1209"];
m42_377 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1176-1176"];
m42_150 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="XmlNodeConverter.cs", label="JObject o = JObject.Parse(json)", span="507-507"];
m42_151 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, o[''purple''])", span="509-509"];
m42_152 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, o.Value<string>(''purple''))", span="510-510"];
m42_11 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="XmlNodeConverter.cs", label="JValue text = new JValue(''Manual text'')", span="55-55"];
m42_78 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="XmlNodeConverter.cs", label="Assert.AreEqual(89, descendants.Count)", span="231-231"];
m42_79 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", span="129-129"];
m42_81 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JObject>.Properties()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JObject>.Properties()", span="87-87"];
m42_83 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", span="110-110"];
m42_85 [cluster="Newtonsoft.Json.Linq.JObject.PropertyValues()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.PropertyValues()", span="127-127"];
m42_86 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JArray>.Children()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JArray>.Children()", span="193-193"];
m42_80 [cluster="Newtonsoft.Json.Linq.JToken.Children<T>()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children<T>()", span="235-235"];
m42_84 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values(object)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values(object)", span="100-100"];
m42_87 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="226-226"];
m42_571 [cluster="string.Substring(int)", file="XmlNodeConverter.cs", label="Entry string.Substring(int)", span="0-0"];
m42_144 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="return new XObjectWrapper(new XCData(data));", span="514-514"];
m42_69 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="XmlNodeConverter.cs", label="List<JObject> resultObjects = o[''results''].Children<JObject>().ToList()", span="214-214"];
m42_70 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="XmlNodeConverter.cs", label="Assert.AreEqual(32, resultObjects.Properties().Count())", span="216-216"];
m42_71 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="XmlNodeConverter.cs", label="Assert.AreEqual(32, resultObjects.Cast<JToken>().Values().Count())", span="218-218"];
m42_98 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="XmlNodeConverter.cs", label="JProperty drivesProperty = o.Property(''Drives'')", span="265-265"];
m42_99 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''''''Drives'''': [\r\n  ''''DVD read/writer'''',\r\n  ''''500 gigabyte hard drive''''\r\n]'', drivesProperty.ToString())", span="266-269"];
m42_186 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="XmlNodeConverter.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m42_187 [cluster="System.IO.StringWriter.StringWriter()", file="XmlNodeConverter.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m42_191 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", span="575-575"];
m42_188 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="97-97"];
m42_189 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="615-615"];
m42_192 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="XmlNodeConverter.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset> {\r\n        new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n      }", span="577-582"];
m42_632 [cluster="System.Convert.ToDateTime(object, System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0"];
m42_24 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="XmlNodeConverter.cs", label="JObject o = new JObject(\r\n        new JProperty(''Name'', ''John Smith''),\r\n        new JProperty(''BirthDate'', new DateTime(1983, 3, 20))\r\n        )", span="71-74"];
m42_25 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="XmlNodeConverter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="76-76"];
m42_26 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="XmlNodeConverter.cs", label="Person p = (Person)serializer.Deserialize(new JsonTokenReader(o), typeof(Person))", span="77-77"];
m42_33 [cluster="Unk.CreateDocumentType", file="XmlNodeConverter.cs", label="Entry Unk.CreateDocumentType", span=""];
m42_184 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="XmlNodeConverter.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m42_183 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="XmlNodeConverter.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m42_185 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="12-12"];
m42_467 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="50-50"];
m42_233 [cluster="Unk.Add", file="XmlNodeConverter.cs", label="Entry Unk.Add", span=""];
m42_142 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="XmlNodeConverter.cs", label="Console.WriteLine(c.Category + '' - Count: '' + c.Count)", span="468-468"];
m42_539 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", span="1911-1911"];
m42_750 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="1938-1938"];
m42_737 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Value.ToString()", span="1919-1919"];
m42_740 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="name = reader.Value.ToString()", span="1923-1923"];
m42_743 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="publicId = reader.Value.ToString()", span="1927-1927"];
m42_746 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="systemId = reader.Value.ToString()", span="1931-1931"];
m42_749 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="internalSubset = reader.Value.ToString()", span="1935-1935"];
m42_732 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="string name = null", span="1913-1913"];
m42_736 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="1917-1917"];
m42_739 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Read()", span="1922-1922"];
m42_742 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Read()", span="1926-1926"];
m42_745 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Read()", span="1930-1930"];
m42_748 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Read()", span="1934-1934"];
m42_751 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="IXmlNode documentType = document.CreateXmlDocumentType(name, publicId, systemId, internalSubset)", span="1942-1942"];
m42_752 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(documentType)", span="1943-1943"];
m42_738 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="''@name''", span="1921-1921"];
m42_741 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="''@public''", span="1925-1925"];
m42_744 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="''@system''", span="1929-1929"];
m42_747 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="''@internalSubset''", span="1933-1933"];
m42_733 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="string publicId = null", span="1914-1914"];
m42_734 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="string systemId = null", span="1915-1915"];
m42_735 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="string internalSubset = null", span="1916-1916"];
m42_753 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", span="1911-1911"];
m42_570 [cluster="string.StartsWith(char)", file="XmlNodeConverter.cs", label="Entry string.StartsWith(char)", span="278-278"];
m42_629 [cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0"];
m42_593 [cluster="Unk.EncodeName", file="XmlNodeConverter.cs", label="Entry Unk.EncodeName", span=""];
m42_162 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="return new XProcessingInstructionWrapper(new XProcessingInstruction(target, data));", span="539-539"];
m42_60 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="XmlNodeConverter.cs", label="List<int> list = a.Values<int>().ToList()", span="121-121"];
m42_61 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="XmlNodeConverter.cs", label="List<int> expected = new List<int>() { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }", span="123-123"];
m42_62 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="XmlNodeConverter.cs", label="CollectionAssert.AreEqual(expected, list)", span="125-125"];
m42_63 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", span="116-116"];
m42_54 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="attribute.Value = value", span="114-114"];
m42_301 [cluster="Unk.AddNamespace", file="XmlNodeConverter.cs", label="Entry Unk.AddNamespace", span=""];
m42_537 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1873-1873"];
m42_726 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="1897-1897"];
m42_716 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="reader.Value.ToString()", span="1882-1882"];
m42_719 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="version = reader.Value.ToString()", span="1886-1886"];
m42_722 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="encoding = reader.Value.ToString()", span="1890-1890"];
m42_725 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="standalone = reader.Value.ToString()", span="1894-1894"];
m42_729 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="IXmlNode instruction = document.CreateProcessingInstruction(propertyName.Substring(1), reader.Value.ToString())", span="1906-1906"];
m42_711 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="propertyName == DeclarationName", span="1875-1875"];
m42_715 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="1880-1880"];
m42_718 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="reader.Read()", span="1885-1885"];
m42_721 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="reader.Read()", span="1889-1889"];
m42_724 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="reader.Read()", span="1893-1893"];
m42_727 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="IXmlNode declaration = document.CreateXmlDeclaration(version, encoding, standalone)", span="1901-1901"];
m42_728 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(declaration)", span="1902-1902"];
m42_730 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(instruction)", span="1907-1907"];
m42_717 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="''@version''", span="1884-1884"];
m42_720 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="''@encoding''", span="1888-1888"];
m42_723 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="''@standalone''", span="1892-1892"];
m42_712 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="string version = null", span="1877-1877"];
m42_714 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="string standalone = null", span="1879-1879"];
m42_713 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="string encoding = null", span="1878-1878"];
m42_731 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1873-1873"];
m42_236 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="834-834"];
m42_237 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="throw new InvalidOperationException();", span="836-836"];
m42_238 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="834-834"];
m42_8 [cluster="Unk.AreEqual", file="XmlNodeConverter.cs", label="Entry Unk.AreEqual", span=""];
m42_9 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", span="52-52"];
m42_10 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="XmlNodeConverter.cs", label="JArray array = new JArray()", span="54-54"];
m42_129 [cluster="Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", span="443-443"];
m42_130 [cluster="Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", file="XmlNodeConverter.cs", label="_documentType = documentType", span="446-446"];
m42_131 [cluster="Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", span="443-443"];
m42_145 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", span="512-512"];
m42_569 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)", span="112-112"];
m42_0 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", span="40-40"];
m42_1 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="XmlNodeConverter.cs", label="JArray j = JArray.Parse(''[-1E+4,100.0e-2]'')", span="42-42"];
m42_2 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="XmlNodeConverter.cs", label="double value = (double)j[0]", span="44-44"];
m42_28 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", span="69-69"];
m42_199 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="689-689"];
m42_630 [cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0"];
m42_146 [cluster="Unk.WriteLine", file="XmlNodeConverter.cs", label="Entry Unk.WriteLine", span=""];
m42_380 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m42_153 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="XmlNodeConverter.cs", label="Assert.IsInstanceOfType(typeof(JArray), o[''channel''][''item''])", span="512-512"];
m42_154 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, o[''channel''][''item''].Children()[''title''].Count())", span="514-514"];
m42_155 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="XmlNodeConverter.cs", label="Assert.AreEqual(0, o[''channel''][''item''].Children()[''monkey''].Count())", span="515-515"];
m42_128 [cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", span="410-410"];
m42_30 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", file="XmlNodeConverter.cs", label="return new XmlDocumentTypeWrapper(_document.CreateDocumentType(name, publicId, systemId, null));", span="85-85"];
m42_281 [cluster="Unk.nameof", file="XmlNodeConverter.cs", label="Entry Unk.nameof", span=""];
m42_799 [cluster="string.Substring(int, int)", file="XmlNodeConverter.cs", label="Entry string.Substring(int, int)", span="0-0"];
m42_3 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="XmlNodeConverter.cs", label="Assert.AreEqual(-10000d, value)", span="45-45"];
m42_4 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="XmlNodeConverter.cs", label="value = (double)j[1]", span="47-47"];
m42_5 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1d, value)", span="48-48"];
m42_510 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m42_20 [cluster="System.DateTime.DateTime(int, int, int)", file="XmlNodeConverter.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m42_21 [cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Add(object)", span="280-280"];
m42_22 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="298-298"];
m42_193 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="779-779"];
m42_196 [cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="631-631"];
m42_194 [cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="599-599"];
m42_195 [cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="599-599"];
m42_197 [cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="631-631"];
m42_198 [cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="663-663"];
m42_517 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1495-1495"];
m42_534 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="ReadElement(reader, document, currentNode, propertyName, manager)", span="1532-1532"];
m42_518 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label=propertyName, span="1497-1497"];
m42_520 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(document.CreateTextNode(reader.Value.ToString()))", span="1500-1500"];
m42_522 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(document.CreateCDataSection(reader.Value.ToString()))", span="1503-1503"];
m42_524 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(document.CreateWhitespace(reader.Value.ToString()))", span="1506-1506"];
m42_526 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(document.CreateSignificantWhitespace(reader.Value.ToString()))", span="1509-1509"];
m42_527 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(propertyName) && propertyName[0] == '?'", span="1513-1513"];
m42_528 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="CreateInstruction(reader, document, currentNode, propertyName)", span="1515-1515"];
m42_529 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="string.Equals(propertyName, ''!DOCTYPE'', StringComparison.OrdinalIgnoreCase)", span="1517-1517"];
m42_530 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="CreateDocumentType(reader, document, currentNode)", span="1519-1519"];
m42_531 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.StartArray", span="1523-1523"];
m42_532 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="ReadArrayElements(reader, document, propertyName, currentNode, manager)", span="1526-1526"];
m42_533 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return;", span="1527-1527"];
m42_519 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label=TextName, span="1499-1499"];
m42_521 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label=CDataName, span="1502-1502"];
m42_523 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label=WhitespaceName, span="1505-1505"];
m42_525 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label=SignificantWhitespaceName, span="1508-1508"];
m42_535 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1495-1495"];
m42_6 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", span="40-40"];
m42_631 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
m42_347 [cluster="Unk.ToBoolean", file="XmlNodeConverter.cs", label="Entry Unk.ToBoolean", span=""];
m42_95 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''[\r\n  ''''DVD read/writer'''',\r\n  ''''500 gigabyte hard drive''''\r\n]'', list.ToString())", span="257-260"];
m42_633 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="61-61"];
m42_55 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="return attribute;", span="116-116"];
m42_169 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JConstructorStringIndex()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, c[''purple''])", span="539-539"];
m42_241 [cluster="Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", span="896-896"];
m42_302 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1101-1101"];
m42_304 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(prefix)", span="1107-1107"];
m42_303 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string prefix = (node.NamespaceUri == null || (node.LocalName == ''xmlns'' && node.NamespaceUri == ''http://www.w3.org/2000/xmlns/''))\r\n                ? null\r\n                : manager.LookupPrefix(node.NamespaceUri)", span="1103-1105"];
m42_305 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return prefix + '':'' + XmlConvert.DecodeName(node.LocalName);", span="1109-1109"];
m42_306 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return XmlConvert.DecodeName(node.LocalName);", span="1113-1113"];
m42_307 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1101-1101"];
m42_280 [cluster="System.ArgumentException.ArgumentException(string, string)", file="XmlNodeConverter.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m42_88 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="331-331"];
m42_468 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="869-869"];
m42_167 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="XmlNodeConverter.cs", label="return new XElementWrapper(new XElement(elementName));", span="544-544"];
m42_168 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="542-542"];
m42_170 [cluster="XElement.cstr", file="XmlNodeConverter.cs", label="Entry XElement.cstr", span=""];
m42_252 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="973-973"];
m42_253 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="return Element.GetPrefixOfNamespace(namespaceUri);", span="975-975"];
m42_254 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="973-973"];
m42_299 [cluster="System.Collections.Generic.List<T>.Reverse()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.List<T>.Reverse()", span="0-0"];
m42_567 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m42_229 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest", span=""];
m42_231 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return newChild;", span="784-784"];
m42_230 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="_childNodes = null", span="782-782"];
m42_232 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="779-779"];
m42_604 [cluster="string.FormatWith(System.IFormatProvider, object)", file="XmlNodeConverter.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m42_340 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", span="1160-1160"];
m42_341 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="node.Attributes != null", span="1162-1162"];
m42_342 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="node.Attributes", span="1164-1164"];
m42_345 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return false;", span="1173-1173"];
m42_344 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return XmlConvert.ToBoolean(attribute.Value);", span="1168-1168"];
m42_343 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="attribute.LocalName == ''Array'' && attribute.NamespaceUri == JsonNamespaceUri", span="1166-1166"];
m42_346 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", span="1160-1160"];
m42_72 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="XmlNodeConverter.cs", label="Assert.AreEqual(4, resultObjects.Cast<JToken>().Values(''GsearchResultClass'').Count())", span="220-220"];
m42_73 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="XmlNodeConverter.cs", label="Assert.AreEqual(5, o.PropertyValues().Cast<JArray>().Children().Count())", span="222-222"];
m42_74 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="XmlNodeConverter.cs", label="List<string> resultUrls = o[''results''].Children().Values<string>(''url'').ToList()", span="224-224"];
m42_161 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", span="520-520"];
m42_163 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", span="528-528"];
m42_23 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", span="69-69"];
m42_311 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1117-1117"];
m42_316 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return ''@'' + ResolveFullName(node, manager);", span="1128-1128"];
m42_324 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return ResolveFullName(node, manager);", span="1141-1141"];
m42_326 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return ''?'' + ResolveFullName(node, manager);", span="1144-1144"];
m42_328 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return ''!'' + ResolveFullName(node, manager);", span="1146-1146"];
m42_314 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="node.NamespaceUri == JsonNamespaceUri", span="1122-1122"];
m42_322 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="node.NamespaceUri == JsonNamespaceUri", span="1135-1135"];
m42_325 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.ProcessingInstruction", span="1143-1143"];
m42_327 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.DocumentType", span="1145-1145"];
m42_312 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="node.NodeType", span="1119-1119"];
m42_315 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return ''$'' + node.LocalName;", span="1124-1124"];
m42_323 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return ''$'' + node.LocalName;", span="1137-1137"];
m42_337 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected XmlNodeType when getting node name: '' + node.NodeType);", span="1156-1156"];
m42_313 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.Attribute", span="1121-1121"];
m42_318 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return CDataName;", span="1131-1131"];
m42_320 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return CommentName;", span="1133-1133"];
m42_330 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return DeclarationName;", span="1148-1148"];
m42_332 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return SignificantWhitespaceName;", span="1150-1150"];
m42_334 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return TextName;", span="1152-1152"];
m42_336 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return WhitespaceName;", span="1154-1154"];
m42_321 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.Element", span="1134-1134"];
m42_317 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.CDATA", span="1130-1130"];
m42_319 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.Comment", span="1132-1132"];
m42_329 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.XmlDeclaration", span="1147-1147"];
m42_331 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.SignificantWhitespace", span="1149-1149"];
m42_333 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.Text", span="1151-1151"];
m42_335 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.Whitespace", span="1153-1153"];
m42_338 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1117-1117"];
m42_514 [cluster="Newtonsoft.Json.JsonReader.Read()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409"];
m42_166 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", span="528-528"];
m42_310 [cluster="Unk.DecodeName", file="XmlNodeConverter.cs", label="Entry Unk.DecodeName", span=""];
m42_165 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, a[''purple''])", span="531-531"];
m42_476 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1419-1419"];
m42_486 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="document = new XDocumentWrapper(d)", span="1439-1439"];
m42_502 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="DeserializeNode(reader, document, manager, rootNode)", span="1479-1479"];
m42_480 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="IXmlDocument document = null", span="1427-1427"];
m42_479 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="1426-1426"];
m42_481 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="IXmlNode rootNode = null", span="1428-1428"];
m42_485 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="XDocument d = new XDocument()", span="1438-1438"];
m42_487 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="rootNode = document", span="1440-1440"];
m42_495 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="document == null || rootNode == null", span="1460-1460"];
m42_500 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="ReadElement(reader, document, rootNode, DeserializeRootElementName, manager)", span="1474-1474"];
m42_504 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="XElement element = (XElement)document.DocumentElement.WrappedNode", span="1485-1485"];
m42_507 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="return document.WrappedNode;", span="1492-1492"];
m42_501 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="reader.Read()", span="1478-1478"];
m42_493 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="document = new XmlDocumentWrapper(d)", span="1455-1455"];
m42_494 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="rootNode = document", span="1456-1456"];
m42_503 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="objectType == typeof(XElement)", span="1483-1483"];
m42_477 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Null", span="1421-1421"];
m42_482 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="typeof(XObject).IsAssignableFrom(objectType)", span="1431-1431"];
m42_483 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="objectType != typeof(XDocument) && objectType != typeof(XElement)", span="1433-1433"];
m42_488 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="typeof(XmlNode).IsAssignableFrom(objectType)", span="1444-1444"];
m42_489 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="objectType != typeof(XmlDocument)", span="1446-1446"];
m42_496 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected type when converting XML: '' + objectType);", span="1462-1462"];
m42_497 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="reader.TokenType != JsonToken.StartObject", span="1465-1465"];
m42_499 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(DeserializeRootElementName)", span="1470-1470"];
m42_505 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="element.Remove()", span="1486-1486"];
m42_506 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="return element;", span="1488-1488"];
m42_492 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="d.XmlResolver = null", span="1453-1453"];
m42_478 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="return null;", span="1423-1423"];
m42_484 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XDocument or XElement.'');", span="1435-1435"];
m42_490 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XmlDocuments'');", span="1448-1448"];
m42_498 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''XmlNodeConverter can only convert JSON that begins with an object.'');", span="1467-1467"];
m42_491 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="XmlDocument d = new XmlDocument()", span="1451-1451"];
m42_508 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1419-1419"];
m42_596 [cluster="Unk.RemoveNamespace", file="XmlNodeConverter.cs", label="Entry Unk.RemoveNamespace", span=""];
m42_31 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="83-83"];
m42_143 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", span="394-394"];
m42_18 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="68-68"];
m42_469 [cluster="Unk.PopScope", file="XmlNodeConverter.cs", label="Entry Unk.PopScope", span=""];
m42_266 [cluster="XmlNamespaceManager.cstr", file="XmlNodeConverter.cs", label="Entry XmlNamespaceManager.cstr", span=""];
m42_32 [cluster="XmlDocumentTypeWrapper.cstr", file="XmlNodeConverter.cs", label="Entry XmlDocumentTypeWrapper.cstr", span=""];
m42_573 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", span="1581-1581"];
m42_588 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="XmlNodeConverter.cs", label="DeserializeNode(reader, document, manager, element)", span="1622-1622"];
m42_574 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="XmlNodeConverter.cs", label="IXmlElement element = CreateElement(elementName, document, elementPrefix, manager)", span="1583-1583"];
m42_587 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="XmlNodeConverter.cs", label="manager.PushScope()", span="1621-1621"];
m42_589 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="XmlNodeConverter.cs", label="manager.PopScope()", span="1623-1623"];
m42_575 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(element)", span="1585-1585"];
m42_576 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="XmlNodeConverter.cs", label=attributeNameValues, span="1588-1588"];
m42_579 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="XmlNodeConverter.cs", label="IXmlNode attribute = (!string.IsNullOrEmpty(attributePrefix))\r\n                    ? document.CreateAttribute(encodedName, manager.LookupNamespace(attributePrefix) ?? string.Empty, nameValue.Value)\r\n                    : document.CreateAttribute(encodedName, nameValue.Value)", span="1593-1595"];
m42_581 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.String\r\n                || reader.TokenType == JsonToken.Integer\r\n                || reader.TokenType == JsonToken.Float\r\n                || reader.TokenType == JsonToken.Boolean\r\n                || reader.TokenType == JsonToken.Date", span="1600-1604"];
m42_582 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="XmlNodeConverter.cs", label="string text = ConvertTokenToXmlValue(reader)", span="1606-1606"];
m42_584 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="XmlNodeConverter.cs", label="element.AppendChild(document.CreateTextNode(text))", span="1609-1609"];
m42_585 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Null", span="1612-1612"];
m42_586 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="XmlNodeConverter.cs", label="reader.TokenType != JsonToken.EndObject", span="1619-1619"];
m42_590 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="XmlNodeConverter.cs", label="manager.RemoveNamespace(string.Empty, manager.DefaultNamespace)", span="1626-1626"];
m42_580 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="XmlNodeConverter.cs", label="element.SetAttributeNode(attribute)", span="1597-1597"];
m42_577 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="XmlNodeConverter.cs", label="string encodedName = XmlConvert.EncodeName(nameValue.Key)", span="1590-1590"];
m42_578 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="XmlNodeConverter.cs", label="string attributePrefix = MiscellaneousUtils.GetPrefix(nameValue.Key)", span="1591-1591"];
m42_583 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="XmlNodeConverter.cs", label="text != null", span="1607-1607"];
m42_591 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager, string, System.Collections.Generic.Dictionary<string, string>)", span="1581-1581"];
m42_470 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1412-1412"];
m42_298 [cluster="System.Collections.Generic.List<T>.Add(T)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m42_466 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="907-907"];
m42_164 [cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="663-663"];
m42_378 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m42_228 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="793-793"];
m42_540 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1707-1707"];
m42_639 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="DeserializeValue(reader, document, manager, propertyName, nestedArrayElement)", span="1718-1718"];
m42_635 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IXmlElement nestedArrayElement = CreateElement(propertyName, document, elementPrefix, manager)", span="1711-1711"];
m42_642 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="AddJsonArrayAttribute(nestedArrayElement, document)", span="1724-1724"];
m42_647 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="AddJsonArrayAttribute(element, document)", span="1734-1734"];
m42_645 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IXmlElement element = childNode as IXmlElement", span="1731-1731"];
m42_641 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label=WriteArrayAttribute, span="1722-1722"];
m42_643 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="count == 1 && WriteArrayAttribute", span="1727-1727"];
m42_634 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1709-1709"];
m42_636 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(nestedArrayElement)", span="1713-1713"];
m42_638 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1716-1716"];
m42_646 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="element != null && element.LocalName == propertyName", span="1732-1732"];
m42_640 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="count++", span="1719-1719"];
m42_644 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="nestedArrayElement.ChildNodes", span="1729-1729"];
m42_637 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="int count = 0", span="1715-1715"];
m42_648 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1707-1707"];
m42_300 [cluster="Unk.PushScope", file="XmlNodeConverter.cs", label="Entry Unk.PushScope", span=""];
m42_127 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="XmlNodeConverter.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m42_381 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="455-455"];
m42_120 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="XmlNodeConverter.cs", label="Assert.AreEqual(4, o.Properties().Count())", span="312-312"];
m42_137 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="XmlNodeConverter.cs", label="var postTitles =\r\n        from p in rss[''channel''][''item'']\r\n        select p.Value<string>(''title'')", span="448-450"];
m42_147 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>()", span="133-133"];
m42_148 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", span="477-477"];
m42_149 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="XmlNodeConverter.cs", label="string json = @''{\r\n                        ''''channel'''': {\r\n                          ''''title'''': ''''James Newton-King'''',\r\n                          ''''link'''': ''''http://james.newtonking.com'''',\r\n                          ''''description'''': ''''James Newton-King's blog.'''',\r\n                          ''''item'''': [\r\n                            {\r\n                              ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n                              ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and the source being available on CodePlex'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''CodePlex''''\r\n                              ]\r\n                            },\r\n                            {\r\n                              ''''title'''': ''''LINQ to JSON beta'''',\r\n                              ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''LINQ''''\r\n                              ]\r\n                            }\r\n                          ]\r\n                        }\r\n                      }''", span="479-505"];
m42_628 [cluster="Unk.ToString", file="XmlNodeConverter.cs", label="Entry Unk.ToString", span=""];
m42_708 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="2025-2025"];
m42_788 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="attributeName.StartsWith(''xmlns'', StringComparison.Ordinal)", span="2027-2027"];
m42_789 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="attributeName.Length == 5", span="2029-2029"];
m42_792 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="attributeName[5] == ':'", span="2034-2034"];
m42_793 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="prefix = attributeName.Substring(6, attributeName.Length - 6)", span="2036-2036"];
m42_795 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="prefix = null", span="2040-2040"];
m42_791 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="return true;", span="2032-2032"];
m42_794 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="return true;", span="2037-2037"];
m42_796 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="return false;", span="2041-2041"];
m42_790 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="prefix = string.Empty", span="2031-2031"];
m42_797 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="2025-2025"];
m42_12 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="XmlNodeConverter.cs", label="JValue date = new JValue(new DateTime(2000, 5, 23))", span="56-56"];
m42_13 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="XmlNodeConverter.cs", label="array.Add(text)", span="58-58"];
m42_14 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="XmlNodeConverter.cs", label="array.Add(date)", span="59-59"];
m42_383 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="429-429"];
m42_234 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="XmlNodeConverter.cs", label="_xmlObject = xmlObject", span="795-795"];
m42_235 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="793-793"];
m42_465 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", span="2044-2044"];
m42_800 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", file="XmlNodeConverter.cs", label=c, span="2046-2046"];
m42_803 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", file="XmlNodeConverter.cs", label="return false;", span="2054-2054"];
m42_802 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", file="XmlNodeConverter.cs", label="return true;", span="2050-2050"];
m42_801 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", file="XmlNodeConverter.cs", label="xmlNode.NamespaceUri != JsonNamespaceUri", span="2048-2048"];
m42_804 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.List<Newtonsoft.Json.Converters.IXmlNode>)", span="2044-2044"];
m42_805 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="2065-2065"];
m42_806 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="typeof(XObject).IsAssignableFrom(valueType)", span="2068-2068"];
m42_808 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="typeof(XmlNode).IsAssignableFrom(valueType)", span="2074-2074"];
m42_807 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="return true;", span="2070-2070"];
m42_809 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="return true;", span="2076-2076"];
m42_810 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="return false;", span="2080-2080"];
m42_811 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="2065-2065"];
m42_156 [cluster="XDeclaration.cstr", file="XmlNodeConverter.cs", label="Entry XDeclaration.cstr", span=""];
m42_52 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m42_53 [cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="141-141"];
m42_56 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", span="111-111"];
m42_509 [cluster="System.Type.IsAssignableFrom(System.Type)", file="XmlNodeConverter.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m42_139 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="XmlNodeConverter.cs", label="Console.WriteLine(item)", span="454-454"];
m42_140 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="XmlNodeConverter.cs", label="var categories =\r\n        from c in rss[''channel''][''item''].Children()[''category''].Values<string>()\r\n        group c by c into g\r\n        orderby g.Count() descending\r\n        select new { Category = g.Key, Count = g.Count() }", span="460-464"];
m42_141 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="XmlNodeConverter.cs", label=categories, span="466-466"];
m42_649 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1741-1741"];
m42_650 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="element.SetAttributeNode(document.CreateAttribute(''json:Array'', JsonNamespaceUri, ''true''))", span="1743-1743"];
m42_651 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="element is XElementWrapper", span="1747-1747"];
m42_652 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="element.GetPrefixOfNamespace(JsonNamespaceUri) == null", span="1749-1749"];
m42_653 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="element.SetAttributeNode(document.CreateAttribute(''xmlns:json'', ''http://www.w3.org/2000/xmlns/'', JsonNamespaceUri))", span="1751-1751"];
m42_654 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1741-1741"];
m42_511 [cluster="XDocument.cstr", file="XmlNodeConverter.cs", label="Entry XDocument.cstr", span=""];
m42_17 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper(_document.CreateWhitespace(text));", span="70-70"];
m42_133 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", span="394-394"];
m42_309 [cluster="string.IsNullOrEmpty(string)", file="XmlNodeConverter.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m42_124 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Test1'''': ''''Test1Value'''',\r\n    ''''Test2'''': ''''Test2Value'''',\r\n    ''''Test3'''': ''''Test3Value'''',\r\n    ''''Test4'''': null\r\n  },\r\n  ''''\/Date(971136000000)\/'''',\r\n  55,\r\n  [\r\n    ''''1'''',\r\n    2,\r\n    3,\r\n    ''''\/Date(-62030076711000)\/''''\r\n  ],\r\n  new ConstructorName(\r\n    ''''param1'''',\r\n    2,\r\n    3\r\n  )\r\n]'', a.ToString())", span="341-361"];
m42_125 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", span="302-302"];
m42_122 [cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="386-386"];
m42_123 [cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="386-386"];
m42_269 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="405-405"];
m42_572 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", span="1630-1630"];
m42_598 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", color=green, community=0, file="XmlNodeConverter.cs", label="throw JsonSerializationException.Create(reader, ''JSON root object has property '{0}' that will be converted to an attribute. A root object cannot have any attribute properties. Consider specifing a DeserializeRootElementName.''.FormatWith(CultureInfo.InvariantCulture, propertyName));", prediction=61, span="1634-1634"];
m42_597 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="XmlNodeConverter.cs", label="currentNode.NodeType == XmlNodeType.Document", span="1632-1632"];
m42_599 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="XmlNodeConverter.cs", label="string encodedName = XmlConvert.EncodeName(attributeName)", span="1637-1637"];
m42_600 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="XmlNodeConverter.cs", label="string attributeValue = reader.Value.ToString()", span="1638-1638"];
m42_601 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="XmlNodeConverter.cs", label="IXmlNode attribute = (!string.IsNullOrEmpty(attributePrefix))\r\n                ? document.CreateAttribute(encodedName, manager.LookupNamespace(attributePrefix), attributeValue)\r\n                : document.CreateAttribute(encodedName, attributeValue)", span="1640-1642"];
m42_602 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="XmlNodeConverter.cs", label="((IXmlElement)currentNode).SetAttributeNode(attribute)", span="1644-1644"];
m42_603 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, string, XmlNamespaceManager, string)", span="1630-1630"];
m42_379 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m42_710 [cluster="Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", span="58-58"];
m42_239 [cluster="System.InvalidOperationException.InvalidOperationException()", file="XmlNodeConverter.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m42_27 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="XmlNodeConverter.cs", label="Console.WriteLine(p.Name)", span="80-80"];
m42_297 [cluster="System.Collections.Generic.List<T>.List()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m42_65 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", span="150-150"];
m42_102 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="355-355"];
m42_200 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="689-689"];
m42_709 [cluster="System.Nullable<T>.GetValueOrDefault()", file="XmlNodeConverter.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m42_100 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", span="235-235"];
m42_138 [cluster="XComment.cstr", file="XmlNodeConverter.cs", label="Entry XComment.cstr", span=""];
m42_382 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="421-421"];
m42_66 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", span="129-129"];
m42_67 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="XmlNodeConverter.cs", label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="132-209"];
m42_90 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="_node.AppendChild(xmlNodeWrapper._node)", span="334-334"];
m42_91 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="_childNodes = null", span="335-335"];
m42_92 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="_attributes = null", span="336-336"];
m42_93 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return newChild;", span="338-338"];
m42_94 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="331-331"];
m42_255 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="1025-1025"];
m42_256 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="IXmlNode node = WrapXml(value)", span="1027-1027"];
m42_257 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="1029-1029"];
m42_258 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="PushParentNamespaces(node, manager)", span="1030-1030"];
m42_261 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="SerializeNode(writer, node, manager, !OmitRootObject)", span="1037-1037"];
m42_260 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="writer.WriteStartObject()", span="1034-1034"];
m42_263 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="writer.WriteEndObject()", span="1041-1041"];
m42_259 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="!OmitRootObject", span="1032-1032"];
m42_262 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="!OmitRootObject", span="1039-1039"];
m42_264 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="1025-1025"];
m42_242 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="901-901"];
m42_243 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="XObjectWrapper wrapper = (XObjectWrapper)attribute", span="903-903"];
m42_245 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="_attributes = null", span="905-905"];
m42_244 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Element.Add(wrapper.WrappedNode)", span="904-904"];
m42_246 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="901-901"];
m42_267 [cluster="NameTable.cstr", file="XmlNodeConverter.cs", label="Entry NameTable.cstr", span=""];
m42_15 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="XmlNodeConverter.cs", label="string json = array.ToString()", span="61-61"];
m42_265 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="1045-1045"];
m42_272 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", color=green, community=0, file="XmlNodeConverter.cs", label="XObject xObject = value as XObject", prediction=62, span="1048-1048"];
m42_273 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", color=green, community=0, file="XmlNodeConverter.cs", label="xObject != null", prediction=63, span="1049-1049"];
m42_274 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", color=green, community=0, file="XmlNodeConverter.cs", label="return XContainerWrapper.WrapNode(xObject);", prediction=62, span="1051-1051"];
m42_275 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", color=green, community=0, file="XmlNodeConverter.cs", label="XmlNode node = value as XmlNode", prediction=65, span="1055-1055"];
m42_276 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", color=green, community=0, file="XmlNodeConverter.cs", label="node != null", prediction=66, span="1056-1056"];
m42_277 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", color=green, community=0, file="XmlNodeConverter.cs", label="return XmlNodeWrapper.WrapNode(node);", prediction=65, span="1058-1058"];
m42_278 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="XmlNodeConverter.cs", label="throw new ArgumentException(''Value must be an XML object.'', nameof(value));", span="1062-1062"];
m42_279 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="1045-1045"];
m42_16 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", span="52-52"];
m42_271 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="413-413"];
m42_592 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1946-1946"];
m42_754 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string encodeName = XmlConvert.EncodeName(elementName)", span="1948-1948"];
m42_755 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string ns = string.IsNullOrEmpty(elementPrefix) ? manager.DefaultNamespace : manager.LookupNamespace(elementPrefix)", span="1949-1949"];
m42_756 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IXmlElement element = (!string.IsNullOrEmpty(ns)) ? document.CreateElement(encodeName, ns) : document.CreateElement(encodeName)", span="1951-1951"];
m42_757 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return element;", span="1953-1953"];
m42_758 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1946-1946"];
m42_516 [cluster="Unk.Remove", file="XmlNodeConverter.cs", label="Entry Unk.Remove", span=""];
m42_68 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="XmlNodeConverter.cs", label="JObject o = JObject.Parse(json)", span="212-212"];
m42_464 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", span="1397-1397"];
m42_471 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="node.ChildNodes", span="1399-1399"];
m42_472 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="childNode.LocalName != node.LocalName", span="1401-1401"];
m42_474 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return true;", span="1406-1406"];
m42_473 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return false;", span="1403-1403"];
m42_475 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName(Newtonsoft.Json.Converters.IXmlNode)", span="1397-1397"];
m42_270 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1237-1237"];
m42_387 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeGroupedNodes(writer, node, manager, writePropertyName)", span="1243-1243"];
m42_389 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="IsArray(node) && AllSameName(node) && node.ChildNodes.Count > 0", span="1246-1246"];
m42_390 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeGroupedNodes(writer, node, manager, false)", span="1248-1248"];
m42_398 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1269-1269"];
m42_399 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!ValueAttributes(node.Attributes) && node.ChildNodes.Count == 1\r\n                            && node.ChildNodes[0].NodeType == XmlNodeType.Text", span="1272-1273"];
m42_409 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeNode(writer, node.Attributes[i], manager, true)", span="1298-1298"];
m42_411 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeGroupedNodes(writer, node, manager, true)", span="1301-1301"];
m42_429 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1337-1337"];
m42_433 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1343-1343"];
m42_447 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1366-1366"];
m42_384 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.NodeType", span="1239-1239"];
m42_391 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="manager.PushScope()", span="1252-1252"];
m42_392 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.Attributes", span="1254-1254"];
m42_396 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="manager.AddNamespace(namespacePrefix, namespaceUri)", span="1263-1263"];
m42_397 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label=writePropertyName, span="1267-1267"];
m42_400 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(node.ChildNodes[0].Value)", span="1276-1276"];
m42_401 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.ChildNodes.Count == 0 && CollectionUtils.IsNullOrEmpty(node.Attributes)", span="1278-1278"];
m42_402 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="IXmlElement element = (IXmlElement)node", span="1280-1280"];
m42_404 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteNull()", span="1285-1285"];
m42_405 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(string.Empty)", span="1289-1289"];
m42_406 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteStartObject()", span="1294-1294"];
m42_408 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i < node.Attributes.Count", span="1296-1296"];
m42_412 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteEndObject()", span="1303-1303"];
m42_413 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="manager.PopScope()", span="1306-1306"];
m42_415 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label=writePropertyName, span="1311-1311"];
m42_416 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteComment(node.Value)", span="1313-1313"];
m42_423 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.NamespaceUri == ''http://www.w3.org/2000/xmlns/'' && node.Value == JsonNamespaceUri", span="1322-1322"];
m42_425 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.NamespaceUri == JsonNamespaceUri", span="1327-1327"];
m42_426 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.LocalName == ''Array''", span="1329-1329"];
m42_428 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label=writePropertyName, span="1335-1335"];
m42_430 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(node.Value)", span="1339-1339"];
m42_432 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="IXmlDeclaration declaration = (IXmlDeclaration)node", span="1342-1342"];
m42_434 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteStartObject()", span="1344-1344"];
m42_436 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@version'')", span="1348-1348"];
m42_437 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(declaration.Version)", span="1349-1349"];
m42_439 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@encoding'')", span="1353-1353"];
m42_440 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(declaration.Encoding)", span="1354-1354"];
m42_442 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@standalone'')", span="1358-1358"];
m42_443 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(declaration.Standalone)", span="1359-1359"];
m42_444 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteEndObject()", span="1362-1362"];
m42_446 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="IXmlDocumentType documentType = (IXmlDocumentType)node", span="1365-1365"];
m42_448 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteStartObject()", span="1367-1367"];
m42_450 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@name'')", span="1371-1371"];
m42_451 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(documentType.Name)", span="1372-1372"];
m42_453 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@public'')", span="1376-1376"];
m42_454 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(documentType.Public)", span="1377-1377"];
m42_456 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@system'')", span="1381-1381"];
m42_457 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(documentType.System)", span="1382-1382"];
m42_459 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@internalSubset'')", span="1386-1386"];
m42_460 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(documentType.InternalSubset)", span="1387-1387"];
m42_461 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteEndObject()", span="1390-1390"];
m42_462 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected XmlNodeType when serializing nodes: '' + node.NodeType);", span="1393-1393"];
m42_435 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(declaration.Version)", span="1346-1346"];
m42_438 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(declaration.Encoding)", span="1351-1351"];
m42_441 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(declaration.Standalone)", span="1356-1356"];
m42_449 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(documentType.Name)", span="1369-1369"];
m42_452 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(documentType.Public)", span="1374-1374"];
m42_455 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(documentType.System)", span="1379-1379"];
m42_458 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(documentType.InternalSubset)", span="1384-1384"];
m42_386 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.DocumentFragment", span="1242-1242"];
m42_388 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Element", span="1245-1245"];
m42_407 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="int i = 0", span="1296-1296"];
m42_410 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i++", span="1296-1296"];
m42_424 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="return;", span="1324-1324"];
m42_427 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="return;", span="1331-1331"];
m42_385 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Document", span="1241-1241"];
m42_414 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Comment", span="1310-1310"];
m42_417 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Attribute", span="1316-1316"];
m42_431 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.XmlDeclaration", span="1341-1341"];
m42_445 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.DocumentType", span="1364-1364"];
m42_393 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="attribute.NamespaceUri == ''http://www.w3.org/2000/xmlns/''", span="1256-1256"];
m42_394 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="string namespacePrefix = (attribute.LocalName != ''xmlns'')\r\n                                    ? XmlConvert.DecodeName(attribute.LocalName)\r\n                                    : string.Empty", span="1258-1260"];
m42_395 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="string namespaceUri = attribute.Value", span="1261-1261"];
m42_403 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="element.IsEmpty", span="1283-1283"];
m42_422 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.SignificantWhitespace", span="1321-1321"];
m42_418 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Text", span="1317-1317"];
m42_421 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Whitespace", span="1320-1320"];
m42_419 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.CDATA", span="1318-1318"];
m42_420 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.ProcessingInstruction", span="1319-1319"];
m42_463 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1237-1237"];
m42_268 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1065-1065"];
m42_283 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IXmlNode parent = node", span="1069-1069"];
m42_282 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="List<IXmlNode> parentElements = null", span="1067-1067"];
m42_292 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.PushScope()", span="1089-1089"];
m42_295 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.AddNamespace(attribute.LocalName, attribute.Value)", span="1094-1094"];
m42_284 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="(parent = parent.ParentNode) != null", span="1070-1070"];
m42_289 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="parentElements != null", span="1083-1083"];
m42_291 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label=parentElements, span="1087-1087"];
m42_286 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="parentElements == null", span="1074-1074"];
m42_288 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="parentElements.Add(parent)", span="1079-1079"];
m42_290 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="parentElements.Reverse()", span="1085-1085"];
m42_293 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="parentElement.Attributes", span="1090-1090"];
m42_294 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attribute.NamespaceUri == ''http://www.w3.org/2000/xmlns/'' && attribute.LocalName != ''xmlns''", span="1092-1092"];
m42_285 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="parent.NodeType == XmlNodeType.Element", span="1072-1072"];
m42_287 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="parentElements = new List<IXmlNode>()", span="1076-1076"];
m42_296 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1065-1065"];
m42_594 [cluster="Unk.LookupNamespace", file="XmlNodeConverter.cs", label="Entry Unk.LookupNamespace", span=""];
m42_568 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1757-1757"];
m42_695 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected JsonToken: '' + reader.TokenType);", span="1836-1836"];
m42_705 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected JsonToken: '' + reader.TokenType);", span="1865-1865"];
m42_694 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="!JsonTokenUtils.IsPrimitiveToken(reader.TokenType)", span="1834-1834"];
m42_660 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.TokenType", span="1775-1775"];
m42_670 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeValue = ConvertTokenToXmlValue(reader)", span="1790-1790"];
m42_673 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IsNamespaceAttribute(attributeName, out namespacePrefix)", span="1794-1794"];
m42_662 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string attributeName = reader.Value.ToString()", span="1778-1778"];
m42_696 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeValue = (reader.Value != null) ? reader.Value.ToString() : null", span="1839-1839"];
m42_663 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(attributeName)", span="1780-1780"];
m42_685 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.LookupNamespace(''json'' + i) != null", span="1814-1814"];
m42_655 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Dictionary<string, string> attributeNameValues = new Dictionary<string, string>()", span="1759-1759"];
m42_658 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.TokenType != JsonToken.String\r\n                && reader.TokenType != JsonToken.Null\r\n                && reader.TokenType != JsonToken.Boolean\r\n                && reader.TokenType != JsonToken.Integer\r\n                && reader.TokenType != JsonToken.Float\r\n                && reader.TokenType != JsonToken.Date\r\n                && reader.TokenType != JsonToken.StartConstructor", span="1764-1770"];
m42_659 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="!finishedAttributes && !finishedElement && reader.Read()", span="1773-1773"];
m42_669 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.Read()", span="1789-1789"];
m42_674 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.AddNamespace(namespacePrefix, attributeValue)", span="1796-1796"];
m42_682 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string jsonPrefix = manager.LookupPrefix(JsonNamespaceUri)", span="1809-1809"];
m42_689 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.AddNamespace(jsonPrefix, JsonNamespaceUri)", span="1821-1821"];
m42_693 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.Read()", span="1832-1832"];
m42_668 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeName = attributeName.Substring(1)", span="1788-1788"];
m42_692 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeName = attributeName.Substring(1)", span="1831-1831"];
m42_665 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string attributeValue", span="1783-1783"];
m42_706 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return attributeNameValues;", span="1870-1870"];
m42_661 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="JsonToken.PropertyName", span="1777-1777"];
m42_701 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="JsonToken.EndObject", span="1858-1858"];
m42_703 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="JsonToken.Comment", span="1861-1861"];
m42_671 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeNameValues.Add(attributeName, attributeValue)", span="1791-1791"];
m42_672 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string namespacePrefix", span="1793-1793"];
m42_664 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="char firstChar = attributeName[0]", span="1782-1782"];
m42_697 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeNameValues.Add(jsonPrefix + '':'' + attributeName, attributeValue)", span="1840-1840"];
m42_700 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="finishedAttributes = true", span="1854-1854"];
m42_684 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="int? i = null", span="1813-1813"];
m42_686 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="i = i.GetValueOrDefault() + 1", span="1816-1816"];
m42_687 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="jsonPrefix = ''json'' + i", span="1818-1818"];
m42_656 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="bool finishedAttributes = false", span="1760-1760"];
m42_688 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeNameValues.Add(''xmlns:'' + jsonPrefix, JsonNamespaceUri)", span="1820-1820"];
m42_657 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="bool finishedElement = false", span="1761-1761"];
m42_699 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="finishedAttributes = true", span="1848-1848"];
m42_698 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="finishedAttributes = true", span="1843-1843"];
m42_691 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="finishedAttributes = true", span="1827-1827"];
m42_702 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="finishedElement = true", span="1859-1859"];
m42_704 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="finishedElement = true", span="1862-1862"];
m42_681 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="JsonTypeReflector.ValuePropertyName", span="1806-1806"];
m42_683 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="jsonPrefix == null", span="1810-1810"];
m42_690 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeName == JsonTypeReflector.ArrayValuesPropertyName", span="1825-1825"];
m42_667 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="'@'", span="1787-1787"];
m42_676 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label=attributeName, span="1800-1800"];
m42_666 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label=firstChar, span="1785-1785"];
m42_680 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="JsonTypeReflector.TypePropertyName", span="1805-1805"];
m42_675 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="'$'", span="1799-1799"];
m42_677 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="JsonTypeReflector.ArrayValuesPropertyName", span="1802-1802"];
m42_679 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="JsonTypeReflector.RefPropertyName", span="1804-1804"];
m42_678 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="JsonTypeReflector.IdPropertyName", span="1803-1803"];
m42_707 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1757-1757"];
m42_308 [cluster="Unk.LookupPrefix", file="XmlNodeConverter.cs", label="Entry Unk.LookupPrefix", span=""];
m42_515 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1956-1956"];
m42_762 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", color=green, community=0, file="XmlNodeConverter.cs", label="throw JsonSerializationException.Create(reader, ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName.'');", prediction=68, span="1965-1965"];
m42_761 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.NodeType == XmlNodeType.Document && document.DocumentElement != null", span="1963-1963"];
m42_785 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected JsonToken when deserializing node: '' + reader.TokenType);", span="2013-2013"];
m42_786 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.PropertyName || reader.Read()", span="2015-2015"];
m42_759 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType", span="1960-1960"];
m42_763 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="string propertyName = reader.Value.ToString()", span="1968-1968"];
m42_764 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Read()", span="1969-1969"];
m42_765 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.StartArray", span="1971-1971"];
m42_767 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1974-1974"];
m42_768 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1976-1976"];
m42_771 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.ChildNodes", span="1982-1982"];
m42_774 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="AddJsonArrayAttribute(element, document)", span="1987-1987"];
m42_775 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1995-1995"];
m42_777 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="string constructorName = reader.Value.ToString()", span="1999-1999"];
m42_778 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Read() && reader.TokenType != JsonToken.EndConstructor", span="2001-2001"];
m42_779 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="DeserializeValue(reader, document, manager, constructorName, currentNode)", span="2003-2003"];
m42_781 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(document.CreateComment((string)reader.Value))", span="2007-2007"];
m42_760 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="JsonToken.PropertyName", span="1962-1962"];
m42_784 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return;", span="2011-2011"];
m42_772 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="IXmlElement element = childNode as IXmlElement", span="1984-1984"];
m42_770 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="count == 1 && WriteArrayAttribute", span="1980-1980"];
m42_776 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="JsonToken.StartConstructor", span="1998-1998"];
m42_780 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="JsonToken.Comment", span="2006-2006"];
m42_782 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="JsonToken.EndObject", span="2009-2009"];
m42_773 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="element != null && element.LocalName == propertyName", span="1985-1985"];
m42_766 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="int count = 0", span="1973-1973"];
m42_769 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="count++", span="1977-1977"];
m42_783 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="JsonToken.EndArray", span="2010-2010"];
m42_787 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1956-1956"];
m42_821 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XObjectWrapper", span=""];
m42_818 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XDocumentTypeWrapper", span=""];
m42_823 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlNodeConverter", span=""];
m42_813 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlElementWrapper", span=""];
m42_814 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlDeclarationWrapper", span=""];
m42_815 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper", span=""];
m42_816 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlNodeWrapper", span=""];
m42_812 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlDocumentWrapper", span=""];
m42_819 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XDocumentWrapper", span=""];
m42_822 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XElementWrapper", span=""];
m42_820 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XContainerWrapper", span=""];
m42_817 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XDeclarationWrapper", span=""];
m43_133 [cluster="XmlDocument.cstr", file="XmlNodeConverterTest.cs", label="Entry XmlDocument.cstr", span=""];
m43_444 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", span="1208-1208"];
m43_447 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs", label="string xml = IndentXml(newDoc.InnerXml)", span="1229-1229"];
m43_448 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''<myRoot>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newDoc.InnerXml))", span="1231-1243"];
m43_450 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''<myRoot>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newXDoc.ToString(SaveOptions.DisableFormatting)))", span="1249-1261"];
m43_446 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="1227-1227"];
m43_449 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs", label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="1247-1247"];
m43_451 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs", label="string newJson = JsonConvert.SerializeXmlNode(newDoc, Formatting.Indented)", span="1265-1265"];
m43_445 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ]\r\n  ]\r\n}''", span="1210-1224"];
m43_452 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(newJson)", span="1266-1266"];
m43_453 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", span="1208-1208"];
m43_796 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc_Precision()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc_Precision()", span="2790-2790"];
m43_799 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc_Precision()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''2014-01-23T00:00:00.1234567Z'', dxml.Root.Element(''CreatedDate'').Value)", span="2794-2794"];
m43_798 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc_Precision()", file="XmlNodeConverterTest.cs", label="var dxml = JsonConvert.DeserializeXNode(json, ''root'')", span="2793-2793"];
m43_800 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc_Precision()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(''DateTimeToXml_Utc: '' + dxml.Root.Element(''CreatedDate'').Value)", span="2796-2796"];
m43_797 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc_Precision()", file="XmlNodeConverterTest.cs", label="string json = @''{''''CreatedDate'''': ''''2014-01-23T00:00:00.1234567Z''''}''", span="2792-2792"];
m43_801 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc_Precision()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc_Precision()", span="2790-2790"];
m43_748 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", span="2690-2690"];
m43_750 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="XmlNodeConverterTest.cs", label="XmlDocument node = JsonConvert.DeserializeXmlNode(json)", span="2694-2694"];
m43_749 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="XmlNodeConverterTest.cs", label="var json = ''{\''%name\'':\''value\''}''", span="2692-2692"];
m43_751 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''<_x0025_name>value</_x0025_name>'', node.OuterXml)", span="2696-2696"];
m43_752 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="XmlNodeConverterTest.cs", label="string json2 = JsonConvert.SerializeXmlNode(node)", span="2698-2698"];
m43_753 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(json, json2)", span="2700-2700"];
m43_754 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", span="2690-2690"];
m43_660 [cluster="System.IO.MemoryStream.ToArray()", file="XmlNodeConverterTest.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m43_347 [cluster="Unk.GetIndentedInnerXml", file="XmlNodeConverterTest.cs", label="Entry Unk.GetIndentedInnerXml", span=""];
m43_659 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", span="2068-2068"];
m43_662 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs", label="Newtonsoft.Json.JsonSerializerSettings settings = new Newtonsoft.Json.JsonSerializerSettings()", span="2070-2070"];
m43_669 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs", label="XmlWriter writer = XmlWriter.Create(xml)", span="2080-2080"];
m43_670 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs", label="doc.Save(writer)", span="2082-2082"];
m43_665 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs", label="Newtonsoft.Json.JsonTextReader reader = new Newtonsoft.Json.JsonTextReader(new System.IO.StreamReader(json))", span="2073-2073"];
m43_663 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs", label="settings.Converters.Add(new Newtonsoft.Json.Converters.XmlNodeConverter())", span="2071-2071"];
m43_664 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs", label="Newtonsoft.Json.JsonSerializer serializer = Newtonsoft.Json.JsonSerializer.Create(settings)", span="2072-2072"];
m43_667 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs", label="reader.Read() && reader.TokenType != JsonToken.Comment", span="2076-2076"];
m43_666 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs", label="XmlDocument doc = (XmlDocument)serializer.Deserialize(reader, typeof(XmlDocument))", span="2075-2075"];
m43_668 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs", label="throw new JsonSerializationException(''Additional text found in JSON string after finishing deserializing object.'');", span="2078-2078"];
m43_671 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", span="2068-2068"];
m43_322 [cluster="System.Text.StringBuilder.StringBuilder()", file="XmlNodeConverterTest.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m43_789 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="XmlNodeConverterTest.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m43_68 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDollarProperty()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDollarProperty()", span="149-149"];
m43_70 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDollarProperty()", file="XmlNodeConverterTest.cs", label="var doc = JsonConvert.DeserializeXNode(json1)", span="153-153"];
m43_69 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDollarProperty()", file="XmlNodeConverterTest.cs", label="string json1 = @''{''''$'''':''''test''''}''", span="151-151"];
m43_71 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDollarProperty()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<_x0024_>test</_x0024_>'', doc.ToString())", span="155-155"];
m43_72 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDollarProperty()", file="XmlNodeConverterTest.cs", label="var json2 = JsonConvert.SerializeXNode(doc)", span="157-157"];
m43_73 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDollarProperty()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(json1, json2)", span="159-159"];
m43_74 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDollarProperty()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDollarProperty()", span="149-149"];
m43_443 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", span="1125-1125"];
m43_86 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", span="184-184"];
m43_94 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", label="StringAssert.Equals(@''<object>\r\n  <Prop1 />\r\n  <Prop2 />\r\n</object>'', d.ToString())", span="195-198"];
m43_93 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", label="XDocument d = json.ToObject<XDocument>(jsonSerializer)", span="193-193"];
m43_91 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", label="var jsonSerializerSettings = new JsonSerializerSettings { Converters = new JsonConverter[] { xmlNodeConverter } }", span="191-191"];
m43_87 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", label="JObject json = new JObject()", span="186-186"];
m43_92 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", label="var jsonSerializer = JsonSerializer.CreateDefault(jsonSerializerSettings)", span="192-192"];
m43_90 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", label="var xmlNodeConverter = new XmlNodeConverter { DeserializeRootElementName = ''object'' }", span="190-190"];
m43_88 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", label="json[''Prop1''] = (string)null", span="187-187"];
m43_89 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", label="json[''Prop2''] = new MyModel().MyProperty", span="188-188"];
m43_95 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", span="184-184"];
m43_601 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34"];
m43_603 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", span="1896-1896"];
m43_607 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''<test>\r\n  <Name>Hi</Name>\r\n  <Products json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <Name>First</Name>\r\n    <ExpiryDate>2000-01-01T00:00:00Z</ExpiryDate>\r\n    <Price>0</Price>\r\n    <Sizes />\r\n  </Products>\r\n</test>'', IndentXml(xmlProduct.InnerXml))", span="1911-1919"];
m43_606 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="XmlDocument xmlProduct = JsonConvert.DeserializeXmlNode(output, ''test'', true)", span="1909-1909"];
m43_608 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="string output2 = JsonConvert.SerializeXmlNode(xmlProduct.DocumentElement, Formatting.Indented, true)", span="1921-1921"];
m43_609 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Hi'''',\r\n  ''''Products'''': [\r\n    {\r\n      ''''Name'''': ''''First'''',\r\n      ''''ExpiryDate'''': ''''2000-01-01T00:00:00Z'''',\r\n      ''''Price'''': ''''0'''',\r\n      ''''Sizes'''': null\r\n    }\r\n  ]\r\n}'', output2)", span="1923-1933"];
m43_605 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="string output = JsonConvert.SerializeObject(o, new IsoDateTimeConverter())", span="1907-1907"];
m43_604 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="TestComplexArrayClass o = new TestComplexArrayClass\r\n            {\r\n                Name = ''Hi'',\r\n                Products = new List<Product>\r\n                {\r\n                    new Product { Name = ''First'' }\r\n                }\r\n            }", span="1898-1905"];
m43_610 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", span="1896-1896"];
m43_47 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="366-366"];
m43_611 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.TestComplexArrayClass.TestComplexArrayClass()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.TestComplexArrayClass.TestComplexArrayClass()", span="1889-1889"];
m43_135 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", span="276-276"];
m43_139 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="XmlNodeConverterTest.cs", label="var result = xmlDocument.FirstChild.ChildNodes.Cast<XmlNode>().ToArray()", span="290-290"];
m43_137 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="XmlNodeConverterTest.cs", label="var xmlDocument = new XmlDocument()", span="286-286"];
m43_138 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="XmlNodeConverterTest.cs", label="xmlDocument.LoadXml(xml)", span="288-288"];
m43_140 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="XmlNodeConverterTest.cs", label="var json = JsonConvert.SerializeObject(result, Formatting.Indented)", span="292-292"];
m43_136 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="XmlNodeConverterTest.cs", label="string xml = @''<payload>\r\n    <Country>6</Country>\r\n    <FinancialTransactionApprovalRequestUID>79</FinancialTransactionApprovalRequestUID>\r\n    <TransactionStatus>Approved</TransactionStatus>\r\n    <StatusChangeComment></StatusChangeComment>\r\n    <RequestedBy>Someone</RequestedBy>\r\n</payload>''", span="278-284"];
m43_141 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Country'''': ''''6''''\r\n  },\r\n  {\r\n    ''''FinancialTransactionApprovalRequestUID'''': ''''79''''\r\n  },\r\n  {\r\n    ''''TransactionStatus'''': ''''Approved''''\r\n  },\r\n  {\r\n    ''''StatusChangeComment'''': ''''''''\r\n  },\r\n  {\r\n    ''''RequestedBy'''': ''''Someone''''\r\n  }\r\n]'', json)", span="294-310"];
m43_142 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", span="276-276"];
m43_112 [cluster="Unk.IsNull", file="XmlNodeConverterTest.cs", label="Entry Unk.IsNull", span=""];
m43_180 [cluster="System.TimeSpan.FromMinutes(double)", file="XmlNodeConverterTest.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m43_540 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", span="1643-1643"];
m43_543 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="XmlNodeConverterTest.cs", label="string xml = GetIndentedInnerXml(node)", span="1656-1656"];
m43_542 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="XmlNodeConverterTest.cs", label="XmlNode node = JsonConvert.DeserializeXmlNode(json, ''root'')", span="1655-1655"];
m43_544 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>1</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>2</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>3</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>4</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>5</values>\r\n</root>'', xml)", span="1658-1665"];
m43_547 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(json, newJson)", span="1671-1671"];
m43_541 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n  ''''$values'''': [\r\n    ''''1'''',\r\n    ''''2'''',\r\n    ''''3'''',\r\n    ''''4'''',\r\n    ''''5''''\r\n  ]\r\n}''", span="1645-1653"];
m43_545 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="XmlNodeConverterTest.cs", label="string newJson = JsonConvert.SerializeXmlNode(node, Formatting.Indented, true)", span="1667-1667"];
m43_546 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(newJson)", span="1669-1669"];
m43_548 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", span="1643-1643"];
m43_134 [cluster="Unk.LoadXml", file="XmlNodeConverterTest.cs", label="Entry Unk.LoadXml", span=""];
m43_646 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="574-574"];
m43_181 [cluster="System.TimeSpan.Add(System.TimeSpan)", file="XmlNodeConverterTest.cs", label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0"];
m43_100 [cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>(Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>(Newtonsoft.Json.JsonSerializer)", span="2066-2066"];
m43_122 [cluster="Unk.SerializeObject", file="XmlNodeConverterTest.cs", label="Entry Unk.SerializeObject", span=""];
m43_661 [cluster="System.Text.Encoding.GetString(byte[])", file="XmlNodeConverterTest.cs", label="Entry System.Text.Encoding.GetString(byte[])", span="0-0"];
m43_216 [cluster="Unk.IsTrue", file="XmlNodeConverterTest.cs", label="Entry Unk.IsTrue", span=""];
m43_500 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="405-405"];
m43_232 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", span="511-511"];
m43_236 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="string jsonText = SerializeXmlNode(doc)", span="526-526"];
m43_234 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="523-523"];
m43_235 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(xml)", span="524-524"];
m43_237 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="string expected = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''?xml-stylesheet'''': ''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''@href'''': ''''http://www.web2con.com/'''',\r\n      ''''span'''': [\r\n        {\r\n          ''''@class'''': ''''summary'''',\r\n          ''''#text'''': ''''Web 2.0 Conference'''',\r\n          ''''#cdata-section'''': ''''my escaped text''''\r\n        },\r\n        {\r\n          ''''@class'''': ''''location'''',\r\n          ''''#text'''': ''''Argent Hotel, San Francisco, CA''''\r\n        }\r\n      ],\r\n      ''''abbr'''': [\r\n        {\r\n          ''''@class'''': ''''dtstart'''',\r\n          ''''@title'''': ''''2005-10-05'''',\r\n          ''''#text'''': ''''October 5''''\r\n        },\r\n        {\r\n          ''''@class'''': ''''dtend'''',\r\n          ''''@title'''': ''''2005-10-08'''',\r\n          ''''#text'''': ''''7''''\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}''", span="527-563"];
m43_238 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expected, jsonText)", span="565-565"];
m43_233 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n<?xml-stylesheet href=''''classic.xsl'''' type=''''text/xml''''?>\r\n<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''>\r\n    <span class=''''summary''''>Web 2.0 Conference<![CDATA[my escaped text]]></span>\r\n    <abbr class=''''dtstart'''' title=''''2005-10-05''''>October 5</abbr>\r\n    <abbr class=''''dtend'''' title=''''2005-10-08''''>7</abbr>\r\n    <span class=''''location''''>Argent Hotel, San Francisco, CA</span>\r\n  </a>\r\n</span>''", span="513-522"];
m43_239 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", span="511-511"];
m43_599 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29"];
m43_675 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", span="2090-2090"];
m43_680 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="XNode node = JsonConvert.DeserializeXNode(json)", span="2286-2286"];
m43_677 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeXNode(XDocument.Parse(xaml), Formatting.Indented)", span="2125-2125"];
m43_679 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expectedJson, json)", span="2284-2284"];
m43_681 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="string xaml2 = node.ToString()", span="2288-2288"];
m43_683 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expectedXaml, xaml2)", span="2323-2323"];
m43_676 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="string xaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="2092-2123"];
m43_678 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="string expectedJson = @''{\r\n  ''''Grid'''': {\r\n    ''''@xmlns'''': ''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''',\r\n    ''''@xmlns:x'''': ''''http://schemas.microsoft.com/winfx/2006/xaml'''',\r\n    ''''@xmlns:toolkit'''': ''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''',\r\n    ''''@Style'''': ''''{StaticResource trimFormGrid}'''',\r\n    ''''@x:Name'''': ''''TrimObjectForm'''',\r\n    ''''Grid.ColumnDefinitions'''': {\r\n      ''''ColumnDefinition'''': [\r\n        {\r\n          ''''@Width'''': ''''63*''''\r\n        },\r\n        {\r\n          ''''@Width'''': ''''320*''''\r\n        }\r\n      ]\r\n    },\r\n    ''''Grid.RowDefinitions'''': {\r\n      ''''@xmlns'''': '''''''',\r\n      ''''RowDefinition'''': [\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null\r\n      ]\r\n    },\r\n    ''''TextBox'''': [\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordTypedTitle'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''0'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordExternalReference'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''1'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordAuthor'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''4'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordContainer'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''5'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordIsEnclosed'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''6'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordAssignee'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''7'''',\r\n        ''''@xmlns'''': ''''''''\r\n      }\r\n    ],\r\n    ''''toolkit:DatePicker'''': [\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_DP}'''',\r\n        ''''@Value'''': ''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordDateCreated'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''2''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_DP}'''',\r\n        ''''@Value'''': ''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordDateDue'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''3''''\r\n      }\r\n    ],\r\n    ''''TextBlock'''': [\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Title (Free Text Part)'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''0'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''External ID'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''1'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Date Created'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''2'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Date Due'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''3'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Author'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''4'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Container'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''5'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Enclosed?'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''6'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Assignee'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''7'''',\r\n        ''''@xmlns'''': ''''''''\r\n      }\r\n    ]\r\n  }\r\n}''", span="2127-2282"];
m43_682 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="string expectedXaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="2290-2321"];
m43_684 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", span="2090-2090"];
m43_649 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", span="2056-2056"];
m43_654 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''﻿<?xml version=''''1.0'''' encoding=''''utf-8''''?><root booleanType=''''true'''' />'', xmlString)", span="2065-2065"];
m43_653 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs", label="string xmlString = System.Text.Encoding.UTF8.GetString(xml.ToArray())", span="2063-2063"];
m43_651 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs", label="MemoryStream xml = new MemoryStream()", span="2059-2059"];
m43_652 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs", label="JsonBodyToSoapXml(ms, xml)", span="2061-2061"];
m43_650 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs", label="MemoryStream ms = new MemoryStream(System.Text.Encoding.UTF8.GetBytes(@''{root:{''''@booleanType'''':true}}''))", span="2058-2058"];
m43_655 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", span="2056-2056"];
m43_223 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", span="1036-1036"];
m43_725 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2637-2637"];
m43_726 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="var xmlString = @''<root>\r\n                              <b xmlns='http://www.example.com/ns'>Asd</b>\r\n                              <c>AAA</c>\r\n                              <test>adad</test>\r\n                              </root>''", span="2639-2643"];
m43_727 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="var xml = XElement.Parse(xmlString)", span="2645-2645"];
m43_728 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="var json1 = JsonConvert.SerializeXNode(xml)", span="2647-2647"];
m43_729 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="var xmlBack = JsonConvert.DeserializeObject<XElement>(json1)", span="2648-2648"];
m43_730 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="var equals = XElement.DeepEquals(xmlBack, xml)", span="2650-2650"];
m43_731 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(equals)", span="2651-2651"];
m43_732 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2637-2637"];
m43_207 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", span="454-454"];
m43_209 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs", label="var xml = XElement.Parse(xmlString)", span="462-462"];
m43_210 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs", label="var json1 = JsonConvert.SerializeXNode(xml)", span="464-464"];
m43_211 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs", label="var xmlBack = JsonConvert.DeserializeObject<XElement>(json1)", span="465-465"];
m43_208 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs", label="var xmlString = @''<root>\r\n                              <b xmlns='http://www.example.com/ns'/>\r\n                              <c>AAA</c>\r\n                              <test>adad</test>\r\n                              </root>''", span="456-460"];
m43_212 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs", label="var equals = XElement.DeepEquals(xmlBack, xml)", span="467-467"];
m43_213 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(equals)", span="468-468"];
m43_214 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", span="454-454"];
m43_279 [cluster="Unk.CreateAttribute", file="XmlNodeConverterTest.cs", label="Entry Unk.CreateAttribute", span=""];
m43_121 [cluster="Unk.Parse", file="XmlNodeConverterTest.cs", label="Entry Unk.Parse", span=""];
m43_124 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", span="248-248"];
m43_126 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="XmlNodeConverterTest.cs", label="XmlDocument d = new XmlDocument()", span="252-252"];
m43_127 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="XmlNodeConverterTest.cs", label="d.LoadXml(xml)", span="253-253"];
m43_128 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="255-255"];
m43_129 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''result'''': {\r\n    ''''@xp_0:end'''': ''''2014-08-15 13:12:11.9184'''',\r\n    ''''@xp_0:start'''': ''''2014-08-15 13:11:49.3140'''',\r\n    ''''@xp_0:time_diff'''': ''''22604.3836'''',\r\n    ''''@xmlns:xp_0'''': ''''Test1'''',\r\n    ''''@p2:end'''': ''''2014-08-15 13:13:49.5522'''',\r\n    ''''@p2:start'''': ''''2014-08-15 13:13:49.0268'''',\r\n    ''''@p2:time_diff'''': ''''525.4646'''',\r\n    ''''@xmlns:p2'''': ''''Test2''''\r\n  }\r\n}'', json)", span="257-268"];
m43_125 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="XmlNodeConverterTest.cs", label="string xml = @''<result xp_0:end=''''2014-08-15 13:12:11.9184'''' xp_0:start=''''2014-08-15 13:11:49.3140'''' xp_0:time_diff=''''22604.3836'''' xmlns:xp_0=''''Test1'''' p2:end=''''2014-08-15 13:13:49.5522'''' p2:start=''''2014-08-15 13:13:49.0268'''' p2:time_diff=''''525.4646'''' xmlns:p2=''''Test2'''' />''", span="250-250"];
m43_130 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = JsonConvert.DeserializeObject<XmlDocument>(json)", span="270-270"];
m43_131 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(xml, doc.OuterXml)", span="272-272"];
m43_132 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", span="248-248"];
m43_781 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", span="2768-2768"];
m43_785 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(dt.ToString(''yyyy-MM-ddTHH:mm:sszzzzzzz'', CultureInfo.InvariantCulture), dxml.Root.Element(''CreatedDate'').Value)", span="2774-2774"];
m43_784 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", file="XmlNodeConverterTest.cs", label="var dxml = JsonConvert.DeserializeXNode(json, ''root'')", span="2773-2773"];
m43_786 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(''DateTimeToXml_Local: '' + dxml.Root.Element(''CreatedDate'').Value)", span="2776-2776"];
m43_782 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", file="XmlNodeConverterTest.cs", label="DateTime dt = DateTime.Parse(''2014-01-23T00:00:00+01:00'')", span="2770-2770"];
m43_783 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", file="XmlNodeConverterTest.cs", label="string json = @''{''''CreatedDate'''': ''''2014-01-23T00:00:00+01:00''''}''", span="2772-2772"];
m43_787 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", span="2768-2768"];
m43_480 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", span="1381-1381"];
m43_484 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="string jsonText = SerializeXmlNode(doc)", span="1389-1389"];
m43_487 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="1404-1404"];
m43_482 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="1386-1386"];
m43_483 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(xml)", span="1387-1387"];
m43_485 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="string expected = @''{\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''@href'''': ''''http://www.web2con.com/''''/* Hi */,\r\n      ''''span'''': ''''Text''''\r\n    }/* Hi! */\r\n  }\r\n}''", span="1391-1400"];
m43_486 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expected, jsonText)", span="1402-1402"];
m43_488 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<span class=''''vevent''''><a class=''''url'''' href=''''http://www.web2con.com/''''><!-- Hi --><span>Text</span></a><!-- Hi! --></span>'', newDoc.InnerXml)", span="1405-1405"];
m43_481 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="string xml = @''<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''><!-- Hi --><span>Text</span></a><!-- Hi! -->\r\n</span>''", span="1383-1385"];
m43_489 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", span="1381-1381"];
m43_67 [cluster="System.IO.StringWriter.ToString()", file="XmlNodeConverterTest.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m43_13 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="return json;", span="88-88"];
m43_323 [cluster="Unk.Save", file="XmlNodeConverterTest.cs", label="Entry Unk.Save", span=""];
m43_356 [cluster="Unk.WriteTo", file="XmlNodeConverterTest.cs", label="Entry Unk.WriteTo", span=""];
m43_280 [cluster="Unk.SetAttributeNode", file="XmlNodeConverterTest.cs", label="Entry Unk.SetAttributeNode", span=""];
m43_2 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="XmlNodeReader reader = new XmlNodeReader(node)", span="64-64"];
m43_3 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="XObject xNode", span="67-67"];
m43_620 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", span="1972-1972"];
m43_626 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs", label="XmlDocument d2 = JsonConvert.DeserializeXmlNode(json)", span="2008-2008"];
m43_624 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeXmlNode(d, Formatting.Indented)", span="1986-1986"];
m43_625 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@encoding'''': ''''utf-8''''\r\n  },\r\n  ''''root'''': {\r\n    ''''A'''': {\r\n      ''''B'''': [\r\n        {\r\n          ''''@name'''': ''''sample''''\r\n        }\r\n      ],\r\n      ''''C'''': [\r\n        '''''''',\r\n        ''''''''\r\n      ]\r\n    }\r\n  }\r\n}'', json)", span="1988-2006"];
m43_627 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-8''''?>\r\n<root>\r\n  <A>\r\n    <B name=''''sample'''' />\r\n    <C></C>\r\n    <C></C>\r\n  </A>\r\n</root>'', ToStringWithDeclaration(d2, true))", span="2010-2017"];
m43_622 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs", label="XmlDocument d = new XmlDocument()", span="1983-1983"];
m43_623 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs", label="d.LoadXml(xml)", span="1984-1984"];
m43_621 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs", label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n<A>\r\n<B name=''''sample'''' json:Array=''''true''''/>\r\n<C></C>\r\n<C></C>\r\n</A>\r\n</root>''", span="1974-1981"];
m43_628 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", span="1972-1972"];
m43_648 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="851-851"];
m43_815 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", span="2824-2824"];
m43_818 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="var json = JsonConvert.SerializeObject(original)", span="2829-2829"];
m43_817 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', original.ToString())", span="2827-2827"];
m43_821 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', deserialized.ToString())", span="2833-2833"];
m43_816 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="var original = XElement.Parse(''<MyElement xmlns=\''http://example.com\'' />'')", span="2826-2826"];
m43_819 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''MyElement'''':{''''@xmlns'''':''''http://example.com''''}}'', json)", span="2830-2830"];
m43_820 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="var deserialized = JsonConvert.DeserializeObject<XElement>(json)", span="2832-2832"];
m43_822 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", span="2824-2824"];
m43_99 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", span="616-616"];
m43_282 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", span="648-648"];
m43_283 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="XmlNodeConverterTest.cs", label="XmlNode node = DeserializeXmlNode(@''{\r\n  ''''xs!:Choice!'''': {\r\n    ''''@msdata:IsDataSet!'''': '''''''',\r\n    ''''@xmlns:xs!'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''?xml-stylesheet'''': ''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',\r\n    ''''#cdata-section'''': ''''<Kiwi>true</Kiwi>''''\r\n  }\r\n}'')", span="650-658"];
m43_285 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="XmlNodeConverterTest.cs", label="string json = SerializeXmlNode(node)", span="662-662"];
m43_284 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<xs_x0021_:Choice_x0021_ msdata:IsDataSet_x0021_='''''''' xmlns:xs_x0021_=''''http://www.w3.org/2001/XMLSchema'''' xmlns:msdata=''''urn:schemas-microsoft-com:xml-msdata''''><?xml-stylesheet href=''''classic.xsl'''' type=''''text/xml''''?><![CDATA[<Kiwi>true</Kiwi>]]></xs_x0021_:Choice_x0021_>'', node.InnerXml)", span="660-660"];
m43_286 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''xs!:Choice!'''': {\r\n    ''''@msdata:IsDataSet!'''': '''''''',\r\n    ''''@xmlns:xs!'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''?xml-stylesheet'''': ''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',\r\n    ''''#cdata-section'''': ''''<Kiwi>true</Kiwi>''''\r\n  }\r\n}'', json)", span="664-672"];
m43_287 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", span="648-648"];
m43_215 [cluster="Unk.DeepEquals", file="XmlNodeConverterTest.cs", label="Entry Unk.DeepEquals", span=""];
m43_98 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="434-434"];
m43_96 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="88-88"];
m43_12 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(json, linqJson)", span="85-85"];
m43_572 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", span="1747-1747"];
m43_575 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="XmlNodeConverterTest.cs", label="string xml = GetIndentedInnerXml(node)", span="1755-1755"];
m43_574 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="XmlNodeConverterTest.cs", label="XmlNode node = JsonConvert.DeserializeXmlNode(json, ''root'')", span="1754-1754"];
m43_576 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id=''''1''''>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json'''' />\r\n</root>'', xml)", span="1757-1760"];
m43_578 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(json, newJson)", span="1764-1764"];
m43_573 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': null\r\n}''", span="1749-1752"];
m43_577 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="XmlNodeConverterTest.cs", label="string newJson = JsonConvert.SerializeXmlNode(node, Formatting.Indented, true)", span="1762-1762"];
m43_579 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", span="1747-1747"];
m43_10 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="xNode = XNode.ReadFrom(reader)", span="80-80"];
m43_206 [cluster="Unk.SerializeXmlNode", file="XmlNodeConverterTest.cs", label="Entry Unk.SerializeXmlNode", span=""];
m43_386 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", span="1051-1051"];
m43_387 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", color=green, community=0, file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''{Prop1:1,Prop2:2}''); },\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName. Path 'Prop2', line 1, position 15.'')", prediction=69, span="1053-1055"];
m43_388 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", span="1051-1051"];
m43_75 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", span="1114-1114"];
m43_274 [cluster="Unk.Element", file="XmlNodeConverterTest.cs", label="Entry Unk.Element", span=""];
m43_64 [cluster="Unk.Read", file="XmlNodeConverterTest.cs", label="Entry Unk.Read", span=""];
m43_365 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", span="987-987"];
m43_369 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs", label="string jsonText = SerializeXmlNode(doc)", span="1004-1004"];
m43_371 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="1027-1027"];
m43_367 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="1001-1001"];
m43_368 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(xml)", span="1002-1002"];
m43_370 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''root'''': {\r\n    ''''person'''': [\r\n      {\r\n        ''''@id'''': ''''1'''',\r\n        ''''name'''': ''''Alan'''',\r\n        ''''url'''': null\r\n      },\r\n      {\r\n        ''''@id'''': ''''2'''',\r\n        ''''name'''': ''''Louis'''',\r\n        ''''url'''': ''''http://www.yahoo.com''''\r\n      }\r\n    ]\r\n  }\r\n}'', jsonText)", span="1006-1025"];
m43_372 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="1029-1029"];
m43_366 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs", label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n			<root>\r\n			  <person id=''''1''''>\r\n				<name>Alan</name>\r\n				<url />\r\n			  </person>\r\n			  <person id=''''2''''>\r\n				<name>Louis</name>\r\n				<url>http://www.yahoo.com</url>\r\n			  </person>\r\n			</root>''", span="989-999"];
m43_373 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", span="987-987"];
m43_315 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Utf8StringWriter.Utf8StringWriter(System.Text.StringBuilder)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Utf8StringWriter.Utf8StringWriter(System.Text.StringBuilder)", span="799-799"];
m43_316 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Utf8StringWriter.Utf8StringWriter(System.Text.StringBuilder)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Utf8StringWriter.Utf8StringWriter(System.Text.StringBuilder)", span="799-799"];
m43_164 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DecimalContainer.DecimalContainer()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DecimalContainer.DecimalContainer()", span="351-351"];
m43_22 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", span="1090-1090"];
m43_144 [cluster="Unk.ToArray", file="XmlNodeConverterTest.cs", label="Entry Unk.ToArray", span=""];
m43_529 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="XmlNodeConverterTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m43_24 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", span="91-91"];
m43_25 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", file="XmlNodeConverterTest.cs", label="return DeserializeXmlNode(json, null);", span="93-93"];
m43_26 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", span="91-91"];
m43_297 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", span="692-692"];
m43_305 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="XmlDocument doc11 = JsonConvert.DeserializeXmlNode(json1)", span="775-775"];
m43_310 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="XDocument doc22 = JsonConvert.DeserializeXNode(json2)", span="786-786"];
m43_304 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expected, json1)", span="773-773"];
m43_303 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="string json1 = JsonConvert.SerializeXmlNode(doc1, Formatting.Indented)", span="771-771"];
m43_306 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(xml, ToStringWithDeclaration(doc11))", span="777-777"];
m43_300 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="XmlDocument doc1 = new XmlDocument()", span="767-767"];
m43_302 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="doc1.LoadXml(xml)", span="769-769"];
m43_309 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expected, json2)", span="784-784"];
m43_308 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="string json2 = JsonConvert.SerializeXNode(doc2, Formatting.Indented)", span="782-782"];
m43_311 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(xml, ToStringWithDeclaration(doc22))", span="788-788"];
m43_299 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="string expected = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@encoding'''': ''''utf-8''''\r\n  },\r\n  ''''!DOCTYPE'''': {\r\n    ''''@name'''': ''''STOCKQUOTE'''',\r\n    ''''@public'''': ''''-//W3C//DTD StockQuote 1.5//EN'''',\r\n    ''''@system'''': ''''http://www.idontexistnopenopewhatnope123.org/dtd/stockquote_1.5.dtd''''\r\n  },\r\n  ''''STOCKQUOTE'''': {\r\n    ''''@ROWCOUNT'''': ''''2'''',\r\n    ''''RESULT'''': {\r\n      ''''ROW'''': [\r\n        {\r\n          ''''ASK'''': ''''0'''',\r\n          ''''BID'''': ''''0'''',\r\n          ''''CHANGE'''': ''''-16.310'''',\r\n          ''''COMPANYNAME'''': ''''Dow Jones'''',\r\n          ''''DATETIME'''': ''''2014-04-17 15:50:37'''',\r\n          ''''DIVIDEND'''': ''''0'''',\r\n          ''''EPS'''': ''''0'''',\r\n          ''''EXCHANGE'''': '''''''',\r\n          ''''HIGH'''': ''''16460.490'''',\r\n          ''''LASTDATETIME'''': ''''2014-04-17 15:50:37'''',\r\n          ''''LASTPRICE'''': ''''16408.540'''',\r\n          ''''LOW'''': ''''16368.140'''',\r\n          ''''OPEN'''': ''''16424.140'''',\r\n          ''''PCHANGE'''': ''''-0.099'''',\r\n          ''''PE'''': ''''0'''',\r\n          ''''PREVIOUSCLOSE'''': ''''16424.850'''',\r\n          ''''SHARES'''': ''''0'''',\r\n          ''''TICKER'''': ''''DJII'''',\r\n          ''''TRADES'''': ''''0'''',\r\n          ''''VOLUME'''': ''''136188700'''',\r\n          ''''YEARHIGH'''': ''''11309.000'''',\r\n          ''''YEARLOW'''': ''''9302.280'''',\r\n          ''''YIELD'''': ''''0''''\r\n        },\r\n        {\r\n          ''''ASK'''': ''''0'''',\r\n          ''''BID'''': ''''0'''',\r\n          ''''CHANGE'''': ''''9.290'''',\r\n          ''''COMPANYNAME'''': ''''NASDAQ'''',\r\n          ''''DATETIME'''': ''''2014-04-17 15:40:01'''',\r\n          ''''DIVIDEND'''': ''''0'''',\r\n          ''''EPS'''': ''''0'''',\r\n          ''''EXCHANGE'''': '''''''',\r\n          ''''HIGH'''': ''''4110.460'''',\r\n          ''''LASTDATETIME'''': ''''2014-04-17 15:40:01'''',\r\n          ''''LASTPRICE'''': ''''4095.520'''',\r\n          ''''LOW'''': ''''4064.700'''',\r\n          ''''OPEN'''': ''''4080.300'''',\r\n          ''''PCHANGE'''': ''''0.227'''',\r\n          ''''PE'''': ''''0'''',\r\n          ''''PREVIOUSCLOSE'''': ''''4086.230'''',\r\n          ''''SHARES'''': ''''0'''',\r\n          ''''TICKER'''': ''''COMP'''',\r\n          ''''TRADES'''': ''''0'''',\r\n          ''''VOLUME'''': ''''1784210100'''',\r\n          ''''YEARHIGH'''': ''''4371.710'''',\r\n          ''''YEARLOW'''': ''''3154.960'''',\r\n          ''''YIELD'''': ''''0''''\r\n        }\r\n      ]\r\n    },\r\n    ''''STATUS'''': ''''Couldn't find ticker: SPIC?'''',\r\n    ''''STATUSCODE'''': ''''2''''\r\n  }\r\n}''", span="696-765"];
m43_301 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="doc1.XmlResolver = null", span="768-768"];
m43_298 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8''''?><!DOCTYPE STOCKQUOTE PUBLIC ''''-//W3C//DTD StockQuote 1.5//EN'''' ''''http://www.idontexistnopenopewhatnope123.org/dtd/stockquote_1.5.dtd''''><STOCKQUOTE ROWCOUNT=''''2''''><RESULT><ROW><ASK>0</ASK><BID>0</BID><CHANGE>-16.310</CHANGE><COMPANYNAME>Dow Jones</COMPANYNAME><DATETIME>2014-04-17 15:50:37</DATETIME><DIVIDEND>0</DIVIDEND><EPS>0</EPS><EXCHANGE></EXCHANGE><HIGH>16460.490</HIGH><LASTDATETIME>2014-04-17 15:50:37</LASTDATETIME><LASTPRICE>16408.540</LASTPRICE><LOW>16368.140</LOW><OPEN>16424.140</OPEN><PCHANGE>-0.099</PCHANGE><PE>0</PE><PREVIOUSCLOSE>16424.850</PREVIOUSCLOSE><SHARES>0</SHARES><TICKER>DJII</TICKER><TRADES>0</TRADES><VOLUME>136188700</VOLUME><YEARHIGH>11309.000</YEARHIGH><YEARLOW>9302.280</YEARLOW><YIELD>0</YIELD></ROW><ROW><ASK>0</ASK><BID>0</BID><CHANGE>9.290</CHANGE><COMPANYNAME>NASDAQ</COMPANYNAME><DATETIME>2014-04-17 15:40:01</DATETIME><DIVIDEND>0</DIVIDEND><EPS>0</EPS><EXCHANGE></EXCHANGE><HIGH>4110.460</HIGH><LASTDATETIME>2014-04-17 15:40:01</LASTDATETIME><LASTPRICE>4095.520</LASTPRICE><LOW>4064.700</LOW><OPEN>4080.300</OPEN><PCHANGE>0.227</PCHANGE><PE>0</PE><PREVIOUSCLOSE>4086.230</PREVIOUSCLOSE><SHARES>0</SHARES><TICKER>COMP</TICKER><TRADES>0</TRADES><VOLUME>1784210100</VOLUME><YEARHIGH>4371.710</YEARHIGH><YEARLOW>3154.960</YEARLOW><YIELD>0</YIELD></ROW></RESULT><STATUS>Couldn't find ticker: SPIC?</STATUS><STATUSCODE>2</STATUSCODE></STOCKQUOTE>''", span="694-694"];
m43_307 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="XDocument doc2 = XDocument.Parse(xml)", span="780-780"];
m43_312 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", span="692-692"];
m43_539 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", span="1024-1024"];
m43_0 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", span="61-61"];
m43_1 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeXmlNode(node, Formatting.Indented)", span="63-63"];
m43_348 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", span="946-946"];
m43_349 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="XmlWriterSettings settings = new XmlWriterSettings()", span="948-948"];
m43_353 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="node.WriteTo(writer)", span="955-955"];
m43_351 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="StringWriter sw = new StringWriter()", span="951-951"];
m43_354 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="return sw.ToString();", span="958-958"];
m43_350 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="settings.Indent = true", span="949-949"];
m43_352 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="XmlWriter writer = XmlWriter.Create(sw, settings)", span="953-953"];
m43_355 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", span="946-946"];
m43_16 [cluster="Newtonsoft.Json.Linq.JRaw.CloneToken()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Linq.JRaw.CloneToken()", span="48-48"];
m43_564 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", span="1727-1727"];
m43_567 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs", label="string xml = GetIndentedInnerXml(node)", span="1734-1734"];
m43_566 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs", label="XmlNode node = JsonConvert.DeserializeXmlNode(json, ''root'')", span="1733-1733"];
m43_568 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id='''''''' />'', xml)", span="1736-1737"];
m43_570 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''''''\r\n}'', newJson)", span="1741-1743"];
m43_565 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n  ''''$id'''': null\r\n}''", span="1729-1731"];
m43_569 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs", label="string newJson = JsonConvert.SerializeXmlNode(node, Formatting.Indented, true)", span="1739-1739"];
m43_571 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", span="1727-1727"];
m43_313 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", span="816-816"];
m43_325 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs", label="StringBuilder builder = new StringBuilder()", span="818-818"];
m43_326 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs", label="var writer = XmlWriter.Create(new Utf8StringWriter(builder), new XmlWriterSettings { Indent = indent })", span="819-819"];
m43_327 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs", label="doc.Save(writer)", span="821-821"];
m43_328 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs", label="return builder.ToString();", span="823-823"];
m43_329 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", span="816-816"];
m43_474 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", span="1366-1366"];
m43_477 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs", label="string json = SerializeXmlNode(doc)", span="1372-1372"];
m43_475 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="1368-1368"];
m43_476 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(@''<name>O''''Connor</name>'')", span="1370-1370"];
m43_478 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''name'''': ''''O\''''Connor''''\r\n}'', json)", span="1373-1375"];
m43_479 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", span="1366-1366"];
m43_658 [cluster="System.IO.MemoryStream.MemoryStream()", file="XmlNodeConverterTest.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m43_587 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", span="1855-1855"];
m43_595 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''<product>\r\n  <Name>Apple</Name>\r\n  <ExpiryDate>2008-12-28T00:00:00Z</ExpiryDate>\r\n  <Price>3.99</Price>\r\n  <Sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>Small</Sizes>\r\n</product>'', IndentXml(xmlProduct.InnerXml))", span="1868-1873"];
m43_594 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="XmlDocument xmlProduct = JsonConvert.DeserializeXmlNode(output, ''product'', true)", span="1866-1866"];
m43_596 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="string output2 = JsonConvert.SerializeXmlNode(xmlProduct.DocumentElement, Formatting.Indented)", span="1875-1875"];
m43_597 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''product'''': {\r\n    ''''Name'''': ''''Apple'''',\r\n    ''''ExpiryDate'''': ''''2008-12-28T00:00:00Z'''',\r\n    ''''Price'''': ''''3.99'''',\r\n    ''''Sizes'''': [\r\n      ''''Small''''\r\n    ]\r\n  }\r\n}'', output2)", span="1877-1886"];
m43_593 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="string output = JsonConvert.SerializeObject(product, new IsoDateTimeConverter())", span="1864-1864"];
m43_588 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="Product product = new Product()", span="1857-1857"];
m43_592 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="product.Sizes = new string[] { ''Small'' }", span="1862-1862"];
m43_589 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="product.Name = ''Apple''", span="1859-1859"];
m43_590 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="product.ExpiryDate = new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc)", span="1860-1860"];
m43_591 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="product.Price = 3.99M", span="1861-1861"];
m43_598 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", span="1855-1855"];
m43_48 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", span="989-989"];
m43_809 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", span="2812-2812"];
m43_813 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''null'', json)", span="2820-2820"];
m43_810 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="XmlNodeConverterTest.cs", label="string xmlString = @''<myemptynode />''", span="2814-2814"];
m43_811 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="XmlNodeConverterTest.cs", label="var xml = XElement.Parse(xmlString)", span="2816-2816"];
m43_812 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeXNode(xml, Formatting.Indented, true)", span="2818-2818"];
m43_814 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", span="2812-2812"];
m43_281 [cluster="Unk.AppendChild", file="XmlNodeConverterTest.cs", label="Entry Unk.AppendChild", span=""];
m43_20 [cluster="Unk.MoveToContent", file="XmlNodeConverterTest.cs", label="Entry Unk.MoveToContent", span=""];
m43_357 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", span="962-962"];
m43_361 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="string jsonText = SerializeXmlNode(doc)", span="979-979"];
m43_362 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="981-981"];
m43_359 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="976-976"];
m43_360 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(xml)", span="977-977"];
m43_363 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="983-983"];
m43_358 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n			<root>\r\n			  <person id=''''1''''>\r\n	  			<name>Alan</name>\r\n		  		<url>http://www.google.com</url>\r\n			  </person>\r\n			  <person id=''''2''''>\r\n			  	<name>Louis</name>\r\n				  <url>http://www.yahoo.com</url>\r\n			  </person>\r\n			</root>''", span="964-974"];
m43_364 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", span="962-962"];
m43_401 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", span="1085-1085"];
m43_405 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="string arrayJsonText = SerializeXmlNode(arrayDoc)", span="1098-1098"];
m43_411 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayJsonText = SerializeXmlNode(arrayDoc)", span="1125-1125"];
m43_417 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayJsonText = SerializeXmlNode(arrayDoc)", span="1152-1152"];
m43_403 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="XmlDocument arrayDoc = new XmlDocument()", span="1095-1095"];
m43_404 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc.LoadXml(arrayXml)", span="1096-1096"];
m43_406 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="string expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': [\r\n        ''''Admin''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="1099-1110"];
m43_407 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expected, arrayJsonText)", span="1111-1111"];
m43_409 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc = new XmlDocument()", span="1122-1122"];
m43_410 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc.LoadXml(arrayXml)", span="1123-1123"];
m43_412 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': [\r\n        ''''Admin1'''',\r\n        ''''Admin2''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="1126-1138"];
m43_413 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expected, arrayJsonText)", span="1139-1139"];
m43_415 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc = new XmlDocument()", span="1149-1149"];
m43_416 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc.LoadXml(arrayXml)", span="1150-1150"];
m43_418 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': ''''Admin1''''\r\n    }\r\n  }\r\n}''", span="1153-1162"];
m43_419 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expected, arrayJsonText)", span="1163-1163"];
m43_402 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="string arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true''''>Admin</role>\r\n			  </person>\r\n			</root>''", span="1087-1093"];
m43_408 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true''''>Admin1</role>\r\n				  <role json:Array=''''true''''>Admin2</role>\r\n			  </person>\r\n			</root>''", span="1113-1120"];
m43_414 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''false''''>Admin1</role>\r\n			  </person>\r\n			</root>''", span="1141-1147"];
m43_420 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", span="1085-1085"];
m43_456 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", span="1271-1271"];
m43_459 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''<myRoot>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes json:Array=''''true''''>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newDoc.InnerXml))", span="1292-1304"];
m43_461 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''<myRoot>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes json:Array=''''true''''>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newXDoc.ToString(SaveOptions.DisableFormatting)))", span="1310-1322"];
m43_458 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'', true)", span="1290-1290"];
m43_460 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs", label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'', true)", span="1308-1308"];
m43_462 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs", label="string newJson = JsonConvert.SerializeXmlNode(newDoc, Formatting.Indented, true)", span="1326-1326"];
m43_463 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(json, newJson)", span="1327-1327"];
m43_457 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ]\r\n  ]\r\n}''", span="1273-1287"];
m43_464 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", span="1271-1271"];
m43_45 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78"];
m43_166 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="817-817"];
m43_580 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", span="1768-1768"];
m43_582 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { DeserializeXmlNode(json); },\r\n                ''XmlNodeConverter cannot convert JSON with an empty property name to XML. Path '8452309520V2.', line 3, position 9.'')", span="1849-1851"];
m43_581 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n  ''''8452309520V2'''': {\r\n    '''''''': {\r\n      ''''CLIENT'''': {\r\n        ''''ID_EXPIRATION_1'''': {\r\n          ''''VALUE'''': ''''12/12/2000'''',\r\n          ''''DATATYPE'''': ''''D'''',\r\n          ''''MSG'''': ''''Missing Identification Exp. Date 1''''\r\n        },\r\n        ''''ID_ISSUEDATE_1'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''D'''',\r\n          ''''MSG'''': ''''Missing Identification Issue Date 1''''\r\n        }\r\n      }\r\n    },\r\n    ''''457463534534'''': {\r\n      ''''ACCOUNT'''': {\r\n        ''''FUNDING_SOURCE'''': {\r\n          ''''VALUE'''': ''''FS0'''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Source of Funds''''\r\n        }\r\n      }\r\n    }\r\n  }\r\n}{\r\n  ''''34534634535345'''': {\r\n    '''''''': {\r\n      ''''CLIENT'''': {\r\n        ''''ID_NUMBER_1'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''S'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        },\r\n        ''''ID_EXPIRATION_1'''': {\r\n          ''''VALUE'''': ''''12/12/2000'''',\r\n          ''''DATATYPE'''': ''''D'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        },\r\n        ''''WALK_IN'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Walk in''''\r\n        },\r\n        ''''PERSONAL_MEETING'''': {\r\n          ''''VALUE'''': ''''PM1'''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Met Client in Person''''\r\n        },\r\n        ''''ID_ISSUEDATE_1'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''D'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        },\r\n        ''''PHOTO_ID'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        },\r\n        ''''ID_TYPE_1'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        }\r\n      }\r\n    },\r\n    ''''45635624523'''': {\r\n      ''''ACCOUNT'''': {\r\n        ''''FUNDING_SOURCE'''': {\r\n          ''''VALUE'''': ''''FS1'''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Source of Funds''''\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="1770-1847"];
m43_583 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", span="1768-1768"];
m43_490 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", span="1409-1409"];
m43_494 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="string jsonText = SerializeXmlNode(doc)", span="1426-1426"];
m43_497 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="1472-1472"];
m43_492 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="1423-1423"];
m43_493 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(xml)", span="1424-1424"];
m43_495 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="jsonText = JObject.Parse(jsonText).ToString()", span="1449-1449"];
m43_496 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''root'''': {\r\n    ''''person'''': [\r\n      {\r\n        ''''@id'''': ''''1'''',\r\n        ''''name'''': ''''Alan'''',\r\n        ''''url'''': ''''http://www.google.com''''\r\n      },\r\n      {\r\n        ''''@id'''': ''''2'''',\r\n        ''''name'''': ''''Louis'''',\r\n        ''''url'''': ''''http://www.yahoo.com''''\r\n      }\r\n    ]\r\n  }\r\n}'', jsonText)", span="1451-1470"];
m43_498 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="1474-1474"];
m43_491 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n			<root>\r\n			  <person id=''''1''''>\r\n				<name>Alan</name>\r\n				<url>http://www.google.com</url>\r\n			  </person>\r\n			  <person id=''''2''''>\r\n				<name>Louis</name>\r\n				<url>http://www.yahoo.com</url>\r\n			  </person>\r\n			</root>''", span="1411-1421"];
m43_499 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", span="1409-1409"];
m43_685 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", span="2329-2329"];
m43_692 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="XmlNode node = JsonConvert.DeserializeXmlNode(json)", span="2528-2528"];
m43_689 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeXmlNode(document, Formatting.Indented)", span="2367-2367"];
m43_691 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expectedJson, json)", span="2526-2526"];
m43_693 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="StringWriter sw = new StringWriter()", span="2530-2530"];
m43_695 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="node.WriteTo(writer)", span="2536-2536"];
m43_687 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="XmlDocument document = new XmlDocument()", span="2364-2364"];
m43_688 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="document.LoadXml(xaml)", span="2365-2365"];
m43_690 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="string expectedJson = @''{\r\n  ''''Grid'''': {\r\n    ''''@xmlns'''': ''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''',\r\n    ''''@xmlns:x'''': ''''http://schemas.microsoft.com/winfx/2006/xaml'''',\r\n    ''''@xmlns:toolkit'''': ''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''',\r\n    ''''@Style'''': ''''{StaticResource trimFormGrid}'''',\r\n    ''''@x:Name'''': ''''TrimObjectForm'''',\r\n    ''''Grid.ColumnDefinitions'''': {\r\n      ''''ColumnDefinition'''': [\r\n        {\r\n          ''''@Width'''': ''''63*''''\r\n        },\r\n        {\r\n          ''''@Width'''': ''''320*''''\r\n        }\r\n      ]\r\n    },\r\n    ''''Grid.RowDefinitions'''': {\r\n      ''''@xmlns'''': '''''''',\r\n      ''''RowDefinition'''': [\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null\r\n      ]\r\n    },\r\n    ''''TextBox'''': [\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordTypedTitle'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''0'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordExternalReference'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''1'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordAuthor'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''4'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordContainer'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''5'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordIsEnclosed'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''6'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordAssignee'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''7'''',\r\n        ''''@xmlns'''': ''''''''\r\n      }\r\n    ],\r\n    ''''toolkit:DatePicker'''': [\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_DP}'''',\r\n        ''''@Value'''': ''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordDateCreated'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''2''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_DP}'''',\r\n        ''''@Value'''': ''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordDateDue'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''3''''\r\n      }\r\n    ],\r\n    ''''TextBlock'''': [\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Title (Free Text Part)'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''0'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''External ID'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''1'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Date Created'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''2'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Date Due'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''3'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Author'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''4'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Container'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''5'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Enclosed?'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''6'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Assignee'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''7'''',\r\n        ''''@xmlns'''': ''''''''\r\n      }\r\n    ]\r\n  }\r\n}''", span="2369-2524"];
m43_694 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="XmlWriter writer = XmlWriter.Create(sw, new XmlWriterSettings\r\n            {\r\n                Indent = true,\r\n                OmitXmlDeclaration = true\r\n            })", span="2531-2535"];
m43_697 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="string xaml2 = sw.ToString()", span="2539-2539"];
m43_696 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="writer.Flush()", span="2537-2537"];
m43_699 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expectedXaml, xaml2)", span="2574-2574"];
m43_686 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="string xaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="2331-2362"];
m43_698 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="string expectedXaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="2541-2572"];
m43_700 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", span="2329-2329"];
m43_502 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", span="1478-1478"];
m43_504 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = (XmlDocument)DeserializeXmlNode(json)", span="1501-1501"];
m43_503 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n        ''''?xml'''': {\r\n          ''''@version'''': ''''1.0'''',\r\n          ''''@standalone'''': ''''no''''\r\n        },\r\n        ''''root'''': {\r\n          ''''person'''': [\r\n            {\r\n              ''''@id'''': ''''1'''',\r\n              ''''name'''': ''''Alan'''',\r\n              ''''url'''': ''''http://www.google.com''''\r\n            },\r\n            {\r\n              ''''@id'''': ''''2'''',\r\n              ''''name'''': ''''Louis'''',\r\n              ''''url'''': ''''http://www.yahoo.com''''\r\n            }\r\n          ]\r\n        }\r\n      }''", span="1480-1499"];
m43_505 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' standalone=''''no''''?><root><person id=''''1''''><name>Alan</name><url>http://www.google.com</url></person><person id=''''2''''><name>Louis</name><url>http://www.yahoo.com</url></person></root>'', doc.InnerXml)", span="1514-1514"];
m43_506 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", span="1478-1478"];
m43_466 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", span="1141-1141"];
m43_724 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NullableXml.NullableXml()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NullableXml.NullableXml()", span="2615-2615"];
m43_101 [cluster="Unk.Equals", file="XmlNodeConverterTest.cs", label="Entry Unk.Equals", span=""];
m43_113 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", span="219-219"];
m43_116 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="225-225"];
m43_117 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''result'''': {\r\n    ''''@xp_0:end'''': ''''2014-08-15 13:12:11.9184'''',\r\n    ''''@xp_0:start'''': ''''2014-08-15 13:11:49.3140'''',\r\n    ''''@xp_0:time_diff'''': ''''22604.3836'''',\r\n    ''''@xmlns:xp_0'''': ''''Test1'''',\r\n    ''''@p2:end'''': ''''2014-08-15 13:13:49.5522'''',\r\n    ''''@p2:start'''': ''''2014-08-15 13:13:49.0268'''',\r\n    ''''@p2:time_diff'''': ''''525.4646'''',\r\n    ''''@xmlns:p2'''': ''''Test2''''\r\n  }\r\n}'', json)", span="227-238"];
m43_119 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(xml, doc.ToString())", span="242-242"];
m43_115 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", file="XmlNodeConverterTest.cs", label="XDocument d = XDocument.Parse(xml)", span="223-223"];
m43_118 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", file="XmlNodeConverterTest.cs", label="XDocument doc = JsonConvert.DeserializeObject<XDocument>(json)", span="240-240"];
m43_114 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", file="XmlNodeConverterTest.cs", label="string xml = @''<result xp_0:end=''''2014-08-15 13:12:11.9184'''' xp_0:start=''''2014-08-15 13:11:49.3140'''' xp_0:time_diff=''''22604.3836'''' xmlns:xp_0=''''Test1'''' p2:end=''''2014-08-15 13:13:49.5522'''' p2:start=''''2014-08-15 13:13:49.0268'''' p2:time_diff=''''525.4646'''' xmlns:p2=''''Test2'''' />''", span="221-221"];
m43_120 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", span="219-219"];
m43_167 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", span="386-386"];
m43_174 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="string json2 = JsonConvert.SerializeObject(doc1, Formatting.Indented)", span="402-402"];
m43_172 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="var xml = doc1.ToString()", span="399-399"];
m43_171 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="XDocument doc1 = JsonConvert.DeserializeObject<XDocument>(json, new JsonSerializerSettings\r\n            {\r\n                Converters = { new XmlNodeConverter() },\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            })", span="393-397"];
m43_173 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''<Date>2012-12-12T12:44:01+12:34</Date>'', xml)", span="400-400"];
m43_175 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="DateTimeOffsetContainer x2 = JsonConvert.DeserializeObject<DateTimeOffsetContainer>(json2)", span="404-404"];
m43_176 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(x.Date, x2.Date)", span="406-406"];
m43_170 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="var json = JsonConvert.SerializeObject(x, Formatting.Indented)", span="391-391"];
m43_169 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="var x = new DateTimeOffsetContainer { Date = d }", span="389-389"];
m43_168 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="DateTimeOffset d = new DateTimeOffset(2012, 12, 12, 12, 44, 1, TimeSpan.FromHours(12).Add(TimeSpan.FromMinutes(34)))", span="388-388"];
m43_177 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", span="386-386"];
m43_240 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", span="569-569"];
m43_241 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="571-571"];
m43_244 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XmlDocument document = new XmlDocument()", span="583-583"];
m43_245 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="document.LoadXml(xml)", span="584-584"];
m43_248 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="jsonText = JsonConvert.SerializeXmlNode(attribute)", span="590-590"];
m43_255 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="jsonText = JsonConvert.SerializeXmlNode(instruction)", span="606-606"];
m43_258 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="jsonText = JsonConvert.SerializeXmlNode(cDataSection)", span="613-613"];
m43_271 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="jsonText = JsonConvert.SerializeXmlNode(element, Formatting.Indented)", span="634-634"];
m43_272 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''xs:Choice'''': {\r\n    ''''@msdata:IsDataSet'''': '''''''',\r\n    ''''@xmlns:xs'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''?xml-stylesheet'''': ''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',\r\n    ''''#cdata-section'''': ''''<Kiwi>true</Kiwi>''''\r\n  }\r\n}'', jsonText)", span="636-644"];
m43_242 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="string jsonText", span="572-572"];
m43_254 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XmlProcessingInstruction instruction = doc.CreateProcessingInstruction(''xml-stylesheet'', @''href=''''classic.xsl'''' type=''''text/xml'''''')", span="604-604"];
m43_257 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XmlCDataSection cDataSection = doc.CreateCDataSection(''<Kiwi>true</Kiwi>'')", span="611-611"];
m43_260 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XmlElement element = doc.CreateElement(''xs'', ''Choice'', ''http://www.w3.org/2001/XMLSchema'')", span="618-618"];
m43_261 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="element.SetAttributeNode(doc.CreateAttribute(''msdata'', ''IsDataSet'', ''urn:schemas-microsoft-com:xml-msdata''))", span="619-619"];
m43_262 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XmlAttribute aa = doc.CreateAttribute(@''xmlns'', ''xs'', ''http://www.w3.org/2000/xmlns/'')", span="621-621"];
m43_265 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="aa = doc.CreateAttribute(@''xmlns'', ''msdata'', ''http://www.w3.org/2000/xmlns/'')", span="625-625"];
m43_270 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="doc.AppendChild(element)", span="632-632"];
m43_243 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<xs:schema xs:id=''''SomeID'''' \r\n	xmlns='''''''' \r\n	xmlns:xs=''''http://www.w3.org/2001/XMLSchema'''' \r\n	xmlns:msdata=''''urn:schemas-microsoft-com:xml-msdata''''>\r\n	<xs:element name=''''MyDataSet'''' msdata:IsDataSet=''''true''''>\r\n	</xs:element>\r\n</xs:schema>''", span="574-581"];
m43_246 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XmlAttribute attribute = document.DocumentElement.ChildNodes[0].Attributes[''IsDataSet'', ''urn:schemas-microsoft-com:xml-msdata'']", span="587-587"];
m43_249 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''@msdata:IsDataSet'''':''''true''''}'', jsonText)", span="592-592"];
m43_253 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''@msdata:IsDataSet'''':''''true''''}'', jsonText)", span="600-600"];
m43_256 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''?xml-stylesheet'''':''''href=\''''classic.xsl\'''' type=\''''text/xml\''''''''}'', jsonText)", span="608-608"];
m43_259 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''#cdata-section'''':''''<Kiwi>true</Kiwi>''''}'', jsonText)", span="615-615"];
m43_247 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="attribute.Value = ''true''", span="588-588"];
m43_268 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="element.AppendChild(instruction)", span="629-629"];
m43_269 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="element.AppendChild(cDataSection)", span="630-630"];
m43_264 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="element.SetAttributeNode(aa)", span="623-623"];
m43_267 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="element.SetAttributeNode(aa)", span="627-627"];
m43_263 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="aa.Value = ''http://www.w3.org/2001/XMLSchema''", span="622-622"];
m43_266 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="aa.Value = ''urn:schemas-microsoft-com:xml-msdata''", span="626-626"];
m43_250 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XDocument d = XDocument.Parse(xml)", span="595-595"];
m43_252 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="jsonText = JsonConvert.SerializeXNode(a)", span="598-598"];
m43_251 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XAttribute a = d.Root.Element(''{http://www.w3.org/2001/XMLSchema}element'').Attribute(''{urn:schemas-microsoft-com:xml-msdata}IsDataSet'')", span="596-596"];
m43_273 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", span="569-569"];
m43_15 [cluster="Newtonsoft.Json.Linq.JRaw.CloneToken()", file="XmlNodeConverterTest.cs", label="return new JRaw(this);", span="50-50"];
m43_21 [cluster="Unk.ReadFrom", file="XmlNodeConverterTest.cs", label="Entry Unk.ReadFrom", span=""];
m43_143 [cluster="Unk.>", file="XmlNodeConverterTest.cs", label="Entry Unk.>", span=""];
m43_374 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", span="1033-1033"];
m43_376 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="1037-1037"];
m43_375 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs", label="string jsonText = @''{''''?xml'''':{''''@version'''':''''1.0'''',''''@standalone'''':''''no''''},''''root'''':{''''person'''':[{''''@id'''':''''1'''',''''Float'''':2.5,''''Integer'''':99},{''''Boolean'''':true,''''@id'''':''''2'''',''''date'''':''''\/Date(954374400000)\/''''}]}}''", span="1035-1035"];
m43_377 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs", label="string expected = @''<?xml version=''''1.0'''' standalone=''''no''''?><root><person id=''''1''''><Float>2.5</Float><Integer>99</Integer></person><person id=''''2''''><Boolean>true</Boolean><date>2000-03-30T00:00:00Z</date></person></root>''", span="1039-1039"];
m43_378 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, newDoc.InnerXml)", span="1041-1041"];
m43_379 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", span="1033-1033"];
m43_428 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", span="1179-1179"];
m43_430 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", color=green, community=0, file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeXNode(json); },\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName. Path 'photos', line 1, position 26.'')", prediction=70, span="1183-1185"];
m43_429 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="XmlNodeConverterTest.cs", label="string json = @''{''''count'''': 773840,''''photos'''': null}''", span="1181-1181"];
m43_431 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", span="1179-1179"];
m43_530 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="621-621"];
m43_380 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", span="1045-1045"];
m43_381 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''[1]''); }, ''XmlNodeConverter can only convert JSON that begins with an object.'')", span="1047-1047"];
m43_382 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", span="1045-1045"];
m43_706 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", span="2589-2589"];
m43_711 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="var xml1 = new XmlDocument()", span="2605-2605"];
m43_712 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="xml1.LoadXml(xmlString)", span="2606-2606"];
m43_709 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="var json1 = JsonConvert.SerializeObject(xml)", span="2600-2600"];
m43_713 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="var json2 = JsonConvert.SerializeObject(xml1)", span="2608-2608"];
m43_710 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''root'''':{''''@xmlns'''':''''http://www.example.com/ns'''',''''a'''':null,''''bns:b'''':{''''@xmlns:bns'''':''''http://www.example.com/ns''''},''''c'''':null}}'', json1)", span="2602-2602"];
m43_707 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="var xmlString = @''<root xmlns=''''http://www.example.com/ns''''>\r\n  <a/>\r\n  <bns:b xmlns:bns=''''http://www.example.com/ns''''/>\r\n  <c/>\r\n</root>''", span="2591-2595"];
m43_708 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="var xml = XElement.Parse(xmlString)", span="2598-2598"];
m43_714 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''root'''':{''''@xmlns'''':''''http://www.example.com/ns'''',''''a'''':null,''''bns:b'''':{''''@xmlns:bns'''':''''http://www.example.com/ns''''},''''c'''':null}}'', json2)", span="2610-2610"];
m43_715 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", span="2589-2589"];
m43_775 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc()", span="2758-2758"];
m43_778 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''2014-01-23T00:00:00Z'', dxml.Root.Element(''CreatedDate'').Value)", span="2762-2762"];
m43_777 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc()", file="XmlNodeConverterTest.cs", label="var dxml = JsonConvert.DeserializeXNode(json, ''root'')", span="2761-2761"];
m43_779 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(''DateTimeToXml_Utc: '' + dxml.Root.Element(''CreatedDate'').Value)", span="2764-2764"];
m43_776 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc()", file="XmlNodeConverterTest.cs", label="string json = @''{''''CreatedDate'''': ''''2014-01-23T00:00:00Z''''}''", span="2760-2760"];
m43_780 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc()", span="2758-2758"];
m43_17 [cluster="Unk.Load", file="XmlNodeConverterTest.cs", label="Newtonsoft.Json.Linq.JRaw", span=""];
m43_501 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422"];
m43_50 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1419-1419"];
m43_49 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530"];
m43_647 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1886-1886"];
m43_645 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="443-443"];
m43_109 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Foo.Foo()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Foo.Foo()", span="201-201"];
m43_435 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", span="1190-1190"];
m43_437 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="1195-1195"];
m43_440 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<myRoot><count>773840</count><photos>773840</photos></myRoot>'', newXDoc.ToString(SaveOptions.DisableFormatting))", span="1203-1203"];
m43_438 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<myRoot><count>773840</count><photos>773840</photos></myRoot>'', newDoc.InnerXml)", span="1197-1197"];
m43_436 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs", label="string json = @''{''''count'''': 773840,''''photos'''': 773840}''", span="1192-1192"];
m43_439 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs", label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="1201-1201"];
m43_441 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", span="1190-1190"];
m43_77 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNonKnownDollarProperty()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNonKnownDollarProperty()", span="163-163"];
m43_79 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNonKnownDollarProperty()", file="XmlNodeConverterTest.cs", label="var doc = JsonConvert.DeserializeXNode(json1)", span="167-167"];
m43_78 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNonKnownDollarProperty()", file="XmlNodeConverterTest.cs", label="string json1 = @''{''''$JELLY'''':''''test''''}''", span="165-165"];
m43_80 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNonKnownDollarProperty()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(doc.ToString())", span="169-169"];
m43_81 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNonKnownDollarProperty()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<_x0024_JELLY>test</_x0024_JELLY>'', doc.ToString())", span="171-171"];
m43_82 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNonKnownDollarProperty()", file="XmlNodeConverterTest.cs", label="var json2 = JsonConvert.SerializeXNode(doc)", span="173-173"];
m43_83 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNonKnownDollarProperty()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(json1, json2)", span="175-175"];
m43_84 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNonKnownDollarProperty()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNonKnownDollarProperty()", span="163-163"];
m43_790 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", span="2780-2780"];
m43_793 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''2014-01-23T00:00:00.1234567'', dxml.Root.Element(''CreatedDate'').Value)", span="2784-2784"];
m43_792 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", file="XmlNodeConverterTest.cs", label="var dxml = JsonConvert.DeserializeXNode(json, ''root'')", span="2783-2783"];
m43_794 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(''DateTimeToXml_Unspecified: '' + dxml.Root.Element(''CreatedDate'').Value)", span="2786-2786"];
m43_791 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", file="XmlNodeConverterTest.cs", label="string json = @''{''''CreatedDate'''': ''''2014-01-23T00:00:00.1234567''''}''", span="2782-2782"];
m43_795 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", span="2780-2780"];
m43_152 [cluster="Unk.Nodes", file="XmlNodeConverterTest.cs", label="Entry Unk.Nodes", span=""];
m43_455 [cluster="System.Console.WriteLine(string)", file="XmlNodeConverterTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m43_145 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", span="316-316"];
m43_148 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="XmlNodeConverterTest.cs", label="var result = xmlDocument.Root.Nodes().ToArray()", span="328-328"];
m43_146 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="XmlNodeConverterTest.cs", label="string xml = @''<payload>\r\n    <Country>6</Country>\r\n    <FinancialTransactionApprovalRequestUID>79</FinancialTransactionApprovalRequestUID>\r\n    <TransactionStatus>Approved</TransactionStatus>\r\n    <StatusChangeComment></StatusChangeComment>\r\n    <RequestedBy>Someone</RequestedBy>\r\n</payload>''", span="318-324"];
m43_149 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="XmlNodeConverterTest.cs", label="var json = JsonConvert.SerializeObject(result, Formatting.Indented)", span="330-330"];
m43_147 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="XmlNodeConverterTest.cs", label="var xmlDocument = XDocument.Parse(xml)", span="326-326"];
m43_150 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Country'''': ''''6''''\r\n  },\r\n  {\r\n    ''''FinancialTransactionApprovalRequestUID'''': ''''79''''\r\n  },\r\n  {\r\n    ''''TransactionStatus'''': ''''Approved''''\r\n  },\r\n  {\r\n    ''''StatusChangeComment'''': ''''''''\r\n  },\r\n  {\r\n    ''''RequestedBy'''': ''''Someone''''\r\n  }\r\n]'', json)", span="332-348"];
m43_151 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", span="316-316"];
m43_63 [cluster="XmlWriterSettings.cstr", file="XmlNodeConverterTest.cs", label="Entry XmlWriterSettings.cstr", span=""];
m43_644 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="XmlNodeConverterTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m43_23 [cluster="Unk.AreEqual", file="XmlNodeConverterTest.cs", label="Entry Unk.AreEqual", span=""];
m43_190 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", span="427-427"];
m43_191 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="429-429"];
m43_195 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="doc = new XmlDocument()", span="435-435"];
m43_192 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(''<root />'')", span="430-430"];
m43_196 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(''<root></root>'')", span="436-436"];
m43_193 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeXmlNode(doc, Formatting.Indented, true)", span="432-432"];
m43_197 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="json = JsonConvert.SerializeXmlNode(doc, Formatting.Indented, true)", span="438-438"];
m43_194 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''null'', json)", span="433-433"];
m43_198 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@'''''''''''', json)", span="439-439"];
m43_201 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''null'', json)", span="444-444"];
m43_204 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@'''''''''''', json)", span="449-449"];
m43_199 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="XDocument doc1 = XDocument.Parse(''<root />'')", span="441-441"];
m43_202 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="doc1 = XDocument.Parse(''<root></root>'')", span="446-446"];
m43_200 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="json = JsonConvert.SerializeXNode(doc1, Formatting.Indented, true)", span="443-443"];
m43_203 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="json = JsonConvert.SerializeXNode(doc1, Formatting.Indented, true)", span="448-448"];
m43_205 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", span="427-427"];
m43_102 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", span="207-207"];
m43_105 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''Bar'''':null}'', json)", span="212-212"];
m43_104 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeObject(foo)", span="210-210"];
m43_106 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="XmlNodeConverterTest.cs", label="Foo foo2 = JsonConvert.DeserializeObject<Foo>(json)", span="213-213"];
m43_103 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="XmlNodeConverterTest.cs", label="Foo foo = new Foo { Bar = null }", span="209-209"];
m43_107 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="XmlNodeConverterTest.cs", label="Assert.IsNull(foo2.Bar)", span="215-215"];
m43_108 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", span="207-207"];
m43_788 [cluster="System.DateTime.Parse(string)", file="XmlNodeConverterTest.cs", label="Entry System.DateTime.Parse(string)", span="0-0"];
m43_51 [cluster="Unk.ToString", file="XmlNodeConverterTest.cs", label="Entry Unk.ToString", span=""];
m43_465 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", span="1063-1063"];
m43_18 [cluster="XAttribute.cstr", file="XmlNodeConverterTest.cs", label="Entry XAttribute.cstr", span=""];
m43_672 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="XmlNodeConverterTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m43_716 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", span="2623-2623"];
m43_722 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(xml.notNull.ToString(), w2.notNull.ToString())", span="2631-2631"];
m43_720 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(xml.Name, w2.Name)", span="2629-2629"];
m43_721 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(xml.isNull, w2.isNull)", span="2630-2630"];
m43_717 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="var xml = new NullableXml { Name = ''test'', notNull = XElement.Parse(''<root>test</root>'') }", span="2625-2625"];
m43_719 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="var w2 = JsonConvert.DeserializeObject<NullableXml>(json)", span="2628-2628"];
m43_718 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="var json = JsonConvert.SerializeObject(xml)", span="2626-2626"];
m43_723 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", span="2623-2623"];
m43_85 [cluster="Unk.WriteLine", file="XmlNodeConverterTest.cs", label="Entry Unk.WriteLine", span=""];
m43_61 [cluster="Unk.Create", file="XmlNodeConverterTest.cs", label="Entry Unk.Create", span=""];
m43_4 [cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", span="37-37"];
m43_6 [cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", file="XmlNodeConverterTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="40-40"];
m43_7 [cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", file="XmlNodeConverterTest.cs", label="jsonWriter.WriteToken(reader)", span="42-42"];
m43_5 [cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", file="XmlNodeConverterTest.cs", label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="39-39"];
m43_9 [cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", span="37-37"];
m43_8 [cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", file="XmlNodeConverterTest.cs", label="return new JRaw(sw.ToString());", span="44-44"];
m43_11 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="109-109"];
m43_14 [cluster="Newtonsoft.Json.Linq.JRaw.CloneToken()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JRaw.CloneToken()", span="48-48"];
m43_454 [cluster="Unk.IndentXml", file="XmlNodeConverterTest.cs", label="Entry Unk.IndentXml", span=""];
m43_823 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", span="2837-2837"];
m43_826 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="var json = JsonConvert.SerializeObject(original)", span="2842-2842"];
m43_825 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', original.ToString())", span="2840-2840"];
m43_829 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', deserialized.ToString())", span="2846-2846"];
m43_824 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="var original = new XElement(''{http://example.com}MyElement'')", span="2839-2839"];
m43_827 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''MyElement'''':{''''@xmlns'''':''''http://example.com''''}}'', json)", span="2843-2843"];
m43_828 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="var deserialized = JsonConvert.DeserializeObject<XElement>(json)", span="2845-2845"];
m43_830 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", span="2837-2837"];
m43_178 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="XmlNodeConverterTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m43_442 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", span="1047-1047"];
m43_123 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="321-321"];
m43_383 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1047-1047"];
m43_229 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="506-506"];
m43_389 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1054-1054"];
m43_425 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1172-1172"];
m43_432 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1184-1184"];
m43_759 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="2728-2728"];
m43_230 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="JsonConvert.DeserializeXmlNode(json)", span="506-506"];
m43_231 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="506-506"];
m43_391 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1054-1054"];
m43_390 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''{Prop1:1,Prop2:2}'')", span="1054-1054"];
m43_426 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="JsonConvert.DeserializeXmlNode(json)", span="1172-1172"];
m43_427 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1172-1172"];
m43_433 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="JsonConvert.DeserializeXNode(json)", span="1184-1184"];
m43_434 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1184-1184"];
m43_760 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="JsonConvert.DeserializeXmlNode(json)", span="2728-2728"];
m43_761 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="2728-2728"];
m43_561 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1722-1722"];
m43_584 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1850-1850"];
m43_384 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''[1]'')", span="1047-1047"];
m43_562 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="JsonConvert.DeserializeXmlNode(json, ''root'')", span="1722-1722"];
m43_563 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1722-1722"];
m43_585 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="DeserializeXmlNode(json)", span="1850-1850"];
m43_586 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1850-1850"];
m43_385 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1047-1047"];
m43_701 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", span="2578-2578"];
m43_703 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs", label="XmlDocument xmldoc = JsonConvert.DeserializeXmlNode(json)", span="2582-2582"];
m43_702 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs", label="string json = @''{''''item'''': {''''@action'''': ''''update'''', ''''@itemid'''': ''''1'''', ''''elements'''': [{''''@action'''': ''''none'''', ''''@id'''': ''''2''''},{''''@action'''': ''''none'''', ''''@id'''': ''''3''''}],''''@description'''': ''''temp''''}}''", span="2580-2580"];
m43_704 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<item action=''''update'''' itemid=''''1'''' description=''''temp''''><elements action=''''none'''' id=''''2'''' /><elements action=''''none'''' id=''''3'''' /></item>'', xmldoc.InnerXml)", span="2584-2584"];
m43_705 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", span="2578-2578"];
m43_636 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", span="2042-2042"];
m43_642 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<root><Int16>1</Int16><Float>2</Float><Int32>3</Int32></root>'', value.InnerXml)", span="2051-2051"];
m43_639 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings { Converters = { new XmlNodeConverter() { DeserializeRootElementName = ''root'' } } })", span="2046-2046"];
m43_641 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="var value = (XmlDocument)serializer.Deserialize(reader, typeof(XmlDocument))", span="2049-2049"];
m43_638 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="var obj = JObject.FromObject(dict)", span="2045-2045"];
m43_640 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="var reader = obj.CreateReader()", span="2047-2047"];
m43_637 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="var dict = new Dictionary<string, object> { { ''Int16'', (short)1 }, { ''Float'', 2f }, { ''Int32'', 3 } }", span="2044-2044"];
m43_643 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", span="2042-2042"];
m43_848 [cluster="XDocument.cstr", file="XmlNodeConverterTest.cs", label="Entry XDocument.cstr", span=""];
m43_514 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", span="1562-1562"];
m43_520 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="XmlNode node = DeserializeXmlNode(json, ''root'')", span="1582-1582"];
m43_521 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="string xml = GetIndentedInnerXml(node)", span="1583-1583"];
m43_524 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="string xmlJson = SerializeXmlNode(node)", span="1594-1594"];
m43_518 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeObject(circularDictionary, Formatting.Indented,\r\n                new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="1568-1569"];
m43_519 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''other'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''blah'''': null\r\n  },\r\n  ''''self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'', json)", span="1571-1580"];
m43_522 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="string expected = @''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id=''''1''''>\r\n  <other json:id=''''2''''>\r\n    <blah />\r\n  </other>\r\n  <self json:ref=''''1'''' />\r\n</root>''", span="1584-1590"];
m43_523 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expected, xml)", span="1592-1592"];
m43_525 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="string expectedXmlJson = @''{\r\n  ''''root'''': {\r\n    ''''$id'''': ''''1'''',\r\n    ''''other'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''blah'''': null\r\n    },\r\n    ''''self'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n}''", span="1595-1606"];
m43_526 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expectedXmlJson, xmlJson)", span="1608-1608"];
m43_515 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="PreserveReferencesHandlingTests.CircularDictionary circularDictionary = new PreserveReferencesHandlingTests.CircularDictionary()", span="1564-1564"];
m43_517 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="circularDictionary.Add(''self'', circularDictionary)", span="1566-1566"];
m43_516 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="circularDictionary.Add(''other'', new PreserveReferencesHandlingTests.CircularDictionary { { ''blah'', null } })", span="1565-1565"];
m43_527 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", span="1562-1562"];
m43_802 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", span="2800-2800"];
m43_806 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(dt.ToString(''yyyy-MM-ddTHH:mm:ss.FFFFFFFK'', CultureInfo.InvariantCulture), dxml.Root.Element(''CreatedDate'').Value)", span="2806-2806"];
m43_805 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", file="XmlNodeConverterTest.cs", label="var dxml = JsonConvert.DeserializeXNode(json, ''root'')", span="2805-2805"];
m43_807 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(''DateTimeToXml_Local: '' + dxml.Root.Element(''CreatedDate'').Value)", span="2808-2808"];
m43_803 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", file="XmlNodeConverterTest.cs", label="DateTime dt = DateTime.Parse(''2014-01-23T00:00:00.1234567+01:00'')", span="2802-2802"];
m43_804 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", file="XmlNodeConverterTest.cs", label="string json = @''{''''CreatedDate'''': ''''2014-01-23T00:00:00.1234567+01:00''''}''", span="2804-2804"];
m43_808 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", span="2800-2800"];
m43_27 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", span="96-96"];
m43_28 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="JsonTextReader reader", span="98-98"];
m43_29 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="100-100"];
m43_32 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="deserializeRootElementName != null", span="103-103"];
m43_33 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="converter.DeserializeRootElementName = deserializeRootElementName", span="105-105"];
m43_36 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="113-113"];
m43_34 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="XmlNode node = (XmlNode)converter.ReadJson(reader, typeof(XmlDocument), null, new JsonSerializer())", span="108-108"];
m43_39 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="string linqXmlText = d.ToString(SaveOptions.DisableFormatting)", span="117-117"];
m43_42 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(xmlText, linqXmlText)", span="123-123"];
m43_43 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="return node;", span="126-126"];
m43_30 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="reader.Read()", span="101-101"];
m43_31 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="XmlNodeConverter converter = new XmlNodeConverter()", span="102-102"];
m43_35 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="string xmlText = node.OuterXml", span="111-111"];
m43_37 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="reader.Read()", span="114-114"];
m43_38 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="XDocument d = (XDocument)converter.ReadJson(reader, typeof(XDocument), null, new JsonSerializer())", span="115-115"];
m43_40 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="d.Declaration != null", span="118-118"];
m43_41 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="linqXmlText = d.Declaration + linqXmlText", span="120-120"];
m43_44 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", span="96-96"];
m43_755 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootPropertyError()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootPropertyError()", span="2704-2704"];
m43_757 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootPropertyError()", color=green, community=0, file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeXmlNode(json),\r\n                ''JSON root object has property '$id' that will be converted to an attribute. A root object cannot have any attribute properties. Consider specifing a DeserializeRootElementName. Path '$id', line 2, position 12.'')", prediction=71, span="2727-2729"];
m43_756 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootPropertyError()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''AOSLocaleName'''': ''''en-US'''',\r\n  ''''AXLanguage'''': ''''EN-AU'''',\r\n  ''''Company'''': ''''AURE'''',\r\n  ''''CompanyTimeZone'''': 8,\r\n  ''''CurrencyInfo'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''CurrencyCode'''': ''''AUD'''',\r\n    ''''Description'''': ''''Australian Dollar'''',\r\n    ''''ExchangeRate'''': 100.0,\r\n    ''''ISOCurrencyCode'''': ''''AUD'''',\r\n    ''''Prefix'''': '''''''',\r\n    ''''Suffix'''': ''''''''\r\n  },\r\n  ''''IsSysAdmin'''': true,\r\n  ''''UserId'''': ''''lamar.miller'''',\r\n  ''''UserPreferredCalendar'''': 0,\r\n  ''''UserPreferredTimeZone'''': 8\r\n}''", span="2706-2725"];
m43_758 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootPropertyError()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootPropertyError()", span="2704-2704"];
m43_528 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularDictionary.CircularDictionary()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularDictionary.CircularDictionary()", span="433-433"];
m43_278 [cluster="Unk.CreateElement", file="XmlNodeConverterTest.cs", label="Entry Unk.CreateElement", span=""];
m43_65 [cluster="Unk.WriteNode", file="XmlNodeConverterTest.cs", label="Entry Unk.WriteNode", span=""];
m43_46 [cluster="System.IO.StringReader.StringReader(string)", file="XmlNodeConverterTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m43_467 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", span="1332-1332"];
m43_469 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="1352-1352"];
m43_472 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<myRoot><available_sizes><available_sizes><available_sizes>113</available_sizes><available_sizes>150</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>189</available_sizes><available_sizes>250</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>341</available_sizes><available_sizes>450</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-450x450.jpg</available_sizes></available_sizes></myRoot>'', newXDoc.ToString(SaveOptions.DisableFormatting))", span="1360-1360"];
m43_470 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<myRoot><available_sizes><available_sizes><available_sizes>113</available_sizes><available_sizes>150</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>189</available_sizes><available_sizes>250</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>341</available_sizes><available_sizes>450</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-450x450.jpg</available_sizes></available_sizes></myRoot>'', newDoc.InnerXml)", span="1354-1354"];
m43_468 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      [113, 150],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      [189, 250],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ],\r\n    [\r\n      [341, 450],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-450x450.jpg''''\r\n    ]\r\n  ]\r\n}''", span="1334-1349"];
m43_471 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs", label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="1358-1358"];
m43_473 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", span="1332-1332"];
m43_769 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified()", span="2748-2748"];
m43_772 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''2014-01-23T00:00:00'', dxml.Root.Element(''CreatedDate'').Value)", span="2752-2752"];
m43_771 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified()", file="XmlNodeConverterTest.cs", label="var dxml = JsonConvert.DeserializeXNode(json, ''root'')", span="2751-2751"];
m43_773 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(''DateTimeToXml_Unspecified: '' + dxml.Root.Element(''CreatedDate'').Value)", span="2754-2754"];
m43_770 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified()", file="XmlNodeConverterTest.cs", label="string json = @''{''''CreatedDate'''': ''''2014-01-23T00:00:00''''}''", span="2750-2750"];
m43_774 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified()", span="2748-2748"];
m43_392 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", span="1059-1059"];
m43_394 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="1063-1063"];
m43_397 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="string json = SerializeXmlNode(newDoc)", span="1069-1069"];
m43_393 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="string jsonText = @''{root:{r:new Date(34343, 55)}}''", span="1061-1061"];
m43_395 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="string expected = @''<root><r><Date>34343</Date><Date>55</Date></r></root>''", span="1065-1065"];
m43_396 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, newDoc.InnerXml)", span="1067-1067"];
m43_398 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="expected = @''{\r\n  ''''root'''': {\r\n    ''''r'''': {\r\n      ''''Date'''': [\r\n        ''''34343'''',\r\n        ''''55''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="1070-1079"];
m43_399 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expected, json)", span="1081-1081"];
m43_400 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", span="1059-1059"];
m43_66 [cluster="Unk.Flush", file="XmlNodeConverterTest.cs", label="Entry Unk.Flush", span=""];
m43_741 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", span="2676-2676"];
m43_743 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", file="XmlNodeConverterTest.cs", label="XmlDocument node = JsonConvert.DeserializeXmlNode(json)", span="2680-2680"];
m43_742 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", file="XmlNodeConverterTest.cs", label="var json = ''{\''DocumentId\'':13779965364495889899 }''", span="2678-2678"];
m43_744 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''<DocumentId>13779965364495889899</DocumentId>'', node.OuterXml)", span="2682-2682"];
m43_745 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", file="XmlNodeConverterTest.cs", label="string json2 = JsonConvert.SerializeXmlNode(node)", span="2684-2684"];
m43_746 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''DocumentId'''':''''13779965364495889899''''}'', json2)", span="2686-2686"];
m43_747 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", span="2676-2676"];
m43_612 [cluster="System.Collections.Generic.List<T>.List()", file="XmlNodeConverterTest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m43_179 [cluster="System.TimeSpan.FromHours(double)", file="XmlNodeConverterTest.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m43_314 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", span="805-805"];
m43_317 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs", label="StringBuilder builder = new StringBuilder()", span="807-807"];
m43_318 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs", label="var writer = XmlWriter.Create(new Utf8StringWriter(builder), new XmlWriterSettings { Indent = indent })", span="808-808"];
m43_319 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs", label="doc.Save(writer)", span="810-810"];
m43_320 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs", label="return builder.ToString();", span="812-812"];
m43_321 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", span="805-805"];
m43_182 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeOffsetContainer.DateTimeOffsetContainer()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeOffsetContainer.DateTimeOffsetContainer()", span="380-380"];
m43_733 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2657-2657"];
m43_735 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="XmlDocument xml = new XmlDocument()", span="2665-2665"];
m43_736 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="xml.LoadXml(xmlString)", span="2666-2666"];
m43_737 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="var json1 = JsonConvert.SerializeXmlNode(xml)", span="2668-2668"];
m43_734 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="var xmlString = @''<root>\r\n                              <b xmlns='http://www.example.com/ns'>Asd</b>\r\n                              <c>AAA</c>\r\n                              <test>adad</test>\r\n                              </root>''", span="2659-2663"];
m43_739 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<root><b xmlns=''''http://www.example.com/ns''''>Asd</b><c>AAA</c><test>adad</test></root>'', xmlBack.OuterXml)", span="2671-2671"];
m43_738 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="var xmlBack = JsonConvert.DeserializeObject<XmlDocument>(json1)", span="2669-2669"];
m43_740 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2657-2657"];
m43_673 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="XmlNodeConverterTest.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m43_62 [cluster="System.IO.StringWriter.StringWriter()", file="XmlNodeConverterTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m43_831 [cluster="XElement.cstr", file="XmlNodeConverterTest.cs", label="Entry XElement.cstr", span=""];
m43_277 [cluster="Unk.CreateCDataSection", file="XmlNodeConverterTest.cs", label="Entry Unk.CreateCDataSection", span=""];
m43_832 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", span="2850-2850"];
m43_835 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="var json = JsonConvert.SerializeObject(original)", span="2855-2855"];
m43_834 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', original.ToString())", span="2853-2853"];
m43_838 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', deserialized.ToString())", span="2859-2859"];
m43_833 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="var original = XDocument.Parse(''<MyElement xmlns=\''http://example.com\'' />'')", span="2852-2852"];
m43_836 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''MyElement'''':{''''@xmlns'''':''''http://example.com''''}}'', json)", span="2856-2856"];
m43_837 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="var deserialized = JsonConvert.DeserializeObject<XDocument>(json)", span="2858-2858"];
m43_839 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", span="2850-2850"];
m43_507 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", span="1518-1518"];
m43_509 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = (XmlDocument)DeserializeXmlNode(json)", span="1537-1537"];
m43_511 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="XmlNodeConverterTest.cs", label="string json2 = SerializeXmlNode(doc)", span="1541-1541"];
m43_508 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n              ''''root!'''': {\r\n                ''''person!'''': [\r\n                  {\r\n                    ''''@id!'''': ''''1'''',\r\n                    ''''name!'''': ''''Alan'''',\r\n                    ''''url!'''': ''''http://www.google.com''''\r\n                  },\r\n                  {\r\n                    ''''@id!'''': ''''2'''',\r\n                    ''''name!'''': ''''Louis'''',\r\n                    ''''url!'''': ''''http://www.yahoo.com''''\r\n                  }\r\n                ]\r\n              }\r\n            }''", span="1520-1535"];
m43_510 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<root_x0021_><person_x0021_ id_x0021_=''''1''''><name_x0021_>Alan</name_x0021_><url_x0021_>http://www.google.com</url_x0021_></person_x0021_><person_x0021_ id_x0021_=''''2''''><name_x0021_>Louis</name_x0021_><url_x0021_>http://www.yahoo.com</url_x0021_></person_x0021_></root_x0021_>'', doc.InnerXml)", span="1539-1539"];
m43_512 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''root!'''': {\r\n    ''''person!'''': [\r\n      {\r\n        ''''@id!'''': ''''1'''',\r\n        ''''name!'''': ''''Alan'''',\r\n        ''''url!'''': ''''http://www.google.com''''\r\n      },\r\n      {\r\n        ''''@id!'''': ''''2'''',\r\n        ''''name!'''': ''''Louis'''',\r\n        ''''url!'''': ''''http://www.yahoo.com''''\r\n      }\r\n    ]\r\n  }\r\n}'', json2)", span="1543-1558"];
m43_513 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", span="1518-1518"];
m43_275 [cluster="Unk.Attribute", file="XmlNodeConverterTest.cs", label="Entry Unk.Attribute", span=""];
m43_288 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", span="676-676"];
m43_289 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="678-678"];
m43_292 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="string jsonText = JsonConvert.SerializeXmlNode(fragement)", span="684-684"];
m43_290 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="XmlDocumentFragment fragement = doc.CreateDocumentFragment()", span="680-680"];
m43_294 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, jsonText)", span="688-688"];
m43_291 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="fragement.InnerXml = ''<Item>widget</Item><Item>widget</Item>''", span="682-682"];
m43_293 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="string expected = @''{''''Item'''':[''''widget'''',''''widget'''']}''", span="686-686"];
m43_295 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", span="676-676"];
m43_76 [cluster="Unk.SerializeXNode", file="XmlNodeConverterTest.cs", label="Entry Unk.SerializeXNode", span=""];
m43_557 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", span="1715-1715"];
m43_559 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeXmlNode(json, ''root''); },\r\n                ''Unexpected JsonToken: StartArray. Path '$id', line 2, position 10.'')", span="1721-1723"];
m43_558 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n  ''''$id'''': []\r\n}''", span="1717-1719"];
m43_560 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", span="1715-1715"];
m43_276 [cluster="Unk.CreateProcessingInstruction", file="XmlNodeConverterTest.cs", label="Entry Unk.CreateProcessingInstruction", span=""];
m43_52 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", span="130-130"];
m43_54 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="StringWriter sw = new StringWriter()", span="134-134"];
m43_55 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="XmlWriter writer = XmlWriter.Create(sw, new XmlWriterSettings { Indent = true, OmitXmlDeclaration = true })", span="135-135"];
m43_53 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="XmlReader reader = XmlReader.Create(new StringReader(xml))", span="132-132"];
m43_59 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="return sw.ToString();", span="144-144"];
m43_58 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="writer.Flush()", span="142-142"];
m43_56 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="reader.Read()", span="137-137"];
m43_57 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="writer.WriteNode(reader, false)", span="139-139"];
m43_60 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", span="130-130"];
m43_183 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", span="410-410"];
m43_187 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="XDocument doc = JsonConvert.DeserializeXNode(json)", span="418-418"];
m43_185 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeXNode(XElement.Parse(xml))", span="414-414"];
m43_186 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''root'''':{''''p'''':{''''#text'''':[''''Text1'''','''' Text2''''],''''span'''':[''''Span1'''',''''Span2'''']}}}'', json)", span="416-416"];
m43_188 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''<root>\r\n  <p>Text1 Text2<span>Span1</span><span>Span2</span></p>\r\n</root>'', doc.ToString())", span="420-422"];
m43_184 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="string xml = ''<root><p>Text1<span>Span1</span> <span>Span2</span> Text2</p></root>''", span="412-412"];
m43_189 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", span="410-410"];
m43_629 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", span="2021-2021"];
m43_631 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs", label="XmlDocument d = new XmlDocument()", span="2027-2027"];
m43_632 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs", label="d.LoadXml(xml)", span="2028-2028"];
m43_633 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeXmlNode(d, Formatting.Indented)", span="2030-2030"];
m43_634 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''root'''': {\r\n    ''''Reports'''': [\r\n      {}\r\n    ]\r\n  }\r\n}'', json)", span="2032-2038"];
m43_630 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs", label="string xml = @''<root>\r\n<Reports d1p1:Array=''''true'''' xmlns:d1p1=''''http://james.newtonking.com/projects/json'''' />\r\n</root>''", span="2023-2025"];
m43_635 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", span="2021-2021"];
m43_153 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", span="357-357"];
m43_160 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="string json2 = JsonConvert.SerializeObject(doc1, Formatting.Indented)", span="373-373"];
m43_158 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="var xml = doc1.ToString()", span="370-370"];
m43_157 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="XDocument doc1 = JsonConvert.DeserializeObject<XDocument>(json, new JsonSerializerSettings\r\n            {\r\n                Converters = { new XmlNodeConverter() },\r\n                FloatParseHandling = FloatParseHandling.Decimal\r\n            })", span="364-368"];
m43_159 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''<Number>1000000003.14159265358979</Number>'', xml)", span="371-371"];
m43_161 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="DecimalContainer x2 = JsonConvert.DeserializeObject<DecimalContainer>(json2)", span="375-375"];
m43_162 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(x.Number, x2.Number)", span="377-377"];
m43_156 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="var json = JsonConvert.SerializeObject(x, Formatting.Indented)", span="362-362"];
m43_155 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="var x = new DecimalContainer { Number = d }", span="360-360"];
m43_154 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="decimal d = (decimal)Math.PI + 1000000000m", span="359-359"];
m43_163 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", span="357-357"];
m43_19 [cluster="Unk.Get", file="XmlNodeConverterTest.cs", label="Entry Unk.Get", span=""];
m43_165 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="540-540"];
m43_110 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="527-527"];
m43_97 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MyModel.MyModel()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MyModel.MyModel()", span="178-178"];
m43_296 [cluster="Unk.CreateDocumentFragment", file="XmlNodeConverterTest.cs", label="Entry Unk.CreateDocumentFragment", span=""];
m43_111 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="754-754"];
m43_602 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="551-551"];
m43_600 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="XmlNodeConverterTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m43_762 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", span="2733-2733"];
m43_764 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", file="XmlNodeConverterTest.cs", label="XmlDocument xml = new XmlDocument()", span="2737-2737"];
m43_765 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", file="XmlNodeConverterTest.cs", label="xml.LoadXml(xmlString)", span="2738-2738"];
m43_766 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeXmlNode(xml, Formatting.Indented, true)", span="2740-2740"];
m43_763 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", file="XmlNodeConverterTest.cs", label="string xmlString = @''<myemptynode />''", span="2735-2735"];
m43_767 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''null'', json)", span="2742-2742"];
m43_768 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", span="2733-2733"];
m43_217 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", span="473-473"];
m43_218 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = JsonConvert.DeserializeXmlNode(''{ A: { '@xsi:nil': true } }'')", span="475-475"];
m43_220 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", file="XmlNodeConverterTest.cs", label="XDocument xdoc = JsonConvert.DeserializeXNode(''{ A: { '@xsi:nil': true } }'')", span="479-479"];
m43_219 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<A nil=''''true'''' />'', doc.OuterXml)", span="477-477"];
m43_221 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(doc.OuterXml, xdoc.ToString())", span="481-481"];
m43_222 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", span="473-473"];
m43_324 [cluster="System.Text.StringBuilder.ToString()", file="XmlNodeConverterTest.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m43_613 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", span="1937-1937"];
m43_615 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs", label="XmlDocument d = new XmlDocument()", span="1950-1950"];
m43_616 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs", label="d.LoadXml(xml)", span="1951-1951"];
m43_617 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs", label="string output = JsonConvert.SerializeXmlNode(d, Formatting.Indented, true)", span="1953-1953"];
m43_618 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': [\r\n    ''''Hi'''',\r\n    ''''Hi''''\r\n  ],\r\n  ''''Products'''': [\r\n    {\r\n      ''''Name'''': ''''First'''',\r\n      ''''ExpiryDate'''': ''''2000-01-01T00:00:00Z'''',\r\n      ''''Price'''': ''''0'''',\r\n      ''''Sizes'''': null\r\n    }\r\n  ]\r\n}'', output)", span="1955-1968"];
m43_614 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs", label="string xml = @''<test>\r\n  <Name>Hi</Name>\r\n  <Name>Hi</Name>\r\n  <Products json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <Name>First</Name>\r\n    <ExpiryDate>2000-01-01T00:00:00Z</ExpiryDate>\r\n    <Price>0</Price>\r\n    <Sizes />\r\n  </Products>\r\n</test>''", span="1939-1948"];
m43_619 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", span="1937-1937"];
m43_330 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", span="827-827"];
m43_334 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="string jsonText = SerializeXmlNode(doc)", span="856-856"];
m43_337 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="XmlDocument deserializedDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="905-905"];
m43_332 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="853-853"];
m43_333 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(xml)", span="854-854"];
m43_335 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="string expected = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@encoding'''': ''''utf-8''''\r\n  },\r\n  ''''xs:schema'''': {\r\n    ''''@xs:id'''': ''''SomeID'''',\r\n    ''''@xmlns'''': '''''''',\r\n    ''''@xmlns:xs'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''xs:element'''': {\r\n      ''''@name'''': ''''MyDataSet'''',\r\n      ''''@msdata:IsDataSet'''': ''''true'''',\r\n      ''''xs:complexType'''': {\r\n        ''''xs:choice'''': {\r\n          ''''@maxOccurs'''': ''''unbounded'''',\r\n          ''''xs:element'''': {\r\n            ''''@name'''': ''''customers'''',\r\n            ''''xs:complexType'''': {\r\n              ''''xs:sequence'''': {\r\n                ''''xs:element'''': [\r\n                  {\r\n                    ''''@name'''': ''''CustomerID'''',\r\n                    ''''@type'''': ''''xs:integer'''',\r\n                    ''''@minOccurs'''': ''''0''''\r\n                  },\r\n                  {\r\n                    ''''@name'''': ''''CompanyName'''',\r\n                    ''''@type'''': ''''xs:string'''',\r\n                    ''''@minOccurs'''': ''''0''''\r\n                  },\r\n                  {\r\n                    ''''@name'''': ''''Phone'''',\r\n                    ''''@type'''': ''''xs:string''''\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="858-901"];
m43_336 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expected, jsonText)", span="903-903"];
m43_338 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(doc.InnerXml, deserializedDoc.InnerXml)", span="907-907"];
m43_331 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<xs:schema xs:id=''''SomeID'''' \r\n	xmlns='''''''' \r\n	xmlns:xs=''''http://www.w3.org/2001/XMLSchema'''' \r\n	xmlns:msdata=''''urn:schemas-microsoft-com:xml-msdata''''>\r\n	<xs:element name=''''MyDataSet'''' msdata:IsDataSet=''''true''''>\r\n		<xs:complexType>\r\n			<xs:choice maxOccurs=''''unbounded''''>\r\n				<xs:element name=''''customers'''' >\r\n					<xs:complexType >\r\n						<xs:sequence>\r\n							<xs:element name=''''CustomerID'''' type=''''xs:integer'''' \r\n										 minOccurs=''''0'''' />\r\n							<xs:element name=''''CompanyName'''' type=''''xs:string'''' \r\n										 minOccurs=''''0'''' />\r\n							<xs:element name=''''Phone'''' type=''''xs:string'''' />\r\n						</xs:sequence>\r\n					</xs:complexType>\r\n				</xs:element>\r\n			</xs:choice>\r\n		</xs:complexType>\r\n	</xs:element>\r\n</xs:schema>''", span="829-851"];
m43_339 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", span="827-827"];
m43_531 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", span="1612-1612"];
m43_534 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="XmlNodeConverterTest.cs", label="string xml = GetIndentedInnerXml(node)", span="1626-1626"];
m43_533 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="XmlNodeConverterTest.cs", label="XmlNode node = JsonConvert.DeserializeXmlNode(json, ''root'')", span="1625-1625"];
m43_535 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id=''''1''''>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>1</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>2</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>3</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>4</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>5</values>\r\n</root>'', xml)", span="1628-1635"];
m43_537 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(json, newJson)", span="1639-1639"];
m43_532 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    ''''1'''',\r\n    ''''2'''',\r\n    ''''3'''',\r\n    ''''4'''',\r\n    ''''5''''\r\n  ]\r\n}''", span="1614-1623"];
m43_536 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="XmlNodeConverterTest.cs", label="string newJson = JsonConvert.SerializeXmlNode(node, Formatting.Indented, true)", span="1637-1637"];
m43_538 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", span="1612-1612"];
m43_549 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", span="1675-1675"];
m43_552 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs", label="string xml = GetIndentedInnerXml(node)", span="1689-1689"];
m43_551 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs", label="XmlNode node = JsonConvert.DeserializeXmlNode(json, ''root'')", span="1688-1688"];
m43_553 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id=''''1''''>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>1</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>2</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>3</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>4</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>5</values>\r\n</root>'', xml)", span="1691-1698"];
m43_555 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    ''''1'''',\r\n    ''''2'''',\r\n    ''''3'''',\r\n    ''''4'''',\r\n    ''''5''''\r\n  ]\r\n}'', newJson)", span="1702-1711"];
m43_550 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n  ''''$values'''': [\r\n    ''''1'''',\r\n    ''''2'''',\r\n    ''''3'''',\r\n    ''''4'''',\r\n    ''''5''''\r\n  ],\r\n  ''''$id'''': ''''1''''\r\n}''", span="1677-1686"];
m43_554 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs", label="string newJson = JsonConvert.SerializeXmlNode(node, Formatting.Indented, true)", span="1700-1700"];
m43_556 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", span="1675-1675"];
m43_421 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", span="1167-1167"];
m43_423 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", color=green, community=0, file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeXmlNode(json); },\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName. Path 'photos', line 1, position 26.'')", prediction=72, span="1171-1173"];
m43_422 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs", label="string json = @''{''''count'''': 773840,''''photos'''': null}''", span="1169-1169"];
m43_424 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", span="1167-1167"];
m43_224 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", span="488-488"];
m43_226 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", color=green, community=0, file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeXmlNode(json); },\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName. Path 'Email', line 3, position 13.'')", prediction=73, span="505-507"];
m43_225 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n    ''''Id'''': 1,\r\n     ''''Email'''': ''''james@example.com'''',\r\n     ''''Active'''': true,\r\n     ''''CreatedDate'''': ''''2013-01-20T00:00:00Z'''',\r\n     ''''Roles'''': [\r\n       ''''User'''',\r\n       ''''Admin''''\r\n     ],\r\n    ''''Team'''': {\r\n        ''''Id'''': 2,\r\n        ''''Name'''': ''''Software Developers'''',\r\n        ''''Description'''': ''''Creators of fine software products and services.''''\r\n    }\r\n}''", span="490-504"];
m43_227 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", span="488-488"];
m43_656 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="XmlNodeConverterTest.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m43_340 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", span="911-911"];
m43_342 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = (XmlDocument)DeserializeXmlNode(jsonText)", span="932-932"];
m43_344 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="string formattedXml = GetIndentedInnerXml(doc)", span="941-941"];
m43_341 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="string jsonText = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''span'''': {\r\n        ''''@class'''': ''''summary'''',\r\n        ''''#text'''': ''''Web 2.0 Conference'''',\r\n        ''''#cdata-section'''': ''''my escaped text''''\r\n      },\r\n      ''''@href'''': ''''http://www.web2con.com/''''\r\n    }\r\n  }\r\n}''", span="913-930"];
m43_343 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="string expected = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''>\r\n    <span class=''''summary''''>Web 2.0 Conference<![CDATA[my escaped text]]></span>\r\n  </a>\r\n</span>''", span="934-939"];
m43_345 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="StringAssert.AreEqual(expected, formattedXml)", span="943-943"];
m43_346 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", span="911-911"];
m43_840 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", span="2863-2863"];
m43_843 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="var json = JsonConvert.SerializeObject(original)", span="2868-2868"];
m43_842 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', original.ToString())", span="2866-2866"];
m43_846 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', deserialized.ToString())", span="2872-2872"];
m43_841 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="var original = new XDocument(new XElement(''{http://example.com}MyElement''))", span="2865-2865"];
m43_844 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''MyElement'''':{''''@xmlns'''':''''http://example.com''''}}'', json)", span="2869-2869"];
m43_845 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="var deserialized = JsonConvert.DeserializeObject<XDocument>(json)", span="2871-2871"];
m43_847 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", span="2863-2863"];
m43_657 [cluster="System.Text.Encoding.GetBytes(string)", file="XmlNodeConverterTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m43_228 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="350-350"];
m43_850 [file="XmlNodeConverterTest.cs", label=json, span=""];
m43_849 [file="XmlNodeConverterTest.cs", label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", span=""];
m43_851 [file="XmlNodeConverterTest.cs", label=json, span=""];
m43_852 [file="XmlNodeConverterTest.cs", label=json, span=""];
m43_855 [file="XmlNodeConverterTest.cs", label=json, span=""];
m43_853 [file="XmlNodeConverterTest.cs", label=json, span=""];
m43_854 [file="XmlNodeConverterTest.cs", label=json, span=""];
n337 -> n5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
n337 -> n11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
n337 -> n14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
n338 -> n12  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
n339 -> n23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n280  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n339 -> n311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n340 -> n193  [color=darkseagreen4, key=1, label=methodCall, style=dashed];
n1 -> n336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
n2 -> n336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
n8 -> n11  [color=darkseagreen4, key=1, label=object, style=dashed];
n11 -> n338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
n36 -> n38  [color=darkseagreen4, key=1, label=key, style=dashed];
n39 -> n45  [color=darkseagreen4, key=1, label=contract, style=dashed];
n50 -> n203  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n50 -> n204  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n50 -> n205  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n50 -> n206  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n50 -> n207  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n50 -> n208  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n50 -> n209  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n50 -> n211  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n50 -> n212  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n50 -> n213  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n50 -> n214  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n50 -> n215  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n50 -> n216  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n50 -> n218  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n50 -> n219  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n42 -> n44  [color=darkseagreen4, key=1, label=updatedCache, style=dashed];
n53 -> n66  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n54 -> n63  [color=darkseagreen4, key=1, label=dataContractAttribute, style=dashed];
n55 -> n79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n55 -> n59  [color=darkseagreen4, key=1, label=defaultMembers, style=dashed];
n56 -> n83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n56 -> n58  [color=darkseagreen4, key=1, label=allMembers, style=dashed];
n57 -> n60  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
n57 -> n62  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
n57 -> n64  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
n57 -> n68  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
n58 -> n60  [color=darkseagreen4, key=1, label=member, style=dashed];
n58 -> n61  [color=darkseagreen4, key=1, label=member, style=dashed];
n58 -> n62  [color=darkseagreen4, key=1, label=member, style=dashed];
n58 -> n63  [color=darkseagreen4, key=1, label=member, style=dashed];
n58 -> n64  [color=darkseagreen4, key=1, label=member, style=dashed];
n87 -> n89  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
n95 -> n98  [color=darkseagreen4, key=1, label=contract, style=dashed];
n95 -> n99  [color=darkseagreen4, key=1, label=contract, style=dashed];
n95 -> n101  [color=darkseagreen4, key=1, label=contract, style=dashed];
n104 -> n131  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n104 -> n134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n104 -> n138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n104 -> n140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n104 -> n142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n104 -> n144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n104 -> n146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n109 -> n111  [color=darkseagreen4, key=1, label=constructors, style=dashed];
n134 -> n138  [color=darkseagreen4, key=1, label=method, style=dashed];
n134 -> n140  [color=darkseagreen4, key=1, label=method, style=dashed];
n134 -> n142  [color=darkseagreen4, key=1, label=method, style=dashed];
n134 -> n144  [color=darkseagreen4, key=1, label=method, style=dashed];
n134 -> n146  [color=darkseagreen4, key=1, label=method, style=dashed];
n138 -> n138  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
n140 -> n140  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
n142 -> n142  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
n144 -> n144  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
n146 -> n146  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
n137 -> n140  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n137 -> n142  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n137 -> n144  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n137 -> n146  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n136 -> n138  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
n155 -> n240  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
n155 -> n241  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
n155 -> n242  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
n155 -> n243  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
n155 -> n244  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
n155 -> n245  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
n155 -> n246  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
n155 -> n247  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
n155 -> n248  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n155 -> n249  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
n155 -> n250  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
n155 -> n251  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
n155 -> n252  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
n157 -> n159  [color=darkseagreen4, key=1, label=contract, style=dashed];
n163 -> n165  [color=darkseagreen4, key=1, label=contract, style=dashed];
n169 -> n171  [color=darkseagreen4, key=1, label=contract, style=dashed];
n175 -> n177  [color=darkseagreen4, key=1, label=contract, style=dashed];
n181 -> n187  [color=darkseagreen4, key=1, label=contract, style=dashed];
n186 -> n193  [color=darkseagreen4, key=1, label="object[]", style=dashed];
n185 -> n193  [color=darkseagreen4, key=1, label=methodCall, style=dashed];
n197 -> n199  [color=darkseagreen4, key=1, label=contract, style=dashed];
n210 -> n217  [color=darkseagreen4, key=1, label=canConvertToString, style=dashed];
n225 -> n232  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n228 -> n230  [color=darkseagreen4, key=1, label=converter, style=dashed];
n253 -> n255  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
n258 -> n261  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n258 -> n262  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n265 -> n269  [color=darkseagreen4, key=1, label=members, style=dashed];
n268 -> n272  [color=darkseagreen4, key=1, label=properties, style=dashed];
n268 -> n273  [color=darkseagreen4, key=1, label=properties, style=dashed];
n270 -> n272  [color=darkseagreen4, key=1, label=property, style=dashed];
n279 -> n281  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
n279 -> n282  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
n286 -> n327  [color=darkseagreen4, key=1, label=property, style=dashed];
n290 -> n292  [color=darkseagreen4, key=1, label=dataContractAttribute, style=dashed];
n293 -> n300  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
n293 -> n306  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
n293 -> n315  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
n295 -> n298  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
n295 -> n304  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
n295 -> n313  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
n294 -> n300  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
n294 -> n306  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
n294 -> n315  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m1_159 -> m1_163  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_160 -> m1_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_420 -> m1_422  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_420 -> m1_423  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_420 -> m1_424  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_219 -> m1_221  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_392 -> m1_395  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_392 -> m1_396  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_100 -> m1_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_314 -> m1_316  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_314 -> m1_319  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_314 -> m1_320  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_314 -> m1_317  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_386 -> m1_388  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_18 -> m1_20  [color=darkseagreen4, key=1, label="System.IO.BinaryReader", style=dashed];
m1_99 -> m1_104  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_371 -> m1_373  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_327 -> m1_331  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_334 -> m1_339  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m1_334 -> m1_341  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m1_336 -> m1_338  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_336 -> m1_344  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_330 -> m1_339  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m1_324 -> m1_327  [color=darkseagreen4, key=1, label=o1, style=dashed];
m1_325 -> m1_327  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_328 -> m1_331  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_328 -> m1_338  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_328 -> m1_333  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_328 -> m1_335  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_328 -> m1_339  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_351 -> m1_354  [color=darkseagreen4, key=1, label=bis, style=dashed];
m1_351 -> m1_356  [color=darkseagreen4, key=1, label=bis, style=dashed];
m1_353 -> m1_353  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m1_353 -> m1_356  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m1_353 -> m1_358  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m1_185 -> m1_194  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_185 -> m1_187  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_185 -> m1_200  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_186 -> m1_193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_187 -> m1_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_188 -> m1_199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_190 -> m1_202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_189 -> m1_203  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_446 -> m1_470  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_126 -> m1_130  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_127 -> m1_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_355 -> m1_355  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m1_355 -> m1_358  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m1_360 -> m1_365  [color=darkseagreen4, key=1, label=byte, style=dashed];
m1_360 -> m1_367  [color=darkseagreen4, key=1, label=byte, style=dashed];
m1_357 -> m1_360  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_357 -> m1_359  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_264 -> m1_266  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_264 -> m1_267  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_264 -> m1_268  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_264 -> m1_269  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_264 -> m1_270  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_48 -> m1_50  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_475 -> m1_478  [color=darkseagreen4, key=1, label=name, style=dashed];
m1_476 -> m1_479  [color=darkseagreen4, key=1, label=productPrice, style=dashed];
m1_477 -> m1_480  [color=darkseagreen4, key=1, label=productName, style=dashed];
m1_481 -> m1_494  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_481 -> m1_484  [color=darkseagreen4, key=1, label=storeNames, style=dashed];
m1_481 -> m1_485  [color=darkseagreen4, key=1, label=storeNames, style=dashed];
m1_481 -> m1_486  [color=darkseagreen4, key=1, label=storeNames, style=dashed];
m1_482 -> m1_497  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_482 -> m1_487  [color=darkseagreen4, key=1, label=firstProductNames, style=dashed];
m1_482 -> m1_488  [color=darkseagreen4, key=1, label=firstProductNames, style=dashed];
m1_482 -> m1_489  [color=darkseagreen4, key=1, label=firstProductNames, style=dashed];
m1_483 -> m1_500  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_483 -> m1_490  [color=darkseagreen4, key=1, label=totalPrice, style=dashed];
m1_286 -> m1_289  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
m1_286 -> m1_300  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
m1_291 -> m1_296  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m1_291 -> m1_298  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m1_284 -> m1_287  [color=darkseagreen4, key=1, label=count, style=dashed];
m1_284 -> m1_299  [color=darkseagreen4, key=1, label=count, style=dashed];
m1_285 -> m1_296  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m1_287 -> m1_289  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_287 -> m1_290  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_288 -> m1_290  [color=darkseagreen4, key=1, label=length, style=dashed];
m1_292 -> m1_295  [color=darkseagreen4, key=1, label=charCount, style=dashed];
m1_225 -> m1_227  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_225 -> m1_232  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_225 -> m1_238  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_225 -> m1_240  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_225 -> m1_254  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_227 -> m1_230  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_227 -> m1_231  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_232 -> m1_234  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_235 -> m1_237  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_243 -> m1_245  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_243 -> m1_246  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_243 -> m1_248  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_243 -> m1_249  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_243 -> m1_250  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_243 -> m1_251  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_243 -> m1_253  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_254 -> m1_256  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_254 -> m1_257  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_254 -> m1_258  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_254 -> m1_259  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_254 -> m1_260  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_73 -> m1_75  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_73 -> m1_76  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_318 -> m1_331  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_7 -> m1_11  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_3 -> m1_5  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m1_3 -> m1_6  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m1_3 -> m1_7  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m1_281 -> m1_287  [color=darkseagreen4, key=1, label=count, style=dashed];
m1_281 -> m1_299  [color=darkseagreen4, key=1, label=count, style=dashed];
m1_211 -> m1_215  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_212 -> m1_214  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_364 -> m1_367  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_364 -> m1_366  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_436 -> m1_436  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_437 -> m1_437  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_438 -> m1_438  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_439 -> m1_439  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_440 -> m1_440  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_441 -> m1_441  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_434 -> m1_436  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m1_434 -> m1_437  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m1_434 -> m1_438  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m1_434 -> m1_439  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m1_434 -> m1_440  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m1_434 -> m1_441  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m1_434 -> m1_442  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m1_171 -> m1_175  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_172 -> m1_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_271 -> m1_275  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Bson.BsonBinaryType", style=dashed];
m1_274 -> m1_276  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_274 -> m1_277  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_274 -> m1_278  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_274 -> m1_279  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_294 -> m1_301  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_297 -> m1_301  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_296 -> m1_304  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_298 -> m1_304  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_298 -> m1_301  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_298 -> m1_300  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_298 -> m1_303  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_298 -> m1_305  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_400 -> m1_403  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_400 -> m1_404  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_400 -> m1_402  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_401 -> m1_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_115  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_131  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_163  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_289  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_390  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_401 -> m1_397  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m1_322 -> m1_335  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_322 -> m1_338  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_322 -> m1_344  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_343 -> m1_345  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_148 -> m1_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_147 -> m1_152  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_149 -> m1_152  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_149 -> m1_153  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_149 -> m1_154  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_149 -> m1_160  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_149 -> m1_165  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_348 -> m1_350  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m1_348 -> m1_353  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m1_348 -> m1_355  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m1_348 -> m1_356  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m1_348 -> m1_358  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m1_349 -> m1_356  [color=darkseagreen4, key=1, label=bis, style=dashed];
m1_16 -> m1_18  [color=darkseagreen4, key=1, label=results, style=dashed];
m1_53 -> m1_55  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_90 -> m1_93  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_140 -> m1_144  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_141 -> m1_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_36 -> m1_38  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_410 -> m1_413  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_410 -> m1_414  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_410 -> m1_415  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_410 -> m1_416  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_410 -> m1_412  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_133 -> m1_135  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_133 -> m1_137  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_134 -> m1_136  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_136 -> m1_138  [color=darkseagreen4, key=1, label=newContext, style=dashed];
m1_152 -> m1_160  [color=darkseagreen4, key=1, label=lengthMinusEnd, style=dashed];
m1_107 -> m1_111  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_108 -> m1_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_114 -> m1_118  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_115 -> m1_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_277 -> m1_287  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_277 -> m1_293  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_277 -> m1_295  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_277 -> m1_301  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_378 -> m1_380  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_378 -> m1_381  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_378 -> m1_382  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_130 -> m1_397  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_197 -> m1_199  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_197 -> m1_200  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_307 -> m1_356  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_307 -> m1_357  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_177 -> m1_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonType", style=dashed];
m1_178 -> m1_182  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_520 -> m1_130  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_517 -> m1_104  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_518 -> m1_111  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_519 -> m1_118  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_524 -> m1_163  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_525 -> m1_175  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_521 -> m1_137  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_522 -> m1_144  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_526 -> m1_182  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_527 -> m1_194  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_527 -> m1_200  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_527 -> m1_203  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_528 -> m1_215  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_523 -> m1_152  [color=darkseagreen4, key=1, label=c, style=dashed];
m2_54 -> m2_57  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m2_34 -> m2_37  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_34 -> m2_44  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_35 -> m2_41  [color=darkseagreen4, key=1, label=genericEnumerable, style=dashed];
m2_36 -> m2_43  [color=darkseagreen4, key=1, label=match, style=dashed];
m2_36 -> m2_46  [color=darkseagreen4, key=1, label=match, style=dashed];
m2_42 -> m2_43  [color=darkseagreen4, key=1, label=match, style=dashed];
m2_45 -> m2_46  [color=darkseagreen4, key=1, label=match, style=dashed];
m2_40 -> m2_44  [color=darkseagreen4, key=1, label=parameterType, style=dashed];
m2_88 -> m2_90  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<T>", style=dashed];
m2_88 -> m2_91  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<T>", style=dashed];
m2_89 -> m2_91  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_89 -> m2_93  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_93 -> m2_93  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_29 -> m2_31  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_16 -> m2_18  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_16 -> m2_20  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_16 -> m2_22  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_119 -> m2_121  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m2_119 -> m2_122  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m2_119 -> m2_135  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m2_119 -> m2_137  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m2_120 -> m2_131  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m2_120 -> m2_135  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m2_124 -> m2_127  [color=darkseagreen4, key=1, label=dimensionLength, style=dashed];
m2_129 -> m2_137  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
m2_130 -> m2_133  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_133 -> m2_133  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_134 -> m2_138  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_138 -> m2_138  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_154 -> m2_156  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_154 -> m2_159  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m2_155 -> m2_157  [color=darkseagreen4, key=1, label=dimensions, style=dashed];
m2_158 -> m2_160  [color=darkseagreen4, key=1, label=multidimensionalArray, style=dashed];
m2_140 -> m2_146  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m2_140 -> m2_148  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m2_144 -> m2_149  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m2_144 -> m2_152  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m2_147 -> m2_149  [color=darkseagreen4, key=1, label=index, style=dashed];
m2_145 -> m2_148  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_145 -> m2_151  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_150 -> m2_152  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m2_151 -> m2_151  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_106 -> m2_111  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_107 -> m2_110  [color=darkseagreen4, key=1, label=dimensions, style=dashed];
m2_107 -> m2_111  [color=darkseagreen4, key=1, label=dimensions, style=dashed];
m2_107 -> m2_116  [color=darkseagreen4, key=1, label=dimensions, style=dashed];
m2_108 -> m2_110  [color=darkseagreen4, key=1, label=currentArray, style=dashed];
m2_108 -> m2_112  [color=darkseagreen4, key=1, label=currentArray, style=dashed];
m2_79 -> m2_81  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m2_79 -> m2_82  [color=darkseagreen4, key=1, label="System.Func<T, bool>", style=dashed];
m2_80 -> m2_83  [color=darkseagreen4, key=1, label=index, style=dashed];
m2_80 -> m2_84  [color=darkseagreen4, key=1, label=index, style=dashed];
m2_84 -> m2_84  [color=darkseagreen4, key=1, label=index, style=dashed];
m2_72 -> m2_74  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m2_72 -> m2_75  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m2_73 -> m2_77  [color=darkseagreen4, key=1, label=allAdded, style=dashed];
m2_76 -> m2_77  [color=darkseagreen4, key=1, label=allAdded, style=dashed];
m2_5 -> m2_7  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m2_5 -> m2_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m2_5 -> m2_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m2_5 -> m2_11  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<T>", style=dashed];
m2_97 -> m2_99  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<T>", style=dashed];
m2_97 -> m2_100  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<T>", style=dashed];
m2_98 -> m2_100  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_98 -> m2_101  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_98 -> m2_102  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_102 -> m2_102  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_61 -> m2_64  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m2_61 -> m2_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m2_61 -> m2_66  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m2_61 -> m2_67  [color=darkseagreen4, key=1, label=TSource, style=dashed];
m2_63 -> m2_67  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEqualityComparer<TSource>", style=dashed];
m3_91 -> m3_95  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_91 -> m3_94  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_69 -> m3_106  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_13 -> m3_15  [color=darkseagreen4, key=1, label=T, style=dashed];
m3_13 -> m3_16  [color=darkseagreen4, key=1, label=T, style=dashed];
m3_34 -> m3_36  [color=darkseagreen4, key=1, label="T[]", style=dashed];
m3_34 -> m3_37  [color=darkseagreen4, key=1, label="T[]", style=dashed];
m3_70 -> m3_72  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_85 -> m3_88  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_98 -> m3_100  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_27 -> m3_29  [color=darkseagreen4, key=1, label=T, style=dashed];
m3_27 -> m3_30  [color=darkseagreen4, key=1, label=T, style=dashed];
m3_41 -> m3_43  [color=darkseagreen4, key=1, label=T, style=dashed];
m3_41 -> m3_46  [color=darkseagreen4, key=1, label=T, style=dashed];
m3_44 -> m3_47  [color=darkseagreen4, key=1, label=contains, style=dashed];
m3_76 -> m3_80  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_76 -> m3_79  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_64 -> m3_66  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_116 -> m3_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_72  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m3_116 -> m3_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m5_48 -> m5_528  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_48 -> m5_532  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_48 -> m5_534  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_48 -> m5_536  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_48 -> m5_538  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_48 -> m5_540  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_48 -> m5_542  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_48 -> m5_544  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_48 -> m5_546  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_48 -> m5_548  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_48 -> m5_551  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_529 -> m5_545  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_529 -> m5_550  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_529 -> m5_541  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_529 -> m5_547  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_529 -> m5_537  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_529 -> m5_539  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_529 -> m5_543  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_529 -> m5_549  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_530 -> m5_533  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m5_530 -> m5_535  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m5_506 -> m5_514  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_507 -> m5_514  [color=darkseagreen4, key=1, label=contract, style=dashed];
m5_507 -> m5_515  [color=darkseagreen4, key=1, label=contract, style=dashed];
m5_512 -> m5_519  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_511 -> m5_519  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m5_301 -> m5_303  [color=darkseagreen4, key=1, label=property, style=dashed];
m5_297 -> m5_300  [color=darkseagreen4, key=1, label=matchingMemberProperty, style=dashed];
m5_296 -> m5_298  [color=darkseagreen4, key=1, label=parameterInfo, style=dashed];
m5_296 -> m5_300  [color=darkseagreen4, key=1, label=parameterInfo, style=dashed];
m5_295 -> m5_303  [color=darkseagreen4, key=1, label=parameterCollection, style=dashed];
m5_295 -> m5_304  [color=darkseagreen4, key=1, label=parameterCollection, style=dashed];
m5_294 -> m5_296  [color=darkseagreen4, key=1, label=constructorParameters, style=dashed];
m5_558 -> m5_564  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_360 -> m5_366  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_360 -> m5_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m5_360 -> m5_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m5_360 -> m5_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m5_360 -> m5_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m5_360 -> m5_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m5_366 -> m5_368  [color=darkseagreen4, key=1, label=onSerializing, style=dashed];
m5_366 -> m5_369  [color=darkseagreen4, key=1, label=onSerialized, style=dashed];
m5_366 -> m5_370  [color=darkseagreen4, key=1, label=onSerialized, style=dashed];
m5_366 -> m5_371  [color=darkseagreen4, key=1, label=onDeserializing, style=dashed];
m5_366 -> m5_372  [color=darkseagreen4, key=1, label=onDeserializing, style=dashed];
m5_366 -> m5_373  [color=darkseagreen4, key=1, label=onDeserialized, style=dashed];
m5_366 -> m5_374  [color=darkseagreen4, key=1, label=onDeserialized, style=dashed];
m5_366 -> m5_375  [color=darkseagreen4, key=1, label=onError, style=dashed];
m5_366 -> m5_376  [color=darkseagreen4, key=1, label=onError, style=dashed];
m5_652 -> m5_746  [color=darkseagreen4, key=1, label=bool, style=dashed];
m5_739 -> m5_742  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m5_739 -> m5_746  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m5_741 -> m5_746  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m5_745 -> m5_752  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_744 -> m5_752  [color=darkseagreen4, key=1, label=specifiedPropertyGet, style=dashed];
m5_309 -> m5_315  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo", style=dashed];
m5_309 -> m5_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m5_309 -> m5_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m5_311 -> m5_315  [color=darkseagreen4, key=1, label=property, style=dashed];
m5_311 -> m5_322  [color=darkseagreen4, key=1, label=property, style=dashed];
m5_311 -> m5_331  [color=darkseagreen4, key=1, label=property, style=dashed];
m5_145 -> m5_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m5_145 -> m5_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m5_8 -> m5_11  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_11 -> m5_774  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m5_127 -> m5_130  [color=darkseagreen4, key=1, label=overrideConstructor, style=dashed];
m5_135 -> m5_138  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m5_139 -> m5_141  [color=darkseagreen4, key=1, label=extensionDataMember, style=dashed];
m5_110 -> m5_115  [color=darkseagreen4, key=1, label=contract, style=dashed];
m5_110 -> m5_130  [color=darkseagreen4, key=1, label=contract, style=dashed];
m5_110 -> m5_138  [color=darkseagreen4, key=1, label=contract, style=dashed];
m5_110 -> m5_126  [color=darkseagreen4, key=1, label=contract, style=dashed];
m5_110 -> m5_131  [color=darkseagreen4, key=1, label=contract, style=dashed];
m5_110 -> m5_134  [color=darkseagreen4, key=1, label=contract, style=dashed];
m5_110 -> m5_141  [color=darkseagreen4, key=1, label=contract, style=dashed];
m5_110 -> m5_142  [color=darkseagreen4, key=1, label=contract, style=dashed];
m5_116 -> m5_123  [color=darkseagreen4, key=1, label=extensionDataNameResolver, style=dashed];
m5_117 -> m5_120  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m5_122 -> m5_156  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_121 -> m5_156  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m5_490 -> m5_492  [color=darkseagreen4, key=1, label=contract, style=dashed];
m5_496 -> m5_502  [color=darkseagreen4, key=1, label=contract, style=dashed];
m5_51 -> m5_73  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_59 -> m5_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_59 -> m5_62  [color=darkseagreen4, key=1, label=defaultMembers, style=dashed];
m5_54 -> m5_57  [color=darkseagreen4, key=1, label=memberSerialization, style=dashed];
m5_54 -> m5_70  [color=darkseagreen4, key=1, label=memberSerialization, style=dashed];
m5_55 -> m5_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_55 -> m5_60  [color=darkseagreen4, key=1, label=allMembers, style=dashed];
m5_55 -> m5_75  [color=darkseagreen4, key=1, label=allMembers, style=dashed];
m5_58 -> m5_68  [color=darkseagreen4, key=1, label=dataContractAttribute, style=dashed];
m5_56 -> m5_63  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m5_56 -> m5_65  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m5_56 -> m5_67  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m5_56 -> m5_69  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m5_56 -> m5_71  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m5_56 -> m5_78  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m5_56 -> m5_79  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m5_60 -> m5_68  [color=darkseagreen4, key=1, label=member, style=dashed];
m5_60 -> m5_64  [color=darkseagreen4, key=1, label=member, style=dashed];
m5_60 -> m5_66  [color=darkseagreen4, key=1, label=member, style=dashed];
m5_60 -> m5_62  [color=darkseagreen4, key=1, label=member, style=dashed];
m5_60 -> m5_63  [color=darkseagreen4, key=1, label=member, style=dashed];
m5_60 -> m5_65  [color=darkseagreen4, key=1, label=member, style=dashed];
m5_60 -> m5_67  [color=darkseagreen4, key=1, label=member, style=dashed];
m5_60 -> m5_69  [color=darkseagreen4, key=1, label=member, style=dashed];
m5_60 -> m5_70  [color=darkseagreen4, key=1, label=member, style=dashed];
m5_60 -> m5_71  [color=darkseagreen4, key=1, label=member, style=dashed];
m5_75 -> m5_78  [color=darkseagreen4, key=1, label=member, style=dashed];
m5_160 -> m5_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_159 -> m5_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_288 -> m5_290  [color=darkseagreen4, key=1, label=constructors, style=dashed];
m5_28 -> m5_30  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_33 -> m5_35  [color=darkseagreen4, key=1, label=key, style=dashed];
m5_36 -> m5_42  [color=darkseagreen4, key=1, label=contract, style=dashed];
m5_448 -> m5_465  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m5_444 -> m5_459  [color=darkseagreen4, key=1, label=contract, style=dashed];
m5_444 -> m5_461  [color=darkseagreen4, key=1, label=contract, style=dashed];
m5_454 -> m5_459  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
m5_454 -> m5_457  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
m5_449 -> m5_465  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_453 -> m5_457  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m5_453 -> m5_455  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m5_522 -> m5_524  [color=darkseagreen4, key=1, label=contract, style=dashed];
m5_620 -> m5_641  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m5_620 -> m5_642  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m5_620 -> m5_648  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m5_641 -> m5_648  [color=darkseagreen4, key=1, label=allowNonPublicAccess, style=dashed];
m5_635 -> m5_641  [color=darkseagreen4, key=1, label=property, style=dashed];
m5_635 -> m5_648  [color=darkseagreen4, key=1, label=property, style=dashed];
m5_635 -> m5_649  [color=darkseagreen4, key=1, label=property, style=dashed];
m5_268 -> m5_268  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_193 -> m5_601  [color=green, key=1, label="System.Type", style=dashed];
m5_193 -> m5_600  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_154 -> m5_243  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m5_199 -> m5_212  [color=darkseagreen4, key=1, label=extensionDataAttribute, style=dashed];
m5_199 -> m5_219  [color=darkseagreen4, key=1, label=extensionDataAttribute, style=dashed];
m5_202 -> m5_204  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_202 -> m5_208  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_213 -> m5_242  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m5_213 -> m5_245  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m5_217 -> m5_245  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_217 -> m5_246  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_216 -> m5_246  [color=darkseagreen4, key=1, label=setExtensionDataDictionaryValue, style=dashed];
m5_222 -> m5_258  [color=darkseagreen4, key=1, label=createEnumerableWrapper, style=dashed];
m5_730 -> m5_733  [color=darkseagreen4, key=1, label=shouldSerializeMethod, style=dashed];
m5_734 -> m5_737  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_733 -> m5_737  [color=darkseagreen4, key=1, label=shouldSerializeCall, style=dashed];
m5_378 -> m5_384  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_396 -> m5_396  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m5_400 -> m5_400  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m5_404 -> m5_404  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m5_408 -> m5_408  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m5_412 -> m5_412  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m5_392 -> m5_396  [color=darkseagreen4, key=1, label=method, style=dashed];
m5_392 -> m5_400  [color=darkseagreen4, key=1, label=method, style=dashed];
m5_392 -> m5_404  [color=darkseagreen4, key=1, label=method, style=dashed];
m5_392 -> m5_408  [color=darkseagreen4, key=1, label=method, style=dashed];
m5_392 -> m5_412  [color=darkseagreen4, key=1, label=method, style=dashed];
m5_392 -> m5_398  [color=darkseagreen4, key=1, label=method, style=dashed];
m5_392 -> m5_402  [color=darkseagreen4, key=1, label=method, style=dashed];
m5_392 -> m5_406  [color=darkseagreen4, key=1, label=method, style=dashed];
m5_392 -> m5_410  [color=darkseagreen4, key=1, label=method, style=dashed];
m5_392 -> m5_414  [color=darkseagreen4, key=1, label=method, style=dashed];
m5_395 -> m5_400  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m5_395 -> m5_404  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m5_395 -> m5_408  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m5_395 -> m5_412  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m5_385 -> m5_396  [color=darkseagreen4, key=1, label=currentOnSerializing, style=dashed];
m5_386 -> m5_400  [color=darkseagreen4, key=1, label=currentOnSerialized, style=dashed];
m5_387 -> m5_404  [color=darkseagreen4, key=1, label=currentOnDeserializing, style=dashed];
m5_388 -> m5_408  [color=darkseagreen4, key=1, label=currentOnDeserialized, style=dashed];
m5_389 -> m5_412  [color=darkseagreen4, key=1, label=currentOnError, style=dashed];
m5_394 -> m5_396  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m5_384 -> m5_392  [color=darkseagreen4, key=1, label=baseType, style=dashed];
m5_390 -> m5_396  [color=darkseagreen4, key=1, label=skipSerializing, style=dashed];
m5_397 -> m5_416  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m5_401 -> m5_416  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m5_405 -> m5_416  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m5_391 -> m5_408  [color=darkseagreen4, key=1, label=skipDeserialized, style=dashed];
m5_409 -> m5_416  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m5_413 -> m5_416  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
m5_383 -> m5_416  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
m5_379 -> m5_416  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m5_380 -> m5_416  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m5_381 -> m5_416  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m5_382 -> m5_416  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m5_101 -> m5_103  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m5_150 -> m5_279  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_150 -> m5_280  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_274 -> m5_285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_274 -> m5_277  [color=darkseagreen4, key=1, label=markedConstructors, style=dashed];
m5_274 -> m5_278  [color=darkseagreen4, key=1, label=markedConstructors, style=dashed];
m5_468 -> m5_478  [color=darkseagreen4, key=1, label=contract, style=dashed];
m5_468 -> m5_480  [color=darkseagreen4, key=1, label=contract, style=dashed];
m5_473 -> m5_478  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
m5_473 -> m5_476  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
m5_472 -> m5_476  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m5_472 -> m5_474  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m5_728 -> m5_755  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_728 -> m5_756  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_764 -> m5_766  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_764 -> m5_767  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_174 -> m5_181  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m5_174 -> m5_189  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m5_174 -> m5_178  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m5_174 -> m5_180  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m5_182 -> m5_184  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_185 -> m5_187  [color=darkseagreen4, key=1, label=keyType, style=dashed];
m5_244 -> m5_246  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m5_239 -> m5_246  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_239 -> m5_245  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_166 -> m5_168  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_166 -> m5_169  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_240 -> m5_246  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m5_255 -> m5_258  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m5_167 -> m5_169  [color=darkseagreen4, key=1, label=m, style=dashed];
m5_167 -> m5_170  [color=darkseagreen4, key=1, label=m, style=dashed];
m5_335 -> m5_714  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m5_335 -> m5_697  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_335 -> m5_698  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m5_335 -> m5_722  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m5_659 -> m5_714  [color=green, key=1, label=propertyAttribute, style=dashed];
m5_659 -> m5_663  [color=green, key=1, label=propertyAttribute, style=dashed];
m5_659 -> m5_673  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m5_659 -> m5_683  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m5_657 -> m5_666  [color=green, key=1, label=dataMemberAttribute, style=dashed];
m5_657 -> m5_688  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m5_658 -> m5_666  [color=green, key=1, label=dataMemberAttribute, style=dashed];
m5_658 -> m5_688  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m5_653 -> m5_656  [color=darkseagreen4, key=1, label=dataContractAttribute, style=dashed];
m5_654 -> m5_656  [color=darkseagreen4, key=1, label=memberInfo, style=dashed];
m5_660 -> m5_693  [color=darkseagreen4, key=1, label=requiredAttribute, style=dashed];
m5_671 -> m5_675  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m5_717 -> m5_724  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m5_719 -> m5_724  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m5_721 -> m5_724  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m5_682 -> m5_720  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m5_687 -> m5_720  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m5_692 -> m5_720  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m5_695 -> m5_720  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m5_484 -> m5_486  [color=darkseagreen4, key=1, label=contract, style=dashed];
m5_557 -> m5_573  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_569 -> m5_571  [color=darkseagreen4, key=1, label=converter, style=dashed];
m5_420 -> m5_582  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m5_420 -> m5_584  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m5_420 -> m5_586  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m5_420 -> m5_588  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m5_420 -> m5_591  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m5_420 -> m5_593  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m5_420 -> m5_581  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m5_420 -> m5_583  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m5_420 -> m5_585  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m5_420 -> m5_587  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m5_420 -> m5_589  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_420 -> m5_590  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
m5_420 -> m5_592  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
m5_594 -> m5_596  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m5_1 -> m5_772  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m5_2 -> m5_772  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m5_758 -> m5_760  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_758 -> m5_761  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_434 -> m5_436  [color=darkseagreen4, key=1, label=current, style=dashed];
m5_433 -> m5_436  [color=darkseagreen4, key=1, label=ret, style=dashed];
m5_433 -> m5_438  [color=darkseagreen4, key=1, label=ret, style=dashed];
m5_433 -> m5_439  [color=darkseagreen4, key=1, label=ret, style=dashed];
m5_418 -> m5_425  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_606 -> m5_610  [color=darkseagreen4, key=1, label=members, style=dashed];
m5_609 -> m5_616  [color=darkseagreen4, key=1, label=properties, style=dashed];
m5_617 -> m5_623  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_611 -> m5_616  [color=darkseagreen4, key=1, label=property, style=dashed];
m5_775 -> m5_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_641  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_115  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_445  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_469  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_485  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_491  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_497  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_508  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_528  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_534  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_536  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_538  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_540  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_545  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_546  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_548  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_550  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_551  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_628  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_648  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_718  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_754  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_755  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_759  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_760  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_765  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_766  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_767  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_775 -> m5_770  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m5_779 -> m5_243  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m5_778 -> m5_242  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m5_778 -> m5_245  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m5_781 -> m5_246  [color=darkseagreen4, key=1, label=setExtensionDataDictionaryValue, style=dashed];
m5_785 -> m5_519  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m5_774 -> m5_12  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m5_787 -> m5_752  [color=darkseagreen4, key=1, label=specifiedPropertyGet, style=dashed];
m5_786 -> m5_737  [color=darkseagreen4, key=1, label=shouldSerializeCall, style=dashed];
m5_784 -> m5_465  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m5_773 -> m5_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m5_773 -> m5_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m5_773 -> m5_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m5_776 -> m5_156  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m5_782 -> m5_258  [color=darkseagreen4, key=1, label=createEnumerableWrapper, style=dashed];
m5_783 -> m5_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", style=dashed];
m5_783 -> m5_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", style=dashed];
m6_17 -> m6_20  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_17 -> m6_23  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_18 -> m6_20  [color=darkseagreen4, key=1, label=mappings, style=dashed];
m6_18 -> m6_23  [color=darkseagreen4, key=1, label=mappings, style=dashed];
m6_22 -> m6_24  [color=darkseagreen4, key=1, label=reference, style=dashed];
m6_32 -> m6_34  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_11 -> m6_13  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_36 -> m6_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultReferenceResolver", style=dashed];
m6_36 -> m6_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultReferenceResolver", style=dashed];
m6_36 -> m6_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultReferenceResolver", style=dashed];
m6_36 -> m6_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultReferenceResolver", style=dashed];
m7_2 -> m7_4  [color=darkseagreen4, key=1, label=node, style=dashed];
m8_154 -> m8_156  [color=darkseagreen4, key=1, label="out string", style=dashed];
m8_25 -> m8_29  [color=darkseagreen4, key=1, label=T, style=dashed];
m8_25 -> m8_30  [color=darkseagreen4, key=1, label=T, style=dashed];
m8_29 -> m8_35  [color=darkseagreen4, key=1, label=underlyingType, style=dashed];
m8_30 -> m8_34  [color=darkseagreen4, key=1, label=num, style=dashed];
m8_31 -> m8_33  [color=darkseagreen4, key=1, label=enumNameValues, style=dashed];
m8_31 -> m8_36  [color=darkseagreen4, key=1, label=enumNameValues, style=dashed];
m8_26 -> m8_28  [color=darkseagreen4, key=1, label=enumType, style=dashed];
m8_27 -> m8_30  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_32 -> m8_35  [color=darkseagreen4, key=1, label=selectedFlagsValues, style=dashed];
m8_32 -> m8_36  [color=darkseagreen4, key=1, label=selectedFlagsValues, style=dashed];
m8_32 -> m8_37  [color=darkseagreen4, key=1, label=selectedFlagsValues, style=dashed];
m8_32 -> m8_38  [color=darkseagreen4, key=1, label=selectedFlagsValues, style=dashed];
m8_33 -> m8_35  [color=darkseagreen4, key=1, label=enumNameValue, style=dashed];
m8_36 -> m8_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_97 -> m8_122  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_97 -> m8_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_97 -> m8_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_97 -> m8_114  [color=darkseagreen4, key=1, label=bool, style=dashed];
m8_97 -> m8_123  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_107 -> m8_111  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_101 -> m8_103  [color=darkseagreen4, key=1, label=map, style=dashed];
m8_106 -> m8_108  [color=darkseagreen4, key=1, label=names, style=dashed];
m8_113 -> m8_117  [color=darkseagreen4, key=1, label=finalEnumText, style=dashed];
m8_113 -> m8_118  [color=darkseagreen4, key=1, label=finalEnumText, style=dashed];
m8_113 -> m8_123  [color=darkseagreen4, key=1, label=finalEnumText, style=dashed];
m8_115 -> m8_121  [color=darkseagreen4, key=1, label=isNumber, style=dashed];
m8_111 -> m8_111  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_116 -> m8_118  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_116 -> m8_120  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_120 -> m8_120  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_2 -> m8_12  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m8_1 -> m8_7  [color=darkseagreen4, key=1, label=assemblyName, style=dashed];
m8_1 -> m8_9  [color=darkseagreen4, key=1, label=map, style=dashed];
m8_1 -> m8_10  [color=darkseagreen4, key=1, label=map, style=dashed];
m8_1 -> m8_3  [color=darkseagreen4, key=1, label=assemblyName, style=dashed];
m8_3 -> m8_9  [color=darkseagreen4, key=1, label=n1, style=dashed];
m8_5 -> m8_9  [color=darkseagreen4, key=1, label=n2, style=dashed];
m8_5 -> m8_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_5 -> m8_7  [color=darkseagreen4, key=1, label=n2, style=dashed];
m8_5 -> m8_10  [color=darkseagreen4, key=1, label=assembly, style=dashed];
m8_40 -> m8_42  [color=darkseagreen4, key=1, label="out string", style=dashed];
m8_19 -> m8_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_20 -> m8_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m8_21 -> m8_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m8_46 -> m8_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder", style=dashed];
m8_44 -> m8_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m8_44 -> m8_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m8_44 -> m8_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m8_134 -> m8_143  [color=darkseagreen4, key=1, label=bool, style=dashed];
m8_137 -> m8_146  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_136 -> m8_138  [color=darkseagreen4, key=1, label=names, style=dashed];
m8_139 -> m8_141  [color=darkseagreen4, key=1, label=name, style=dashed];
m8_146 -> m8_146  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_135 -> m8_141  [color=darkseagreen4, key=1, label=map, style=dashed];
m8_55 -> m8_59  [color=green, key=1, label="System.Type", style=dashed];
m8_55 -> m8_67  [color=green, key=1, label="System.Type", style=dashed];
m8_55 -> m8_57  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_55 -> m8_58  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_60 -> m8_67  [color=green, key=1, label=enumValues, style=dashed];
m8_60 -> m8_64  [color=darkseagreen4, key=1, label=enumValues, style=dashed];
m8_60 -> m8_65  [color=darkseagreen4, key=1, label=enumValues, style=dashed];
m8_63 -> m8_67  [color=green, key=1, label=i, style=dashed];
m8_63 -> m8_65  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_63 -> m8_68  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_61 -> m8_65  [color=darkseagreen4, key=1, label=enumNames, style=dashed];
m8_62 -> m8_65  [color=darkseagreen4, key=1, label=nameValues, style=dashed];
m8_62 -> m8_69  [color=darkseagreen4, key=1, label=nameValues, style=dashed];
m8_68 -> m8_68  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_45 -> m8_31  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m8_76 -> m8_91  [color=green, key=1, label="System.Type", style=dashed];
m8_76 -> m8_93  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_92 -> m8_94  [color=darkseagreen4, key=1, label=values, style=dashed];
m8_92 -> m8_95  [color=darkseagreen4, key=1, label=values, style=dashed];
m8_75 -> m8_81  [color=green, key=1, label="System.Type", style=dashed];
m8_75 -> m8_83  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_82 -> m8_85  [color=darkseagreen4, key=1, label=values, style=dashed];
m8_82 -> m8_86  [color=darkseagreen4, key=1, label=values, style=dashed];
m9_564 -> m9_566  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_563 -> m9_567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_414 -> m9_416  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_413 -> m9_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_659 -> m9_665  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_660 -> m9_668  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_661 -> m9_671  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_657 -> m9_659  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_657 -> m9_660  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_657 -> m9_661  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_657 -> m9_666  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_657 -> m9_669  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_657 -> m9_672  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_657 -> m9_662  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_657 -> m9_663  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_273 -> m9_275  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_272 -> m9_276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_2 -> m9_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_1 -> m9_8  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_20 -> m9_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_19 -> m9_23  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_340 -> m9_344  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_334 -> m9_336  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_341 -> m9_341  [color=darkseagreen4, key=1, label=j, style=dashed];
m9_337 -> m9_341  [color=darkseagreen4, key=1, label=j, style=dashed];
m9_80 -> m9_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_79 -> m9_83  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_157 -> m9_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_156 -> m9_160  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_164 -> m9_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_163 -> m9_167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_578 -> m9_580  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_577 -> m9_581  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_191 -> m9_196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_192 -> m9_195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_502 -> m9_504  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_501 -> m9_505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_382 -> m9_384  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_388 -> m9_390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_385 -> m9_391  [color=darkseagreen4, key=1, label=j, style=dashed];
m9_391 -> m9_391  [color=darkseagreen4, key=1, label=j, style=dashed];
m9_243 -> m9_245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_242 -> m9_246  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_484 -> m9_486  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_483 -> m9_487  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_511 -> m9_515  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_508 -> m9_511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_508 -> m9_510  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_508 -> m9_516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_508 -> m9_512  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_508 -> m9_513  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_405 -> m9_407  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_404 -> m9_408  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_605 -> m9_609  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_602 -> m9_605  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_602 -> m9_604  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_602 -> m9_610  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_602 -> m9_606  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_602 -> m9_607  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_623 -> m9_625  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_622 -> m9_626  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_150 -> m9_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_149 -> m9_153  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_687 -> m9_689  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_422 -> m9_424  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_421 -> m9_425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_178 -> m9_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_171 -> m9_178  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_171 -> m9_173  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_171 -> m9_174  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_171 -> m9_175  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_171 -> m9_176  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_171 -> m9_177  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_171 -> m9_181  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_695 -> m9_697  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_695 -> m9_700  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_697 -> m9_699  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_630 -> m9_632  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_629 -> m9_633  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_250 -> m9_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_249 -> m9_253  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_430 -> m9_432  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_429 -> m9_433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_13 -> m9_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_12 -> m9_16  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_438 -> m9_440  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_437 -> m9_441  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_615 -> m9_617  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_614 -> m9_618  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_706  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_707  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_710  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_711  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_712  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_713  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_715  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_716  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_718  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_719  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_721  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_722  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_727  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_728  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_704 -> m9_729  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_707 -> m9_731  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_719 -> m9_734  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_201 -> m9_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_200 -> m9_204  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_596 -> m9_598  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_595 -> m9_599  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_235 -> m9_237  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_224 -> m9_235  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_224 -> m9_226  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_224 -> m9_227  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_224 -> m9_228  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_224 -> m9_229  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_224 -> m9_230  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_224 -> m9_231  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_224 -> m9_232  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_224 -> m9_233  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_224 -> m9_234  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_224 -> m9_238  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_455 -> m9_457  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_454 -> m9_458  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_463 -> m9_465  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_462 -> m9_466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_143 -> m9_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_142 -> m9_146  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_35 -> m9_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_34 -> m9_38  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_27 -> m9_29  [color=green, key=1, label="lambda expression", style=dashed];
m9_26 -> m9_30  [color=green, key=1, label=reader, style=dashed];
m9_357 -> m9_360  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_350 -> m9_352  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_350 -> m9_353  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_358 -> m9_358  [color=darkseagreen4, key=1, label=j, style=dashed];
m9_349 -> m9_353  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_354 -> m9_358  [color=darkseagreen4, key=1, label=j, style=dashed];
m9_477 -> m9_479  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_476 -> m9_480  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_549 -> m9_551  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_548 -> m9_552  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_492 -> m9_497  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_490 -> m9_492  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_490 -> m9_498  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_490 -> m9_493  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_490 -> m9_494  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_71 -> m9_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_62 -> m9_71  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_62 -> m9_64  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_62 -> m9_65  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_62 -> m9_66  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_62 -> m9_67  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_62 -> m9_68  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_62 -> m9_69  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_62 -> m9_70  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_62 -> m9_76  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_638 -> m9_642  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_636 -> m9_638  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_636 -> m9_643  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_636 -> m9_639  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_636 -> m9_640  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_99 -> m9_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_100 -> m9_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_105 -> m9_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_110 -> m9_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_111 -> m9_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_112 -> m9_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_96 -> m9_99  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_96 -> m9_100  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_96 -> m9_105  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_96 -> m9_110  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_96 -> m9_111  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_96 -> m9_112  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_96 -> m9_117  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_96 -> m9_120  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_96 -> m9_102  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_96 -> m9_103  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_96 -> m9_123  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_96 -> m9_107  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_96 -> m9_108  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_96 -> m9_126  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_96 -> m9_129  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_96 -> m9_132  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_520 -> m9_522  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_519 -> m9_523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_265 -> m9_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_264 -> m9_268  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_321 -> m9_323  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_321 -> m9_324  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_321 -> m9_325  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_321 -> m9_326  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_321 -> m9_328  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_321 -> m9_329  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_321 -> m9_330  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_446 -> m9_448  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_445 -> m9_449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_89 -> m9_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_86 -> m9_89  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_86 -> m9_88  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_86 -> m9_92  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_556 -> m9_558  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_555 -> m9_559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_136 -> m9_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_135 -> m9_139  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_740 -> m9_742  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_738 -> m9_740  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_738 -> m9_743  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_217 -> m9_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_216 -> m9_220  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_677 -> m9_682  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_676 -> m9_683  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_396 -> m9_398  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_395 -> m9_399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_587 -> m9_591  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_585 -> m9_587  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_585 -> m9_592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_585 -> m9_588  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_585 -> m9_589  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_285 -> m9_291  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_280 -> m9_285  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_280 -> m9_282  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_280 -> m9_283  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_280 -> m9_284  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_280 -> m9_292  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_280 -> m9_286  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_280 -> m9_287  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_280 -> m9_288  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_470 -> m9_472  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_469 -> m9_473  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_184 -> m9_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_530 -> m9_534  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_529 -> m9_535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_540 -> m9_542  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_539 -> m9_543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_299 -> m9_307  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_300 -> m9_310  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_301 -> m9_313  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_302 -> m9_316  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_296 -> m9_299  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_296 -> m9_300  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_296 -> m9_301  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_296 -> m9_302  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_296 -> m9_298  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_296 -> m9_308  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_296 -> m9_311  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_296 -> m9_314  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_296 -> m9_317  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_296 -> m9_303  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_296 -> m9_304  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_296 -> m9_305  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_571 -> m9_573  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_570 -> m9_574  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_649 -> m9_653  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_646 -> m9_649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_646 -> m9_648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_646 -> m9_654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_646 -> m9_650  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_646 -> m9_651  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_43 -> m9_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_45 -> m9_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_47 -> m9_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_42 -> m9_50  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_44 -> m9_53  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_46 -> m9_57  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_258 -> m9_260  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_256 -> m9_258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_256 -> m9_261  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_366 -> m9_368  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_372 -> m9_374  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_369 -> m9_375  [color=darkseagreen4, key=1, label=j, style=dashed];
m9_375 -> m9_375  [color=darkseagreen4, key=1, label=j, style=dashed];
m9_209 -> m9_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_208 -> m9_212  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_748 -> m9_30  [color=green, key=1, label=reader, style=dashed];
m9_749 -> m9_38  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_752 -> m9_83  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_753 -> m9_92  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_811 -> m9_743  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_745 -> m9_8  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_746 -> m9_16  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_747 -> m9_23  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_750 -> m9_50  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_750 -> m9_53  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_750 -> m9_57  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_751 -> m9_76  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_754 -> m9_117  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_754 -> m9_120  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_754 -> m9_123  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_754 -> m9_126  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_754 -> m9_129  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_754 -> m9_132  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_755 -> m9_139  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_756 -> m9_146  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_757 -> m9_153  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_758 -> m9_160  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_759 -> m9_167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_760 -> m9_181  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_761 -> m9_196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_762 -> m9_204  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_763 -> m9_212  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_764 -> m9_220  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_765 -> m9_238  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_766 -> m9_246  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_767 -> m9_253  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_768 -> m9_261  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_769 -> m9_268  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_770 -> m9_276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_771 -> m9_292  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_772 -> m9_308  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_772 -> m9_311  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_772 -> m9_314  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_772 -> m9_317  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m9_775 -> m9_399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_776 -> m9_408  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_777 -> m9_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_778 -> m9_425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_779 -> m9_433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_780 -> m9_441  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_781 -> m9_449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_782 -> m9_458  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_783 -> m9_466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_784 -> m9_473  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_785 -> m9_480  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_786 -> m9_487  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_787 -> m9_498  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_788 -> m9_505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_789 -> m9_516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_790 -> m9_523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_791 -> m9_535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_792 -> m9_543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_793 -> m9_552  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_794 -> m9_559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_795 -> m9_567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_796 -> m9_574  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_797 -> m9_581  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_798 -> m9_592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_799 -> m9_599  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_800 -> m9_610  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_801 -> m9_618  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_802 -> m9_626  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_803 -> m9_633  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_804 -> m9_643  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_805 -> m9_654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_806 -> m9_666  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_806 -> m9_669  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_806 -> m9_672  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_807 -> m9_683  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_809 -> m9_700  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_810 -> m9_732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_810 -> m9_735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_23 -> m11_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_23 -> m11_27  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_23 -> m11_28  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_23 -> m11_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_23 -> m11_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_24 -> m11_33  [color=darkseagreen4, key=1, label=nullable, style=dashed];
m11_25 -> m11_35  [color=darkseagreen4, key=1, label=t, style=dashed];
m11_32 -> m11_37  [color=darkseagreen4, key=1, label=dateText, style=dashed];
m11_32 -> m11_38  [color=darkseagreen4, key=1, label=dateText, style=dashed];
m11_32 -> m11_40  [color=darkseagreen4, key=1, label=dateText, style=dashed];
m11_32 -> m11_41  [color=darkseagreen4, key=1, label=dateText, style=dashed];
m11_0 -> m11_2  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_0 -> m11_7  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_0 -> m11_12  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_0 -> m11_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_1 -> m11_13  [color=darkseagreen4, key=1, label=text, style=dashed];
m11_51 -> m11_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IsoDateTimeConverter", style=dashed];
m11_51 -> m11_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IsoDateTimeConverter", style=dashed];
m11_51 -> m11_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IsoDateTimeConverter", style=dashed];
m11_51 -> m11_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IsoDateTimeConverter", style=dashed];
m11_51 -> m11_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IsoDateTimeConverter", style=dashed];
m11_51 -> m11_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IsoDateTimeConverter", style=dashed];
m11_51 -> m11_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IsoDateTimeConverter", style=dashed];
m11_51 -> m11_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IsoDateTimeConverter", style=dashed];
m12_13 -> m12_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.IArrayPool<char>", style=dashed];
m12_13 -> m12_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_13 -> m12_16  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m12_13 -> m12_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.IArrayPool<char>", style=dashed];
m12_22 -> m12_24  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_22 -> m12_25  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_21 -> m12_24  [color=darkseagreen4, key=1, label=escapeChars, style=dashed];
m12_21 -> m12_26  [color=darkseagreen4, key=1, label=escapeChars, style=dashed];
m12_21 -> m12_28  [color=darkseagreen4, key=1, label=escapeChars, style=dashed];
m12_21 -> m12_30  [color=darkseagreen4, key=1, label=escapeChars, style=dashed];
m12_25 -> m12_25  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_36 -> m12_39  [color=darkseagreen4, key=1, label=char, style=dashed];
m12_0 -> m12_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_125 -> m12_129  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_129 -> m12_129  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m12_127 -> m12_129  [color=darkseagreen4, key=1, label=w, style=dashed];
m12_127 -> m12_130  [color=darkseagreen4, key=1, label=w, style=dashed];
m12_126 -> m12_129  [color=darkseagreen4, key=1, label=charEscapeFlags, style=dashed];
m12_7 -> m12_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.IArrayPool<char>", style=dashed];
m12_51 -> m12_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.IArrayPool<char>", style=dashed];
m12_51 -> m12_53  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m12_51 -> m12_54  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_51 -> m12_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_51 -> m12_59  [color=darkseagreen4, key=1, label="bool[]", style=dashed];
m12_51 -> m12_80  [color=darkseagreen4, key=1, label="bool[]", style=dashed];
m12_51 -> m12_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.StringEscapeHandling", style=dashed];
m12_51 -> m12_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.StringEscapeHandling", style=dashed];
m12_51 -> m12_85  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_51 -> m12_87  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_51 -> m12_95  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_51 -> m12_98  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_51 -> m12_101  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_51 -> m12_102  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m12_51 -> m12_105  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m12_51 -> m12_106  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m12_51 -> m12_109  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m12_51 -> m12_111  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_51 -> m12_113  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_51 -> m12_114  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m12_51 -> m12_115  [color=darkseagreen4, key=1, label=bool, style=dashed];
m12_51 -> m12_116  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m12_51 -> m12_117  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_86 -> m12_99  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_86 -> m12_95  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_86 -> m12_98  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_86 -> m12_101  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_86 -> m12_102  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_86 -> m12_106  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_86 -> m12_111  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_86 -> m12_113  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_86 -> m12_114  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_86 -> m12_117  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_100 -> m12_102  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_100 -> m12_106  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_100 -> m12_111  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_100 -> m12_113  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_100 -> m12_114  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_100 -> m12_117  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_58 -> m12_61  [color=darkseagreen4, key=1, label=c, style=dashed];
m12_58 -> m12_80  [color=darkseagreen4, key=1, label=c, style=dashed];
m12_58 -> m12_81  [color=darkseagreen4, key=1, label=c, style=dashed];
m12_58 -> m12_83  [color=darkseagreen4, key=1, label=c, style=dashed];
m12_58 -> m12_87  [color=darkseagreen4, key=1, label=c, style=dashed];
m12_96 -> m12_98  [color=darkseagreen4, key=1, label=newBuffer, style=dashed];
m12_110 -> m12_113  [color=darkseagreen4, key=1, label=length, style=dashed];
m12_110 -> m12_114  [color=darkseagreen4, key=1, label=length, style=dashed];
m12_112 -> m12_117  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_112 -> m12_114  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m12_91 -> m12_97  [color=darkseagreen4, key=1, label=isEscapedUnicodeText, style=dashed];
m12_91 -> m12_104  [color=darkseagreen4, key=1, label=isEscapedUnicodeText, style=dashed];
m12_55 -> m12_101  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m12_55 -> m12_113  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m12_55 -> m12_92  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m12_55 -> m12_108  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m12_56 -> m12_92  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_56 -> m12_107  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_107 -> m12_107  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_89 -> m12_105  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m12_82 -> m12_105  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m12_84 -> m12_105  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m12_88 -> m12_105  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m12_93 -> m12_95  [color=darkseagreen4, key=1, label=length, style=dashed];
m12_93 -> m12_101  [color=darkseagreen4, key=1, label=length, style=dashed];
m12_93 -> m12_102  [color=darkseagreen4, key=1, label=length, style=dashed];
m12_94 -> m12_101  [color=darkseagreen4, key=1, label=start, style=dashed];
m12_94 -> m12_102  [color=darkseagreen4, key=1, label=start, style=dashed];
m12_103 -> m12_113  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m12_103 -> m12_108  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m14_31 -> m14_38  [color=darkseagreen4, key=1, label=int, style=dashed];
m14_31 -> m14_39  [color=darkseagreen4, key=1, label=int, style=dashed];
m14_0 -> m14_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>", style=dashed];
m14_0 -> m14_23  [color=darkseagreen4, key=1, label=bool, style=dashed];
m14_0 -> m14_25  [color=darkseagreen4, key=1, label=bool, style=dashed];
m14_3 -> m14_26  [color=darkseagreen4, key=1, label=t, style=dashed];
m14_4 -> m14_21  [color=darkseagreen4, key=1, label=a, style=dashed];
m14_14 -> m14_18  [color=darkseagreen4, key=1, label=startIndex, style=dashed];
m14_16 -> m14_18  [color=darkseagreen4, key=1, label=stopIndex, style=dashed];
m14_16 -> m14_20  [color=darkseagreen4, key=1, label=stopIndex, style=dashed];
m14_17 -> m14_20  [color=darkseagreen4, key=1, label=positiveStep, style=dashed];
m14_19 -> m14_21  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_41 -> m14_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter", style=dashed];
m14_41 -> m14_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter", style=dashed];
m14_41 -> m14_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter", style=dashed];
m14_41 -> m14_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter", style=dashed];
m14_41 -> m14_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter", style=dashed];
m14_41 -> m14_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter", style=dashed];
m15_10 -> m15_21  [color=darkseagreen4, key=1, label=currentPartStartIndex, style=dashed];
m15_22 -> m15_25  [color=darkseagreen4, key=1, label=lastCharacterIndex, style=dashed];
m15_107 -> m15_202  [color=darkseagreen4, key=1, label=char, style=dashed];
m15_240 -> m15_254  [color=darkseagreen4, key=1, label=rootExpression, style=dashed];
m15_240 -> m15_264  [color=darkseagreen4, key=1, label=rootExpression, style=dashed];
m15_240 -> m15_275  [color=darkseagreen4, key=1, label=rootExpression, style=dashed];
m15_241 -> m15_252  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m15_241 -> m15_253  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m15_241 -> m15_259  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m15_241 -> m15_261  [color=green, key=1, label=parentExpression, style=dashed];
m15_241 -> m15_266  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m15_241 -> m15_270  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m15_241 -> m15_277  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m15_250 -> m15_253  [color=darkseagreen4, key=1, label=booleanExpression, style=dashed];
m15_250 -> m15_255  [color=darkseagreen4, key=1, label=booleanExpression, style=dashed];
m15_250 -> m15_266  [color=darkseagreen4, key=1, label=booleanExpression, style=dashed];
m15_250 -> m15_277  [color=darkseagreen4, key=1, label=booleanExpression, style=dashed];
m15_263 -> m15_266  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m15_263 -> m15_270  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m15_263 -> m15_277  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m15_265 -> m15_275  [color=darkseagreen4, key=1, label=rootExpression, style=dashed];
m15_274 -> m15_277  [color=darkseagreen4, key=1, label=parentExpression, style=dashed];
m15_399 -> m15_401  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>", style=dashed];
m15_400 -> m15_403  [color=darkseagreen4, key=1, label=current, style=dashed];
m15_402 -> m15_403  [color=darkseagreen4, key=1, label=current, style=dashed];
m15_282 -> m15_349  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_348 -> m15_350  [color=darkseagreen4, key=1, label=currentPosition, style=dashed];
m15_348 -> m15_351  [color=darkseagreen4, key=1, label=currentPosition, style=dashed];
m15_351 -> m15_351  [color=darkseagreen4, key=1, label=currentPosition, style=dashed];
m15_88 -> m15_100  [color=darkseagreen4, key=1, label=bool, style=dashed];
m15_96 -> m15_100  [color=darkseagreen4, key=1, label=indexerCloseChar, style=dashed];
m15_96 -> m15_102  [color=darkseagreen4, key=1, label=indexerCloseChar, style=dashed];
m15_96 -> m15_103  [color=darkseagreen4, key=1, label=indexerCloseChar, style=dashed];
m15_284 -> m15_288  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m15_284 -> m15_290  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m15_284 -> m15_307  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m15_284 -> m15_311  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m15_284 -> m15_315  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m15_289 -> m15_305  [color=darkseagreen4, key=1, label=sb, style=dashed];
m15_293 -> m15_305  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m15_319 -> m15_321  [color=darkseagreen4, key=1, label="out object", style=dashed];
m15_298 -> m15_300  [color=darkseagreen4, key=1, label=result, style=dashed];
m15_302 -> m15_304  [color=darkseagreen4, key=1, label=result, style=dashed];
m15_105 -> m15_394  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_28 -> m15_39  [color=darkseagreen4, key=1, label=int, style=dashed];
m15_28 -> m15_43  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>", style=dashed];
m15_28 -> m15_45  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>", style=dashed];
m15_28 -> m15_61  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>", style=dashed];
m15_28 -> m15_70  [color=darkseagreen4, key=1, label=bool, style=dashed];
m15_28 -> m15_76  [color=darkseagreen4, key=1, label=int, style=dashed];
m15_28 -> m15_80  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>", style=dashed];
m15_28 -> m15_81  [color=darkseagreen4, key=1, label=bool, style=dashed];
m15_30 -> m15_43  [color=darkseagreen4, key=1, label=scan, style=dashed];
m15_30 -> m15_45  [color=darkseagreen4, key=1, label=scan, style=dashed];
m15_30 -> m15_61  [color=darkseagreen4, key=1, label=scan, style=dashed];
m15_30 -> m15_80  [color=darkseagreen4, key=1, label=scan, style=dashed];
m15_40 -> m15_43  [color=darkseagreen4, key=1, label=member, style=dashed];
m15_77 -> m15_80  [color=darkseagreen4, key=1, label=member, style=dashed];
m15_32 -> m15_81  [color=darkseagreen4, key=1, label=followingDot, style=dashed];
m15_35 -> m15_45  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m15_35 -> m15_70  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m15_35 -> m15_73  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m15_75 -> m15_81  [color=darkseagreen4, key=1, label=atPathEnd, style=dashed];
m15_75 -> m15_83  [color=darkseagreen4, key=1, label=atPathEnd, style=dashed];
m15_44 -> m15_61  [color=darkseagreen4, key=1, label=scan, style=dashed];
m15_44 -> m15_80  [color=darkseagreen4, key=1, label=scan, style=dashed];
m15_47 -> m15_57  [color=darkseagreen4, key=1, label=int, style=dashed];
m15_58 -> m15_61  [color=darkseagreen4, key=1, label=member, style=dashed];
m15_62 -> m15_80  [color=darkseagreen4, key=1, label=scan, style=dashed];
m15_64 -> m15_80  [color=darkseagreen4, key=1, label=scan, style=dashed];
m15_67 -> m15_76  [color=darkseagreen4, key=1, label=int, style=dashed];
m15_68 -> m15_72  [color=darkseagreen4, key=1, label=followingIndexer, style=dashed];
m15_69 -> m15_81  [color=darkseagreen4, key=1, label=followingDot, style=dashed];
m15_227 -> m15_230  [color=darkseagreen4, key=1, label=expressionPath, style=dashed];
m15_232 -> m15_235  [color=darkseagreen4, key=1, label=value, style=dashed];
m15_329 -> m15_336  [color=darkseagreen4, key=1, label=sb, style=dashed];
m15_329 -> m15_338  [color=darkseagreen4, key=1, label=sb, style=dashed];
m15_329 -> m15_343  [color=darkseagreen4, key=1, label=sb, style=dashed];
m15_329 -> m15_345  [color=darkseagreen4, key=1, label=sb, style=dashed];
m15_332 -> m15_341  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m15_332 -> m15_345  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m15_106 -> m15_377  [color=darkseagreen4, key=1, label=char, style=dashed];
m15_106 -> m15_381  [color=darkseagreen4, key=1, label=bool, style=dashed];
m15_372 -> m15_378  [color=darkseagreen4, key=1, label=fields, style=dashed];
m15_372 -> m15_379  [color=darkseagreen4, key=1, label=fields, style=dashed];
m15_372 -> m15_385  [color=darkseagreen4, key=1, label=fields, style=dashed];
m15_372 -> m15_387  [color=darkseagreen4, key=1, label=fields, style=dashed];
m15_374 -> m15_379  [color=darkseagreen4, key=1, label=field, style=dashed];
m15_374 -> m15_381  [color=darkseagreen4, key=1, label=field, style=dashed];
m15_374 -> m15_387  [color=darkseagreen4, key=1, label=field, style=dashed];
m15_210 -> m15_217  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>", style=dashed];
m15_210 -> m15_220  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>", style=dashed];
m15_213 -> m15_217  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>", style=dashed];
m15_213 -> m15_220  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>", style=dashed];
m15_214 -> m15_217  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>", style=dashed];
m15_214 -> m15_220  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>", style=dashed];
m15_108 -> m15_121  [color=darkseagreen4, key=1, label=char, style=dashed];
m15_108 -> m15_159  [color=darkseagreen4, key=1, label=char, style=dashed];
m15_110 -> m15_179  [color=darkseagreen4, key=1, label=end, style=dashed];
m15_122 -> m15_124  [color=darkseagreen4, key=1, label=length, style=dashed];
m15_122 -> m15_131  [color=darkseagreen4, key=1, label=length, style=dashed];
m15_122 -> m15_138  [color=darkseagreen4, key=1, label=length, style=dashed];
m15_111 -> m15_123  [color=darkseagreen4, key=1, label=indexes, style=dashed];
m15_111 -> m15_128  [color=darkseagreen4, key=1, label=indexes, style=dashed];
m15_111 -> m15_147  [color=darkseagreen4, key=1, label=indexes, style=dashed];
m15_111 -> m15_150  [color=darkseagreen4, key=1, label=indexes, style=dashed];
m15_112 -> m15_130  [color=darkseagreen4, key=1, label=colonCount, style=dashed];
m15_112 -> m15_134  [color=darkseagreen4, key=1, label=colonCount, style=dashed];
m15_112 -> m15_167  [color=darkseagreen4, key=1, label=colonCount, style=dashed];
m15_112 -> m15_169  [color=darkseagreen4, key=1, label=colonCount, style=dashed];
m15_112 -> m15_172  [color=darkseagreen4, key=1, label=colonCount, style=dashed];
m15_172 -> m15_172  [color=darkseagreen4, key=1, label=colonCount, style=dashed];
m15_117 -> m15_121  [color=darkseagreen4, key=1, label=currentCharacter, style=dashed];
m15_117 -> m15_143  [color=darkseagreen4, key=1, label=currentCharacter, style=dashed];
m15_117 -> m15_155  [color=darkseagreen4, key=1, label=currentCharacter, style=dashed];
m15_117 -> m15_160  [color=darkseagreen4, key=1, label=currentCharacter, style=dashed];
m15_117 -> m15_162  [color=darkseagreen4, key=1, label=currentCharacter, style=dashed];
m15_117 -> m15_177  [color=darkseagreen4, key=1, label=currentCharacter, style=dashed];
m15_117 -> m15_178  [color=darkseagreen4, key=1, label=currentCharacter, style=dashed];
m15_117 -> m15_180  [color=darkseagreen4, key=1, label=currentCharacter, style=dashed];
m15_119 -> m15_179  [color=darkseagreen4, key=1, label=end, style=dashed];
m15_148 -> m15_150  [color=darkseagreen4, key=1, label=indexes, style=dashed];
m15_406 -> m15_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_152  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_173  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_197  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_337  [color=green, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_377  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m15_406 -> m15_397  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.JPath", style=dashed];
m17_44 -> m17_44  [color=darkseagreen4, key=1, label=p, style=dashed];
m17_46 -> m17_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m17_46 -> m17_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m17_135 -> m17_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m17_135 -> m17_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m17_135 -> m17_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m17_135 -> m17_140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m17_135 -> m17_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m17_135 -> m17_143  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m17_135 -> m17_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m17_142 -> m17_144  [color=darkseagreen4, key=1, label=p, style=dashed];
m17_142 -> m17_145  [color=darkseagreen4, key=1, label=p, style=dashed];
m17_99 -> m17_101  [color=darkseagreen4, key=1, label=shortie, style=dashed];
m17_16 -> m17_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken[]", style=dashed];
m17_17 -> m17_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_118 -> m17_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_119 -> m17_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_119 -> m17_121  [color=darkseagreen4, key=1, label=value, style=dashed];
m17_117 -> m17_120  [color=darkseagreen4, key=1, label=o, style=dashed];
m17_117 -> m17_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m17_117 -> m17_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m17_120 -> m17_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_27 -> m17_29  [color=darkseagreen4, key=1, label=text, style=dashed];
m17_26 -> m17_29  [color=darkseagreen4, key=1, label=array, style=dashed];
m17_26 -> m17_30  [color=darkseagreen4, key=1, label=array, style=dashed];
m17_28 -> m17_30  [color=darkseagreen4, key=1, label=date, style=dashed];
m17_72 -> m17_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m17_73 -> m17_75  [color=darkseagreen4, key=1, label=rss, style=dashed];
m17_73 -> m17_76  [color=darkseagreen4, key=1, label=rss, style=dashed];
m17_77 -> m17_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_53 -> m17_53  [color=darkseagreen4, key=1, label=p, style=dashed];
m17_132 -> m17_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests", style=dashed];
m17_152 -> m17_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty.JPropertyList", style=dashed];
m17_152 -> m17_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty.JPropertyList", style=dashed];
m17_152 -> m17_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty.JPropertyList", style=dashed];
m17_152 -> m17_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty.JPropertyList", style=dashed];
m17_152 -> m17_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty.JPropertyList", style=dashed];
m17_152 -> m17_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty.JPropertyList", style=dashed];
m17_152 -> m17_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty.JPropertyList", style=dashed];
m17_152 -> m17_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty.JPropertyList", style=dashed];
m17_153 -> m17_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty", style=dashed];
m17_153 -> m17_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty", style=dashed];
m17_153 -> m17_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty", style=dashed];
m17_153 -> m17_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty", style=dashed];
m17_153 -> m17_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty", style=dashed];
m17_153 -> m17_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty", style=dashed];
m17_153 -> m17_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty", style=dashed];
m17_153 -> m17_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty", style=dashed];
m17_153 -> m17_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty", style=dashed];
m17_153 -> m17_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty", style=dashed];
m17_153 -> m17_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty", style=dashed];
m19_65 -> m19_68  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_57 -> m19_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_57 -> m19_61  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_29 -> m19_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_29 -> m19_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_87 -> m19_91  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_52 -> m19_54  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_7 -> m19_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_7 -> m19_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_7 -> m19_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m19_10 -> m19_14  [color=darkseagreen4, key=1, label=keyForItem, style=dashed];
m19_10 -> m19_15  [color=darkseagreen4, key=1, label=keyForItem, style=dashed];
m19_75 -> m19_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m19_75 -> m19_84  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_76 -> m19_78  [color=darkseagreen4, key=1, label=keyForItem, style=dashed];
m19_76 -> m19_81  [color=darkseagreen4, key=1, label=keyForItem, style=dashed];
m19_77 -> m19_82  [color=darkseagreen4, key=1, label=keyAtIndex, style=dashed];
m19_77 -> m19_83  [color=darkseagreen4, key=1, label=keyAtIndex, style=dashed];
m19_101 -> m19_105  [color=darkseagreen4, key=1, label=d2, style=dashed];
m19_101 -> m19_106  [color=darkseagreen4, key=1, label=d2, style=dashed];
m19_101 -> m19_108  [color=darkseagreen4, key=1, label=d2, style=dashed];
m19_101 -> m19_112  [color=darkseagreen4, key=1, label=d2, style=dashed];
m19_100 -> m19_102  [color=darkseagreen4, key=1, label=d1, style=dashed];
m19_100 -> m19_104  [color=darkseagreen4, key=1, label=d1, style=dashed];
m19_100 -> m19_107  [color=darkseagreen4, key=1, label=d1, style=dashed];
m19_100 -> m19_108  [color=darkseagreen4, key=1, label=d1, style=dashed];
m19_100 -> m19_110  [color=darkseagreen4, key=1, label=d1, style=dashed];
m19_110 -> m19_112  [color=darkseagreen4, key=1, label=keyAndProperty, style=dashed];
m19_112 -> m19_112  [color=darkseagreen4, key=1, label=keyAndProperty, style=dashed];
m19_114 -> m19_116  [color=darkseagreen4, key=1, label=p1, style=dashed];
m19_114 -> m19_118  [color=darkseagreen4, key=1, label=p1, style=dashed];
m19_115 -> m19_117  [color=darkseagreen4, key=1, label=p2, style=dashed];
m19_115 -> m19_118  [color=darkseagreen4, key=1, label=p2, style=dashed];
m19_41 -> m19_43  [color=darkseagreen4, key=1, label=key, style=dashed];
m19_123 -> m19_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m19_123 -> m19_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m20_129 -> m20_129  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m20_372 -> m20_374  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m20_219 -> m20_221  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_75 -> m20_77  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_75 -> m20_78  [color=darkseagreen4, key=1, label="Newtonsoft.Json.FloatFormatHandling", style=dashed];
m20_75 -> m20_79  [color=darkseagreen4, key=1, label=bool, style=dashed];
m20_75 -> m20_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_231 -> m20_242  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_239 -> m20_243  [color=darkseagreen4, key=1, label=sw, style=dashed];
m20_240 -> m20_242  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m20_285 -> m20_289  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_252 -> m20_260  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_256 -> m20_259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_145 -> m20_147  [color=darkseagreen4, key=1, label=char, style=dashed];
m20_145 -> m20_148  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_3 -> m20_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.DateFormatHandling", style=dashed];
m20_4 -> m20_7  [color=darkseagreen4, key=1, label=updatedDateTime, style=dashed];
m20_5 -> m20_7  [color=darkseagreen4, key=1, label=writer, style=dashed];
m20_5 -> m20_8  [color=darkseagreen4, key=1, label=writer, style=dashed];
m20_5 -> m20_9  [color=darkseagreen4, key=1, label=writer, style=dashed];
m20_334 -> m20_339  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_335 -> m20_338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_324 -> m20_327  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_325 -> m20_327  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m20_326 -> m20_328  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m20_265 -> m20_296  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m20_292 -> m20_296  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m20_153 -> m20_159  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_153 -> m20_161  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_153 -> m20_163  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_153 -> m20_165  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_153 -> m20_167  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_153 -> m20_169  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_153 -> m20_171  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_153 -> m20_173  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_153 -> m20_175  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_153 -> m20_177  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_153 -> m20_179  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_153 -> m20_181  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_153 -> m20_183  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_153 -> m20_185  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_153 -> m20_187  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_153 -> m20_191  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_153 -> m20_193  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_153 -> m20_195  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_153 -> m20_197  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_153 -> m20_199  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_153 -> m20_201  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_350 -> m20_352  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m20_119 -> m20_121  [color=darkseagreen4, key=1, label=text, style=dashed];
m20_315 -> m20_319  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_316 -> m20_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_382 -> m20_386  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_383 -> m20_386  [color=darkseagreen4, key=1, label=converter, style=dashed];
m20_209 -> m20_228  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_344 -> m20_346  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m20_71 -> m20_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_71 -> m20_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_360 -> m20_364  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_361 -> m20_364  [color=darkseagreen4, key=1, label=converter, style=dashed];
m20_19 -> m20_22  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m20_20 -> m20_22  [color=darkseagreen4, key=1, label=writer, style=dashed];
m20_20 -> m20_23  [color=darkseagreen4, key=1, label=writer, style=dashed];
m20_20 -> m20_24  [color=darkseagreen4, key=1, label=writer, style=dashed];
m20_223 -> m20_236  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_234 -> m20_236  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m20_133 -> m20_136  [color=darkseagreen4, key=1, label="System.Uri", style=dashed];
m20_96 -> m20_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_96 -> m20_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_306 -> m20_310  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_307 -> m20_309  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_214 -> m20_216  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_388 -> m20_260  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_389 -> m20_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Formatting", style=dashed];
m20_390 -> m20_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m20_391 -> m20_310  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_392 -> m20_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m20_393 -> m20_319  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_394 -> m20_319  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m20_395 -> m20_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m20_396 -> m20_339  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_397 -> m20_339  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_398 -> m20_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m24_311 -> m24_316  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_311 -> m24_319  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_311 -> m24_322  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_311 -> m24_323  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_316 -> m24_318  [color=darkseagreen4, key=1, label=dt, style=dashed];
m24_319 -> m24_321  [color=darkseagreen4, key=1, label=dt, style=dashed];
m24_0 -> m24_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m24_2 -> m24_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website", style=dashed];
m24_220 -> m24_228  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_220 -> m24_229  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_220 -> m24_225  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_225 -> m24_227  [color=darkseagreen4, key=1, label=b, style=dashed];
m24_50 -> m24_65  [color=darkseagreen4, key=1, label=t, style=dashed];
m24_389 -> m24_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m24_389 -> m24_403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m24_401 -> m24_403  [color=darkseagreen4, key=1, label=currentObject, style=dashed];
m24_276 -> m24_281  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_276 -> m24_285  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_276 -> m24_289  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_282 -> m24_284  [color=darkseagreen4, key=1, label=dt, style=dashed];
m24_286 -> m24_288  [color=darkseagreen4, key=1, label=dt, style=dashed];
m24_249 -> m24_254  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_249 -> m24_257  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_249 -> m24_258  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_254 -> m24_256  [color=darkseagreen4, key=1, label=d, style=dashed];
m24_186 -> m24_191  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_186 -> m24_194  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_186 -> m24_195  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_191 -> m24_193  [color=darkseagreen4, key=1, label=d, style=dashed];
m24_390 -> m24_394  [color=darkseagreen4, key=1, label=bool, style=dashed];
m24_199 -> m24_218  [color=darkseagreen4, key=1, label=t, style=dashed];
m24_209 -> m24_212  [color=darkseagreen4, key=1, label=b, style=dashed];
m24_210 -> m24_212  [color=darkseagreen4, key=1, label=b, style=dashed];
m24_9 -> m24_13  [color=darkseagreen4, key=1, label=json, style=dashed];
m24_408 -> m24_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m24_69 -> m24_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_69 -> m24_77  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_69 -> m24_78  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_74 -> m24_76  [color=darkseagreen4, key=1, label=i, style=dashed];
m24_233 -> m24_246  [color=darkseagreen4, key=1, label=t, style=dashed];
m24_470 -> m24_472  [color=darkseagreen4, key=1, label=t, style=dashed];
m24_466 -> m24_471  [color=darkseagreen4, key=1, label=t, style=dashed];
m24_466 -> m24_472  [color=darkseagreen4, key=1, label=t, style=dashed];
m24_151 -> m24_161  [color=darkseagreen4, key=1, label=t, style=dashed];
m24_149 -> m24_156  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m24_158 -> m24_160  [color=darkseagreen4, key=1, label=d, style=dashed];
m24_166 -> m24_183  [color=darkseagreen4, key=1, label=t, style=dashed];
m24_107 -> m24_118  [color=darkseagreen4, key=1, label=t, style=dashed];
m24_107 -> m24_142  [color=darkseagreen4, key=1, label=t, style=dashed];
m24_112 -> m24_116  [color=darkseagreen4, key=1, label=data, style=dashed];
m24_112 -> m24_117  [color=darkseagreen4, key=1, label=data, style=dashed];
m24_120 -> m24_123  [color=darkseagreen4, key=1, label=s, style=dashed];
m24_120 -> m24_125  [color=darkseagreen4, key=1, label=s, style=dashed];
m24_135 -> m24_137  [color=darkseagreen4, key=1, label=data, style=dashed];
m24_127 -> m24_129  [color=darkseagreen4, key=1, label=data, style=dashed];
m24_124 -> m24_129  [color=darkseagreen4, key=1, label=data, style=dashed];
m24_126 -> m24_129  [color=darkseagreen4, key=1, label=data, style=dashed];
m24_295 -> m24_308  [color=darkseagreen4, key=1, label=t, style=dashed];
m24_33 -> m24_40  [color=darkseagreen4, key=1, label=oldPosition, style=dashed];
m24_36 -> m24_40  [color=darkseagreen4, key=1, label=oldPosition, style=dashed];
m24_411 -> m24_421  [color=darkseagreen4, key=1, label=currentObject, style=dashed];
m24_68 -> m24_387  [color=darkseagreen4, key=1, label=bool, style=dashed];
m24_68 -> m24_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m24_96 -> m24_100  [color=green, key=1, label=s, style=dashed];
m24_98 -> m24_100  [color=green, key=1, label=s, style=dashed];
m24_83 -> m24_91  [color=darkseagreen4, key=1, label=t, style=dashed];
m24_83 -> m24_101  [color=darkseagreen4, key=1, label=t, style=dashed];
m24_23 -> m24_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website", style=dashed];
m24_474 -> m24_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_78  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_115  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_179  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_180  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_275  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_287  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_289  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_302  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_307  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_328  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_423  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_438  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_451  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_452  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_456  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_461  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_467  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_474 -> m24_468  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m25_57 -> m25_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m25_57 -> m25_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m25_57 -> m25_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m25_57 -> m25_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m25_57 -> m25_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m25_66 -> m25_68  [color=darkseagreen4, key=1, label=o, style=dashed];
m25_136 -> m25_139  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_136 -> m25_141  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[]", style=dashed];
m25_136 -> m25_143  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[]", style=dashed];
m25_145 -> m25_148  [color=darkseagreen4, key=1, label=index, style=dashed];
m25_148 -> m25_148  [color=darkseagreen4, key=1, label=index, style=dashed];
m25_42 -> m25_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_43 -> m25_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_108 -> m25_111  [color=darkseagreen4, key=1, label=property, style=dashed];
m25_79 -> m25_81  [color=darkseagreen4, key=1, label=token, style=dashed];
m25_79 -> m25_82  [color=darkseagreen4, key=1, label=token, style=dashed];
m25_15 -> m25_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m25_15 -> m25_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m25_19 -> m25_32  [color=darkseagreen4, key=1, label=property, style=dashed];
m25_19 -> m25_22  [color=darkseagreen4, key=1, label=property, style=dashed];
m25_20 -> m25_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_131 -> m25_134  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>", style=dashed];
m25_134 -> m25_134  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>", style=dashed];
m25_86 -> m25_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m25_86 -> m25_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m25_120 -> m25_122  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Linq.JToken", style=dashed];
m25_124 -> m25_124  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>", style=dashed];
m25_91 -> m25_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m25_91 -> m25_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m25_153 -> m25_156  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>", style=dashed];
m25_156 -> m25_156  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>", style=dashed];
m25_50 -> m25_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_169 -> m25_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m25_169 -> m25_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m25_169 -> m25_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m25_169 -> m25_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m25_169 -> m25_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m25_169 -> m25_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m25_169 -> m25_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m25_169 -> m25_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m25_169 -> m25_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m25_169 -> m25_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m25_169 -> m25_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m25_169 -> m25_124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m25_169 -> m25_127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m25_169 -> m25_143  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m25_169 -> m25_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m25_169 -> m25_154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m25_169 -> m25_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m25_169 -> m25_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m25_169 -> m25_166  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m25_170 -> m25_32  [color=darkseagreen4, key=1, label=property, style=dashed];
m25_171 -> m25_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_596 -> m26_603  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m26_596 -> m26_605  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m26_596 -> m26_608  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m26_596 -> m26_611  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m26_596 -> m26_614  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m26_596 -> m26_616  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m26_618 -> m26_624  [color=darkseagreen4, key=1, label=constructorName, style=dashed];
m26_19 -> m26_22  [color=darkseagreen4, key=1, label=char, style=dashed];
m26_33 -> m26_42  [color=darkseagreen4, key=1, label=text, style=dashed];
m26_33 -> m26_45  [color=darkseagreen4, key=1, label=text, style=dashed];
m26_37 -> m26_42  [color=darkseagreen4, key=1, label=dateParseHandling, style=dashed];
m26_39 -> m26_42  [color=darkseagreen4, key=1, label=dateParseHandling, style=dashed];
m26_40 -> m26_42  [color=darkseagreen4, key=1, label=dateParseHandling, style=dashed];
m26_467 -> m26_470  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m26_467 -> m26_473  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m26_751 -> m26_769  [color=darkseagreen4, key=1, label=char, style=dashed];
m26_431 -> m26_433  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m26_431 -> m26_438  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m26_435 -> m26_437  [color=darkseagreen4, key=1, label=quoteChar, style=dashed];
m26_443 -> m26_448  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m26_635 -> m26_638  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m26_635 -> m26_653  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m26_635 -> m26_665  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m26_636 -> m26_640  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m26_636 -> m26_655  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m26_636 -> m26_668  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m26_639 -> m26_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m26_654 -> m26_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m26_666 -> m26_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m26_633 -> m26_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m26_643 -> m26_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m26_645 -> m26_648  [color=darkseagreen4, key=1, label=parseResult, style=dashed];
m26_647 -> m26_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m26_651 -> m26_693  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m26_659 -> m26_661  [color=darkseagreen4, key=1, label=number, style=dashed];
m26_658 -> m26_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m26_662 -> m26_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m26_664 -> m26_693  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m26_667 -> m26_693  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m26_670 -> m26_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m26_671 -> m26_693  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m26_673 -> m26_677  [color=darkseagreen4, key=1, label=parseResult, style=dashed];
m26_675 -> m26_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m26_676 -> m26_693  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m26_681 -> m26_684  [color=darkseagreen4, key=1, label=number, style=dashed];
m26_681 -> m26_686  [color=darkseagreen4, key=1, label=number, style=dashed];
m26_681 -> m26_688  [color=darkseagreen4, key=1, label=number, style=dashed];
m26_681 -> m26_690  [color=darkseagreen4, key=1, label=number, style=dashed];
m26_679 -> m26_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m26_680 -> m26_693  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m26_685 -> m26_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m26_689 -> m26_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m26_691 -> m26_693  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m26_316 -> m26_318  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_318 -> m26_318  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_318 -> m26_320  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_318 -> m26_321  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_321 -> m26_321  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_733 -> m26_737  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_733 -> m26_738  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_736 -> m26_738  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_736 -> m26_740  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_740 -> m26_740  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_293 -> m26_567  [color=darkseagreen4, key=1, label=bool, style=dashed];
m26_110 -> m26_115  [color=darkseagreen4, key=1, label=charsRequired, style=dashed];
m26_110 -> m26_116  [color=darkseagreen4, key=1, label=charsRequired, style=dashed];
m26_114 -> m26_116  [color=darkseagreen4, key=1, label=totalCharsRead, style=dashed];
m26_292 -> m26_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringBuffer", style=dashed];
m26_292 -> m26_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringBuffer", style=dashed];
m26_54 -> m26_56  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m26_61 -> m26_63  [color=darkseagreen4, key=1, label=count, style=dashed];
m26_49 -> m26_201  [color=darkseagreen4, key=1, label=char, style=dashed];
m26_49 -> m26_206  [color=darkseagreen4, key=1, label=char, style=dashed];
m26_49 -> m26_276  [color=darkseagreen4, key=1, label=char, style=dashed];
m26_190 -> m26_195  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_191 -> m26_278  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m26_195 -> m26_195  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_195 -> m26_197  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_195 -> m26_198  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_195 -> m26_212  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_192 -> m26_254  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m26_192 -> m26_264  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m26_193 -> m26_252  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m26_193 -> m26_254  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m26_193 -> m26_262  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m26_193 -> m26_264  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m26_193 -> m26_280  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m26_193 -> m26_283  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m26_198 -> m26_198  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_198 -> m26_212  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_207 -> m26_254  [color=darkseagreen4, key=1, label=escapeStartPos, style=dashed];
m26_207 -> m26_264  [color=darkseagreen4, key=1, label=escapeStartPos, style=dashed];
m26_208 -> m26_210  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m26_208 -> m26_261  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m26_212 -> m26_212  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_212 -> m26_215  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_259 -> m26_259  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_215 -> m26_215  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_215 -> m26_218  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_218 -> m26_218  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_218 -> m26_221  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_221 -> m26_221  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_221 -> m26_224  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_224 -> m26_224  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_224 -> m26_227  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_227 -> m26_227  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_227 -> m26_233  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_233 -> m26_233  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_233 -> m26_235  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_235 -> m26_235  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_237 -> m26_240  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m26_237 -> m26_264  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m26_244 -> m26_254  [color=darkseagreen4, key=1, label=highSurrogate, style=dashed];
m26_239 -> m26_264  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m26_258 -> m26_259  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_242 -> m26_257  [color=darkseagreen4, key=1, label=anotherHighSurrogate, style=dashed];
m26_256 -> m26_264  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m26_246 -> m26_248  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m26_246 -> m26_264  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m26_249 -> m26_254  [color=darkseagreen4, key=1, label=highSurrogate, style=dashed];
m26_251 -> m26_254  [color=darkseagreen4, key=1, label=highSurrogate, style=dashed];
m26_250 -> m26_257  [color=darkseagreen4, key=1, label=anotherHighSurrogate, style=dashed];
m26_253 -> m26_262  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m26_253 -> m26_264  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m26_253 -> m26_280  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m26_253 -> m26_283  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m26_255 -> m26_264  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m26_265 -> m26_278  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m26_265 -> m26_282  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m26_265 -> m26_283  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m26_263 -> m26_280  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m26_263 -> m26_283  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m26_273 -> m26_276  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_273 -> m26_277  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_277 -> m26_277  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_277 -> m26_282  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_277 -> m26_283  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_277 -> m26_285  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_285 -> m26_285  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m26_281 -> m26_283  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m26_364 -> m26_398  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m26_364 -> m26_400  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m26_186 -> m26_589  [color=darkseagreen4, key=1, label=bool, style=dashed];
m26_571 -> m26_573  [color=darkseagreen4, key=1, label=finished, style=dashed];
m26_572 -> m26_589  [color=darkseagreen4, key=1, label=ateWhitespace, style=dashed];
m26_574 -> m26_585  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m26_586 -> m26_589  [color=darkseagreen4, key=1, label=ateWhitespace, style=dashed];
m26_102 -> m26_104  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_72 -> m26_75  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_72 -> m26_76  [color=darkseagreen4, key=1, label=bool, style=dashed];
m26_72 -> m26_82  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_83 -> m26_85  [color=darkseagreen4, key=1, label=dst, style=dashed];
m26_81 -> m26_84  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m26_81 -> m26_85  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m26_81 -> m26_87  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m26_81 -> m26_88  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m26_93 -> m26_95  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m26_93 -> m26_98  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m26_303 -> m26_310  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m26_307 -> m26_310  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m26_476 -> m26_485  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m26_476 -> m26_546  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m26_476 -> m26_548  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m26_476 -> m26_551  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m26_495 -> m26_498  [color=darkseagreen4, key=1, label=next, style=dashed];
m26_405 -> m26_426  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m26_821 -> m26_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_172  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_197  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_377  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_381  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_397  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_422  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_428  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_436  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_438  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_445  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_447  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_448  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_468  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_469  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_473  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_480  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_485  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_491  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_497  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_499  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_500  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_501  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_504  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_507  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_511  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_521  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_522  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_526  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_529  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_536  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_537  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_540  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_545  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_547  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_549  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_551  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_563  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_564  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_566  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_567  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_568  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_569  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_577  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_578  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_580  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_582  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_584  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_587  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_591  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_592  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_598  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_599  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_600  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_602  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_604  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_607  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_610  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_613  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_616  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_619  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_620  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_621  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_622  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_624  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_625  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_628  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_631  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_637  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_649  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_650  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_652  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_663  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_682  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_686  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_690  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_692  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_693  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_705  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_706  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_707  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_708  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_712  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_714  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_715  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_716  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_717  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_719  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_720  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_721  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_723  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_726  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_728  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_729  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_730  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_731  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_734  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_738  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_747  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_749  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_758  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_760  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_762  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_773  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_774  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_775  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_777  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_778  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_779  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_781  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_782  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_783  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_785  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_786  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_787  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_789  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_790  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_792  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_793  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_796  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_797  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_799  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_800  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_802  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_803  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_805  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_806  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_809  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_810  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_811  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_812  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m26_821 -> m26_813  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m27_65 -> m27_67  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m27_70 -> m27_75  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m27_47 -> m27_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m27_47 -> m27_54  [color=darkseagreen4, key=1, label=bool, style=dashed];
m27_47 -> m27_55  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m27_47 -> m27_56  [color=darkseagreen4, key=1, label=string, style=dashed];
m27_48 -> m27_50  [color=darkseagreen4, key=1, label=current, style=dashed];
m27_59 -> m27_61  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m28_104 -> m28_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_104 -> m28_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_104 -> m28_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_104 -> m28_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_104 -> m28_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_104 -> m28_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_104 -> m28_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_109 -> m28_111  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m28_109 -> m28_112  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m28_106 -> m28_112  [color=darkseagreen4, key=1, label=writer, style=dashed];
m28_106 -> m28_113  [color=darkseagreen4, key=1, label=writer, style=dashed];
m28_106 -> m28_115  [color=darkseagreen4, key=1, label=writer, style=dashed];
m28_106 -> m28_116  [color=darkseagreen4, key=1, label=writer, style=dashed];
m28_74 -> m28_1044  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_74 -> m28_1048  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_74 -> m28_1050  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_74 -> m28_1052  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_74 -> m28_1054  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_74 -> m28_1056  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_74 -> m28_1058  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_74 -> m28_1060  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_74 -> m28_1062  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_74 -> m28_1064  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_74 -> m28_1066  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_48 -> m28_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_48 -> m28_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_48 -> m28_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_48 -> m28_61  [color=darkseagreen4, key=1, label=bool, style=dashed];
m28_48 -> m28_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_48 -> m28_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_48 -> m28_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_51 -> m28_53  [color=darkseagreen4, key=1, label=contract, style=dashed];
m28_51 -> m28_54  [color=darkseagreen4, key=1, label=contract, style=dashed];
m28_51 -> m28_55  [color=darkseagreen4, key=1, label=contract, style=dashed];
m28_51 -> m28_66  [color=darkseagreen4, key=1, label=contract, style=dashed];
m28_59 -> m28_64  [color=darkseagreen4, key=1, label=deserializedValue, style=dashed];
m28_60 -> m28_64  [color=darkseagreen4, key=1, label=deserializedValue, style=dashed];
m28_52 -> m28_58  [color=darkseagreen4, key=1, label=converter, style=dashed];
m28_75 -> m28_1000  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m28_75 -> m28_1003  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m28_1001 -> m28_1004  [color=darkseagreen4, key=1, label=value, style=dashed];
m28_1146 -> m28_1208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_1042 -> m28_1180  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m28_561 -> m28_563  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_561 -> m28_564  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_561 -> m28_566  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_73 -> m28_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m28_73 -> m28_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_73 -> m28_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_73 -> m28_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_186 -> m28_201  [color=darkseagreen4, key=1, label=converter, style=dashed];
m28_88 -> m28_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_88 -> m28_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_88 -> m28_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_88 -> m28_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_88 -> m28_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_294 -> m28_851  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m28_294 -> m28_852  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_294 -> m28_853  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m28_294 -> m28_855  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_294 -> m28_856  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_294 -> m28_857  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_294 -> m28_858  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_294 -> m28_861  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_294 -> m28_864  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_294 -> m28_865  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_294 -> m28_871  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_294 -> m28_872  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_294 -> m28_880  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m28_294 -> m28_882  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_294 -> m28_883  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_294 -> m28_887  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_294 -> m28_888  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_294 -> m28_890  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_294 -> m28_891  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_850 -> m28_857  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m28_850 -> m28_858  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m28_850 -> m28_871  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m28_850 -> m28_880  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m28_850 -> m28_882  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m28_850 -> m28_890  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m28_850 -> m28_891  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m28_850 -> m28_892  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m28_854 -> m28_857  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m28_854 -> m28_858  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m28_854 -> m28_871  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m28_854 -> m28_880  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m28_854 -> m28_882  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m28_854 -> m28_890  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m28_854 -> m28_891  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m28_854 -> m28_892  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m28_859 -> m28_883  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m28_863 -> m28_865  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m28_863 -> m28_880  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m28_863 -> m28_882  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m28_866 -> m28_868  [color=darkseagreen4, key=1, label=property, style=dashed];
m28_866 -> m28_871  [color=darkseagreen4, key=1, label=property, style=dashed];
m28_875 -> m28_877  [color=darkseagreen4, key=1, label=dynamicMemberConverter, style=dashed];
m28_886 -> m28_889  [color=darkseagreen4, key=1, label=finished, style=dashed];
m28_80 -> m28_1218  [color=darkseagreen4, key=1, label=bool, style=dashed];
m28_80 -> m28_1219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_80 -> m28_1220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_80 -> m28_1221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_841 -> m28_845  [color=darkseagreen4, key=1, label=itemConverter, style=dashed];
m28_35 -> m28_770  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_35 -> m28_771  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_35 -> m28_772  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m28_35 -> m28_773  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_35 -> m28_775  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_35 -> m28_777  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m28_35 -> m28_782  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_35 -> m28_783  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_35 -> m28_790  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m28_35 -> m28_793  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_35 -> m28_794  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_35 -> m28_796  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_35 -> m28_801  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_35 -> m28_802  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_769 -> m28_771  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m28_769 -> m28_774  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m28_769 -> m28_775  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m28_769 -> m28_793  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m28_769 -> m28_801  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m28_769 -> m28_802  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m28_769 -> m28_803  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m28_776 -> m28_794  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m28_779 -> m28_782  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m28_779 -> m28_787  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m28_792 -> m28_795  [color=darkseagreen4, key=1, label=errorPosition, style=dashed];
m28_780 -> m28_795  [color=darkseagreen4, key=1, label=previousErrorIndex, style=dashed];
m28_781 -> m28_799  [color=darkseagreen4, key=1, label=finished, style=dashed];
m28_781 -> m28_800  [color=darkseagreen4, key=1, label=finished, style=dashed];
m28_785 -> m28_800  [color=darkseagreen4, key=1, label=finished, style=dashed];
m28_416 -> m28_418  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_416 -> m28_423  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_419 -> m28_424  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m28_43 -> m28_46  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m28_287 -> m28_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m28_287 -> m28_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m28_287 -> m28_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m28_287 -> m28_325  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m28_287 -> m28_329  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m28_287 -> m28_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m28_287 -> m28_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m28_287 -> m28_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m28_287 -> m28_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m28_287 -> m28_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m28_287 -> m28_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m28_287 -> m28_347  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m28_297 -> m28_347  [color=darkseagreen4, key=1, label="out string", style=dashed];
m28_325 -> m28_325  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m28_325 -> m28_347  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m28_342 -> m28_347  [color=darkseagreen4, key=1, label="out object", style=dashed];
m28_298 -> m28_347  [color=darkseagreen4, key=1, label="out object", style=dashed];
m28_301 -> m28_303  [color=darkseagreen4, key=1, label=refToken, style=dashed];
m28_301 -> m28_304  [color=darkseagreen4, key=1, label=refToken, style=dashed];
m28_305 -> m28_307  [color=darkseagreen4, key=1, label=property, style=dashed];
m28_305 -> m28_309  [color=darkseagreen4, key=1, label=property, style=dashed];
m28_311 -> m28_317  [color=darkseagreen4, key=1, label=reference, style=dashed];
m28_306 -> m28_313  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m28_306 -> m28_314  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m28_308 -> m28_313  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m28_308 -> m28_314  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m28_310 -> m28_313  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m28_310 -> m28_314  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m28_315 -> m28_317  [color=darkseagreen4, key=1, label="out object", style=dashed];
m28_315 -> m28_347  [color=darkseagreen4, key=1, label="out object", style=dashed];
m28_322 -> m28_325  [color=darkseagreen4, key=1, label=qualifiedTypeName, style=dashed];
m28_323 -> m28_325  [color=darkseagreen4, key=1, label=typeTokenReader, style=dashed];
m28_337 -> m28_347  [color=darkseagreen4, key=1, label="out string", style=dashed];
m28_640 -> m28_642  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_640 -> m28_643  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_989 -> m28_1187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence", style=dashed];
m28_989 -> m28_1190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_989 -> m28_1191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m28_989 -> m28_1192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m28_989 -> m28_1194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m28_989 -> m28_1195  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_989 -> m28_1198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_989 -> m28_1200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_989 -> m28_1202  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_989 -> m28_1203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_1186 -> m28_1189  [color=darkseagreen4, key=1, label=resolvedRequired, style=dashed];
m28_1186 -> m28_1197  [color=darkseagreen4, key=1, label=resolvedRequired, style=dashed];
m28_1186 -> m28_1199  [color=darkseagreen4, key=1, label=resolvedRequired, style=dashed];
m28_462 -> m28_580  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_462 -> m28_581  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m28_462 -> m28_582  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m28_462 -> m28_584  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m28_462 -> m28_586  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m28_462 -> m28_590  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m28_462 -> m28_593  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m28_462 -> m28_596  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m28_462 -> m28_598  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m28_462 -> m28_602  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m28_462 -> m28_604  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m28_462 -> m28_605  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m28_462 -> m28_606  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_462 -> m28_607  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_585 -> m28_589  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_587 -> m28_589  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_592 -> m28_595  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_597 -> m28_601  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_599 -> m28_601  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_583 -> m28_608  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m28_588 -> m28_608  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m28_591 -> m28_608  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m28_600 -> m28_608  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m28_603 -> m28_608  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m28_163 -> m28_471  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_163 -> m28_473  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m28_163 -> m28_474  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_163 -> m28_476  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_163 -> m28_478  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_163 -> m28_479  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_163 -> m28_480  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_163 -> m28_482  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_163 -> m28_483  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_163 -> m28_484  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_163 -> m28_485  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_163 -> m28_486  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_163 -> m28_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_163 -> m28_489  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_477 -> m28_481  [color=darkseagreen4, key=1, label=primitiveContract, style=dashed];
m28_161 -> m28_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_161 -> m28_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_161 -> m28_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_161 -> m28_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_161 -> m28_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_161 -> m28_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_161 -> m28_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_161 -> m28_236  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m28_161 -> m28_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_161 -> m28_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_161 -> m28_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_161 -> m28_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_161 -> m28_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_161 -> m28_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_161 -> m28_254  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_161 -> m28_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_161 -> m28_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_161 -> m28_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_161 -> m28_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_161 -> m28_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_161 -> m28_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_161 -> m28_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_161 -> m28_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_161 -> m28_280  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_161 -> m28_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_205 -> m28_223  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m28_205 -> m28_227  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m28_205 -> m28_236  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m28_210 -> m28_223  [color=darkseagreen4, key=1, label=tokenReader, style=dashed];
m28_223 -> m28_223  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m28_223 -> m28_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_223 -> m28_236  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m28_223 -> m28_241  [color=darkseagreen4, key=1, label=id, style=dashed];
m28_223 -> m28_258  [color=darkseagreen4, key=1, label=id, style=dashed];
m28_223 -> m28_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_223 -> m28_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_223 -> m28_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_223 -> m28_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_223 -> m28_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_223 -> m28_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_223 -> m28_266  [color=darkseagreen4, key=1, label=id, style=dashed];
m28_223 -> m28_277  [color=darkseagreen4, key=1, label=id, style=dashed];
m28_223 -> m28_280  [color=darkseagreen4, key=1, label=id, style=dashed];
m28_227 -> m28_227  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m28_227 -> m28_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_227 -> m28_236  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m28_227 -> m28_241  [color=darkseagreen4, key=1, label=id, style=dashed];
m28_227 -> m28_258  [color=darkseagreen4, key=1, label=id, style=dashed];
m28_227 -> m28_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_227 -> m28_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_227 -> m28_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_227 -> m28_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_227 -> m28_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_227 -> m28_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_227 -> m28_266  [color=darkseagreen4, key=1, label=id, style=dashed];
m28_227 -> m28_277  [color=darkseagreen4, key=1, label=id, style=dashed];
m28_227 -> m28_280  [color=darkseagreen4, key=1, label=id, style=dashed];
m28_234 -> m28_241  [color=darkseagreen4, key=1, label=objectContract, style=dashed];
m28_237 -> m28_240  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m28_237 -> m28_241  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m28_238 -> m28_240  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m28_238 -> m28_241  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m28_248 -> m28_250  [color=darkseagreen4, key=1, label=value, style=dashed];
m28_252 -> m28_264  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m28_252 -> m28_266  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m28_256 -> m28_266  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m28_256 -> m28_267  [color=darkseagreen4, key=1, label=createdFromNonDefaultCreator, style=dashed];
m28_256 -> m28_269  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m28_256 -> m28_270  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m28_256 -> m28_271  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m28_208 -> m28_241  [color=darkseagreen4, key=1, label=id, style=dashed];
m28_208 -> m28_258  [color=darkseagreen4, key=1, label=id, style=dashed];
m28_208 -> m28_266  [color=darkseagreen4, key=1, label=id, style=dashed];
m28_208 -> m28_277  [color=darkseagreen4, key=1, label=id, style=dashed];
m28_208 -> m28_280  [color=darkseagreen4, key=1, label=id, style=dashed];
m28_213 -> m28_220  [color=darkseagreen4, key=1, label=tokenReader, style=dashed];
m28_213 -> m28_223  [color=darkseagreen4, key=1, label=tokenReader, style=dashed];
m28_221 -> m28_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_221 -> m28_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_221 -> m28_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_221 -> m28_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_221 -> m28_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_221 -> m28_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_221 -> m28_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_221 -> m28_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_221 -> m28_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_221 -> m28_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_221 -> m28_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_221 -> m28_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_221 -> m28_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_221 -> m28_280  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_221 -> m28_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_233 -> m28_239  [color=darkseagreen4, key=1, label=createdFromNonDefaultCreator, style=dashed];
m28_702 -> m28_764  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_702 -> m28_765  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_499 -> m28_504  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m28_499 -> m28_508  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m28_499 -> m28_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m28_499 -> m28_513  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m28_499 -> m28_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m28_499 -> m28_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m28_499 -> m28_517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m28_504 -> m28_504  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m28_504 -> m28_507  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m28_504 -> m28_508  [color=darkseagreen4, key=1, label=gottenCurrentValue, style=dashed];
m28_504 -> m28_512  [color=darkseagreen4, key=1, label=currentValue, style=dashed];
m28_504 -> m28_519  [color=darkseagreen4, key=1, label=useExistingValue, style=dashed];
m28_509 -> m28_512  [color=darkseagreen4, key=1, label=currentValue, style=dashed];
m28_510 -> m28_513  [color=darkseagreen4, key=1, label=value, style=dashed];
m28_511 -> m28_513  [color=darkseagreen4, key=1, label=value, style=dashed];
m28_354 -> m28_403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_354 -> m28_405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_354 -> m28_407  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_354 -> m28_408  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m28_354 -> m28_409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_354 -> m28_412  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m28_401 -> m28_407  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m28_401 -> m28_408  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m28_401 -> m28_409  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m28_410 -> m28_412  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m28_634 -> m28_636  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_634 -> m28_637  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_162 -> m28_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_162 -> m28_428  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_162 -> m28_430  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_162 -> m28_434  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_162 -> m28_435  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_162 -> m28_436  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_162 -> m28_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_162 -> m28_438  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_162 -> m28_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_162 -> m28_441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_162 -> m28_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_162 -> m28_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_162 -> m28_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_429 -> m28_440  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m28_429 -> m28_442  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m28_429 -> m28_443  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m28_429 -> m28_444  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m28_429 -> m28_446  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m28_429 -> m28_448  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m28_429 -> m28_457  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m28_432 -> m28_443  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_432 -> m28_444  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_432 -> m28_445  [color=darkseagreen4, key=1, label=createdFromNonDefaultCreator, style=dashed];
m28_432 -> m28_450  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_432 -> m28_453  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_432 -> m28_454  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_432 -> m28_455  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_523 -> m28_573  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m28_523 -> m28_575  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m28_292 -> m28_612  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m28_292 -> m28_614  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m28_292 -> m28_616  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m28_292 -> m28_617  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m28_292 -> m28_619  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m28_292 -> m28_620  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m28_292 -> m28_622  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m28_292 -> m28_626  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m28_292 -> m28_628  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m28_292 -> m28_629  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m28_292 -> m28_630  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_292 -> m28_631  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_621 -> m28_625  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m28_623 -> m28_625  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m28_613 -> m28_632  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m28_615 -> m28_632  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m28_618 -> m28_632  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m28_624 -> m28_632  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m28_627 -> m28_632  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m28_291 -> m28_1077  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m28_291 -> m28_1078  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m28_291 -> m28_1080  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_291 -> m28_1082  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m28_291 -> m28_1084  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m28_291 -> m28_1086  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_291 -> m28_1088  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m28_291 -> m28_1089  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_291 -> m28_1090  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_1076 -> m28_1087  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m28_1076 -> m28_1092  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m28_1081 -> m28_1092  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m28_1083 -> m28_1092  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m28_1091 -> m28_1093  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m28_979 -> m28_1009  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_979 -> m28_1019  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_979 -> m28_1020  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_979 -> m28_1024  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_979 -> m28_1025  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_979 -> m28_1027  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m28_979 -> m28_1029  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_979 -> m28_1030  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m28_979 -> m28_1032  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_979 -> m28_1036  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_979 -> m28_1037  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_979 -> m28_1039  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m28_1007 -> m28_1013  [color=darkseagreen4, key=1, label=propertyValues, style=dashed];
m28_1007 -> m28_1040  [color=darkseagreen4, key=1, label=propertyValues, style=dashed];
m28_1011 -> m28_1020  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m28_1011 -> m28_1025  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m28_1011 -> m28_1027  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m28_1011 -> m28_1029  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m28_1018 -> m28_1021  [color=darkseagreen4, key=1, label=propertyConverter, style=dashed];
m28_1014 -> m28_1016  [color=darkseagreen4, key=1, label=property, style=dashed];
m28_1014 -> m28_1019  [color=darkseagreen4, key=1, label=property, style=dashed];
m28_1035 -> m28_1038  [color=darkseagreen4, key=1, label=exit, style=dashed];
m28_463 -> m28_704  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_463 -> m28_705  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m28_463 -> m28_706  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m28_463 -> m28_711  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m28_463 -> m28_716  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_463 -> m28_717  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_463 -> m28_729  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m28_463 -> m28_730  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_463 -> m28_732  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_463 -> m28_735  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_463 -> m28_736  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_463 -> m28_748  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_463 -> m28_751  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m28_463 -> m28_752  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m28_463 -> m28_753  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m28_703 -> m28_715  [color=darkseagreen4, key=1, label=rank, style=dashed];
m28_707 -> m28_716  [color=darkseagreen4, key=1, label=collectionItemContract, style=dashed];
m28_708 -> m28_716  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m28_708 -> m28_723  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m28_712 -> m28_739  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m28_714 -> m28_730  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m28_728 -> m28_731  [color=darkseagreen4, key=1, label=errorPosition, style=dashed];
m28_709 -> m28_731  [color=darkseagreen4, key=1, label=previousErrorIndex, style=dashed];
m28_710 -> m28_715  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m28_710 -> m28_719  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m28_710 -> m28_740  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m28_710 -> m28_743  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m28_710 -> m28_744  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m28_720 -> m28_726  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m28_713 -> m28_749  [color=darkseagreen4, key=1, label=finished, style=dashed];
m28_713 -> m28_750  [color=darkseagreen4, key=1, label=finished, style=dashed];
m28_721 -> m28_731  [color=darkseagreen4, key=1, label=previousErrorIndex, style=dashed];
m28_738 -> m28_740  [color=darkseagreen4, key=1, label=newList, style=dashed];
m28_746 -> m28_750  [color=darkseagreen4, key=1, label=finished, style=dashed];
m28_76 -> m28_127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_76 -> m28_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_76 -> m28_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_76 -> m28_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_76 -> m28_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_76 -> m28_141  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m28_76 -> m28_143  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m28_76 -> m28_145  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_76 -> m28_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_76 -> m28_151  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m28_76 -> m28_153  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_76 -> m28_155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_76 -> m28_157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_76 -> m28_158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_76 -> m28_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_140 -> m28_144  [color=darkseagreen4, key=1, label=s, style=dashed];
m28_140 -> m28_145  [color=darkseagreen4, key=1, label=s, style=dashed];
m28_2 -> m28_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_2 -> m28_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_2 -> m28_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_2 -> m28_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_2 -> m28_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_2 -> m28_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_2 -> m28_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_2 -> m28_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_2 -> m28_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_2 -> m28_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_2 -> m28_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_2 -> m28_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_2 -> m28_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_2 -> m28_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_4 -> m28_12  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m28_4 -> m28_25  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m28_18 -> m28_22  [color=darkseagreen4, key=1, label=id, style=dashed];
m28_18 -> m28_24  [color=darkseagreen4, key=1, label=id, style=dashed];
m28_5 -> m28_9  [color=darkseagreen4, key=1, label=contract, style=dashed];
m28_5 -> m28_20  [color=darkseagreen4, key=1, label=contract, style=dashed];
m28_5 -> m28_23  [color=darkseagreen4, key=1, label=contract, style=dashed];
m28_5 -> m28_24  [color=darkseagreen4, key=1, label=contract, style=dashed];
m28_15 -> m28_22  [color=darkseagreen4, key=1, label=id, style=dashed];
m28_15 -> m28_24  [color=darkseagreen4, key=1, label=id, style=dashed];
m28_42 -> m28_1096  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_42 -> m28_1097  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_42 -> m28_1100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_42 -> m28_1103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_42 -> m28_1107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_42 -> m28_1109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_42 -> m28_1110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_42 -> m28_1111  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_42 -> m28_1112  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_42 -> m28_1113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_42 -> m28_1114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_42 -> m28_1115  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_42 -> m28_1119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_42 -> m28_1120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_42 -> m28_1121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_42 -> m28_1122  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_42 -> m28_1123  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_42 -> m28_1125  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_42 -> m28_1126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_42 -> m28_1131  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_42 -> m28_1132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_42 -> m28_1134  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_42 -> m28_1139  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_42 -> m28_1140  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_42 -> m28_1141  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_1095 -> m28_1147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_1095 -> m28_1150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_1095 -> m28_1114  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m28_1095 -> m28_1121  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m28_1095 -> m28_1135  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m28_1095 -> m28_1136  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m28_1098 -> m28_1126  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m28_1098 -> m28_1139  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m28_1102 -> m28_1107  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m28_1102 -> m28_1109  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m28_1102 -> m28_1111  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m28_1102 -> m28_1115  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m28_1102 -> m28_1120  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m28_1102 -> m28_1123  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m28_1102 -> m28_1125  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m28_1104 -> m28_1112  [color=darkseagreen4, key=1, label=property, style=dashed];
m28_1104 -> m28_1114  [color=darkseagreen4, key=1, label=property, style=dashed];
m28_1104 -> m28_1116  [color=darkseagreen4, key=1, label=property, style=dashed];
m28_1104 -> m28_1119  [color=darkseagreen4, key=1, label=property, style=dashed];
m28_1104 -> m28_1121  [color=darkseagreen4, key=1, label=property, style=dashed];
m28_1104 -> m28_1122  [color=darkseagreen4, key=1, label=property, style=dashed];
m28_1118 -> m28_1122  [color=darkseagreen4, key=1, label=propertyConverter, style=dashed];
m28_1129 -> m28_1133  [color=darkseagreen4, key=1, label=finished, style=dashed];
m28_1137 -> m28_1139  [color=darkseagreen4, key=1, label=property, style=dashed];
m28_1144 -> m28_1174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m28_1144 -> m28_1176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m28_1144 -> m28_1177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_122 -> m28_1163  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_122 -> m28_1168  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_295 -> m28_809  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_295 -> m28_811  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_295 -> m28_814  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_295 -> m28_817  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_295 -> m28_818  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_295 -> m28_819  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_295 -> m28_823  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_295 -> m28_824  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_295 -> m28_826  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_295 -> m28_827  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonISerializableContract", style=dashed];
m28_295 -> m28_828  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_295 -> m28_830  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_295 -> m28_831  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_295 -> m28_832  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_295 -> m28_833  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_805 -> m28_828  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m28_812 -> m28_819  [color=darkseagreen4, key=1, label=serializationInfo, style=dashed];
m28_812 -> m28_826  [color=darkseagreen4, key=1, label=serializationInfo, style=dashed];
m28_816 -> m28_818  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m28_816 -> m28_819  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m28_829 -> m28_831  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m28_829 -> m28_832  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m28_829 -> m28_833  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m28_829 -> m28_834  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m28_822 -> m28_825  [color=darkseagreen4, key=1, label=finished, style=dashed];
m28_521 -> m28_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m28_521 -> m28_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m28_521 -> m28_535  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m28_521 -> m28_536  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m28_521 -> m28_542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m28_521 -> m28_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m28_521 -> m28_546  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m28_521 -> m28_551  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m28_521 -> m28_554  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.JsonConverter", style=dashed];
m28_526 -> m28_548  [color=darkseagreen4, key=1, label="out object", style=dashed];
m28_526 -> m28_554  [color=darkseagreen4, key=1, label="out object", style=dashed];
m28_532 -> m28_536  [color=darkseagreen4, key=1, label=tokenType, style=dashed];
m28_532 -> m28_544  [color=darkseagreen4, key=1, label=tokenType, style=dashed];
m28_532 -> m28_546  [color=darkseagreen4, key=1, label=tokenType, style=dashed];
m28_537 -> m28_539  [color=darkseagreen4, key=1, label="out object", style=dashed];
m28_537 -> m28_548  [color=darkseagreen4, key=1, label="out object", style=dashed];
m28_537 -> m28_554  [color=darkseagreen4, key=1, label="out object", style=dashed];
m28_549 -> m28_554  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_552 -> m28_554  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.JsonConverter", style=dashed];
m28_527 -> m28_542  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m28_527 -> m28_554  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m28_550 -> m28_554  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m28_529 -> m28_554  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m28_538 -> m28_554  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m28_541 -> m28_554  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m28_896 -> m28_902  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_896 -> m28_905  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m28_896 -> m28_934  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_896 -> m28_935  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_896 -> m28_936  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_896 -> m28_965  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m28_896 -> m28_968  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m28_896 -> m28_972  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_896 -> m28_973  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_898 -> m28_904  [color=darkseagreen4, key=1, label=trackPresence, style=dashed];
m28_898 -> m28_910  [color=darkseagreen4, key=1, label=trackPresence, style=dashed];
m28_898 -> m28_924  [color=darkseagreen4, key=1, label=trackPresence, style=dashed];
m28_898 -> m28_969  [color=darkseagreen4, key=1, label=trackPresence, style=dashed];
m28_901 -> m28_990  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_903 -> m28_906  [color=darkseagreen4, key=1, label=propertyContexts, style=dashed];
m28_903 -> m28_909  [color=darkseagreen4, key=1, label=propertyContexts, style=dashed];
m28_903 -> m28_937  [color=darkseagreen4, key=1, label=propertyContexts, style=dashed];
m28_903 -> m28_966  [color=darkseagreen4, key=1, label=propertyContexts, style=dashed];
m28_903 -> m28_970  [color=darkseagreen4, key=1, label=propertyContexts, style=dashed];
m28_905 -> m28_994  [color=darkseagreen4, key=1, label=property, style=dashed];
m28_922 -> m28_996  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_922 -> m28_926  [color=darkseagreen4, key=1, label=constructorProperty, style=dashed];
m28_922 -> m28_928  [color=darkseagreen4, key=1, label=constructorProperty, style=dashed];
m28_933 -> m28_935  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m28_933 -> m28_936  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m28_933 -> m28_942  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m28_933 -> m28_968  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m28_933 -> m28_972  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m28_933 -> m28_973  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m28_933 -> m28_974  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m28_906 -> m28_993  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_909 -> m28_911  [color=darkseagreen4, key=1, label=context, style=dashed];
m28_909 -> m28_921  [color=darkseagreen4, key=1, label=context, style=dashed];
m28_909 -> m28_925  [color=darkseagreen4, key=1, label=context, style=dashed];
m28_966 -> m28_968  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m28_970 -> m28_972  [color=darkseagreen4, key=1, label=context, style=dashed];
m28_912 -> m28_914  [color=darkseagreen4, key=1, label=v, style=dashed];
m28_912 -> m28_916  [color=darkseagreen4, key=1, label=v, style=dashed];
m28_920 -> m28_923  [color=darkseagreen4, key=1, label=constructorProperty, style=dashed];
m28_920 -> m28_926  [color=darkseagreen4, key=1, label=constructorProperty, style=dashed];
m28_920 -> m28_928  [color=darkseagreen4, key=1, label=constructorProperty, style=dashed];
m28_939 -> m28_941  [color=darkseagreen4, key=1, label=property, style=dashed];
m28_939 -> m28_942  [color=darkseagreen4, key=1, label=property, style=dashed];
m28_939 -> m28_944  [color=darkseagreen4, key=1, label=property, style=dashed];
m28_940 -> m28_942  [color=darkseagreen4, key=1, label=value, style=dashed];
m28_940 -> m28_944  [color=darkseagreen4, key=1, label=value, style=dashed];
m28_945 -> m28_954  [color=darkseagreen4, key=1, label=propertyContract, style=dashed];
m28_950 -> m28_953  [color=darkseagreen4, key=1, label=createdObjectCollectionWrapper, style=dashed];
m28_288 -> m28_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_288 -> m28_363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_288 -> m28_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_288 -> m28_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_288 -> m28_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_288 -> m28_369  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_288 -> m28_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_288 -> m28_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_288 -> m28_377  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_288 -> m28_379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_288 -> m28_380  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_288 -> m28_383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_288 -> m28_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_288 -> m28_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_288 -> m28_390  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_288 -> m28_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_288 -> m28_396  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m28_355 -> m28_396  [color=darkseagreen4, key=1, label="out string", style=dashed];
m28_361 -> m28_376  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m28_361 -> m28_382  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m28_361 -> m28_387  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m28_366 -> m28_368  [color=darkseagreen4, key=1, label=reference, style=dashed];
m28_366 -> m28_373  [color=darkseagreen4, key=1, label=reference, style=dashed];
m28_379 -> m28_379  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m28_379 -> m28_396  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m28_384 -> m28_396  [color=darkseagreen4, key=1, label="out string", style=dashed];
m28_356 -> m28_396  [color=darkseagreen4, key=1, label="out object", style=dashed];
m28_360 -> m28_394  [color=darkseagreen4, key=1, label=metadataProperty, style=dashed];
m28_371 -> m28_373  [color=darkseagreen4, key=1, label="out object", style=dashed];
m28_371 -> m28_396  [color=darkseagreen4, key=1, label="out object", style=dashed];
m28_391 -> m28_396  [color=darkseagreen4, key=1, label="out object", style=dashed];
m28_1145 -> m28_1157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_1155 -> m28_1157  [color=darkseagreen4, key=1, label=shouldDeserialize, style=dashed];
m28_1155 -> m28_1158  [color=darkseagreen4, key=1, label=shouldDeserialize, style=dashed];
m28_41 -> m28_648  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_41 -> m28_649  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_41 -> m28_650  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_41 -> m28_652  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m28_41 -> m28_654  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m28_41 -> m28_659  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_41 -> m28_662  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_41 -> m28_667  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_41 -> m28_673  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_41 -> m28_678  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_41 -> m28_679  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_41 -> m28_680  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_41 -> m28_687  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_41 -> m28_688  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_41 -> m28_693  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_41 -> m28_694  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_41 -> m28_696  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_41 -> m28_697  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m28_647 -> m28_649  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m28_647 -> m28_650  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m28_647 -> m28_687  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m28_647 -> m28_696  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m28_647 -> m28_697  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m28_647 -> m28_698  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m28_651 -> m28_688  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m28_656 -> m28_679  [color=darkseagreen4, key=1, label=dictionaryValueConverter, style=dashed];
m28_656 -> m28_682  [color=darkseagreen4, key=1, label=dictionaryValueConverter, style=dashed];
m28_661 -> m28_667  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m28_669 -> m28_673  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m28_676 -> m28_687  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m28_668 -> m28_673  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m28_692 -> m28_695  [color=darkseagreen4, key=1, label=finished, style=dashed];
m28_1223 -> m28_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_145  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_153  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_280  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_397  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_407  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_428  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_504  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_535  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_546  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_562  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_563  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_564  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_571  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_573  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_596  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_620  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_635  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_636  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_637  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_641  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_642  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_643  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_649  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_650  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_662  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_679  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_687  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_688  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_696  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_697  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_705  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_706  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_716  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_729  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_730  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_751  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_752  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_764  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_765  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_771  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_775  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_782  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_793  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_794  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_801  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_802  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_810  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_811  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_826  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_831  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_832  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_833  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_853  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_857  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_858  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_871  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_882  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_883  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_890  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_891  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_900  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_902  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_928  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_935  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_936  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_941  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_972  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_973  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_999  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1000  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1002  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1003  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1019  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1026  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1027  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1028  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1039  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1080  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1082  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1086  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1094  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1097  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1115  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1223 -> m28_1217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m28_1224 -> m28_994  [color=darkseagreen4, key=1, label=property, style=dashed];
m29_367 -> m29_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_367 -> m29_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_367 -> m29_418  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_367 -> m29_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_367 -> m29_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m29_410 -> m29_415  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m29_411 -> m29_417  [color=darkseagreen4, key=1, label=includeTypeDetails, style=dashed];
m29_412 -> m29_422  [color=darkseagreen4, key=1, label=writeMetadataObject, style=dashed];
m29_138 -> m29_142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m29_138 -> m29_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m29_138 -> m29_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m29_138 -> m29_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m29_138 -> m29_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_138 -> m29_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_138 -> m29_163  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_143 -> m29_146  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m29_143 -> m29_154  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m29_145 -> m29_154  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m29_147 -> m29_154  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m29_153 -> m29_156  [color=darkseagreen4, key=1, label=message, style=dashed];
m29_153 -> m29_159  [color=darkseagreen4, key=1, label=message, style=dashed];
m29_153 -> m29_163  [color=darkseagreen4, key=1, label=message, style=dashed];
m29_141 -> m29_144  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m29_141 -> m29_146  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m29_141 -> m29_154  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m29_302 -> m29_307  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m29_304 -> m29_307  [color=darkseagreen4, key=1, label=objectContract, style=dashed];
m29_191 -> m29_193  [color=darkseagreen4, key=1, label=converter, style=dashed];
m29_199 -> m29_201  [color=darkseagreen4, key=1, label="out string", style=dashed];
m29_91 -> m29_207  [color=darkseagreen4, key=1, label=object, style=dashed];
m29_91 -> m29_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_91 -> m29_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_88 -> m29_224  [color=darkseagreen4, key=1, label=object, style=dashed];
m29_88 -> m29_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_88 -> m29_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m29_88 -> m29_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_88 -> m29_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_88 -> m29_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_88 -> m29_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_88 -> m29_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_88 -> m29_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_88 -> m29_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_226 -> m29_237  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m29_229 -> m29_232  [color=darkseagreen4, key=1, label=property, style=dashed];
m29_229 -> m29_233  [color=darkseagreen4, key=1, label=property, style=dashed];
m29_229 -> m29_234  [color=darkseagreen4, key=1, label=property, style=dashed];
m29_229 -> m29_236  [color=darkseagreen4, key=1, label=property, style=dashed];
m29_232 -> m29_234  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m29_227 -> m29_239  [color=darkseagreen4, key=1, label=index, style=dashed];
m29_239 -> m29_239  [color=darkseagreen4, key=1, label=index, style=dashed];
m29_379 -> m29_386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_379 -> m29_388  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m29_379 -> m29_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m29_379 -> m29_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_379 -> m29_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_379 -> m29_397  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_379 -> m29_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_379 -> m29_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_379 -> m29_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_379 -> m29_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_380 -> m29_383  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m29_380 -> m29_388  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m29_387 -> m29_399  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_387 -> m29_403  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_392 -> m29_394  [color=darkseagreen4, key=1, label=value, style=dashed];
m29_392 -> m29_395  [color=darkseagreen4, key=1, label=value, style=dashed];
m29_392 -> m29_396  [color=darkseagreen4, key=1, label=value, style=dashed];
m29_392 -> m29_397  [color=darkseagreen4, key=1, label=value, style=dashed];
m29_393 -> m29_396  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m29_393 -> m29_397  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m29_381 -> m29_402  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
m29_382 -> m29_385  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_385 -> m29_385  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_403 -> m29_403  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_2 -> m29_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_2 -> m29_8  [color=darkseagreen4, key=1, label=object, style=dashed];
m29_2 -> m29_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_2 -> m29_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_2 -> m29_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_2 -> m29_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_7 -> m29_10  [color=darkseagreen4, key=1, label=contract, style=dashed];
m29_7 -> m29_12  [color=darkseagreen4, key=1, label=contract, style=dashed];
m29_50 -> m29_494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.TypeNameHandling", style=dashed];
m29_50 -> m29_497  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m29_50 -> m29_498  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m29_50 -> m29_500  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m29_50 -> m29_501  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m29_50 -> m29_505  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m29_493 -> m29_496  [color=darkseagreen4, key=1, label=resolvedTypeNameHandling, style=dashed];
m29_434 -> m29_438  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m29_434 -> m29_440  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m29_95 -> m29_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_95 -> m29_428  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_95 -> m29_429  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.ISerializable", style=dashed];
m29_95 -> m29_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_95 -> m29_432  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.ISerializable", style=dashed];
m29_95 -> m29_435  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonISerializableContract", style=dashed];
m29_95 -> m29_436  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_95 -> m29_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_95 -> m29_438  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_95 -> m29_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_95 -> m29_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_95 -> m29_441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_95 -> m29_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_431 -> m29_433  [color=darkseagreen4, key=1, label=serializationInfo, style=dashed];
m29_435 -> m29_435  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m29_436 -> m29_436  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m29_437 -> m29_437  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m29_438 -> m29_438  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m29_439 -> m29_439  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m29_440 -> m29_440  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m29_24 -> m29_588  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_24 -> m29_589  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_24 -> m29_590  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_24 -> m29_591  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_22 -> m29_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_22 -> m29_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m29_22 -> m29_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_22 -> m29_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m29_22 -> m29_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_22 -> m29_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_22 -> m29_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_22 -> m29_72  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_22 -> m29_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_22 -> m29_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_22 -> m29_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_22 -> m29_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_22 -> m29_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_59 -> m29_61  [color=darkseagreen4, key=1, label=converter, style=dashed];
m29_67 -> m29_69  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m29_67 -> m29_70  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m29_89 -> m29_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_89 -> m29_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_89 -> m29_351  [color=darkseagreen4, key=1, label="System.Collections.IEnumerable", style=dashed];
m29_89 -> m29_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m29_89 -> m29_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_89 -> m29_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_89 -> m29_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_89 -> m29_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_89 -> m29_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_89 -> m29_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_89 -> m29_363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_89 -> m29_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_344 -> m29_346  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m29_344 -> m29_358  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m29_344 -> m29_365  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m29_347 -> m29_362  [color=darkseagreen4, key=1, label=hasWrittenMetadataObject, style=dashed];
m29_349 -> m29_359  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m29_351 -> m29_353  [color=darkseagreen4, key=1, label=value, style=dashed];
m29_351 -> m29_354  [color=darkseagreen4, key=1, label=value, style=dashed];
m29_351 -> m29_355  [color=darkseagreen4, key=1, label=value, style=dashed];
m29_351 -> m29_356  [color=darkseagreen4, key=1, label=value, style=dashed];
m29_352 -> m29_355  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m29_352 -> m29_356  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m29_350 -> m29_358  [color=darkseagreen4, key=1, label=index, style=dashed];
m29_261 -> m29_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m29_261 -> m29_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m29_261 -> m29_274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m29_261 -> m29_275  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_261 -> m29_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_261 -> m29_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_261 -> m29_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_261 -> m29_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_271 -> m29_273  [color=darkseagreen4, key=1, label="out object", style=dashed];
m29_271 -> m29_274  [color=darkseagreen4, key=1, label="out object", style=dashed];
m29_271 -> m29_276  [color=darkseagreen4, key=1, label="out object", style=dashed];
m29_271 -> m29_278  [color=darkseagreen4, key=1, label="out object", style=dashed];
m29_271 -> m29_280  [color=darkseagreen4, key=1, label="out object", style=dashed];
m29_272 -> m29_274  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m29_272 -> m29_278  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m29_282 -> m29_285  [color=darkseagreen4, key=1, label=resolvedRequired, style=dashed];
m29_288 -> m29_291  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m29_289 -> m29_291  [color=darkseagreen4, key=1, label="out object", style=dashed];
m29_87 -> m29_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_87 -> m29_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_87 -> m29_334  [color=darkseagreen4, key=1, label=object, style=dashed];
m29_87 -> m29_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_87 -> m29_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_87 -> m29_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_52 -> m29_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_52 -> m29_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_52 -> m29_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_316 -> m29_318  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m29_316 -> m29_320  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m29_38 -> m29_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_38 -> m29_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_38 -> m29_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_38 -> m29_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_38 -> m29_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_38 -> m29_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_260 -> m29_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m29_260 -> m29_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_260 -> m29_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m29_260 -> m29_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_181 -> m29_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_264 -> m29_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m29_264 -> m29_552  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_264 -> m29_558  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_264 -> m29_571  [color=darkseagreen4, key=1, label=object, style=dashed];
m29_264 -> m29_572  [color=darkseagreen4, key=1, label=object, style=dashed];
m29_264 -> m29_576  [color=darkseagreen4, key=1, label=object, style=dashed];
m29_549 -> m29_552  [color=darkseagreen4, key=1, label=dt, style=dashed];
m29_562 -> m29_564  [color=darkseagreen4, key=1, label=d, style=dashed];
m29_567 -> m29_569  [color=darkseagreen4, key=1, label=f, style=dashed];
m29_572 -> m29_574  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m29_570 -> m29_577  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m29_551 -> m29_553  [color=darkseagreen4, key=1, label=sw, style=dashed];
m29_557 -> m29_559  [color=darkseagreen4, key=1, label=sw, style=dashed];
m29_573 -> m29_577  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m29_575 -> m29_577  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m29_127 -> m29_130  [color=darkseagreen4, key=1, label=object, style=dashed];
m29_303 -> m29_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_303 -> m29_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_303 -> m29_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_310 -> m29_312  [color=darkseagreen4, key=1, label=reference, style=dashed];
m29_310 -> m29_314  [color=darkseagreen4, key=1, label=reference, style=dashed];
m29_293 -> m29_607  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_605 -> m29_607  [color=darkseagreen4, key=1, label=isSpecified, style=dashed];
m29_605 -> m29_608  [color=darkseagreen4, key=1, label=isSpecified, style=dashed];
m29_94 -> m29_449  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m29_94 -> m29_450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_94 -> m29_453  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m29_94 -> m29_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_94 -> m29_459  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_94 -> m29_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_94 -> m29_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_94 -> m29_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_94 -> m29_466  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m29_94 -> m29_468  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m29_94 -> m29_471  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_94 -> m29_473  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_94 -> m29_474  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_94 -> m29_476  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_94 -> m29_477  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_94 -> m29_479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_94 -> m29_481  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_451 -> m29_463  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m29_451 -> m29_477  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m29_454 -> m29_458  [color=darkseagreen4, key=1, label=property, style=dashed];
m29_454 -> m29_459  [color=darkseagreen4, key=1, label=property, style=dashed];
m29_454 -> m29_460  [color=darkseagreen4, key=1, label=property, style=dashed];
m29_454 -> m29_462  [color=darkseagreen4, key=1, label=property, style=dashed];
m29_458 -> m29_460  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m29_466 -> m29_468  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m29_466 -> m29_476  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m29_468 -> m29_470  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m29_468 -> m29_471  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m29_468 -> m29_474  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m29_452 -> m29_465  [color=darkseagreen4, key=1, label=index, style=dashed];
m29_465 -> m29_465  [color=darkseagreen4, key=1, label=index, style=dashed];
m29_469 -> m29_471  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m29_469 -> m29_474  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m29_93 -> m29_511  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_93 -> m29_513  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_93 -> m29_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m29_93 -> m29_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m29_93 -> m29_527  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m29_93 -> m29_528  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_93 -> m29_529  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_93 -> m29_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_93 -> m29_531  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_93 -> m29_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_93 -> m29_534  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_93 -> m29_535  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_93 -> m29_537  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_93 -> m29_539  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_510 -> m29_512  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m29_510 -> m29_513  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m29_510 -> m29_534  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m29_510 -> m29_539  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m29_518 -> m29_535  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m29_523 -> m29_528  [color=darkseagreen4, key=1, label=escape, style=dashed];
m29_523 -> m29_531  [color=darkseagreen4, key=1, label=escape, style=dashed];
m29_524 -> m29_528  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m29_524 -> m29_531  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m29_524 -> m29_534  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m29_526 -> m29_530  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m29_526 -> m29_532  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m29_525 -> m29_527  [color=darkseagreen4, key=1, label=value, style=dashed];
m29_525 -> m29_529  [color=darkseagreen4, key=1, label=value, style=dashed];
m29_525 -> m29_530  [color=darkseagreen4, key=1, label=value, style=dashed];
m29_525 -> m29_532  [color=darkseagreen4, key=1, label=value, style=dashed];
m29_212 -> m29_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_212 -> m29_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m29_292 -> m29_598  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_596 -> m29_598  [color=darkseagreen4, key=1, label=shouldSerialize, style=dashed];
m29_596 -> m29_599  [color=darkseagreen4, key=1, label=shouldSerialize, style=dashed];
m29_21 -> m29_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_21 -> m29_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_21 -> m29_177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_21 -> m29_178  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_21 -> m29_179  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_173 -> m29_175  [color=darkseagreen4, key=1, label=reference, style=dashed];
m29_173 -> m29_178  [color=darkseagreen4, key=1, label=reference, style=dashed];
m29_90 -> m29_371  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m29_90 -> m29_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_90 -> m29_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_90 -> m29_377  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_372 -> m29_374  [color=darkseagreen4, key=1, label=hasWrittenMetadataObject, style=dashed];
m29_20 -> m29_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m29_20 -> m29_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m29_20 -> m29_121  [color=darkseagreen4, key=1, label=object, style=dashed];
m29_114 -> m29_119  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m29_485 -> m29_488  [color=darkseagreen4, key=1, label=object, style=dashed];
m29_19 -> m29_34  [color=darkseagreen4, key=1, label=object, style=dashed];
m29_211 -> m29_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m29_211 -> m29_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m29_98 -> m29_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m29_98 -> m29_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m29_98 -> m29_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m29_99 -> m29_102  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m29_99 -> m29_104  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m29_99 -> m29_106  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m29_99 -> m29_108  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m29_101 -> m29_104  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m29_101 -> m29_106  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m29_101 -> m29_108  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m29_103 -> m29_106  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m29_103 -> m29_108  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m29_105 -> m29_108  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m29_610 -> m29_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_72  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_163  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_377  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_397  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_418  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_428  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_429  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_432  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_435  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_438  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_448  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_449  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_470  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_471  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_474  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_476  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_477  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_480  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_481  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_486  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_496  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_503  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_511  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_513  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_527  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_529  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_534  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_535  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_538  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_539  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_587  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_597  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_598  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_606  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m29_610 -> m29_607  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m30_9 -> m30_12  [color=darkseagreen4, key=1, label=model2, style=dashed];
m31_968 -> m31_975  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_968 -> m31_977  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_968 -> m31_980  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_968 -> m31_983  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_968 -> m31_986  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_968 -> m31_988  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_990 -> m31_996  [color=darkseagreen4, key=1, label=constructorName, style=dashed];
m31_364 -> m31_1230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_17 -> m31_20  [color=darkseagreen4, key=1, label=char, style=dashed];
m31_17 -> m31_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_17 -> m31_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_17 -> m31_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_181 -> m31_475  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_181 -> m31_476  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_181 -> m31_483  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_181 -> m31_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_181 -> m31_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_181 -> m31_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_181 -> m31_494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_181 -> m31_507  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_467 -> m31_475  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_467 -> m31_518  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_467 -> m31_527  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_467 -> m31_528  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_843 -> m31_846  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_843 -> m31_849  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_801 -> m31_803  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m31_801 -> m31_808  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m31_805 -> m31_807  [color=darkseagreen4, key=1, label=quoteChar, style=dashed];
m31_815 -> m31_823  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m31_818 -> m31_823  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m31_817 -> m31_823  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m31_191 -> m31_211  [color=darkseagreen4, key=1, label=isWrapped, style=dashed];
m31_201 -> m31_209  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_201 -> m31_238  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_201 -> m31_247  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_201 -> m31_248  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_210 -> m31_215  [color=darkseagreen4, key=1, label=data, style=dashed];
m31_210 -> m31_216  [color=darkseagreen4, key=1, label=data, style=dashed];
m31_668 -> m31_672  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_668 -> m31_673  [color=darkseagreen4, key=1, label=char, style=dashed];
m31_185 -> m31_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_185 -> m31_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_185 -> m31_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_185 -> m31_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_185 -> m31_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_185 -> m31_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_185 -> m31_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_185 -> m31_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_185 -> m31_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_275 -> m31_283  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_275 -> m31_316  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_275 -> m31_323  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_275 -> m31_345  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_275 -> m31_354  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_275 -> m31_355  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_324 -> m31_327  [color=darkseagreen4, key=1, label=expected, style=dashed];
m31_324 -> m31_328  [color=darkseagreen4, key=1, label=expected, style=dashed];
m31_383 -> m31_391  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_383 -> m31_432  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_383 -> m31_441  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_383 -> m31_442  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_417 -> m31_421  [color=darkseagreen4, key=1, label=isTrue, style=dashed];
m31_417 -> m31_422  [color=darkseagreen4, key=1, label=isTrue, style=dashed];
m31_411 -> m31_414  [color=darkseagreen4, key=1, label=b, style=dashed];
m31_412 -> m31_414  [color=darkseagreen4, key=1, label=b, style=dashed];
m31_687 -> m31_689  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m31_687 -> m31_692  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m31_687 -> m31_723  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m31_723 -> m31_723  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m31_725 -> m31_728  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_1170 -> m31_1175  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_1170 -> m31_1176  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_1174 -> m31_1176  [color=darkseagreen4, key=1, label=i, style=dashed];
m31_1174 -> m31_1179  [color=darkseagreen4, key=1, label=i, style=dashed];
m31_1179 -> m31_1179  [color=darkseagreen4, key=1, label=i, style=dashed];
m31_368 -> m31_1243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_369 -> m31_1256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_0 -> m31_2  [color=darkseagreen4, key=1, label="System.IO.TextReader", style=dashed];
m31_1165 -> m31_1167  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_1190 -> m31_1209  [color=darkseagreen4, key=1, label=char, style=dashed];
m31_261 -> m31_939  [color=darkseagreen4, key=1, label=bool, style=dashed];
m31_128 -> m31_133  [color=darkseagreen4, key=1, label=charsRequired, style=dashed];
m31_128 -> m31_134  [color=darkseagreen4, key=1, label=charsRequired, style=dashed];
m31_132 -> m31_134  [color=darkseagreen4, key=1, label=totalCharsRead, style=dashed];
m31_68 -> m31_70  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m31_75 -> m31_77  [color=darkseagreen4, key=1, label=count, style=dashed];
m31_1107 -> m31_1118  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_175 -> m31_1142  [color=darkseagreen4, key=1, label=bool, style=dashed];
m31_175 -> m31_1150  [color=darkseagreen4, key=1, label=bool, style=dashed];
m31_175 -> m31_1155  [color=darkseagreen4, key=1, label=bool, style=dashed];
m31_175 -> m31_1160  [color=darkseagreen4, key=1, label=bool, style=dashed];
m31_1127 -> m31_1140  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m31_1127 -> m31_1147  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m31_1127 -> m31_1154  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m31_1127 -> m31_1159  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m31_1129 -> m31_1140  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m31_1129 -> m31_1147  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m31_1129 -> m31_1154  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m31_1129 -> m31_1159  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m31_1131 -> m31_1140  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m31_1131 -> m31_1147  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m31_1131 -> m31_1154  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m31_1131 -> m31_1159  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m31_1134 -> m31_1142  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m31_1134 -> m31_1150  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m31_1134 -> m31_1155  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m31_1134 -> m31_1160  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m31_59 -> m31_589  [color=darkseagreen4, key=1, label=char, style=dashed];
m31_59 -> m31_593  [color=darkseagreen4, key=1, label=char, style=dashed];
m31_59 -> m31_653  [color=darkseagreen4, key=1, label=char, style=dashed];
m31_578 -> m31_583  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m31_579 -> m31_655  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m31_583 -> m31_583  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m31_583 -> m31_585  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m31_583 -> m31_586  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m31_583 -> m31_596  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m31_580 -> m31_633  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m31_580 -> m31_641  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m31_586 -> m31_586  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m31_586 -> m31_596  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m31_594 -> m31_633  [color=darkseagreen4, key=1, label=escapeStartPos, style=dashed];
m31_594 -> m31_641  [color=darkseagreen4, key=1, label=escapeStartPos, style=dashed];
m31_595 -> m31_598  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_595 -> m31_639  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_596 -> m31_596  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m31_617 -> m31_620  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m31_617 -> m31_641  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m31_624 -> m31_633  [color=darkseagreen4, key=1, label=highSurrogate, style=dashed];
m31_619 -> m31_641  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m31_622 -> m31_636  [color=darkseagreen4, key=1, label=anotherHighSurrogate, style=dashed];
m31_635 -> m31_641  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m31_626 -> m31_628  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m31_626 -> m31_641  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m31_629 -> m31_633  [color=darkseagreen4, key=1, label=highSurrogate, style=dashed];
m31_631 -> m31_633  [color=darkseagreen4, key=1, label=highSurrogate, style=dashed];
m31_630 -> m31_636  [color=darkseagreen4, key=1, label=anotherHighSurrogate, style=dashed];
m31_634 -> m31_641  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m31_642 -> m31_655  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m31_642 -> m31_658  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m31_642 -> m31_659  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m31_650 -> m31_653  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m31_650 -> m31_654  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m31_654 -> m31_654  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m31_654 -> m31_658  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m31_654 -> m31_659  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m31_654 -> m31_661  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m31_661 -> m31_661  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m31_736 -> m31_770  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_736 -> m31_772  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_173 -> m31_961  [color=darkseagreen4, key=1, label=bool, style=dashed];
m31_943 -> m31_945  [color=darkseagreen4, key=1, label=finished, style=dashed];
m31_944 -> m31_961  [color=darkseagreen4, key=1, label=ateWhitespace, style=dashed];
m31_946 -> m31_957  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_958 -> m31_961  [color=darkseagreen4, key=1, label=ateWhitespace, style=dashed];
m31_120 -> m31_122  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_86 -> m31_89  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_86 -> m31_90  [color=darkseagreen4, key=1, label=bool, style=dashed];
m31_86 -> m31_97  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_98 -> m31_100  [color=darkseagreen4, key=1, label=dst, style=dashed];
m31_96 -> m31_99  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m31_96 -> m31_100  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m31_96 -> m31_103  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m31_96 -> m31_104  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m31_109 -> m31_111  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m31_109 -> m31_114  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m31_676 -> m31_682  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m31_679 -> m31_682  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m31_852 -> m31_861  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_852 -> m31_923  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_852 -> m31_925  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_852 -> m31_928  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_871 -> m31_874  [color=darkseagreen4, key=1, label=next, style=dashed];
m31_365 -> m31_1009  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_365 -> m31_1022  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_365 -> m31_1039  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_365 -> m31_1054  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m31_1007 -> m31_1023  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m31_1007 -> m31_1040  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m31_1007 -> m31_1055  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m31_1007 -> m31_1069  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m31_1008 -> m31_1011  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m31_1008 -> m31_1025  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m31_1008 -> m31_1042  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m31_1008 -> m31_1057  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m31_1008 -> m31_1072  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m31_1024 -> m31_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m31_1041 -> m31_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m31_1056 -> m31_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m31_1070 -> m31_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m31_1005 -> m31_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m31_1010 -> m31_1012  [color=darkseagreen4, key=1, label=number, style=dashed];
m31_1010 -> m31_1013  [color=darkseagreen4, key=1, label=number, style=dashed];
m31_1010 -> m31_1014  [color=darkseagreen4, key=1, label=number, style=dashed];
m31_1010 -> m31_1016  [color=darkseagreen4, key=1, label=number, style=dashed];
m31_1010 -> m31_1018  [color=darkseagreen4, key=1, label=number, style=dashed];
m31_1021 -> m31_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m31_1020 -> m31_1102  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m31_1026 -> m31_1030  [color=darkseagreen4, key=1, label=number, style=dashed];
m31_1028 -> m31_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m31_1038 -> m31_1102  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m31_1032 -> m31_1035  [color=darkseagreen4, key=1, label=parseResult, style=dashed];
m31_1034 -> m31_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m31_1043 -> m31_1047  [color=darkseagreen4, key=1, label=number, style=dashed];
m31_1048 -> m31_1050  [color=darkseagreen4, key=1, label=number, style=dashed];
m31_1045 -> m31_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m31_1053 -> m31_1102  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m31_1051 -> m31_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m31_1058 -> m31_1062  [color=darkseagreen4, key=1, label=number, style=dashed];
m31_1060 -> m31_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m31_1068 -> m31_1102  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m31_1066 -> m31_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m31_1071 -> m31_1102  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m31_1073 -> m31_1076  [color=darkseagreen4, key=1, label=number, style=dashed];
m31_1074 -> m31_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m31_1077 -> m31_1102  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m31_1079 -> m31_1083  [color=darkseagreen4, key=1, label=parseResult, style=dashed];
m31_1081 -> m31_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m31_1082 -> m31_1102  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m31_1089 -> m31_1092  [color=darkseagreen4, key=1, label=number, style=dashed];
m31_1089 -> m31_1094  [color=darkseagreen4, key=1, label=number, style=dashed];
m31_1089 -> m31_1099  [color=darkseagreen4, key=1, label=number, style=dashed];
m31_1087 -> m31_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m31_1088 -> m31_1102  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m31_1093 -> m31_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m31_1098 -> m31_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m31_1100 -> m31_1102  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m31_775 -> m31_796  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m31_1283 -> m31_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_153  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_179  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_288  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_294  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_302  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_410  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_428  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_429  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_432  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_436  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_451  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_452  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_453  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_454  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_457  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_470  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_471  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_475  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_478  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_480  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_485  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_492  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_507  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_508  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_520  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_522  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_526  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_528  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_538  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_541  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_546  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_549  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_552  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_554  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_558  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_559  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_560  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_562  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_563  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_564  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_565  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_567  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_568  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_571  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_574  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_583  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_585  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_587  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_589  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_592  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_593  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_632  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_633  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_639  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_640  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_641  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_645  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_649  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_653  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_657  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_659  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_672  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_673  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_677  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_689  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_692  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_693  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_728  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_739  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_740  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_743  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_745  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_746  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_749  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_750  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_753  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_754  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_757  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_760  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_761  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_765  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_767  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_769  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_771  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_772  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_778  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_779  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_781  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_783  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_784  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_787  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_790  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_792  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_795  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_797  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_798  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_804  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_806  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_807  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_808  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_810  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_811  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_812  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_814  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_819  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_820  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_821  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_822  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_823  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_825  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_836  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_838  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_839  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_840  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_844  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_845  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_849  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_855  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_856  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_858  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_861  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_864  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_867  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_870  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_873  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_875  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_876  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_877  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_878  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_881  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_884  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_887  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_888  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_889  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_892  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_895  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_898  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_899  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_902  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_903  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_906  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_907  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_910  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_913  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_914  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_917  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_919  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_922  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_924  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_926  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_928  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_935  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_936  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_938  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_939  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_940  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_941  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_949  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_950  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_952  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_954  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_956  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_959  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_963  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_964  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_970  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_971  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_972  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_974  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_976  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_979  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_982  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_985  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_988  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_991  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_992  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_993  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_994  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_995  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_996  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_997  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_999  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1002  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1003  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1016  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1019  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1030  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1036  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1037  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1047  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1052  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1062  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1067  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1076  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1086  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1090  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1094  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1099  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1133  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1149  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1160  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1163  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1173  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1197  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m31_1283 -> m31_1275  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m32_285 -> m32_287  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_180 -> m32_182  [color=darkseagreen4, key=1, label=bool, style=dashed];
m32_193 -> m32_195  [color=darkseagreen4, key=1, label=char, style=dashed];
m32_63 -> m32_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_63 -> m32_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_63 -> m32_65  [color=darkseagreen4, key=1, label=bool, style=dashed];
m32_144 -> m32_146  [color=darkseagreen4, key=1, label=uint, style=dashed];
m32_162 -> m32_166  [color=darkseagreen4, key=1, label="float?", style=dashed];
m32_185 -> m32_187  [color=darkseagreen4, key=1, label=short, style=dashed];
m32_56 -> m32_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_128 -> m32_132  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_128 -> m32_130  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_240 -> m32_250  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m32_250 -> m32_250  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m32_278 -> m32_281  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_152 -> m32_154  [color=darkseagreen4, key=1, label=ulong, style=dashed];
m32_16 -> m32_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m32_16 -> m32_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m32_16 -> m32_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m32_213 -> m32_222  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m32_174 -> m32_178  [color=darkseagreen4, key=1, label="double?", style=dashed];
m32_169 -> m32_171  [color=darkseagreen4, key=1, label=double, style=dashed];
m32_157 -> m32_159  [color=darkseagreen4, key=1, label=float, style=dashed];
m32_82 -> m32_86  [color=darkseagreen4, key=1, label=currentIndentCount, style=dashed];
m32_272 -> m32_276  [color=darkseagreen4, key=1, label="System.Uri", style=dashed];
m32_266 -> m32_268  [color=darkseagreen4, key=1, label=text, style=dashed];
m32_45 -> m32_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m32_105 -> m32_108  [color=darkseagreen4, key=1, label=object, style=dashed];
m32_105 -> m32_109  [color=darkseagreen4, key=1, label=object, style=dashed];
m32_17 -> m32_22  [color=darkseagreen4, key=1, label=ds, style=dashed];
m32_17 -> m32_24  [color=darkseagreen4, key=1, label=ds, style=dashed];
m32_38 -> m32_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_257 -> m32_259  [color=darkseagreen4, key=1, label=text, style=dashed];
m32_139 -> m32_141  [color=darkseagreen4, key=1, label=int, style=dashed];
m32_0 -> m32_2  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m32_0 -> m32_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m32_202 -> m32_204  [color=darkseagreen4, key=1, label=sbyte, style=dashed];
m32_206 -> m32_208  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_148 -> m32_150  [color=darkseagreen4, key=1, label=long, style=dashed];
m32_156 -> m32_302  [color=darkseagreen4, key=1, label=ulong, style=dashed];
m32_306 -> m32_309  [color=darkseagreen4, key=1, label=length, style=dashed];
m32_143 -> m32_295  [color=darkseagreen4, key=1, label=long, style=dashed];
m32_143 -> m32_297  [color=darkseagreen4, key=1, label=long, style=dashed];
m32_296 -> m32_299  [color=darkseagreen4, key=1, label=uvalue, style=dashed];
m32_123 -> m32_125  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_198 -> m32_200  [color=darkseagreen4, key=1, label=byte, style=dashed];
m32_62 -> m32_135  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_229 -> m32_234  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m32_189 -> m32_191  [color=darkseagreen4, key=1, label=ushort, style=dashed];
m32_312 -> m32_22  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_23  [color=green, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_72  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_129  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_131  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_145  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_149  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_153  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_166  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_178  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_275  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_280  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_282  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_287  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_302  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m32_312 -> m32_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m35_1 -> m35_4  [color=darkseagreen4, key=1, label=o, style=dashed];
m35_1 -> m35_5  [color=darkseagreen4, key=1, label=o, style=dashed];
m35_2 -> m35_4  [color=darkseagreen4, key=1, label=prop1, style=dashed];
m35_3 -> m35_5  [color=darkseagreen4, key=1, label=prop2, style=dashed];
m35_19 -> m35_21  [color=darkseagreen4, key=1, label=o, style=dashed];
m35_19 -> m35_22  [color=darkseagreen4, key=1, label=o, style=dashed];
m35_12 -> m35_14  [color=darkseagreen4, key=1, label=o, style=dashed];
m35_12 -> m35_15  [color=darkseagreen4, key=1, label=o, style=dashed];
m36_42 -> m36_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JContainer", style=dashed];
m36_22 -> m36_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m36_22 -> m36_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m36_22 -> m36_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m36_21 -> m36_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JContainer", style=dashed];
m36_55 -> m36_58  [color=darkseagreen4, key=1, label=firstChild, style=dashed];
m36_13 -> m36_15  [color=darkseagreen4, key=1, label=container, style=dashed];
m36_36 -> m36_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JContainer", style=dashed];
m36_63 -> m36_65  [color=darkseagreen4, key=1, label=endToken, style=dashed];
m36_23 -> m36_78  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m36_23 -> m36_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m36_23 -> m36_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m36_23 -> m36_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m36_23 -> m36_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m36_23 -> m36_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m36_23 -> m36_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m36_23 -> m36_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m36_23 -> m36_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m36_23 -> m36_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m36_23 -> m36_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m36_23 -> m36_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m36_23 -> m36_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m36_23 -> m36_109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m36_23 -> m36_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m36_124 -> m36_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_78  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m36_124 -> m36_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_343 -> m37_345  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_343 -> m37_347  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_343 -> m37_349  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_343 -> m37_350  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_343 -> m37_353  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_343 -> m37_346  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_343 -> m37_352  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_348 -> m37_351  [color=darkseagreen4, key=1, label=d, style=dashed];
m37_481 -> m37_483  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_485  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_486  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_487  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_488  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_490  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_491  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_492  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_493  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_494  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_495  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_496  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_497  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_498  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_499  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_500  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_501  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_503  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_507  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_509  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_484  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_502  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_504  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_481 -> m37_506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_555 -> m37_557  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_555 -> m37_559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_555 -> m37_560  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_555 -> m37_562  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_555 -> m37_563  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_555 -> m37_565  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_555 -> m37_566  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_555 -> m37_568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_555 -> m37_569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_555 -> m37_571  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_555 -> m37_572  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_555 -> m37_558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_555 -> m37_561  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_555 -> m37_564  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_555 -> m37_567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_555 -> m37_570  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_555 -> m37_573  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_420 -> m37_422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_420 -> m37_425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_420 -> m37_426  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_185 -> m37_187  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_776 -> m37_778  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_779  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_781  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_782  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_783  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_785  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_786  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_787  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_788  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_790  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_791  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_792  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_793  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_795  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_796  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_797  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_798  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_800  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_801  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_802  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_804  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_805  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_806  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_807  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_808  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_810  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_811  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_812  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_813  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_814  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_816  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_817  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_818  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_820  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_821  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_822  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_780  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_784  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_789  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_794  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_799  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_803  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_809  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_815  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_819  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_776 -> m37_823  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_455 -> m37_458  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_455 -> m37_460  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_455 -> m37_462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_455 -> m37_464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_455 -> m37_466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_455 -> m37_468  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_455 -> m37_470  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_455 -> m37_472  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_455 -> m37_474  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_455 -> m37_476  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_455 -> m37_457  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_455 -> m37_459  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_455 -> m37_461  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_455 -> m37_463  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_455 -> m37_465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_455 -> m37_467  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_455 -> m37_469  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_455 -> m37_471  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_455 -> m37_473  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_455 -> m37_475  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1025 -> m37_1028  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1025 -> m37_1029  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1025 -> m37_1030  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1025 -> m37_1031  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1025 -> m37_1032  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1025 -> m37_1033  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1025 -> m37_1034  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1025 -> m37_1035  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1027 -> m37_1029  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1027 -> m37_1030  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1027 -> m37_1031  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1027 -> m37_1032  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1027 -> m37_1033  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1027 -> m37_1034  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1027 -> m37_1035  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1024 -> m37_1026  [color=darkseagreen4, key=1, label=source, style=dashed];
m37_692 -> m37_694  [color=darkseagreen4, key=1, label=data, style=dashed];
m37_696 -> m37_698  [color=darkseagreen4, key=1, label=data, style=dashed];
m37_577 -> m37_580  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_582  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_583  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_585  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_586  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_588  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_589  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_591  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_594  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_595  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_597  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_598  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_600  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_601  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_603  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_604  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_606  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_607  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_609  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_610  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_612  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_613  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_579  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_581  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_584  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_587  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_590  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_593  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_596  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_599  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_602  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_605  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_608  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_611  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_577 -> m37_614  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_179 -> m37_181  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_758 -> m37_762  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_758 -> m37_763  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_758 -> m37_765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_758 -> m37_767  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_758 -> m37_769  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_758 -> m37_771  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_758 -> m37_760  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_758 -> m37_761  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_758 -> m37_764  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_758 -> m37_766  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_758 -> m37_768  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_758 -> m37_770  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_96 -> m37_98  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_96 -> m37_100  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_96 -> m37_102  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_96 -> m37_103  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_96 -> m37_105  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_96 -> m37_99  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_96 -> m37_101  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_96 -> m37_104  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_296 -> m37_296  [color=darkseagreen4, key=1, label=dt, style=dashed];
m37_286 -> m37_289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_286 -> m37_291  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_286 -> m37_293  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_286 -> m37_294  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_286 -> m37_298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_286 -> m37_288  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_286 -> m37_290  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_286 -> m37_292  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_286 -> m37_297  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_137 -> m37_139  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_137 -> m37_141  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_137 -> m37_142  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_137 -> m37_143  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_137 -> m37_145  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_137 -> m37_146  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_137 -> m37_147  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_137 -> m37_149  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_137 -> m37_150  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_137 -> m37_151  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_137 -> m37_153  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_137 -> m37_140  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_137 -> m37_144  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_137 -> m37_148  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_137 -> m37_152  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_137 -> m37_154  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_516 -> m37_518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_529  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_530  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_539  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_541  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_545  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_547  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_549  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_528  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_538  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_546  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_548  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_516 -> m37_550  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_949 -> m37_951  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_949 -> m37_953  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_949 -> m37_956  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_949 -> m37_958  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_949 -> m37_952  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_949 -> m37_957  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_949 -> m37_959  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_948 -> m37_955  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m37_410 -> m37_413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_410 -> m37_412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_410 -> m37_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_410 -> m37_414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_412 -> m37_416  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_896 -> m37_899  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_896 -> m37_898  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_430 -> m37_432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_430 -> m37_433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_430 -> m37_439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_430 -> m37_434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_430 -> m37_435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_430 -> m37_436  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_433 -> m37_438  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_1007 -> m37_1009  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1007 -> m37_1010  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1007 -> m37_1011  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1007 -> m37_1012  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1007 -> m37_1013  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1007 -> m37_1014  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1007 -> m37_1015  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1005 -> m37_1008  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1005 -> m37_1009  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1005 -> m37_1010  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1005 -> m37_1011  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1005 -> m37_1012  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1005 -> m37_1013  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1005 -> m37_1014  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1005 -> m37_1015  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1004 -> m37_1006  [color=darkseagreen4, key=1, label=source, style=dashed];
m37_827 -> m37_829  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_826 -> m37_829  [color=darkseagreen4, key=1, label=s, style=dashed];
m37_2 -> m37_4  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_5  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_6  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_7  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_8  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_9  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_10  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_11  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_12  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_13  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_14  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_15  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_16  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_17  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_18  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_19  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_20  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_21  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_22  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_23  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_24  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_25  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_26  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_27  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_28  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_29  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_30  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_31  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_32  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_33  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_34  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_35  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_36  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_37  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_38  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_39  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_2 -> m37_40  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_271 -> m37_281  [color=green, key=1, label=reader, style=dashed];
m37_271 -> m37_273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_271 -> m37_274  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_271 -> m37_275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_271 -> m37_276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_271 -> m37_277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_271 -> m37_278  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_271 -> m37_279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_271 -> m37_280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_629 -> m37_634  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_631 -> m37_634  [color=darkseagreen4, key=1, label=i, style=dashed];
m37_631 -> m37_631  [color=darkseagreen4, key=1, label=i, style=dashed];
m37_627 -> m37_631  [color=darkseagreen4, key=1, label=i, style=dashed];
m37_620 -> m37_635  [color=darkseagreen4, key=1, label=clientReceivedEvent, style=dashed];
m37_620 -> m37_657  [color=darkseagreen4, key=1, label=clientReceivedEvent, style=dashed];
m37_623 -> m37_625  [color=darkseagreen4, key=1, label=socket, style=dashed];
m37_619 -> m37_651  [color=darkseagreen4, key=1, label=serverStartedEvent, style=dashed];
m37_619 -> m37_622  [color=darkseagreen4, key=1, label=serverStartedEvent, style=dashed];
m37_621 -> m37_648  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_617 -> m37_625  [color=darkseagreen4, key=1, label=port, style=dashed];
m37_669 -> m37_671  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_669 -> m37_673  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_669 -> m37_675  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_669 -> m37_677  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_669 -> m37_678  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_669 -> m37_680  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_669 -> m37_681  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_669 -> m37_683  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_669 -> m37_684  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_669 -> m37_686  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_669 -> m37_688  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_669 -> m37_672  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_669 -> m37_674  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_669 -> m37_676  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_669 -> m37_679  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_669 -> m37_682  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_669 -> m37_685  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_669 -> m37_687  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_1039 -> m37_1042  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1039 -> m37_1043  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1039 -> m37_1044  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1039 -> m37_1045  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1039 -> m37_1046  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1039 -> m37_1047  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1039 -> m37_1048  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1039 -> m37_1049  [color=darkseagreen4, key=1, label=token, style=dashed];
m37_1041 -> m37_1043  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1041 -> m37_1044  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1041 -> m37_1045  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1041 -> m37_1046  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1041 -> m37_1047  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1041 -> m37_1048  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1041 -> m37_1049  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1038 -> m37_1040  [color=darkseagreen4, key=1, label=source, style=dashed];
m37_80 -> m37_82  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_80 -> m37_84  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_80 -> m37_85  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_80 -> m37_87  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_80 -> m37_88  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_80 -> m37_90  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_80 -> m37_83  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_80 -> m37_86  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_80 -> m37_89  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_80 -> m37_91  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_214 -> m37_216  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_214 -> m37_218  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_214 -> m37_220  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_214 -> m37_221  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_214 -> m37_222  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_214 -> m37_224  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_214 -> m37_217  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_214 -> m37_219  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_214 -> m37_223  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_241 -> m37_243  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_241 -> m37_245  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_241 -> m37_247  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_241 -> m37_248  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_241 -> m37_249  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_241 -> m37_251  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_241 -> m37_244  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_241 -> m37_246  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_241 -> m37_250  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_383 -> m37_389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_383 -> m37_386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_383 -> m37_388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_383 -> m37_390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_384 -> m37_387  [color=darkseagreen4, key=1, label=i, style=dashed];
m37_387 -> m37_387  [color=darkseagreen4, key=1, label=i, style=dashed];
m37_908 -> m37_913  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_928  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_910  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_912  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_915  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_917  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_918  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_919  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_921  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_922  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_924  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_925  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_927  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_930  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_932  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_934  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_936  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_937  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_939  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_941  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_943  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_911  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_914  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_916  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_920  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_923  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_926  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_929  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_931  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_933  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_935  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_938  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_940  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_908 -> m37_942  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_902 -> m37_913  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m37_902 -> m37_928  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m37_904 -> m37_907  [color=darkseagreen4, key=1, label=count, style=dashed];
m37_907 -> m37_907  [color=darkseagreen4, key=1, label=count, style=dashed];
m37_372 -> m37_378  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_372 -> m37_375  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_372 -> m37_377  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_373 -> m37_376  [color=darkseagreen4, key=1, label=i, style=dashed];
m37_376 -> m37_376  [color=darkseagreen4, key=1, label=i, style=dashed];
m37_713 -> m37_715  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_713 -> m37_716  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_228 -> m37_230  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_228 -> m37_232  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_228 -> m37_231  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_228 -> m37_233  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_228 -> m37_237  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_233 -> m37_236  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_654 -> m37_656  [color=darkseagreen4, key=1, label=bytes, style=dashed];
m37_652 -> m37_655  [color=darkseagreen4, key=1, label=serverSocket, style=dashed];
m37_66 -> m37_68  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_119 -> m37_121  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_119 -> m37_123  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_119 -> m37_124  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_119 -> m37_126  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_119 -> m37_127  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_119 -> m37_129  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_119 -> m37_130  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_119 -> m37_132  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_119 -> m37_122  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_119 -> m37_125  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_119 -> m37_128  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_119 -> m37_131  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_119 -> m37_133  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_442 -> m37_444  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_442 -> m37_445  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_442 -> m37_451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_442 -> m37_446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_442 -> m37_447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_442 -> m37_448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_445 -> m37_450  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_255 -> m37_257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_255 -> m37_259  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_255 -> m37_261  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_255 -> m37_262  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_255 -> m37_263  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_255 -> m37_265  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_255 -> m37_258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_255 -> m37_260  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_255 -> m37_264  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_319 -> m37_321  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_319 -> m37_323  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_319 -> m37_325  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_319 -> m37_326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_319 -> m37_327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_319 -> m37_322  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_319 -> m37_324  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_863  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_865  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_867  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_869  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_871  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_873  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_875  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_877  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_879  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_881  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_883  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_884  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_886  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_887  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_864  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_866  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_868  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_870  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_872  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_874  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_876  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_878  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_880  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_882  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_885  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_861 -> m37_888  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_55 -> m37_59  [color=darkseagreen4, key=1, label=data, style=dashed];
m37_964 -> m37_966  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_964 -> m37_969  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_964 -> m37_973  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_964 -> m37_975  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_964 -> m37_967  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_964 -> m37_968  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_964 -> m37_970  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_964 -> m37_974  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_964 -> m37_976  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_963 -> m37_972  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m37_720 -> m37_722  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_720 -> m37_724  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_720 -> m37_726  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_720 -> m37_728  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_720 -> m37_730  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_720 -> m37_731  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_720 -> m37_732  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_720 -> m37_734  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_720 -> m37_723  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_720 -> m37_725  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_720 -> m37_727  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_720 -> m37_729  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_720 -> m37_733  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_720 -> m37_735  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_73 -> m37_75  [color=darkseagreen4, key=1, label=data, style=dashed];
m37_73 -> m37_76  [color=darkseagreen4, key=1, label=data, style=dashed];
m37_50 -> m37_52  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_158 -> m37_160  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_158 -> m37_162  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_158 -> m37_163  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_158 -> m37_164  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_158 -> m37_166  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_158 -> m37_167  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_158 -> m37_168  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_158 -> m37_170  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_158 -> m37_171  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_158 -> m37_172  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_158 -> m37_174  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_158 -> m37_161  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_158 -> m37_165  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_158 -> m37_169  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_158 -> m37_173  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_158 -> m37_175  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_981 -> m37_984  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_981 -> m37_985  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_981 -> m37_987  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_981 -> m37_988  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_981 -> m37_990  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_981 -> m37_991  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_981 -> m37_992  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_981 -> m37_993  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_981 -> m37_995  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_981 -> m37_996  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_981 -> m37_983  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_981 -> m37_986  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_981 -> m37_989  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_981 -> m37_994  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m37_357 -> m37_360  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_357 -> m37_362  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_357 -> m37_364  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_357 -> m37_365  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_357 -> m37_368  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_357 -> m37_359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_357 -> m37_361  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_357 -> m37_367  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_363 -> m37_366  [color=darkseagreen4, key=1, label=d, style=dashed];
m37_313 -> m37_313  [color=darkseagreen4, key=1, label=dt, style=dashed];
m37_303 -> m37_306  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_303 -> m37_308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_303 -> m37_310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_303 -> m37_311  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_303 -> m37_315  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_303 -> m37_305  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_303 -> m37_307  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_303 -> m37_309  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_303 -> m37_314  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_891 -> m37_893  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_197 -> m37_199  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_197 -> m37_201  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_197 -> m37_203  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_197 -> m37_204  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_197 -> m37_205  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_197 -> m37_207  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_197 -> m37_200  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_197 -> m37_202  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_197 -> m37_206  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_744 -> m37_746  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_744 -> m37_748  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_744 -> m37_750  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_744 -> m37_751  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_744 -> m37_753  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_744 -> m37_747  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_744 -> m37_749  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_744 -> m37_752  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_744 -> m37_754  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_705 -> m37_709  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_705 -> m37_707  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_705 -> m37_708  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m37_331 -> m37_333  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_331 -> m37_335  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_331 -> m37_334  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_331 -> m37_336  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_331 -> m37_339  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_336 -> m37_338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_190 -> m37_192  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_843 -> m37_848  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_843 -> m37_847  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_843 -> m37_850  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_843 -> m37_851  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_845 -> m37_848  [color=darkseagreen4, key=1, label=i, style=dashed];
m37_845 -> m37_849  [color=darkseagreen4, key=1, label=i, style=dashed];
m37_849 -> m37_849  [color=darkseagreen4, key=1, label=i, style=dashed];
m37_833 -> m37_846  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m37_833 -> m37_838  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m37_835 -> m37_841  [color=darkseagreen4, key=1, label=writer, style=dashed];
m37_835 -> m37_839  [color=darkseagreen4, key=1, label=writer, style=dashed];
m37_837 -> m37_839  [color=darkseagreen4, key=1, label=i, style=dashed];
m37_837 -> m37_840  [color=darkseagreen4, key=1, label=i, style=dashed];
m37_840 -> m37_840  [color=darkseagreen4, key=1, label=i, style=dashed];
m37_1055 -> m37_439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1052 -> m37_237  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1053 -> m37_339  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1054 -> m37_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1056 -> m37_451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m37_1060 -> m37_657  [color=darkseagreen4, key=1, label=clientReceivedEvent, style=dashed];
m37_1058 -> m37_651  [color=darkseagreen4, key=1, label=serverStartedEvent, style=dashed];
m40_273 -> m40_276  [color=darkseagreen4, key=1, label=fieldInfo, style=dashed];
m40_280 -> m40_285  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m40_199 -> m40_202  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_199 -> m40_204  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_199 -> m40_209  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_199 -> m40_213  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_206 -> m40_214  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m40_207 -> m40_214  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m40_210 -> m40_214  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m40_211 -> m40_214  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m40_547 -> m40_550  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_547 -> m40_578  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_547 -> m40_580  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_39 -> m40_41  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationBinder", style=dashed];
m40_39 -> m40_43  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_39 -> m40_46  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle", style=dashed];
m40_45 -> m40_48  [color=darkseagreen4, key=1, label=fullyQualifiedTypeName, style=dashed];
m40_45 -> m40_50  [color=darkseagreen4, key=1, label=fullyQualifiedTypeName, style=dashed];
m40_44 -> m40_48  [color=darkseagreen4, key=1, label=fullyQualifiedTypeName, style=dashed];
m40_44 -> m40_50  [color=darkseagreen4, key=1, label=fullyQualifiedTypeName, style=dashed];
m40_129 -> m40_131  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_381 -> m40_393  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_381 -> m40_396  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_381 -> m40_399  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_381 -> m40_402  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_385 -> m40_391  [color=darkseagreen4, key=1, label=provider, style=dashed];
m40_385 -> m40_394  [color=darkseagreen4, key=1, label=provider, style=dashed];
m40_385 -> m40_397  [color=darkseagreen4, key=1, label=provider, style=dashed];
m40_385 -> m40_400  [color=darkseagreen4, key=1, label=provider, style=dashed];
m40_504 -> m40_509  [color=darkseagreen4, key=1, label="System.Reflection.BindingFlags", style=dashed];
m40_504 -> m40_514  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>", style=dashed];
m40_504 -> m40_521  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>", style=dashed];
m40_504 -> m40_524  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>", style=dashed];
m40_512 -> m40_528  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_519 -> m40_531  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_522 -> m40_534  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_510 -> m40_529  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m40_510 -> m40_514  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m40_510 -> m40_518  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m40_510 -> m40_532  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m40_510 -> m40_521  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m40_510 -> m40_535  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m40_510 -> m40_524  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m40_182 -> m40_185  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_182 -> m40_186  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_182 -> m40_187  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_182 -> m40_189  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_182 -> m40_191  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_182 -> m40_193  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_187 -> m40_190  [color=darkseagreen4, key=1, label=genericListType, style=dashed];
m40_84 -> m40_86  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_84 -> m40_88  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_312 -> m40_314  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_312 -> m40_315  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_312 -> m40_326  [color=darkseagreen4, key=1, label="System.Reflection.BindingFlags", style=dashed];
m40_313 -> m40_315  [color=darkseagreen4, key=1, label=targetMembers, style=dashed];
m40_313 -> m40_317  [color=darkseagreen4, key=1, label=targetMembers, style=dashed];
m40_316 -> m40_321  [color=darkseagreen4, key=1, label=distinctMembers, style=dashed];
m40_316 -> m40_328  [color=darkseagreen4, key=1, label=distinctMembers, style=dashed];
m40_316 -> m40_329  [color=darkseagreen4, key=1, label=distinctMembers, style=dashed];
m40_317 -> m40_343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_318 -> m40_320  [color=darkseagreen4, key=1, label=count, style=dashed];
m40_319 -> m40_321  [color=darkseagreen4, key=1, label=members, style=dashed];
m40_319 -> m40_323  [color=darkseagreen4, key=1, label=members, style=dashed];
m40_323 -> m40_325  [color=darkseagreen4, key=1, label=memberInfo, style=dashed];
m40_323 -> m40_326  [color=darkseagreen4, key=1, label=memberInfo, style=dashed];
m40_323 -> m40_327  [color=darkseagreen4, key=1, label=memberInfo, style=dashed];
m40_322 -> m40_324  [color=darkseagreen4, key=1, label=resolvedMembers, style=dashed];
m40_322 -> m40_325  [color=darkseagreen4, key=1, label=resolvedMembers, style=dashed];
m40_322 -> m40_327  [color=darkseagreen4, key=1, label=resolvedMembers, style=dashed];
m40_322 -> m40_328  [color=darkseagreen4, key=1, label=resolvedMembers, style=dashed];
m40_113 -> m40_115  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_595 -> m40_598  [color=darkseagreen4, key=1, label=object, style=dashed];
m40_598 -> m40_608  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.TypeNameKey", style=dashed];
m40_588 -> m40_606  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.TypeNameKey", style=dashed];
m40_589 -> m40_606  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.TypeNameKey", style=dashed];
m40_237 -> m40_239  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m40_430 -> m40_437  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_435 -> m40_441  [color=darkseagreen4, key=1, label=scope, style=dashed];
m40_436 -> m40_446  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_436 -> m40_447  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_441 -> m40_441  [color=darkseagreen4, key=1, label=scope, style=dashed];
m40_441 -> m40_443  [color=darkseagreen4, key=1, label=scope, style=dashed];
m40_447 -> m40_447  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_443 -> m40_443  [color=darkseagreen4, key=1, label=scope, style=dashed];
m40_443 -> m40_445  [color=darkseagreen4, key=1, label=scope, style=dashed];
m40_91 -> m40_96  [color=darkseagreen4, key=1, label=bool, style=dashed];
m40_91 -> m40_98  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_95 -> m40_98  [color=darkseagreen4, key=1, label=bindingFlags, style=dashed];
m40_98 -> m40_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_232 -> m40_234  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m40_450 -> m40_452  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_450 -> m40_456  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_450 -> m40_457  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_451 -> m40_456  [color=darkseagreen4, key=1, label=bindingAttr, style=dashed];
m40_451 -> m40_457  [color=darkseagreen4, key=1, label=bindingAttr, style=dashed];
m40_454 -> m40_456  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m40_455 -> m40_464  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_332 -> m40_469  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_468 -> m40_470  [color=darkseagreen4, key=1, label=fieldInfos, style=dashed];
m40_289 -> m40_295  [color=darkseagreen4, key=1, label=bool, style=dashed];
m40_289 -> m40_297  [color=darkseagreen4, key=1, label=bool, style=dashed];
m40_289 -> m40_306  [color=darkseagreen4, key=1, label=bool, style=dashed];
m40_289 -> m40_308  [color=darkseagreen4, key=1, label=bool, style=dashed];
m40_292 -> m40_295  [color=darkseagreen4, key=1, label=fieldInfo, style=dashed];
m40_292 -> m40_299  [color=darkseagreen4, key=1, label=fieldInfo, style=dashed];
m40_303 -> m40_308  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m40_170 -> m40_173  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_170 -> m40_176  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_170 -> m40_179  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_162 -> m40_164  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_162 -> m40_165  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_162 -> m40_166  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_162 -> m40_167  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_375 -> m40_379  [color=darkseagreen4, key=1, label=a, style=dashed];
m40_376 -> m40_378  [color=darkseagreen4, key=1, label=attributes, style=dashed];
m40_107 -> m40_109  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_107 -> m40_110  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_19 -> m40_21  [color=darkseagreen4, key=1, label=m, style=dashed];
m40_22 -> m40_24  [color=darkseagreen4, key=1, label=m, style=dashed];
m40_133 -> m40_135  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_133 -> m40_136  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_133 -> m40_137  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_133 -> m40_138  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_133 -> m40_139  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_133 -> m40_141  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_133 -> m40_144  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_133 -> m40_147  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_150 -> m40_152  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m40_158 -> m40_160  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_242 -> m40_244  [color=darkseagreen4, key=1, label=object, style=dashed];
m40_242 -> m40_245  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_242 -> m40_247  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_242 -> m40_249  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_242 -> m40_251  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_242 -> m40_252  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_538 -> m40_545  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_539 -> m40_544  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_474 -> m40_479  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Reflection.MemberInfo>", style=dashed];
m40_476 -> m40_478  [color=darkseagreen4, key=1, label=nonPublicBindingAttr, style=dashed];
m40_478 -> m40_485  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_258 -> m40_260  [color=darkseagreen4, key=1, label=object, style=dashed];
m40_258 -> m40_261  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_258 -> m40_263  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_258 -> m40_265  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_258 -> m40_266  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_420 -> m40_423  [color=darkseagreen4, key=1, label=assemblyDelimiterIndex, style=dashed];
m40_424 -> m40_428  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m40_426 -> m40_428  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m40_54 -> m40_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_56 -> m40_66  [color=darkseagreen4, key=1, label=builder, style=dashed];
m40_56 -> m40_70  [color=darkseagreen4, key=1, label=builder, style=dashed];
m40_56 -> m40_74  [color=darkseagreen4, key=1, label=builder, style=dashed];
m40_56 -> m40_77  [color=darkseagreen4, key=1, label=builder, style=dashed];
m40_56 -> m40_79  [color=darkseagreen4, key=1, label=builder, style=dashed];
m40_61 -> m40_66  [color=darkseagreen4, key=1, label=current, style=dashed];
m40_61 -> m40_70  [color=darkseagreen4, key=1, label=current, style=dashed];
m40_61 -> m40_74  [color=darkseagreen4, key=1, label=current, style=dashed];
m40_61 -> m40_77  [color=darkseagreen4, key=1, label=current, style=dashed];
m40_59 -> m40_78  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_78 -> m40_78  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_68 -> m40_72  [color=darkseagreen4, key=1, label=writingAssemblyName, style=dashed];
m40_69 -> m40_76  [color=darkseagreen4, key=1, label=skippingAssemblyDetails, style=dashed];
m40_75 -> m40_76  [color=darkseagreen4, key=1, label=skippingAssemblyDetails, style=dashed];
m40_334 -> m40_490  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_334 -> m40_491  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_334 -> m40_492  [color=darkseagreen4, key=1, label="System.Reflection.BindingFlags", style=dashed];
m40_334 -> m40_493  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_334 -> m40_497  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_489 -> m40_492  [color=darkseagreen4, key=1, label=propertyInfos, style=dashed];
m40_489 -> m40_493  [color=darkseagreen4, key=1, label=propertyInfos, style=dashed];
m40_489 -> m40_495  [color=darkseagreen4, key=1, label=propertyInfos, style=dashed];
m40_489 -> m40_501  [color=darkseagreen4, key=1, label=propertyInfos, style=dashed];
m40_494 -> m40_500  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_500 -> m40_500  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_215 -> m40_217  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_215 -> m40_219  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_215 -> m40_221  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_215 -> m40_223  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_215 -> m40_225  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_215 -> m40_226  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m40_28 -> m40_31  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m40_123 -> m40_127  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_603 -> m40_529  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m40_603 -> m40_532  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m40_603 -> m40_535  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m40_604 -> m40_545  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_605 -> m40_545  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_607 -> m40_592  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.TypeNameKey", style=dashed];
m40_607 -> m40_598  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.TypeNameKey", style=dashed];
m40_607 -> m40_601  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.TypeNameKey", style=dashed];
m40_608 -> m40_599  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.Utilities.TypeNameKey", style=dashed];
m41_31 -> m41_34  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m41_31 -> m41_42  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m41_83 -> m41_87  [color=darkseagreen4, key=1, label=g, style=dashed];
m41_85 -> m41_87  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_85 -> m41_88  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_89 -> m41_91  [color=darkseagreen4, key=1, label=bson, style=dashed];
m41_98 -> m41_100  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_98 -> m41_101  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_98 -> m41_102  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_98 -> m41_103  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_98 -> m41_104  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_106 -> m41_108  [color=darkseagreen4, key=1, label=expected, style=dashed];
m41_97 -> m41_105  [color=darkseagreen4, key=1, label=ms, style=dashed];
m41_19 -> m41_21  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_19 -> m41_22  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_19 -> m41_23  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_220 -> m41_229  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_220 -> m41_230  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_220 -> m41_231  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_220 -> m41_232  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_221 -> m41_225  [color=darkseagreen4, key=1, label=largeStringBuilder, style=dashed];
m41_221 -> m41_226  [color=darkseagreen4, key=1, label=largeStringBuilder, style=dashed];
m41_222 -> m41_224  [color=darkseagreen4, key=1, label=i, style=dashed];
m41_222 -> m41_226  [color=darkseagreen4, key=1, label=i, style=dashed];
m41_222 -> m41_227  [color=darkseagreen4, key=1, label=i, style=dashed];
m41_228 -> m41_230  [color=darkseagreen4, key=1, label=largeString, style=dashed];
m41_228 -> m41_231  [color=darkseagreen4, key=1, label=largeString, style=dashed];
m41_227 -> m41_227  [color=darkseagreen4, key=1, label=i, style=dashed];
m41_75 -> m41_77  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_75 -> m41_78  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_57 -> m41_61  [color=darkseagreen4, key=1, label=values, style=dashed];
m41_57 -> m41_62  [color=darkseagreen4, key=1, label=values, style=dashed];
m41_543 -> m41_545  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_543 -> m41_546  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_543 -> m41_547  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_551 -> m41_554  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_551 -> m41_556  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_551 -> m41_560  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_551 -> m41_562  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_551 -> m41_559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_551 -> m41_553  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_551 -> m41_555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_551 -> m41_557  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_551 -> m41_558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_551 -> m41_561  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_541 -> m41_559  [color=darkseagreen4, key=1, label=i, style=dashed];
m41_541 -> m41_546  [color=darkseagreen4, key=1, label=i, style=dashed];
m41_542 -> m41_550  [color=darkseagreen4, key=1, label=ms, style=dashed];
m41_491 -> m41_493  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m41_489 -> m41_493  [color=darkseagreen4, key=1, label=c, style=dashed];
m41_382 -> m41_384  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_382 -> m41_385  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_382 -> m41_386  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_382 -> m41_387  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_382 -> m41_388  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_381 -> m41_390  [color=darkseagreen4, key=1, label=ms, style=dashed];
m41_294 -> m41_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_442 -> m41_444  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_442 -> m41_445  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_442 -> m41_446  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_442 -> m41_447  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_442 -> m41_448  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_450 -> m41_453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_450 -> m41_455  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_450 -> m41_458  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_450 -> m41_461  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_450 -> m41_464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_450 -> m41_466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_450 -> m41_454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_450 -> m41_456  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_450 -> m41_457  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_450 -> m41_459  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_450 -> m41_460  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_450 -> m41_462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_450 -> m41_463  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_450 -> m41_465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_441 -> m41_449  [color=darkseagreen4, key=1, label=ms, style=dashed];
m41_18 -> m41_24  [color=darkseagreen4, key=1, label=ms, style=dashed];
m41_507 -> m41_511  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_506 -> m41_511  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m41_506 -> m41_508  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m41_504 -> m41_511  [color=darkseagreen4, key=1, label=b, style=dashed];
m41_504 -> m41_508  [color=darkseagreen4, key=1, label=b, style=dashed];
m41_508 -> m41_510  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_304 -> m41_306  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_514 -> m41_519  [color=green, key=1, label=c, style=dashed];
m41_514 -> m41_523  [color=green, key=1, label=c, style=dashed];
m41_517 -> m41_519  [color=green, key=1, label=serializer, style=dashed];
m41_516 -> m41_520  [color=darkseagreen4, key=1, label=ms, style=dashed];
m41_117 -> m41_119  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_117 -> m41_120  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_117 -> m41_121  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_117 -> m41_122  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_117 -> m41_123  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_128 -> m41_130  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_128 -> m41_131  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_128 -> m41_132  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_128 -> m41_133  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_128 -> m41_134  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_128 -> m41_135  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_125 -> m41_127  [color=darkseagreen4, key=1, label=expected, style=dashed];
m41_116 -> m41_124  [color=darkseagreen4, key=1, label=ms, style=dashed];
m41_115 -> m41_135  [color=darkseagreen4, key=1, label=data, style=dashed];
m41_115 -> m41_121  [color=darkseagreen4, key=1, label=data, style=dashed];
m41_314 -> m41_316  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_37 -> m41_40  [color=darkseagreen4, key=1, label=nameValues, style=dashed];
m41_37 -> m41_44  [color=darkseagreen4, key=1, label=nameValues, style=dashed];
m41_36 -> m41_39  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_36 -> m41_40  [color=darkseagreen4, key=1, label=enumNames, style=dashed];
m41_36 -> m41_41  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_36 -> m41_42  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_36 -> m41_43  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_36 -> m41_44  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_36 -> m41_45  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_36 -> m41_46  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_36 -> m41_47  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_36 -> m41_48  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_36 -> m41_49  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_36 -> m41_50  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_36 -> m41_51  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_36 -> m41_52  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_38 -> m41_40  [color=darkseagreen4, key=1, label=i, style=dashed];
m41_38 -> m41_42  [color=darkseagreen4, key=1, label=i, style=dashed];
m41_38 -> m41_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m41_35 -> m41_53  [color=darkseagreen4, key=1, label=ms, style=dashed];
m41_35 -> m41_39  [color=darkseagreen4, key=1, label=enumValues, style=dashed];
m41_35 -> m41_40  [color=darkseagreen4, key=1, label=enumValues, style=dashed];
m41_35 -> m41_42  [color=darkseagreen4, key=1, label=enumValues, style=dashed];
m41_43 -> m41_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m41_48 -> m41_56  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m41_48 -> m41_58  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m41_527 -> m41_532  [color=green, key=1, label=c, style=dashed];
m41_527 -> m41_536  [color=green, key=1, label=c, style=dashed];
m41_529 -> m41_533  [color=darkseagreen4, key=1, label=ms, style=dashed];
m41_530 -> m41_532  [color=green, key=1, label=serializer, style=dashed];
m41_370 -> m41_372  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_370 -> m41_373  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_370 -> m41_374  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_370 -> m41_375  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_370 -> m41_376  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_369 -> m41_378  [color=darkseagreen4, key=1, label=ms, style=dashed];
m41_288 -> m41_290  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_298 -> m41_300  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_308 -> m41_310  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_318 -> m41_320  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_473 -> m41_475  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_8 -> m41_10  [color=darkseagreen4, key=1, label=enumNameValue, style=dashed];
m41_7 -> m41_9  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_7 -> m41_10  [color=darkseagreen4, key=1, label=selectedFlagsValues, style=dashed];
m41_7 -> m41_11  [color=darkseagreen4, key=1, label=selectedFlagsValues, style=dashed];
m41_7 -> m41_12  [color=darkseagreen4, key=1, label=selectedFlagsValues, style=dashed];
m41_1 -> m41_3  [color=darkseagreen4, key=1, label=enumType, style=dashed];
m41_4 -> m41_10  [color=darkseagreen4, key=1, label=underlyingType, style=dashed];
m41_6 -> m41_8  [color=darkseagreen4, key=1, label=enumNameValues, style=dashed];
m41_6 -> m41_10  [color=darkseagreen4, key=1, label=ms, style=dashed];
m41_6 -> m41_11  [color=darkseagreen4, key=1, label=enumNameValues, style=dashed];
m41_5 -> m41_9  [color=darkseagreen4, key=1, label=num, style=dashed];
m41_11 -> m41_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_58 -> m41_58  [color=darkseagreen4, key=1, label=field, style=dashed];
m41_330 -> m41_332  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m41_324 -> m41_332  [color=darkseagreen4, key=1, label=p, style=dashed];
m41_336 -> m41_338  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m41_336 -> m41_339  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m41_336 -> m41_340  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m41_329 -> m41_334  [color=darkseagreen4, key=1, label=ms, style=dashed];
m41_329 -> m41_333  [color=darkseagreen4, key=1, label=ms, style=dashed];
m41_356 -> m41_358  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_356 -> m41_359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_356 -> m41_360  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_356 -> m41_361  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_356 -> m41_362  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_356 -> m41_363  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_356 -> m41_364  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_356 -> m41_365  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_346 -> m41_355  [color=darkseagreen4, key=1, label=ms, style=dashed];
m41_347 -> m41_349  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_347 -> m41_350  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_347 -> m41_351  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_347 -> m41_352  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_348 -> m41_363  [color=darkseagreen4, key=1, label=oid, style=dashed];
m41_348 -> m41_351  [color=darkseagreen4, key=1, label=oid, style=dashed];
m41_469 -> m41_471  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_479 -> m41_481  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_479 -> m41_482  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_478 -> m41_483  [color=darkseagreen4, key=1, label=ms, style=dashed];
m41_144 -> m41_149  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_144 -> m41_146  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_144 -> m41_147  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_144 -> m41_148  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_144 -> m41_153  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_144 -> m41_155  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_144 -> m41_156  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_144 -> m41_157  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_144 -> m41_158  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_144 -> m41_159  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_150 -> m41_154  [color=darkseagreen4, key=1, label=i, style=dashed];
m41_161 -> m41_163  [color=darkseagreen4, key=1, label=expected, style=dashed];
m41_143 -> m41_160  [color=darkseagreen4, key=1, label=ms, style=dashed];
m41_154 -> m41_154  [color=darkseagreen4, key=1, label=i, style=dashed];
m41_274 -> m41_276  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_274 -> m41_277  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_274 -> m41_278  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_244 -> m41_246  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_242 -> m41_246  [color=darkseagreen4, key=1, label=jsonGoogleMapGeocoder, style=dashed];
m41_249 -> m41_251  [color=darkseagreen4, key=1, label=bsonGoogleMapGeocoder, style=dashed];
m41_249 -> m41_252  [color=darkseagreen4, key=1, label=bsonGoogleMapGeocoder, style=dashed];
m41_249 -> m41_253  [color=darkseagreen4, key=1, label=bsonGoogleMapGeocoder, style=dashed];
m41_254 -> m41_256  [color=darkseagreen4, key=1, label=placemarks, style=dashed];
m41_257 -> m41_259  [color=darkseagreen4, key=1, label=placemark, style=dashed];
m41_257 -> m41_260  [color=darkseagreen4, key=1, label=placemark, style=dashed];
m41_257 -> m41_261  [color=darkseagreen4, key=1, label=placemark, style=dashed];
m41_257 -> m41_262  [color=darkseagreen4, key=1, label=placemark, style=dashed];
m41_257 -> m41_263  [color=darkseagreen4, key=1, label=placemark, style=dashed];
m41_257 -> m41_264  [color=darkseagreen4, key=1, label=placemark, style=dashed];
m41_257 -> m41_265  [color=darkseagreen4, key=1, label=placemark, style=dashed];
m41_257 -> m41_266  [color=darkseagreen4, key=1, label=placemark, style=dashed];
m41_257 -> m41_267  [color=darkseagreen4, key=1, label=placemark, style=dashed];
m41_257 -> m41_268  [color=darkseagreen4, key=1, label=placemark, style=dashed];
m41_243 -> m41_247  [color=darkseagreen4, key=1, label=ms, style=dashed];
m41_400 -> m41_402  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m41_394 -> m41_402  [color=darkseagreen4, key=1, label=p, style=dashed];
m41_405 -> m41_407  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m41_405 -> m41_408  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m41_405 -> m41_409  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m41_405 -> m41_410  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m41_405 -> m41_411  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m41_405 -> m41_412  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m41_399 -> m41_403  [color=darkseagreen4, key=1, label=ms, style=dashed];
m41_416 -> m41_418  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_416 -> m41_419  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_416 -> m41_420  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_416 -> m41_421  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_423 -> m41_425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_423 -> m41_427  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_423 -> m41_430  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_423 -> m41_433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_423 -> m41_436  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_423 -> m41_438  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_423 -> m41_426  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_423 -> m41_428  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_423 -> m41_429  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_423 -> m41_431  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_423 -> m41_432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_423 -> m41_434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_423 -> m41_435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_423 -> m41_437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m41_415 -> m41_422  [color=darkseagreen4, key=1, label=ms, style=dashed];
m41_283 -> m41_286  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_169 -> m41_178  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_177 -> m41_198  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m41_170 -> m41_178  [color=darkseagreen4, key=1, label=s1, style=dashed];
m41_170 -> m41_198  [color=darkseagreen4, key=1, label=s1, style=dashed];
m41_170 -> m41_183  [color=darkseagreen4, key=1, label=s1, style=dashed];
m41_170 -> m41_184  [color=darkseagreen4, key=1, label=s1, style=dashed];
m41_170 -> m41_185  [color=darkseagreen4, key=1, label=s1, style=dashed];
m41_170 -> m41_186  [color=darkseagreen4, key=1, label=s1, style=dashed];
m41_170 -> m41_187  [color=darkseagreen4, key=1, label=s1, style=dashed];
m41_170 -> m41_188  [color=darkseagreen4, key=1, label=s1, style=dashed];
m41_170 -> m41_189  [color=darkseagreen4, key=1, label=s1, style=dashed];
m41_170 -> m41_190  [color=darkseagreen4, key=1, label=s1, style=dashed];
m41_170 -> m41_191  [color=darkseagreen4, key=1, label=s1, style=dashed];
m41_170 -> m41_192  [color=darkseagreen4, key=1, label=s1, style=dashed];
m41_170 -> m41_193  [color=darkseagreen4, key=1, label=s1, style=dashed];
m41_170 -> m41_194  [color=darkseagreen4, key=1, label=s1, style=dashed];
m41_170 -> m41_195  [color=darkseagreen4, key=1, label=s1, style=dashed];
m41_170 -> m41_182  [color=darkseagreen4, key=1, label=s1, style=dashed];
m41_181 -> m41_183  [color=darkseagreen4, key=1, label=s2, style=dashed];
m41_181 -> m41_184  [color=darkseagreen4, key=1, label=s2, style=dashed];
m41_181 -> m41_185  [color=darkseagreen4, key=1, label=s2, style=dashed];
m41_181 -> m41_186  [color=darkseagreen4, key=1, label=s2, style=dashed];
m41_181 -> m41_187  [color=darkseagreen4, key=1, label=s2, style=dashed];
m41_181 -> m41_188  [color=darkseagreen4, key=1, label=s2, style=dashed];
m41_181 -> m41_189  [color=darkseagreen4, key=1, label=s2, style=dashed];
m41_181 -> m41_190  [color=darkseagreen4, key=1, label=s2, style=dashed];
m41_181 -> m41_191  [color=darkseagreen4, key=1, label=s2, style=dashed];
m41_181 -> m41_192  [color=darkseagreen4, key=1, label=s2, style=dashed];
m41_181 -> m41_193  [color=darkseagreen4, key=1, label=s2, style=dashed];
m41_181 -> m41_194  [color=darkseagreen4, key=1, label=s2, style=dashed];
m41_181 -> m41_195  [color=darkseagreen4, key=1, label=s2, style=dashed];
m41_196 -> m41_199  [color=darkseagreen4, key=1, label=ms1, style=dashed];
m41_168 -> m41_179  [color=darkseagreen4, key=1, label=ms, style=dashed];
m41_168 -> m41_199  [color=darkseagreen4, key=1, label=ms, style=dashed];
m41_203 -> m41_205  [color=darkseagreen4, key=1, label=l2, style=dashed];
m41_202 -> m41_204  [color=darkseagreen4, key=1, label=l1, style=dashed];
m41_568 -> m41_511  [color=darkseagreen4, key=1, label=b, style=dashed];
m41_569 -> m41_511  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m41_570 -> m41_511  [color=darkseagreen4, key=1, label=writer, style=dashed];
m41_567 -> m41_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Bson.BsonWriterTests", style=dashed];
m41_567 -> m41_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Bson.BsonWriterTests", style=dashed];
m41_567 -> m41_147  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Bson.BsonWriterTests", style=dashed];
m41_567 -> m41_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Bson.BsonWriterTests", style=dashed];
m42_595 -> m42_626  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_595 -> m42_606  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_595 -> m42_607  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_595 -> m42_608  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_595 -> m42_609  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_595 -> m42_610  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_595 -> m42_611  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_595 -> m42_612  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_595 -> m42_613  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_595 -> m42_614  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_595 -> m42_615  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_595 -> m42_616  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_595 -> m42_617  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_595 -> m42_618  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_595 -> m42_619  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_595 -> m42_620  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_595 -> m42_621  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_595 -> m42_624  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_173 -> m42_179  [color=darkseagreen4, key=1, label=o, style=dashed];
m42_174 -> m42_179  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m42_176 -> m42_180  [color=darkseagreen4, key=1, label=sw, style=dashed];
m42_177 -> m42_179  [color=darkseagreen4, key=1, label=writer, style=dashed];
m42_182 -> m42_184  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_105 -> m42_107  [color=darkseagreen4, key=1, label=o, style=dashed];
m42_105 -> m42_108  [color=darkseagreen4, key=1, label=o, style=dashed];
m42_105 -> m42_109  [color=darkseagreen4, key=1, label=o, style=dashed];
m42_105 -> m42_110  [color=darkseagreen4, key=1, label=o, style=dashed];
m42_105 -> m42_111  [color=darkseagreen4, key=1, label=o, style=dashed];
m42_113 -> m42_115  [color=darkseagreen4, key=1, label=a, style=dashed];
m42_113 -> m42_116  [color=darkseagreen4, key=1, label=a, style=dashed];
m42_135 -> m42_135  [color=darkseagreen4, key=1, label=p, style=dashed];
m42_201 -> m42_205  [color=green, key=1, label=XObject, style=dashed];
m42_201 -> m42_208  [color=green, key=1, label=XObject, style=dashed];
m42_201 -> m42_211  [color=green, key=1, label=XObject, style=dashed];
m42_201 -> m42_214  [color=green, key=1, label=XObject, style=dashed];
m42_201 -> m42_220  [color=green, key=1, label=XObject, style=dashed];
m42_201 -> m42_223  [color=green, key=1, label=XObject, style=dashed];
m42_201 -> m42_226  [color=green, key=1, label=XObject, style=dashed];
m42_204 -> m42_206  [color=darkseagreen4, key=1, label=o, style=dashed];
m42_204 -> m42_207  [color=darkseagreen4, key=1, label=o, style=dashed];
m42_204 -> m42_208  [color=darkseagreen4, key=1, label=o, style=dashed];
m42_204 -> m42_209  [color=darkseagreen4, key=1, label=o, style=dashed];
m42_205 -> m42_207  [color=green, key=1, label=element, style=dashed];
m42_210 -> m42_212  [color=darkseagreen4, key=1, label=a, style=dashed];
m42_211 -> m42_213  [color=green, key=1, label=pi, style=dashed];
m42_214 -> m42_216  [color=green, key=1, label=text, style=dashed];
m42_217 -> m42_219  [color=green, key=1, label=comment, style=dashed];
m42_218 -> m42_221  [color=darkseagreen4, key=1, label=o, style=dashed];
m42_218 -> m42_222  [color=darkseagreen4, key=1, label=o, style=dashed];
m42_218 -> m42_223  [color=darkseagreen4, key=1, label=o, style=dashed];
m42_220 -> m42_222  [color=green, key=1, label=attribute, style=dashed];
m42_223 -> m42_225  [color=green, key=1, label=type, style=dashed];
m42_171 -> m42_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_513 -> m42_548  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_513 -> m42_563  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_513 -> m42_542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_513 -> m42_545  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_513 -> m42_550  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_513 -> m42_551  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_513 -> m42_555  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_513 -> m42_565  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_546 -> m42_548  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m42_561 -> m42_563  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m42_553 -> m42_563  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_553 -> m42_555  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_553 -> m42_565  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_543 -> m42_555  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m42_543 -> m42_565  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m42_544 -> m42_565  [color=darkseagreen4, key=1, label=elementPrefix, style=dashed];
m42_554 -> m42_565  [color=darkseagreen4, key=1, label=elementPrefix, style=dashed];
m42_37 -> m42_46  [color=darkseagreen4, key=1, label=o, style=dashed];
m42_38 -> m42_40  [color=darkseagreen4, key=1, label=properties, style=dashed];
m42_38 -> m42_41  [color=darkseagreen4, key=1, label=properties, style=dashed];
m42_38 -> m42_42  [color=darkseagreen4, key=1, label=properties, style=dashed];
m42_46 -> m42_46  [color=darkseagreen4, key=1, label=p, style=dashed];
m42_42 -> m42_44  [color=darkseagreen4, key=1, label=list, style=dashed];
m42_42 -> m42_45  [color=darkseagreen4, key=1, label=list, style=dashed];
m42_47 -> m42_49  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m42_119 -> m42_122  [color=darkseagreen4, key=1, label=o, style=dashed];
m42_248 -> m42_250  [color=darkseagreen4, key=1, label=result, style=dashed];
m42_348 -> m42_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_348 -> m42_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_348 -> m42_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_348 -> m42_369  [color=darkseagreen4, key=1, label=bool, style=dashed];
m42_348 -> m42_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_348 -> m42_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_348 -> m42_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_353 -> m42_355  [color=darkseagreen4, key=1, label=nodeName, style=dashed];
m42_353 -> m42_357  [color=darkseagreen4, key=1, label=nodeName, style=dashed];
m42_352 -> m42_358  [color=darkseagreen4, key=1, label=childNode, style=dashed];
m42_361 -> m42_367  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m42_361 -> m42_374  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m42_361 -> m42_363  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m42_361 -> m42_373  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m42_372 -> m42_374  [color=darkseagreen4, key=1, label=i, style=dashed];
m42_372 -> m42_375  [color=darkseagreen4, key=1, label=i, style=dashed];
m42_375 -> m42_375  [color=darkseagreen4, key=1, label=i, style=dashed];
m42_349 -> m42_355  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m42_349 -> m42_357  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m42_349 -> m42_360  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m42_350 -> m42_359  [color=darkseagreen4, key=1, label=i, style=dashed];
m42_359 -> m42_359  [color=darkseagreen4, key=1, label=i, style=dashed];
m42_356 -> m42_358  [color=darkseagreen4, key=1, label=nodes, style=dashed];
m42_368 -> m42_370  [color=darkseagreen4, key=1, label=elementNames, style=dashed];
m42_150 -> m42_152  [color=darkseagreen4, key=1, label=o, style=dashed];
m42_150 -> m42_153  [color=darkseagreen4, key=1, label=o, style=dashed];
m42_150 -> m42_154  [color=darkseagreen4, key=1, label=o, style=dashed];
m42_150 -> m42_155  [color=darkseagreen4, key=1, label=o, style=dashed];
m42_11 -> m42_13  [color=darkseagreen4, key=1, label=text, style=dashed];
m42_78 -> m42_81  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m42_78 -> m42_83  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m42_78 -> m42_85  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m42_78 -> m42_86  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m42_69 -> m42_71  [color=darkseagreen4, key=1, label=resultObjects, style=dashed];
m42_69 -> m42_72  [color=darkseagreen4, key=1, label=resultObjects, style=dashed];
m42_186 -> m42_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_187 -> m42_189  [color=darkseagreen4, key=1, label=declarationWrapper, style=dashed];
m42_187 -> m42_190  [color=darkseagreen4, key=1, label=declarationWrapper, style=dashed];
m42_192 -> m42_196  [color=darkseagreen4, key=1, label=testDates, style=dashed];
m42_539 -> m42_750  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_539 -> m42_736  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_539 -> m42_737  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_539 -> m42_739  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_539 -> m42_742  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_539 -> m42_745  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_539 -> m42_748  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_539 -> m42_752  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_60 -> m42_62  [color=darkseagreen4, key=1, label=list, style=dashed];
m42_537 -> m42_726  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_537 -> m42_715  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_537 -> m42_716  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_537 -> m42_718  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_537 -> m42_721  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_537 -> m42_724  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_537 -> m42_728  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_537 -> m42_730  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_10 -> m42_13  [color=darkseagreen4, key=1, label=array, style=dashed];
m42_10 -> m42_14  [color=darkseagreen4, key=1, label=array, style=dashed];
m42_193 -> m42_196  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m42_193 -> m42_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_195 -> m42_197  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m42_517 -> m42_520  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_517 -> m42_522  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_517 -> m42_524  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_517 -> m42_526  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_517 -> m42_527  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_517 -> m42_528  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_517 -> m42_529  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_517 -> m42_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_517 -> m42_531  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_517 -> m42_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_517 -> m42_534  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_302 -> m42_305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_302 -> m42_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_303 -> m42_305  [color=darkseagreen4, key=1, label=prefix, style=dashed];
m42_88 -> m42_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_340 -> m42_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_342 -> m42_344  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m42_74 -> m42_76  [color=darkseagreen4, key=1, label=resultUrls, style=dashed];
m42_311 -> m42_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_311 -> m42_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_311 -> m42_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_311 -> m42_328  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_311 -> m42_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_311 -> m42_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_311 -> m42_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_311 -> m42_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_311 -> m42_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_476 -> m42_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_476 -> m42_482  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m42_476 -> m42_483  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m42_476 -> m42_488  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m42_476 -> m42_489  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m42_476 -> m42_496  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m42_476 -> m42_497  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_476 -> m42_500  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_476 -> m42_501  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_476 -> m42_503  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m42_486 -> m42_495  [color=darkseagreen4, key=1, label=document, style=dashed];
m42_486 -> m42_500  [color=darkseagreen4, key=1, label=document, style=dashed];
m42_486 -> m42_502  [color=darkseagreen4, key=1, label=document, style=dashed];
m42_486 -> m42_507  [color=darkseagreen4, key=1, label=document, style=dashed];
m42_480 -> m42_502  [color=darkseagreen4, key=1, label=document, style=dashed];
m42_480 -> m42_495  [color=darkseagreen4, key=1, label=document, style=dashed];
m42_480 -> m42_500  [color=darkseagreen4, key=1, label=document, style=dashed];
m42_480 -> m42_507  [color=darkseagreen4, key=1, label=document, style=dashed];
m42_479 -> m42_502  [color=darkseagreen4, key=1, label=manager, style=dashed];
m42_479 -> m42_500  [color=darkseagreen4, key=1, label=manager, style=dashed];
m42_481 -> m42_502  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m42_481 -> m42_495  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m42_481 -> m42_500  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m42_487 -> m42_502  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m42_487 -> m42_495  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m42_487 -> m42_500  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m42_504 -> m42_506  [color=darkseagreen4, key=1, label=element, style=dashed];
m42_493 -> m42_502  [color=darkseagreen4, key=1, label=document, style=dashed];
m42_493 -> m42_495  [color=darkseagreen4, key=1, label=document, style=dashed];
m42_493 -> m42_500  [color=darkseagreen4, key=1, label=document, style=dashed];
m42_493 -> m42_507  [color=darkseagreen4, key=1, label=document, style=dashed];
m42_494 -> m42_502  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m42_494 -> m42_500  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m42_573 -> m42_588  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_573 -> m42_575  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_573 -> m42_576  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m42_573 -> m42_581  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_573 -> m42_584  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m42_573 -> m42_585  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_573 -> m42_586  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_573 -> m42_587  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m42_573 -> m42_589  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m42_573 -> m42_590  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m42_574 -> m42_588  [color=darkseagreen4, key=1, label=element, style=dashed];
m42_574 -> m42_580  [color=darkseagreen4, key=1, label=element, style=dashed];
m42_574 -> m42_584  [color=darkseagreen4, key=1, label=element, style=dashed];
m42_582 -> m42_584  [color=darkseagreen4, key=1, label=text, style=dashed];
m42_540 -> m42_636  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_540 -> m42_638  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_540 -> m42_639  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_540 -> m42_642  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m42_540 -> m42_646  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_540 -> m42_647  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m42_635 -> m42_639  [color=darkseagreen4, key=1, label=nestedArrayElement, style=dashed];
m42_635 -> m42_642  [color=darkseagreen4, key=1, label=nestedArrayElement, style=dashed];
m42_635 -> m42_644  [color=darkseagreen4, key=1, label=nestedArrayElement, style=dashed];
m42_645 -> m42_647  [color=darkseagreen4, key=1, label=element, style=dashed];
m42_640 -> m42_643  [color=darkseagreen4, key=1, label=count, style=dashed];
m42_640 -> m42_640  [color=darkseagreen4, key=1, label=count, style=dashed];
m42_637 -> m42_643  [color=darkseagreen4, key=1, label=count, style=dashed];
m42_637 -> m42_640  [color=darkseagreen4, key=1, label=count, style=dashed];
m42_137 -> m42_137  [color=darkseagreen4, key=1, label=p, style=dashed];
m42_708 -> m42_789  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_708 -> m42_792  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_795 -> m42_797  [color=darkseagreen4, key=1, label="out string", style=dashed];
m42_12 -> m42_14  [color=darkseagreen4, key=1, label=date, style=dashed];
m42_805 -> m42_808  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m42_53 -> m42_55  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m42_649 -> m42_651  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
m42_649 -> m42_652  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
m42_649 -> m42_653  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
m42_122 -> m42_124  [color=darkseagreen4, key=1, label=a, style=dashed];
m42_572 -> m42_598  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_572 -> m42_602  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_92 -> m42_94  [color=darkseagreen4, key=1, label=o, style=dashed];
m42_255 -> m42_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_255 -> m42_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_255 -> m42_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_256 -> m42_258  [color=darkseagreen4, key=1, label=node, style=dashed];
m42_256 -> m42_261  [color=darkseagreen4, key=1, label=node, style=dashed];
m42_257 -> m42_261  [color=darkseagreen4, key=1, label=manager, style=dashed];
m42_265 -> m42_278  [color=darkseagreen4, key=1, label=object, style=dashed];
m42_272 -> m42_274  [color=green, key=1, label=xObject, style=dashed];
m42_275 -> m42_277  [color=green, key=1, label=node, style=dashed];
m42_68 -> m42_73  [color=darkseagreen4, key=1, label=o, style=dashed];
m42_464 -> m42_472  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_270 -> m42_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_270 -> m42_390  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_391  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m42_270 -> m42_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_270 -> m42_396  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m42_270 -> m42_397  [color=darkseagreen4, key=1, label=bool, style=dashed];
m42_270 -> m42_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_270 -> m42_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_401  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_270 -> m42_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_270 -> m42_409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_412  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_413  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m42_270 -> m42_415  [color=darkseagreen4, key=1, label=bool, style=dashed];
m42_270 -> m42_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_423  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_270 -> m42_425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_270 -> m42_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_270 -> m42_428  [color=darkseagreen4, key=1, label=bool, style=dashed];
m42_270 -> m42_429  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_433  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_436  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_447  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_448  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_451  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_453  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_454  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_456  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_457  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_459  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_461  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m42_270 -> m42_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_432 -> m42_435  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m42_432 -> m42_437  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m42_432 -> m42_438  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m42_432 -> m42_440  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m42_432 -> m42_441  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m42_432 -> m42_443  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m42_446 -> m42_449  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m42_446 -> m42_451  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m42_446 -> m42_452  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m42_446 -> m42_454  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m42_446 -> m42_455  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m42_446 -> m42_457  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m42_446 -> m42_458  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m42_446 -> m42_460  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m42_407 -> m42_409  [color=darkseagreen4, key=1, label=i, style=dashed];
m42_407 -> m42_410  [color=darkseagreen4, key=1, label=i, style=dashed];
m42_410 -> m42_410  [color=darkseagreen4, key=1, label=i, style=dashed];
m42_394 -> m42_396  [color=darkseagreen4, key=1, label=namespacePrefix, style=dashed];
m42_268 -> m42_292  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m42_268 -> m42_295  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m42_282 -> m42_286  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m42_282 -> m42_288  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m42_282 -> m42_289  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m42_282 -> m42_290  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m42_282 -> m42_291  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m42_284 -> m42_288  [color=darkseagreen4, key=1, label=parent, style=dashed];
m42_291 -> m42_293  [color=darkseagreen4, key=1, label=parentElement, style=dashed];
m42_293 -> m42_295  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m42_287 -> m42_289  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m42_287 -> m42_291  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m42_287 -> m42_290  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m42_568 -> m42_695  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_568 -> m42_705  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_568 -> m42_658  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_568 -> m42_659  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_568 -> m42_660  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_568 -> m42_669  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_568 -> m42_674  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m42_568 -> m42_685  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m42_568 -> m42_689  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m42_568 -> m42_693  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_568 -> m42_694  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_670 -> m42_674  [color=darkseagreen4, key=1, label=attributeValue, style=dashed];
m42_655 -> m42_671  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m42_655 -> m42_688  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m42_655 -> m42_697  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m42_655 -> m42_706  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m42_682 -> m42_697  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
m42_668 -> m42_673  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m42_668 -> m42_671  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m42_668 -> m42_676  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m42_668 -> m42_690  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m42_692 -> m42_697  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m42_664 -> m42_666  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m42_687 -> m42_689  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
m42_687 -> m42_697  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
m42_656 -> m42_659  [color=darkseagreen4, key=1, label=finishedAttributes, style=dashed];
m42_657 -> m42_659  [color=darkseagreen4, key=1, label=finishedElement, style=dashed];
m42_515 -> m42_762  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_515 -> m42_761  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m42_515 -> m42_764  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_515 -> m42_765  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_515 -> m42_767  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_515 -> m42_768  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_515 -> m42_771  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m42_515 -> m42_774  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m42_515 -> m42_775  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_515 -> m42_778  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_515 -> m42_779  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_515 -> m42_781  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_515 -> m42_785  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_515 -> m42_786  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m42_763 -> m42_768  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m42_763 -> m42_773  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m42_763 -> m42_775  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m42_777 -> m42_779  [color=darkseagreen4, key=1, label=constructorName, style=dashed];
m42_772 -> m42_774  [color=darkseagreen4, key=1, label=element, style=dashed];
m42_766 -> m42_770  [color=darkseagreen4, key=1, label=count, style=dashed];
m42_766 -> m42_769  [color=darkseagreen4, key=1, label=count, style=dashed];
m42_769 -> m42_770  [color=darkseagreen4, key=1, label=count, style=dashed];
m42_769 -> m42_769  [color=darkseagreen4, key=1, label=count, style=dashed];
m42_823 -> m42_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_588  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_768  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_774  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_775  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_779  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_500  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_328  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_390  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_429  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_433  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_447  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_499  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_528  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_534  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_555  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_565  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_639  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_641  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_642  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_643  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_647  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_673  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_823 -> m42_770  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m42_813 -> m42_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlElementWrapper", style=dashed];
m42_813 -> m42_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlElementWrapper", style=dashed];
m42_814 -> m42_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDeclarationWrapper", style=dashed];
m42_815 -> m42_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper", style=dashed];
m42_816 -> m42_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m42_816 -> m42_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m42_812 -> m42_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m42_812 -> m42_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m42_812 -> m42_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m42_812 -> m42_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m42_812 -> m42_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m42_812 -> m42_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m42_812 -> m42_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m42_812 -> m42_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m42_812 -> m42_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m42_819 -> m42_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XDocumentWrapper", style=dashed];
m42_819 -> m42_189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XDocumentWrapper", style=dashed];
m42_822 -> m42_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XElementWrapper", style=dashed];
m42_822 -> m42_253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XElementWrapper", style=dashed];
m42_820 -> m42_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XContainerWrapper", style=dashed];
m42_817 -> m42_127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XDeclarationWrapper", style=dashed];
m43_446 -> m43_448  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m43_798 -> m43_800  [color=darkseagreen4, key=1, label=dxml, style=dashed];
m43_749 -> m43_753  [color=darkseagreen4, key=1, label=json, style=dashed];
m43_665 -> m43_667  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_666 -> m43_670  [color=darkseagreen4, key=1, label=doc, style=dashed];
m43_69 -> m43_73  [color=darkseagreen4, key=1, label=json1, style=dashed];
m43_136 -> m43_138  [color=darkseagreen4, key=1, label=xml, style=dashed];
m43_541 -> m43_547  [color=darkseagreen4, key=1, label=json, style=dashed];
m43_545 -> m43_547  [color=darkseagreen4, key=1, label=newJson, style=dashed];
m43_236 -> m43_238  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m43_233 -> m43_235  [color=darkseagreen4, key=1, label=xml, style=dashed];
m43_677 -> m43_679  [color=darkseagreen4, key=1, label=json, style=dashed];
m43_681 -> m43_683  [color=darkseagreen4, key=1, label=xaml2, style=dashed];
m43_650 -> m43_652  [color=darkseagreen4, key=1, label=ms, style=dashed];
m43_125 -> m43_127  [color=darkseagreen4, key=1, label=xml, style=dashed];
m43_125 -> m43_131  [color=darkseagreen4, key=1, label=xml, style=dashed];
m43_784 -> m43_786  [color=darkseagreen4, key=1, label=dxml, style=dashed];
m43_782 -> m43_785  [color=darkseagreen4, key=1, label=dt, style=dashed];
m43_484 -> m43_486  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m43_481 -> m43_483  [color=darkseagreen4, key=1, label=xml, style=dashed];
m43_2 -> m43_9  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_621 -> m43_623  [color=darkseagreen4, key=1, label=xml, style=dashed];
m43_573 -> m43_578  [color=darkseagreen4, key=1, label=json, style=dashed];
m43_387 -> m43_389  [color=green, key=1, label="lambda expression", style=dashed];
m43_367 -> m43_372  [color=darkseagreen4, key=1, label=doc, style=dashed];
m43_366 -> m43_368  [color=darkseagreen4, key=1, label=xml, style=dashed];
m43_299 -> m43_304  [color=darkseagreen4, key=1, label=expected, style=dashed];
m43_299 -> m43_309  [color=darkseagreen4, key=1, label=expected, style=dashed];
m43_298 -> m43_306  [color=darkseagreen4, key=1, label=xml, style=dashed];
m43_298 -> m43_302  [color=darkseagreen4, key=1, label=xml, style=dashed];
m43_298 -> m43_311  [color=darkseagreen4, key=1, label=xml, style=dashed];
m43_0 -> m43_4  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m43_0 -> m43_7  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m43_1 -> m43_12  [color=darkseagreen4, key=1, label=json, style=dashed];
m43_1 -> m43_13  [color=darkseagreen4, key=1, label=json, style=dashed];
m43_348 -> m43_353  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m43_351 -> m43_354  [color=darkseagreen4, key=1, label=sw, style=dashed];
m43_313 -> m43_327  [color=darkseagreen4, key=1, label=XmlDocument, style=dashed];
m43_325 -> m43_328  [color=darkseagreen4, key=1, label=builder, style=dashed];
m43_359 -> m43_363  [color=darkseagreen4, key=1, label=doc, style=dashed];
m43_358 -> m43_360  [color=darkseagreen4, key=1, label=xml, style=dashed];
m43_405 -> m43_407  [color=darkseagreen4, key=1, label=arrayJsonText, style=dashed];
m43_411 -> m43_413  [color=darkseagreen4, key=1, label=arrayJsonText, style=dashed];
m43_417 -> m43_419  [color=darkseagreen4, key=1, label=arrayJsonText, style=dashed];
m43_402 -> m43_404  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m43_408 -> m43_410  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m43_414 -> m43_416  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m43_457 -> m43_463  [color=darkseagreen4, key=1, label=json, style=dashed];
m43_582 -> m43_584  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_581 -> m43_585  [color=darkseagreen4, key=1, label=json, style=dashed];
m43_492 -> m43_498  [color=darkseagreen4, key=1, label=doc, style=dashed];
m43_491 -> m43_493  [color=darkseagreen4, key=1, label=xml, style=dashed];
m43_692 -> m43_695  [color=darkseagreen4, key=1, label=node, style=dashed];
m43_689 -> m43_691  [color=darkseagreen4, key=1, label=json, style=dashed];
m43_694 -> m43_696  [color=darkseagreen4, key=1, label=writer, style=dashed];
m43_697 -> m43_699  [color=darkseagreen4, key=1, label=xaml2, style=dashed];
m43_686 -> m43_688  [color=darkseagreen4, key=1, label=xaml, style=dashed];
m43_114 -> m43_119  [color=darkseagreen4, key=1, label=xml, style=dashed];
m43_169 -> m43_176  [color=darkseagreen4, key=1, label=x, style=dashed];
m43_241 -> m43_261  [color=darkseagreen4, key=1, label=doc, style=dashed];
m43_241 -> m43_270  [color=darkseagreen4, key=1, label=doc, style=dashed];
m43_254 -> m43_268  [color=darkseagreen4, key=1, label=instruction, style=dashed];
m43_257 -> m43_269  [color=darkseagreen4, key=1, label=cDataSection, style=dashed];
m43_260 -> m43_264  [color=darkseagreen4, key=1, label=element, style=dashed];
m43_260 -> m43_267  [color=darkseagreen4, key=1, label=element, style=dashed];
m43_260 -> m43_268  [color=darkseagreen4, key=1, label=element, style=dashed];
m43_260 -> m43_269  [color=darkseagreen4, key=1, label=element, style=dashed];
m43_260 -> m43_270  [color=darkseagreen4, key=1, label=element, style=dashed];
m43_262 -> m43_264  [color=darkseagreen4, key=1, label=aa, style=dashed];
m43_265 -> m43_267  [color=darkseagreen4, key=1, label=aa, style=dashed];
m43_243 -> m43_245  [color=darkseagreen4, key=1, label=xml, style=dashed];
m43_376 -> m43_378  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m43_430 -> m43_432  [color=green, key=1, label="lambda expression", style=dashed];
m43_429 -> m43_433  [color=darkseagreen4, key=1, label=json, style=dashed];
m43_381 -> m43_383  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_707 -> m43_712  [color=darkseagreen4, key=1, label=xmlString, style=dashed];
m43_777 -> m43_779  [color=darkseagreen4, key=1, label=dxml, style=dashed];
m43_17 -> m43_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JRaw", style=dashed];
m43_79 -> m43_81  [color=darkseagreen4, key=1, label=doc, style=dashed];
m43_78 -> m43_83  [color=darkseagreen4, key=1, label=json1, style=dashed];
m43_792 -> m43_794  [color=darkseagreen4, key=1, label=dxml, style=dashed];
m43_717 -> m43_722  [color=darkseagreen4, key=1, label=xml, style=dashed];
m43_717 -> m43_720  [color=darkseagreen4, key=1, label=xml, style=dashed];
m43_717 -> m43_721  [color=darkseagreen4, key=1, label=xml, style=dashed];
m43_719 -> m43_722  [color=darkseagreen4, key=1, label=w2, style=dashed];
m43_719 -> m43_721  [color=darkseagreen4, key=1, label=w2, style=dashed];
m43_4 -> m43_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m43_5 -> m43_8  [color=darkseagreen4, key=1, label=sw, style=dashed];
m43_521 -> m43_523  [color=darkseagreen4, key=1, label=xml, style=dashed];
m43_524 -> m43_526  [color=darkseagreen4, key=1, label=xmlJson, style=dashed];
m43_515 -> m43_517  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m43_805 -> m43_807  [color=darkseagreen4, key=1, label=dxml, style=dashed];
m43_803 -> m43_806  [color=darkseagreen4, key=1, label=dt, style=dashed];
m43_27 -> m43_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m43_34 -> m43_43  [color=darkseagreen4, key=1, label=node, style=dashed];
m43_39 -> m43_42  [color=darkseagreen4, key=1, label=linqXmlText, style=dashed];
m43_35 -> m43_42  [color=darkseagreen4, key=1, label=xmlText, style=dashed];
m43_38 -> m43_40  [color=darkseagreen4, key=1, label=d, style=dashed];
m43_757 -> m43_759  [color=green, key=1, label="lambda expression", style=dashed];
m43_756 -> m43_760  [color=darkseagreen4, key=1, label=json, style=dashed];
m43_771 -> m43_773  [color=darkseagreen4, key=1, label=dxml, style=dashed];
m43_394 -> m43_396  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m43_397 -> m43_399  [color=darkseagreen4, key=1, label=json, style=dashed];
m43_314 -> m43_319  [color=darkseagreen4, key=1, label=XDocument, style=dashed];
m43_317 -> m43_320  [color=darkseagreen4, key=1, label=builder, style=dashed];
m43_734 -> m43_736  [color=darkseagreen4, key=1, label=xmlString, style=dashed];
m43_292 -> m43_294  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m43_559 -> m43_561  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_558 -> m43_562  [color=darkseagreen4, key=1, label=json, style=dashed];
m43_54 -> m43_59  [color=darkseagreen4, key=1, label=sw, style=dashed];
m43_55 -> m43_57  [color=darkseagreen4, key=1, label=writer, style=dashed];
m43_55 -> m43_58  [color=darkseagreen4, key=1, label=writer, style=dashed];
m43_53 -> m43_56  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_53 -> m43_57  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_630 -> m43_632  [color=darkseagreen4, key=1, label=xml, style=dashed];
m43_155 -> m43_162  [color=darkseagreen4, key=1, label=x, style=dashed];
m43_763 -> m43_765  [color=darkseagreen4, key=1, label=xmlString, style=dashed];
m43_218 -> m43_221  [color=darkseagreen4, key=1, label=doc, style=dashed];
m43_614 -> m43_616  [color=darkseagreen4, key=1, label=xml, style=dashed];
m43_334 -> m43_336  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m43_332 -> m43_338  [color=darkseagreen4, key=1, label=doc, style=dashed];
m43_331 -> m43_333  [color=darkseagreen4, key=1, label=xml, style=dashed];
m43_532 -> m43_537  [color=darkseagreen4, key=1, label=json, style=dashed];
m43_423 -> m43_425  [color=green, key=1, label="lambda expression", style=dashed];
m43_422 -> m43_426  [color=darkseagreen4, key=1, label=json, style=dashed];
m43_226 -> m43_229  [color=green, key=1, label="lambda expression", style=dashed];
m43_225 -> m43_230  [color=darkseagreen4, key=1, label=json, style=dashed];
m43_343 -> m43_345  [color=darkseagreen4, key=1, label=expected, style=dashed];
m43_850 -> m43_230  [color=darkseagreen4, key=1, label=json, style=dashed];
m43_849 -> m43_582  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m43_849 -> m43_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m43_849 -> m43_448  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m43_849 -> m43_450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m43_849 -> m43_459  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m43_849 -> m43_461  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m43_849 -> m43_585  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m43_849 -> m43_595  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m43_849 -> m43_607  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m43_851 -> m43_426  [color=darkseagreen4, key=1, label=json, style=dashed];
m43_852 -> m43_433  [color=darkseagreen4, key=1, label=json, style=dashed];
m43_855 -> m43_760  [color=darkseagreen4, key=1, label=json, style=dashed];
m43_853 -> m43_562  [color=darkseagreen4, key=1, label=json, style=dashed];
m43_854 -> m43_585  [color=darkseagreen4, key=1, label=json, style=dashed];
}
